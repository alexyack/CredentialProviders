byte fn10008AF0(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(8)
fn10008AF0_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(8)

l10008AF0:
	word32 eax_37
	word32 eax_24 = Mem0[ecx:word32]
	word32 ebp_112 = fp - 0x00000004
	word32 eax_11 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	word32 esp_113 = fp - 0x0000001C
	word32 edi_107 = ecx
	word32 esi_26 = Mem0[eax_24 + 0x00000010:word32]
	branch esi_26 != 0x10009680 l1000CE25
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE25:
	word32 esp_431
	word32 edi_432
	word32 ebp_433
	byte SCZO_434
	word32 eax_435
	byte SZO_436
	byte C_437
	word32 ebx_438
	word32 esi_439
	word32 ecx_440
	byte Z_441
	byte al_442
	word32 edx_443
	selector es_444
	selector ds_445
	call Mem0[0x10025410:word32] (retsize: 4; depth: 36)
		uses: al_25,C,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_429,eax_24,ebp_7,ebx,ecx_430,edi_22,edx,es,esi_26,esp_428,SCZO_27,SZO,Z_28
		defs: al_442,C_437,ds_445,eax_435,ebp_433,ebx_438,ecx_440,edi_432,edx_443,es_444,esi_439,esp_431,SCZO_434,SZO_436,Z_441
	byte SCZO_449
	byte SZO_451
	byte C_452
	word32 ebx_453
	word32 esi_454
	word32 ecx_455
	byte Z_456
	byte al_457
	call esi_439 (retsize: 4; depth: 4)
		uses: al_442,C_437,ds_445,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_429,eax_435,ebp_433,ebx_438,ecx_440,edi_432,edx_443,es_444,esi_439,esp_431,SCZO_434,SZO_436,Z_441
		defs: al_457,C_452,ds_460,eax_450,ebp_448,ebx_453,ecx_455,edi_447,edx_458,es_459,esi_454,esp_446,SCZO_449,SZO_451,Z_456
// DataOut: cs ds eax ebp ecx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000001C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B1B:
	eax_37 = 0x1001F1FC
// DataOut: cs ds eax ebp ecx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000001C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B20:
	word32 ebx_181
	word32 eax_41 = Mem0[edi_107:word32]
	word32 esi_177 = eax_37 + 0x00000004
	word32 ebx_43 = Mem0[eax_41 + 0x00000018:word32]
	branch ebx_43 != 0x10009690 l1000CE35
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE35:
	word32 esp_386 = esp_113 - 0x00000004
	Mem387[esp_386:word32] = edi_107
	word32 esp_389
	word32 edi_390
	word32 ebp_391
	byte SCZO_392
	word32 eax_393
	byte SZO_394
	byte C_395
	word32 ebx_396
	word32 esi_397
	word32 ecx_398
	byte Z_399
	byte al_400
	word32 edx_401
	selector es_402
	selector ds_403
	call Mem387[0x10025410:word32] (retsize: 4; depth: 4)
		uses: al_42,C_36,ds_30,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_41,ebp_38,ebx_43,ecx_388,edi_33,edx_32,es_31,esi_40,esp_386,SCZO_44,SZO_35,Z_45
		defs: al_400,C_395,ds_403,eax_393,ebp_391,ebx_396,ecx_398,edi_390,edx_401,es_402,esi_397,esp_389,SCZO_392,SZO_394,Z_399
	byte SCZO_407
	word32 eax_408
	byte SZO_409
	byte C_410
	word32 ebx_411
	word32 ecx_413
	byte Z_414
	byte al_415
	call ebx_396 (retsize: 4; depth: 4)
		uses: al_400,C_395,ds_403,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_393,ebp_391,ebx_396,ecx_398,edi_390,edx_401,es_402,esi_397,esp_389,SCZO_392,SZO_394,Z_399
		defs: al_415,C_410,ds_418,eax_408,ebp_406,ebx_411,ecx_413,edi_405,edx_416,es_417,esi_412,esp_404,SCZO_407,SZO_409,Z_414
	ebx_181 = eax_408
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B34:
	ebx_181 = 0x1001F20C
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B39:
	word32 eax_127
	word32 eax_100
	branch esi_177 >=u ebx_181 l10008B7A
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B3D:
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B40:
	branch Mem0[esi_177:word32] == 0x00000000 l10008B73
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B45:
	word32 eax_206 = Mem0[Mem0[edi_107:word32] + 0x0000000C:word32]
	branch eax_206 != 0x100096A0 l1000CE47
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE47:
	word32 esp_352 = esp_113 - 0x00000004
	Mem353[esp_352:word32] = edi_107
	word32 esp_355
	word32 edi_356
	word32 ebp_357
	byte SCZO_358
	word32 eax_359
	byte SZO_360
	byte C_361
	word32 ebx_362
	word32 esi_363
	word32 ecx_364
	byte Z_365
	byte al_366
	word32 edx_367
	selector es_368
	selector ds_369
	call Mem353[0x10025410:word32] (retsize: 4; depth: 4)
		uses: al_207,C_180,ds_173,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_208,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_206,ebp_184,ebx_181,ecx_354,edi_176,edx_175,es_174,esi_177,esp_352,SCZO_209,SZO_179,Z_210
		defs: al_366,C_361,ds_369,eax_359,ebp_357,ebx_362,ecx_364,edi_356,edx_367,es_368,esi_363,esp_355,SCZO_358,SZO_360,Z_365
	byte SCZO_373
	byte SZO_375
	byte C_376
	word32 ecx_379
	byte Z_380
	byte al_381
	call eax_206 (retsize: 4; depth: 4)
		uses: al_366,C_361,ds_369,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_208,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_359,ebp_357,ebx_362,ecx_364,edi_356,edx_367,es_368,esi_363,esp_355,SCZO_358,SZO_360,Z_365
		defs: al_381,C_376,ds_384,eax_374,ebp_372,ebx_377,ecx_379,edi_371,edx_382,es_383,esi_378,esp_370,SCZO_373,SZO_375,Z_380
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B58:
	eax_127 = Mem0[0x10024624:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B5D:
	branch eax_127 != 0x00000000 l1000CE58
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE58:
	branch bArg04 == 0x00 l10008BA9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE62:
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B65:
	branch Mem0[Mem0[Mem0[esi_177:word32] + 0x0000000C:word32]:word32] != 0x00000000 l1000CE67
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE67:
	word32 esp_231 = esp_113 - 0x00000004
	Mem232[esp_231:word32] = edi_107
	word32 esp_235
	word32 edi_236
	word32 ebp_237
	byte SCZO_238
	word32 eax_239
	byte SZO_240
	byte C_241
	word32 ebx_242
	word32 esi_243
	word32 ecx_244
	byte Z_245
	byte al_246
	word32 edx_247
	selector es_248
	selector ds_249
	call Mem232[0x10025410:word32] (retsize: 4; depth: 4)
		uses: al_220,C_225,ds_211,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_208,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_230,ebp_221,ebx_218,ecx_234,edi_233,edx_213,es_212,esi_216,esp_231,SCZO_228,SZO_223,Z_229
		defs: al_246,C_241,ds_249,eax_239,ebp_237,ebx_242,ecx_244,edi_236,edx_247,es_248,esi_243,esp_235,SCZO_238,SZO_240,Z_245
	word32 esp_250
	word32 edi_251
	byte SCZO_253
	word32 eax_254
	byte SZO_255
	byte C_256
	word32 ecx_259
	byte Z_260
	byte al_261
	call edi_236 (retsize: 4; depth: 4)
		uses: al_246,C_241,ds_249,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_208,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_239,ebp_237,ebx_242,ecx_244,edi_236,edx_247,es_248,esi_243,esp_235,SCZO_238,SZO_240,Z_245
		defs: al_261,C_256,ds_264,eax_254,ebp_252,ebx_257,ecx_259,edi_251,edx_262,es_263,esi_258,esp_250,SCZO_253,SZO_255,Z_260
	Mem267[esp_250 - 0x00000004:word32] = eax_254
	AcquireSRWLockExclusive(Mem267[esp_250 - 0x00000004:PSRWLOCK])
	word32 eax_270 = Mem267[Mem267[esi_177:word32] + 0x0000000C:word32]
	esp_113 = esp_250
	word32 ecx_272 = Mem267[eax_270:word32]
	branch ecx_272 != 0x00000000 l1000CE9B
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Stack +0004(8)

l1000CE9B:
	Mem298[eax_270:word32] = 0x00000000
	branch eax_254 == 0x00000000 l1000CEAF
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Stack +0004(8)

l1000CEA5:
	Mem344[esp_250 - 0x00000004:word32] = eax_254
	ReleaseSRWLockExclusive(Mem344[esp_250 - 0x00000004:PSRWLOCK])
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CEAF:
	Mem305[esp_250 - 0x00000004:word32] = ecx_272
	word32 eax_306 = DecodePointer(Mem305[esp_250 - 0x00000004:PVOID])
	Mem309[esp_250 - 0x00000004:word32] = eax_306
	word32 esp_313
	word32 edi_314
	word32 ebp_315
	byte SCZO_316
	word32 eax_317
	byte SZO_318
	byte C_319
	word32 ebx_320
	word32 esi_321
	word32 ecx_322
	byte Z_323
	byte al_324
	word32 edx_325
	selector es_326
	selector ds_327
	call Mem309[0x10025410:word32] (retsize: 4; depth: 4)
		uses: al_271,C_301,ds_264,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_273,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_306,ebp_252,ebx_257,ecx_312,edi_311,edx_262,es_263,esi_258,esp_308,SCZO_253,SZO_299,Z_300
		defs: al_324,C_319,ds_327,eax_317,ebp_315,ebx_320,ecx_322,edi_314,edx_325,es_326,esi_321,esp_313,SCZO_316,SZO_318,Z_323
	word32 edi_329
	byte SCZO_331
	word32 eax_332
	byte SZO_333
	byte C_334
	word32 ecx_337
	byte Z_338
	byte al_339
	call edi_314 (retsize: 4; depth: 4)
		uses: al_324,C_319,ds_327,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_273,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_317,ebp_315,ebx_320,ecx_322,edi_314,edx_325,es_326,esi_321,esp_313,SCZO_316,SZO_318,Z_323
		defs: al_339,C_334,ds_342,eax_332,ebp_330,ebx_335,ecx_337,edi_329,edx_340,es_341,esi_336,esp_328,SCZO_331,SZO_333,Z_338
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE8E:
	branch eax_254 == 0x00000000 l1000CEC6
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CE92:
	Mem296[esp_250 - 0x00000004:word32] = eax_254
	ReleaseSRWLockExclusive(Mem296[esp_250 - 0x00000004:PSRWLOCK])
	esp_113 = esp_250
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l1000CEC6:
	edi_107 = ecx
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B73:
	esi_177 = esi_177 + 0x00000004
	branch esi_177 <u ebx_181 l10008B40
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0004(8)

l10008B7A:
	word32 eax_114 = Mem0[edi_107:word32]
	word32 esi_116 = Mem0[eax_114 + 0x0000000C:word32]
	branch esi_116 != 0x100096A0 l1000CECE
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000CECE:
	word32 esp_138 = esp_113 - 0x00000004
	Mem139[esp_138:word32] = edi_107
	word32 esp_141
	word32 edi_142
	word32 ebp_143
	byte SCZO_144
	word32 eax_145
	byte SZO_146
	byte C_147
	word32 ebx_148
	word32 esi_149
	word32 ecx_150
	byte Z_151
	byte al_152
	word32 edx_153
	selector es_154
	selector ds_155
	call Mem139[0x10025410:word32] (retsize: 4; depth: 4)
		uses: al_115,C_110,ds_104,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_103,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_114,ebp_112,ebx_111,ecx_140,edi_107,edx_106,es_105,esi_116,esp_138,SCZO_117,SZO_109,Z_118
		defs: al_152,C_147,ds_155,eax_145,ebp_143,ebx_148,ecx_150,edi_142,edx_153,es_154,esi_149,esp_141,SCZO_144,SZO_146,Z_151
	word32 edi_157
	byte SCZO_159
	byte SZO_161
	byte C_162
	word32 ebx_163
	word32 esi_164
	word32 ecx_165
	byte Z_166
	byte al_167
	call esi_149 (retsize: 4; depth: 4)
		uses: al_152,C_147,ds_155,dwLoc04_6,dwLoc08_12,dwLoc0C_23,dwLoc10_103,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_29,eax_145,ebp_143,ebx_148,ecx_150,edi_142,edx_153,es_154,esi_149,esp_141,SCZO_144,SZO_146,Z_151
		defs: al_167,C_162,ds_170,eax_160,ebp_158,ebx_163,ecx_165,edi_157,edx_168,es_169,esi_164,esp_156,SCZO_159,SZO_161,Z_166
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10008B8B:
	eax_127 = Mem0[0x10024624:word32]
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10008B90:
	branch eax_127 != 0x00000000 l10008BA9
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10008BA9:
	eax_100 = DPB(eax_127, 0x00, 0) (alias)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10008B94:
	eax_100 = DPB(eax_127, 0x01, 0) (alias)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10008B96:
	word32 esp_73 = esp_113 + 0x00000004
	return (byte) fn1000A130(eax_100, eax_11 ^ fp - 0x00000004, edx, Mem0[esp_73 + 0x00000004:word32], ebp_112, Mem0[esp_73:word32], Mem0[esp_113:word32], es, ds, ebp)
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn10008AF0_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> -32(fp):ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



void DllGetClassObject(word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
DllGetClassObject_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10008BC0:
	Mem24[dwArg0C:word32] = 0x00000000
	word32 ebp_173 = fp - 0x00000004
	word32 ebx_183 = dwArg04
	word32 edi_126 = 0x00000000
	word32 esp_141 = fp - 0x00000014
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008BE1:
	word32 eax_264 = Mem24[edi_126 * 0x00000008 + 0x10001A70:word32]
	word32 edx_112 = dwArg04
	word32 esi_265 = 0x0000000C
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008BF0:
	word32 eax_260
	word32 ecx_50 = Mem24[edx_112:word32]
	byte cl_51 = (byte) ecx_50
	branch ecx_50 != Mem24[eax_264:word32] l10008C12
// DataOut: cl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C12:
	byte C_269 = cond(cl_51 - Mem24[eax_264:byte])
	branch cl_51 == Mem24[eax_264:byte] l10008C1D
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): CDP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C1D:
	byte cl_282 = Mem24[edx_112 + 0x00000001:byte]
	C_269 = cond(cl_282 - Mem24[eax_264 + 0x00000001:byte]) (alias)
	branch cl_282 != Mem24[eax_264 + 0x00000001:byte] l10008C16
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): CDP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C25:
	byte cl_288 = Mem24[edx_112 + 0x00000002:byte]
	C_269 = cond(cl_288 - Mem24[eax_264 + 0x00000002:byte]) (alias)
	branch cl_288 != Mem24[eax_264 + 0x00000002:byte] l10008C16
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): CDP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C2D:
	byte cl_294 = Mem24[edx_112 + 0x00000003:byte]
	C_269 = cond(cl_294 - Mem24[eax_264 + 0x00000003:byte]) (alias)
	branch cl_294 != Mem24[eax_264 + 0x00000003:byte] l10008C16
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): CDP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C35:
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C16:
	eax_260 = 0x00000000 - C_269 | 0x00000001
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008BF6:
	edx_112 = edx_112 + 0x00000004
	eax_264 = eax_264 + 0x00000004
	esi_265 = esi_265 - 0x00000004
	branch esi_265 >=u 0x00000000 l10008BF0
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C01:
	eax_260 = 0x00000000
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C03:
	word32 edi_120
	branch eax_260 == 0x00000000 l10008C37
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C37:
	word32 edi_129 = Mem24[edi_126 * 0x00000008 + 0x10001A74:word32]
	branch edi_129 == 0x00000000 l1000CEFF
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C46:
	word32 eax_140 = HeapAlloc(GetProcessHeap(), 0x00000008, 0x0000000C)
	esp_141 = fp - 0x00000014
	word32 esi_142 = eax_140
	branch eax_140 == 0x00000000 l10008CC9
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008CC9:
	edi_120 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):0x00000008 -24(fp):0x0000000C -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008C5D:
	word32 esp_174
	Mem146[eax_140:word32] = 0x10001AF4
	Mem147[eax_140 + 0x00000004:word32] = 0x00000001
	Mem148[eax_140 + 0x00000008:word32] = edi_129
	__lock()
	Mem150[0x10024668:word32] = Mem148[0x10024668:word32] + 0x00000001
	word32 edi_158 = Mem150[Mem150[eax_140:word32]:word32]
	branch edi_158 != 0x10008D70 l1000CEDE
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):0x00000008 -24(fp):0x0000000C -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32) Local -0018(32) Local -001C(32) Local -0020(32)

l1000CEDE:
	word32 esp_221
	word32 edi_222
	word32 ebp_223
	word32 ecx_224
	word32 eax_225
	byte SZO_226
	byte C_227
	word32 ebx_228
	word32 esi_229
	word32 edx_230
	byte SCZO_231
	byte Z_232
	byte cl_233
	byte S_234
	selector es_235
	selector ds_236
	call Mem150[0x10025410:word32] (retsize: 4; depth: 36)
		uses: C_145,cl_54,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_23,dwLoc14_30,dwLoc18_154,dwLoc1C_157,dwLoc20_160,eax_140,ebp_7,ebx_21,ecx_220,edi_158,edx_57,es,esi_142,esp_159,S_56,SCZO_161,SZO_143,Z_162
		defs: C_227,cl_233,ds_236,eax_225,ebp_223,ebx_228,ecx_224,edi_222,edx_230,es_235,esi_229,esp_221,S_234,SCZO_231,SZO_226,Z_232
	word32 edi_238
	word32 ecx_240
	byte SZO_242
	byte C_243
	word32 ebx_244
	byte SCZO_247
	byte Z_248
	byte cl_249
	byte S_250
	call edi_222 (retsize: 4; depth: 4)
		uses: C_227,cl_233,ds_236,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_23,dwLoc14_30,dwLoc18_154,dwLoc1C_157,dwLoc20_160,eax_225,ebp_223,ebx_228,ecx_224,edi_222,edx_230,es_235,esi_229,esp_221,S_234,SCZO_231,SZO_226,Z_232
		defs: C_243,cl_249,ds_252,eax_241,ebp_239,ebx_244,ecx_240,edi_238,edx_246,es_251,esi_245,esp_237,S_250,SCZO_247,SZO_242,Z_248
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008C8B:
	ebp_173 = fn10008D70(eax_140, dwArg08, dwArg0C)
	esp_174 = fp - 0x00000014
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008C90:
	word32 eax_176 = Mem150[esi_142:word32]
	word32 esp_177 = esp_174 - 0x00000004
	Mem178[esp_177:word32] = esi_142
	edi_120 = eax_140
	word32 ebx_179 = Mem178[eax_176 + 0x00000008:word32]
	branch ebx_179 != 0x10008D30 l1000CEED
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000CEED:
	word32 esp_185
	word32 edi_186
	word32 ebp_187
	word32 ecx_188
	word32 eax_189
	byte SZO_190
	byte C_191
	word32 ebx_192
	word32 esi_193
	word32 edx_194
	byte SCZO_195
	byte Z_196
	byte cl_197
	byte S_198
	selector es_199
	selector ds_200
	call Mem178[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_171,cl_165,ds_163,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_23,dwLoc14_30,dwLoc18_154,dwLoc1C_157,dwLoc20_160,eax_176,ebp_173,ebx_179,ecx_184,edi_175,edx_167,es_164,esi_168,esp_177,S_166,SCZO_180,SZO_170,Z_181
		defs: C_191,cl_197,ds_200,eax_189,ebp_187,ebx_192,ecx_188,edi_186,edx_194,es_199,esi_193,esp_185,S_198,SCZO_195,SZO_190,Z_196
	word32 ecx_204
	word32 eax_205
	byte SZO_206
	byte C_207
	word32 ebx_208
	word32 esi_209
	byte SCZO_211
	byte Z_212
	byte cl_213
	byte S_214
	call ebx_192 (retsize: 4; depth: 4)
		uses: C_191,cl_197,ds_200,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_23,dwLoc14_30,dwLoc18_154,dwLoc1C_157,dwLoc20_160,eax_189,ebp_187,ebx_192,ecx_188,edi_186,edx_194,es_199,esi_193,esp_185,S_198,SCZO_195,SZO_190,Z_196
		defs: C_207,cl_213,ds_216,eax_205,ebp_203,ebx_208,ecx_204,edi_202,edx_210,es_215,esi_209,esp_201,S_214,SCZO_211,SZO_206,Z_212
	ebx_183 = Mem178[ebp_173 + 0x00000008:word32]
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008CA4:
	fn10008D30(esi_142, dwArg00)
	esp_141 = esp_177 + 0x00000004
	ebx_183 = Mem178[ebp_173 + 0x00000008:word32]
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008C07:
	edi_126 = edi_126 + 0x00000001
	branch edi_126 <u 0x00000004 l10008BE1
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10008C0D:
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000CEFF:
	edi_120 = 0x80040111
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008CAC:
	word32 eax_114
	word32 esi_113 = Mem24[esp_141:word32]
	word32 esp_79 = esp_141 + 0x00000004
	branch edi_120 < 0x00000000 l1000CF09
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000CF09:
	fn1000D5FD(edx_112, ebx_183, edi_120, es, ds)
	Mem103[esp_79 - 0x00000004:word32] = Mem24[ebp_173 + 0x00000010:word32]
	Mem107[esp_79 - 0x00000008:word32] = Mem103[ebp_173 + 0x0000000C:word32]
	Mem109[esp_79 - 0x0000000C:word32] = ebx_183
	eax_114 = fn1000D51F(0x1002461C, edx_112, ebp_173, es, ds, dwArg00, dwArg04, dwArg08, out edx_112, out esi_113)
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008CB5:
	eax_114 = edi_120
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10008CB7:
	fn1000A130(eax_114, Mem24[ebp_173 - 0x00000004:word32] ^ ebp_173, edx_112, Mem24[esp_79 + 0x00000004:word32], ebp_173, esi_113, Mem24[esp_79:word32], es, ds, ebp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

DllGetClassObject_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn10008D30(word32 esi, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn10008D30_entry:
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10008D30:
	__lock()
	Mem15[dwArg04 + 0x00000004:word32] = __xadd(Mem0[dwArg04 + 0x00000004:word32], esi | 0xFFFFFFFF)
	branch (esi | 0xFFFFFFFF) != 0x00000001 l10008D65
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10008D44:
	branch dwArg04 == 0x00000000 l10008D65
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:(esi | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10008D48:
	Mem38[dwArg04:word32] = 0x10001AF4
	__lock()
	Mem40[0x10024668:word32] = Mem38[0x10024668:word32] - 0x00000001
	HeapFree(GetProcessHeap(), 0x00000000, dwArg04)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:(esi | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10008D65:
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:(esi | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn10008D30_exit:
// DataOut:
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:(esi | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:esi -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn10008D70(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ebp esp
// Trashed: bp bpl ebp esp rbp rsp sp spl
// Preserved: edi
// Stack args: Stack +0004(32)
fn10008D70_entry:
// DataOut: cs ds eax edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10008D70:
	word32 esp_22
	word32 edi_23
	word32 ebp_24
	call SHLWAPI.dll!Ordinal_219 (retsize: 4; depth: 24)
		uses: dwLoc04_6,dwLoc08_11,dwLoc0C_15,dwLoc10_17,dwLoc14_21,ebp_7,edi_3,esp_20
		defs: ebp_24,edi_23,esp_22
	return dwArg04
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn10008D70_exit:
// DataOut: ebp esp
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> -20(fp):<invalid> -16(fp):0x10001048 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void DllCanUnloadNow(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi esp rax rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
DllCanUnloadNow_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l100092D0:
	branch Mem0[0x10024618:word32] <= Mem0[Mem0[Mem0[fs:0x0000002C:word32] + Mem0[0x1002444C:word32] * 0x00000004:word32] + 0x00000004:word32] l10009306
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l100092EC:
	fn1000B57D(edx, ebx, edi, es, ds, 0x10024618)
	branch Mem0[0x10024618:word32] == 0xFFFFFFFF l1000D1C3
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid>
// LocalsOut: Local -0004(32)
// Terminates process

l1000D1C3:
	Mem60[fp - 0x00000004:word32] = 0x1000CE00
	Mem61[0x10024484:word32] = 0x1002461C
	Mem62[0x1002461C:word32] = 0x10001058
	word32 esi_64
	word32 ebx_65 = fn1000A45E(edx, ebx, esi, edi, es, ds, dwArg00, out esi_64)
	Mem67[fp - 0x00000008:word32] = 0x10024618
	fn1000B53C(edx, ebx_65, ebp, esi_64, edi, es, ds, dwArg00)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:esp + 0x00000004 -4(fp):0x10024618
// LocalsOut: Local -0004(32)
// Terminates process

l10009306:
	branch Mem0[0x10024668:word32] > 0x00000000 l10009322
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> -4(fp):0x10024618
// LocalsOut: Local -0004(32)

l1000930F:
	Mem38[fp - 0x00000004:word32] = 0x00000000
	branch fn10008AF0(0x1002461C, edx, ebp, es, ds, bArg00) == 0x00 l10009322
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> -4(fp):0x10024618

l10009322:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> al:<invalid> -4(fp):0x10024618

l1000931F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> al:<invalid> -4(fp):0x10024618

DllCanUnloadNow_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> al:<invalid> -4(fp):0x10024618



void fn10009330(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
fn10009330_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10009330:
	DisableThreadLibraryCalls(ecx)
	Mem20[0x100244F0:word32] = 0x00000000
	Mem22[0x100244E0:word32] = 0x10024508
	Mem24[0x100244F8:word32] = 0x00000001
	Mem25[0x100244FC:word32] = 0x00000000
	Mem26[0x10024518:word32] = 0x00000000
	Mem27[0x10024508:word32] = 0x10024530
	Mem28[0x10024520:word32] = 0x00000001
	Mem29[0x10024524:word32] = 0x00000000
	Mem30[0x10024540:word32] = 0x00000000
	Mem31[0x10024530:word32] = 0x10024558
	Mem32[0x10024548:word32] = 0x00000001
	Mem33[0x1002454C:word32] = 0x00000000
	Mem34[0x10024568:word32] = 0x00000000
	Mem35[0x10024558:word32] = 0x10024580
	Mem36[0x10024570:word32] = 0x00000001
	Mem37[0x10024574:word32] = 0x00000000
	Mem38[0x10024590:word32] = 0x00000000
	Mem39[0x10024580:word32] = 0x100245A8
	Mem40[0x10024598:word32] = 0x00000001
	Mem41[0x1002459C:word32] = 0x00000000
	Mem42[0x100245B8:word32] = 0x00000000
	Mem43[0x100245A8:word32] = 0x00000000
	Mem44[0x100245C0:word32] = 0x00000001
	Mem45[0x100245C4:word32] = 0x00000000
	Mem46[0x100245D0:word32] = 0x10002CC4
	Mem47[0x100245D4:word32] = 0x10002CB4
	Mem48[0x100245D8:word32] = 0x10002CA4
	Mem49[0x100245DC:word32] = 0x10002C94
	Mem50[0x100245E0:word32] = 0x10002C84
	Mem51[0x100245E4:word32] = 0x10002C74
	Mem52[0x10024000:word32] = 0x100244E0
	word32 esp_19 = fp - 0x00000014
	word32 esi_21 = 0x100244E0
	word32 edi_23 = 0x100245D0
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10009481:
	word32 ecx_56 = Mem52[edi_23:word32]
	word32 esp_58 = esp_19 - 0x00000004
	Mem59[esp_58:word32] = esi_21 + 0x00000008
	Mem61[esp_58 - 0x00000004:word32] = 0x00000000
	Mem63[esp_58 - 0x00000008:word32] = 0x00000000
	Mem67[esp_58 - 0x0000000C:word32] = fp - 0x0000000C
	Mem69[esp_58 - 0x00000010:word32] = 0x00000001
	Mem71[esp_58 - 0x00000014:word32] = ecx_56
	Mem73[esp_58 - 0x00000018:word32] = esi_21
	Mem77[esp_58 - 0x0000001C:word32] = 0x1000D8D0
	Mem78[esi_21 + 0x00000020:word32] = ecx_56
	word32 ebp_81
	byte SCZO_82
	word32 esi_83
	word32 ecx_84
	word32 eax_85
	byte SZO_86
	byte C_87
	byte Z_88
	call ntdll.dll!EtwRegisterTraceGuidsW (retsize: 4; depth: 4)
		uses: dwLoc04_6,dwLoc08_74,dwLoc0C_65,dwLoc10_12,dwLoc14_14,dwLoc18_17,eax_64,ebp_7,ecx_56,edi_75,esi_54,esp_76,SCZO_9
		defs: C_87,eax_85,ebp_81,ecx_84,edi_80,esi_83,esp_79,SCZO_82,SZO_86,Z_88
	esi_21 = Mem78[esi_83:word32]
	branch esi_21 != 0x00000000 l10009481
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):0x1000D8D0 -48(fp):0x100244E0 -44(fp):<invalid> -40(fp):0x00000001 -36(fp):fp - 0x0000000C -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l100094B4:
	fn100094E0()
	Mem97[esp_19 - 0x00000004:word32] = 0x100244C8
	InitializeCriticalSection(Mem97[esp_19 - 0x00000004:LPCRITICAL_SECTION])
	Mem100[0x100240D0:word32] = TlsAlloc()
	return
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):0x1000D8D0 -48(fp):0x100244E0 -44(fp):<invalid> -40(fp):0x00000001 -36(fp):fp - 0x0000000C -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

fn10009330_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):0x1000D8D0 -48(fp):0x100244E0 -44(fp):<invalid> -40(fp):0x00000001 -36(fp):fp - 0x0000000C -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp



void fn100094E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: esp
// Trashed: SCZO ah al ax eax esp rax rsp sp spl
// Preserved:
fn100094E0_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100094E0:
	word32 eax_4 = Mem0[0x10024068:word32] | Mem0[0x1002406C:word32]
	branch eax_4 != 0x00000000 l1000950A
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000950A:
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l100094ED:
	word32 esp_25
	word32 eax_26
	byte SZO_27
	byte C_28
	byte Z_29
	call ntdll.dll!EtwEventRegister (retsize: 4; depth: 20)
		uses: C_7,dwLoc04_18,dwLoc08_20,dwLoc0C_22,dwLoc10_24,eax_4,esp_23,SZO_5,Z_6
		defs: C_28,eax_26,esp_25,SZO_27,Z_29
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l10009507:
	return
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> -16(fp):0x10002CD4 -12(fp):0x10009200 -8(fp):0x10024068 -4(fp):0x10024068

fn100094E0_exit:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> -16(fp):0x10002CD4 -12(fp):0x10009200 -8(fp):0x10024068 -4(fp):0x10024068



word32 fn10009510()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi esp rax rcx rdx rsi rsp si sil sp spl
// Preserved: esi esp
fn10009510_entry:
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10009510:
	word32 eax_3 = Mem0[0x10024664:word32]
	branch eax_3 != 0x00000000 l1000D1F3
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000D1F3:
	FreeLibrary(eax_3)
	Mem88[0x10024664:word32] = 0x00000000
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>
// LocalsOut: fp(32)

l1000951D:
	DeleteCriticalSection(0x100244C8)
	word32 esp_13 = fp - 0x00000004
	word32 esi_14 = Mem0[0x10024000:word32]
	branch esi_14 == 0x10024000 l10009572
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -4(fp):<invalid>

l10009537:
	branch esi_14 == 0x00000000 l10009568
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> esi:<invalid> -8(fp):0x100244C8 -4(fp):esi

l1000953B:
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> esi:<invalid> -8(fp):0x100244C8 -4(fp):esi

l10009540:
	word32 edx_52 = Mem0[esi_14 + 0x00000008:word32]
	word32 ecx_54 = Mem0[esi_14 + 0x0000000C:word32]
	word32 eax_55 = edx_52 | ecx_54
	branch eax_55 == 0x00000000 l10009562
// DataOut: cs ds ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l1000954C:
	word32 esp_69 = esp_13 - 0x00000004
	Mem70[esp_69:word32] = ecx_54
	Mem72[esp_69 - 0x00000004:word32] = edx_52
	word32 eax_74
	byte SZO_75
	byte C_76
	byte Z_77
	byte SCZO_79
	word32 edx_80
	word32 ecx_81
	call ntdll.dll!EtwUnregisterTraceGuids (retsize: 4; depth: 4)
		uses: C_58,dwLoc04_10,dwLoc08_12,eax_55,ecx_54,edx_52,esi_49,esp_71,SCZO_50,SZO_56,Z_57
		defs: C_76,eax_74,ecx_81,edx_80,esi_78,esp_73,SCZO_79,SZO_75,Z_77
	Mem82[esi_14 + 0x00000008:word32] = 0x00000000
	Mem83[esi_14 + 0x0000000C:word32] = 0x00000000
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l10009562:
	esi_14 = Mem0[esi_14:word32]
	branch esi_14 != 0x00000000 l10009540
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l10009568:
	Mem48[0x10024000:word32] = 0x10024000
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l10009572:
	word32 edx_22 = fn100095A0()
	word32 eax_23 = Mem0[0x100240D0:word32]
	word32 esp_25 = esp_13 + 0x00000004
	branch eax_23 == 0xFFFFFFFF l10009593
// DataOut: cs ds eax ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l10009582:
	Mem31[esp_25 - 0x00000004:word32] = eax_23
	TlsFree(Mem31[esp_25 - 0x00000004:DWORD])
	Mem34[0x100240D0:word32] = 0xFFFFFFFF
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l10009593:
	return edx_22
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>

fn10009510_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):<invalid>



word32 fn100095A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx esp
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esp rax rcx rdx rsp sp spl
// Preserved:
fn100095A0_entry:
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100095A0:
	word32 eax_3 = Mem0[0x10024068:word32]
	word32 edx_5 = Mem0[0x1002406C:word32]
	word32 ecx_6 = eax_3 | edx_5
	branch ecx_6 == 0x00000000 l100095CE
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100095CE:
	return edx_5
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> edx:<invalid>

l100095B1:
	word32 esp_23
	word32 eax_24
	word32 ecx_25
	word32 edx_26
	byte SZO_27
	byte C_28
	byte Z_29
	call ntdll.dll!EtwEventUnregister (retsize: 4; depth: 12)
		uses: C_9,dwLoc04_20,dwLoc08_22,eax_3,ecx_6,edx_5,esp_21,SZO_7,Z_8
		defs: C_28,eax_24,ecx_25,edx_26,esp_23,SZO_27,Z_29
	Mem30[0x10024068:word32] = 0x00000000
	Mem31[0x1002406C:word32] = 0x00000000
	return edx_26
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> edx:<invalid>

fn100095A0_exit:
// DataOut: edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):<invalid>



word32 fn10009C02(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn10009C02_entry:
	*edxOut = edx
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10009C02:
	word32 edi_135
	word32 eax_36
	word32 ebp_136 = fp - 0x00000004
	word32 eax_11 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	word32 esp_125 = fp - 0x00000024
	branch dwArg08 != 0x00000000 l10009D23
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10009D23:
	edi_135 = 0x00000001
	branch dwArg08 != 0x00000001 l10009DEF
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +000C(32)

l10009D2F:
	word32 dwLoc0C_287 = 0x00000000
	word32 edx_289 = Mem0[Mem0[fs:0x00000018:word32] + 0x00000004:word32]
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l10009D59:
	__lock()
	word32 eax_297
	__cmpxchg(Mem0[0x1002445C:word32], edx_289, 0x00000000, out eax_297)
	edx = edx_289
	*edxOut = edx
	branch eax_297 != 0x00000000 l10009D47
// DataOut: cs ds eax ebp edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l10009D47:
	branch eax_297 == edx_289 l10009D67
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l10009D67:
	dwLoc0C_287 = 0x00000001
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l10009D4B:
	Sleep(0x000003E8)
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l10009D65:
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l10009D6A:
	word32 esp_322
	word32 esi_316
	branch Mem0[0x10024460:word32] == 0x00000000 l10009D7E
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l10009D7E:
	Mem428[0x10024460:word32] = 0x00000001
	word32 eax_429 = fn1000A0E6(edx_289, 0x00000002, fp - 0x00000004, 0x00000001, es, ds, 0x100020C8, 0x100020D4)
	branch eax_429 != 0x00000000 l10009D1C
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x00000002 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l10009D99:
	word32 esp_441
	byte SCZO_444
	word32 eax_445
	byte SZO_446
	byte C_447
	word32 ebx_448
	byte Z_450
	selector fs_451
	word32 ecx_453
	call initterm (retsize: 4; depth: 48)
		uses: C_436,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_302,dwLoc10,dwLoc14_290,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_438,dwLoc2C_440,eax_429,ebp_7,ebx_307,ecx_432,edi_278,edx_292,es,esi_288,esp_439,fs,SCZO_303,SZO_434,Z_435
		defs: C_447,ds_455,eax_445,ebp_443,ebx_448,ecx_453,edi_442,edx_452,es_454,esi_449,esp_441,fs_451,SCZO_444,SZO_446,Z_450
	Mem458[0x10024460:word32] = 0x00000002
	esp_322 = fp - 0x00000028
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:0x100020D4 -44(fp):0x100020C8 -40(fp):0x100020D4 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l10009D75:
	byte SCZO_412
	word32 eax_413
	byte SZO_414
	byte C_415
	word32 ebx_416
	byte Z_418
	selector fs_419
	word32 ecx_421
	call amsg_exit (retsize: 4; depth: 44)
		uses: C_301,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_302,dwLoc10,dwLoc14_290,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_408,dwLoc2C,eax_297,ebp_7,ebx_307,ecx_296,edi_278,edx_292,es,esi_288,esp_407,fs,SCZO_303,SZO_299,Z_304
		defs: C_415,ds_423,eax_413,ebp_411,ebx_416,ecx_421,edi_410,edx_420,es_422,esi_417,esp_409,fs_419,SCZO_412,SZO_414,Z_418
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x00000002 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l10009DAF:
	esp_125 = esp_322 + 0x00000004
	branch dwLoc0C_287 != 0x00000000 l10009DBA
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l10009DB6:
	Mem405[esi_316:word32] = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l10009DBA:
	branch Mem0[0x10024464:word32] == 0x00000000 l10009DE9
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l10009DC3:
	Mem350[esp_125 - 0x00000004:word32] = 0x10024464
	word32 eax_353 = fn1000A1A0(dwArg00, out edx)
	branch eax_353 == 0x00000000 l10009DE9
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +000C(32)

l10009DD2:
	Mem362[esp_125 - 0x00000004:word32] = dwArg0C
	Mem366[esp_125 - 0x00000008:word32] = 0x00000002
	Mem370[esp_125 - 0x0000000C:word32] = dwArg04
	word32 esp_371
	word32 edi_372
	word32 ebp_373
	byte SCZO_374
	word32 eax_375
	byte SZO_376
	byte C_377
	word32 ebx_378
	word32 esi_379
	byte Z_380
	selector fs_381
	word32 edx_382
	word32 ecx_383
	selector es_384
	selector ds_385
	call Mem370[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_358,ds_311,dwLoc04_6,dwLoc08_12,dwLoc0C_302,dwLoc10,dwLoc14_290,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_310,dwLoc2C_309,eax_353,ebp_321,ebx_319,ecx_364,edi_315,edx_352,es_312,esi_363,esp_369,fs_314,SCZO_330,SZO_356,Z_357
		defs: C_377,ds_385,eax_375,ebp_373,ebx_378,ecx_383,edi_372,edx_382,es_384,esi_379,esp_371,fs_381,SCZO_374,SZO_376,Z_380
	byte SCZO_389
	word32 eax_390
	byte SZO_391
	byte C_392
	word32 ebx_393
	word32 esi_394
	byte Z_395
	selector fs_396
	word32 ecx_398
	call esi_379 (retsize: 4; depth: 4)
		uses: C_377,ds_385,dwLoc04_6,dwLoc08_12,dwLoc0C_302,dwLoc10,dwLoc14_290,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_310,dwLoc2C_309,eax_375,ebp_373,ebx_378,ecx_383,edi_372,edx_382,es_384,esi_379,esp_371,fs_381,SCZO_374,SZO_376,Z_380
		defs: C_392,ds_400,eax_390,ebp_388,ebx_393,ecx_398,edi_387,edx_397,es_399,esi_394,esp_386,fs_396,SCZO_389,SZO_391,Z_395
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009DE9:
	Mem347[0x100240E0:word32] = Mem0[0x100240E0:word32] + 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009C21:
	word32 eax_95 = Mem0[0x100240E0:word32]
	branch eax_95 <= 0x00000000 l10009D1C
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009D1C:
	esp_125 = fp - 0x00000024
	eax_36 = 0x00000000
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:0x100020D4 -44(fp):0x100020C8 -40(fp):0x100020D4 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009C2E:
	Mem106[0x100240E0:word32] = eax_95 - 0x00000001
	word32 edx_110 = Mem106[Mem106[fs:0x00000018:word32] + 0x00000004:word32]
	__lock()
	word32 eax_114
	__cmpxchg(Mem106[0x1002445C:word32], edx_110, 0x00000000, out eax_114)
	word32 dwLoc0C_109 = 0x00000000
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(32)

l10009C71:
	edx = edx_110
	*edxOut = edx
	esp_125 = fp - 0x00000024
	branch eax_114 != 0x00000000 l10009C57
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(32)

l10009C57:
	branch eax_114 == edx_110 l10009C77
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(32)

l10009C77:
	dwLoc0C_109 = 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0)

l10009C5B:
	Sleep(0x000003E8)
	__lock()
	__cmpxchg(Mem106[0x1002445C:word32], edx_110, 0x00000000, out eax_114)
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(32)

l10009C75:
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0)

l10009C7A:
	branch Mem106[0x10024460:word32] == 0x00000002 l10009C90
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0)

l10009C90:
	word32 eax_151 = Mem106[0x10024458:word32]
	word32 dwLoc18_152 = eax_151
	branch eax_151 == 0x00000000 l10009D04
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0018(32)

l10009C9C:
	word32 esi_181 = Mem106[0x10024454:word32]
	word32 dwLoc10_183 = esi_181
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l10009CA7:
	esi_181 = esi_181 - 0x00000004
	branch esi_181 <u eax_151 l10009CE8
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l10009CE8:
	word32 esp_253 = esp_125 - 0x00000004
	Mem254[esp_253:word32] = eax_151
	free(Mem254[esp_253:(ptr void)])
	Mem257[0x10024454:word32] = 0x00000000
	Mem260[0x10024458:word32] = 0x00000000
	esp_125 = esp_253 + 0x00000004
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0)

l10009D04:
	Mem172[0x10024460:word32] = 0x00000000
	edi_135 = 0x00000001
	branch dwLoc0C_109 != 0x00000000 l10009DEF
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009D13:
	Mem179[0x1002445C:word32] = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009CAE:
	word32 ecx_203 = Mem106[esi_181:word32]
	branch ecx_203 == 0x00000000 l10009CA7
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l10009CB7:
	Mem208[esi_181:word32] = 0x00000000
	word32 esp_209
	word32 edi_210
	word32 ebp_211
	byte SCZO_212
	word32 eax_213
	byte SZO_214
	byte C_215
	word32 ebx_216
	word32 esi_217
	byte Z_218
	selector fs_219
	word32 edx_220
	word32 ecx_221
	selector es_222
	selector ds_223
	call Mem208[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_207,ds_187,dwLoc04_6,dwLoc08_12,dwLoc0C_129,dwLoc10_185,dwLoc14_204,dwLoc18_186,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_120,dwLoc2C,eax_197,ebp_198,ebx_196,ecx_203,edi_192,edx_189,es_188,esi_200,esp_199,fs_190,SCZO_201,SZO_205,Z_206
		defs: C_215,ds_223,eax_213,ebp_211,ebx_216,ecx_221,edi_210,edx_220,es_222,esi_217,esp_209,fs_219,SCZO_212,SZO_214,Z_218
	word32 edi_225
	byte SCZO_227
	word32 eax_228
	byte SZO_229
	byte C_230
	word32 ebx_231
	byte Z_233
	selector fs_234
	word32 edx_235
	word32 ecx_236
	call ecx_203 (retsize: 4; depth: 4)
		uses: C_215,ds_223,dwLoc04_6,dwLoc08_12,dwLoc0C_129,dwLoc10_185,dwLoc14_204,dwLoc18_186,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_120,dwLoc2C,eax_213,ebp_211,ebx_216,ecx_221,edi_210,edx_220,es_222,esi_217,esp_209,fs_219,SCZO_212,SZO_214,Z_218
		defs: C_230,ds_238,eax_228,ebp_226,ebx_231,ecx_236,edi_225,edx_235,es_237,esi_232,esp_224,fs_234,SCZO_227,SZO_229,Z_233
	edx = Mem208[0x10024458:word32]
	*edxOut = edx
	word32 ecx_240 = Mem208[0x10024454:word32]
	branch edi_225 != edx l10009CDA
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l10009CD2:
	eax_151 = dwLoc18_152
	branch dwLoc10_183 == ecx_240 l10009CA7
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l10009CDA:
	eax_151 = edx
	dwLoc10_183 = ecx_240
	dwLoc18_152 = edx
	esi_181 = ecx_240
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l10009C83:
	word32 esp_134
	byte SCZO_137
	word32 eax_138
	byte SZO_139
	byte C_140
	word32 ebx_141
	word32 esi_142
	byte Z_143
	selector fs_144
	word32 ecx_146
	call amsg_exit (retsize: 4; depth: 44)
		uses: C_128,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_129,dwLoc10_112,dwLoc14,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_133,dwLoc2C,eax_124,ebp_7,ebx_105,ecx_123,edi_118,edx_121,es,esi_107,esp_132,fs,SCZO_130,SZO_126,Z_131
		defs: C_140,ds_148,eax_138,ebp_136,ebx_141,ecx_146,edi_135,edx_145,es_147,esi_142,esp_134,fs_144,SCZO_137,SZO_139,Z_143
	esp_125 = fp - 0x00000024
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x1002445C edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009DEF:
	eax_36 = edi_135
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):0x100020AC -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10009DF1:
	word32 esp_41 = esp_125 + 0x00000004
	return fn1000A130(eax_36, eax_11 ^ fp - 0x00000004, edx, Mem0[esp_41 + 0x00000004:word32], ebp_136, Mem0[esp_41:word32], Mem0[esp_125:word32], es, ds, ebp)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10009C02_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



BOOL DllMain(HANDLE hModule, DWORD dwReason, LPVOID lpReserved)
// stackDelta: 16; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0008(32)
DllMain_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10009E10:
	word32 edi_12 = edi
	branch dwReason != 0x00000001 l10009E20
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10009E1B:
	fn1000A293()
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 -4(fp):ebp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: fp(32)

l10009E20:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: fp(32)

l10009E49:
	word32 ebp_158 = fn1000A33C(ebx, esi, edi, dwLoc0C, 0x1001EFC8, 0x00000030)
	Mem29[ebp_158 - 0x00000020:word32] = 0x00000001
	Mem31[ebp_158 - 0x00000004:word32] = 0x00000000
	word32 esp_23 = fp - 0x00000008
	word32 esi_102 = 0x00000000
	word32 eax_32 = Mem31[ebp_158 + 0x0000000C:word32]
	branch eax_32 >u 0x00000001 l10009E6E
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> -4(fp):ebp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E69:
	Mem342[0x100240C0:word32] = eax_32
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E6E:
	branch Mem31[ebp_158 + 0x0000000C:word32] != 0x00000000 l10009E85
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E74:
	branch Mem31[0x100240E0:word32] != 0x00000000 l10009E85
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E85:
	word32 eax_57 = Mem31[ebp_158 + 0x0000000C:word32]
	branch eax_57 == 0x00000001 l10009E96
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E8D:
	branch eax_57 != 0x00000002 l10009F3B
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E96:
	edi_12 = Mem31[0x10024468:word32]
	branch edi_12 == 0x00000000 l10009EEE
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009EA0:
	Mem289[ebp_158 - 0x00000004:word32] = 0x00000001
	branch Mem289[ebp_158 + 0x0000000C:word32] != 0x00000001 l10009EB7
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009EAD:
	Mem334[0x100240E4:word32] = 0x00000001
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009EB7:
	Mem294[fp - 0x0000000C:word32] = Mem289[ebp_158 + 0x00000010:word32]
	Mem297[fp - 0x00000010:word32] = Mem294[ebp_158 + 0x0000000C:word32]
	Mem300[fp - 0x00000014:word32] = Mem297[ebp_158 + 0x00000008:word32]
	word32 esp_302
	word32 edi_303
	word32 ebp_304
	byte SCZO_305
	byte Z_306
	word32 esi_307
	byte SZO_308
	byte C_309
	word32 eax_310
	byte CZ_311
	word32 ecx_312
	word32 ebx_313
	word32 edx_314
	selector es_315
	selector ds_316
	call Mem300[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_252,CZ_34,ds,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_57,ebp_28,ebx,ecx_301,edi_249,edx,es,esi_30,esp_299,SCZO_290,SZO_250,Z_291
		defs: C_309,CZ_311,ds_316,eax_310,ebp_304,ebx_313,ecx_312,edi_303,edx_314,es_315,esi_307,esp_302,SCZO_305,SZO_308,Z_306
	byte SCZO_320
	byte Z_321
	byte SZO_323
	byte C_324
	word32 eax_325
	byte CZ_326
	word32 ecx_327
	call edi_303 (retsize: 4; depth: 4)
		uses: C_309,CZ_311,ds_316,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_310,ebp_304,ebx_313,ecx_312,edi_303,edx_314,es_315,esi_307,esp_302,SCZO_305,SZO_308,Z_306
		defs: C_324,CZ_326,ds_331,eax_325,ebp_319,ebx_328,ecx_327,edi_318,edx_329,es_330,esi_322,esp_317,SCZO_320,SZO_323,Z_321
	Mem332[ebp_158 - 0x00000020:word32] = eax_325
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009EEB:
	Mem333[ebp_158 - 0x00000004:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009EEE:
	branch Mem31[ebp_158 - 0x00000020:word32] == 0x00000000 l1000A0BE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009EF8:
	Mem272[ebp_158 - 0x00000004:word32] = 0x00000002
	word32 esp_274 = esp_23 - 0x00000004
	Mem275[esp_274:word32] = Mem272[ebp_158 + 0x00000010:word32]
	Mem278[esp_274 - 0x00000004:word32] = Mem275[ebp_158 + 0x0000000C:word32]
	Mem281[esp_274 - 0x00000008:word32] = Mem278[ebp_158 + 0x00000008:word32]
	Mem285[ebp_158 - 0x00000020:word32] = fn10009C02(edx, ebp_158, es, ds, dwArg00, hModule, dwReason, out edx)
	esp_23 = esp_274 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009F2E:
	Mem286[ebp_158 - 0x00000004:word32] = esi_102
	branch Mem286[ebp_158 - 0x00000020:word32] == 0x00000000 l1000A0BE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009F3B:
	Mem72[ebp_158 - 0x00000004:word32] = 0x00000003
	word32 esp_74 = esp_23 - 0x00000004
	Mem75[esp_74:word32] = Mem72[ebp_158 + 0x00000010:word32]
	Mem78[esp_74 - 0x00000004:word32] = Mem75[ebp_158 + 0x0000000C:word32]
	Mem81[esp_74 - 0x00000008:word32] = Mem78[ebp_158 + 0x00000008:word32]
	word32 eax_86 = fn1000BA48(edx, ebx, es, ds, dwArg00, hModule, out edx, out ebp_158, out esi_102, out edi_12)
	Mem88[ebp_158 - 0x00000020:word32] = eax_86
	word32 esp_100 = esp_74 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009F71:
	Mem89[ebp_158 - 0x00000004:word32] = esi_102
	branch Mem89[ebp_158 + 0x0000000C:word32] != 0x00000001 l1000A024
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009F7E:
	branch Mem89[ebp_158 - 0x00000020:word32] != 0x00000000 l1000A024
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009F88:
	Mem177[ebp_158 - 0x00000004:word32] = 0x00000004
	Mem179[esp_74:word32] = esi_102
	Mem181[esp_74 - 0x00000004:word32] = esi_102
	Mem184[esp_74 - 0x00000008:word32] = Mem181[ebp_158 + 0x00000008:word32]
	word32 edx_185
	word32 edi_188
	fn1000BA48(edx, ebx, es, ds, dwArg00, hModule, out edx_185, out ebp_158, out esi_102, out edi_188)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009FB4:
	Mem191[ebp_158 - 0x00000004:word32] = esi_102
	Mem192[ebp_158 - 0x00000004:word32] = 0x00000005
	Mem194[esp_74:word32] = esi_102
	Mem196[esp_74 - 0x00000004:word32] = esi_102
	Mem199[esp_74 - 0x00000008:word32] = Mem196[ebp_158 + 0x00000008:word32]
	word32 eax_201 = fn10009C02(edx_185, ebp_158, es, ds, dwArg00, hModule, dwReason, out edx)
	esp_100 = esp_74 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009FE3:
	Mem203[ebp_158 - 0x00000004:word32] = esi_102
	edi_12 = Mem203[0x10024468:word32]
	branch edi_12 == 0x00000000 l1000A024
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009FF0:
	Mem208[ebp_158 - 0x00000004:word32] = 0x00000006
	Mem210[esp_74:word32] = esi_102
	Mem212[esp_74 - 0x00000004:word32] = esi_102
	Mem215[esp_74 - 0x00000008:word32] = Mem212[ebp_158 + 0x00000008:word32]
	word32 esp_217
	word32 edi_218
	word32 ebp_219
	byte SCZO_220
	byte Z_221
	word32 esi_222
	byte SZO_223
	byte C_224
	word32 eax_225
	byte CZ_226
	word32 ecx_227
	word32 ebx_228
	word32 edx_229
	selector es_230
	selector ds_231
	call Mem215[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_207,CZ_64,ds_60,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_201,ebp_186,ebx_71,ecx_216,edi_204,edx_200,es_61,esi_187,esp_214,SCZO_175,SZO_205,Z_206
		defs: C_224,CZ_226,ds_231,eax_225,ebp_219,ebx_228,ecx_227,edi_218,edx_229,es_230,esi_222,esp_217,SCZO_220,SZO_223,Z_221
	byte SCZO_235
	byte Z_236
	byte SZO_238
	byte C_239
	word32 eax_240
	byte CZ_241
	word32 ecx_242
	call edi_218 (retsize: 4; depth: 4)
		uses: C_224,CZ_226,ds_231,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_225,ebp_219,ebx_228,ecx_227,edi_218,edx_229,es_230,esi_222,esp_217,SCZO_220,SZO_223,Z_221
		defs: C_239,CZ_241,ds_246,eax_240,ebp_234,ebx_243,ecx_242,edi_233,edx_244,es_245,esi_237,esp_232,SCZO_235,SZO_238,Z_236
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A021:
	Mem247[ebp_158 - 0x00000004:word32] = esi_102
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A024:
	word32 eax_103 = Mem89[ebp_158 + 0x0000000C:word32]
	branch eax_103 == 0x00000000 l1000A034
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A02B:
	branch eax_103 != 0x00000003 l1000A0BE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A034:
	Mem109[ebp_158 - 0x00000004:word32] = 0x00000007
	word32 esp_111 = esp_100 - 0x00000004
	Mem112[esp_111:word32] = Mem109[ebp_158 + 0x00000010:word32]
	Mem115[esp_111 - 0x00000004:word32] = Mem112[ebp_158 + 0x0000000C:word32]
	Mem118[esp_111 - 0x00000008:word32] = Mem115[ebp_158 + 0x00000008:word32]
	word32 eax_120 = fn10009C02(edx, ebp_158, es, ds, dwArg00, hModule, dwReason, out edx)
	Mem122[ebp_158 - 0x00000020:word32] = eax_120
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A06A:
	Mem123[ebp_158 - 0x00000004:word32] = esi_102
	edi_12 = Mem123[0x10024468:word32]
	branch edi_12 == 0x00000000 l1000A0BE
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A077:
	branch Mem123[0x100240E4:word32] == 0x00000000 l1000A0BE
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A080:
	Mem130[ebp_158 - 0x00000004:word32] = 0x00000008
	Mem133[esp_111:word32] = Mem130[ebp_158 + 0x00000010:word32]
	Mem136[esp_111 - 0x00000004:word32] = Mem133[ebp_158 + 0x0000000C:word32]
	Mem139[esp_111 - 0x00000008:word32] = Mem136[ebp_158 + 0x00000008:word32]
	word32 esp_141
	word32 edi_142
	word32 ebp_143
	byte SCZO_144
	byte Z_145
	word32 esi_146
	byte SZO_147
	byte C_148
	word32 eax_149
	byte CZ_150
	word32 ecx_151
	word32 ebx_152
	word32 edx_153
	selector es_154
	selector ds_155
	call Mem139[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_127,CZ_96,ds_92,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_120,ebp_98,ebx_101,ecx_140,edi_124,edx_119,es_93,esi_102,esp_138,SCZO_128,SZO_125,Z_129
		defs: C_148,CZ_150,ds_155,eax_149,ebp_143,ebx_152,ecx_151,edi_142,edx_153,es_154,esi_146,esp_141,SCZO_144,SZO_147,Z_145
	word32 esp_156
	byte SCZO_159
	byte Z_160
	byte SZO_162
	byte C_163
	word32 eax_164
	byte CZ_165
	word32 ecx_166
	call edi_142 (retsize: 4; depth: 4)
		uses: C_148,CZ_150,ds_155,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_149,ebp_143,ebx_152,ecx_151,edi_142,edx_153,es_154,esi_146,esp_141,SCZO_144,SZO_147,Z_145
		defs: C_163,CZ_165,ds_170,eax_164,ebp_158,ebx_167,ecx_166,edi_157,edx_168,es_169,esi_161,esp_156,SCZO_159,SZO_162,Z_160
	Mem171[ebp_158 - 0x00000020:word32] = eax_164
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A0BB:
	Mem172[ebp_158 - 0x00000004:word32] = esi_102
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l10009E7D:
	Mem341[ebp_158 - 0x00000020:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1000A0BE:
	Mem51[ebp_158 - 0x00000004:word32] = 0xFFFFFFFE
	fn1000A0D5(ebp_158)
	word32 ebx_54
	word32 esi_55
	return fn1000A384(Mem51[ebp_158 - 0x00000020:word32], edx, ebx, ebp_158, esi_102, edi_12, es, ds, 0x00000030, dwArg00, hModule, dwReason, lpReserved, out ebx_54, out esi_55)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

DllMain_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x1001EFC8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved



void fn1000A0D5(word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp
// LiveOut:
// Trashed: SCZO
// Preserved: esp
fn1000A0D5_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000A0D5:
	branch Mem0[ebp + 0x0000000C:word32] >u 0x00000001 l1000A0E5
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000A0DB:
	Mem6[0x100240C0:word32] = 0xFFFFFFFF
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000A0E5:
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1000A0D5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn1000A0E6(word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000A0E6_entry:
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000A0E6:
	word32 edi_3 = edi
	word32 ebp_118 = fp - 0x00000004
	word32 eax_13 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 esi_123 = dwArg04
	word32 eax_120 = 0x00000000
	branch dwArg04 >=u dwArg08 l1000A11F
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l1000A101:
	word32 esp_116 = fp - 0x00000010
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l1000A102:
	branch eax_120 != 0x00000000 l1000A11E
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l1000A106:
	word32 edi_82 = Mem0[esi_123:word32]
	branch edi_82 == 0x00000000 l1000A116
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l1000A10C:
	word32 esp_102
	word32 edi_103
	word32 ebp_104
	word32 ecx_105
	word32 eax_106
	byte SZO_107
	byte C_108
	word32 esi_109
	byte SCZO_110
	byte Z_111
	word32 edx_112
	word32 ebx_113
	selector es_114
	selector ds_115
	call Mem0[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_85,ds_53,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_52,eax_61,ebp_62,ebx_55,ecx_101,edi_82,edx_56,es_54,esi_60,esp_63,SCZO_57,SZO_83,Z_84
		defs: C_108,ds_115,eax_106,ebp_104,ebx_113,ecx_105,edi_103,edx_112,es_114,esi_109,esp_102,SCZO_110,SZO_107,Z_111
	word32 edi_117
	word32 ecx_119
	byte SZO_121
	byte C_122
	byte SCZO_124
	byte Z_125
	call edi_103 (retsize: 4; depth: 4)
		uses: C_108,ds_115,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_52,eax_106,ebp_104,ebx_113,ecx_105,edi_103,edx_112,es_114,esi_109,esp_102,SCZO_110,SZO_107,Z_111
		defs: C_122,ds_129,eax_120,ebp_118,ebx_127,ecx_119,edi_117,edx_126,es_128,esi_123,esp_116,SCZO_124,SZO_121,Z_125
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l1000A116:
	esi_123 = esi_123 + 0x00000004
	branch esi_123 <u dwArg08 l1000A102
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0008(32)

l1000A11E:
	edi_3 = Mem0[esp_116:word32]
	esp_15 = esp_116 + 0x00000004
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000A11F:
	return fn1000A130(eax_120, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_118, Mem0[esp_15:word32], edi_3, es, ds, ebp)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1000A0E6_exit:
// DataOut: eax
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn1000A130(word32 eax, word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  DP cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// LiveOut: al eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esp
// Stack args: Stack +0000(32)
fn1000A130_entry:
// DataOut: al cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l1000A130:
	branch ecx != Mem0[0x100240C4:word32] l1000A13B
// DataOut: al cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l1000A13B:
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l1000A49F:
	Mem33[0x100241E8:word32] = eax
	Mem34[0x100241E4:word32] = ecx
	Mem36[0x100241E0:word32] = edx
	Mem38[0x100241DC:word32] = ebx
	Mem40[0x100241D8:word32] = esi
	Mem41[0x100241D4:word32] = edi
	Mem43[0x10024200:word16] = ss
	Mem45[0x100241F4:word16] = cs
	Mem47[0x100241D0:word16] = ds
	Mem49[0x100241CC:word16] = es
	Mem51[0x100241C8:word16] = fs
	Mem53[0x100241C4:word16] = gs
	Mem56[0x100241F8:word32] = cond(fp - 0x00000328)
	Mem59[0x100241EC:word32] = ebp
	Mem62[0x100241F0:word32] = dwArg00
	Mem64[0x100241FC:word32] = fp + 0x00000004
	Mem67[0x10024138:word32] = 0x00010001
	Mem69[0x100240F4:word32] = Mem67[0x100241F0:word32]
	Mem70[0x100240E8:word32] = 0xC0000409
	Mem71[0x100240EC:word32] = 0x00000001
	Mem72[0x100240F8:word32] = 0x00000003
	Mem78[0x100240FC:word32] = 0x00000002
	Mem85[0x10024100:word32] = Mem78[0x100240C4:word32]
	Mem92[0x10024104:word32] = Mem85[0x100240C8:word32]
	return fn1000A475(0x10001088)
// DataOut: al cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

l1000A138:
	return eax
// DataOut: al cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000A130_exit:
// DataOut: al eax
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> -812(fp):0x10001088 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000A150(word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000A150_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000A150:
	word32 ecx_21 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	word32 edx_10
	*edxOut = 0x00000000
	word32 ebx_23 = (word32) Mem0[ecx_21 + 0x00000006:word16]
	word32 eax_25 = (word32) Mem0[ecx_21 + 0x00000014:word16] + 0x00000018 + ecx_21 + 0x0000000C
	branch ebx_23 == 0x00000000 l1000A18E
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1000A173:
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:0x00000000 ecx:<invalid> ebx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000A176:
	word32 esi_58 = Mem0[eax_25 + 0x00000000:word32]
	branch dwArg08 <u esi_58 l1000A186
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000A17D:
	branch dwArg08 <u Mem0[eax_25 + 0x00000008:word32] + esi_58 l1000A190
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000A186:
	edx_10 = edx_10 + 0x00000001
	*edxOut = edx_10
	eax_25 = eax_25 + 0x00000028
	branch edx_10 <u ebx_23 l1000A176
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000A18E:
	eax_25 = 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1000A190:
	return eax_25
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1000A150_exit:
// DataOut: eax edx
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> ebx:ebx esi:esi -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn1000A1A0(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1000A1A0_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0034(32) Stack +0004(32)

l1000A1A0:
	word32 eax_16 = Mem0[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 edx_43
	branch fn1000A260(0x10000000, out edx_43) == 0x00000000 l1000A241
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l1000A1ED:
	word32 edx_96
	word32 eax_97 = fn1000A150(0x10000000, dwArg04 - 0x10000000, out edx_96)
	branch eax_97 == 0x00000000 l1000A241
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x0000010B al:<invalid> -48(fp):0x10000000 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1000A3A0 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32)

l1000A241:
	Mem77[fs:0x00000000:word32] = eax_16
	return 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -52(fp):0x10000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1000A3A0 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

l1000A207:
	word32 eax_104 = ~(Mem38[eax_97 + 0x00000024:word32] >>u 0x0000001F)
	Mem110[fs:0x00000000:word32] = eax_16
	return eax_104 & 0x00000001
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -52(fp):0x10000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1000A3A0 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

fn1000A1A0_exit:
// DataOut: eax edx
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> esi:esi ebx:ebx edx:<invalid> al:<invalid> -52(fp):0x10000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1000A3A0 -12(fp):<invalid> -8(fp):0xFFFFFFFE -4(fp):ebp



word32 fn1000A260(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1000A260_entry:
	*edxOut = edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000A260:
	branch Mem0[dwArg04:word16] == 0x5A4D l1000A276
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

l1000A276:
	word32 ecx_38 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	word32 eax_40 = 0x00000000
	branch Mem0[ecx_38:word32] != 0x00004550 l1000A291
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00005A4D -4(fp):ebp

l1000A285:
	word32 edx_54
	*edxOut = 0x0000010B
	eax_40 = (word32) (Mem0[ecx_38 + 0x00000018:word16] == 0x010B) (alias)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp

l1000A291:
	return eax_40
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x0000010B al:Test(EQ,Z) -4(fp):ebp

l1000A272:
	return 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00005A4D -4(fp):ebp

fn1000A260_exit:
// DataOut: eax edx
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:0x0000010B al:Test(EQ,Z) -4(fp):ebp



void fn1000A293()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esi esp
fn1000A293_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l1000A293:
	word32 eax_18 = Mem0[0x100240C4:word32]
	branch eax_18 == 0xBB40E64E l1000A2C5
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l1000A2B8:
	branch (eax_18 & 0xFFFF0000) == 0x00000000 l1000A2C5
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l1000A2C5:
	GetSystemTimeAsFileTime(fp - 0x00000010)
	word32 eax_62 = GetTickCount() ^ (((dwLoc0C & 0x00000000 ^ dwLoc10 & 0x00000000) ^ GetCurrentProcessId()) ^ GetCurrentThreadId()) ^ fp - 0x00000008
	QueryPerformanceCounter(fp - 0x00000018)
	word32 ecx_74 = eax_62 ^ (dwLoc14 ^ dwLoc18)
	branch ecx_74 == 0xBB40E64E l1000A31C
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000A314:
	branch (Mem0[0x100240C4:word32] & 0xFFFF0000) != 0x00000000 l1000A321
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000A31C:
	ecx_74 = 0xBB40E64F
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000A321:
	Mem81[0x100240C4:word32] = ecx_74
	Mem83[0x100240C8:word32] = ~ecx_74
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000A2BC:
	Mem95[0x100240C8:word32] = ~eax_18
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000A32F:
	return
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000A293_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000A33C(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: ebp esp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn1000A33C_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l1000A33C:
	word32 esp_14 = fp - 0x00000008 - dwArg08
	Mem17[esp_14 - 0x00000004:word32] = ebx
	Mem20[esp_14 - 0x00000008:word32] = esi
	Mem23[esp_14 - 0x0000000C:word32] = edi
	Mem34[esp_14 - 0x00000010:word32] = Mem23[0x100240C4:word32] ^ fp + 0x00000008
	Mem39[esp_14 - 0x00000014:word32] = dwArg00
	Mem44[fs:0x00000000:word32] = fp - 0x00000008
	return fp + 0x00000008
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000A33C_exit:
// DataOut: ebp esp
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:fp - 0x00000008 ebp:fp + 0x00000008 -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):0x1000A3A0 0(fp):<invalid> 4(fp):0xFFFFFFFE 8(fp):ebp



word32 fn1000A384(word32 eax, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds eax ebp ebx edi edx es esi fs gs ss
// LiveOut: eax ebx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +000C(32) Stack +0010(32)
fn1000A384_entry:
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +000C(32) Stack +0010(32)

l1000A384:
	word32 eax_16 = fn1000A130(eax, Mem0[ebp - 0x0000001C:word32] ^ ebp, edx, ebx, ebp, esi, edi, es, ds, dwLoc04)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +000C(32) Stack +0010(32)

l1000A5F5:
	Mem18[fs:0x00000000:word32] = Mem0[ebp - 0x00000010:word32]
	Mem38[ebp:word32] = dwArg00
	word32 esi_30
	*esiOut = dwArg0C
	word32 ebx_33
	*ebxOut = dwArg10
	return eax_16
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid>

fn1000A384_exit:
// DataOut: eax ebx esi esp
// DataOut (flags): DP
// SymbolicIn: esp:ebp ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid> eax:<invalid>



word32 fn1000A3C5(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut: eax ebx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn1000A3C5_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000A3C5:
	word32 eax_127
	word32 esi_120
	word32 ebx_114
	word32 ebp_105
	word32 edx_113
	word32 edi_115
	selector es_116
	selector ds_117
	word32 ebp_10 = fn1000A33C(ebx, esi, edi, dwLoc0C, 0x1001F068, 0x00000018)
	Mem13[ebp_10 - 0x00000028:word32] = Mem0[ebp_10 - 0x00000028:word32] & 0x00000000
	word32 eax_15 = Mem13[0x10024458:word32]
	Mem16[ebp_10 - 0x00000020:word32] = eax_15
	branch eax_15 != 0xFFFFFFFF l1000A3F8
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(0)

l1000A3F8:
	Mem69[fp - 0x0000000C:word32] = 0x00000008
	word32 esp_71
	word32 ebp_72
	byte SZO_73
	byte C_74
	word32 eax_75
	byte SCZO_76
	byte Z_77
	word32 esi_78
	word32 ecx_79
	word32 edx_80
	word32 ebx_81
	word32 edi_82
	selector es_83
	selector ds_84
	call lock (retsize: 4; depth: 4)
		uses: C,ds,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_15,ebp_10,ebx,ecx,edi,edx,es,esi,esp_68,SCZO_17,SZO_14,Z_18
		defs: C_74,ds_84,eax_75,ebp_72,ebx_81,ecx_79,edi_82,edx_80,es_83,esi_78,esp_71,SCZO_76,SZO_73,Z_77
	Mem88[ebp_72 - 0x00000004:word32] = Mem69[ebp_72 - 0x00000004:word32] & 0x00000000
	Mem92[ebp_72 - 0x00000020:word32] = Mem88[0x10024458:word32]
	Mem94[ebp_72 - 0x00000024:word32] = Mem92[0x10024454:word32]
	Mem97[esp_71:word32] = ebp_72 - 0x00000024
	Mem100[esp_71 - 0x00000004:word32] = ebp_72 - 0x00000020
	Mem103[esp_71 - 0x00000008:word32] = Mem100[ebp_72 + 0x00000008:word32]
	word32 esp_104
	byte SZO_106
	byte C_107
	word32 eax_108
	byte SCZO_109
	byte Z_110
	word32 esi_111
	word32 ecx_112
	call _dllonexit (retsize: 4; depth: 4)
		uses: C_90,ds_84,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_98,ebp_72,ebx_81,ecx_85,edi_82,edx_80,es_83,esi_78,esp_102,SCZO_76,SZO_89,Z_77
		defs: C_107,ds_117,eax_108,ebp_105,ebx_114,ecx_112,edi_115,edx_113,es_116,esi_111,esp_104,SCZO_109,SZO_106,Z_110
	Mem121[ebp_105 - 0x00000028:word32] = eax_108
	Mem123[0x10024458:word32] = Mem121[ebp_105 - 0x00000020:word32]
	Mem125[0x10024454:word32] = Mem123[ebp_105 - 0x00000024:word32]
	Mem126[ebp_105 - 0x00000004:word32] = 0xFFFFFFFE
	fn1000A455()
	esi_120 = eax_108
	eax_127 = eax_108
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> -8(fp):0x1001F068 -4(fp):0x00000018
// LocalsOut: Local -0004(0)

l1000A3E2:
	Mem44[fp - 0x0000000C:word32] = Mem16[ebp_10 + 0x00000008:word32]
	word32 esp_51
	byte SZO_53
	byte C_54
	word32 eax_55
	byte SCZO_56
	byte Z_57
	word32 ecx_59
	call Mem44[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C,ds,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_15,ebp_10,ebx,ecx_46,edi,edx,es,esi_45,esp_43,SCZO_17,SZO_14,Z_18
		defs: C_54,ds_64,eax_55,ebp_52,ebx_61,ecx_59,edi_62,edx_60,es_63,esi_58,esp_51,SCZO_56,SZO_53,Z_57
	eax_127 = _onexit(Mem44[esp_51:_onexit_t])
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> -8(fp):0x1001F068 -4(fp):0x00000018
// LocalsOut: Local -0004(0)

l1000A44C:
	word32 ebx_37
	word32 esi_38
	return fn1000A384(eax_127, edx_113, ebx_114, ebp_105, esi_120, edi_115, es_116, ds_117, 0x00000018, dwArg00, dwArg04, dwArg08, dwArg0C, out ebx_37, out esi_38)
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x1001F068 -4(fp):0x00000018

fn1000A3C5_exit:
// DataOut: eax ebx esi esp
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> ebx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x1001F068 -4(fp):0x00000018



void fn1000A455()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ch cl cx ecx esp rcx rsp sp spl
// Preserved:
fn1000A455_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000A455:
	word32 esp_4
	word32 ecx_5
	call unlock (retsize: 4; depth: 8)
		uses: dwLoc04_3,esp_2
		defs: ecx_5,esp_4
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000A455_exit:
// DataOut:
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> ecx:<invalid> -4(fp):0x00000008



word32 fn1000A45E(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut: ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp edi esp
fn1000A45E_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000A45E:
	word32 ebx_17
	word32 esi_18
	fn1000A3C5(edx, ebx, esi, edi, es, ds, out ebx_17, out esi_18)
	return ebx_17
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000A45E_exit:
// DataOut: ebx esi
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000A475(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al eax
// Trashed: ah al ax eax rax
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1000A475_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000A475:
	SetUnhandledExceptionFilter(0x00000000)
	UnhandledExceptionFilter(dwArg04)
	return TerminateProcess(GetCurrentProcess(), 0xC0000409)
// DataOut: al cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000A475_exit:
// DataOut: al eax
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> -12(fp):<invalid> -8(fp):0xC0000409 -4(fp):ebp



void fn1000B53C(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0004(32)
// Terminates process
fn1000B53C_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000B53C:
	fn1000B5C5()
	word32 ecx_9 = Mem0[0x100240CC:word32]
	Mem14[0x100240CC:word32] = ecx_9 + 0x00000001
	Mem15[dwArg04:word32] = ecx_9 + 0x00000001
	word32 ecx_19 = Mem15[Mem15[fs:0x0000002C:word32] + Mem15[0x1002444C:word32] * 0x00000004:word32]
	Mem22[ecx_19 + 0x00000004:word32] = Mem15[0x100240CC:word32]
	fn1000B631()
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)
// Terminates process

l1000B5D1:
	word32 eax_115
	Mem27[fp - 0x00000004:word32] = ebp
	Mem30[fp - 0x00000008:word32] = ecx_19
	Mem33[fp - 0x00000008:word32] = Mem30[0x100240C4:word32] ^ fp - 0x00000004
	word32 edi_25 = edi
	word32 ebp_28 = fp - 0x00000004
	word32 eax_34 = Mem33[0x1002443C:word32]
	branch eax_34 != 0x00000000 l1000B610
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: ebp:<invalid> esp:esp + 0x00000004 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000B610:
	Mem109[fp - 0x0000000C:word32] = eax_34
	SetEvent(Mem109[fp - 0x0000000C:HANDLE])
	Mem114[fp - 0x0000000C:word32] = Mem109[0x1002443C:word32]
	eax_115 = ResetEvent(Mem114[fp - 0x0000000C:HANDLE])
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: ebp:esp + 0x00000008 esp:esp + 0x00000004 edi:edi eax:<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000B5EA:
	Mem59[fp - 0x0000000C:word32] = esi
	word32 esi_60 = Mem59[0x100240C4:word32]
	byte cl_64 = (byte) (esi_60 & 0x0000001F)
	word32 esi_67 = __ror(esi_60 ^ Mem59[0x10024444:word32], cl_64)
	Mem70[fp - 0x00000010:word32] = 0x10024438
	word32 esp_76
	word32 edi_77
	word32 ebp_78
	word32 ecx_79
	word32 eax_80
	byte SZO_81
	selector fs_82
	byte C_83
	byte Z_84
	word32 esi_85
	byte cl_86
	word32 edx_87
	word32 ebx_88
	selector es_89
	selector ds_90
	call Mem70[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_68,cl_64,ds,dwLoc04_6,eax_34,ebp_28,ebx,ecx_71,edi_25,edx,es,esi_67,esp_69,fs,SZO_65,Z_36
		defs: C_83,cl_86,ds_90,eax_80,ebp_78,ebx_88,ecx_79,edi_77,edx_87,es_89,esi_85,esp_76,fs_82,SZO_81,Z_84
	word32 esp_91
	word32 ecx_94
	byte SZO_96
	selector fs_97
	byte C_98
	byte Z_99
	word32 esi_100
	byte cl_101
	call esi_85 (retsize: 4; depth: 4)
		uses: C_83,cl_86,ds_90,dwLoc04_6,eax_80,ebp_78,ebx_88,ecx_79,edi_77,edx_87,es_89,esi_85,esp_76,fs_82,SZO_81,Z_84
		defs: C_98,cl_101,ds_105,eax_95,ebp_93,ebx_103,ecx_94,edi_92,edx_102,es_104,esi_100,esp_91,fs_97,SZO_96,Z_99
	esi = Mem70[esp_91:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: ebp:esp + 0x00000008 esp:esp + 0x00000004 edi:edi eax:<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000B623:
	fn1000A130(eax_115, Mem33[ebp_28 - 0x00000004:word32] ^ ebp_28, edx, ebx, ebp_28, esi, edi_25, es, ds, ebp)
	return
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: ebp:esp + 0x00000008 esp:<invalid> edi:edi eax:<invalid> esi:<invalid> ecx:<invalid> -4(fp):ebp

fn1000B53C_exit:
// DataOut:
// DataOut (flags): DP
// SymbolicIn: ebp:<invalid> esp:esp + 0x00000014 edi:edi eax:<invalid> esi:<invalid> ecx:<invalid> -4(fp):ebp



void fn1000B57D(word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0004(32)
// Terminates process
fn1000B57D_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000B57D:
	fn1000B5C5()
	word32 esi_12 = dwArg04
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B595:
	branch Mem0[esi_12:word32] == 0x00000000 l1000B5BB
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B5BB:
	Mem52[esi_12:word32] = Mem0[esi_12:word32] | 0xFFFFFFFF
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B59A:
	branch Mem0[esi_12:word32] == 0xFFFFFFFF l1000B58D
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B58D:
	esi_12 = fn1000B63D(edx, ebx, fp - 0x00000004, edi, es, ds, 0x00000064)
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B59F:
	Mem39[Mem0[Mem0[fs:0x0000002C:word32] + Mem0[0x1002444C:word32] * 0x00000004:word32] + 0x00000004:word32] = Mem0[0x100240CC:word32]
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B5BE:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp

l1000B5BF_thunk_fn1000B631:
	fn1000B631()
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ecx:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// Terminates process

fn1000B57D_exit:
// DataOut:
// DataOut (flags): DP
// SymbolicIn: -12(fp):0x00000064 -8(fp):esi -4(fp):ebp



void fn1000B5C5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: esp
fn1000B5C5_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000B5C5:
	EnterCriticalSection(0x10024420)
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000B5C5_exit:
// DataOut:
// DataOut (flags): DP
// SymbolicIn: esp:fp -4(fp):0x10024420



void fn1000B631()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1000B631_exit:
// DataOut:
// DataOut (flags): DP
// SymbolicIn:

fn1000B631_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000B631:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn1000B63D(word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx eax ecx esi rax rcx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1000B63D_entry:
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000B63D:
	word32 esp_114
	word32 eax_104
	word32 edi_3 = edi
	word32 ebp_34 = fp - 0x00000004
	word32 eax_13 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	branch Mem0[0x1002443C:word32] != 0x00000000 l1000B688
// DataOut: cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32)

l1000B688:
	fn1000B631()
	word32 eax_113 = WaitForSingleObjectEx(Mem0[0x1002443C:word32], dwArg04, 0x00000000)
	fn1000B5C5()
	esp_114 = fp - 0x0000000C
	eax_104 = DPB(eax_113, eax_113 == 0x00000000, 0) (alias)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)
// Terminates process

l1000B657:
	word32 esi_46 = Mem0[0x100240C4:word32]
	byte cl_54 = (byte) (esi_46 & 0x0000001F)
	word32 esi_57 = __ror(esi_46 ^ Mem0[0x10024440:word32], cl_54)
	word32 esp_68
	word32 edi_69
	word32 ebp_70
	word32 ecx_71
	word32 eax_72
	byte SZO_73
	byte C_74
	byte SCZO_75
	word32 esi_76
	byte Z_77
	byte cl_78
	byte al_79
	word32 edx_80
	word32 ebx_81
	selector es_82
	selector ds_83
	call Mem0[0x10025410:word32] (retsize: 4; depth: 28)
		uses: al_14,C_58,cl_54,ds,dwLoc04_6,dwLoc08_15,dwLoc0C_20,dwLoc10_51,dwLoc14_60,dwLoc18_62,eax_13,ebp_7,ebx,ecx_63,edi_3,edx,es,esi_57,esp_61,SCZO_16,SZO_55,Z_17
		defs: al_79,C_74,cl_78,ds_83,eax_72,ebp_70,ebx_81,ecx_71,edi_69,edx_80,es_82,esi_76,esp_68,SCZO_75,SZO_73,Z_77
	word32 ecx_87
	word32 eax_88
	byte SZO_89
	byte C_90
	byte SCZO_91
	word32 esi_92
	byte Z_93
	byte cl_94
	byte al_95
	call esi_76 (retsize: 4; depth: 4)
		uses: al_79,C_74,cl_78,ds_83,dwLoc04_6,dwLoc08_15,dwLoc0C_20,dwLoc10_51,dwLoc14_60,dwLoc18_62,eax_72,ebp_70,ebx_81,ecx_71,edi_69,edx_80,es_82,esi_76,esp_68,SCZO_75,SZO_73,Z_77
		defs: al_95,C_90,cl_94,ds_99,eax_88,ebp_86,ebx_97,ecx_87,edi_85,edx_96,es_98,esi_92,esp_84,SCZO_91,SZO_89,Z_93
	eax_104 = DPB(eax_88, eax_88 != 0x00000000, 0) (alias)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000B6AA:
	word32 esi_40 = Mem0[esp_114:word32]
	fn1000A130(eax_104, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_34, esi_40, edi_3, es, ds, ebp)
	return esi_40
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -24(fp):0x10024438 -20(fp):0x10024420 -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1000B63D_exit:
// DataOut: esi
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -24(fp):0x10024438 -20(fp):0x10024420 -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn1000BA48(word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es fs gs ss
// LiveOut: eax ebp edi edx esi esp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000BA48_entry:
	*edxOut = edx
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000BA48:
	Mem16[0x10024480:word32] = dwArg04
	word32 esp_17 = fp - 0x0000000C
	word32 esi_20 = 0x00000001
	branch dwArg08 == 0x00000000 l1000BA77
// DataOut: cs ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000BA77:
	word32 edi_71
	word32 ebp_72
	word32 eax_73
	word32 ecx_74
	byte SZO_76
	byte C_77
	byte SCZO_78
	byte Z_79
	word32 edx_80
	word32 ebx_81
	selector es_82
	selector ds_83
	call ntdll.dll!EtwEventUnregister (retsize: 4; depth: 24)
		uses: C,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_18,dwLoc10_66,dwLoc14_69,eax_21,ebp_7,ebx,ecx_11,edi_19,edx,es,esi_20,esp_68,SCZO_22,SZO,Z_23
		defs: C_77,ds_83,eax_73,ebp_72,ebx_81,ecx_74,edi_71,edx_80,es_82,esi_75,esp_70,SCZO_78,SZO_76,Z_79
	Mem84[0x10024020:word32] = 0x00000000
	Mem85[0x10024024:word32] = 0x00000000
	Mem86[0x10024008:word32] = 0x00000000
	word32 edx_87
	*edxOut = fn10009510()
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:0x00000001 -12(fp):edi -8(fp):esi -4(fp):ebp

l1000BA64:
	branch dwArg08 != 0x00000001 l1000BAA0
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:0x00000001 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000BA68:
	fn10009330(dwArg04)
	esi_20 = fn1000D35B(edx, ebx, fp - 0x00000004, es, ds)
	esp_17 = fp - 0x0000000C
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:0x00000001 -12(fp):edi -8(fp):esi -4(fp):ebp

l1000BAA0:
	word32 esp_38 = esp_17 + 0x00000004
	word32 edi_37
	*ediOut = Mem16[esp_17:word32]
	word32 esi_40
	*esiOut = Mem16[esp_38:word32]
	word32 ebp_42
	*ebpOut = Mem16[esp_38 + 0x00000004:word32]
	return esi_20
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn1000BA48_exit:
// DataOut: eax ebp edi edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn1000D35B(word32 edx, word32 ebx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edx es fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
fn1000D35B_entry:
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000D35B:
	word32 eax_11 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	Mem47[0x10024028:word32] = Mem0[0x10024028:word32] & 0x00000000
	Mem50[0x1002402C:word32] = Mem47[0x1002402C:word32] & 0x00000000
	word32 edi_54
	byte SCZO_56
	word32 eax_57
	byte SZO_58
	byte C_59
	word32 esi_60
	byte Z_61
	word16 si_62
	word32 ecx_63
	selector ds_130
	selector es_129
	word32 ebx_128
	word32 edx_127
	word32 ebp_118
	word32 esp_116
	call ntdll.dll!EtwEventRegister (retsize: 4; depth: 52)
		uses: C_52,dwLoc04_6,dwLoc08_12,dwLoc0C_43,dwLoc10_39,dwLoc14_35,dwLoc18_25,dwLoc1C_15,dwLoc20_19,dwLoc24_22,dwLoc28_29,dwLoc2C_31,dwLoc30_33,eax_17,ebp_7,edi_45,esi_44,esp_32,SZO_51
		defs: C_59,ds_67,eax_57,ebp_55,ebx_65,ecx_63,edi_54,edx_64,es_66,esi_60,esp_53,SCZO_56,si_62,SZO_58,Z_61
	word32 esi_123 = fp - 0x00000018
	word16 si_69 = (word16) (fp - 0x00000018)
	branch (fp - 0x00000018 & fp - 0x00000018) == 0x00000000 l1000D3B9
// DataOut: cs ds ebp ebx edx es esi esp fs gs si ss
// DataOut (flags): SZDOP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D3B9:
	word32 ecx_102 = Mem50[0x1002400C:word32]
	word32 eax_103 = (word32) Mem50[ecx_102:word16]
	Mem105[esp_116 - 0x00000004:word32] = eax_103
	Mem107[esp_116 - 0x00000008:word32] = ecx_102
	Mem109[esp_116 - 0x0000000C:word32] = 0x00000002
	Mem112[esp_116 - 0x00000010:word32] = Mem109[0x10024024:word32]
	Mem115[esp_116 - 0x00000014:word32] = Mem112[0x10024020:word32]
	word32 edi_117
	byte SCZO_119
	word32 eax_120
	byte SZO_121
	byte C_122
	byte Z_124
	word16 si_125
	word32 ecx_126
	call ntdll.dll!EtwEventSetInformation (retsize: 4; depth: 4)
		uses: C_72,ds_67,dwLoc04_6,dwLoc08_12,dwLoc0C_43,dwLoc10_39,dwLoc14_35,dwLoc18_25,dwLoc1C_15,dwLoc20_19,dwLoc24_22,dwLoc28_29,dwLoc2C_31,dwLoc30_33,eax_103,ebp_55,ebx_65,ecx_102,edi_54,edx_64,es_66,esi_68,esp_114,SCZO_73,si_69,SZO_70,Z_71
		defs: C_122,ds_130,eax_120,ebp_118,ebx_128,ecx_126,edi_117,edx_127,es_129,esi_123,esp_116,SCZO_119,si_125,SZO_121,Z_124
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x10009760 -40(fp):0x10024008 -36(fp):0x10024020 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D3AC:
	branch (fp - 0x00000018 & fp - 0x00000018) <= 0x00000000 l1000D3D8
// DataOut: cs ds ebp ebx edx es esi esp fs gs si ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x10009760 -40(fp):0x10024008 -36(fp):0x10024020 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D3AE:
	esi_123 = (word32) si_69 | 0x80070000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x10009760 -40(fp):0x10024008 -36(fp):0x10024020 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D3D8:
	word32 esi_90 = Mem50[esp_116 + 0x00000004:word32]
	fn1000A130(esi_123, eax_11 ^ fp - 0x00000004, edx_127, ebx_128, ebp_118, esi_90, Mem50[esp_116:word32], es_129, ds_130, ebp)
	return esi_90
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x10009760 -40(fp):0x10024008 -36(fp):0x10024020 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000D35B_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x10009760 -40(fp):0x10024008 -36(fp):0x10024020 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000D51F(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1000D51F_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D51F:
	word32 eax_15 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	Mem27[dwArg0C:word32] = Mem0[dwArg0C:word32] & 0x00000000
	word32 esp_37
	word32 edi_38
	word32 ebp_39
	word32 ecx_40
	word32 eax_41
	byte SZO_42
	byte C_43
	word32 ebx_44
	word32 esi_45
	byte SCZO_46
	byte Z_47
	word32 edx_48
	selector es_49
	selector ds_50
	call Mem27[0x10025410:word32] (retsize: 4; depth: 32)
		uses: C_29,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_25,dwLoc18_31,dwLoc1C_34,eax_32,ebp_7,ebx_22,ecx_36,edi_3,esi_35,esp_33,SZO_28
		defs: C_43,ds_50,eax_41,ebp_39,ebx_44,ecx_40,edi_38,edx_48,es_49,esi_45,esp_37,SCZO_46,SZO_42,Z_47
	word32 esp_51
	word32 edi_52
	word32 ebp_53
	word32 ecx_54
	word32 eax_55
	byte SZO_56
	byte C_57
	word32 ebx_58
	word32 esi_59
	byte SCZO_60
	byte Z_61
	word32 edx_62
	selector es_63
	selector ds_64
	call esi_45 (retsize: 4; depth: 4)
		uses: C_43,ds_50,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_25,dwLoc18_31,dwLoc1C_34,eax_41,ebp_39,ebx_44,ecx_40,edi_38,edx_48,es_49,esi_45,esp_37,SCZO_46,SZO_42,Z_47
		defs: C_57,ds_64,eax_55,ebp_53,ebx_58,ecx_54,edi_52,edx_62,es_63,esi_59,esp_51,SCZO_60,SZO_56,Z_61
	Mem67[esp_51 - 0x00000004:word32] = ebx_58
	word32 esp_71
	word32 edi_72
	word32 ebp_73
	word32 ecx_74
	word32 eax_75
	byte SZO_76
	byte C_77
	word32 ebx_78
	word32 esi_79
	byte SCZO_80
	byte Z_81
	word32 edx_82
	selector es_83
	selector ds_84
	call Mem67[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_57,ds_64,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_25,dwLoc18_31,dwLoc1C_34,eax_55,ebp_53,ebx_58,ecx_70,edi_68,edx_62,es_63,esi_69,esp_66,SCZO_60,SZO_56,Z_61
		defs: C_77,ds_84,eax_75,ebp_73,ebx_78,ecx_74,edi_72,edx_82,es_83,esi_79,esp_71,SCZO_80,SZO_76,Z_81
	word32 esp_85
	word32 ebp_87
	word32 ecx_88
	word32 eax_89
	byte SZO_90
	byte C_91
	word32 ebx_92
	word32 esi_93
	byte SCZO_94
	byte Z_95
	selector es_97
	selector ds_98
	word32 edi_102
	word32 edx_101
	call esi_79 (retsize: 4; depth: 4)
		uses: C_77,ds_84,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_25,dwLoc18_31,dwLoc1C_34,eax_75,ebp_73,ebx_78,ecx_74,edi_72,edx_82,es_83,esi_79,esp_71,SCZO_80,SZO_76,Z_81
		defs: C_91,ds_98,eax_89,ebp_87,ebx_92,ecx_88,edi_86,edx_96,es_97,esi_93,esp_85,SCZO_94,SZO_90,Z_95
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D57A:
	word32 eax_111
	branch edi_102 <u eax_89 l1000D562
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D562:
	word32 ecx_130 = Mem67[edi_102:word32]
	branch ecx_130 == 0x00000000 l1000D577
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D568:
	*edxOut = dwArg04
	branch fn1000D7C7(Mem67[ecx_130 + 0x00000004:word32], dwArg04) != 0x00000000 l1000D596
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D596:
	Mem151[esp_85 - 0x00000004:word32] = dwArg0C
	Mem156[esp_85 - 0x00000008:word32] = Mem151[edi_102:word32]
	Mem161[esp_85 - 0x0000000C:word32] = dwArg08
	*edxOut = fp - 0x0000000C
	eax_111 = fn1000D65C(ebx_92, fp - 0x0000000C, ebp_87, es_97, ds_98, dwArg00, dwArg04, dwArg08)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D577:
	edi_102 = edi_102 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D57E:
	eax_111 = 0x80040111
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D583:
	word32 esi_116 = Mem67[esp_85 + 0x00000004:word32]
	*esiOut = esi_116
	return fn1000A130(eax_111, eax_15 ^ fp - 0x00000004, edx_101, Mem67[esp_85 + 0x00000008:word32], ebp_87, esi_116, Mem67[esp_85:word32], es_97, ds_98, ebp)
// DataOut: cs ds eax edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000D51F_exit:
// DataOut: eax edx esi
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000D5FD(word32 edx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi esp rax rcx rdi rsi rsp si sil sp spl
// Preserved: edi esp
fn1000D5FD_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000D5FD:
	branch Mem0[0x10024618:word32] <= Mem0[Mem0[Mem0[fs:0x0000002C:word32] + Mem0[0x1002444C:word32] * 0x00000004:word32] + 0x00000004:word32] l1000D658
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1000D61F:
	fn1000B57D(edx, ebx, 0x1002461C, es, ds, 0x10024618)
	branch Mem0[0x10024618:word32] != 0xFFFFFFFF l1000D657
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edi:0x1002461C -4(fp):edi
// LocalsOut: Local -0004(32)
// Terminates process

l1000D635:
	Mem48[fp - 0x0000000C:word32] = 0x1000CE00
	Mem49[0x10024484:word32] = 0x1002461C
	Mem50[0x1002461C:word32] = 0x10001058
	word32 esi_52
	word32 ebx_53 = fn1000A45E(edx, ebx, 0x10024618, 0x1002461C, es, ds, dwArg00, out esi_52)
	Mem55[fp - 0x00000010:word32] = esi_52
	fn1000B53C(edx, ebx_53, ebp, esi_52, 0x1002461C, es, ds, dwArg00)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: ecx:<invalid> esp:esp + 0x00000004 -12(fp):0x10024618 -8(fp):esi -4(fp):edi
// Terminates process

l1000D657:
	esi = Mem0[fp - 0x00000008:word32]
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: ecx:<invalid> esp:<invalid> -12(fp):0x10024618 -8(fp):esi -4(fp):edi

l1000D658:
	return esi
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:0x1002461C esi:<invalid> -12(fp):0x10024618 -8(fp):esi -4(fp):edi

fn1000D5FD_exit:
// DataOut: esi
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> eax:0x1002461C ecx:<invalid> edi:<invalid> esi:<invalid> -12(fp):0x10024618 -8(fp):esi -4(fp):edi



word32 fn1000D65C(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1000D65C_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D65C:
	word32 ebp_101
	word32 edx_108
	selector es_112
	selector ds_113
	word32 esp_133
	word32 eax_103
	word32 eax_11 = Mem0[0x100240C4:word32] ^ fp - 0x00000004
	Mem28[dwArg0C:word32] = 0x00000000
	word32 esp_23 = fp - 0x00000020
	branch Mem28[Mem28[dwArg08 + 0x0000000C:word32]:word32] == 0x00000000 l1000D6F4
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D68B:
	word32 esp_348
	word32 edi_349
	word32 ebp_350
	byte SCZO_351
	word32 eax_352
	byte SZO_353
	byte C_354
	word32 ebx_355
	word32 esi_356
	word32 edx_357
	word32 ecx_358
	byte Z_359
	byte S_360
	selector es_361
	selector ds_362
	call Mem28[0x10025410:word32] (retsize: 4; depth: 40)
		uses: C,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_345,eax_343,ebp_7,ebx_19,ecx_347,edi_25,edx,es,esi_346,esp_344,S,SCZO_33,SZO,Z_34
		defs: C_354,ds_362,eax_352,ebp_350,ebx_355,ecx_358,edi_349,edx_357,es_361,esi_356,esp_348,S_360,SCZO_351,SZO_353,Z_359
	word32 esp_363
	word32 edi_364
	word32 ebp_365
	byte SCZO_366
	word32 eax_367
	byte SZO_368
	byte C_369
	word32 ebx_370
	word32 esi_371
	word32 edx_372
	word32 ecx_373
	byte Z_374
	byte S_375
	selector es_376
	selector ds_377
	call esi_356 (retsize: 4; depth: 4)
		uses: C_354,ds_362,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_345,eax_352,ebp_350,ebx_355,ecx_358,edi_349,edx_357,es_361,esi_356,esp_348,S_360,SCZO_351,SZO_353,Z_359
		defs: C_369,ds_377,eax_367,ebp_365,ebx_370,ecx_373,edi_364,edx_372,es_376,esi_371,esp_363,S_375,SCZO_366,SZO_368,Z_374
	Mem380[esp_363 - 0x00000004:word32] = eax_367
	AcquireSRWLockShared(Mem380[esp_363 - 0x00000004:PSRWLOCK])
	esp_23 = esp_363
	word32 ecx_383 = Mem380[dwArg08 + 0x0000000C:word32]
	branch Mem380[ecx_383:word32] == 0x00000000 l1000D6E2
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp - 0x00000020 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D6E2:
	branch eax_367 == 0x00000000 l1000D6F2
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000D6F2:
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +000C(32)

l1000D6E6:
	Mem446[esp_363 - 0x00000004:word32] = eax_367
	ReleaseSRWLockShared(Mem446[esp_363 - 0x00000004:PSRWLOCK])
	esp_23 = esp_363
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +000C(32)

l1000D6F4:
	word32 esp_67 = esp_23 - 0x00000004
	Mem68[esp_67:word32] = fp - 0x0000000C
	Mem72[esp_67 - 0x00000004:word32] = dwArg04
	Mem75[esp_67 - 0x00000008:word32] = dwArg08
	Mem78[esp_67 - 0x0000000C:word32] = edx
	word32 esp_84
	word32 edi_85
	word32 ebp_86
	byte SCZO_87
	word32 eax_88
	byte SZO_89
	byte C_90
	word32 ebx_91
	word32 esi_92
	word32 edx_93
	word32 ecx_94
	byte Z_95
	byte S_96
	selector es_97
	selector ds_98
	call Mem78[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_66,ebp_7,ebx_63,ecx_73,edi_25,edx,es,esi_65,esp_77,S,SCZO_33,SZO,Z_34
		defs: C_90,ds_98,eax_88,ebp_86,ebx_91,ecx_94,edi_85,edx_93,es_97,esi_92,esp_84,S_96,SCZO_87,SZO_89,Z_95
	word32 edi_100
	byte SCZO_102
	byte SZO_104
	byte C_105
	word32 ebx_106
	word32 esi_107
	word32 ecx_109
	byte Z_110
	byte S_111
	call esi_92 (retsize: 4; depth: 4)
		uses: C_90,ds_98,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_88,ebp_86,ebx_91,ecx_94,edi_85,edx_93,es_97,esi_92,esp_84,S_96,SCZO_87,SZO_89,Z_95
		defs: C_105,ds_113,eax_103,ebp_101,ebx_106,ecx_109,edi_100,edx_108,es_112,esi_107,esp_99,S_111,SCZO_102,SZO_104,Z_110
	branch eax_103 < 0x00000000 l1000D7B4
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +000C(32)

l1000D713:
	word32 edi_128
	branch (Mem78[edx:byte] & 0x04) != 0x00 l1000D7AA
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Stack +000C(32)

l1000D71F:
	word32 esp_212
	Mem157[esp_133 - 0x00000004:word32] = ecx
	word32 esp_161
	word32 edi_162
	word32 ebp_163
	byte SCZO_164
	word32 eax_165
	byte SZO_166
	byte C_167
	word32 ebx_168
	word32 esi_169
	word32 edx_170
	word32 ecx_171
	byte Z_172
	byte S_173
	selector es_174
	selector ds_175
	call Mem157[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_120,ds_113,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_158,ebp_101,ebx_106,ecx_160,edi_100,edx_108,es_112,esi_159,esp_156,S_115,SCZO_102,SZO_118,Z_119
		defs: C_167,ds_175,eax_165,ebp_163,ebx_168,ecx_171,edi_162,edx_170,es_174,esi_169,esp_161,S_173,SCZO_164,SZO_166,Z_172
	word32 esp_176
	byte SCZO_179
	word32 eax_180
	byte SZO_181
	byte C_182
	word32 ebx_183
	word32 esi_184
	word32 ecx_186
	byte Z_187
	byte S_188
	word32 edi_177
	call esi_169 (retsize: 4; depth: 4)
		uses: C_167,ds_175,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_165,ebp_163,ebx_168,ecx_171,edi_162,edx_170,es_174,esi_169,esp_161,S_173,SCZO_164,SZO_166,Z_172
		defs: C_182,ds_190,eax_180,ebp_178,ebx_183,ecx_186,edi_177,edx_185,es_189,esi_184,esp_176,S_188,SCZO_179,SZO_181,Z_187
	Mem193[esp_176 - 0x00000004:word32] = eax_180
	AcquireSRWLockExclusive(Mem193[esp_176 - 0x00000004:PSRWLOCK])
	word32 eax_197 = Mem193[Mem193[ebx_183 + 0x0000000C:word32]:word32]
	branch eax_197 != 0x00000000 l1000D757
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:edx ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Stack +000C(32)

l1000D757:
	Mem303[esp_176 - 0x00000004:word32] = eax_197
	word32 eax_304 = DecodePointer(Mem303[esp_176 - 0x00000004:PVOID])
	Mem308[esp_176 - 0x00000004:word32] = eax_304
	word32 esp_312
	word32 edi_313
	word32 ebp_314
	byte SCZO_315
	word32 eax_316
	byte SZO_317
	byte C_318
	word32 ebx_319
	word32 esi_320
	word32 edx_321
	word32 ecx_322
	byte Z_323
	byte S_324
	selector es_325
	selector ds_326
	call Mem308[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_200,ds_190,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_194,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_304,ebp_178,ebx_183,ecx_311,edi_306,edx_185,es_189,esi_310,esp_307,S_188,SCZO_179,SZO_198,Z_199
		defs: C_318,ds_326,eax_316,ebp_314,ebx_319,ecx_322,edi_313,edx_321,es_325,esi_320,esp_312,S_324,SCZO_315,SZO_317,Z_323
	byte SCZO_330
	word32 eax_331
	byte SZO_332
	byte C_333
	word32 ebx_334
	word32 esi_335
	word32 ecx_337
	byte Z_338
	byte S_339
	call esi_320 (retsize: 4; depth: 4)
		uses: C_318,ds_326,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_194,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_316,ebp_314,ebx_319,ecx_322,edi_313,edx_321,es_325,esi_320,esp_312,S_324,SCZO_315,SZO_317,Z_323
		defs: C_333,ds_341,eax_331,ebp_329,ebx_334,ecx_337,edi_328,edx_336,es_340,esi_335,esp_327,S_339,SCZO_330,SZO_332,Z_338
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D747:
	Mem297[esp_176 - 0x00000004:word32] = 0x00000000
	Mem301[Mem297[ebx_183 + 0x0000000C:word32]:word32] = EncodePointer(Mem297[esp_176 - 0x00000004:PVOID])
	esp_212 = esp_176
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D773:
	branch eax_180 == 0x00000000 l1000D77E
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D777:
	word32 esp_292 = esp_212 - 0x00000004
	Mem293[esp_292:word32] = eax_180
	ReleaseSRWLockExclusive(Mem293[esp_292:PSRWLOCK])
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D77E:
	esp_133 = esp_212
	branch edi_177 == 0x00000000 l1000D7AA
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D7AA:
	edi_128 = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D782:
	word32 esp_221 = esp_212 - 0x00000004
	Mem222[esp_221:word32] = 0x00000000
	word32 esp_226
	word32 edi_227
	word32 ebp_228
	byte SCZO_229
	word32 eax_230
	byte SZO_231
	byte C_232
	word32 ebx_233
	word32 esi_234
	word32 edx_235
	word32 ecx_236
	byte Z_237
	byte S_238
	selector es_239
	selector ds_240
	call Mem222[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_219,ds_201,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_194,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_220,ebp_211,ebx_209,ecx_225,edi_206,edx_204,es_202,esi_224,esp_221,S_203,SCZO_205,SZO_217,Z_218
		defs: C_232,ds_240,eax_230,ebp_228,ebx_233,ecx_236,edi_227,edx_235,es_239,esi_234,esp_226,S_238,SCZO_229,SZO_231,Z_237
	word32 esp_241
	word32 edi_242
	word32 ebp_243
	byte SCZO_244
	word32 eax_245
	byte SZO_246
	byte C_247
	word32 ebx_248
	word32 esi_249
	word32 edx_250
	word32 ecx_251
	byte Z_252
	byte S_253
	selector es_254
	selector ds_255
	call esi_234 (retsize: 4; depth: 4)
		uses: C_232,ds_240,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_194,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_230,ebp_228,ebx_233,ecx_236,edi_227,edx_235,es_239,esi_234,esp_226,S_238,SCZO_229,SZO_231,Z_237
		defs: C_247,ds_255,eax_245,ebp_243,ebx_248,ecx_251,edi_242,edx_250,es_254,esi_249,esp_241,S_253,SCZO_244,SZO_246,Z_252
	Mem258[esp_241 - 0x00000004:word32] = 0x00000000
	word32 esp_262
	word32 edi_263
	word32 ebp_264
	byte SCZO_265
	word32 eax_266
	byte SZO_267
	byte C_268
	word32 ebx_269
	word32 esi_270
	word32 edx_271
	word32 ecx_272
	byte Z_273
	byte S_274
	selector es_275
	selector ds_276
	call Mem258[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_247,ds_255,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_194,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_256,ebp_243,ebx_248,ecx_261,edi_242,edx_250,es_254,esi_260,esp_257,S_253,SCZO_244,SZO_246,Z_252
		defs: C_268,ds_276,eax_266,ebp_264,ebx_269,ecx_272,edi_263,edx_271,es_275,esi_270,esp_262,S_274,SCZO_265,SZO_267,Z_273
	byte SCZO_280
	word32 eax_281
	byte SZO_282
	byte C_283
	word32 ebx_284
	word32 esi_285
	word32 ecx_287
	byte Z_288
	byte S_289
	call esi_270 (retsize: 4; depth: 4)
		uses: C_268,ds_276,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_194,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_62,eax_266,ebp_264,ebx_269,ecx_272,edi_263,edx_271,es_275,esi_270,esp_262,S_274,SCZO_265,SZO_267,Z_273
		defs: C_283,ds_291,eax_281,ebp_279,ebx_284,ecx_287,edi_278,edx_286,es_290,esi_285,esp_277,S_289,SCZO_280,SZO_282,Z_288
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +000C(32)

l1000D7AD:
	Mem135[dwArg0C:word32] = edi_128
	eax_103 = 0x00000000
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D6AE:
	Mem388[esp_363 - 0x00000004:word32] = Mem380[ecx_383:word32]
	word32 eax_389 = DecodePointer(Mem388[esp_363 - 0x00000004:PVOID])
	Mem393[esp_363 - 0x00000004:word32] = dwArg0C
	Mem397[esp_363 - 0x00000008:word32] = dwArg04
	Mem400[esp_363 - 0x0000000C:word32] = eax_389
	word32 esp_403
	word32 edi_404
	word32 ebp_405
	byte SCZO_406
	word32 eax_407
	byte SZO_408
	byte C_409
	word32 ebx_410
	word32 esi_411
	word32 edx_412
	word32 ecx_413
	byte Z_414
	byte S_415
	selector es_416
	selector ds_417
	call Mem400[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_369,ds_377,dwLoc04_6,dwLoc08_12,dwLoc0C_394,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_345,eax_389,ebp_365,ebx_378,ecx_402,edi_364,edx_372,es_376,esi_401,esp_399,S_375,SCZO_384,SZO_368,Z_385
		defs: C_409,ds_417,eax_407,ebp_405,ebx_410,ecx_413,edi_404,edx_412,es_416,esi_411,esp_403,S_415,SCZO_406,SZO_408,Z_414
	word32 esp_418
	word32 edi_419
	byte SCZO_421
	word32 eax_422
	byte SZO_423
	byte C_424
	word32 ebx_425
	word32 esi_426
	word32 ecx_428
	byte Z_429
	byte S_430
	call esi_411 (retsize: 4; depth: 4)
		uses: C_409,ds_417,dwLoc04_6,dwLoc08_12,dwLoc0C_394,dwLoc10_32,dwLoc14_27,dwLoc18_17,dwLoc1C_22,dwLoc20_24,dwLoc24_345,eax_407,ebp_405,ebx_410,ecx_413,edi_404,edx_412,es_416,esi_411,esp_403,S_415,SCZO_406,SZO_408,Z_414
		defs: C_424,ds_432,eax_422,ebp_420,ebx_425,ecx_428,edi_419,edx_427,es_431,esi_426,esp_418,S_430,SCZO_421,SZO_423,Z_429
	branch ebx_425 == 0x00000000 l1000D6DB
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D6D4:
	Mem440[esp_418 - 0x00000004:word32] = ebx_425
	ReleaseSRWLockShared(Mem440[esp_418 - 0x00000004:PSRWLOCK])
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D6DB:
	esp_133 = esp_418
	eax_103 = eax_422
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):ecx -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1000D7B4:
	word32 esp_50 = esp_133 + 0x00000004
	return fn1000A130(eax_103, eax_11 ^ fp - 0x00000004, edx_108, Mem28[esp_50 + 0x00000004:word32], ebp_101, Mem28[esp_50:word32], Mem28[esp_133:word32], es_112, ds_113, ebp)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000D65C_exit:
// DataOut: eax
// DataOut (flags): DP
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -48(fp):edx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000D7C7(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: esp
fn1000D7C7_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000D7C7:
	return (word32) (memcmp(ecx, edx, 0x00000010) == 0x00000000)
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

fn1000D7C7_exit:
// DataOut: eax
// DataOut (flags): DP
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> cl:Test(EQ,Z) -12(fp):ecx -8(fp):edx -4(fp):0x00000010



void DllGetActivationFactory(word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
DllGetActivationFactory_entry:
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000D8B0:
	word32 esi_12 = fn1000D5FD(edx, ebx, edi, es, ds)
	word32 ebp_15 = Mem0[fp - 0x00000004:word32]
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1000D3EC:
	word32 esp_134
	word32 ebp_136
	word32 esi_143
	word32 edx_147
	selector es_148
	selector ds_149
	word32 eax_401
	Mem19[fp - 0x00000004:word32] = ebp_15
	Mem24[fp - 0x00000008:word32] = Mem19[0x100240C4:word32] ^ fp - 0x00000004
	word32 eax_25 = Mem24[fp + 0x00000008:word32]
	Mem27[fp - 0x00000044:word32] = ebx
	Mem29[fp - 0x00000048:word32] = esi_12
	word32 esi_30 = Mem29[fp + 0x00000004:word32]
	Mem33[eax_25:word32] = Mem29[eax_25:word32] & 0x00000000
	Mem37[fp - 0x0000004C:word32] = edi
	Mem39[fp - 0x00000050:word32] = esi_30
	Mem40[fp - 0x00000040:word32] = eax_25
	word32 edi_42
	word32 ecx_44
	word32 eax_45
	byte SCZO_46
	byte SZO_47
	byte C_48
	word32 ebx_49
	word32 esi_50
	byte Z_51
	byte S_52
	word16 dx_53
	word32 edx_54
	selector es_55
	selector ds_56
	word32 ebp_110
	word32 esp_111
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsIsStringEmpty (retsize: 4; depth: 4)
		uses: C_35,ds,dwLoc04_6,eax_25,ebp_20,ebx_31,ecx_13,edi_17,edx,es,esi_30,esp_38,SZO_34
		defs: C_48,ds_56,dx_53,eax_45,ebp_43,ebx_49,ecx_44,edi_42,edx_54,es_55,esi_50,esp_41,S_52,SCZO_46,SZO_47,Z_51
	branch eax_45 != 0x00000000 l1000D4EB
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:0x1002461C esi:<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D41E:
	Mem152[esp_111 - 0x00000004:word32] = ebp_110 - 0x00000034
	Mem154[esp_111 - 0x00000008:word32] = esi_50
	word32 edi_156
	word32 ecx_158
	word32 eax_159
	byte SCZO_160
	byte SZO_161
	byte C_162
	word32 ebx_163
	word32 esi_164
	byte Z_165
	byte S_166
	word16 dx_167
	word32 edx_168
	selector es_169
	selector ds_170
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsStringHasEmbeddedNull (retsize: 4; depth: 4)
		uses: C_59,ds_56,dwLoc04_6,dx_53,eax_150,ebp_43,ebx_49,ecx_44,edi_42,edx_54,es_55,esi_50,esp_153,S_52,SCZO_46,SZO_57,Z_58
		defs: C_162,ds_170,dx_167,eax_159,ebp_157,ebx_163,ecx_158,edi_156,edx_168,es_169,esi_164,esp_155,S_166,SCZO_160,SZO_161,Z_165
	branch eax_159 < 0x00000000 l1000D4EB
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D431:
	branch Mem154[ebp_110 - 0x00000034:word32] == 0x00000001 l1000D4EB
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4EB:
	word32 esp_112 = esp_111 - 0x00000004
	Mem113[esp_112:word32] = 0x0000000A
	word32 ecx_114 = Mem113[esp_112:word32]
	word32 eax_116 = ebp_110 - 0x0000002C
	Mem120[esp_112:word32] = eax_116
	word32 esi_117 = 0x100071A4
	word32 edi_118 = ebp_110 - 0x0000002C
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4FA:
	branch ecx_114 == 0x00000000 l1000D4FC
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -48(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4FC:
	Mem130[esp_112 - 0x00000004:word32] = 0x00000013
	Mem133[esp_112 - 0x00000008:word32] = 0x80070057
	word32 edi_135
	word32 ecx_137
	word32 eax_138
	byte SCZO_139
	byte SZO_140
	byte C_141
	word32 ebx_142
	byte Z_144
	byte S_145
	word16 dx_146
	call api-ms-win-core-winrt-error-l1-1-0.dll!RoOriginateErrorW (retsize: 4; depth: 4)
		uses: C_108,ds_100,dwLoc04_6,dx_103,eax_116,ebp_110,ebx_109,ecx_123,edi_121,edx_102,es_101,esi_131,esp_132,S_104,SCZO_106,SZO_107,Z_105
		defs: C_141,ds_149,dx_146,eax_138,ebp_136,ebx_142,ecx_137,edi_135,edx_147,es_148,esi_143,esp_134,S_145,SCZO_139,SZO_140,Z_144
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -48(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4FA_1:
	Mem125[edi_118:word32] = Mem120[esi_117:word32]
	esi_117 = esi_117 + 0x00000004
	edi_118 = edi_118 + 0x00000004
	ecx_114 = ecx_114 - 0x00000001
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -48(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D43B:
	Mem177[esp_111 - 0x00000004:word32] = 0x00000000
	Mem179[esp_111 - 0x00000008:word32] = esi_164
	word32 esp_180
	word32 edi_181
	word32 ebp_182
	word32 ecx_183
	word32 eax_184
	byte SCZO_185
	byte SZO_186
	byte C_187
	word32 ebx_188
	word32 esi_189
	byte Z_190
	byte S_191
	word16 dx_192
	word32 edx_193
	selector es_194
	selector ds_195
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsGetStringRawBuffer (retsize: 4; depth: 4)
		uses: C_173,ds_170,dwLoc04_6,dx_167,eax_159,ebp_157,ebx_163,ecx_158,edi_156,edx_168,es_169,esi_164,esp_178,S_172,SCZO_174,SZO_171,Z_175
		defs: C_187,ds_195,dx_192,eax_184,ebp_182,ebx_188,ecx_183,edi_181,edx_193,es_194,esi_189,esp_180,S_191,SCZO_185,SZO_186,Z_190
	Mem198[esp_180 - 0x00000004:word32] = ebx_188
	Mem199[ebp_182 - 0x00000038:word32] = eax_184
	word32 esp_202
	word32 edi_203
	word32 ebp_204
	word32 ecx_205
	word32 eax_206
	byte SCZO_207
	byte SZO_208
	byte C_209
	word32 ebx_210
	word32 esi_211
	byte Z_212
	byte S_213
	word16 dx_214
	word32 edx_215
	selector es_216
	selector ds_217
	call Mem199[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_187,ds_195,dwLoc04_6,dx_192,eax_184,ebp_182,ebx_188,ecx_201,edi_181,edx_193,es_194,esi_200,esp_197,S_191,SCZO_185,SZO_186,Z_190
		defs: C_209,ds_217,dx_214,eax_206,ebp_204,ebx_210,ecx_205,edi_203,edx_215,es_216,esi_211,esp_202,S_213,SCZO_207,SZO_208,Z_212
	word32 esp_218
	word32 edi_219
	word32 ebp_220
	word32 ecx_221
	word32 eax_222
	byte SCZO_223
	byte SZO_224
	byte C_225
	word32 ebx_226
	word32 esi_227
	byte Z_228
	byte S_229
	word16 dx_230
	word32 edx_231
	selector es_232
	selector ds_233
	call esi_211 (retsize: 4; depth: 4)
		uses: C_209,ds_217,dwLoc04_6,dx_214,eax_206,ebp_204,ebx_210,ecx_205,edi_203,edx_215,es_216,esi_211,esp_202,S_213,SCZO_207,SZO_208,Z_212
		defs: C_225,ds_233,dx_230,eax_222,ebp_220,ebx_226,ecx_221,edi_219,edx_231,es_232,esi_227,esp_218,S_229,SCZO_223,SZO_224,Z_228
	Mem236[esp_218 - 0x00000004:word32] = ebx_226
	word32 esp_240
	word32 edi_241
	word32 ebp_242
	word32 ecx_243
	word32 eax_244
	byte SCZO_245
	byte SZO_246
	byte C_247
	word32 ebx_248
	word32 esi_249
	byte Z_250
	byte S_251
	word16 dx_252
	word32 edx_253
	selector es_254
	selector ds_255
	call Mem236[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_225,ds_233,dwLoc04_6,dx_230,eax_222,ebp_220,ebx_226,ecx_239,edi_237,edx_231,es_232,esi_238,esp_235,S_229,SCZO_223,SZO_224,Z_228
		defs: C_247,ds_255,dx_252,eax_244,ebp_242,ebx_248,ecx_243,edi_241,edx_253,es_254,esi_249,esp_240,S_251,SCZO_245,SZO_246,Z_250
	word32 ebp_258
	word32 ecx_259
	byte SCZO_261
	byte SZO_262
	byte C_263
	word32 ebx_264
	word32 esi_265
	byte Z_266
	byte S_267
	word16 dx_268
	word32 edx_269
	selector es_270
	selector ds_271
	word32 edi_257
	word32 eax_260
	word32 esp_256
	call esi_249 (retsize: 4; depth: 4)
		uses: C_247,ds_255,dwLoc04_6,dx_252,eax_244,ebp_242,ebx_248,ecx_243,edi_241,edx_253,es_254,esi_249,esp_240,S_251,SCZO_245,SZO_246,Z_250
		defs: C_263,ds_271,dx_268,eax_260,ebp_258,ebx_264,ecx_259,edi_257,edx_269,es_270,esi_265,esp_256,S_267,SCZO_261,SZO_262,Z_266
	Mem272[ebp_258 - 0x00000030:word32] = eax_260
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4BA:
	branch edi_257 <u eax_260 l1000D46F
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D46F:
	branch Mem272[edi_257:word32] == 0x00000000 l1000D4B7
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D475:
	word32 esp_333
	word32 edi_334
	word32 ebp_335
	word32 ecx_336
	word32 eax_337
	byte SCZO_338
	byte SZO_339
	byte C_340
	word32 ebx_341
	word32 esi_342
	byte Z_343
	byte S_344
	word16 dx_345
	word32 edx_346
	selector es_347
	selector ds_348
	call Mem272[0x10025410:word32] (retsize: 4; depth: 4)
		uses: C_313,ds_273,dwLoc04_6,dx_276,eax_284,ebp_285,ebx_283,ecx_332,edi_279,edx_275,es_274,esi_331,esp_286,S_277,SCZO_287,SZO_311,Z_312
		defs: C_340,ds_348,dx_345,eax_337,ebp_335,ebx_341,ecx_336,edi_334,edx_346,es_347,esi_342,esp_333,S_344,SCZO_338,SZO_339,Z_343
	word32 ecx_352
	byte SCZO_354
	byte SZO_355
	byte C_356
	word32 ebx_357
	word32 esi_358
	byte Z_359
	byte S_360
	word16 dx_361
	word32 edx_362
	word32 eax_353
	call esi_342 (retsize: 4; depth: 4)
		uses: C_340,ds_348,dwLoc04_6,dx_345,eax_337,ebp_335,ebx_341,ecx_336,edi_334,edx_346,es_347,esi_342,esp_333,S_344,SCZO_338,SZO_339,Z_343
		defs: C_356,ds_364,dx_361,eax_353,ebp_351,ebx_357,ecx_352,edi_350,edx_362,es_363,esi_358,esp_349,S_360,SCZO_354,SZO_355,Z_359
	word32 ecx_365 = Mem272[ebp_136 - 0x00000038:word32] + 0x00000002
// DataOut: cs ds eax ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D485:
	word32 eax_381
	word16 dx_369 = Mem272[ecx_365:word16]
	byte C_374 = cond(dx_369 - Mem272[eax_353:word16])
	branch dx_369 != Mem272[eax_353:word16] l1000D4AB
// DataOut: cs ds dx eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): CDP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D48D:
	branch dx_369 == 0x0000 l1000D4A7
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D492:
	word16 dx_425 = Mem272[ecx_365 + 0x00000000:word16]
	C_374 = cond(dx_425 - Mem272[eax_353 + 0x00000002:word16]) (alias)
	branch dx_425 != Mem272[eax_353 + 0x00000002:word16] l1000D4AB
// DataOut: cs ds dx eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): CDP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4AB:
	eax_381 = 0x00000000 - C_374 | 0x00000001
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D49C:
	ecx_365 = ecx_365 + 0x00000004
	eax_353 = eax_353 + 0x00000004
	branch dx_425 != 0x0000 l1000D485
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4A7:
	eax_381 = 0x00000000
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4B0:
	branch eax_381 == 0x00000000 l1000D4CE
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4CE:
	Mem388[esp_256 - 0x00000004:word32] = Mem272[ebp_136 - 0x0000003C:word32]
	Mem391[ebp_136 - 0x00000030:word32] = 0x00000001
	Mem394[esp_256 - 0x00000008:word32] = Mem391[edi_257:word32]
	Mem397[esp_256 - 0x0000000C:word32] = 0x100071CC
	edx_147 = ebp_136 - 0x00000030
	eax_401 = fn1000D65C(ebx_357, ebp_136 - 0x00000030, ebp_136, es_148, ds_149, dwArg00, dwArg04, dwArg08)
	esp_134 = esp_256
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4B4:
	eax_260 = Mem272[ebp_136 - 0x00000030:word32]
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4B7:
	edi_257 = edi_257 + 0x00000004
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D4BE:
	word32 esp_289 = esp_256 - 0x00000004
	Mem290[esp_289:word32] = 0x00000000
	Mem293[esp_289 - 0x00000004:word32] = 0x80040111
	word32 edi_295
	word32 ecx_297
	word32 eax_298
	byte SCZO_299
	byte SZO_300
	byte C_301
	word32 ebx_302
	byte Z_304
	byte S_305
	word16 dx_306
	call api-ms-win-core-winrt-error-l1-1-0.dll!RoOriginateError (retsize: 4; depth: 4)
		uses: C_288,ds_273,dwLoc04_6,dx_276,eax_284,ebp_285,ebx_283,ecx_281,edi_279,edx_275,es_274,esi_291,esp_292,S_277,SCZO_287,SZO_282,Z_278
		defs: C_301,ds_309,dx_306,eax_298,ebp_296,ebx_302,ecx_297,edi_295,edx_307,es_308,esi_303,esp_294,S_305,SCZO_299,SZO_300,Z_304
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D50A:
	eax_401 = esi_143
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): DP
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000D50C:
	word32 esp_72 = esp_134 + 0x00000004
	fn1000A130(eax_401, Mem40[ebp_136 - 0x00000004:word32] ^ ebp_136, edx_147, Mem40[esp_72 + 0x00000004:word32], ebp_136, Mem40[esp_72:word32], Mem40[esp_134:word32], es_148, ds_149, ebp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> edx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

DllGetActivationFactory_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> dx:<invalid> edx:<invalid> -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



