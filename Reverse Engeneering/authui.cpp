
void** fun_100192d7(void** ecx);

void** fun_1001960f(void** ecx) {
    fun_100192d7(ecx);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001e04);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001e3c);
    return ecx;
}

/* (image base) */
int32_t image_base_ = 0x10009b40;

struct s0 {
    signed char[12] pad12;
    int32_t f12;
    int32_t f16;
    signed char[4] pad24;
    int32_t f24;
    int32_t f28;
};

struct s1 {
    signed char[12] pad12;
    int32_t* f12;
};

struct s2 {
    struct s2* f0;
    signed char[8] pad12;
    struct s2* f12;
    signed char[12] pad28;
    int32_t f28;
};

int32_t fun_100096a0(struct s2* ecx, struct s2* a2);

int32_t g10024624;

struct s3 {
    signed char[8] pad8;
    signed char f8;
};

int32_t AcquireSRWLockExclusive = 0x25f14;

int32_t ReleaseSRWLockExclusive = 0x25ee2;

int32_t DecodePointer = 0x25f62;

struct s4 {
    signed char[8] pad8;
    int32_t f8;
};

void** fun_1000a130(uint32_t ecx, ...);

struct s5 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_10008b2e(int32_t a1, int32_t a2) {
    int1_t zf3;
    struct s0** edi4;
    int32_t ebx5;
    struct s1** eax6;
    struct s1** ebx7;
    struct s1** esi8;
    struct s1** esi9;
    int32_t eax10;
    struct s0** edi11;
    int32_t ebp12;
    int32_t ebp13;
    int32_t eax14;
    struct s3* ebp15;
    struct s0* eax16;
    int32_t edi17;
    int32_t eax18;
    int32_t* eax19;
    int32_t ecx20;
    int32_t ebp21;
    int32_t ebp22;
    struct s4** eax23;
    int32_t edi24;
    int32_t ebp25;
    int32_t esi26;
    int32_t eax27;
    uint32_t ecx28;
    int32_t ebp29;
    uint32_t ebp30;
    struct s5* ebp31;

    if (!zf3) {
        image_base_(edi4);
        eax6 = reinterpret_cast<struct s1**>(ebx5(edi4));
        ebx7 = eax6;
    } else {
        ebx7 = reinterpret_cast<struct s1**>(0x1001f20c);
    }
    if (reinterpret_cast<uint32_t>(esi8) < reinterpret_cast<uint32_t>(ebx7)) {
        do {
            if (*esi9) {
                eax10 = (*edi11)->f12;
                *reinterpret_cast<int32_t*>(ebp12 - 12) = eax10;
                if (!reinterpret_cast<int1_t>(eax10 == fun_100096a0)) {
                    image_base_(eax10, edi11);
                    eax14 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp13 - 12)(eax10, edi11));
                } else {
                    eax14 = g10024624;
                }
                if (eax14) {
                    if (!ebp15->f8) 
                        goto addr_10008ba9_12;
                }
                if (*(*esi9)->f12) {
                    eax16 = *edi11;
                    edi17 = eax16->f28;
                    image_base_(edi17, edi11);
                    eax18 = reinterpret_cast<int32_t>(edi17(edi17, edi11));
                    AcquireSRWLockExclusive(edi17, eax18, edi11);
                    eax19 = (*esi9)->f12;
                    ecx20 = *eax19;
                    *reinterpret_cast<int32_t*>(ebp21 - 12) = ecx20;
                    if (ecx20) {
                        *eax19 = 0;
                        if (eax18) {
                            ReleaseSRWLockExclusive(eax18, eax18, edi11);
                            ecx20 = *reinterpret_cast<int32_t*>(ebp22 - 12);
                        }
                        eax23 = reinterpret_cast<struct s4**>(DecodePointer(ecx20, eax18, edi11));
                        edi24 = (*eax23)->f8;
                        image_base_(edi24, eax23, ecx20, eax18, edi11);
                        edi24(edi24, eax23, ecx20, eax18, edi11);
                    } else {
                        if (eax18) {
                            ReleaseSRWLockExclusive(eax18, eax18, edi11);
                        }
                    }
                    edi11 = *reinterpret_cast<struct s0***>(ebp25 - 8);
                }
            }
            ++esi9;
        } while (reinterpret_cast<uint32_t>(esi9) < reinterpret_cast<uint32_t>(ebx7));
    }
    esi26 = (*edi11)->f12;
    if (!reinterpret_cast<int1_t>(esi26 == fun_100096a0)) {
        image_base_(esi26, edi11);
        eax27 = reinterpret_cast<int32_t>(esi26(esi26, edi11));
    } else {
        eax27 = g10024624;
    }
    if (eax27) {
        addr_10008ba9_12:
    }
    ecx28 = *reinterpret_cast<uint32_t*>(ebp29 - 4) ^ ebp30;
    fun_1000a130(ecx28);
    goto ebp31->f4;
}

struct s7 {
    struct s7* f0;
    unsigned char f1;
};

struct s6 {
    signed char f0;
    struct s7* f1;
};

struct s8 {
    void* f0;
    signed char[1] pad2;
    void* f2;
    signed char[67109356] pad67109359;
    unsigned char f67109359;
    signed char[704642576] pad771751936;
    unsigned char f771751936;
};

struct s9 {
    void* f0;
    signed char[88866815] pad88866816;
    unsigned char f88866816;
};

struct s10 {
    signed char[1] pad1;
    void* f1;
};

void* g2e000003;

struct s11 {
    unsigned char f0;
    signed char[83886081] pad83886082;
    unsigned char f83886082;
};

struct s12 {
    void* f0;
    signed char[1] pad2;
    unsigned char f2;
    signed char[1] pad4;
    void* f4;
};

int32_t g10024604;

void** fun_1000ed40(int32_t ecx);

void fun_1000ce20();

struct s13 {
    int32_t f0;
    void** f4;
};

int32_t fun_1000a45e(void** ecx, void** a2);

void fun_1000ce10();

void** g100245f8;

struct s14 {
    int16_t f0;
    signed char[2] pad4;
    int32_t f4;
    struct s14* f8;
    uint32_t f12;
    struct s14* f16;
    uint16_t f20;
    uint16_t f22;
    int32_t f24;
    struct s14* f28;
};

struct s15 {
    int32_t f0;
    struct s14* f4;
    signed char[4] pad12;
    int16_t* f12;
    signed char[12] pad28;
    signed char* f28;
    int16_t f32;
    signed char[6] pad40;
    unsigned char* f40;
    int32_t f44;
    signed char[8] pad56;
    int32_t f56;
    signed char[8] pad68;
    signed char* f68;
    int32_t f72;
    int32_t f76;
};

struct s14* fun_1000df60(struct s15* a1, int32_t a2, void* a3);

struct s14* g100245f0;

struct s16 {
    struct s16* f0;
    int32_t** f4;
    struct s16* f8;
};

struct s16* g100245f4;

void* g10024614;

struct s17 {
    signed char[112] pad112;
    unsigned char f112;
};

struct s18 {
    signed char[112] pad112;
    unsigned char f112;
};

struct s19 {
    signed char[65] pad65;
    int32_t f65;
};

struct s6* fun_10008552(void* ecx) {
    void* esp2;
    unsigned char tmp8_3;
    signed char* eax4;
    signed char al5;
    int1_t cf6;
    unsigned char* eax7;
    unsigned char* eax8;
    struct s8* eax9;
    unsigned char tmp8_10;
    signed char* esi11;
    int1_t cf12;
    unsigned char* esi13;
    unsigned char* esi14;
    signed char* esi15;
    unsigned char* edx16;
    unsigned char* edx17;
    unsigned char ah18;
    void** esp19;
    void* ebx20;
    void* ebx21;
    void** edx22;
    void* tmp8_23;
    void* ah24;
    void* bl25;
    void* ah26;
    void* bl27;
    unsigned char tmp8_28;
    signed char* esi29;
    int1_t cf30;
    unsigned char* esi31;
    unsigned char* esi32;
    signed char* esi33;
    void* ebx34;
    unsigned char* ebx35;
    void** esp36;
    uint40_t v37;
    void** edx38;
    void*** esp39;
    void** ecx40;
    int16_t di41;
    void* tmp8_42;
    int1_t cf43;
    void* tmp8_44;
    int1_t cf45;
    unsigned char* edi46;
    unsigned char* edi47;
    void* tmp8_48;
    int1_t cf49;
    void* tmp8_50;
    uint1_t cf51;
    void* tmp8_52;
    int1_t cf53;
    int1_t pf54;
    struct s9* ebp55;
    struct s10* ebp56;
    void** esp57;
    void** edi58;
    unsigned char tmp8_59;
    signed char* eax60;
    signed char al61;
    int1_t cf62;
    unsigned char* eax63;
    unsigned char* eax64;
    signed char* eax65;
    unsigned char* eax66;
    unsigned char tmp8_67;
    uint1_t cf68;
    unsigned char al69;
    void* ebx70;
    int32_t* esp71;
    void* tmp8_72;
    uint1_t cf73;
    unsigned char* esi74;
    signed char* esi75;
    signed char* esi76;
    signed char* esi77;
    unsigned char tmp8_78;
    signed char* esi79;
    int1_t cf80;
    unsigned char* esi81;
    unsigned char* esi82;
    signed char* esi83;
    int1_t sf84;
    unsigned char* esi85;
    signed char* esi86;
    int1_t sf87;
    signed char* esi88;
    signed char* esi89;
    void* tmp8_90;
    int1_t cf91;
    void* tmp8_92;
    uint1_t cf93;
    unsigned char* esi94;
    signed char* esi95;
    struct s11** esp96;
    int1_t zf97;
    struct s12* esi98;
    void* tmp8_99;
    uint1_t cf100;
    void* tmp8_101;
    uint1_t cf102;
    unsigned char* eax103;
    struct s11* eax104;
    unsigned char tmp8_105;
    unsigned char tmp8_106;
    uint1_t cf107;
    unsigned char* esp108;
    unsigned char tmp8_109;
    int1_t cf110;
    struct s9* eax111;
    void* al112;
    void* tmp8_113;
    int1_t cf114;
    int32_t* esp115;
    struct s13* esp116;
    int32_t* esp117;
    struct s13* esp118;
    int1_t zf119;
    struct s8** eax120;
    unsigned char* esi121;
    signed char* esi122;
    void* esp123;
    void** esp124;
    unsigned char* esi125;
    signed char* esi126;
    signed char* esi127;
    unsigned char* esi128;
    signed char* esi129;
    signed char* esi130;
    signed char* esi131;
    unsigned char* esi132;
    signed char* esi133;
    int1_t sf134;
    signed char* esi135;
    signed char* esi136;
    void* tmp8_137;
    unsigned char* esi138;
    signed char* esi139;
    signed char* esi140;
    signed char* esi141;
    int1_t zf142;
    uint32_t esi143;
    struct s17* edi144;
    struct s18* edi145;
    void* tmp8_146;
    uint1_t cf147;
    unsigned char tmp8_148;
    signed char* esi149;
    int1_t cf150;
    unsigned char* esi151;
    unsigned char* esi152;
    int1_t zf153;
    signed char* esi154;
    int1_t sf155;
    signed char* esi156;
    void* tmp8_157;
    int1_t cf158;
    void* tmp8_159;
    int1_t cf160;
    void** esp161;
    void** edi162;
    unsigned char tmp8_163;
    int32_t esi164;
    int1_t cf165;
    int32_t esi166;
    int32_t esi167;
    int32_t esi168;
    void** esp169;
    void** edi170;
    int32_t edi171;
    int32_t edi172;
    unsigned char tmp8_173;
    signed char* esi174;
    int1_t cf175;
    unsigned char* esi176;
    unsigned char* esi177;
    signed char* esi178;
    void** esp179;
    void** edi180;
    unsigned char tmp8_181;
    int32_t edi182;
    int32_t edi183;
    void* tmp8_184;
    int1_t cf185;
    struct s19* esi186;

    esp2 = __zero_stack_offset();
    tmp8_3 = reinterpret_cast<unsigned char>(*eax4 + al5);
    cf6 = tmp8_3 < *eax7;
    *eax8 = tmp8_3;
    if (__intrinsic()) {
        addr_10008560_2:
        if (!cf6) {
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            if (!__intrinsic()) {
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                __asm__("insb ");
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                tmp8_10 = reinterpret_cast<unsigned char>(*esi11 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
                cf12 = tmp8_10 < *esi13;
                *esi14 = tmp8_10;
                if (cf12 || !*esi15) {
                    addr_100085d3_5:
                    __asm__("les esp, [eax]");
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    goto addr_100085dc_6;
                } else {
                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 48);
                    *edx16 = reinterpret_cast<unsigned char>(*edx17 ^ ah18);
                    if (0) {
                        addr_100085dc_6:
                        esp19 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp2) - 4 - 4);
                        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
                        ebx20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx21) + 1 + 1);
                        edx22 = esp19;
                        esp2 = reinterpret_cast<void*>(esp19 + 1);
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                        __asm__("enter 0x20, 0x0");
                        goto addr_100085eb_8;
                    } else {
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                        tmp8_23 = reinterpret_cast<void*>(reinterpret_cast<signed char>(ah24) + reinterpret_cast<unsigned char>(bl25));
                        *reinterpret_cast<void**>(&eax9 + 1) = tmp8_23;
                        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_23) < reinterpret_cast<unsigned char>(ah26))))));
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(bl27));
                    }
                }
            }
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            tmp8_28 = reinterpret_cast<unsigned char>(*esi29 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
            cf30 = tmp8_28 < *esi31;
            *esi32 = tmp8_28;
            if (cf30 || !*esi33) {
                addr_100085eb_8:
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                ebx34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx20) + 1);
                esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4);
            } else {
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 84) & 98);
                if (!0) {
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    __asm__("hlt ");
                }
            }
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx22)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            __asm__("aam 0x20");
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            __asm__("fsub dword [eax]");
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            __asm__("fsub qword [eax]");
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            ebx35 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx34) + 1 + 1 + 1 + 1 + 1 + 1);
            esp36 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp2) - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 1 - 4 - 4);
            *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&v37) + 1) = esp36;
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
            edx38 = *reinterpret_cast<void***>(&v37);
            esp39 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp36) - 1 + 4);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            ecx40 = reinterpret_cast<void**>(reinterpret_cast<int16_t>(ecx) - 1 + 1 - 1 + 1 + 1 - 1 - 1 + 1 - 1);
            if (!(reinterpret_cast<uint1_t>(!!ecx40) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax9->f0)))) {
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                *edx38 = *reinterpret_cast<void**>(&ecx40 + 1);
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                esp39 = reinterpret_cast<void***>(*reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx35) + di41) + 0x74) * 0xc0000073);
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
            }
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx35) + 1)));
            __asm__("daa ");
            tmp8_42 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf43 = reinterpret_cast<unsigned char>(tmp8_42) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_42;
            if (cf43) 
                goto addr_100086ef_18;
            __asm__("popad ");
            if (!*reinterpret_cast<void**>(&eax9->f0)) 
                goto addr_100086ef_18;
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            esp39 = esp39 - 4;
            *esp39 = ecx40;
            tmp8_44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf45 = reinterpret_cast<unsigned char>(tmp8_44) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_44;
            __asm__("enter 0x1d, 0x0");
            if (cf45) 
                goto addr_100086ff_21;
            __asm__("popad ");
            if (!*reinterpret_cast<void**>(&eax9->f0)) 
                goto addr_100086ff_21;
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 48);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *edi46 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*edi47));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            tmp8_48 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf49 = reinterpret_cast<unsigned char>(tmp8_48) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_48;
            if (cf49) 
                goto addr_10008713_24;
            __asm__("popad ");
            if (!*reinterpret_cast<void**>(&eax9->f0)) 
                goto addr_10008713_24;
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x73);
            if (__intrinsic()) 
                goto addr_1000871a_27;
            __asm__("popad ");
            if (!*reinterpret_cast<void**>(&eax9)) 
                goto addr_1000871a_27;
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40)));
            __asm__("outsd ");
            tmp8_50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf51 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_50) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_50;
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))) + cf51);
            tmp8_52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf53 = reinterpret_cast<unsigned char>(tmp8_52) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_52;
            pf54 = __intrinsic();
            if (cf53) 
                goto addr_1000872b_30;
            __asm__("popad ");
            if (!*reinterpret_cast<void**>(&eax9->f0)) 
                goto addr_1000872b_30;
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
            ebp55 = reinterpret_cast<struct s9*>(&ebp56->f1);
            esp57 = reinterpret_cast<void**>(esp39 - 4);
            *reinterpret_cast<void***>(esp57) = esp57;
            esp39 = reinterpret_cast<void***>(esp57 - 1);
            *esp39 = edi58;
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
            goto addr_100086d4_33;
        }
    } else {
        tmp8_59 = reinterpret_cast<unsigned char>(*eax60 + al61);
        cf62 = tmp8_59 < *eax63;
        *eax64 = tmp8_59;
        if (cf62 || !*eax65) {
            *reinterpret_cast<void**>(&eax66) = reinterpret_cast<void*>(32);
            tmp8_67 = reinterpret_cast<unsigned char>(*eax66 + 32);
            cf68 = reinterpret_cast<uint1_t>(tmp8_67 < *eax66);
            *eax66 = tmp8_67;
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(32 + cf68);
        } else {
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(al69 & 98);
            cf6 = 0;
            goto addr_10008560_2;
        }
    }
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 88);
    ebx21 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx70) + 1 + 1);
    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp2) - 4 - 4 - 4);
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    goto addr_100085d3_5;
    addr_10008896_39:
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    goto addr_1000889b_40;
    addr_10008aca_41:
    goto *esp71;
    addr_100089c4_42:
    eax9->f2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
    goto addr_100089c6_43;
    addr_10008969_44:
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9 + 1)));
    eax9 = reinterpret_cast<struct s8*>(&eax9->pad2);
    *reinterpret_cast<void**>(&eax9) = g2e000003;
    goto addr_10008972_45;
    addr_100087e1_46:
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    *reinterpret_cast<void**>(&ecx40 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
    __asm__("rol byte [eax], cl");
    tmp8_72 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
    cf73 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_72) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
    *reinterpret_cast<void**>(&ebx35) = tmp8_72;
    addr_100087e8_47:
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) < reinterpret_cast<unsigned char>(1 + cf73))));
    *esi74 = reinterpret_cast<unsigned char>(*esi75 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
    if (!*esi76) {
        addr_10008854_48:
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        __asm__("insd ");
        goto addr_10008865_49;
    } else {
        if (*esi77 < 0) {
            addr_10008865_49:
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&edx38) = reinterpret_cast<void*>(0xff);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            goto addr_1000886f_51;
        } else {
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
        }
    }
    addr_100087f5_53:
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    eax9->f67109359 = reinterpret_cast<unsigned char>(eax9->f67109359 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx35) + 1)));
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    tmp8_78 = reinterpret_cast<unsigned char>(*esi79 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
    cf80 = tmp8_78 < *esi81;
    *esi82 = tmp8_78;
    if (!*esi83) {
        addr_1000886f_51:
        __asm__("insd ");
        __asm__("insd ");
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) | 0xf2);
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
        goto addr_1000887f_54;
    } else {
        if (!cf80) 
            goto addr_10008805_56; else 
            goto addr_10008805_56;
    }
    addr_1000879d_57:
    eax9 = reinterpret_cast<struct s8*>(reinterpret_cast<unsigned char>(eax9) + 0x742e0000);
    sf84 = reinterpret_cast<signed char>(eax9) < reinterpret_cast<signed char>(0);
    addr_1000879f_58:
    if (sf84) {
        addr_10008819_59:
        __asm__("out dx, eax");
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
        goto addr_1000881c_60;
    } else {
        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x6e);
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        *reinterpret_cast<void**>(&edx38) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
        __asm__("int 0x0");
        *ebx35 = reinterpret_cast<unsigned char>(*ebx35 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        *esi85 = reinterpret_cast<unsigned char>(*esi86 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
        sf87 = *esi88 < 0;
        if (!*esi89) {
            addr_1000881c_60:
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            tmp8_90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf91 = reinterpret_cast<unsigned char>(tmp8_90) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_90;
            if (!*reinterpret_cast<void**>(&eax9->f0)) {
                addr_1000888f_63:
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
                --ecx40;
                if (reinterpret_cast<uint1_t>(!!ecx40) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax9->f0))) 
                    goto addr_10008896_39; else 
                    goto addr_10008896_39;
            } else {
                if (!cf91) {
                    addr_10008849_65:
                    goto addr_10008851_66;
                } else {
                    edx38 = *reinterpret_cast<void***>(esp39 + 4 + 4);
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    goto addr_1000882c_68;
                }
            }
        } else {
            addr_100087b7_69:
            if (sf87) {
                addr_1000882d_70:
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) ^ 2);
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                if (reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax9->f0)) < reinterpret_cast<signed char>(0) || !*reinterpret_cast<void**>(&eax9->f0)) {
                    addr_1000889b_40:
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    tmp8_92 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    cf93 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_92) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                    *reinterpret_cast<void**>(&eax9->f0) = tmp8_92;
                    *reinterpret_cast<void**>(&ebx35) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx38) + 1))) + cf93);
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
                    __asm__("les eax, [eax+eax]");
                    *esi94 = reinterpret_cast<unsigned char>(*esi95 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                    esp96 = reinterpret_cast<struct s11**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40 + 0x74)) * 0x3424);
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    __asm__("aam 0xf7");
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
                    zf97 = *reinterpret_cast<void**>(&eax9->f0) == 0;
                    if (zf97) {
                        addr_1000890c_71:
                        __asm__("popad ");
                        if (zf97) {
                            addr_10008972_45:
                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                            goto addr_1000897b_72;
                        } else {
                            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 48);
                            *edx38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx38) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9 + 1)));
                            if (0) {
                                addr_1000897b_72:
                                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx38) + reinterpret_cast<unsigned char>(eax9)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx38) + reinterpret_cast<unsigned char>(eax9)) - 96);
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
                                esi98->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 48);
                                goto addr_1000898a_74;
                            } else {
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                eax9->f2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f2) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + 0x2e000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + 0x2e000000) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx35) + 1)));
                                __asm__("popad ");
                                if (!*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + 0x2e000000)) {
                                    addr_1000898a_74:
                                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                    esi98->f2 = reinterpret_cast<unsigned char>(esi98->f2 & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                    esi98->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                    goto addr_10008995_76;
                                } else {
                                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 100);
                                    esi98 = reinterpret_cast<struct s12*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) * 48);
                                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 98);
                                    if (0) {
                                        addr_10008995_76:
                                        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 100);
                                        esi98 = reinterpret_cast<struct s12*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) * 48);
                                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi98) + reinterpret_cast<unsigned char>(eax9) * 2 + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi98) + reinterpret_cast<unsigned char>(eax9) * 2 + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9 + 1)));
                                        goto addr_100089a2_78;
                                    } else {
                                        tmp8_99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                        cf100 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_99) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                        *reinterpret_cast<void**>(&eax9->f0) = tmp8_99;
                                        __asm__("rol byte [eax+0x2], 0x0");
                                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))) + cf100);
                                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                        __asm__("popad ");
                                        if (!*reinterpret_cast<void**>(&eax9->f0)) {
                                            addr_100089a2_78:
                                            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x70);
                                            if (0) {
                                                addr_100089e0_80:
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx38) + 1)));
                                                __asm__("arpl [esi+0x67], sp");
                                                tmp8_101 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                cf102 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_101) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                                *reinterpret_cast<void**>(&eax9->f0) = tmp8_101;
                                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + 84) + cf102);
                                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                                eax103 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                                esi98->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                                esp96 = reinterpret_cast<struct s11**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40 + 0x74)) * 0x322461);
                                                *eax103 = reinterpret_cast<unsigned char>(*eax103 + *reinterpret_cast<signed char*>(&eax103));
                                                *eax103 = reinterpret_cast<unsigned char>(*eax103 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                                                goto addr_100089fc_81;
                                            } else {
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                goto addr_100089b2_83;
                                            }
                                        } else {
                                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                                            eax9 = reinterpret_cast<struct s8*>(&eax9->pad2);
                                            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                            __asm__("popad ");
                                            if (!*reinterpret_cast<void**>(&eax9->f0)) {
                                                addr_100089b2_83:
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                if (reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax9->f0)) < reinterpret_cast<signed char>(0)) {
                                                    addr_100089fc_81:
                                                    eax104 = *esp96;
                                                    tmp8_105 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax104) + eax104->f0);
                                                    *reinterpret_cast<unsigned char*>(&eax104) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(tmp8_105)) + reinterpret_cast<uint1_t>(tmp8_105 < *reinterpret_cast<unsigned char*>(&eax104)));
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<int32_t>(ebx35) * 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<int32_t>(ebx35) * 2) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax104) + 1));
                                                    tmp8_106 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax104) + eax104->f0);
                                                    cf107 = reinterpret_cast<uint1_t>(tmp8_106 < *reinterpret_cast<unsigned char*>(&eax104));
                                                    *reinterpret_cast<unsigned char*>(&eax104) = tmp8_106;
                                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<uint32_t>(eax104)) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<uint32_t>(eax104)) + *reinterpret_cast<unsigned char*>(&eax104)) + cf107);
                                                    esi98->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                                    esp108 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40 + 0x74)) * 0x342461);
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    esp108[reinterpret_cast<int32_t>(ebx35) * 2] = reinterpret_cast<unsigned char>(esp108[reinterpret_cast<int32_t>(ebx35) * 2] + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx38) + 1)));
                                                    *reinterpret_cast<unsigned char*>(&eax104) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax104) + eax104->f0);
                                                    *reinterpret_cast<void**>(&edx38) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)) + reinterpret_cast<unsigned char>(esi98->f0));
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    *edx38 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edx38)));
                                                    __asm__("les eax, [eax+eax]");
                                                    esi98->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                                    esp71 = reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40 + 0x74)) * 0x3524);
                                                    eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    eax104->f83886082 = reinterpret_cast<unsigned char>(eax104->f83886082 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                                                    tmp8_109 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                    cf110 = tmp8_109 < eax104->f0;
                                                    eax104->f0 = tmp8_109;
                                                    if (!cf110) {
                                                        if (cf110) {
                                                            g10024604 = reinterpret_cast<int32_t>(fun_1000ed40);
                                                            goto addr_10008aca_41;
                                                        } else {
                                                            *reinterpret_cast<unsigned char*>(&eax104) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax104) & 48);
                                                            eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 ^ reinterpret_cast<uint32_t>(eax104));
                                                            eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                            eax104->f0 = reinterpret_cast<unsigned char>(eax104->f0 + *reinterpret_cast<unsigned char*>(&eax104));
                                                            eax111 = ebp55;
                                                            al112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)) + reinterpret_cast<unsigned char>(eax111->f0));
                                                            esi98->f4 = *reinterpret_cast<void**>(&ecx40 + 1);
                                                            tmp8_113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                                            cf114 = reinterpret_cast<unsigned char>(tmp8_113) < reinterpret_cast<unsigned char>(esi98->f0);
                                                            esi98->f0 = tmp8_113;
                                                            if (cf114) {
                                                                esp115 = esp71 - 1;
                                                                *esp115 = reinterpret_cast<int32_t>(fun_1000ce20);
                                                                esp116 = reinterpret_cast<struct s13*>(esp115 - 1);
                                                                esp116->f0 = 0x10008aea;
                                                                fun_1000a45e(ecx40, esp116->f4);
                                                                goto *reinterpret_cast<int32_t*>(&esp116->f4 + 4);
                                                            } else {
                                                                if (cf114) {
                                                                    esp117 = esp71 - 1;
                                                                    *esp117 = reinterpret_cast<int32_t>(fun_1000ce10);
                                                                    esp118 = reinterpret_cast<struct s13*>(esp117 - 1);
                                                                    esp118->f0 = 0x10008ada;
                                                                    fun_1000a45e(ecx40, esp118->f4);
                                                                    goto *reinterpret_cast<int32_t*>(&esp118->f4 + 4);
                                                                } else {
                                                                    *reinterpret_cast<void**>(&eax111) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al112) & 48);
                                                                    *reinterpret_cast<void**>(&eax111) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)) ^ reinterpret_cast<unsigned char>(eax111->f0));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                    *reinterpret_cast<void**>(&eax111) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                                                    if (!__intrinsic()) {
                                                                        g100245f8 = reinterpret_cast<void**>(fun_1000df60);
                                                                        g100245f0 = reinterpret_cast<struct s14*>(0x100240a0);
                                                                        g100245f4 = reinterpret_cast<struct s16*>(0x1002463c);
                                                                        goto *esp71;
                                                                    } else {
                                                                        eax111->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax111->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax111)));
                                                                        g10024614 = *reinterpret_cast<void**>(&eax111);
                                                                        goto *esp71;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                                    __asm__("fadd qword [eax]");
                                                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                                                    if (__intrinsic()) 
                                                        goto addr_100089c4_42; else 
                                                        goto addr_100089c4_42;
                                                }
                                            } else {
                                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 48);
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
                                                eax9 = reinterpret_cast<struct s8*>(&eax9->pad2);
                                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                                zf119 = *reinterpret_cast<void**>(&eax9->f0) == 0;
                                                __asm__("popad ");
                                                goto addr_10008963_96;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                        eax120 = reinterpret_cast<struct s8**>(reinterpret_cast<unsigned char>(eax9) - 1);
                        *reinterpret_cast<void**>(&eax120) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax120)) ^ reinterpret_cast<unsigned char>(*edx38)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40)))));
                        *esi121 = reinterpret_cast<unsigned char>(*esi122 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                        esp96 = reinterpret_cast<struct s11**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40 + 0x74)) * 0x3724);
                        *eax120 = reinterpret_cast<struct s8*>(reinterpret_cast<unsigned char>(*eax120) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax120)));
                        *reinterpret_cast<void**>(&eax120) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax120)) + reinterpret_cast<unsigned char>(*eax120));
                        eax9 = *eax120;
                        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                        zf119 = *reinterpret_cast<void**>(&eax9->f0) == 0;
                        __asm__("popad ");
                        if (zf119) {
                            addr_10008963_96:
                            if (zf119) {
                                addr_100089c6_43:
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
                                esi98->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi98->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                                esp123 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40 + 0x74)) * 0x352461);
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx38)));
                                esp124 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp123) - 4);
                                *reinterpret_cast<void***>(esp124) = esp124;
                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)))));
                                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                                goto addr_100089e0_80;
                            } else {
                                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                                if (__intrinsic()) 
                                    goto addr_10008969_44; else 
                                    goto addr_10008969_44;
                            }
                        } else {
                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                            eax9->f2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40)));
                            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                            *esi125 = reinterpret_cast<unsigned char>(*esi126 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                            zf97 = *esi127 == 0;
                            goto addr_1000890c_71;
                        }
                    }
                } else {
                    addr_1000883a_100:
                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x78);
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    goto addr_1000883d_101;
                }
            } else {
                addr_100087b9_102:
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x78);
                *reinterpret_cast<void**>(&ecx40 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx38) + 1)));
            }
        }
    }
    addr_100087bc_103:
    __asm__("int 0x0");
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx38) + 1)));
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    *esi128 = reinterpret_cast<unsigned char>(*esi129 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
    if (!*esi130) {
        addr_1000882c_68:
        __asm__("enter 0x1ef, 0x0");
        goto addr_1000882d_70;
    } else {
        if (*esi131 < 0) {
            addr_1000883d_101:
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            goto addr_10008840_105;
        } else {
            addr_100087c9_106:
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x79);
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        }
    }
    addr_100087cc_107:
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    eax9 = reinterpret_cast<struct s8*>(reinterpret_cast<unsigned char>(eax9) & 0xb80000ce);
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
    *esi132 = reinterpret_cast<unsigned char>(*esi133 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
    sf134 = *esi135 < 0;
    if (!*esi136) {
        addr_10008840_105:
        __asm__("int1 ");
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(eax9));
        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        __asm__("insd ");
        goto addr_10008849_65;
    } else {
        addr_100087db_108:
        if (sf134) {
            addr_10008851_66:
            __asm__("popad ");
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            goto addr_10008854_48;
        } else {
            addr_100087dd_109:
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
            if (!__intrinsic()) 
                goto addr_100087e1_46; else 
                goto addr_100087e1_46;
        }
    }
    addr_100087da_110:
    goto addr_100087db_108;
    addr_100087b8_111:
    goto addr_100087b9_102;
    addr_1000875b_112:
    while (tmp8_137 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx38) + 1))), *reinterpret_cast<void**>(&eax9) = tmp8_137, *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_137) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)))), *esi138 = reinterpret_cast<unsigned char>(*esi139 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1))), !!*esi140) {
        if (*esi141 < 0) 
            goto addr_100087dd_109;
        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x6c);
        if (0) 
            goto addr_1000879d_57;
        *reinterpret_cast<unsigned char*>(ecx40 + 0x75) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx40 + 0x75) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9 + 1)));
        zf142 = *reinterpret_cast<unsigned char*>(ecx40 + 0x75) == 0;
        sf134 = __intrinsic();
        if (zf142) 
            goto addr_100087da_110;
        if (!zf142) 
            goto addr_100087dd_109;
        while (1) {
            __asm__("insb ");
            __asm__("insb ");
            *edx38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx38) & esi143);
            edi144->f112 = reinterpret_cast<unsigned char>(edi145->f112 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
            cf73 = 0;
            if (0) 
                goto addr_100087e8_47;
            __asm__("aaa ");
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            tmp8_146 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf147 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_146) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_146;
            --ecx40;
            if (!(reinterpret_cast<uint1_t>(!!ecx40) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax9->f0)))) 
                goto addr_10008786_119;
            while (1) {
                eax9 = reinterpret_cast<struct s8*>(reinterpret_cast<unsigned char>(eax9) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + cf147);
                tmp8_148 = reinterpret_cast<unsigned char>(*esi149 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                cf150 = tmp8_148 < *esi151;
                *esi152 = tmp8_148;
                zf153 = *esi154 == 0;
                sf155 = *esi156 < 0;
                if (cf150) 
                    goto addr_1000878b_121;
                __asm__("popad ");
                if (zf153) 
                    goto addr_1000878b_121;
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                pf54 = __intrinsic();
                addr_1000872b_30:
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                ebp55->f88866816 = reinterpret_cast<unsigned char>(ebp55->f88866816 - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                tmp8_157 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                cf158 = reinterpret_cast<unsigned char>(tmp8_157) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
                *reinterpret_cast<void**>(&eax9->f0) = tmp8_157;
                sf84 = reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax9->f0)) < reinterpret_cast<signed char>(0);
                if (cf158) 
                    goto addr_1000879f_58;
                __asm__("popad ");
                if (!*reinterpret_cast<void**>(&eax9->f0)) 
                    goto addr_1000879f_58;
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                if (__intrinsic()) 
                    goto addr_100087bc_103;
                do {
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    if (*reinterpret_cast<void**>(&eax9->f0)) 
                        goto addr_1000874a_129;
                    addr_100086d4_33:
                    __asm__("outsd ");
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void***>(ecx40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx40)) | reinterpret_cast<unsigned char>(eax9));
                    tmp8_159 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    cf160 = reinterpret_cast<unsigned char>(tmp8_159) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
                    *reinterpret_cast<void**>(&eax9->f0) = tmp8_159;
                } while (cf160 || !*reinterpret_cast<void**>(&eax9->f0));
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                ebp55 = reinterpret_cast<struct s9*>(&ebp55->pad88866816);
                esp161 = reinterpret_cast<void**>(esp39 - 4);
                *reinterpret_cast<void***>(esp161) = esp161;
                esp39 = reinterpret_cast<void***>(esp161 - 1);
                *esp39 = edi162;
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) ^ reinterpret_cast<unsigned char>(eax9));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                *reinterpret_cast<void**>(&ecx40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9 + 1)));
                addr_100086ef_18:
                tmp8_163 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi164 + 0x2e000000) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9 + 1)));
                cf165 = tmp8_163 < *reinterpret_cast<unsigned char*>(esi166 + 0x2e000000);
                *reinterpret_cast<unsigned char*>(esi167 + 0x2e000000) = tmp8_163;
                if (cf165) 
                    goto addr_1000875b_112;
                __asm__("popad ");
                if (!*reinterpret_cast<signed char*>(esi168 + 0x2e000000)) 
                    goto addr_1000875b_112;
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                ebp55 = reinterpret_cast<struct s9*>(&ebp55->pad88866816);
                esp169 = reinterpret_cast<void**>(esp39 - 4);
                *reinterpret_cast<void***>(esp169) = esp169;
                esp39 = reinterpret_cast<void***>(esp169 - 1);
                *esp39 = edi170;
                addr_100086ff_21:
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                *reinterpret_cast<unsigned char*>(edi171 + 0x1000071) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi172 + 0x1000071) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                tmp8_173 = reinterpret_cast<unsigned char>(*esi174 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40 + 1)));
                cf175 = tmp8_173 < *esi176;
                *esi177 = tmp8_173;
                if (cf175) 
                    break;
                __asm__("popad ");
                if (!*esi178) 
                    break;
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x7a);
                addr_10008713_24:
                ebp55 = reinterpret_cast<struct s9*>(&ebp55->pad88866816);
                esp179 = reinterpret_cast<void**>(esp39 - 4);
                *reinterpret_cast<void***>(esp179) = esp179;
                esp39 = reinterpret_cast<void***>(esp179 - 1);
                *esp39 = edi180;
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                addr_1000871a_27:
                tmp8_181 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + 0xa0000071) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx40)));
                cf147 = reinterpret_cast<uint1_t>(tmp8_181 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + 0xa0000071));
                *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax9) + 0xa0000071) = tmp8_181;
            }
        }
        addr_1000874a_129:
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        if (!*reinterpret_cast<void**>(&eax9->f0)) 
            goto addr_100087b8_111;
        if (reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax9->f0)) < reinterpret_cast<signed char>(0)) 
            goto addr_100087c9_106;
        *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 100);
        eax9 = reinterpret_cast<struct s8*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) * 0xf0000000);
    }
    goto addr_100087cc_107;
    addr_10008786_119:
    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    sf87 = reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax9->f0)) < reinterpret_cast<signed char>(0);
    --ecx40;
    if (reinterpret_cast<uint1_t>(!!ecx40) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax9->f0))) {
        goto addr_100087b7_69;
    } else {
        *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
        zf153 = *reinterpret_cast<void**>(&eax9->f0) == 0;
        sf155 = reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax9->f0)) < reinterpret_cast<signed char>(0);
    }
    addr_1000878b_121:
    if (zf153) {
        goto addr_100087f5_53;
    } else {
        if (sf155) {
            addr_10008805_56:
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<unsigned char*>(edi182 + reinterpret_cast<int32_t>(ebp55) * 8 + 0x40001) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi183 + reinterpret_cast<int32_t>(ebp55) * 8 + 0x40001) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx35) + 1)));
            tmp8_184 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            cf185 = reinterpret_cast<unsigned char>(tmp8_184) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0));
            *reinterpret_cast<void**>(&eax9->f0) = tmp8_184;
            if (!*reinterpret_cast<void**>(&eax9->f0)) {
                addr_1000887f_54:
                *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))));
                *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                __asm__("insd ");
                ebp55 = reinterpret_cast<struct s9*>(esi186->f65 * 0x5f244c54);
                if (__undefined()) 
                    goto addr_1000888f_63; else 
                    goto addr_1000888f_63;
            } else {
                if (!cf185) {
                    goto addr_1000883a_100;
                } else {
                    *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
                    goto addr_10008819_59;
                }
            }
        } else {
            *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) & 0x6d);
            __asm__("outsb ");
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            *reinterpret_cast<void**>(&eax9->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
            __asm__("ror al, 0x0");
            *edx38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx38) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx35)));
            goto addr_1000879d_57;
        }
    }
}

uint32_t g100240c4 = 0xbb40e64e;

int32_t g100241e8 = 0;

uint32_t g100241e4 = 0;

int32_t g100241e0 = 0;

int32_t g100241dc = 0;

int32_t g100241d8 = 0;

int32_t g100241d4 = 0;

int16_t g10024200;

int16_t g100241f4 = 0;

int16_t g100241d0 = 0;

int16_t g100241cc = 0;

int16_t g100241c8 = 0;

int16_t g100241c4 = 0;

uint32_t g100241f8 = 0;

int32_t g100241ec = 0;

int32_t g100241f0 = 0;

void* g100241fc = reinterpret_cast<void*>(0);

int32_t g10024138 = 0;

int32_t g100240f4 = 0;

int32_t g100240e8 = 0;

int32_t g100240ec = 0;

int32_t g100240f8 = 0;

int32_t g100240fc = 0;

uint32_t g10024100 = 0;

int32_t g100240c8 = 0x44bf19b1;

int32_t g10024104 = 0;

void** fun_1000a475(int32_t a1);

void** fun_1000a130(uint32_t ecx, ...) {
    uint32_t eflags2;
    int1_t zf3;
    int32_t* esp4;
    void* esp5;
    int32_t eax6;
    int32_t edx7;
    int32_t ebx8;
    int32_t esi9;
    int32_t edi10;
    int16_t ss11;
    int16_t cs12;
    int16_t ds13;
    int16_t es14;
    int16_t fs15;
    int16_t gs16;
    int32_t ebp17;
    int32_t eax18;
    uint32_t ecx19;
    int32_t ecx20;
    void** eax21;
    void** eax22;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = 0;
    zf3 = ecx == g100240c4;
    if (!zf3) {
        esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
        *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<uint32_t>(esp4) < 0x324;
        esp5 = reinterpret_cast<void*>(esp4 - 0xc9);
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = esp5 == 0;
        *reinterpret_cast<int1_t*>(&eflags2) = reinterpret_cast<int32_t>(esp5) < reinterpret_cast<int32_t>(0);
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags2) + 1) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags2) = __intrinsic();
        g100241e8 = eax6;
        g100241e4 = ecx;
        g100241e0 = edx7;
        g100241dc = ebx8;
        g100241d8 = esi9;
        g100241d4 = edi10;
        g10024200 = ss11;
        g100241f4 = cs12;
        g100241d0 = ds13;
        g100241cc = es14;
        g100241c8 = fs15;
        g100241c4 = gs16;
        g100241f8 = eflags2 & 0xfcffff;
        g100241ec = ebp17;
        g100241f0 = reinterpret_cast<int32_t>(__return_address());
        g100241fc = reinterpret_cast<void*>(esp4 + 2);
        g10024138 = 0x10001;
        eax18 = g100241f0;
        g100240f4 = eax18;
        g100240e8 = 0xc0000409;
        g100240ec = 1;
        g100240f8 = 3;
        g100240fc = 2;
        ecx19 = g100240c4;
        g10024100 = ecx19;
        ecx20 = g100240c8;
        g10024104 = ecx20;
        eax21 = fun_1000a475(0x10001088);
        return eax21;
    } else {
        return eax22;
    }
}

struct s21 {
    struct s21* f0;
    signed char[7] pad8;
    struct s21* f8;
};

struct s20 {
    struct s21* f0;
    signed char[3] pad4;
    int32_t f4;
    int32_t f8;
};

struct s22 {
    signed char[4] pad4;
    void** f4;
};

/* SHLWAPI.dll:219 */
int32_t SHLWAPI_dll_219 = 0x800000db;

int32_t fun_10008d70(struct s20* a1, int32_t a2, struct s22*** a3, int32_t a4, int32_t a5, int32_t a6) {
    SHLWAPI_dll_219();
    goto 0x10001048;
}

int32_t g10024668;

int32_t GetProcessHeap = 0x25d32;

int32_t HeapFree = 0x25d00;

int32_t fun_10008d30(struct s21* ecx, struct s20* a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t eax6;

    __asm__("lock xadd [eax+0x4], esi");
    if (!1 && a2) {
        a2->f0 = reinterpret_cast<struct s21*>(0x10001af4);
        --g10024668;
        eax6 = reinterpret_cast<int32_t>(GetProcessHeap(0, a2));
        HeapFree(eax6, 0, a2);
    }
    return -2;
}

struct s23 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t f12;
};

void** fun_1000b6b9(int32_t a1, int32_t a2, void** a3);

void fun_1000d325(int32_t* ecx);

void** g10024484;

int32_t fun_10008fc0(void** a1);

void** fun_10008ea0(void** ecx, void** a2, void** a3);

void** fun_10008f30(void** ecx, void** a2, struct s23* a3, void*** a4, void** a5);

void** fun_10008d90(struct s23* a1, void*** a2) {
    void* ebp3;
    uint32_t eax4;
    void** v5;
    void** edi6;
    void** eax7;
    void** ecx8;
    void** eax9;
    void** edi10;
    void** eax11;
    void** edi12;
    void** eax13;
    void** edi14;
    void** ecx15;
    void** esi16;
    void** ecx17;
    void** esi18;
    uint32_t ecx19;
    void** eax20;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<void**>(0);
    v5 = reinterpret_cast<void**>(0);
    eax7 = fun_1000b6b9(20, 0x10002b64, edi6);
    if (!eax7) {
        fun_1000d325(reinterpret_cast<uint32_t>(ebp3) - 12);
    } else {
        ecx8 = g10024484;
        *reinterpret_cast<void***>(eax7 + 12) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax7) = reinterpret_cast<void**>(0x10001034);
        *reinterpret_cast<void***>(eax7 + 4) = reinterpret_cast<void**>(0x10001024);
        if (ecx8) {
            eax9 = *reinterpret_cast<void***>(ecx8);
            edi10 = *reinterpret_cast<void***>(eax9 + 4);
            if (!reinterpret_cast<int1_t>(edi10 == fun_10008fc0)) {
                image_base_(edi10, ecx8);
                edi10(edi10, ecx8);
            } else {
                fun_10008fc0(ecx8);
            }
        }
        *reinterpret_cast<void***>(eax7) = reinterpret_cast<void**>(0x10001010);
        *reinterpret_cast<void***>(eax7 + 4) = reinterpret_cast<void**>(0x10001000);
        *reinterpret_cast<void***>(eax7 + 16) = reinterpret_cast<void**>(0);
        eax11 = *reinterpret_cast<void***>(eax7);
        edi12 = *reinterpret_cast<void***>(eax11 + 4);
        image_base_(edi12, eax7);
        edi12(edi12, eax7);
        v5 = eax7;
        eax13 = *reinterpret_cast<void***>(eax7);
        edi14 = *reinterpret_cast<void***>(eax13 + 8);
        if (!reinterpret_cast<int1_t>(edi14 == fun_10008ea0)) {
            image_base_(edi14, eax7, eax7);
            edi14(edi14, eax7, eax7);
        } else {
            fun_10008ea0(edi12, eax7, eax7);
        }
        ecx15 = *reinterpret_cast<void***>(v5);
        esi16 = *reinterpret_cast<void***>(ecx15);
        if (!reinterpret_cast<int1_t>(esi16 == fun_10008f30)) {
            image_base_(esi16, v5, a1, a2, eax7);
            esi16(esi16, v5, a1, a2, eax7);
        } else {
            fun_10008f30(ecx15, v5, a1, a2, eax7);
        }
    }
    if (v5) {
        ecx17 = *reinterpret_cast<void***>(v5);
        esi18 = *reinterpret_cast<void***>(ecx17 + 8);
        if (!reinterpret_cast<int1_t>(esi18 == fun_10008ea0)) {
            image_base_(esi18, v5);
            esi18(esi18, v5);
        } else {
            fun_10008ea0(ecx17, v5, edi6);
        }
    }
    ecx19 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax20 = fun_1000a130(ecx19, ecx19);
    return eax20;
}

int32_t fun_10008fc0(void** a1) {
    __asm__("lock xadd [0x10024624], eax");
    return 2;
}

void** fun_10008fe0(void** ecx, unsigned char a2);

int32_t fun_10008fd0(void** a1);

void** fun_10008ea0(void** ecx, void** a2, void** a3) {
    void* ebp4;
    uint32_t eax5;
    uint32_t v6;
    void** eax7;
    void** ebx8;
    void** ecx9;
    void** eax10;
    void** edi11;
    void** eax12;
    void** eax13;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    v6 = eax5 ^ reinterpret_cast<uint32_t>(ebp4);
    __asm__("lock xadd [edi+0xc], esi");
    if (0) {
        if (a2) {
            eax7 = *reinterpret_cast<void***>(a2);
            ebx8 = *reinterpret_cast<void***>(eax7 + 16);
            if (!reinterpret_cast<int1_t>(ebx8 == fun_10008fe0)) {
                image_base_(ebx8, 1);
                ebx8(a2, 1);
            } else {
                fun_10008fe0(a2, 1);
            }
        }
        ecx9 = g10024484;
        if (ecx9) {
            eax10 = *reinterpret_cast<void***>(ecx9);
            edi11 = *reinterpret_cast<void***>(eax10 + 8);
            if (!reinterpret_cast<int1_t>(edi11 == fun_10008fd0)) {
                image_base_(edi11, ecx9);
                edi11(edi11, ecx9);
            } else {
                fun_10008fd0(ecx9);
                eax12 = fun_1000a130(v6 ^ reinterpret_cast<uint32_t>(ebp4));
                return eax12;
            }
        }
    }
    eax13 = fun_1000a130(v6 ^ reinterpret_cast<uint32_t>(ebp4));
    return eax13;
}

int32_t g10002fc8 = 0;

int32_t g10002fcc = 0xc0;

int32_t g10002fd0 = 0x46000000;

int32_t g100030a0 = 0x435a4cfc;

int32_t g100030a4 = 0xbd9dc291;

int32_t g100030a8 = 0x95fcbfec;

int32_t fun_1000f58d(struct s23* ecx, ...);

void** fun_10008f30(void** ecx, void** a2, struct s23* a3, void*** a4, void** a5) {
    void* ebp6;
    uint32_t eax7;
    int32_t edx8;
    int1_t zf9;
    int1_t zf10;
    int1_t zf11;
    int1_t zf12;
    int1_t zf13;
    int1_t zf14;
    int32_t eax15;
    int32_t edi16;
    void** esi17;
    void** eax18;
    void** ecx19;
    void** esi20;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    *a4 = reinterpret_cast<void**>(0);
    edx8 = a3->f0;
    if (edx8 || ((zf9 = a3->f4 == g10002fc8, !zf9) || ((zf10 = a3->f8 == g10002fcc, !zf10) || (zf11 = a3->f12 == g10002fd0, !zf11)))) {
        if (edx8 != 0xc35243ea || ((zf12 = a3->f4 == g100030a0, !zf12) || ((zf13 = a3->f8 == g100030a4, !zf13) || (zf14 = a3->f12 == g100030a8, !zf14)))) {
            eax15 = fun_1000f58d(a3);
            if (!eax15) {
                edi16 = 0x80004002;
            } else {
                edi16 = 0;
                *a4 = a2 + 4;
            }
            if (edi16 >= 0) 
                goto addr_1000d00e_7;
        } else {
            *a4 = a2;
            goto addr_10008f98_9;
        }
    } else {
        *a4 = a2;
        esi17 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2) + 4);
        image_base_(esi17, a2);
        esi17(esi17, a2);
        goto addr_10008fad_11;
    }
    addr_10008faa_12:
    addr_10008fad_11:
    eax18 = fun_1000a130(eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6));
    return eax18;
    addr_1000d00e_7:
    addr_10008f98_9:
    ecx19 = *a4;
    esi20 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx19) + 4);
    image_base_(esi20, ecx19);
    esi20(esi20, ecx19);
    goto addr_10008faa_12;
}

void** fun_10008fe0(void** ecx, unsigned char a2) {
    void* ebp3;
    uint32_t eax4;
    void** ecx5;
    void** eax6;
    void** edi7;
    int32_t eax8;
    void** eax9;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    ecx5 = *reinterpret_cast<void***>(ecx + 16);
    if (ecx5) {
        *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(0);
        eax6 = *reinterpret_cast<void***>(ecx5);
        edi7 = *reinterpret_cast<void***>(eax6 + 8);
        ecx5 = edi7;
        image_base_(ecx5);
        edi7(ecx5);
    }
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(0xc0000001);
    if (a2 & 1) {
        eax8 = reinterpret_cast<int32_t>(GetProcessHeap(ecx5, 0, ecx));
        HeapFree(ecx5, eax8, 0, ecx);
    }
    eax9 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax9;
}

int32_t fun_10008fd0(void** a1) {
    __asm__("lock xadd [0x10024624], eax");
    return -2;
}

void fun_1000b5c5();

void** fun_1000b63d(void** ecx, void** a2);

int32_t LeaveCriticalSection = 0x2651a;

void*** g2c;

int32_t g1002444c;

void** g100240cc = reinterpret_cast<void**>(0);

void fun_1000b57d(uint32_t* a1) {
    uint32_t* esi2;
    void** ecx3;
    void*** eax4;
    int32_t ecx5;
    void** eax6;

    fun_1000b5c5();
    esi2 = a1;
    while (*esi2) {
        if (*esi2 != 0xffffffff) 
            goto addr_1000b59f_4;
        fun_1000b63d(100, 100);
        ecx3 = reinterpret_cast<void**>(100);
    }
    *esi2 = 0xffffffff;
    addr_1000b5be_7:
    LeaveCriticalSection(ecx3);
    goto 0x10024420;
    addr_1000b59f_4:
    eax4 = g2c;
    ecx5 = g1002444c;
    ecx3 = *reinterpret_cast<void***>(eax4 + ecx5 * 4);
    eax6 = g100240cc;
    *reinterpret_cast<void***>(ecx3 + 4) = eax6;
    goto addr_1000b5be_7;
}

struct s25 {
    signed char[12] pad12;
    struct s2** f12;
};

struct s24 {
    signed char[4] pad4;
    struct s25* f4;
};

struct s24* fun_10009680(struct s2* a1);

struct s26 {
    signed char[4] pad4;
    struct s1* f4;
};

void fun_1001f1fc();

struct s25** fun_10009690(struct s2* a1);

signed char fun_10008af0(struct s0** ecx, signed char a2) {
    void* ebp3;
    uint32_t eax4;
    uint32_t v5;
    struct s0** edi6;
    struct s0** v7;
    int32_t esi8;
    struct s26* eax9;
    struct s1** esi10;
    int32_t ebx11;
    struct s1** eax12;
    struct s1** ebx13;
    int32_t eax14;
    int32_t eax15;
    struct s0* eax16;
    int32_t edi17;
    int32_t eax18;
    int32_t* eax19;
    int32_t ecx20;
    struct s4** eax21;
    int32_t edi22;
    int32_t esi23;
    int32_t eax24;
    void** eax25;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = eax4 ^ reinterpret_cast<uint32_t>(ebp3);
    edi6 = ecx;
    v7 = edi6;
    esi8 = (*edi6)->f16;
    if (!reinterpret_cast<int1_t>(esi8 == fun_10009680)) {
        image_base_(edi6);
        eax9 = reinterpret_cast<struct s26*>(esi8(edi6));
    } else {
        eax9 = reinterpret_cast<struct s26*>(fun_1001f1fc);
    }
    esi10 = &eax9->f4;
    ebx11 = (*edi6)->f24;
    if (!reinterpret_cast<int1_t>(ebx11 == fun_10009690)) {
        image_base_(edi6);
        eax12 = reinterpret_cast<struct s1**>(ebx11(edi6));
        ebx13 = eax12;
    } else {
        ebx13 = reinterpret_cast<struct s1**>(0x1001f20c);
    }
    if (reinterpret_cast<uint32_t>(esi10) < reinterpret_cast<uint32_t>(ebx13)) {
        do {
            if (*esi10) {
                eax14 = (*edi6)->f12;
                if (!reinterpret_cast<int1_t>(eax14 == fun_100096a0)) {
                    image_base_(eax14, edi6);
                    eax15 = reinterpret_cast<int32_t>(eax14(eax14, edi6));
                } else {
                    eax15 = g10024624;
                }
                if (eax15) {
                    if (!a2) 
                        goto addr_10008ba9_18;
                }
                if (*(*esi10)->f12) {
                    eax16 = *edi6;
                    edi17 = eax16->f28;
                    image_base_(edi17, edi6);
                    eax18 = reinterpret_cast<int32_t>(edi17(edi17, edi6));
                    AcquireSRWLockExclusive(edi17, eax18, edi6);
                    eax19 = (*esi10)->f12;
                    ecx20 = *eax19;
                    if (ecx20) {
                        *eax19 = 0;
                        if (eax18) {
                            ReleaseSRWLockExclusive(eax18, eax18, edi6);
                            ecx20 = ecx20;
                        }
                        eax21 = reinterpret_cast<struct s4**>(DecodePointer(ecx20, eax18, edi6));
                        edi22 = (*eax21)->f8;
                        image_base_(edi22, eax21, ecx20, eax18, edi6);
                        edi22(edi22, eax21, ecx20, eax18, edi6);
                    } else {
                        if (eax18) {
                            ReleaseSRWLockExclusive(eax18, eax18, edi6);
                        }
                    }
                    edi6 = v7;
                }
            }
            ++esi10;
        } while (reinterpret_cast<uint32_t>(esi10) < reinterpret_cast<uint32_t>(ebx13));
    }
    esi23 = (*edi6)->f12;
    if (!reinterpret_cast<int1_t>(esi23 == fun_100096a0)) {
        image_base_(esi23, edi6);
        eax24 = reinterpret_cast<int32_t>(esi23(esi23, edi6));
    } else {
        eax24 = g10024624;
    }
    if (eax24) {
        addr_10008ba9_18:
    }
    eax25 = fun_1000a130(v5 ^ reinterpret_cast<uint32_t>(ebp3));
    return *reinterpret_cast<signed char*>(&eax25);
}

uint32_t g10024068 = 0;

uint32_t g1002406c = 0;

int32_t EtwEventRegister = 0x25d5a;

void** fun_10009200(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30);

int32_t fun_100094e0() {
    uint32_t eax1;
    uint32_t eax2;
    int32_t eax3;

    eax1 = g10024068;
    eax2 = eax1 | g1002406c;
    if (eax2) {
        eax3 = 0;
    } else {
        eax3 = reinterpret_cast<int32_t>(EtwEventRegister(0x10002cd4, fun_10009200, 0x10024068, 0x10024068));
    }
    return eax3;
}

int32_t fun_100096a0(struct s2* ecx, struct s2* a2) {
    int32_t eax3;

    eax3 = g10024624;
    return eax3;
}

int32_t fun_1000a3c5(void** a1);

int32_t fun_1000a45e(void** ecx, void** a2) {
    int32_t eax3;
    uint32_t eax4;

    eax3 = fun_1000a3c5(a2);
    eax4 = reinterpret_cast<uint32_t>(-eax3);
    return reinterpret_cast<int32_t>(-(eax4 - (eax4 + reinterpret_cast<uint1_t>(eax4 < eax4 + reinterpret_cast<uint1_t>(!!eax3))))) - 1;
}

void fun_1000b631(void** ecx, int32_t a2);

uint32_t g1002443c;

int32_t SetEvent = 0x262c2;

int32_t ResetEvent = 0x26f2a;

uint32_t g10024444;

void** fun_1000b53c(void** ecx, void*** a2, void** a3) {
    void** ecx4;
    void** ecx5;
    void*** eax6;
    int32_t ecx7;
    void** ecx8;
    void** eax9;
    int32_t ebp10;
    void* ebp11;
    uint32_t eax12;
    uint32_t eax13;
    uint32_t v14;
    uint32_t esi15;
    uint32_t esi16;
    uint32_t ecx17;
    void** eax18;

    fun_1000b5c5();
    ecx4 = g100240cc;
    ecx5 = ecx4 + 1;
    g100240cc = ecx5;
    *a2 = ecx5;
    eax6 = g2c;
    ecx7 = g1002444c;
    ecx8 = *reinterpret_cast<void***>(eax6 + ecx7 * 4);
    eax9 = g100240cc;
    *reinterpret_cast<void***>(ecx8 + 4) = eax9;
    fun_1000b631(ecx8, ebp10);
    ebp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 4 - 4 + 4 + 4 - 4);
    eax12 = g100240c4;
    eax13 = g1002443c;
    if (eax13) {
        SetEvent(eax13);
        v14 = g1002443c;
        ResetEvent(v14, eax13);
    } else {
        esi15 = g100240c4;
        esi16 = esi15 ^ g10024444;
        __asm__("ror esi, cl");
        image_base_(esi16);
        esi16(esi16);
    }
    ecx17 = eax12 ^ reinterpret_cast<uint32_t>(ebp11) ^ reinterpret_cast<uint32_t>(ebp11);
    eax18 = fun_1000a130(ecx17, ecx17);
    return eax18;
}

int32_t _amsg_exit = 0x25c42;

void fun_1000a146(void** ecx) {
    goto _amsg_exit;
}

int32_t _initterm = 0x25c62;

void fun_1000a335(int32_t ecx) {
    goto _initterm;
}

void** g0;

struct s27 {
    int16_t f0;
    signed char[58] pad60;
    int32_t f60;
};

int32_t fun_1000a260(struct s27* a1);

struct s28 {
    signed char[8] pad8;
    int32_t f8;
    uint32_t f12;
    signed char[20] pad36;
    uint32_t f36;
};

struct s29 {
    signed char[60] pad60;
    int32_t f60;
};

struct s28* fun_1000a150(struct s29* a1, uint32_t a2);

uint32_t fun_1000a1a0(int32_t ecx, int32_t a2) {
    void** eax3;
    int32_t eax4;
    struct s28* eax5;
    uint32_t eax6;

    eax3 = g0;
    g0 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffff0);
    eax4 = fun_1000a260(0x10000000);
    if (!eax4 || (eax5 = fun_1000a150(0x10000000, a2 - 0x10000000), eax5 == 0)) {
        g0 = eax3;
        return 0;
    } else {
        eax6 = ~(eax5->f36 >> 31) & 1;
        g0 = eax3;
        return eax6;
    }
}

int32_t GetSystemTimeAsFileTime = 0x25dbc;

int32_t GetCurrentProcessId = 0x25d90;

int32_t GetCurrentThreadId = 0x25da6;

int32_t GetTickCount = 0x25dd6;

int32_t QueryPerformanceCounter = 0x25d76;

void fun_1000a293() {
    void* ebp1;
    uint32_t eax2;
    void* v3;
    uint32_t eax4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t ecx7;
    uint32_t v8;
    uint32_t v9;
    int1_t zf10;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = g100240c4;
    if (eax2 == 0xbb40e64e || !(0xffff0000 & eax2)) {
        v3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp1) - 12);
        GetSystemTimeAsFileTime(v3);
        eax4 = reinterpret_cast<uint32_t>(GetCurrentProcessId(v3));
        eax5 = reinterpret_cast<uint32_t>(GetCurrentThreadId(v3));
        eax6 = reinterpret_cast<uint32_t>(GetTickCount(v3));
        QueryPerformanceCounter(reinterpret_cast<int32_t>(ebp1) - 20, v3);
        ecx7 = eax6 ^ (eax4 ^ eax5) ^ reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebp1) - 4) ^ (v8 ^ v9);
        if (ecx7 == 0xbb40e64e || (zf10 = (g100240c4 & 0xffff0000) == 0, zf10)) {
            ecx7 = 0xbb40e64f;
        }
        g100240c4 = ecx7;
        g100240c8 = reinterpret_cast<int32_t>(~ecx7);
    } else {
        g100240c8 = reinterpret_cast<int32_t>(~eax2);
    }
    return;
}

int32_t fun_1000a140();

int32_t fun_10009e26(int32_t a1, int32_t** a2) {
    int32_t eax3;

    if (a1 != 0xe06d7363) {
        return 0;
    } else {
        eax3 = fun_1000a140();
        return eax3;
    }
}

int32_t _XcptFilter = 0x25c34;

int32_t fun_1000a140() {
    goto _XcptFilter;
}

struct s30 {
    signed char[4] pad4;
    void** f4;
};

uint56_t g18;

void** g1002445c;

int32_t Sleep = 0x25d6e;

int32_t g100240e0 = 0;

void** g10024460;

void** fun_1000a0e6(void** ecx, int32_t* a2, int32_t* a3);

void fun_100020d4(unsigned char cl, unsigned char a2);

void fun_100020c4();

int32_t g10024464;

void** g10024458;

void** g10024454;

int32_t free = 0x25c50;

void** fun_10009c02(void** ecx, int32_t a2, void** a3, int32_t a4) {
    void* ebp5;
    uint32_t eax6;
    uint32_t v7;
    struct s30* eax8;
    void** v9;
    void** edx10;
    void** v11;
    void** ecx12;
    int1_t zf13;
    void** tmp32_14;
    int32_t eax15;
    struct s30* eax16;
    void** v17;
    void** edx18;
    void** ecx19;
    void** v20;
    int1_t zf21;
    void** tmp32_22;
    int1_t zf23;
    void** tmp32_24;
    void** eax25;
    int1_t zf26;
    void** eax27;
    int32_t v28;
    int1_t zf29;
    uint32_t eax30;
    int32_t esi31;
    int1_t zf32;
    void** eax33;
    void** v34;
    void** esi35;
    void** edi36;
    void** v37;
    void** edx38;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    v7 = eax6 ^ reinterpret_cast<uint32_t>(ebp5);
    if (a3) {
        if (!reinterpret_cast<int1_t>(a3 == 1)) {
            addr_10009def_3:
        } else {
            eax8 = *reinterpret_cast<struct s30**>(&g18);
            v9 = reinterpret_cast<void**>(0);
            edx10 = eax8->f4;
            v11 = edx10;
            while (1) {
                ecx12 = edx10;
                zf13 = g1002445c == ecx12;
                if (zf13) {
                    tmp32_14 = g1002445c;
                    g1002445c = ecx12;
                    ecx12 = tmp32_14;
                }
                if (!0) 
                    goto addr_10009d65_8;
                if (!edx10) 
                    goto addr_10009d67_10;
                Sleep(ecx12, 0x3e8);
                edx10 = v11;
            }
        }
    } else {
        eax15 = g100240e0;
        if (reinterpret_cast<uint1_t>(eax15 < 0) | reinterpret_cast<uint1_t>(eax15 == 0)) 
            goto addr_10009d1c_13;
        g100240e0 = eax15 - 1;
        eax16 = *reinterpret_cast<struct s30**>(&g18);
        v17 = reinterpret_cast<void**>(0);
        edx18 = eax16->f4;
        ecx19 = edx18;
        v20 = edx18;
        zf21 = g1002445c == ecx19;
        if (zf21) {
            tmp32_22 = g1002445c;
            g1002445c = ecx19;
            ecx19 = tmp32_22;
        }
        while (0) {
            if (!edx18) 
                goto addr_10009c77_19;
            Sleep(ecx19, 0x3e8);
            edx18 = v20;
            ecx19 = edx18;
            zf23 = g1002445c == ecx19;
            if (!zf23) 
                continue;
            tmp32_24 = g1002445c;
            g1002445c = ecx19;
            ecx19 = tmp32_24;
        }
        goto addr_10009c75_22;
    }
    addr_10009df1_23:
    eax25 = fun_1000a130(v7 ^ reinterpret_cast<uint32_t>(ebp5));
    return eax25;
    addr_10009d65_8:
    addr_10009d6a_24:
    zf26 = g10024460 == 0;
    if (zf26) {
        g10024460 = reinterpret_cast<void**>(1);
        eax27 = fun_1000a0e6(ecx12, 0x100020c8, fun_100020d4);
        if (eax27) {
            addr_10009d1c_13:
            goto addr_10009df1_23;
        } else {
            v28 = reinterpret_cast<int32_t>(fun_100020c4);
            fun_1000a335(fun_100020d4);
            g10024460 = reinterpret_cast<void**>(2);
        }
    } else {
        v28 = 31;
        fun_1000a146(ecx12);
    }
    if (!v9) {
        g1002445c = reinterpret_cast<void**>(0);
    }
    zf29 = g10024464 == 0;
    if (!zf29 && (eax30 = fun_1000a1a0(v28, 0x10024464), !!eax30)) {
        esi31 = g10024464;
        image_base_(esi31, a2, 2, a4);
        esi31(esi31, a2, 2, a4);
    }
    ++g100240e0;
    goto addr_10009def_3;
    addr_10009d67_10:
    v9 = reinterpret_cast<void**>(1);
    goto addr_10009d6a_24;
    addr_10009c75_22:
    addr_10009c7a_33:
    zf32 = reinterpret_cast<int1_t>(g10024460 == 2);
    if (zf32) {
        eax33 = g10024458;
        v34 = eax33;
        if (eax33) {
            esi35 = g10024454;
            edi36 = eax33;
            v37 = esi35;
            while (esi35 = esi35 - 4, reinterpret_cast<unsigned char>(esi35) >= reinterpret_cast<unsigned char>(eax33)) {
                ecx19 = *reinterpret_cast<void***>(esi35);
                if (!ecx19) 
                    continue;
                *reinterpret_cast<void***>(esi35) = reinterpret_cast<void**>(0);
                image_base_();
                ecx19();
                edx38 = g10024458;
                ecx19 = g10024454;
                if (edi36 != edx38) 
                    goto addr_10009cda_39;
                eax33 = v34;
                if (v37 == ecx19) 
                    continue;
                addr_10009cda_39:
                eax33 = edx38;
                v37 = ecx19;
                edi36 = edx38;
                v34 = eax33;
                esi35 = ecx19;
            }
            free(ecx19);
            g10024454 = reinterpret_cast<void**>(0);
            g10024458 = reinterpret_cast<void**>(0);
        }
        g10024460 = reinterpret_cast<void**>(0);
        if (!v17) {
            g1002445c = reinterpret_cast<void**>(0);
            goto addr_10009def_3;
        }
    } else {
        fun_1000a146(ecx19);
        goto addr_10009def_3;
    }
    addr_10009c77_19:
    v17 = reinterpret_cast<void**>(1);
    goto addr_10009c7a_33;
}

void** g10024480;

uint32_t g10024024 = 0;

uint32_t g10024020 = 0;

int32_t EtwEventUnregister = 0x25d44;

uint32_t g10024008 = 0;

void fun_10009510(uint32_t a1, uint32_t a2);

int32_t fun_10009330(void** ecx);

void** fun_1000d35b(void** a1);

int32_t fun_1000ba48(void** ecx, void** a2, uint32_t a3, int32_t a4) {
    int32_t esi5;
    uint32_t eax6;
    uint32_t v7;
    uint32_t v8;
    int32_t eax9;

    g10024480 = a2;
    esi5 = 1;
    eax6 = a3;
    if (!eax6) {
        v7 = g10024024;
        v8 = g10024020;
        EtwEventUnregister(v8, v7);
        g10024020 = 0;
        g10024024 = 0;
        g10024008 = 0;
        fun_10009510(v8, v7);
    } else {
        if (!(eax6 - 1)) {
            eax9 = fun_10009330(a2);
            esi5 = eax9;
            fun_1000d35b(a2);
        }
    }
    return esi5;
}

void** fun_1000a0e6(void** ecx, int32_t* a2, int32_t* a3) {
    void* ebp4;
    uint32_t eax5;
    uint32_t v6;
    int32_t* esi7;
    int32_t eax8;
    int32_t edi9;
    void** eax10;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    v6 = eax5 ^ reinterpret_cast<uint32_t>(ebp4);
    esi7 = a2;
    eax8 = 0;
    if (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(a3)) {
        do {
            if (eax8) 
                break;
            edi9 = *esi7;
            if (edi9) {
                image_base_(edi9);
                eax8 = reinterpret_cast<int32_t>(edi9(edi9));
            }
            ++esi7;
        } while (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(a3));
    }
    eax10 = fun_1000a130(v6 ^ reinterpret_cast<uint32_t>(ebp4));
    return eax10;
}

struct s31 {
    signed char[6] pad6;
    uint16_t f6;
    signed char[12] pad20;
    uint16_t f20;
};

struct s28* fun_1000a150(struct s29* a1, uint32_t a2) {
    uint32_t edx3;
    struct s31* ecx4;
    uint32_t ebx5;
    struct s28* eax6;
    uint32_t edi7;

    edx3 = 0;
    ecx4 = reinterpret_cast<struct s31*>(a1->f60 + reinterpret_cast<int32_t>(a1));
    ebx5 = ecx4->f6;
    eax6 = reinterpret_cast<struct s28*>(ecx4->f20 + 24 + reinterpret_cast<int32_t>(ecx4));
    if (!ebx5) {
        addr_1000a18e_2:
        eax6 = reinterpret_cast<struct s28*>(0);
    } else {
        edi7 = a2;
        do {
            if (edi7 < eax6->f12) 
                continue;
            if (edi7 < eax6->f8 + eax6->f12) 
                break;
            ++edx3;
            ++eax6;
        } while (edx3 < ebx5);
        goto addr_1000a18e_2;
    }
    return eax6;
}

uint32_t fun_1000b413(int32_t ecx, uint32_t a2) {
    uint32_t eax3;

    __asm__("ror eax, cl");
    eax3 = a2 ^ g100240c4;
    return eax3;
}

void fun_1000a5f5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    int32_t ebp7;
    int32_t* esp8;
    void* ebp9;

    g0 = *reinterpret_cast<void***>(ebp7 - 16);
    esp8 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp9) + 4 - 4);
    *esp8 = reinterpret_cast<int32_t>(__return_address());
    goto *esp8;
}

void fun_1000b6e7(void** ecx);

void fun_1000b741(void** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7) {
    fun_1000b6e7(ecx);
    return;
}

uint32_t g10024450;

void fun_1000b8d0(int32_t a1, void** a2, void** a3, void** a4, void** a5, void** a6) {
    g10024450 = 0;
    return;
}

int32_t memset = 0x26ede;

void** fun_1000b8d8(void** ecx, void** a2, void** a3, uint32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, ...) {
    goto memset;
}

int32_t DisableThreadLibraryCalls = 0x25f8c;

int32_t g100244f0;

struct s32 {
    struct s32* f0;
    signed char[28] pad32;
    int32_t f32;
};

int32_t g100244e0;

int32_t g100244f8;

int32_t g100244fc;

int32_t g10024518;

int32_t g10024508;

int32_t g10024520;

int32_t g10024524;

int32_t g10024540;

int32_t g10024530;

int32_t g10024548;

int32_t g1002454c;

int32_t g10024568;

int32_t g10024558;

int32_t g10024570;

int32_t g10024574;

int32_t g10024590;

int32_t g10024580;

int32_t g10024598;

int32_t g1002459c;

int32_t g100245b8;

int32_t g100245a8;

int32_t g100245c0;

int32_t g100245c4;

int32_t g100245d0;

int32_t g100245d4;

int32_t g100245d8;

int32_t g100245dc;

int32_t g100245e0;

int32_t g100245e4;

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(0);

int32_t EtwRegisterTraceGuidsW = 0x25e96;

int32_t InitializeCriticalSection = 0x25fa8;

int32_t TlsAlloc = 0x25fc4;

void** g100240d0 = reinterpret_cast<void**>(0xff);

int32_t fun_10009330(void** ecx) {
    int32_t edi2;
    int32_t esi3;
    struct s32* esi4;
    int32_t* edi5;
    int32_t ecx6;
    void** eax7;

    DisableThreadLibraryCalls(ecx, edi2, esi3);
    g100244f0 = 0;
    esi4 = reinterpret_cast<struct s32*>(0x100244e0);
    g100244e0 = 0x10024508;
    edi5 = reinterpret_cast<int32_t*>(0x100245d0);
    g100244f8 = 1;
    g100244fc = 0;
    g10024518 = 0;
    g10024508 = 0x10024530;
    g10024520 = 1;
    g10024524 = 0;
    g10024540 = 0;
    g10024530 = 0x10024558;
    g10024548 = 1;
    g1002454c = 0;
    g10024568 = 0;
    g10024558 = 0x10024580;
    g10024570 = 1;
    g10024574 = 0;
    g10024590 = 0;
    g10024580 = 0x100245a8;
    g10024598 = 1;
    g1002459c = 0;
    g100245b8 = 0;
    g100245a8 = 0;
    g100245c0 = 1;
    g100245c4 = 0;
    g100245d0 = 0x10002cc4;
    g100245d4 = 0x10002cb4;
    g100245d8 = 0x10002ca4;
    g100245dc = 0x10002c94;
    g100245e0 = 0x10002c84;
    g100245e4 = 0x10002c74;
    image_base_ = reinterpret_cast<void**>(0x100244e0);
    do {
        ecx6 = *edi5;
        ++edi5;
        esi4->f32 = ecx6;
        EtwRegisterTraceGuidsW();
        esi4 = esi4->f0;
    } while (esi4);
    fun_100094e0();
    InitializeCriticalSection();
    eax7 = reinterpret_cast<void**>(TlsAlloc());
    g100240d0 = eax7;
    return reinterpret_cast<int32_t>(esi4) + 1;
}

uint32_t g10024028 = 0;

uint32_t g1002402c = 0;

/* (image base) */
uint16_t* image_base_ = reinterpret_cast<uint16_t*>(0x100070f2);

int32_t EtwEventSetInformation = 0x25d0c;

void** fun_1000d35b(void** a1) {
    void* ebp2;
    uint32_t eax3;
    int32_t eax4;
    uint1_t zf5;
    uint16_t* ecx6;
    uint32_t v7;
    uint32_t v8;
    uint32_t v9;
    uint32_t ecx10;
    void** eax11;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    g10024028 = 0;
    g1002402c = 0;
    eax4 = reinterpret_cast<int32_t>(EtwEventRegister());
    zf5 = reinterpret_cast<uint1_t>(eax4 == 0);
    if (zf5) {
        ecx6 = image_base_;
        v7 = *ecx6;
        v8 = g10024024;
        v9 = g10024020;
        EtwEventSetInformation(v9, v8, 2, ecx6, v7);
    } else {
        if (!(reinterpret_cast<uint1_t>(eax4 < 0) | zf5)) {
        }
    }
    ecx10 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax11 = fun_1000a130(ecx10, ecx10);
    return eax11;
}

void fun_1000a5b0(void** a1, void** a2, void** a3);

/* (image base) */
int32_t image_base_ = 0x1000a723;

void fun_1000c27c(void** ecx, void** a2, void** a3, void** a4, void** a5);

void fun_1000bb91(void** ecx, void** a2, void** a3) {
    int32_t ebp4;
    int32_t ebp5;
    int32_t ebp6;
    int32_t ebp7;
    int32_t ebp8;
    int32_t eax9;
    int32_t ebp10;
    int32_t ebp11;
    void* ebp12;

    fun_1000a5b0(0x1001f1b8, 20, __return_address());
    *reinterpret_cast<void***>(ebp4 - 36) = ecx;
    if (!ecx) {
        addr_1000bc2d_2:
    } else {
        *reinterpret_cast<uint32_t*>(ebp5 - 4) = 0;
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx) == 0x554d4954)) {
            *reinterpret_cast<int32_t*>(ebp6 - 4) = -2;
            goto addr_1000bc2d_2;
        } else {
            *reinterpret_cast<int32_t*>(ebp7 - 4) = 0xfe;
            *reinterpret_cast<int32_t*>(ebp8 - 4) = 1;
            eax9 = reinterpret_cast<int32_t>(image_base_("X3", 0x100033a2, ecx + 4));
            *reinterpret_cast<int32_t*>(ebp10 - 32) = eax9;
            *reinterpret_cast<int32_t*>(ebp11 - 4) = 0xfe;
            ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp12) + 0xffffffdc);
            fun_1000c27c(ecx, 0x1001f1b8, 20, __return_address(), a2);
        }
    }
    fun_1000a5f5(ecx, 0x1001f1b8, 20, __return_address(), a2, a3);
    goto 0x1001f1b8;
}

void fun_1000a33c(void** a1, void** a2, void** a3);

struct s33 {
    signed char[12] pad12;
    int32_t f12;
};

struct s34 {
    signed char[16] pad16;
    uint32_t* f16;
};

struct s35 {
    signed char[20] pad20;
    uint32_t* f20;
};

struct s36 {
    signed char[32] pad32;
    int32_t f32;
};

struct s37 {
    signed char[4] pad4;
    int32_t f4;
};

struct s38 {
    signed char[4] pad4;
    int32_t f4;
};

struct s39 {
    signed char[4] pad4;
    int32_t f4;
};

int32_t LocalFree = 0x26282;

void fun_1000a384(void** ecx, void** a2, void** a3, void** a4, void** a5);

int32_t LocalAlloc = 0x26274;

struct s40 {
    signed char[4] pad4;
    void* f4;
};

int32_t RtlLengthSid = 0x267c6;

int32_t RtlCopySid = 0x267d6;

int32_t RtlSubAuthorityCountSid = 0x26796;

int32_t RtlSubAuthoritySid = 0x26780;

void** fun_1000bc44(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28) {
    void** v29;
    int32_t ebp30;
    int32_t ebp31;
    struct s33* ebp32;
    uint32_t* ebx33;
    struct s34* ebp34;
    int32_t ebp35;
    uint32_t* edx36;
    struct s35* ebp37;
    int32_t ebp38;
    int32_t ebp39;
    struct s36* ebp40;
    int32_t ebp41;
    int32_t ebp42;
    int32_t ebp43;
    int32_t ebp44;
    int32_t ebp45;
    int32_t ebp46;
    int32_t ebp47;
    int32_t ebp48;
    int32_t ebp49;
    struct s37* eax50;
    int32_t ebp51;
    int32_t v52;
    int32_t ebp53;
    void* ebp54;
    int32_t v55;
    int32_t ebp56;
    int32_t v57;
    int32_t ebp58;
    int32_t v59;
    uint32_t eax60;
    uint32_t esi61;
    int32_t ebp62;
    int32_t ebp63;
    int32_t ebp64;
    struct s38* eax65;
    int32_t ebp66;
    int32_t v67;
    int32_t ebp68;
    void* ebp69;
    int32_t v70;
    int32_t ebp71;
    int32_t v72;
    int32_t ebp73;
    int32_t v74;
    uint32_t eax75;
    int32_t ebp76;
    int32_t ebp77;
    int32_t ebp78;
    int32_t ebp79;
    int32_t ebp80;
    int32_t ebp81;
    int32_t ebp82;
    struct s39* eax83;
    int32_t ebp84;
    int32_t v85;
    int32_t ebp86;
    void* ebp87;
    int32_t v88;
    int32_t ebp89;
    int32_t v90;
    int32_t ebp91;
    int32_t v92;
    uint32_t eax93;
    int32_t ebp94;
    int32_t ebp95;
    int32_t ebp96;
    int32_t ebp97;
    int32_t ebp98;
    int32_t ebp99;
    int32_t ebp100;
    int32_t ebp101;
    int32_t ebp102;
    int32_t ebp103;
    int32_t ebp104;
    int32_t ebp105;
    int32_t ebp106;
    int32_t ebp107;
    int32_t ebp108;
    int32_t ebp109;
    int32_t ebp110;
    int32_t ebp111;
    int32_t ebp112;
    int32_t ebp113;
    int32_t ebp114;
    int32_t ebp115;
    int32_t ebp116;
    int32_t ebp117;
    int32_t ebp118;
    int32_t ebp119;
    int32_t ebp120;
    int32_t ebp121;
    int32_t ebp122;
    int32_t eax123;
    int32_t ebp124;
    uint32_t* ebx125;
    int32_t ebp126;
    uint32_t v127;
    int32_t ebp128;
    int32_t ebp129;
    int32_t v130;
    int32_t ebp131;
    int32_t ebp132;
    int32_t v133;
    int32_t ebp134;
    int32_t ebp135;
    int32_t v136;
    int32_t eax137;
    int32_t ebp138;
    void* eax139;
    void** eax140;
    void** edx141;
    int32_t ebp142;
    int32_t ebp143;
    void** v144;
    int32_t eax145;
    int32_t ebp146;
    uint32_t v147;
    int32_t ebp148;
    void** v149;
    int32_t ebp150;
    int32_t ebp151;
    int32_t ebp152;
    int32_t ebp153;
    int32_t ebp154;
    int32_t ebp155;
    int32_t ebp156;
    int32_t ebp157;
    int32_t ebp158;
    uint32_t ecx159;
    int32_t ebp160;
    uint32_t edx161;
    int32_t ebp162;
    int32_t ebp163;
    void* eax164;
    int32_t ebp165;
    int32_t ebp166;
    int32_t ebp167;
    int32_t edx168;
    int32_t ebp169;
    void* eax170;
    int32_t ebp171;
    int32_t ebp172;
    int32_t ebp173;
    int32_t ebp174;
    int32_t ebp175;
    int32_t ebp176;
    int32_t ebp177;
    int32_t ebp178;
    int32_t ebp179;
    int32_t ebp180;
    int32_t ebp181;
    int32_t ebp182;
    int32_t eax183;
    int32_t ebp184;
    int32_t ebp185;
    uint32_t eax186;
    int32_t v187;
    int32_t ebp188;
    int32_t v189;
    int32_t ebp190;
    int32_t ebp191;
    int32_t v192;
    int32_t ebp193;
    int32_t eax194;
    int32_t v195;
    int32_t ebp196;
    int32_t v197;
    int32_t ebp198;
    int32_t ebp199;
    int32_t ebp200;
    int32_t ebp201;
    int32_t ebp202;
    int32_t eax203;
    int32_t ebp204;
    int32_t ebp205;
    int32_t ebp206;
    int32_t v207;
    int32_t ebp208;
    unsigned char* eax209;
    int32_t ecx210;
    int32_t ebp211;
    int32_t* eax212;
    int32_t ebp213;
    uint32_t eax214;
    int32_t ebp215;
    int32_t ebp216;
    int32_t ebp217;
    int32_t ebp218;
    int32_t ebp219;
    int32_t ebp220;

    v29 = reinterpret_cast<void**>(__return_address());
    fun_1000a33c(0x1001f140, 0x80, v29);
    *reinterpret_cast<void***>(ebp30 - 72) = ecx;
    *reinterpret_cast<int32_t*>(ebp31 - 88) = ebp32->f12;
    ebx33 = ebp34->f16;
    *reinterpret_cast<uint32_t**>(ebp35 - 0x74) = ebx33;
    edx36 = ebp37->f20;
    *reinterpret_cast<uint32_t**>(ebp38 - 0x84) = edx36;
    *reinterpret_cast<int32_t*>(ebp39 - 68) = ebp40->f32;
    *reinterpret_cast<int32_t*>(ebp41 - 64) = 3;
    *reinterpret_cast<uint32_t*>(ebp42 - 80) = 0;
    *reinterpret_cast<uint32_t*>(ebp43 - 76) = 0;
    *reinterpret_cast<uint32_t*>(ebp44 - 0x6c) = 0;
    *reinterpret_cast<uint32_t*>(ebp45 - 0x68) = 0;
    *reinterpret_cast<uint32_t*>(ebp46 - 100) = 0;
    *reinterpret_cast<uint32_t*>(ebp47 - 96) = 0;
    *reinterpret_cast<uint32_t*>(ebp48 - 84) = 0;
    *ebx33 = 0;
    *edx36 = 0;
    if (ecx) {
        *reinterpret_cast<uint32_t*>(ebp49 - 4) = 0;
        eax50 = *reinterpret_cast<struct s37**>(ebp51 - 72);
        v52 = *reinterpret_cast<int32_t*>(ebp53 - 68);
        ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp54) + 0xffffffb0);
        v55 = *reinterpret_cast<int32_t*>(ebp56 - 0x74);
        v57 = *reinterpret_cast<int32_t*>(ebp58 - 88);
        v59 = eax50->f4;
        eax60 = reinterpret_cast<uint32_t>(image_base_("X3", 0x100042d0, v59, 1, v57, v55, ecx, 1, v52, 0, 2));
        esi61 = eax60;
        *reinterpret_cast<uint32_t*>(ebp62 - 0x70) = esi61;
        *reinterpret_cast<int32_t*>(ebp63 - 4) = -2;
        if (esi61 == 0xc0020012) 
            goto addr_1000bd30_4;
        if (esi61 != 0xc002002e) 
            goto addr_1000be57_6;
    } else {
        goto addr_1000c158_8;
    }
    addr_1000bd30_4:
    *reinterpret_cast<int32_t*>(ebp64 - 4) = 1;
    eax65 = *reinterpret_cast<struct s38**>(ebp66 - 72);
    v67 = *reinterpret_cast<int32_t*>(ebp68 - 68);
    ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp69) + 0xffffff94);
    v70 = *reinterpret_cast<int32_t*>(ebp71 - 0x74);
    v72 = *reinterpret_cast<int32_t*>(ebp73 - 88);
    v74 = eax65->f4;
    eax75 = reinterpret_cast<uint32_t>(image_base_("X3", 0x10004066, v74, 1, v72, v70, ecx, 1, v67, 0, 2));
    esi61 = eax75;
    *reinterpret_cast<uint32_t*>(ebp76 - 0x70) = esi61;
    *reinterpret_cast<int32_t*>(ebp77 - 64) = 2;
    if (*reinterpret_cast<int32_t*>(ebp78 - 0x68)) {
        *reinterpret_cast<int32_t*>(ebp79 - 84) = *reinterpret_cast<int32_t*>(ebp80 - 0x6c);
    }
    *reinterpret_cast<int32_t*>(ebp81 - 4) = -2;
    if (esi61 == 0xc0020012 || esi61 == 0xc002002e) {
        *reinterpret_cast<int32_t*>(ebp82 - 4) = 2;
        eax83 = *reinterpret_cast<struct s39**>(ebp84 - 72);
        v85 = *reinterpret_cast<int32_t*>(ebp86 - 68);
        ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp87) + 0xffffff9c);
        v88 = *reinterpret_cast<int32_t*>(ebp89 - 0x74);
        v90 = *reinterpret_cast<int32_t*>(ebp91 - 88);
        v92 = eax83->f4;
        eax93 = reinterpret_cast<uint32_t>(image_base_("X3", 0x100036a0, v92, 1, v90, v88, ecx, 1, v85));
        esi61 = eax93;
        *reinterpret_cast<uint32_t*>(ebp94 - 0x70) = esi61;
        *reinterpret_cast<int32_t*>(ebp95 - 64) = 1;
        if (*reinterpret_cast<int32_t*>(ebp96 - 96)) {
            *reinterpret_cast<int32_t*>(ebp97 - 84) = *reinterpret_cast<int32_t*>(ebp98 - 100);
        }
        *reinterpret_cast<int32_t*>(ebp99 - 4) = -2;
    }
    addr_1000be57_6:
    if (reinterpret_cast<int32_t>(esi61) >= reinterpret_cast<int32_t>(0) && (*reinterpret_cast<int32_t*>(ebp100 - 64) == 1 && (!*reinterpret_cast<int32_t*>(ebp101 - 100) || !*reinterpret_cast<int32_t*>(ebp102 - 96)) || (*reinterpret_cast<int32_t*>(ebp103 - 64) == 2 && (!*reinterpret_cast<int32_t*>(ebp104 - 0x6c) || !*reinterpret_cast<int32_t*>(ebp105 - 0x68)) || *reinterpret_cast<int32_t*>(ebp106 - 64) == 3 && (!*reinterpret_cast<int32_t*>(ebp107 - 80) || !*reinterpret_cast<int32_t*>(ebp108 - 76)))) || (*reinterpret_cast<int32_t*>(ebp109 - 64) == 1 && (!*reinterpret_cast<int32_t*>(ebp110 - 100) && *reinterpret_cast<int32_t*>(ebp111 - 96)) || (*reinterpret_cast<int32_t*>(ebp112 - 64) == 2 && (!*reinterpret_cast<int32_t*>(ebp113 - 0x6c) && *reinterpret_cast<int32_t*>(ebp114 - 0x68)) || *reinterpret_cast<int32_t*>(ebp115 - 64) == 3 && (!*reinterpret_cast<int32_t*>(ebp116 - 80) && *reinterpret_cast<int32_t*>(ebp117 - 76))))) {
        addr_1000be90_15:
        esi61 = 0xc00000c3;
    } else {
        if (*reinterpret_cast<int32_t*>(ebp118 - 64) != 2) 
            goto addr_1000bedb_17;
        if (*reinterpret_cast<int32_t*>(ebp119 - 0x68)) 
            goto addr_1000beee_19;
        addr_1000bedb_17:
        if (*reinterpret_cast<int32_t*>(ebp120 - 64) != 1) 
            goto addr_1000c0ea_20;
        if (!*reinterpret_cast<int32_t*>(ebp121 - 96)) 
            goto addr_1000c0ea_20;
        addr_1000beee_19:
        *reinterpret_cast<uint32_t*>(ebp122 - 0x7c) = esi61;
        eax123 = *reinterpret_cast<int32_t*>(ebp124 - 84);
        ecx = reinterpret_cast<void**>(eax123 * 16);
        if (__intrinsic() > 0 || __intrinsic() >= 0 && reinterpret_cast<unsigned char>(ecx) > reinterpret_cast<unsigned char>(0xffffffff)) {
            ecx = reinterpret_cast<void**>(0xffffffff);
            esi61 = 0xc0000095;
        } else {
            esi61 = 0;
        }
        if (reinterpret_cast<int32_t>(esi61) >= reinterpret_cast<int32_t>(0)) 
            goto addr_1000bf1a_25;
    }
    addr_1000c0f8_26:
    if (esi61 == 0xc00000c3 || (esi61 == 0xc0000017 || esi61 == 0xc0000095)) {
        ebx125 = *reinterpret_cast<uint32_t**>(ebp126 - 0x74);
        if (*ebx125) {
            v127 = *ebx125;
            LocalFree(v127);
            *ebx125 = 0;
        }
        **reinterpret_cast<uint32_t**>(ebp128 - 0x84) = 0;
    }
    if (*reinterpret_cast<int32_t*>(ebp129 - 96)) {
        v130 = *reinterpret_cast<int32_t*>(ebp131 - 96);
        LocalFree(v130);
    }
    if (*reinterpret_cast<int32_t*>(ebp132 - 0x68)) {
        v133 = *reinterpret_cast<int32_t*>(ebp134 - 0x68);
        LocalFree(v133);
    }
    if (*reinterpret_cast<int32_t*>(ebp135 - 76)) {
        v136 = *reinterpret_cast<int32_t*>(ebp135 - 76);
        LocalFree(v136);
    }
    addr_1000c158_8:
    fun_1000a384(ecx, 0x1001f140, 0x80, v29, a2);
    goto 0x1001f140;
    addr_1000bf1a_25:
    eax137 = *reinterpret_cast<int32_t*>(ebp138 - 84);
    eax139 = reinterpret_cast<void*>(eax137 * 28);
    if (__intrinsic() > 0 || __intrinsic() >= 0 && reinterpret_cast<uint32_t>(eax139) > 0xffffffff) {
        eax139 = reinterpret_cast<void*>(0xffffffff);
        esi61 = 0xc0000095;
    } else {
        esi61 = 0;
    }
    if (reinterpret_cast<int32_t>(esi61) < reinterpret_cast<int32_t>(0)) 
        goto addr_1000c0f8_26;
    eax140 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax139) + reinterpret_cast<unsigned char>(ecx));
    if (reinterpret_cast<unsigned char>(eax140) < reinterpret_cast<unsigned char>(ecx)) {
        edx141 = reinterpret_cast<void**>(0xffffffff);
    } else {
        edx141 = eax140;
    }
    *reinterpret_cast<void***>(ebp142 - 92) = edx141;
    esi61 = esi61 - (esi61 + reinterpret_cast<uint1_t>(esi61 < esi61 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax140) < reinterpret_cast<unsigned char>(ecx)))) & 0xc0000095;
    if (reinterpret_cast<unsigned char>(eax140) < reinterpret_cast<unsigned char>(ecx)) 
        goto addr_1000c0f8_26;
    esi61 = *reinterpret_cast<uint32_t*>(ebp143 - 0x7c);
    v144 = edx141;
    eax145 = reinterpret_cast<int32_t>(LocalAlloc(64, v144));
    *reinterpret_cast<int32_t*>(ebp146 - 76) = eax145;
    if (eax145) {
        v147 = *reinterpret_cast<uint32_t*>(ebp148 - 92);
        v149 = *reinterpret_cast<void***>(ebp150 - 76);
        fun_1000b8d8(ecx, v149, 0, v147, 64, v144, 0x1001f140, 0x80, v29, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
        *reinterpret_cast<int32_t*>(ebp151 - 68) = (*reinterpret_cast<int32_t*>(ebp152 - 84) << 4) + *reinterpret_cast<int32_t*>(ebp153 - 76);
        *reinterpret_cast<uint32_t*>(ebp154 - 0x80) = 0;
        if (*reinterpret_cast<uint32_t*>(ebp155 - 84) <= 0) {
            addr_1000c0ea_20:
            ecx = *reinterpret_cast<void***>(ebp156 - 76);
            **reinterpret_cast<void****>(ebp157 - 0x84) = ecx;
            *reinterpret_cast<uint32_t*>(ebp158 - 76) = 0;
            goto addr_1000c0f8_26;
        } else {
            ecx159 = 0;
            *reinterpret_cast<uint32_t*>(ebp160 - 72) = 0;
            edx161 = 0;
            *reinterpret_cast<uint32_t*>(ebp162 - 0x7c) = 0;
            do {
                if (*reinterpret_cast<int32_t*>(ebp163 - 64) != 1) {
                    eax164 = *reinterpret_cast<void**>(ebp165 - 0x68);
                    *reinterpret_cast<int32_t*>(ebp166 - 88) = *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(eax164) + 8);
                    *reinterpret_cast<int32_t*>(ebp167 - 92) = *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(eax164) + 4);
                    edx168 = *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(eax164));
                    *reinterpret_cast<int32_t*>(ebp169 - 0x78) = *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(eax164) + 12);
                } else {
                    eax170 = *reinterpret_cast<void**>(ebp171 - 96);
                    *reinterpret_cast<int32_t*>(ebp172 - 88) = *reinterpret_cast<int32_t*>(edx161 + reinterpret_cast<uint32_t>(eax170) + 8);
                    *reinterpret_cast<int32_t*>(ebp173 - 92) = *reinterpret_cast<int32_t*>(edx161 + reinterpret_cast<uint32_t>(eax170) + 4);
                    edx168 = *reinterpret_cast<int32_t*>(edx161 + reinterpret_cast<uint32_t>(eax170));
                    *reinterpret_cast<uint32_t*>(ebp174 - 0x78) = 0;
                    ecx159 = *reinterpret_cast<uint32_t*>(ebp175 - 72);
                }
                *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(ebp176 - 76))) = edx168;
                *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(ebp177 - 76)) + 8) = *reinterpret_cast<int32_t*>(ebp178 - 88);
                *reinterpret_cast<int32_t*>(ecx159 + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(ebp179 - 76)) + 12) = *reinterpret_cast<int32_t*>(ebp180 - 0x78);
                if (edx168 == 6 || (edx168 == 7 || edx168 == 8)) {
                    *reinterpret_cast<uint32_t*>(ecx159 + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(ebp181 - 76)) + 4) = 0;
                    continue;
                } else {
                    ecx = *reinterpret_cast<void***>(ebp182 - 88);
                    if (ecx == 0xffffffff) 
                        goto addr_1000be90_15;
                    ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx) * 12);
                    eax183 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>((**reinterpret_cast<struct s40***>(ebp184 - 0x74))->f4) + reinterpret_cast<unsigned char>(ecx) + 8);
                    *reinterpret_cast<int32_t*>(ebp185 - 0x78) = eax183;
                    eax186 = reinterpret_cast<uint32_t>(RtlLengthSid(eax183, 64, v144));
                    if (eax186 > 24) 
                        goto addr_1000be90_15;
                    v187 = *reinterpret_cast<int32_t*>(ebp188 - 0x78);
                    v189 = ebp190 - 60;
                    RtlCopySid(28, v189, v187, eax183, 64, v144);
                    if (*reinterpret_cast<int32_t*>(ebp191 - 92) != -1) 
                        goto addr_1000c069_55;
                }
                addr_1000c08d_56:
                v192 = ebp193 - 60;
                eax194 = reinterpret_cast<int32_t>(RtlLengthSid(v192, 28, v189, v187, eax183, 64, v144));
                v195 = ebp196 - 60;
                v197 = *reinterpret_cast<int32_t*>(ebp198 - 68);
                RtlCopySid(eax194, v197, v195, v192, 28, v189, v187, eax183, 64, v144);
                *reinterpret_cast<int32_t*>(*reinterpret_cast<int32_t*>(ebp199 - 72) + *reinterpret_cast<int32_t*>(ebp200 - 76) + 4) = *reinterpret_cast<int32_t*>(ebp201 - 68);
                eax203 = reinterpret_cast<int32_t>(RtlLengthSid(ebp202 - 60, eax194, v197, v195, v192, 28, v189, v187, eax183, 64, v144));
                *reinterpret_cast<int32_t*>(ebp204 - 68) = *reinterpret_cast<int32_t*>(ebp205 - 68) + eax203;
                ecx159 = *reinterpret_cast<uint32_t*>(ebp206 - 72);
                continue;
                addr_1000c069_55:
                v207 = ebp208 - 60;
                eax209 = reinterpret_cast<unsigned char*>(RtlSubAuthorityCountSid(v207, 28, v189, v187, eax183, 64, v144));
                *reinterpret_cast<unsigned char*>(&edx168) = *eax209;
                ecx210 = edx168 + 1;
                *eax209 = *reinterpret_cast<unsigned char*>(&ecx210);
                eax212 = reinterpret_cast<int32_t*>(RtlSubAuthoritySid(ebp211 - 60, static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx168)), v207, 28, v189, v187, eax183, 64, v144));
                *eax212 = *reinterpret_cast<int32_t*>(ebp213 - 92);
                goto addr_1000c08d_56;
                eax214 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(ebp215 - 0x80) + 1);
                *reinterpret_cast<uint32_t*>(ebp216 - 0x80) = eax214;
                edx161 = *reinterpret_cast<int32_t*>(ebp217 - 0x7c) + 12;
                *reinterpret_cast<uint32_t*>(ebp218 - 0x7c) = edx161;
                ecx159 = ecx159 + 16;
                *reinterpret_cast<uint32_t*>(ebp219 - 72) = ecx159;
            } while (eax214 < *reinterpret_cast<uint32_t*>(ebp220 - 84));
            goto addr_1000c0ea_20;
        }
    } else {
        esi61 = 0xc0000017;
        goto addr_1000c0f8_26;
    }
}

/* (image base) */
int32_t image_base_ = 0x1000a6f1;

/* (image base) */
int32_t image_base_ = 0x1000a719;

void fun_1000c27c(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** esi6;
    int32_t ebp7;
    void** v8;
    void** v9;
    void** eax10;
    int32_t ebp11;
    int32_t ebp12;
    void*** v13;

    fun_1000a5b0(0x1001f178, 12, __return_address());
    esi6 = *reinterpret_cast<void***>(ecx);
    if (esi6) {
        *reinterpret_cast<void***>(ebp7 - 28) = esi6;
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        v8 = *reinterpret_cast<void***>(esi6 + 8);
        LocalFree(v8);
        *reinterpret_cast<void***>(esi6 + 8) = reinterpret_cast<void**>(0);
        v9 = *reinterpret_cast<void***>(esi6 + 20);
        LocalFree(v9, v8);
        *reinterpret_cast<void***>(esi6 + 16) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(esi6 + 20) = reinterpret_cast<void**>(0);
        eax10 = esi6 + 4;
        if (*reinterpret_cast<void***>(eax10)) {
            *reinterpret_cast<void***>(ebp11 - 4) = reinterpret_cast<void**>(0);
            image_base_(eax10, v9, v8);
            *reinterpret_cast<int32_t*>(ebp12 - 4) = -2;
        }
        v13 = reinterpret_cast<void***>(esi6 + 12);
        image_base_(v13, v9, v8);
        LocalFree(esi6, v13, v9, v8);
    }
    fun_1000a5f5(ecx, 0x1001f178, 12, __return_address(), a2, a3);
    goto 0x1001f178;
}

struct s41 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
};

int32_t fun_1000c23a(int32_t ecx) {
    struct s41* eax2;
    int32_t esi3;
    void** edi4;
    void** esi5;
    struct s41** edx6;

    eax2 = reinterpret_cast<struct s41*>(LocalAlloc());
    if (eax2) {
        esi3 = 0;
        eax2->f8 = 0;
        eax2->f0 = 0x554d4954;
    } else {
        esi3 = 0xc0000017;
        fun_1000c27c(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, 64, 24, edi4, esi5);
        eax2 = eax2;
    }
    *edx6 = eax2;
    return esi3;
}

/* (image base) */
int32_t image_base_ = 0x1000a72d;

/* (image base) */
int32_t image_base_ = 0x1000a737;

/* (image base) */
int32_t image_base_ = 0x1000a6cc;

void** fun_1000c39a(uint32_t ecx, void** a2) {
    void** ebx3;
    uint32_t edx4;
    int32_t ecx5;
    void* esp6;
    void** esi7;
    int32_t eax8;
    void* esp9;
    int32_t eax10;
    uint32_t ecx11;
    void** eax12;

    ebx3 = a2;
    edx4 = ecx;
    ecx5 = 9;
    esp6 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 52 - 4 - 4 - 4 - 4 + 4);
    while (ecx5) {
        --ecx5;
    }
    esi7 = reinterpret_cast<void**>(0);
    eax8 = reinterpret_cast<int32_t>(image_base_());
    esp9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp6) - 4 - 4 - 4 - 4 - 4 + 4);
    if (eax8 || (eax10 = reinterpret_cast<int32_t>(image_base_(0, reinterpret_cast<uint32_t>(esp6) + 16)), esp9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp9) - 4 - 4 - 4 - 4 + 4), !!eax10)) {
        image_base_();
        esp9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp9) - 4 - 4 + 4);
    } else {
        esi7 = reinterpret_cast<void**>(0x10001980);
    }
    *reinterpret_cast<void***>(ebx3) = esi7;
    image_base_();
    ecx11 = edx4 ^ reinterpret_cast<uint32_t>(esp9) - 4 - 4 + 4 + 4 + 4 + 4;
    eax12 = fun_1000a130(ecx11, ecx11);
    return eax12;
}

uint32_t fun_1000c853(void** a1);

uint32_t fun_1000c7c3(void** ecx, void** a2, void* a3, void** a4);

uint32_t fun_1000c79d(void** ecx, void** a2, int32_t a3, int32_t a4) {
    uint32_t eax5;
    uint32_t edx6;

    eax5 = fun_1000c853(ecx);
    if (reinterpret_cast<int32_t>(eax5) < reinterpret_cast<int32_t>(0)) {
        if (edx6 >> 1) {
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        }
    } else {
        eax5 = fun_1000c7c3(ecx, ecx, "\\", ecx);
    }
    return eax5;
}

uint32_t fun_1000c80e(int32_t* a1) {
    int32_t esi2;
    int32_t edx3;
    int32_t edx4;
    int16_t* ecx5;
    int32_t edx6;
    uint32_t eax7;

    esi2 = edx3;
    if (edx4) {
        do {
            if (!*ecx5) 
                break;
            ++ecx5;
            --edx6;
        } while (edx6);
    }
    eax7 = reinterpret_cast<uint32_t>(-edx6);
    if (a1) {
        if (!edx6) {
            *a1 = 0;
        } else {
            *a1 = esi2 - edx6;
        }
    }
    return (eax7 - (eax7 + reinterpret_cast<uint1_t>(eax7 < eax7 + reinterpret_cast<uint1_t>(!!edx6))) & 0x3ffffff3) + 0xc000000d;
}

uint32_t fun_1000c7c3(void** ecx, void** a2, void* a3, void** a4) {
    uint32_t edi5;
    int32_t edx6;
    int32_t esi7;
    void* eax8;
    uint32_t ebx9;
    int32_t edx10;

    edi5 = 0;
    if (!edx6) {
        addr_1000c7fa_2:
        ecx = ecx - 2;
        edi5 = 0x80000005;
    } else {
        esi7 = 0x7ffffffe;
        eax8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(a3) - reinterpret_cast<unsigned char>(ecx));
        do {
            if (!esi7) 
                break;
            ebx9 = *reinterpret_cast<uint16_t*>(reinterpret_cast<uint32_t>(eax8) + reinterpret_cast<unsigned char>(ecx));
        } while (*reinterpret_cast<void***>(&ebx9) && (*reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(&ebx9), ecx = ecx + 2, --esi7, --edx10, !!edx10));
        if (!edx10) 
            goto addr_1000c7fa_2;
    }
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    return edi5;
}

int32_t RegOpenKeyExW = 0x26396;

int32_t fun_10010720(void** ecx, void** a2);

int32_t RegCloseKey = 0x26388;

unsigned char fun_100108f3(void** ecx) {
    int32_t ebx2;
    int32_t eax3;
    int32_t eax4;

    ebx2 = 1;
    eax3 = reinterpret_cast<int32_t>(RegOpenKeyExW());
    if (!eax3) {
        eax4 = fun_10010720(ecx, ecx);
        *reinterpret_cast<unsigned char*>(&ebx2) = reinterpret_cast<uint1_t>(!!eax4);
        RegCloseKey(ecx, ecx);
    }
    return *reinterpret_cast<unsigned char*>(&ebx2);
}

unsigned char fun_1000d2dd(void** ecx) {
    int32_t ebx2;
    int32_t eax3;
    int32_t eax4;

    ebx2 = 1;
    eax3 = reinterpret_cast<int32_t>(RegOpenKeyExW());
    if (!eax3) {
        eax4 = fun_10010720(ecx, ecx);
        *reinterpret_cast<unsigned char*>(&ebx2) = reinterpret_cast<uint1_t>(!!eax4);
        RegCloseKey(ecx, ecx);
    }
    return *reinterpret_cast<unsigned char*>(&ebx2);
}

int32_t RegQueryValueExW = 0x263a6;

int32_t fun_10010720(void** ecx, void** a2) {
    RegQueryValueExW();
    goto ecx;
}

void fun_1000d325(int32_t* ecx) {
    int32_t v2;
    int32_t eax3;

    if (*ecx) {
        v2 = *ecx;
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, v2));
        HeapFree(eax3, 0, v2);
    }
    return;
}

void** fun_1000c8a7(void** ecx, void** a2, void* a3, int32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

int32_t fun_1000d7c7(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void* edx8;
    void** eax9;
    int32_t ecx10;

    eax9 = fun_1000c8a7(ecx, ecx, edx8, 16, __return_address(), a2, a3, a4, a5, a6);
    ecx10 = 0;
    *reinterpret_cast<unsigned char*>(&ecx10) = reinterpret_cast<uint1_t>(eax9 == 0);
    return ecx10;
}

void** g10024618;

int32_t g1002461c;

void fun_1000ce00();

void** fun_1000d5fd(struct s21* ecx) {
    void*** eax2;
    int32_t ecx3;
    void** eax4;
    int1_t zf5;

    eax2 = g2c;
    ecx3 = g1002444c;
    eax4 = g10024618;
    if (reinterpret_cast<signed char>(eax4) > reinterpret_cast<signed char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(eax2 + ecx3 * 4) + 4))) {
        fun_1000b57d(0x10024618);
        zf5 = reinterpret_cast<int1_t>(g10024618 == 0xffffffff);
        if (zf5) {
            g10024484 = reinterpret_cast<void**>(0x1002461c);
            g1002461c = 0x10001058;
            fun_1000a45e(0x10024618, fun_1000ce00);
            fun_1000b53c(0x10024618, 0x10024618, fun_1000ce00);
        }
    }
    return 0x1002461c;
}

void** fun_1000ec6f(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7);

void** fun_1000ed1e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void** eax17;

    eax17 = fun_1000ec6f(ecx, a2, 0, 0, __return_address(), 1, a3);
    return eax17;
}

struct s14* fun_1000ec97(signed char* ecx) {
    void* edx2;

    if (ecx) {
        edx2 = reinterpret_cast<void*>(ecx + 1);
        do {
            ++ecx;
        } while (*ecx);
        return reinterpret_cast<int32_t>(ecx) - reinterpret_cast<int32_t>(edx2) + 1;
    } else {
        return 1;
    }
}

void* fun_1000ecaf(int16_t* ecx) {
    int32_t edx2;

    if (ecx) {
        edx2 = reinterpret_cast<int32_t>(ecx + 1);
        do {
            ++ecx;
        } while (*ecx);
        return (reinterpret_cast<int32_t>(ecx) - edx2 >> 1) * 2 + 2;
    } else {
        return 2;
    }
}

void fun_1000dcba(void** ecx);

void fun_1000dad6(void** ecx) {
    void** eax2;
    void** edi3;
    void** v4;
    void** ebx5;
    void** esi6;
    int32_t eax7;

    eax2 = ecx + 40;
    edi3 = ecx;
    v4 = eax2;
    if (edi3 != eax2) {
        do {
            ebx5 = *reinterpret_cast<void***>(edi3);
            if (ebx5) {
                do {
                    esi6 = ebx5;
                    ebx5 = *reinterpret_cast<void***>(ebx5 + 28);
                    fun_1000dcba(esi6);
                    eax7 = reinterpret_cast<int32_t>(GetProcessHeap(esi6, 0, esi6));
                    HeapFree(esi6, eax7, 0, esi6);
                } while (ebx5);
                eax2 = v4;
            }
            *reinterpret_cast<void***>(edi3) = reinterpret_cast<void**>(0);
            edi3 = edi3 + 4;
        } while (edi3 != eax2);
    }
    return;
}

void fun_1000dcba(void** ecx) {
    int32_t v2;
    int32_t edi3;
    void** edi4;
    void** ebx5;
    void*** esi6;
    void** v7;
    int32_t eax8;

    v2 = edi3;
    edi4 = ecx;
    ebx5 = *reinterpret_cast<void***>(edi4 + 16) + reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(edi4 + 20)) * 52;
    if (*reinterpret_cast<void***>(edi4 + 16) != ebx5) {
        esi6 = reinterpret_cast<void***>(*reinterpret_cast<void***>(edi4 + 16) + 44);
        do {
            v7 = *esi6;
            eax8 = reinterpret_cast<int32_t>(GetProcessHeap(0, v7));
            HeapFree(eax8, 0, v7);
            *esi6 = reinterpret_cast<void**>(0);
            esi6 = esi6 + 52;
            *reinterpret_cast<uint32_t*>(esi6 + 0xffffffd0) = 0;
        } while (!reinterpret_cast<int1_t>(esi6 + 0xffffffd4 == ebx5));
    }
    GetProcessHeap();
    HeapFree();
    *reinterpret_cast<void***>(edi4 + 16) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(edi4 + 20) = reinterpret_cast<void**>(0);
    goto v2;
}

int32_t CloseHandle = 0x2613e;

void** fun_1000f27a(void** ecx, void** a2, void** a3);

void** fun_1000db2c(void** ecx) {
    void** v2;
    void** eax3;

    if (*reinterpret_cast<void***>(ecx) && (v2 = *reinterpret_cast<void***>(ecx), eax3 = reinterpret_cast<void**>(CloseHandle(v2)), !eax3)) {
        eax3 = fun_1000f27a(__return_address(), ecx, v2);
    }
    return eax3;
}

void** fun_1000ebb9(void** ecx);

void** fun_1000f27a(void** ecx, void** a2, void** a3) {
    void** eax4;

    eax4 = fun_1000ebb9(ecx);
    return eax4;
}

void** fun_1000e1eb(void** ecx, void** a2, int32_t* a3, int32_t* a4, void** a5);

void** fun_1000baaf(int32_t* ecx) {
    void** eax2;

    eax2 = fun_1000e1eb(0, 0, ecx, ecx, __return_address());
    return eax2;
}

int32_t ReleaseMutex = 0x260cc;

void** fun_1000db52(void** ecx) {
    void** v2;
    void** eax3;

    if (*reinterpret_cast<void***>(ecx) && (v2 = *reinterpret_cast<void***>(ecx), eax3 = reinterpret_cast<void**>(ReleaseMutex(v2)), !eax3)) {
        eax3 = fun_1000f27a(__return_address(), ecx, v2);
    }
    return eax3;
}

void fun_1000f274(void** ecx, void** a2, void** a3, void** a4);

uint32_t fun_1000efcd(void** ecx, void** a2, void** a3, void** a4, void** a5);

uint32_t fun_1000ef66(void** ecx, void** a2, void** a3, void** a4, void** a5);

int32_t CreateSemaphoreExW = 0x26066;

void** fun_1000ecd1(void** ecx, void** a2);

int32_t GetLastError = 0x260ee;

int32_t SetLastError = 0x2607c;

void** fun_1000dd14(void** ecx, void** a2, int32_t a3, uint32_t a4, uint32_t a5) {
    void* ebp6;
    uint32_t eax7;
    void** edi8;
    void** esi9;
    void** ebx10;
    void** edi11;
    void** eax12;
    void** esi13;
    void** ecx14;
    void** v15;
    void** eax16;
    void** eax17;
    void** eax18;
    void** edi19;
    void** eax20;
    void** v21;
    int32_t eax22;
    void** v23;
    void** v24;
    void** v25;
    uint32_t ecx26;
    void** eax27;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    if (a4 & 0x80000000 | a5) {
        fun_1000f274(ecx, edi8, esi9, ebx10);
    }
    fun_1000efcd(reinterpret_cast<uint32_t>(ebp6) + 0xfffffdf0, a2, edi8, esi9, ebx10);
    fun_1000ef66(reinterpret_cast<uint32_t>(ebp6) + 0xfffffdf0, "_", edi8, esi9, ebx10);
    edi11 = reinterpret_cast<void**>(a4 & 0x7fffffff);
    if (!edi11) {
        eax12 = reinterpret_cast<void**>(1);
    } else {
        eax12 = edi11;
    }
    esi13 = reinterpret_cast<void**>(0);
    ecx14 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp6) + 0xfffffdf0);
    v15 = ecx14;
    eax16 = reinterpret_cast<void**>(CreateSemaphoreExW());
    if (!eax16) {
        eax17 = fun_1000ecd1(__return_address(), "internal\\sdk\\inc\\wil\\ResultMacros.h");
        esi13 = eax17;
    } else {
        eax18 = ecx;
        edi19 = *reinterpret_cast<void***>(eax18);
        if (edi19) {
            eax20 = reinterpret_cast<void**>(GetLastError());
            v21 = eax20;
            eax22 = reinterpret_cast<int32_t>(CloseHandle(edi19));
            if (!eax22) {
                v23 = ecx14;
                ecx14 = reinterpret_cast<void**>(__return_address());
                fun_1000f27a(ecx14, v23, edi19);
            }
            SetLastError(ecx14, v21, edi19);
            eax18 = ecx;
        }
        *reinterpret_cast<void***>(eax18) = eax16;
    }
    if (reinterpret_cast<signed char>(esi13) < reinterpret_cast<signed char>(0)) {
        fun_1000ed1e(__return_address(), "wil", esi13, 0, edi11, eax12, v15, 0, 0x1f0003, edi8, esi9, ebx10, v24, v21, ecx, v25);
    }
    ecx26 = eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6);
    eax27 = fun_1000a130(ecx26, ecx26);
    return eax27;
}

void fun_1000f274(void** ecx, void** a2, void** a3, void** a4) {
    __asm__("int 0x29");
    return;
}

uint32_t fun_1000f0a2(void** ecx, void** a2, void** a3, void** a4);

uint32_t fun_1000efcd(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    uint32_t eax6;

    eax6 = fun_1000f0a2(ecx, ecx, a2, ecx);
    return eax6;
}

uint32_t fun_1000f0ed(void** ecx, int32_t* a2);

uint32_t fun_1000ef66(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    uint32_t eax6;

    eax6 = fun_1000f0ed(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    if (reinterpret_cast<int32_t>(eax6) >= reinterpret_cast<int32_t>(0)) {
        eax6 = fun_1000f0a2(ecx + reinterpret_cast<unsigned char>(ecx) * 2, ecx, a2, ecx);
    }
    return eax6;
}

void** fun_1000de84(void** ecx, void** a2) {
    void** eax3;

    eax3 = fun_1000ec6f(ecx, "internal\\sdk\\inc\\wil\\Resource.h", 0, 0, __return_address(), 3, 0x8000ffff);
    return eax3;
}

struct s16* fun_1000e20d(struct s15* ecx, struct s15* a2) {
    struct s16* esi3;
    int32_t** eax4;
    int32_t** ecx5;
    struct s16* eax6;

    esi3 = g100245f4;
    eax4 = reinterpret_cast<int32_t**>(GetCurrentThreadId());
    ecx5 = eax4;
    eax6 = *reinterpret_cast<struct s16**>(reinterpret_cast<int32_t>(esi3) + reinterpret_cast<uint32_t>(eax4) % 10 * 4);
    while (eax6 && eax6->f4 != ecx5) {
        eax6 = eax6->f8;
    }
    return eax6;
}

struct s43 {
    int32_t f0;
    signed char* f4;
};

struct s42 {
    signed char[16] pad16;
    struct s43* f16;
};

struct s44 {
    int32_t f0;
    signed char* f4;
};

struct s45 {
    signed char* f0;
    int32_t f4;
};

struct s46 {
    signed char* f0;
    int32_t f4;
};

struct s47 {
    int32_t f0;
    signed char* f4;
};

struct s48 {
    signed char* f0;
    int32_t f4;
};

int32_t memcpy_s = 0x26d7c;

signed char fun_1000e373(struct s15* ecx, unsigned char* a2, void* a3) {
    unsigned char* ebx4;
    signed char al5;
    struct s15* edi6;
    struct s42* edx7;
    struct s43* edx8;
    struct s44* edi9;
    struct s45* edi10;
    struct s46* esi11;
    struct s47* edi12;
    unsigned char* ecx13;
    struct s48* edi14;
    struct s46* esi15;
    void* edi16;
    void* esi17;
    signed char* ebx18;
    void* ebx19;
    signed char* ecx20;
    void* edi21;
    void* esi22;
    void* edi23;
    signed char* v24;

    ebx4 = a2;
    al5 = 0;
    edi6 = ecx;
    *ebx4 = 0;
    if (!edx7 || (al5 = fun_1000e373(ecx, ebx4, a3), edx8 = edx7->f16, edx8 == 0)) {
        addr_1000e424_2:
        return al5;
    } else {
        if (!edx8->f0) {
            __asm__("lock xadd [0x100240d8], eax");
            edx8->f0 = 2;
        }
        if (!edi6->f44) {
            edi9 = reinterpret_cast<struct s44*>(&edi6->f44);
            edi9->f0 = edx8->f0;
            edi10 = reinterpret_cast<struct s45*>(&edi9->f4);
            esi11 = reinterpret_cast<struct s46*>(&edx8->f4);
            edi10->f0 = esi11->f0;
            edi10->f4 = esi11->f4;
            edi6 = edi6;
        }
        edi12 = reinterpret_cast<struct s47*>(&edi6->f56);
        ecx13 = ebx4;
        edi12->f0 = edx8->f0;
        edi14 = reinterpret_cast<struct s48*>(&edi12->f4);
        esi15 = reinterpret_cast<struct s46*>(&edx8->f4);
        edi14->f0 = esi15->f0;
        edi14->f4 = esi15->f4;
        edi16 = reinterpret_cast<void*>(ecx13 + 1);
        esi17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(a3) + reinterpret_cast<int32_t>(ebx4));
        do {
            ++ecx13;
        } while (*ecx13);
        ebx18 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx4) + (reinterpret_cast<int32_t>(ecx13) - reinterpret_cast<int32_t>(edi16)));
        if (reinterpret_cast<int32_t>(esi17) - reinterpret_cast<int32_t>(ebx18) > 2) 
            goto addr_1000e3f0_28;
    }
    addr_1000e422_29:
    al5 = 1;
    goto addr_1000e424_2;
    addr_1000e3f0_28:
    *ebx18 = 92;
    ebx19 = reinterpret_cast<void*>(ebx18 + 1);
    ecx20 = edx8->f4;
    edi21 = reinterpret_cast<void*>(ecx20 + 1);
    do {
        ++ecx20;
    } while (*ecx20);
    esi22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi17) - reinterpret_cast<uint32_t>(ebx19));
    edi23 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx20) - reinterpret_cast<int32_t>(edi21) + 1);
    if (reinterpret_cast<uint32_t>(edi23) >= reinterpret_cast<uint32_t>(esi22)) 
        goto addr_1000e40c_32;
    addr_1000e40e_33:
    v24 = edx8->f4;
    memcpy_s(ebx19, esi22, v24, edi23);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi23) + reinterpret_cast<uint32_t>(ebx19) - 1) = 0;
    goto addr_1000e422_29;
    addr_1000e40c_32:
    edi23 = esi22;
    goto addr_1000e40e_33;
}

int32_t GetModuleHandleExW = 0x260a0;

int32_t GetModuleFileNameA = 0x26050;

int32_t fun_1000ef9a(signed char* ecx, void* a2, int32_t a3, void* a4, int32_t a5);

void** fun_1000e26e(int32_t a1, int32_t* a2, signed char* a3, int32_t a4) {
    void* ebp5;
    uint32_t eax6;
    uint32_t v7;
    signed char* ebx8;
    int32_t eax9;
    int32_t esi10;
    void* v11;
    int32_t eax12;
    signed char* ecx13;
    void* edx14;
    signed char v15;
    void* eax16;
    void** eax17;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    v7 = eax6 ^ reinterpret_cast<uint32_t>(ebp5);
    ebx8 = a3;
    if (a1) {
        eax9 = reinterpret_cast<int32_t>(GetModuleHandleExW(6, a1, reinterpret_cast<uint32_t>(ebp5) - 0x10c));
        if (!eax9) 
            goto addr_1000e2af_3;
    }
    if (a2) {
        if (!a1) {
            esi10 = 0;
        } else {
            esi10 = a1;
        }
        *a2 = esi10;
    }
    if (!ebx8) {
        addr_1000e31c_11:
    } else {
        v11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x108);
        eax12 = reinterpret_cast<int32_t>(GetModuleFileNameA(0, v11, 0x104));
        if (!eax12) {
            addr_1000e2af_3:
        } else {
            ecx13 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp5) - 0x108);
            edx14 = reinterpret_cast<void*>(ecx13 + 1);
            do {
                ++ecx13;
            } while (v15);
            eax16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x108 + (reinterpret_cast<uint32_t>(ecx13) - reinterpret_cast<uint32_t>(edx14)));
            while (reinterpret_cast<uint32_t>(eax16) > reinterpret_cast<uint32_t>(ebp5) - 0x108 && *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax16) - 1) != 92) {
                eax16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax16) - 1);
            }
            fun_1000ef9a(ebx8, eax16, 0, v11, 0x104);
            goto addr_1000e31c_11;
        }
    }
    eax17 = fun_1000a130(v7 ^ reinterpret_cast<uint32_t>(ebp5));
    return eax17;
}

struct s49 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    int32_t f8;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
    signed char[3] pad44;
    void** f44;
    signed char[23] pad68;
    void** f68;
    signed char[3] pad72;
    void** f72;
    signed char[3] pad76;
    void** f76;
};

void** g1002468c;

unsigned char g10024691;

int32_t FormatMessageW = 0x260dc;

void** fun_1000e7e5(void** a1, void** a2, void* a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, ...);

void** fun_1000dfa9(void** ecx, struct s49* a2) {
    void* ebp3;
    uint32_t eax4;
    void** edx5;
    void** edi6;
    int1_t zf7;
    int32_t eax8;
    void** v9;
    int32_t eax10;
    int32_t eax11;
    int32_t eax12;
    void** v13;
    void** v14;
    int1_t zf15;
    void** v16;
    void** v17;
    void** edi18;
    void** edi19;
    void** esi20;
    void** ebx21;
    void** eax22;
    void** v23;
    void** v24;
    void** ebx25;
    void** v26;
    void** eax27;
    void** v28;
    void** v29;
    void** eax30;
    void** v31;
    void** eax32;
    void** eax33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    uint32_t ecx39;
    void** eax40;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (edx5 && ecx) {
        edi6 = g1002468c;
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        if (!edi6 || ((zf7 = g10024691 == 0, zf7) || (image_base_(edi6), edi6(edi6), !*reinterpret_cast<void***>(ecx)))) {
            eax8 = a2->f0;
            v9 = reinterpret_cast<void**>(0x10002e05);
            eax10 = eax8;
            if (!eax10) {
                v9 = reinterpret_cast<void**>("Exception");
            } else {
                eax11 = eax10 - 1;
                if (!eax11) {
                    v9 = reinterpret_cast<void**>("ReturnHr");
                } else {
                    eax12 = eax11 - 1;
                    if (!eax12) {
                        v9 = reinterpret_cast<void**>("LogHr");
                    } else {
                        if (!(eax12 - 1)) {
                            v9 = reinterpret_cast<void**>("FailFast");
                        }
                    }
                }
            }
            v13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp3) + 0xfffffdfc);
            v14 = a2->f4;
            FormatMessageW(0x1200, 0, v14, 0x400);
            zf15 = a2->f28 == 0;
            v16 = a2->f72;
            v17 = a2->f68;
            edi18 = ecx + reinterpret_cast<unsigned char>(edx5) * 2;
            if (zf15) {
                eax22 = fun_1000e7e5(ecx, edi18, "%", v17, v16, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21);
            } else {
                v23 = a2->f32;
                v24 = a2->f28;
                eax22 = fun_1000e7e5(ecx, edi18, "%", v24, v23, v17, v16, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19);
            }
            ebx25 = eax22;
            if (a2->f76) {
                v26 = a2->f76;
                eax27 = fun_1000e7e5(ebx25, edi18, "(", v26, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5);
                ebx25 = eax27;
            }
            v28 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp3) + 0xfffffdfc);
            v29 = a2->f4;
            eax30 = reinterpret_cast<void**>(GetCurrentThreadId(v29, v28, 0x1200, 0, v14, 0x400));
            v31 = a2->f36;
            eax32 = fun_1000e7e5(ebx25, edi18, "%", v9, v31, eax30, v29, v28, 0x1200, 0, v14, 0x400, v13, 0x100, 0, ebx25, edi18, "%", v9, v31, eax30, v29, v28, 0x1200, 0, v14, 0x400, v13, 0x100, 0);
            if (a2->f12 || (a2->f40 || a2->f24)) {
                eax33 = fun_1000e7e5(eax32, edi18, " ", 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5, v9, eax32, edi18, " ", 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5, v9);
                if (a2->f12) {
                    v34 = a2->f12;
                    eax33 = fun_1000e7e5(eax33, edi18, "M", v34, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5);
                }
                if (a2->f40) {
                    v35 = a2->f40;
                    eax33 = fun_1000e7e5(eax33, edi18, "C", v35, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5);
                }
                if (!a2->f20) {
                    if (!a2->f24) {
                        fun_1000e7e5(eax33, edi18, "\n", 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5, v9, eax33, edi18, "\n", 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5, v9);
                    } else {
                        v36 = a2->f24;
                        fun_1000e7e5(eax33, edi18, "[", v36, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21, edx5);
                    }
                } else {
                    v37 = a2->f20;
                    v38 = a2->f24;
                    fun_1000e7e5(eax33, edi18, "[", v38, v37, 0x1200, 0, v14, 0x400, v13, 0x100, 0, edi19, esi20, ebx21);
                }
            }
        }
    }
    ecx39 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax40 = fun_1000a130(ecx39, ecx39);
    return eax40;
}

uint32_t fun_1000f029(void** ecx, void* a2, void** a3);

void** fun_1000e7e5(void** a1, void** a2, void* a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, ...) {
    void** esi16;
    void** ecx17;
    void*** edx18;

    esi16 = a1;
    fun_1000f029(esi16, a3, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 20);
    if (a2 != esi16) {
        ecx17 = esi16;
        edx18 = reinterpret_cast<void***>(ecx17 + 2);
        do {
            ecx17 = ecx17 + 2;
        } while (*reinterpret_cast<void***>(ecx17));
        esi16 = esi16 + (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ecx17) - reinterpret_cast<uint32_t>(edx18)) >> 1) * 2;
    }
    return esi16;
}

void** fun_1000ead9(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, void** a9);

void** fun_1000ec6f(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7) {
    void** eax8;

    eax8 = fun_1000ead9(ecx, a2, a3, a4, a5, a6, a7, 0, ecx);
    return eax8;
}

void** fun_1000e1b3(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_1000e1eb(void** ecx, void** a2, int32_t* a3, int32_t* a4, void** a5) {
    void** eax6;

    eax6 = fun_1000e1b3(ecx, a2, ecx, ecx, a5);
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax6) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax6 == 0))) {
        eax6 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax6)) | 0x80070000);
    }
    return eax6;
}

struct s14* fun_1000e243(struct s14** ecx, struct s15* a2) {
    int32_t eax3;
    int32_t ecx4;
    struct s14* eax5;

    eax3 = reinterpret_cast<int32_t>(GetCurrentThreadId());
    ecx4 = eax3;
    eax5 = ecx[eax3 % reinterpret_cast<uint32_t>(10)];
    while (eax5 && eax5->f24 != ecx4) {
        eax5 = eax5->f28;
    }
    return eax5;
}

int32_t fun_1000f060(signed char* ecx, signed char* a2, void* a3, signed char* a4);

int32_t fun_1000ef9a(signed char* ecx, void* a2, int32_t a3, void* a4, int32_t a5) {
    int32_t eax6;
    int32_t edx7;
    uint32_t edx8;
    int32_t edx9;

    eax6 = 0;
    if (!edx7 || edx8 > 0x7fffffff) {
        eax6 = 0x80070057;
    }
    if (eax6 < 0) {
        if (edx9) {
            *ecx = 0;
        }
    } else {
        eax6 = fun_1000f060(ecx, ecx, a2, ecx);
    }
    return eax6;
}

uint32_t fun_1000efe5(void** a1, uint32_t a2, void* a3, int32_t a4, int32_t a5, int16_t a6, void** a7, void** a8, void* a9, int32_t a10, void** a11, int32_t a12);

int32_t CreateMutexExW = 0x2615e;

void fun_1000f347(void*** ecx, void** a2);

unsigned char fun_1000baa8(int32_t* ecx);

void fun_1000f291(void** ecx, void*** a2);

void** fun_1000d946(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9);

void** fun_1000e824(void** ecx, void*** a2);

void** fun_1000db78(int16_t ecx) {
    void* ebp2;
    uint32_t eax3;
    void*** edx4;
    void** esi5;
    void** ebx6;
    int32_t eax7;
    void* v8;
    int32_t v9;
    void** v10;
    int32_t v11;
    void** v12;
    void** eax13;
    int32_t* ecx14;
    unsigned char al15;
    void** ecx16;
    void** edi17;
    void** eax18;
    void** esi19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** ecx24;
    void** eax25;
    uint32_t ecx26;
    void** eax27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *edx4 = reinterpret_cast<void**>(0);
    eax7 = reinterpret_cast<int32_t>(GetCurrentProcessId(64, ecx, esi5, ebx6));
    fun_1000efe5(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4, 0x104, "L", eax7, 64, ecx, esi5, ebx6, v8, v9, v10, v11);
    v12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4);
    eax13 = reinterpret_cast<void**>(CreateMutexExW());
    fun_1000f347(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf0, eax13);
    ecx14 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf0);
    al15 = fun_1000baa8(ecx14);
    if (al15) {
        ecx16 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf0);
        fun_1000f291(ecx16, reinterpret_cast<uint32_t>(ebp2) + 0xfffffde8);
        eax18 = fun_1000d946(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4, ecx16, edi17, 0, v12, 0, 0x1f0001, esi5, ebx6);
        esi19 = eax18;
        if (reinterpret_cast<signed char>(esi19) >= reinterpret_cast<signed char>(0)) {
            esi19 = reinterpret_cast<void**>(0);
        } else {
            fun_1000ed1e(__return_address(), "wil", esi19, edi17, 0, v12, 0, 0x1f0001, esi5, ebx6, v20, 0, 0, v21, v22, v23);
        }
        if (reinterpret_cast<signed char>(esi19) < reinterpret_cast<signed char>(0)) 
            goto addr_1000dc4e_6;
    } else {
        fun_1000baaf(ecx14);
        goto addr_1000dc70_8;
    }
    if (!1) {
        *edx4 = reinterpret_cast<void**>(0);
        ecx24 = g0;
        *reinterpret_cast<void***>(*edx4) = ecx24 + 1;
        goto addr_1000dc62_11;
    }
    eax25 = fun_1000e824(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4, edx4);
    esi19 = eax25;
    if (reinterpret_cast<signed char>(esi19) >= reinterpret_cast<signed char>(0)) {
        addr_1000dc62_11:
    } else {
        goto addr_1000dcaa_14;
    }
    addr_1000dc64_15:
    fun_1000db52(reinterpret_cast<uint32_t>(ebp2) + 0xfffffde8);
    addr_1000dc70_8:
    fun_1000db2c(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf0);
    ecx26 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax27 = fun_1000a130(ecx26, ecx26);
    return eax27;
    addr_1000dcaa_14:
    fun_1000ed1e(__return_address(), "wil", esi19, edi17, 0, v12, 0, 0x1f0001, esi5, ebx6, v28, 0, 0, v29, v30, v31);
    goto addr_1000dc64_15;
    addr_1000dc4e_6:
    goto addr_1000dcaa_14;
}

struct s50 {
    signed char[4] pad4;
    int16_t f4;
    signed char[2] pad8;
    struct s14* f8;
};

struct s50* fun_1000e331(struct s15* ecx) {
    struct s14* esi2;
    int16_t ecx3;
    void** eax4;
    uint32_t eax5;

    esi2 = g100245f0;
    if (!esi2->f4 && ((ecx3 = esi2->f0, eax4 = fun_1000db78(ecx3), reinterpret_cast<signed char>(eax4) >= reinterpret_cast<signed char>(0)) && !esi2->f4)) {
        esi2->f4 = 0;
    }
    eax5 = reinterpret_cast<uint32_t>(-esi2->f4);
    return eax5 - (eax5 + reinterpret_cast<uint1_t>(eax5 < eax5 + reinterpret_cast<uint1_t>(!!esi2->f4))) & esi2->f4 + 16;
}

void** fun_1000ec1c(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void** fun_1000ecd1(void** ecx, void** a2) {
    void** eax3;

    eax3 = fun_1000ec1c(ecx, a2, ecx, ecx, __return_address(), ecx);
    return eax3;
}

void** g100245e8;

void** fun_10009bb0(void** a1) {
    g100245e8 = a1;
    return 1;
}

void** g1002460c;

void** fun_1000e9da(void** ecx) {
    g1002460c = ecx;
    __asm__("lock xadd [0x1002462c], eax");
    return 2;
}

int32_t HeapAlloc = 0x25d26;

void** fun_1000da78(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28);

void** fun_1000ecea(void** ecx, void** a2, void** a3);

void** fun_1000e824(void** ecx, void*** a2) {
    void** v3;
    void** eax4;
    void** eax5;
    void* esp6;
    void** ebx7;
    void** v8;
    void*** esp9;
    void** ecx10;
    void** eax11;
    void** edi12;
    void** edx13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** esi33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    int32_t eax42;
    int32_t eax43;
    void** v44;
    int32_t eax45;

    v3 = reinterpret_cast<void**>(__return_address());
    *a2 = reinterpret_cast<void**>(0);
    eax4 = reinterpret_cast<void**>(GetProcessHeap());
    eax5 = reinterpret_cast<void**>(HeapAlloc());
    esp6 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 12 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 + 4);
    ebx7 = eax5;
    v8 = ebx7;
    if (!!ebx7) {
        if (*reinterpret_cast<unsigned char*>(&ebx7) & 3) {
            fun_1000f274(0, eax4, 8, 64);
            esp6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp6) - 4 + 4);
        }
        esp9 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) - 4 - 4 - 4 - 4);
        ecx10 = reinterpret_cast<void**>(esp9 + 32);
        eax11 = fun_1000dd14(ecx10, ecx, 0, reinterpret_cast<unsigned char>(ebx7) >> 2, 0);
        edi12 = eax11;
        if (reinterpret_cast<signed char>(edi12) >= reinterpret_cast<signed char>(0)) {
            if (ebx7) {
                ecx10 = ebx7;
                fun_1000da78(ecx10, edx13, esp9 - 4 + 16 + 4 + 16, eax4, 8, 64, v8, 0, 0, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32);
            }
            esi33 = reinterpret_cast<void**>(0);
            edi12 = reinterpret_cast<void**>(0);
            *a2 = ebx7;
        } else {
            ecx10 = v3;
            fun_1000ed1e(ecx10, "wil", edi12, eax4, 8, 64, v8, 0, 0, v34, v35, v36, v37, v38, v39, v40);
            esi33 = v8;
        }
        if (1 || (v41 = reinterpret_cast<void**>(0), eax42 = reinterpret_cast<int32_t>(CloseHandle(0)), !!eax42)) {
            while (!1 && (v41 = v8, eax43 = reinterpret_cast<int32_t>(CloseHandle(v41)), !eax43)) {
                v44 = ecx10;
                ecx10 = v3;
                addr_1000e914_12:
                fun_1000f27a(ecx10, v44, v41);
            }
        } else {
            v44 = ecx10;
            ecx10 = v3;
            goto addr_1000e914_12;
        }
    } else {
        ecx10 = v3;
        edi12 = reinterpret_cast<void**>(0x8007000e);
        fun_1000ecea(ecx10, "wil", 0x8007000e);
        esi33 = v8;
    }
    if (esi33) {
        eax45 = reinterpret_cast<int32_t>(GetProcessHeap(ecx10, 0, esi33));
        HeapFree(ecx10, eax45, 0, esi33);
    }
    return edi12;
}

void** fun_1000e941(int32_t ecx);

void** fun_1000ecea(void** ecx, void** a2, void** a3) {
    void** eax4;

    fun_1000e941(1);
    eax4 = fun_1000ec6f(ecx, a2, 0, 0, __return_address(), 1, a3);
    return eax4;
}

void** fun_1000da78(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28) {
    void** esi29;
    void** edi30;
    void** edi31;
    void** esi32;
    void** ebx33;
    void** ebp34;
    void*** edi35;
    int32_t ecx36;

    esi29 = ecx;
    *reinterpret_cast<void***>(esi29) = reinterpret_cast<void**>(1);
    edi30 = esi29 + 16;
    *reinterpret_cast<void***>(esi29 + 4) = *reinterpret_cast<void***>(a2);
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(esi29 + 8) = *reinterpret_cast<void***>(a3);
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(esi29 + 12) = *reinterpret_cast<void***>(a3 + 4);
    *reinterpret_cast<void***>(a3 + 4) = reinterpret_cast<void**>(0);
    fun_1000b8d8(a3, edi30, 0, 48, edi31, esi32, ebx33, ebp34, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
    *reinterpret_cast<void***>(edi30) = reinterpret_cast<void**>(48);
    *reinterpret_cast<void***>(edi30 + 4) = reinterpret_cast<void**>(1);
    edi35 = reinterpret_cast<void***>(edi30 + 8);
    ecx36 = 10;
    while (ecx36) {
        --ecx36;
        *edi35 = reinterpret_cast<void**>(0);
        edi35 = edi35 + 4;
        esi29 = esi29 + 4;
    }
    return esi29;
}

int32_t g100246a0;

void** fun_1000e941(int32_t ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    int32_t edx5;
    void** eax6;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = g100246a0;
    if (esi4) {
        image_base_(esi4, ecx, edx5);
        esi4(esi4, ecx, edx5);
    }
    eax6 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax6;
}

signed char g100246a4;

void** fun_1000e977(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int1_t zf4;
    int32_t esi5;
    uint32_t eax6;
    unsigned char al7;
    void** eax8;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    zf4 = g100246a4 == 0;
    if (!zf4) {
        addr_1000e9b4_2:
    } else {
        esi5 = g10024604;
        if (!esi5) {
            eax6 = 0;
        } else {
            image_base_(esi5);
            al7 = reinterpret_cast<unsigned char>(esi5(esi5));
            eax6 = al7;
        }
        if (eax6) 
            goto addr_1000e9b4_2;
    }
    eax8 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax8;
}

void** g10024608;

void** fun_1000e9c7(void** ecx) {
    g10024608 = ecx;
    __asm__("lock xadd [0x10024630], eax");
    return 2;
}

void fun_1000f2dd(void** ecx) {
    void** v2;
    int32_t eax3;
    void** v4;
    int32_t esi5;

    GetLastError();
    v2 = ecx;
    eax3 = reinterpret_cast<int32_t>(CloseHandle());
    if (!eax3) {
        v4 = ecx;
        ecx = reinterpret_cast<void**>(__return_address());
        fun_1000f27a(ecx, v4, v2);
    }
    SetLastError(ecx);
    goto esi5;
}

void fun_1000f312(void** ecx) {
    void** v2;
    int32_t eax3;
    void** v4;
    int32_t esi5;

    GetLastError();
    v2 = ecx;
    eax3 = reinterpret_cast<int32_t>(ReleaseMutex());
    if (!eax3) {
        v4 = ecx;
        ecx = reinterpret_cast<void**>(__return_address());
        fun_1000f27a(ecx, v4, v2);
    }
    SetLastError(ecx);
    goto esi5;
}

void fun_1000c870(void** ecx);

int32_t g1002469c;

void** fun_1000e5dc(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, signed char a9, void** a10, void** a11, signed char* a12, void** a13, struct s49* a14);

int32_t g100246a8;

void** fun_1000ead9(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, void** a9) {
    void* esp10;
    uint32_t eax11;
    void* esp12;
    int1_t zf13;
    signed char bl14;
    void** v15;
    void*** esp16;
    void*** esp17;
    int32_t v18;
    int32_t ebx19;
    void* esp20;
    uint32_t ecx21;
    void** eax22;
    int32_t esi23;
    void** esp24;
    void* v25;
    void* v26;
    int32_t esi27;
    void* v28;

    fun_1000c870(ecx);
    esp10 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 4 + 4);
    eax11 = g100240c4;
    esp12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp10) - 4 - 4 - 4);
    if (a6 || (zf13 = g1002469c == a6, zf13)) {
        bl14 = 0;
    } else {
        bl14 = 1;
    }
    *reinterpret_cast<signed char*>(&v15) = bl14;
    esp16 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp12) - 4 - 4);
    esp17 = esp16 - 4 - 4;
    v18 = ebx19;
    fun_1000e5dc(ecx, a2, a3, a5, v15, a6, a7, a8, *reinterpret_cast<signed char*>(&v18), esp17 + 0x478, ecx, esp16 + 0x70, ecx, reinterpret_cast<uint32_t>(esp12) + 24);
    esp20 = reinterpret_cast<void*>(esp17 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 52 + 4);
    if (a6 != 3) {
        if (a6) {
            addr_1000eba2_6:
            ecx21 = eax11 ^ reinterpret_cast<uint32_t>(esp10) ^ reinterpret_cast<uint32_t>(esp20) + 4 + 4 + 4;
            eax22 = fun_1000a130(ecx21, ecx21);
            return eax22;
        } else {
            if (bl14) {
                esi23 = g1002469c;
                esp24 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp20) - 4);
                v25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) + 0x468);
                v26 = reinterpret_cast<void*>(esp24 + 7);
                image_base_(esi23, v26, v25);
                esi23(esi23, v26, v25);
                esp20 = reinterpret_cast<void*>(esp24 - 1 - 1 + 1 - 1 + 1);
            }
            esi27 = g100246a8;
            if (esi27) {
                v28 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) + 24);
                image_base_(esi27, v28);
                esi27(esi27, v28);
                esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 + 4 - 4 + 4);
            }
        }
    }
    esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4);
    __asm__("int 0x29");
    goto addr_1000eba2_6;
}

struct s14* fun_1000d98f(struct s14* ecx, signed char* a2, uint32_t* a3) {
    signed char* ebx4;
    struct s14* eax5;
    struct s14* esi6;
    void* edx7;
    struct s14* v8;

    ebx4 = a2;
    if (!ebx4) {
        ebx4 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 1);
    }
    eax5 = fun_1000ec97(ebx4);
    esi6 = reinterpret_cast<struct s14*>(reinterpret_cast<int32_t>(edx7) - reinterpret_cast<uint32_t>(ecx));
    v8 = esi6;
    if (reinterpret_cast<uint32_t>(eax5) < reinterpret_cast<uint32_t>(esi6)) {
        esi6 = eax5;
    }
    memcpy_s(ebx4, ecx, v8, ebx4, esi6);
    if (a3) {
        *a3 = 1 - (1 + reinterpret_cast<uint1_t>(1 < 1 + reinterpret_cast<uint1_t>(1 < reinterpret_cast<uint32_t>(esi6)))) & reinterpret_cast<uint32_t>(ecx);
    }
    if (reinterpret_cast<uint32_t>(esi6) < reinterpret_cast<uint32_t>(eax5) && esi6) {
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(ecx) - 1) = 0;
    }
    return reinterpret_cast<uint32_t>(esi6) + reinterpret_cast<uint32_t>(ecx);
}

struct s14* fun_1000d9fc(struct s14* ecx, int16_t* a2, uint32_t* a3) {
    int16_t* eax4;
    void* eax5;
    uint32_t eax6;
    uint32_t edi7;
    int32_t edx8;
    uint32_t esi9;

    eax4 = a2;
    if (!eax4) {
        eax4 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
        a2 = eax4;
    }
    eax5 = fun_1000ecaf(eax4);
    eax6 = reinterpret_cast<uint32_t>(eax5) >> 1;
    edi7 = edx8 - reinterpret_cast<uint32_t>(ecx) >> 1;
    esi9 = eax6;
    if (eax6 >= edi7) {
        esi9 = edi7;
    }
    memcpy_s(eax4, ecx, edi7 + edi7, a2, esi9 + esi9);
    if (a3) {
        *a3 = 1 - (1 + reinterpret_cast<uint1_t>(1 < 1 + reinterpret_cast<uint1_t>(1 < esi9))) & reinterpret_cast<uint32_t>(ecx);
    }
    if (esi9 < eax6 && esi9) {
        *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(ecx) + esi9 * 2 - 2) = 0;
    }
    return reinterpret_cast<uint32_t>(ecx) + esi9 * 2;
}

struct s14* fun_1000de26(struct s14* ecx, signed char a2);

struct s51 {
    int16_t f0;
    signed char[2] pad4;
    int32_t f4;
    struct s14* f8;
    uint32_t f12;
    int16_t f16;
    signed char[2] pad20;
    int32_t f20;
    signed char[4] pad28;
    uint32_t f28;
    int32_t f32;
    int32_t f36;
    uint32_t f40;
    struct s14* f44;
    void* f48;
};

struct s14* fun_1000eda9(struct s51* ecx, struct s15* a2, int32_t a3);

struct s14* fun_1000ee93(struct s14* ecx, struct s15* a2) {
    struct s14* esi3;
    uint32_t edi4;
    uint32_t v5;
    struct s14* eax6;
    struct s15* edi7;
    struct s14* edx8;
    uint32_t edx9;
    uint32_t eax10;
    struct s51* ecx11;
    uint32_t ebx12;
    struct s14** ecx13;

    esi3 = ecx;
    edi4 = esi3->f12;
    v5 = reinterpret_cast<uint1_t>(!!edi4);
    eax6 = fun_1000de26(ecx, *reinterpret_cast<signed char*>(&v5));
    if (*reinterpret_cast<signed char*>(&eax6)) {
        edi7 = a2;
        if (!edi4 || (edx8 = reinterpret_cast<struct s14*>(esi3->f20 * 52 + reinterpret_cast<uint32_t>(esi3->f16)), esi3->f16 == edx8)) {
            addr_1000eee5_3:
            edx9 = (esi3->f22 + 1) % esi3->f20;
            esi3->f22 = *reinterpret_cast<uint16_t*>(&edx9);
            __asm__("lock xadd [eax], ecx");
            eax10 = esi3->f22;
            ecx11 = reinterpret_cast<struct s51*>(eax10 * 52 + reinterpret_cast<uint32_t>(esi3->f16));
            eax6 = fun_1000eda9(ecx11, edi7, 2);
        } else {
            ebx12 = esi3->f12;
            ecx13 = &esi3->f16->f8;
            do {
                if (*reinterpret_cast<uint32_t*>(ecx13 - 1) <= ebx12) 
                    continue;
                eax6 = *ecx13;
                if (eax6 == edi7->f4) 
                    break;
                ecx13 = ecx13 + 13;
            } while (!reinterpret_cast<int1_t>(ecx13 - 2 == edx8));
            goto addr_1000eee5_3;
        }
    }
    return eax6;
}

struct s14* fun_1000eda9(struct s51* ecx, struct s15* a2, int32_t a3) {
    uint32_t* eax4;
    uint32_t* eax5;
    uint32_t* eax6;
    int16_t* ecx7;
    void* eax8;
    signed char* ecx9;
    struct s14* eax10;
    signed char* ecx11;
    struct s14* eax12;
    void* edi13;
    int32_t eax14;
    struct s14* v15;
    int32_t eax16;
    struct s14* ecx17;
    signed char* v18;
    struct s14* eax19;
    signed char* v20;
    struct s14* eax21;
    int16_t* v22;

    ecx->f4 = a3;
    ecx->f8 = a2->f4;
    eax4 = &ecx->f12;
    *eax4 = 0;
    ecx->f16 = a2->f32;
    ecx->f20 = a2->f0;
    eax5 = &ecx->f28;
    *eax5 = 0;
    ecx->f32 = a2->f72;
    ecx->f36 = a2->f76;
    eax6 = &ecx->f40;
    *eax6 = 0;
    ecx7 = a2->f12;
    eax8 = fun_1000ecaf(ecx7);
    ecx9 = a2->f28;
    eax10 = fun_1000ec97(ecx9);
    ecx11 = a2->f68;
    eax12 = fun_1000ec97(ecx11);
    edi13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax8) + reinterpret_cast<uint32_t>(eax10) + reinterpret_cast<uint32_t>(eax12));
    if ((!ecx->f44 || reinterpret_cast<uint32_t>(ecx->f48) < reinterpret_cast<uint32_t>(edi13)) && (eax14 = reinterpret_cast<int32_t>(GetProcessHeap(ecx11, 8, edi13)), eax12 = reinterpret_cast<struct s14*>(HeapAlloc(ecx11, eax14, 8, edi13)), !!eax12)) {
        v15 = ecx->f44;
        eax16 = reinterpret_cast<int32_t>(GetProcessHeap(ecx11, 0, v15, eax14, 8, edi13));
        HeapFree(ecx11, eax16, 0, v15, eax14, 8, edi13);
        eax12 = eax12;
        ecx->f44 = eax12;
        ecx->f48 = edi13;
    }
    ecx17 = ecx->f44;
    if (ecx17) {
        v18 = a2->f28;
        eax19 = fun_1000d98f(ecx17, v18, eax4);
        v20 = a2->f68;
        eax21 = fun_1000d98f(eax19, v20, eax5);
        v22 = a2->f12;
        eax12 = fun_1000d9fc(eax21, v22, eax6);
    }
    return eax12;
}

struct s14* fun_1000e42d(struct s15* ecx) {
    struct s14* esi2;
    int1_t zf3;
    struct s50* eax4;
    struct s14* eax5;

    esi2 = reinterpret_cast<struct s14*>(0);
    zf3 = g100245f0 == 0;
    if (!zf3) {
        eax4 = fun_1000e331(ecx);
        if (eax4 && ((eax5 = fun_1000e243(&eax4->f8, ecx), esi2 = eax5, !!esi2) && !esi2->f8)) {
            esi2->f8 = reinterpret_cast<struct s14*>(&eax4->f4);
        }
    }
    return esi2;
}

uint32_t fun_1000f0a2(void** ecx, void** a2, void** a3, void** a4) {
    uint32_t edi5;
    int32_t edx6;
    int32_t esi7;
    void* eax8;
    uint32_t ebx9;
    int32_t edx10;

    edi5 = 0;
    if (!edx6) {
        addr_1000f0d9_2:
        ecx = ecx - 2;
        edi5 = 0x8007007a;
    } else {
        esi7 = 0x7ffffffe;
        eax8 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(a3) - reinterpret_cast<unsigned char>(ecx));
        do {
            if (!esi7) 
                break;
            ebx9 = *reinterpret_cast<uint16_t*>(reinterpret_cast<uint32_t>(eax8) + reinterpret_cast<unsigned char>(ecx));
        } while (*reinterpret_cast<void***>(&ebx9) && (*reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(&ebx9), ecx = ecx + 2, --esi7, --edx10, !!edx10));
        if (!edx10) 
            goto addr_1000f0d9_2;
    }
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    return edi5;
}

int32_t fun_1000f060(signed char* ecx, signed char* a2, void* a3, signed char* a4) {
    int32_t edi5;
    int32_t edx6;
    int32_t esi7;
    uint32_t eax8;
    int32_t edx9;

    edi5 = 0;
    if (!edx6) {
        addr_1000f092_2:
        --ecx;
        edi5 = 0x8007007a;
    } else {
        esi7 = 0x7ffffffe;
        eax8 = reinterpret_cast<uint32_t>(a3) - reinterpret_cast<int32_t>(ecx);
        do {
            if (!esi7) 
                break;
        } while (*reinterpret_cast<signed char*>(eax8 + reinterpret_cast<int32_t>(ecx)) && (*ecx = *reinterpret_cast<signed char*>(eax8 + reinterpret_cast<int32_t>(ecx)), ++ecx, --esi7, --edx9, !!edx9));
        if (!edx9) 
            goto addr_1000f092_2;
    }
    *ecx = 0;
    return edi5;
}

uint32_t fun_1000f136(void** ecx, void** a2, void* a3, void** a4);

uint32_t fun_1000f029(void** ecx, void* a2, void** a3) {
    uint32_t eax4;
    int32_t edx5;
    uint32_t edx6;
    int32_t edx7;

    eax4 = 0;
    if (!edx5 || edx6 > 0x7fffffff) {
        eax4 = 0x80070057;
    }
    if (reinterpret_cast<int32_t>(eax4) < reinterpret_cast<int32_t>(0)) {
        if (edx7) {
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        }
    } else {
        eax4 = fun_1000f136(ecx, ecx, a2, a3);
    }
    return eax4;
}

int32_t _vsnwprintf = 0x26d6e;

uint32_t fun_1000f136(void** ecx, void** a2, void* a3, void** a4) {
    uint32_t esi5;
    int32_t edx6;
    uint32_t ebx7;
    uint32_t eax8;

    esi5 = edx6 + 0xffffffff;
    ebx7 = 0;
    eax8 = reinterpret_cast<uint32_t>(_vsnwprintf(ecx, esi5, a3, a4));
    if (reinterpret_cast<int32_t>(eax8) < reinterpret_cast<int32_t>(0) || eax8 > esi5) {
        ebx7 = 0x8007007a;
    } else {
        if (eax8 != esi5) {
            addr_1000f16d_4:
            return ebx7;
        }
    }
    *reinterpret_cast<void***>(ecx + esi5 * 2) = reinterpret_cast<void**>(0);
    goto addr_1000f16d_4;
}

void fun_1000f347(void*** ecx, void** a2) {
    void** ecx3;

    ecx3 = *ecx;
    if (ecx3) {
        fun_1000f2dd(ecx3);
    }
    *ecx = a2;
    return;
}

struct s52 {
    signed char[4] pad4;
    int32_t f4;
};

struct s53 {
    signed char[8] pad8;
    int32_t f8;
};

struct s54 {
    signed char[12] pad12;
    int32_t f12;
};

int32_t fun_1000f58d(struct s23* ecx, ...) {
    int32_t* edx2;
    struct s52* edx3;
    struct s53* edx4;
    struct s54* edx5;

    if (ecx->f0 != *edx2 || (ecx->f4 != edx3->f4 || (ecx->f8 != edx4->f8 || ecx->f12 != edx5->f12))) {
        return 0;
    } else {
        return 1;
    }
}

void** fun_100136b5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48, void** a49, void** a50, void** a51, void** a52) {
    void* ebp53;
    uint32_t eax54;
    void** edx55;
    void** eax56;
    void** esi57;
    void** eax58;

    ebp53 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax54 = g100240c4;
    edx55 = *reinterpret_cast<void***>(ecx);
    if (edx55) {
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        eax56 = *reinterpret_cast<void***>(edx55);
        esi57 = *reinterpret_cast<void***>(eax56 + 8);
        image_base_(esi57);
        esi57(esi57);
    }
    eax58 = fun_1000a130(eax54 ^ reinterpret_cast<uint32_t>(ebp53) ^ reinterpret_cast<uint32_t>(ebp53));
    return eax58;
}

void** fun_1000f55e(int32_t a1, int32_t a2, void** a3, int32_t a4, void** a5, int32_t a6) {
    int32_t eax7;
    uint1_t zf8;
    uint1_t less_or_equal9;
    int32_t eax10;
    int32_t eax11;
    void** eax12;

    eax7 = reinterpret_cast<int32_t>(GetLastError());
    zf8 = reinterpret_cast<uint1_t>(eax7 == 0);
    less_or_equal9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax7 < 0) | zf8);
    if (zf8) {
        eax10 = eax7 + 1;
        less_or_equal9 = reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax10 < 0) | reinterpret_cast<uint1_t>(eax10 == 0));
    }
    if (!less_or_equal9) {
        eax11 = reinterpret_cast<int32_t>(GetLastError());
        if (!eax11) {
            ++eax11;
        }
        eax12 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax11)) | 0x80070000);
    } else {
        eax12 = reinterpret_cast<void**>(GetLastError());
        if (!eax12) {
            return eax12 + 1;
        }
    }
    return eax12;
}

struct s55 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_1000f646(struct s55** ecx, struct s55*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s55* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s55** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s55**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

int32_t RtlNtStatusToDosError = 0x261c0;

void** fun_1000f8e7(void** ecx) {
    void** eax2;
    uint1_t zf3;

    if ((reinterpret_cast<unsigned char>(ecx) & 0xc0000000) != 0xc0000000) {
        eax2 = reinterpret_cast<void**>(0x80070057);
    } else {
        eax2 = reinterpret_cast<void**>(RtlNtStatusToDosError());
        zf3 = reinterpret_cast<uint1_t>(eax2 == 0);
        if (zf3) {
            goto ecx;
        } else {
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax2) < reinterpret_cast<signed char>(0)) | zf3)) {
                goto ecx;
            }
        }
    }
    return eax2;
}

void** fun_1000fc9f(void** ecx);

void** fun_1000c160(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16);

void fun_1000bc38(void** ecx);

void** fun_1000fb66(void** ecx);

struct s56 {
    int32_t f0;
    uint16_t f2;
    int32_t f4;
};

void fun_1000fc75(struct s56* ecx);

void** fun_1000fa51(void** ecx, void** a2, void** a3) {
    void*** ebp4;
    void** edx5;
    void** eax6;
    void** edi7;
    void** edi8;
    void** esi9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** ebp15;
    void** eax16;
    void** v17;
    void** v18;
    void** eax19;
    void** eax20;
    void** v21;
    void** v22;

    ebp4 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = fun_1000fc9f(edx5);
    edi7 = eax6;
    if (reinterpret_cast<signed char>(edi7) >= reinterpret_cast<signed char>(0)) {
        eax16 = fun_1000c160(ecx, edx5, ebp4 + 0xffffffec, ebp4 + 0xfffffff8, ebp4 + 0xfffffff4, edi8, esi9, v10, v11, v12, v13, v14, ebp15, __return_address(), a2, a3);
        if (reinterpret_cast<signed char>(eax16) < reinterpret_cast<signed char>(0)) {
            if (reinterpret_cast<int1_t>(eax16 == 0xc0000073)) {
                fun_1000bc38(v17);
                fun_1000bc38(v18);
            }
            eax19 = fun_1000f8e7(eax16);
            edi7 = eax19;
        } else {
            eax20 = fun_1000fb66(a2);
            edi7 = eax20;
            fun_1000bc38(v21);
            fun_1000bc38(v22);
        }
        fun_1000fc75(ebp4 - 20);
    }
    return edi7;
}

struct s57 {
    signed char[12] pad12;
    int32_t* f12;
};

struct s58 {
    signed char[8] pad8;
    void** f8;
};

void** fun_1000c2fc(void** ecx, void** a2, void** a3) {
    int32_t ebp4;
    int32_t ebp5;
    int32_t ebp6;
    void** v7;
    int32_t edx8;
    int32_t ebp9;
    int32_t eax10;
    int32_t ebp11;
    struct s57* ebp12;
    int32_t ebp13;
    struct s58* ebp14;
    int32_t ebp15;
    int32_t ebp16;

    fun_1000a5b0(0x1001f1e0, 24, __return_address());
    if (ecx) {
        *reinterpret_cast<int32_t*>(ebp4 - 40) = 0;
        *reinterpret_cast<int32_t*>(ebp5 - 36) = 0;
        *reinterpret_cast<int32_t*>(ebp6 - 4) = 0;
        v7 = *reinterpret_cast<void***>(ecx + 4);
        eax10 = reinterpret_cast<int32_t>(image_base_("X3", 0x10003b74, v7, edx8, ebp9 - 40));
        *reinterpret_cast<int32_t*>(ebp11 - 32) = eax10;
        *ebp12->f12 = *reinterpret_cast<int32_t*>(ebp13 - 40);
        ecx = ebp14->f8;
        *reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(ebp15 - 36);
        *reinterpret_cast<int32_t*>(ebp16 - 4) = -2;
    }
    fun_1000a5f5(ecx, 0x1001f1e0, 24, __return_address(), a2, a3);
    goto 0x1001f1e0;
}

void** fun_1000c160(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void** eax17;
    void** esi18;
    void** ebp19;

    if (!a5 || !a4) {
        eax17 = reinterpret_cast<void**>(0xc000000d);
    } else {
        *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a5) = reinterpret_cast<void**>(0);
        eax17 = fun_1000bc44(ecx, ecx, a3, a4, a5, ecx, ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, ecx, esi18, 0, ebp19, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    }
    return eax17;
}

int32_t GetLengthSid = 0x261a6;

int32_t CopySid = 0x261b6;

void** fun_1000fb66(void** ecx) {
    int32_t edx2;
    int32_t edi3;
    int32_t esi4;
    int32_t ebx5;
    int32_t eax6;
    void** esi7;
    void** eax8;
    int32_t eax9;
    int32_t eax10;
    void** eax11;

    eax6 = reinterpret_cast<int32_t>(GetLengthSid(edx2, edi3, esi4, ebx5));
    GetProcessHeap(edx2, edi3, esi4, ebx5);
    esi7 = reinterpret_cast<void**>(0);
    eax8 = reinterpret_cast<void**>(HeapAlloc());
    if (eax8) {
        eax9 = reinterpret_cast<int32_t>(CopySid(eax6, eax8, edx2));
        if (!eax9) {
            eax10 = reinterpret_cast<int32_t>(GetProcessHeap(eax6, eax8, edx2));
            HeapFree(eax10, 0, eax8, eax6, eax8, edx2);
            eax11 = fun_1000f55e(eax10, 0, eax8, eax6, eax8, edx2);
            esi7 = eax11;
        } else {
            *reinterpret_cast<void***>(ecx) = eax8;
        }
    } else {
        esi7 = reinterpret_cast<void**>(0x8007000e);
    }
    return esi7;
}

void fun_1000bc38(void** ecx) {
    LocalFree();
    goto ecx;
}

void** fun_1000fbd4(void** ecx, void* a2, void*** a3) {
    void** esi4;
    void** eax5;

    if (reinterpret_cast<uint32_t>(a2) > 0x7fffffff) {
        esi4 = reinterpret_cast<void**>(0x80070216);
    } else {
        esi4 = reinterpret_cast<void**>(0);
        eax5 = reinterpret_cast<void**>(HeapAlloc(ecx, 0, reinterpret_cast<uint32_t>(a2) + reinterpret_cast<uint32_t>(a2)));
        if (!eax5) {
            esi4 = reinterpret_cast<void**>(0x8007000e);
        } else {
            *a3 = eax5;
        }
    }
    return esi4;
}

int32_t memcpy = 0x2722c;

void fun_1000c8ad(void** ecx, void** a2, void** a3, void** a4, int32_t a5, uint32_t a6, int32_t a7, void** a8) {
    goto memcpy;
}

struct s59 {
    void** f0;
    signed char[1] pad2;
    void** f2;
    signed char[1] pad4;
    void** f4;
};

void** fun_1000fc9f(void** ecx) {
    void** v2;
    int32_t v3;
    int32_t ebx4;
    uint32_t v5;
    uint32_t esi6;
    int32_t v7;
    int32_t edi8;
    struct s59* edi9;
    struct s59* edx10;
    void** ebx11;
    void** eax12;
    void** esi13;
    void*** ecx14;
    void* esi15;
    void*** v16;
    void** eax17;
    void* eax18;
    void** v19;

    v2 = reinterpret_cast<void**>(__return_address());
    v3 = ebx4;
    v5 = esi6;
    v7 = edi8;
    edi9 = edx10;
    ebx11 = ecx;
    edi9->f0 = reinterpret_cast<void**>(0);
    edi9->f4 = reinterpret_cast<void**>(0);
    if (!ebx11) {
        eax12 = reinterpret_cast<void**>(0);
    } else {
        esi13 = ebx11;
        ecx14 = reinterpret_cast<void***>(esi13 + 2);
        do {
            esi13 = esi13 + 2;
        } while (*reinterpret_cast<void***>(esi13));
        esi15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi13) - reinterpret_cast<uint32_t>(ecx14)) >> 1);
        if (reinterpret_cast<uint32_t>(esi15) <= 0x7fff) 
            goto addr_1000fcd6_6; else 
            goto addr_1000fccf_7;
    }
    addr_1000fd0c_8:
    return eax12;
    addr_1000fcd6_6:
    v16 = &edi9->f4;
    eax17 = reinterpret_cast<void**>(GetProcessHeap(esi15, v16));
    eax12 = fun_1000fbd4(eax17, esi15, v16);
    if (reinterpret_cast<signed char>(eax12) >= reinterpret_cast<signed char>(0)) {
        eax18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi15) + reinterpret_cast<uint32_t>(esi15));
        edi9->f2 = *reinterpret_cast<void***>(&eax18);
        edi9->f0 = *reinterpret_cast<void***>(&eax18);
        v19 = edi9->f4;
        fun_1000c8ad(eax17, v19, ebx11, static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(&eax18))), v7, v5, v3, v2);
        eax12 = reinterpret_cast<void**>(0);
        goto addr_1000fd0c_8;
    }
    addr_1000fccf_7:
    eax12 = reinterpret_cast<void**>(0x80070216);
    goto addr_1000fd0c_8;
}

struct s60 {
    signed char[12] pad12;
    int32_t f12;
    signed char[12] pad28;
    int32_t f28;
};

int32_t CreateDIBSection = 0x26d94;

int32_t DeleteObject = 0x26da8;

void** fun_1000fea7(struct s60** ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    uint32_t* ebx5;
    uint32_t* edx6;
    struct s60** v7;
    struct s60* esi8;
    int32_t ecx9;
    int32_t eax10;
    uint32_t ecx11;
    void** eax12;
    int32_t ecx13;
    uint32_t eax14;
    int32_t v15;
    int32_t v16;
    int32_t v17;
    struct s60* esi18;
    int32_t v19;
    int32_t ecx20;
    void* v21;
    int32_t eax22;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    ebx5 = edx6;
    v7 = ecx;
    *ebx5 = 0;
    esi8 = *ecx;
    ecx9 = esi8->f12;
    image_base_(ecx9);
    eax10 = reinterpret_cast<int32_t>(esi8->f12(ecx9));
    if (eax10 < 0) {
        addr_1000ff89_2:
        ecx11 = v4 ^ reinterpret_cast<uint32_t>(ebp2);
        eax12 = fun_1000a130(ecx11, ecx11);
        return eax12;
    } else {
        ecx13 = 10;
        while (ecx13) {
            --ecx13;
        }
        eax14 = reinterpret_cast<uint32_t>(CreateDIBSection());
        if (eax14) 
            goto addr_1000ff34_7;
    }
    addr_1000ff88_9:
    goto addr_1000ff89_2;
    addr_1000ff34_7:
    v15 = v16 * v17 << 2;
    esi18 = *v7;
    v19 = v16 << 2;
    ecx20 = esi18->f28;
    v21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 20);
    image_base_(ecx20, v7, v21, v19, v15, 0);
    eax22 = reinterpret_cast<int32_t>(esi18->f28(ecx20, v7, v21, v19, v15, 0));
    if (eax22 < 0) {
        DeleteObject(ecx20, eax14, v7, v21, v19, v15, 0);
        goto addr_1000ff88_9;
    } else {
        *ebx5 = eax14;
        goto addr_1000ff88_9;
    }
}

int32_t GetVersionExW = 0x26770;

unsigned char fun_1001c9a7(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** ebx4;
    void** v5;
    void** v6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    int32_t eax36;
    uint32_t ecx37;
    void** eax38;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    fun_1000b8d8(ecx, reinterpret_cast<uint32_t>(ebp2) + 0xfffffee4, 0, 0x118, ebx4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);
    eax36 = reinterpret_cast<int32_t>(GetVersionExW());
    if (eax36) {
    }
    ecx37 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax38 = fun_1000a130(ecx37, ecx37);
    return *reinterpret_cast<unsigned char*>(&eax38);
}

void** fun_1000d7dd();

void** g10024664;

/* SHCORE.dll:109 */
int32_t SHCORE_dll_109 = 0x8000006d;

void** fun_100105cd(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46);

void** fun_1001056d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48) {
    void*** ebp49;
    void** eax50;
    void** esi51;
    void** ecx52;
    void** esi53;
    void** esi54;
    void** ebp55;
    void** v56;
    void** eax57;
    void** eax58;

    ebp49 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax50 = fun_1000d7dd();
    if (!eax50) {
        esi51 = reinterpret_cast<void**>(0x80004005);
    } else {
        ecx52 = reinterpret_cast<void**>(ebp49 + 0xfffffffc);
        esi53 = g10024664;
        fun_100136b5(ecx52, esi54, 0, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
        v56 = reinterpret_cast<void**>(ebp49 + 0xfffffffc);
        eax57 = reinterpret_cast<void**>(SHCORE_dll_109(ecx52, esi53, a2, "I", v56));
        esi51 = eax57;
        if (reinterpret_cast<signed char>(esi51) >= reinterpret_cast<signed char>(0)) {
            eax58 = fun_100105cd(ecx52, 0, a4, esi53, a2, "I", v56, esi54, 0, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36);
            esi51 = eax58;
        }
        fun_100136b5(ebp49 + 0xfffffffc, esi53, a2, "I", v56, esi54, 0, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
    }
    return esi51;
}

struct s61 {
    signed char[20] pad20;
    void** f20;
};

signed char fun_10010451(struct s61** ecx);

void** fun_100102ce(void** ecx, void** a2, void** a3, void** a4);

void** fun_1001019c(void** ecx, void** a2, void** a3, void** a4);

void** fun_100104ca(void** ecx, void** a2, signed char a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void* ebp9;
    uint32_t eax10;
    struct s61** edx11;
    signed char al12;
    void** eax13;
    void** esi14;
    int32_t eax15;
    void** ecx16;
    void** esi17;
    uint32_t ecx18;
    void** eax19;

    ebp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax10 = g100240c4;
    *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
    al12 = fun_10010451(edx11);
    if (!al12) {
        *reinterpret_cast<void***>(a4) = a2;
        eax13 = *reinterpret_cast<void***>(a2);
    } else {
        esi14 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2) + 32);
        image_base_(esi14, a2);
        eax15 = reinterpret_cast<int32_t>(esi14(esi14, a2));
        if (eax15 < 0) {
            *reinterpret_cast<void***>(a4) = a2;
            eax13 = *reinterpret_cast<void***>(a2);
        } else {
            if (!a3) {
                fun_100102ce(ecx, 0, a4, a2);
            } else {
                fun_1001019c(ecx, 0, a4, a2);
            }
            ecx16 = g0;
            esi17 = *reinterpret_cast<void***>(ecx16 + 8);
            goto addr_1001054e_9;
        }
    }
    esi17 = *reinterpret_cast<void***>(eax13 + 4);
    addr_1001054e_9:
    image_base_(esi17);
    esi17(esi17);
    ecx18 = eax10 ^ reinterpret_cast<uint32_t>(ebp9) ^ reinterpret_cast<uint32_t>(ebp9);
    eax19 = fun_1000a130(ecx18, ecx18);
    return eax19;
}

void** fun_1001037d(void** ecx);

void** fun_1001019c(void** ecx, void** a2, void** a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    void** eax7;
    void** eax8;
    void** esi9;
    void** eax10;
    void* v11;
    void** v12;
    void** esi13;
    void** v14;
    void** edx15;
    void** ecx16;
    void** eax17;
    void** ecx18;
    void** esi19;
    void** ecx20;
    void** esi21;
    void** eax22;
    void** edi23;
    void** ecx24;
    void** esi25;
    void** ecx26;
    void** esi27;
    void** eax28;
    void** eax29;
    void** esi30;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    eax7 = fun_1001037d(a2);
    if (reinterpret_cast<signed char>(eax7) < reinterpret_cast<signed char>(0)) {
        addr_100102ba_2:
        eax8 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
        return eax8;
    } else {
        if (0) {
            esi9 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 52);
            image_base_(esi9, ecx);
            eax10 = reinterpret_cast<void**>(esi9(esi9, ecx));
            if (reinterpret_cast<signed char>(eax10) < reinterpret_cast<signed char>(0)) {
                addr_100102b9_5:
                goto addr_100102ba_2;
            } else {
                if (0) {
                    v11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 8);
                    v12 = reinterpret_cast<void**>(2);
                    esi13 = *reinterpret_cast<void***>(ecx);
                    v14 = edx15;
                    ecx16 = *reinterpret_cast<void***>(esi13 + 72);
                    image_base_(ecx16, ecx, v14, 2, v11, ecx);
                    eax17 = reinterpret_cast<void**>(*reinterpret_cast<void***>(esi13 + 72)(ecx16, ecx, v14, 2, v11, ecx));
                    if (reinterpret_cast<signed char>(eax17) < reinterpret_cast<signed char>(0)) {
                        addr_100102a6_8:
                        ecx18 = g0;
                        esi19 = *reinterpret_cast<void***>(ecx18 + 8);
                    } else {
                        ecx20 = g0;
                        esi21 = *reinterpret_cast<void***>(ecx20 + 32);
                        image_base_(esi21, 0, 0, 0, ecx, v14, 2, v11, ecx);
                        eax22 = reinterpret_cast<void**>(esi21(esi21, 0, 0, 0, ecx, v14, 2, v11, ecx));
                        edi23 = eax22;
                        ecx24 = g0;
                        esi25 = *reinterpret_cast<void***>(ecx24 + 8);
                        image_base_(esi25, 0, 0, 0, 0, ecx, v14, 2, v11, ecx);
                        esi25(esi25, 0, 0, 0, 0, ecx, v14, 2, v11, ecx);
                        goto addr_1001028a_10;
                    }
                } else {
                    v11 = reinterpret_cast<void*>(0);
                    v12 = edx15;
                    ecx26 = g0;
                    v14 = reinterpret_cast<void**>(0);
                    esi27 = *reinterpret_cast<void***>(ecx26 + 32);
                    image_base_(esi27, 0, v12, 0, ecx);
                    eax28 = reinterpret_cast<void**>(esi27(esi27, 0, v12, 0, ecx));
                    edi23 = eax28;
                    goto addr_1001028a_10;
                }
            }
        } else {
            *reinterpret_cast<void***>(a3) = edx15;
            esi19 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edx15) + 4);
        }
    }
    image_base_(esi19);
    esi19(esi19);
    goto addr_100102b9_5;
    addr_1001028a_10:
    if (reinterpret_cast<signed char>(edi23) >= reinterpret_cast<signed char>(0)) {
        *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
        eax29 = g0;
        esi30 = *reinterpret_cast<void***>(eax29 + 4);
        image_base_(esi30, 0, v14, v12, v11, ecx);
        esi30(esi30, 0, v14, v12, v11, ecx);
        goto addr_100102a6_8;
    }
}

int32_t memcmp = 0x27222;

void** fun_1000c8a7(void** ecx, void** a2, void* a3, int32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    goto memcmp;
}

void** fun_1001dde6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44);

void** fun_10010045(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43);

void** fun_100105cd(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    void** v48;
    void** ecx49;
    void** edi50;
    void** esi51;
    void** ebp52;
    void** eax53;
    void** esi54;
    void** ecx55;
    void** eax56;
    void** eax57;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v48 = ecx;
    ecx49 = reinterpret_cast<void**>(ebp47 + 0xfffffff8);
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    fun_100136b5(ecx49, edi50, esi51, 0, v48, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax53 = fun_1001dde6(ecx49, edi50, esi51, 0, v48, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
    esi54 = eax53;
    if (reinterpret_cast<signed char>(esi54) >= reinterpret_cast<signed char>(0)) {
        v48 = reinterpret_cast<void**>(0);
        ecx55 = reinterpret_cast<void**>(ebp47 + 0xfffffffc);
        fun_100136b5(ecx55, edi50, esi51, 0, 0, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
        eax56 = fun_10010045(0, ecx55, ebp47 + 0xfffffffc, ecx55, ecx55, edi50, esi51, 0, 0, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33);
        esi54 = eax56;
        if (reinterpret_cast<signed char>(esi54) >= reinterpret_cast<signed char>(0)) {
            eax57 = fun_1000fea7(0);
            esi54 = eax57;
        }
        fun_100136b5(ebp47 + 0xfffffffc, edi50, esi51, 0, 0, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    }
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v48, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    return esi54;
}

int32_t CoCreateInstance = 0x26204;

void** fun_10010045(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** v47;
    void** edx48;
    void** eax49;
    void** v50;
    void** esi51;
    void** edi52;
    void** esi53;
    void** ebx54;
    void** esi55;
    void** ecx56;
    void** v57;
    void** ebp58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    int32_t eax63;
    uint32_t ecx64;
    void** eax65;
    void** edi66;
    void** ecx67;
    int32_t eax68;
    void** esi69;
    void** v70;
    void** ecx71;
    int32_t eax72;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    v47 = edx48;
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    if (!ecx || (eax49 = *reinterpret_cast<void***>(ecx), v50 = ecx, esi51 = *reinterpret_cast<void***>(eax49 + 4), image_base_(esi51, v50, edi52, esi53, ebx54), esi51(esi51, v50, edi52, esi53, ebx54), esi55 = ecx, !esi55)) {
        ecx56 = reinterpret_cast<void**>(ebp44 + 0xfffffff8);
        fun_100136b5(ecx56, edi52, esi53, ebx54, v57, v47, ecx, v46, ebp58, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
        v50 = reinterpret_cast<void**>(ebp44 + 0xfffffff8);
        v59 = reinterpret_cast<void**>(0x1000305c);
        v60 = reinterpret_cast<void**>(1);
        v61 = reinterpret_cast<void**>(0);
        v62 = reinterpret_cast<void**>(0x10008164);
        eax63 = reinterpret_cast<int32_t>(CoCreateInstance(ecx56));
        if (eax63 < 0) {
            addr_10010125_3:
            fun_100136b5(ebp44 + 0xfffffff8, v62, v61, v60, v59, v50, edi52, esi53, ebx54, 0, v47, ecx, v46, ebp58, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
            ecx64 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
            eax65 = fun_1000a130(ecx64, ecx64);
            return eax65;
        } else {
            esi55 = ecx;
        }
    }
    fun_100136b5(ebp44 + 0xfffffff0, v50, edi52, esi53, ebx54, 0, v47, ecx, v46, ebp58, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    edi66 = *reinterpret_cast<void***>(esi55);
    v59 = reinterpret_cast<void**>(ebp44 + 0xfffffff0);
    v60 = reinterpret_cast<void**>(0);
    v61 = reinterpret_cast<void**>(0x10008154);
    v62 = v47;
    ecx67 = *reinterpret_cast<void***>(edi66 + 16);
    image_base_(ecx67, esi55);
    eax68 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(edi66 + 16)(ecx67, esi55));
    if (eax68 >= 0) {
        v47 = reinterpret_cast<void**>(0);
        fun_100136b5(ebp44 + 0xfffffff4, esi55, v62, 0x10008154, 0, v59, v50, edi52, esi53, ebx54, 0, 0, ecx, v46, ebp58, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
        esi69 = g0;
        v70 = reinterpret_cast<void**>(ebp44 + 0xfffffff4);
        ecx71 = *reinterpret_cast<void***>(esi69 + 52);
        image_base_(ecx71, 0, 0, v70, esi55);
        eax72 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi69 + 52)(ecx71, 0, 0, v70, esi55));
        if (eax72 >= 0) {
            fun_100104ca(ecx, 0, 0, a3, 0, 0, v70, esi55);
        }
        fun_100136b5(ebp44 + 0xfffffff4, 0, 0, v70, esi55, v62, 0x10008154, 0, v59, v50, edi52, esi53, ebx54, 0, 0, ecx, v46, ebp58, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
    }
    fun_100136b5(ebp44 + 0xfffffff0, esi55, v62, 0x10008154, 0, v59, v50, edi52, esi53, ebx54, 0, v47, ecx, v46, ebp58, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    goto addr_10010125_3;
}

int32_t PlaySoundW = 0x262a4;

void fun_10010a12() {
    void** eax1;
    void** v2;

    eax1 = fun_1000d7dd();
    if (eax1) {
        v2 = g10024664;
        PlaySoundW(0x13d8, v2, 0x240004);
    }
    return;
}

struct s62 {
    uint16_t* f0;
    int32_t f4;
    uint32_t f8;
    int32_t f12;
};

void fun_10010ae0(int32_t a1, struct s62* a2);

void** fun_10010b65(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void* ebp13;
    uint32_t eax14;
    void** eax15;

    ebp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax14 = g100240c4;
    fun_10010ae0(1, reinterpret_cast<uint32_t>(ebp13) - 20);
    eax15 = fun_1000a130(eax14 ^ reinterpret_cast<uint32_t>(ebp13) ^ reinterpret_cast<uint32_t>(ebp13));
    return eax15;
}

uint32_t fun_10010a71(void** ecx, void** a2, void** a3, void* a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

uint32_t fun_100106ef(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23) {
    void** eax24;
    void** ebp25;
    uint32_t eax26;

    eax24 = reinterpret_cast<void**>(0);
    *reinterpret_cast<unsigned char*>(&eax24) = reinterpret_cast<uint1_t>(!!a3);
    eax26 = fun_10010a71(ecx, a2, ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4, ecx, eax24, ebp25, __return_address(), a2, a3);
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax26) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax26 == 0))) {
        eax26 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax26)) | 0x80070000;
    }
    return eax26;
}

int32_t fun_1001093b();

int32_t OpenSCManagerW = 0x2623c;

int32_t OpenServiceW = 0x2624e;

int32_t QueryServiceConfigW = 0x2625e;

struct s63 {
    signed char[4] pad4;
    int32_t f4;
};

int32_t CloseServiceHandle = 0x2628e;

signed char fun_10010966(void** ecx) {
    void* ebp2;
    int32_t ebx3;
    int32_t eax4;
    int32_t eax5;
    int32_t edi6;
    int32_t eax7;
    void* v8;
    int32_t eax9;
    int32_t eax10;
    struct s63* eax11;
    void* v12;
    int32_t eax13;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebx3 = 0;
    eax4 = fun_1001093b();
    if (eax4) {
        eax5 = reinterpret_cast<int32_t>(OpenSCManagerW());
        if (eax5) {
            eax7 = reinterpret_cast<int32_t>(OpenServiceW(eax5, "A", 0x80000000, edi6));
            if (eax7) {
                v8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 4);
                eax9 = reinterpret_cast<int32_t>(QueryServiceConfigW(eax7, 0, 0, v8, eax5, "A", 0x80000000, edi6));
                if (!eax9 && (eax10 = reinterpret_cast<int32_t>(GetLastError(eax7, 0, 0, v8, eax5, "A", 0x80000000, edi6)), eax10 == 0x7a)) {
                    eax11 = reinterpret_cast<struct s63*>(LocalAlloc(64, ecx, eax7, 0, 0, v8, eax5, "A", 0x80000000, edi6));
                    if (eax11) {
                        v12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 4);
                        eax13 = reinterpret_cast<int32_t>(QueryServiceConfigW(eax7, eax11, ecx, v12, 64, ecx, eax7, 0, 0, v8, eax5, "A", 0x80000000, edi6));
                        if (eax13 && eax11->f4 == 2) {
                            *reinterpret_cast<signed char*>(&ebx3) = 1;
                        }
                        LocalFree(eax11, eax7, eax11, ecx, v12, 64, ecx, eax7, 0, 0, v8, eax5, "A", 0x80000000, edi6);
                    }
                }
                CloseServiceHandle(eax7, eax7, 0, 0, v8, eax5, "A", 0x80000000, edi6);
            }
            CloseServiceHandle();
        }
    }
    return *reinterpret_cast<signed char*>(&ebx3);
}

int32_t fun_10010a32(int32_t ecx);

int32_t fun_1001093b() {
    int32_t eax1;
    int32_t eax2;
    int32_t eax3;
    int32_t eax4;
    uint32_t eax5;

    eax1 = fun_10010a32("S");
    if (eax1) {
        eax2 = 0;
        *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<uint1_t>(eax1 == 2);
        return eax2;
    } else {
        eax3 = fun_10010a32("S");
        eax4 = eax3 - 1;
        eax5 = reinterpret_cast<uint32_t>(-eax4);
        return -(eax5 - (eax5 + reinterpret_cast<uint1_t>(eax5 < eax5 + reinterpret_cast<uint1_t>(!!eax4))));
    }
}

int32_t RegGetValueW = 0x2622c;

int32_t fun_10010a32(int32_t ecx) {
    int32_t ebx2;
    int32_t eax3;

    ebx2 = 0;
    eax3 = reinterpret_cast<int32_t>(RegGetValueW());
    if (!eax3) {
        *reinterpret_cast<unsigned char*>(&ebx2) = reinterpret_cast<uint1_t>(ecx == 0);
        ++ebx2;
    }
    return ebx2;
}

int32_t RegCreateKeyExW = 0x26376;

int32_t RegSetValueExW = 0x263ba;

uint32_t fun_10010a71(void** ecx, void** a2, void** a3, void* a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** v11;
    uint32_t esi12;
    int32_t edx13;
    int16_t* edx14;
    void** eax15;
    int32_t edx16;
    uint32_t eax17;
    uint32_t eax18;

    v11 = ecx;
    esi12 = 0;
    if (!edx13 || !*edx14) {
        eax15 = reinterpret_cast<void**>(0x80000002);
        v11 = reinterpret_cast<void**>(0x80000002);
    } else {
        eax17 = reinterpret_cast<uint32_t>(RegCreateKeyExW(0x80000002, edx16, 0, 0, 0, 2, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4, 0));
        esi12 = eax17;
        eax15 = v11;
    }
    if (!esi12 && (eax18 = reinterpret_cast<uint32_t>(RegSetValueExW(eax15, a2, 0, 4, a4, 4)), esi12 = eax18, v11 != 0x80000002)) {
        RegCloseKey(v11, eax15, a2, 0, 4, a4, 4);
    }
    return esi12;
}

void** fun_10010d84(void*** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    void** eax5;
    void** eax6;
    void** edi7;
    void** ecx8;
    void** esi9;
    uint32_t ecx10;
    void** eax11;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *ecx = reinterpret_cast<void**>(0);
    eax5 = fun_1000b6b9(20, 0x10002b64, esi4);
    if (eax5) {
        *reinterpret_cast<void***>(eax5 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax5 + 16) = reinterpret_cast<void**>(4);
        *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0x100010dc);
        if (eax5) {
            eax6 = *reinterpret_cast<void***>(eax5);
            edi7 = *reinterpret_cast<void***>(eax6 + 4);
            image_base_(edi7);
            edi7(edi7);
        }
        *ecx = eax5;
        if (eax5) {
            ecx8 = *reinterpret_cast<void***>(eax5);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax5);
            esi9(esi9, eax5);
        }
    }
    ecx10 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax11 = fun_1000a130(ecx10, ecx10);
    return eax11;
}

void** fun_10010e89(void** ecx);

void** fun_10010ee4(void** ecx, int32_t a2, int32_t a3) {
    fun_10010e89(ecx);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001be0);
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0x10001bc4);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001bb4);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 32) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 36) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 40) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(0);
    return ecx;
}

int32_t g10024748;

void** fun_100189af();

void fun_10018a4f(unsigned char cl, void** a2);

void fun_1001d229(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    int1_t zf6;

    zf6 = g10024748 == 0;
    if (zf6) {
        fun_100189af();
    }
    fun_10018a4f(*reinterpret_cast<unsigned char*>(&ecx) ^ 1, ecx);
    return;
}

struct s64 {
    signed char[4] pad4;
    uint16_t* f4;
    uint32_t f8;
    uint32_t f12;
    uint32_t f16;
    uint32_t f20;
};

signed char fun_100121ac(struct s64* ecx, uint32_t a2, uint32_t a3, void** a4, void** a5, void** a6) {
    signed char al7;

    if (!(a2 | a3) || ecx->f8 & a2 | ecx->f12 & a3 && ((ecx->f16 & a2) == ecx->f16 && (ecx->f20 & a3) == ecx->f20)) {
        al7 = 1;
    } else {
        al7 = 0;
    }
    return al7;
}

struct s65 {
    int32_t f0;
    uint32_t f4;
    int32_t f8;
    uint32_t f12;
};

struct s66 {
    uint16_t* f0;
    int32_t f4;
    uint32_t f8;
    int32_t f12;
    uint16_t* f16;
    int32_t f20;
    uint32_t f24;
    int32_t f28;
};

struct s67 {
    signed char[11] pad11;
    uint16_t f11;
};

int32_t EtwEventWriteTransfer = 0x2640e;

void fun_100121e9(struct s64* ecx, struct s65* a2, struct s65* a3, int32_t a4, struct s66* a5, void** a6, void** a7, void** a8, int32_t a9) {
    uint16_t* edx10;
    struct s67* edx11;
    uint16_t* eax12;
    uint32_t eax13;

    edx10 = &edx11->f11;
    a5->f0 = ecx->f4;
    a5->f4 = 0;
    eax12 = ecx->f4;
    a5->f8 = *eax12;
    a5->f12 = 2;
    a5->f16 = edx10;
    a5->f20 = 0;
    eax13 = *edx10;
    a5->f24 = eax13;
    a5->f28 = 1;
    EtwEventWriteTransfer();
    return;
}

signed char fun_100113c6(void** ecx, void** a2, uint32_t* a3, int16_t* a4);

void** fun_10011c3c(void** ecx, int16_t* a2, void** a3);

void** fun_10016c5c(void** ecx);

void** fun_10016778(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32);

void fun_10011c1d(void** ecx);

/* SHLWAPI.dll:172 */
int32_t SHLWAPI_dll_172 = 0x800000ac;

void** fun_10016d49(void** ecx, void** a2, void** a3, void** a4);

void** fun_100119cf(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void*** ebp17;
    uint32_t eax18;
    void** v19;
    void** ecx20;
    void** edi21;
    signed char al22;
    int16_t* v23;
    uint16_t v24;
    void** eax25;
    void** eax26;
    void** esi27;
    void** eax28;
    void** eax29;
    void** ecx30;
    void** v31;
    void** v32;
    void** edi33;
    void** esi34;
    void** ebx35;
    void** v36;
    void** ebp37;
    void** eax38;
    void** ecx39;
    void** eax40;
    void** esi41;
    uint32_t ecx42;
    void** eax43;
    void** v44;
    void** v45;
    void** eax46;
    void** eax47;
    void** esi48;
    void** eax49;
    void** eax50;
    void** esi51;
    void** ecx52;

    ebp17 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax18 = g100240c4;
    v19 = reinterpret_cast<void**>(eax18 ^ reinterpret_cast<uint32_t>(ebp17));
    ecx20 = g10024480;
    edi21 = reinterpret_cast<void**>(0x80004005);
    al22 = fun_100113c6(ecx20, ecx, ebp17 + 0xfffffff4, ebp17 + 0xfffffff8);
    if (al22) {
        eax25 = fun_10011c3c(ebp17 + 0xffffffe8, v23, static_cast<uint32_t>(v24));
        edi21 = eax25;
    }
    if (reinterpret_cast<signed char>(edi21) < reinterpret_cast<signed char>(0)) 
        goto addr_10011aef_4;
    eax26 = *reinterpret_cast<void***>(ecx + 32);
    esi27 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax26) + 0x80);
    image_base_(esi27, eax26, 0);
    eax28 = reinterpret_cast<void**>(esi27(esi27, eax26, 0));
    if (reinterpret_cast<signed char>(eax28) < reinterpret_cast<signed char>(0)) 
        goto addr_10011aef_4;
    eax29 = fun_10016c5c(esi27);
    if (reinterpret_cast<signed char>(eax29) < reinterpret_cast<signed char>(0)) 
        goto addr_10011aef_4;
    ecx30 = ecx + 36;
    v31 = ecx30;
    v32 = ecx30;
    *reinterpret_cast<unsigned char*>(&ecx30) = reinterpret_cast<uint1_t>(a2 == 0);
    eax38 = fun_10016778(ecx30, ecx + 4, v31, eax26, 0, 1, edi33, esi34, ebx35, 0, 0, 0, v36, v32, v19, ebp37, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    if (reinterpret_cast<signed char>(eax38) < reinterpret_cast<signed char>(0)) 
        goto addr_10011aef_4;
    if (a2) {
        ecx39 = ecx + 4;
        eax40 = *reinterpret_cast<void***>(ecx39);
        esi41 = *reinterpret_cast<void***>(eax40 + 12);
        ecx30 = esi41;
        image_base_(ecx30, ecx39, a2, eax26, 0);
        esi41(ecx30, ecx39, a2, eax26, 0);
    }
    if (*reinterpret_cast<void***>(ecx + 32)) 
        goto addr_10011aa4_11;
    addr_10011aff_12:
    fun_10011c1d(ebp17 + 0xffffffe8);
    ecx42 = reinterpret_cast<unsigned char>(v19) ^ reinterpret_cast<uint32_t>(ebp17);
    eax43 = fun_1000a130(ecx42, ecx42);
    return eax43;
    addr_10011aa4_11:
    if (*reinterpret_cast<void***>(ecx + 20)) {
        v44 = reinterpret_cast<void**>(ebp17 + 0xfffffff4);
        v45 = *reinterpret_cast<void***>(ecx + 32);
        eax46 = reinterpret_cast<void**>(SHLWAPI_dll_172(ecx30, v45, v44, eax26, 0));
        if (reinterpret_cast<signed char>(eax46) < reinterpret_cast<signed char>(0)) 
            goto addr_10011aef_4;
        *reinterpret_cast<unsigned char*>(&ecx30) = 0;
        fun_1001d229(ecx30, v45, v44, eax26, 0);
    }
    eax47 = *reinterpret_cast<void***>(ecx + 32);
    esi48 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax47) + 0x88);
    image_base_(esi48, eax47, eax26, 0);
    eax49 = reinterpret_cast<void**>(esi48(esi48, eax47, eax26, 0));
    if (reinterpret_cast<signed char>(eax49) < reinterpret_cast<signed char>(0)) {
        addr_10011aef_4:
        eax50 = *reinterpret_cast<void***>(ecx);
        esi51 = *reinterpret_cast<void***>(eax50 + 24);
        image_base_(esi51);
        esi51(esi51);
        goto addr_10011aff_12;
    } else {
        ecx52 = *reinterpret_cast<void***>(v32);
        fun_10016d49(ecx52, eax47, eax26, 0);
        goto addr_10011aff_12;
    }
}

uint32_t g100244c0;

int32_t fun_10011cd6(void** ecx);

int32_t gc;

void** fun_10011097(void** ecx, void** a2, void** a3, void** a4, void** a5, void* a6) {
    void* esp7;
    uint32_t eax8;
    void** v9;
    int1_t zf10;
    void*** esp11;
    void** edi12;
    void** esi13;
    void** ebx14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    int1_t below_or_equal20;
    signed char al21;
    int32_t v22;
    void** ecx23;
    int32_t eax24;
    void* esp25;
    void** ecx26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void* esp70;
    void** v71;
    int32_t eax72;
    void* esp73;
    void** esi74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    int32_t ecx113;
    int32_t eax114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** v122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    void** v149;
    void** v150;
    void** v151;
    void** v152;
    int1_t zf153;
    void** v154;
    void** v155;
    void** v156;
    void** v157;
    int1_t below_or_equal158;
    signed char al159;
    int32_t v160;
    uint32_t ecx161;
    void** eax162;

    esp7 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 60);
    eax8 = g100240c4;
    v9 = reinterpret_cast<void**>(eax8 ^ reinterpret_cast<uint32_t>(esp7));
    zf10 = (g100244c0 & 0x100) == 0;
    esp11 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp7) - 4 - 4 - 4);
    if (!zf10) {
        fun_10010b65(ecx, edi12, esi13, ebx14, v15, v16, a4, a3, ecx, v17, v18, v19);
        esp11 = esp11 - 4 + 4;
    }
    below_or_equal20 = g10024008 <= 5;
    if (!below_or_equal20 && (al21 = fun_100121ac(0x10024008, 0, 0x2000, edi12, esi13, ebx14), esp11 = esp11 - 4 - 4 - 4 + 8 + 4, !!al21)) {
        fun_100121e9(0x10024008, 0x10024008, 0x10024008, 2, esp11 + 32, edi12, esi13, ebx14, v22);
        esp11 = esp11 - 4 - 4 - 4 - 4 - 4 + 16 + 4;
    }
    ecx23 = ecx;
    eax24 = fun_10011cd6(ecx23);
    esp25 = reinterpret_cast<void*>(esp11 - 4 + 4);
    if (eax24 >= 0) {
        ecx26 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp25) + 16);
        fun_100136b5(ecx26, edi12, esi13, ebx14, v27, 0, a4, a3, ecx, v28, v29, v30, v31, v32, v33, v34, v35, v36, v9, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69);
        esp70 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp25) - 4 + 4);
        v71 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp70) + 16);
        eax72 = reinterpret_cast<int32_t>(CoCreateInstance(ecx26, 0x10008094));
        esp73 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp70) - 4 - 4 - 4 - 4 - 4 - 4 + 4);
        if (eax72 >= 0) {
            esi74 = ecx + 32;
            fun_100136b5(esi74, 0x10008094, 0, 1, 0x10007820, v71, edi12, esi13, ebx14, v75, 0, a4, a3, ecx, v76, v77, v78, v79, v80, v81, v82, v83, v84, v9, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112);
            ecx113 = gc;
            image_base_(ecx113, v71, edi12, v71, 1, 0, esi74, 0x10008094);
            eax114 = reinterpret_cast<int32_t>(gc(ecx113, v71, edi12, v71, 1, 0, esi74, 0x10008094));
            esp73 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp73) - 4 + 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4);
            if (eax114 >= 0) {
                fun_100119cf(0, a2, v71, edi12, v71, 1, 0, esi74, 0x10008094, 0, 1, 0x10007820, v71, edi12, esi13, ebx14);
                esp73 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp73) - 4 - 4 + 4 + 4);
            }
        }
        ecx23 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp73) + 16);
        fun_100136b5(ecx23, 0x10008094, 0, 1, 0x10007820, v71, edi12, esi13, ebx14, v115, 0, a4, a3, ecx, v116, v117, v118, v119, v120, v121, v122, v123, v124, v9, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152);
        esp25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp73) - 4 + 4);
    }
    zf153 = (g100244c0 & 0x100) == 0;
    if (!zf153) {
        fun_10010b65(ecx23, edi12, esi13, ebx14, v154, 0, a4, a3, ecx, v155, v156, v157);
        esp25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp25) - 4 + 4);
    }
    below_or_equal158 = g10024008 <= 5;
    if (!below_or_equal158 && (al159 = fun_100121ac(0x10024008, 0, 0x2000, edi12, esi13, ebx14), esp25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp25) - 4 - 4 - 4 + 8 + 4), !!al159)) {
        fun_100121e9(0x10024008, 0x10024008, 0x10024008, 2, reinterpret_cast<uint32_t>(esp25) + 32, edi12, esi13, ebx14, v160);
        esp25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp25) - 4 - 4 - 4 - 4 - 4 + 16 + 4);
    }
    ecx161 = reinterpret_cast<unsigned char>(v9) ^ reinterpret_cast<uint32_t>(esp25) + 4 + 4 + 4;
    eax162 = fun_1000a130(ecx161, ecx161);
    return eax162;
}

/* (image base) */
int32_t image_base_ = 0x1000a7a9;

/* (image base) */
int32_t image_base_ = 0x1000a7b3;

/* (image base) */
int32_t image_base_ = 0x1000a795;

/* (image base) */
int32_t image_base_ = 0x1000a7bd;

/* (image base) */
int32_t image_base_ = 0x1000a77a;

int32_t fun_10011cd6(void** ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t eax4;

    eax2 = reinterpret_cast<int32_t>(image_base_());
    if (eax2 >= 0) {
        eax3 = reinterpret_cast<int32_t>(image_base_(0x10002));
        if (eax3 < 0) {
            addr_10011d24_3:
            image_base_(0x10000000, 0x10002);
        } else {
            eax4 = reinterpret_cast<int32_t>(image_base_(0x10002));
            if (eax4 < 0) {
                image_base_(0x10002);
            } else {
                *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(1);
            }
            if (eax4 < 0) 
                goto addr_10011d24_3;
        }
    }
    goto 1;
}

int32_t LookupPrivilegeValueW = 0x26fb6;

int32_t GetCurrentProcess = 0x25e20;

int32_t OpenProcessToken = 0x26fa2;

int32_t AdjustTokenPrivileges = 0x26fce;

void** fun_10018c27(void** ecx, int32_t* a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void* ebp13;
    uint32_t eax14;
    int32_t eax15;
    void* v16;
    int32_t eax17;
    int32_t eax18;
    void* v19;
    void* v20;
    void* v21;
    int32_t v22;
    int32_t eax23;
    int32_t v24;
    int32_t v25;
    uint32_t ecx26;
    void** eax27;

    ebp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax14 = g100240c4;
    eax15 = reinterpret_cast<int32_t>(LookupPrivilegeValueW());
    if (!eax15 || (v16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp13) - 44), eax17 = reinterpret_cast<int32_t>(GetCurrentProcess(40, v16)), eax18 = reinterpret_cast<int32_t>(OpenProcessToken(eax17, 40, v16)), eax18 == 0)) {
        GetLastError();
    } else {
        v19 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp13) - 48);
        v20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp13) - 40);
        v21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp13) - 24);
        eax23 = reinterpret_cast<int32_t>(AdjustTokenPrivileges(v22, 0, v21, 16, v20, v19, eax17, 40, v16));
        if (!eax23) {
            GetLastError(v22, 0, v21, 16, v20, v19, eax17, 40, v16);
        } else {
            if (a2) {
                *a2 = v24;
            }
        }
        CloseHandle(v25, v22, 0, v21, 16, v20, v19, eax17, 40, v16);
    }
    ecx26 = eax14 ^ reinterpret_cast<uint32_t>(ebp13) ^ reinterpret_cast<uint32_t>(ebp13);
    eax27 = fun_1000a130(ecx26, ecx26);
    return eax27;
}

signed char fun_10011f38(void** ecx, void** a2);

int32_t NtPowerInformation = 0x26460;

int32_t WinSqmIsOptedIn = 0x26476;

int32_t WinSqmSetDWORD = 0x26488;

void** fun_1001d48b(void** ecx, void* a2, void* a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, void** a9, void** a10, void** a11);

void** fun_1001d53b(void** ecx, void** a2, void** a3, int32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9);

int32_t GetUserDefaultUILanguage = 0x264b0;

int32_t GetThreadUILanguage = 0x2649a;

int32_t CoTaskMemAlloc = 0x264cc;

struct s68 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

int32_t SHCreateThread = 0x25cc6;

int32_t fun_10012130(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

int32_t CoTaskMemFree = 0x264de;

void** fun_10011d31(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void*** ebp13;
    uint32_t eax14;
    void** v15;
    void** v16;
    void** edi17;
    void** esi18;
    void** ebx19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** ecx37;
    signed char al38;
    int1_t zf39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** ebp74;
    void** v75;
    int32_t eax76;
    int32_t eax77;
    int32_t eax78;
    void** eax79;
    int32_t v80;
    void** eax81;
    int32_t v82;
    uint16_t ax83;
    uint32_t eax84;
    void** v85;
    signed char v86;
    void** ebx87;
    void** v88;
    struct s68* eax89;
    void** ecx90;
    void** ecx91;
    int32_t eax92;
    void** eax93;
    void** esi94;
    void** eax95;
    void** esi96;
    void** ecx97;
    void** eax98;
    void** v99;
    void** esi100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** v122;
    void** v123;
    void** v124;
    void** v125;
    int1_t zf126;
    void** v127;
    void** eax128;

    ebp13 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax14 = g100240c4;
    v15 = reinterpret_cast<void**>(eax14 ^ reinterpret_cast<uint32_t>(ebp13));
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 0x20000)) {
        v16 = reinterpret_cast<void**>(0);
    } else {
        v16 = reinterpret_cast<void**>(1);
    }
    fun_100106ef(ecx, 0, v16, edi17, esi18, ebx19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
    ecx37 = ecx;
    al38 = fun_10011f38(ecx37, edi17);
    if (!al38) {
        zf39 = (g100244c0 & 0x100) == 0;
        if (!zf39) {
            fun_10010b65(ecx37, edi17, esi18, ebx19, v40, v41, v42, v43, v44, v45, v46, v47);
        }
        fun_1000b8d8(ecx37, ebp13 + 0xffffffa8, 0, 76, edi17, esi18, ebx19, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v15, ebp74, __return_address());
        v75 = reinterpret_cast<void**>(ebp13 + 0xffffffa8);
        NtPowerInformation(4, 0, 0, v75, 76);
        eax76 = reinterpret_cast<int32_t>(WinSqmIsOptedIn(4, 0, 0, v75, 76));
        if (eax76 && (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 6 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 0x20000)) {
            eax77 = 0;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 2)) {
                *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<uint1_t>(!!*reinterpret_cast<void***>(ecx + 20));
                eax78 = eax77 + 3;
            } else {
                *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<uint1_t>(!!*reinterpret_cast<void***>(ecx + 20));
                eax78 = eax77 + 6;
            }
            WinSqmSetDWORD(0, 0x21fb, eax78, 4, 0, 0, v75, 76);
            eax79 = fun_1001d48b(ecx37, ebp13 + 0xffffff98, ebp13 + 0xffffff9c, 0, 0x21fb, eax78, 4, 0, 0, v75, 76);
            if (reinterpret_cast<signed char>(eax79) >= reinterpret_cast<signed char>(0) && (v80 == 3 && (ecx37 = reinterpret_cast<void**>(ebp13 + 0xffffffa4), eax81 = fun_1001d53b(ecx37, 0, 0x21fb, eax78, 4, 0, 0, v75, 76), reinterpret_cast<signed char>(eax81) >= reinterpret_cast<signed char>(0)))) {
                WinSqmSetDWORD(0, 0x21fa, v82, 0, 0x21fb, eax78, 4, 0, 0, v75, 76);
            }
        }
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 2 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 0x800000) {
            NtPowerInformation(70, 0, 0, 0, 0, 4, 0, 0, v75, 76);
        }
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 4 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 0x2000000) {
            if (!*reinterpret_cast<void***>(ecx + 20)) {
                ax83 = reinterpret_cast<uint16_t>(GetUserDefaultUILanguage(4, 0, 0, v75, 76));
            } else {
                ax83 = reinterpret_cast<uint16_t>(GetThreadUILanguage(4, 0, 0, v75, 76));
            }
            eax84 = ax83;
            v85 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax84)));
            fun_10010a71(ecx37, "U", ecx37, ebp13 + 0xffffffa4, ecx37, 4, 0, 0, v75, 76);
        }
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 40)) & 16) || !v86) {
            ebx87 = *reinterpret_cast<void***>(ecx + 20);
            if (!ebx87) {
                v88 = reinterpret_cast<void**>(8);
                eax89 = reinterpret_cast<struct s68*>(CoTaskMemAlloc(8, 4, 0, 0, v75, 76));
                if (eax89 && (ecx90 = *reinterpret_cast<void***>(ecx + 40), eax89->f0 = ecx90, ecx91 = *reinterpret_cast<void***>(ecx + 44), eax89->f4 = ecx91, eax92 = reinterpret_cast<int32_t>(SHCreateThread(fun_10012130, eax89, 1, 0, 8, 4, 0, 0, v75, 76)), !eax92)) {
                    CoTaskMemFree(eax89, fun_10012130, eax89, 1, 0, 8, 4, 0, 0, v75, 76);
                }
            } else {
                eax93 = *reinterpret_cast<void***>(ebx87);
                v88 = *reinterpret_cast<void***>(ecx + 40);
                esi94 = *reinterpret_cast<void***>(eax93);
                image_base_(esi94, v88, 4, 0, 0, v75, 76);
                esi94(ebx87, v88, 4, 0, 0, v75, 76);
            }
        } else {
            v88 = reinterpret_cast<void**>(0);
            NtPowerInformation(73, 0, 0, 0, 0, 4, 0, 0, v75, 76);
        }
        eax95 = *reinterpret_cast<void***>(ecx);
        esi96 = *reinterpret_cast<void***>(eax95 + 24);
        ecx97 = esi96;
        image_base_(ecx97, ecx, v88, 4, 0, 0, v75, 76);
        esi96(ecx97, ecx, v88, 4, 0, 0, v75, 76);
        if (*reinterpret_cast<void***>(ecx + 24)) {
            eax98 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 24));
            v99 = *reinterpret_cast<void***>(ecx + 24);
            esi100 = *reinterpret_cast<void***>(eax98 + 0x94);
            image_base_(esi100, v99, ecx, v88, 4, 0, 0, v75, 76);
            esi100(esi100, v99, ecx, v88, 4, 0, 0, v75, 76);
            ecx97 = ecx + 24;
            fun_100136b5(ecx97, v99, ecx, v88, 4, 0, 0, v75, 76, edi17, esi18, ebx19, v101, v102, v103, v104, v85, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v15, ebp74, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
        }
        zf126 = (g100244c0 & 0x100) == 0;
        if (!zf126) {
            fun_10010b65(ecx97, ecx, v88, 4, 0, 0, v75, 76, edi17, esi18, ebx19, v127);
        }
    }
    eax128 = fun_1000a130(reinterpret_cast<unsigned char>(v15) ^ reinterpret_cast<uint32_t>(ebp13));
    return eax128;
}

void** fun_100118f6(void** ecx, void*** a2) {
    void** edx3;

    edx3 = ecx + 1;
    if (reinterpret_cast<unsigned char>(edx3) < reinterpret_cast<unsigned char>(ecx)) {
        *a2 = reinterpret_cast<void**>(0xffffffff);
    } else {
        *a2 = edx3;
    }
    return reinterpret_cast<uint32_t>(a2) - (reinterpret_cast<uint32_t>(a2) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(a2) < reinterpret_cast<uint32_t>(a2) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx3) < reinterpret_cast<unsigned char>(ecx)))) & 0x80070216;
}

int32_t fun_10011960(void** ecx, void** a2, int16_t* a3, void** a4) {
    int32_t edi5;
    int32_t edx6;
    void** esi7;
    void* eax8;
    uint32_t ebx9;
    int32_t edx10;

    edi5 = 0;
    if (!edx6) {
        addr_10011995_2:
        ecx = ecx - 2;
        edi5 = 0x8007007a;
    } else {
        esi7 = a4;
        eax8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(a3) - reinterpret_cast<unsigned char>(ecx));
        do {
            if (!esi7) 
                break;
            ebx9 = *reinterpret_cast<uint16_t*>(reinterpret_cast<uint32_t>(eax8) + reinterpret_cast<unsigned char>(ecx));
        } while (*reinterpret_cast<void***>(&ebx9) && (*reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(&ebx9), ecx = ecx + 2, --esi7, --edx10, !!edx10));
        if (!edx10) 
            goto addr_10011995_2;
    }
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    return edi5;
}

void** fun_10011b1c(void** ecx, void** a2);

int32_t fun_10011919(void** ecx, int16_t* a2, void** a3);

void** fun_10011c3c(void** ecx, int16_t* a2, void** a3) {
    int16_t* edx4;
    void** ebx5;
    void** v6;
    void** esi7;
    int16_t* ecx8;
    int32_t edi9;
    int16_t* esi10;
    int32_t ecx11;
    int16_t* edi12;
    int32_t ecx13;
    void** edi14;
    void** eax15;
    void** ecx16;

    edx4 = a2;
    ebx5 = reinterpret_cast<void**>(0);
    v6 = ecx;
    if (!edx4) {
        fun_10011c1d(ecx);
    } else {
        esi7 = a3;
        if (!reinterpret_cast<int1_t>(esi7 == 0xffffffff)) {
            ecx8 = edx4;
            edi9 = reinterpret_cast<int32_t>(ecx8 + 1);
            do {
                ++ecx8;
            } while (*ecx8);
            if (reinterpret_cast<unsigned char>(esi7) >= reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(ecx8) - edi9 >> 1)) 
                goto addr_10011c8d_7; else 
                goto addr_10011c89_8;
        } else {
            esi10 = edx4;
            ecx11 = reinterpret_cast<int32_t>(esi10 + 1);
            do {
                ++esi10;
            } while (*esi10);
            esi7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi10) - ecx11 >> 1);
            goto addr_10011c89_8;
        }
    }
    addr_10011ccb_12:
    return ebx5;
    addr_10011c8d_7:
    edi12 = edx4;
    ecx13 = reinterpret_cast<int32_t>(edi12 + 1);
    do {
        ++edi12;
    } while (*edi12);
    edi14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi12) - ecx13 >> 1);
    addr_10011ca1_15:
    eax15 = fun_10011b1c(v6, esi7);
    ebx5 = eax15;
    if (reinterpret_cast<signed char>(ebx5) >= reinterpret_cast<signed char>(0)) {
        ecx16 = *reinterpret_cast<void***>(v6);
        fun_10011919(ecx16, a2, edi14);
        *reinterpret_cast<void***>(v6 + 4) = edi14;
        goto addr_10011ccb_12;
    }
    addr_10011c89_8:
    edi14 = esi7;
    goto addr_10011ca1_15;
}

/* (image base) */
int32_t image_base_ = 0x1000aab6;

/* (image base) */
int32_t image_base_ = 0x1000aa70;

/* (image base) */
int32_t image_base_ = 0x1000aa84;

/* (image base) */
int32_t image_base_ = 0x1000aa7a;

/* (image base) */
int32_t image_base_ = 0x1000aa98;

struct s69 {
    signed char[44] pad44;
    int32_t f44;
};

struct s69** g10024710;

int32_t fun_1001670e(void* ecx);

/* (image base) */
int32_t image_base_ = 0x1000aaa2;

/* (image base) */
int32_t image_base_ = 0x1000aa8e;

void** fun_10016c5c(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t ebx4;
    int32_t eax5;
    void** eax6;
    void** esi7;
    int32_t eax8;
    int32_t eax9;
    void* ecx10;
    int32_t eax11;
    void* v12;
    signed char al13;
    struct s69** v14;
    int32_t eax15;
    struct s69** v16;
    int32_t eax17;
    int32_t esi18;
    void** eax19;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ebx4 = 0;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    if (eax5) {
        eax6 = reinterpret_cast<void**>(image_base_());
        esi7 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax6));
        image_base_(esi7);
        ecx = eax6;
        esi7(ecx);
    } else {
        eax8 = reinterpret_cast<int32_t>(image_base_());
        ebx4 = eax8;
    }
    if (ebx4 >= 0) {
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx));
        ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 16);
        image_base_(ecx10, eax9);
        eax11 = reinterpret_cast<int32_t>(image_base_(ecx10, eax9));
        v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 12);
        al13 = reinterpret_cast<signed char>(image_base_(ecx10, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9));
        if (al13) {
            g10024710 = v14;
        } else {
            g10024710 = reinterpret_cast<struct s69**>(0);
            eax15 = fun_1001670e(ecx10);
            if (eax15 >= 0) {
                eax17 = reinterpret_cast<int32_t>(image_base_(v16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9));
                if (eax17 < 0) {
                    esi18 = (*v16)->f44;
                    image_base_(esi18, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
                    esi18(v16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
                } else {
                    g10024710 = v16;
                }
            }
        }
        image_base_(reinterpret_cast<uint32_t>(ebp2) - 16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
    }
    eax19 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax19;
}

void** fun_10016389();

void** fun_1001681d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43);

/* (image base) */
int32_t image_base_ = 0x1000a98a;

void** fun_10016778(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32) {
    void*** ebp33;
    uint32_t eax34;
    void** v35;
    void** eax36;
    void** edx37;
    void** edi38;
    void** esi39;
    void** ebx40;
    void** ebp41;
    void** eax42;
    void** esi43;
    void** eax44;
    void** eax45;

    ebp33 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax34 = g100240c4;
    v35 = reinterpret_cast<void**>(eax34 ^ reinterpret_cast<uint32_t>(ebp33));
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    eax36 = fun_10016389();
    if (eax36) {
        eax42 = fun_1001681d(eax36, ecx, edx37, a2, edi38, esi39, ebx40, edx37, ecx, v35, ebp41, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
        if (reinterpret_cast<signed char>(eax42) < reinterpret_cast<signed char>(0) || (esi43 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edx37) + 0xac), image_base_(esi43, edx37, eax36), eax44 = reinterpret_cast<void**>(esi43(esi43, edx37, eax36)), reinterpret_cast<signed char>(eax44) < reinterpret_cast<signed char>(0))) {
            image_base_(eax36, 0);
        } else {
            *reinterpret_cast<void***>(a3) = eax36;
        }
    }
    eax45 = fun_1000a130(reinterpret_cast<unsigned char>(v35) ^ reinterpret_cast<uint32_t>(ebp33));
    return eax45;
}

/* (image base) */
int32_t image_base_ = 0x1000a7ef;

/* (image base) */
int32_t image_base_ = 0x1000a7e5;

struct s70 {
    signed char[84] pad84;
    int32_t f84;
};

void** fun_10016d49(void** ecx, void** a2, void** a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    struct s70** eax7;
    int32_t esi8;
    uint32_t ecx9;
    void** eax10;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    image_base_();
    eax7 = reinterpret_cast<struct s70**>(image_base_(ecx));
    esi8 = (*eax7)->f84;
    image_base_(esi8);
    esi8(eax7);
    ecx9 = eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5);
    eax10 = fun_1000a130(ecx9, ecx9);
    return eax10;
}

void fun_10011bf1(void** ecx) {
    void** edx2;
    void** edx3;
    void*** esi4;

    if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx + 4) == 0xffffffff)) {
        edx2 = *reinterpret_cast<void***>(ecx);
        if (!edx2) {
            edx3 = reinterpret_cast<void**>(0);
        } else {
            esi4 = reinterpret_cast<void***>(edx2 + 2);
            do {
                edx2 = edx2 + 2;
            } while (*reinterpret_cast<void***>(edx2));
            edx3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx2) - reinterpret_cast<uint32_t>(esi4)) >> 1);
        }
        *reinterpret_cast<void***>(ecx + 4) = edx3;
    }
    return;
}

void** fun_100119a9(uint32_t* ecx, uint32_t a2, void** a3) {
    void** eax4;

    eax4 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(a3) > reinterpret_cast<unsigned char>(0) || reinterpret_cast<unsigned char>(a3) >= reinterpret_cast<unsigned char>(0) && a2 > 0xffffffff) {
        *ecx = 0xffffffff;
        eax4 = reinterpret_cast<void**>(0x80070216);
    } else {
        *ecx = a2;
    }
    return eax4;
}

int32_t fun_10011919(void** ecx, int16_t* a2, void** a3) {
    int32_t eax4;
    int32_t edx5;
    uint32_t edx6;
    int32_t edx7;

    eax4 = 0;
    if (!edx5 || edx6 > 0x7fffffff) {
        eax4 = 0x80070057;
    }
    if (eax4 < 0) {
        if (!edx7) {
            addr_1001195c_5:
            return eax4;
        } else {
            addr_10011957_6:
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
            goto addr_1001195c_5;
        }
    } else {
        if (reinterpret_cast<unsigned char>(a3) <= reinterpret_cast<unsigned char>(0x7ffffffe)) {
            eax4 = fun_10011960(ecx, ecx, a2, a3);
            goto addr_1001195c_5;
        } else {
            eax4 = 0x80070057;
            goto addr_10011957_6;
        }
    }
}

int32_t LoadLibraryExW = 0x25fde;

int32_t GetProcAddress = 0x2614c;

int32_t FreeLibrary = 0x25fd0;

void** fun_1001d53b(void** ecx, void** a2, void** a3, int32_t a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void* ebp10;
    uint32_t eax11;
    int32_t eax12;
    uint32_t eax13;
    uint32_t esi14;
    int1_t sf15;
    int32_t ebx16;
    void** eax17;
    uint32_t eax18;
    int1_t sf19;
    void** v20;
    void** eax21;

    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax11 = g100240c4;
    if (ecx) {
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        eax12 = reinterpret_cast<int32_t>(LoadLibraryExW());
        if (!eax12) {
            eax13 = reinterpret_cast<uint32_t>(GetLastError());
            esi14 = eax13;
            sf15 = reinterpret_cast<int32_t>(esi14) < reinterpret_cast<int32_t>(0);
            if (!(reinterpret_cast<uint1_t>(sf15) | reinterpret_cast<uint1_t>(esi14 == 0))) {
                esi14 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi14)) | 0x80070000;
                sf15 = reinterpret_cast<int32_t>(esi14) < reinterpret_cast<int32_t>(0);
            }
            if (!sf15) {
            }
        } else {
            eax17 = reinterpret_cast<void**>(GetProcAddress(eax12, "GetDaysWaitedForAutoUpdateNotification", ebx16));
            if (!eax17) {
                eax18 = reinterpret_cast<uint32_t>(GetLastError(eax12, "GetDaysWaitedForAutoUpdateNotification", ebx16));
                esi14 = eax18;
                sf19 = reinterpret_cast<int32_t>(esi14) < reinterpret_cast<int32_t>(0);
                if (!(reinterpret_cast<uint1_t>(sf19) | reinterpret_cast<uint1_t>(esi14 == 0))) {
                    esi14 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi14)) | 0x80070000;
                    sf19 = reinterpret_cast<int32_t>(esi14) < reinterpret_cast<int32_t>(0);
                }
                if (!sf19) {
                }
            } else {
                v20 = ecx;
                ecx = eax17;
                image_base_(ecx, v20, eax12, "GetDaysWaitedForAutoUpdateNotification", ebx16);
                eax17(ecx, v20, eax12, "GetDaysWaitedForAutoUpdateNotification", ebx16);
            }
            FreeLibrary(ecx);
        }
    }
    eax21 = fun_1000a130(eax11 ^ reinterpret_cast<uint32_t>(ebp10) ^ reinterpret_cast<uint32_t>(ebp10));
    return eax21;
}

/* (image base) */
int32_t image_base_ = 0x1000a75c;

/* (image base) */
int32_t image_base_ = 0x1000a766;

signed char g4c0;

/* (image base) */
int32_t image_base_ = 0x1000a770;

void** fun_10011458(void** ecx, void** a2, int32_t a3, void** a4, void* a5, int32_t a6, void** a7) {
    void*** ebx8;
    void*** edx9;
    int32_t ecx10;
    void* esp11;
    signed char al12;
    void* esp13;
    int32_t esi14;
    int32_t v15;
    void* esp16;
    void* v17;
    signed char al18;
    int32_t v19;
    signed char al20;
    uint32_t ecx21;
    uint32_t v22;
    void** eax23;

    ebx8 = edx9;
    if (ecx) {
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    }
    if (ebx8) {
        *ebx8 = reinterpret_cast<void**>(0);
    }
    ecx10 = 6;
    esp11 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 0x4ec - 4 - 4 - 4 - 4 + 4);
    while (ecx10) {
        --ecx10;
    }
    al12 = reinterpret_cast<signed char>(image_base_());
    esp13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp11) - 4 - 4 - 4 - 4 + 4);
    if (al12 && (esi14 = v15, !!esi14)) {
        esp16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp13) - 4 - 4);
        v17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp16) + 32);
        al18 = reinterpret_cast<signed char>(image_base_(0, 0xff, 8, v17));
        esp13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp16) - 4 - 4 - 4 - 4 - 4 + 4);
        if (al18 && (v19 && ((1 || !1) && (--esi14, !0)))) {
            g4c0 = 1;
        }
        if (esi14 && ((al20 = reinterpret_cast<signed char>(image_base_(reinterpret_cast<uint32_t>(esp13) + 20, 0, 0xff, 8, v17)), esp13 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp13) - 4 - 4 + 4), !!al20) && ebx8)) {
            *ebx8 = reinterpret_cast<void**>(1);
        }
    }
    ecx21 = v22 ^ reinterpret_cast<uint32_t>(esp13) + 4 + 4 + 4;
    eax23 = fun_1000a130(ecx21, ecx21);
    return eax23;
}

int32_t fun_1000bb25(void** ecx, void** a2, void** a3, void** a4);

int32_t fun_1000bac6(void** ecx, void** a2, void** a3, void** a4);

void** fun_1001208a(void** ecx, void** a2) {
    void** esi3;
    void** ebx4;
    void** edi5;
    void** edi6;
    void** esi7;
    void** ebx8;
    int32_t eax9;
    int32_t eax10;

    esi3 = reinterpret_cast<void**>(0);
    ebx4 = ecx;
    if (!(*reinterpret_cast<unsigned char*>(&ebx4) & 2)) {
        if (!(*reinterpret_cast<unsigned char*>(&ebx4) & 4)) {
            addr_100120f8_3:
            if (!(reinterpret_cast<unsigned char>(ebx4) & 0x10000)) {
                if (reinterpret_cast<unsigned char>(ebx4) & 0x1000000) {
                    esi3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi3) | 1);
                }
            } else {
                esi3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi3) | 3);
            }
        } else {
            edi5 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ebx4) & 0x2000000 | 0x20000) >> 15);
            goto addr_100120cc_8;
        }
    } else {
        edi5 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ebx4) & 0x800000 | 0x20000) >> 14);
        goto addr_100120cc_8;
    }
    if (reinterpret_cast<unsigned char>(ebx4) & 0x20000) {
        esi3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi3) | 64);
    }
    return esi3;
    addr_100120cc_8:
    esi3 = edi5;
    eax9 = fun_1000bb25(ecx, edi6, esi7, ebx8);
    if (eax9 >= 0 && (!1 && ((eax10 = fun_1000bac6(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffff8, edi6, esi7, ebx8), eax10 >= 0) && !1))) {
        esi3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi3) | 0x80);
        goto addr_100120f8_3;
    }
}

int32_t fun_1000bac6(void** ecx, void** a2, void** a3, void** a4) {
    int32_t ebp5;
    int32_t eax6;
    int32_t ebp7;
    int32_t ebp8;

    fun_1000a5b0(0x1001f120, 16, __return_address());
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ebp5 - 4) = reinterpret_cast<void**>(0);
    eax6 = reinterpret_cast<int32_t>(image_base_("X3", 0x10004e52, 0, ecx));
    *reinterpret_cast<int32_t*>(ebp7 - 32) = eax6;
    *reinterpret_cast<int32_t*>(ebp8 - 4) = -2;
    fun_1000a5f5(ecx, 0x1001f120, 16, __return_address(), a2, a3);
    goto 0x1001f120;
}

struct s71 {
    signed char[4] pad4;
    int32_t f4;
};

int32_t fun_100124a9(struct s71** ecx, struct s23* a2, struct s71*** a3, struct s23* a4);

int32_t fun_100124ee(struct s71** ecx, struct s23* a2, struct s71*** a3, struct s23* a4) {
    struct s71** esi5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;

    esi5 = ecx;
    eax6 = fun_1000f58d(a2);
    if (eax6 || (++esi5, eax7 = fun_1000f58d(a2), !!eax7)) {
        *a3 = esi5;
        eax8 = 0;
    } else {
        eax8 = fun_100124a9(esi5 + 1, a2, a3, a2);
    }
    return eax8;
}

int32_t fun_10012420(struct s71** ecx, struct s23* a2, struct s71*** a3, struct s23* a4) {
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;

    eax5 = fun_1000f58d(a2);
    if (!eax5) {
        eax6 = fun_1000f58d(a2);
        if (!eax6) {
            eax7 = 0x80004002;
        } else {
            *a3 = ecx + 1;
            goto addr_1001243e_5;
        }
    } else {
        *a3 = ecx;
        goto addr_1001243e_5;
    }
    addr_1001245f_7:
    return eax7;
    addr_1001243e_5:
    eax7 = 0;
    goto addr_1001245f_7;
}

int32_t fun_10012464(struct s71** ecx, struct s23* a2, struct s71*** a3, struct s23* a4) {
    struct s71** esi5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;

    esi5 = ecx;
    eax6 = fun_1000f58d(a2);
    if (eax6 || (++esi5, eax7 = fun_1000f58d(a2), !!eax7)) {
        *a3 = esi5;
        eax8 = 0;
    } else {
        eax8 = fun_10012420(esi5 + 1, a2, a3, a2);
    }
    return eax8;
}

int32_t fun_100124a9(struct s71** ecx, struct s23* a2, struct s71*** a3, struct s23* a4) {
    struct s71** esi5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;

    esi5 = ecx;
    eax6 = fun_1000f58d(a2);
    if (eax6 || (++esi5, eax7 = fun_1000f58d(a2), !!eax7)) {
        *a3 = esi5;
        eax8 = 0;
    } else {
        eax8 = fun_10012464(esi5 + 1, a2, a3, a2);
    }
    return eax8;
}

struct s72 {
    int32_t f0;
    int32_t f4;
    signed char[8] pad16;
    int32_t f16;
    signed char[12] pad32;
    int32_t f32;
};

int32_t g100078b0 = 0xaf86e2e0;

struct s73 {
    int32_t f0;
    int32_t f4;
};

int32_t g100078b4 = 0x4c6ab12d;

struct s74 {
    int32_t f0;
    int32_t f4;
};

int32_t g100078b8 = 0xaad75a9c;

int32_t g100078bc = 0x901e1065;

struct s75 {
    int32_t f0;
    int32_t f4;
};

int32_t g100078a0 = 0xda659529;

struct s76 {
    int32_t f0;
    int32_t f4;
};

int32_t g100078a4 = 0x44b1a500;

struct s77 {
    int32_t f0;
    int32_t f4;
};

int32_t g100078a8 = 0x806fe58f;

int32_t g100078ac = 0xd4b79055;

struct s78 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007890 = 56;

struct s79 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007894 = 0;

struct s80 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007898 = 0xc0;

int32_t g1000789c = 0x46000000;

void fun_10013355(int32_t* a1, struct s72* a2);

int32_t fun_100125e4(int32_t ecx, struct s72** a2) {
    uint32_t* edx3;
    struct s72* eax4;
    struct s73* edi5;
    struct s74* edi6;
    struct s75* edi7;
    struct s76* edi8;
    struct s77* edi9;
    struct s78* edi10;
    struct s79* edi11;
    struct s80* edi12;
    int32_t eax13;

    *a2 = reinterpret_cast<struct s72*>(0);
    *edx3 = 0;
    eax4 = reinterpret_cast<struct s72*>(CoTaskMemAlloc());
    if (eax4) {
        eax4->f0 = g100078b0;
        edi5 = reinterpret_cast<struct s73*>(&eax4->f4);
        edi5->f0 = g100078b4;
        edi6 = reinterpret_cast<struct s74*>(&edi5->f4);
        edi6->f0 = g100078b8;
        edi6->f4 = g100078bc;
        edi7 = reinterpret_cast<struct s75*>(&eax4->f16);
        edi7->f0 = g100078a0;
        edi8 = reinterpret_cast<struct s76*>(&edi7->f4);
        edi8->f0 = g100078a4;
        edi9 = reinterpret_cast<struct s77*>(&edi8->f4);
        edi9->f0 = g100078a8;
        edi9->f4 = g100078ac;
        edi10 = reinterpret_cast<struct s78*>(&eax4->f32);
        edi10->f0 = g10007890;
        edi11 = reinterpret_cast<struct s79*>(&edi10->f4);
        edi11->f0 = g10007894;
        edi12 = reinterpret_cast<struct s80*>(&edi11->f4);
        edi12->f0 = g10007898;
        edi12->f4 = g1000789c;
        fun_10013355(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4, eax4);
        *edx3 = 8;
        *a2 = eax4;
        eax13 = 0;
    } else {
        eax13 = 0x8007000e;
    }
    return eax13;
}

struct s81 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007880 = 0xda78195d;

struct s82 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007884 = 0x4d9dcb1b;

struct s83 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007888 = 0xd3e2e185;

int32_t g1000788c = 0x40b6a38c;

struct s84 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007870 = 0x274a7dea;

struct s85 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007874 = 0x4095d771;

struct s86 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007878 = 0xf78dbdab;

int32_t g1000787c = 0xe33cd2ab;

struct s87 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007860 = 0xbac5f55a;

struct s88 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007864 = 0x414cba7c;

struct s89 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007868 = 0xf8fb99b5;

int32_t g1000786c = 0xc653f550;

struct s90 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007850 = 0x8d4d1ec2;

struct s91 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007854 = 0x4fc54740;

struct s92 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007858 = 0xc36db1b4;

int32_t g1000785c = 0xeb2e2a72;

struct s93 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007a0c = 0xdded66d8;

struct s94 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007a10 = 0x47499b74;

struct s95 {
    int32_t f0;
    int32_t f4;
};

int32_t g10007a14 = 0xbcb4778f;

int32_t g10007a18 = 0xd5c90da2;

void fun_10013355(int32_t* a1, struct s72* a2) {
    int32_t eax3;
    struct s81* edi4;
    struct s82* edi5;
    struct s83* edi6;
    struct s84* edi7;
    struct s85* edi8;
    struct s86* edi9;
    struct s87* edi10;
    struct s88* edi11;
    struct s89* edi12;
    struct s90* edi13;
    struct s91* edi14;
    struct s92* edi15;
    struct s93* edi16;
    struct s94* edi17;
    struct s95* edi18;

    eax3 = *a1;
    edi4 = reinterpret_cast<struct s81*>((eax3 << 4) + reinterpret_cast<uint32_t>(a2));
    edi4->f0 = g10007880;
    edi5 = reinterpret_cast<struct s82*>(&edi4->f4);
    edi5->f0 = g10007884;
    edi6 = reinterpret_cast<struct s83*>(&edi5->f4);
    edi6->f0 = g10007888;
    edi6->f4 = g1000788c;
    edi7 = reinterpret_cast<struct s84*>((eax3 + 1 << 4) + reinterpret_cast<uint32_t>(a2));
    edi7->f0 = g10007870;
    edi8 = reinterpret_cast<struct s85*>(&edi7->f4);
    edi8->f0 = g10007874;
    edi9 = reinterpret_cast<struct s86*>(&edi8->f4);
    edi9->f0 = g10007878;
    edi9->f4 = g1000787c;
    edi10 = reinterpret_cast<struct s87*>((eax3 + 2 << 4) + reinterpret_cast<uint32_t>(a2));
    edi10->f0 = g10007860;
    edi11 = reinterpret_cast<struct s88*>(&edi10->f4);
    edi11->f0 = g10007864;
    edi12 = reinterpret_cast<struct s89*>(&edi11->f4);
    edi12->f0 = g10007868;
    edi12->f4 = g1000786c;
    edi13 = reinterpret_cast<struct s90*>((eax3 + 3 << 4) + reinterpret_cast<uint32_t>(a2));
    edi13->f0 = g10007850;
    edi14 = reinterpret_cast<struct s91*>(&edi13->f4);
    edi14->f0 = g10007854;
    edi15 = reinterpret_cast<struct s92*>(&edi14->f4);
    edi15->f0 = g10007858;
    edi15->f4 = g1000785c;
    edi16 = reinterpret_cast<struct s93*>((eax3 + 4 << 4) + reinterpret_cast<uint32_t>(a2));
    *a1 = eax3 + 5;
    edi16->f0 = g10007a0c;
    edi17 = reinterpret_cast<struct s94*>(&edi16->f4);
    edi17->f0 = g10007a10;
    edi18 = reinterpret_cast<struct s95*>(&edi17->f4);
    edi18->f0 = g10007a14;
    edi18->f4 = g10007a18;
    return;
}

void** fun_10013e70(void** ecx, void** a2) {
    void* ebp3;
    uint32_t eax4;
    void** eax5;
    void** esi6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0x8], ebx");
    if (!1) {
        if (a2) {
            eax5 = *reinterpret_cast<void***>(a2);
            esi6 = *reinterpret_cast<void***>(eax5 + 16);
            image_base_(esi6, 1);
            esi6(a2, 1);
        }
        eax7 = g10024484;
        if (eax7) {
            ecx8 = *reinterpret_cast<void***>(eax7);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax7);
            esi9(esi9, eax7);
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

void** fun_10012911(void*** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    void** eax5;
    void** eax6;
    void** edi7;
    void** ecx8;
    void** esi9;
    uint32_t ecx10;
    void** eax11;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *ecx = reinterpret_cast<void**>(0);
    eax5 = fun_1000b6b9(20, 0x10002b64, esi4);
    if (eax5) {
        *reinterpret_cast<void***>(eax5 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax5 + 16) = reinterpret_cast<void**>(4);
        *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0x100010f4);
        if (eax5) {
            eax6 = *reinterpret_cast<void***>(eax5);
            edi7 = *reinterpret_cast<void***>(eax6 + 4);
            image_base_(edi7);
            edi7(edi7);
        }
        *ecx = eax5;
        if (eax5) {
            ecx8 = *reinterpret_cast<void***>(eax5);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax5);
            esi9(esi9, eax5);
        }
    }
    ecx10 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax11 = fun_1000a130(ecx10, ecx10);
    return eax11;
}

void** fun_10013050(uint32_t* ecx, void** a2, void** a3, uint32_t a4) {
    void** eax5;

    eax5 = reinterpret_cast<void**>(LocalAlloc());
    *reinterpret_cast<void***>(a3) = eax5;
    goto a2;
}

void** fun_10012a29(void** ecx, void** a2, void** a3);

uint32_t fun_100144b6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27);

void** fun_10012a5e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17) {
    void** eax18;
    void** esi19;
    void** eax20;
    void** ecx21;
    void** edi22;
    void** esi23;
    void** ebp24;

    *reinterpret_cast<void***>(a5) = reinterpret_cast<void**>(0);
    eax18 = fun_100118f6(a3, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    esi19 = eax18;
    if (reinterpret_cast<signed char>(esi19) >= reinterpret_cast<signed char>(0) && (eax20 = fun_10012a29(a3, ecx, a5), esi19 = eax20, reinterpret_cast<signed char>(esi19) >= reinterpret_cast<signed char>(0))) {
        ecx21 = *reinterpret_cast<void***>(a5);
        fun_100144b6(ecx21, a2, a3, 0x10012a87, ecx, a5, edi22, esi23, ecx, ebp24, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
    }
    return esi19;
}

void** fun_10012a29(void** ecx, void** a2, void** a3) {
    uint32_t* ecx4;
    void** eax5;
    uint32_t esi6;

    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    ecx4 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    eax5 = fun_100119a9(ecx4, reinterpret_cast<unsigned char>(a2) * 2, __intrinsic());
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0)) {
        eax5 = fun_10013050(ecx4, ecx, a3, esi6);
    }
    return eax5;
}

uint32_t fun_10014576(void** ecx, int32_t* a2, void** a3, uint32_t a4);

uint32_t fun_100144b6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27) {
    void** ecx28;
    void** eax29;
    uint32_t esi30;
    uint32_t edx31;
    uint32_t eax32;
    uint32_t eax33;
    uint32_t eax34;
    uint32_t edi35;
    uint32_t eax36;
    void** edi37;
    void** esi38;
    void** ebx39;
    void** ebp40;
    uint32_t esi41;

    ecx28 = a2;
    eax29 = ecx28;
    esi30 = 0;
    if (!ecx && edx31 || edx31 > 0x7fffffff) {
        esi30 = 0x80070057;
    }
    if (reinterpret_cast<int32_t>(esi30) < reinterpret_cast<int32_t>(0)) {
        addr_100144f3_4:
        if (edx31) {
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        }
    } else {
        if (reinterpret_cast<unsigned char>(a3) < reinterpret_cast<unsigned char>(0x7fffffff)) {
            if (!ecx28) {
                ecx28 = reinterpret_cast<void**>(0x1000316c);
            }
            eax32 = -reinterpret_cast<unsigned char>(eax29);
            esi30 = 0;
            eax33 = eax32 - (eax32 + reinterpret_cast<uint1_t>(eax32 < eax32 + reinterpret_cast<uint1_t>(!!eax29))) & reinterpret_cast<unsigned char>(a3);
            if (edx31) {
                eax34 = fun_10014576(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4, ecx28, eax33);
                esi30 = eax34;
                edi35 = edx31;
                if (reinterpret_cast<int32_t>(esi30) >= reinterpret_cast<int32_t>(0) && (edi35 > 1 && (eax36 = edi35 + edi35, eax36 > 2))) {
                    fun_1000b8d8(1, ecx + 2, 0, eax36 - 2, edi37, esi38, ebx39, 0, ebp40, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27);
                }
            } else {
                if (eax33 && *reinterpret_cast<void***>(ecx28)) {
                    esi41 = -reinterpret_cast<unsigned char>(ecx);
                    esi30 = (esi41 - (esi41 + reinterpret_cast<uint1_t>(esi41 < esi41 + reinterpret_cast<uint1_t>(!!ecx))) & 35) + 0x80070057;
                }
            }
        } else {
            esi30 = 0x80070057;
            goto addr_100144f3_4;
        }
    }
    return esi30;
}

struct s96 {
    signed char[40] pad40;
    int32_t f40;
};

/* (image base) */
int32_t image_base_ = 0x1000a96c;

void** fun_10012826(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    struct s96** eax5;
    struct s96* ecx6;
    int32_t esi7;
    uint32_t ecx8;
    void** eax9;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 0x8c);
    image_base_(esi4);
    eax5 = reinterpret_cast<struct s96**>(esi4(ecx));
    image_base_(ecx);
    ecx6 = *eax5;
    esi7 = ecx6->f40;
    image_base_(esi7);
    esi7(eax5);
    ecx8 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax9 = fun_1000a130(ecx8, ecx8);
    return eax9;
}

void** fun_10012bef(void** ecx, int32_t a2, void** a3, int32_t a4) {
    __asm__("fld1 ");
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(0xffffffff);
    __asm__("fstp dword [ecx+0x8]");
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 16) = a3;
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0x403);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(15);
    *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 32) = reinterpret_cast<void**>(0);
    return ecx;
}

struct s97 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t f12;
    int32_t f16;
    int32_t f20;
    int32_t f24;
    int32_t f28;
    signed char[4] pad36;
    void** f36;
    signed char[3] pad40;
    int32_t f40;
    int32_t f44;
    signed char[8] pad56;
    void** f56;
    signed char[27] pad84;
    void** f84;
    signed char[3] pad88;
    void** f88;
    signed char[11] pad100;
    void** f100;
    signed char[3] pad104;
    void** f104;
    signed char[3] pad108;
    void** f108;
    signed char[39] pad148;
    void** f148;
    signed char[3] pad152;
    void** f152;
    signed char[3] pad156;
    void** f156;
    signed char[3] pad160;
    void** f160;
    signed char[3] pad164;
    void** f164;
    signed char[3] pad168;
    void** f168;
};

void** g10024740;

int32_t fun_1001a4c2(void** ecx);

int32_t fun_1001c2cf(struct s97* ecx) {
    void** esi2;
    void** ecx3;
    int32_t eax4;

    esi2 = g10024740;
    __asm__("lock xadd [esi+0x30], edi");
    if (!1 && esi2) {
        ecx3 = esi2 + 4;
        *reinterpret_cast<void***>(esi2) = reinterpret_cast<void**>(0x10001824);
        if (*reinterpret_cast<void***>(ecx3)) {
            fun_1001a4c2(ecx3);
        }
        eax4 = reinterpret_cast<int32_t>(GetProcessHeap(0, esi2));
        HeapFree(eax4, 0, esi2);
    }
    return -2;
}

void** fun_10013f7b(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void* ebp11;
    uint32_t eax12;
    void** ecx13;
    void** esi14;
    void** eax15;

    ebp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax12 = g100240c4;
    __asm__("lock xadd [edi+0x3c], ebx");
    if (!1 && ecx) {
        ecx13 = *reinterpret_cast<void***>(ecx);
        esi14 = *reinterpret_cast<void***>(ecx13 + 8);
        image_base_(esi14);
        esi14(ecx);
    }
    eax15 = fun_1000a130(eax12 ^ reinterpret_cast<uint32_t>(ebp11) ^ reinterpret_cast<uint32_t>(ebp11));
    return eax15;
}

/* (image base) */
int32_t image_base_ = 0x1000b39c;

int32_t fun_10014498(void** ecx) {
    int32_t eax2;
    void** v3;

    *reinterpret_cast<unsigned char*>(&eax2) = 1;
    if (*reinterpret_cast<void***>(ecx)) {
        v3 = *reinterpret_cast<void***>(ecx);
        eax2 = reinterpret_cast<int32_t>(image_base_(v3));
        *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<uint1_t>(!!eax2);
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    }
    return eax2;
}

struct s98 {
    int32_t f0;
    signed char[48] pad52;
    int32_t f52;
};

int32_t DeleteCriticalSection = 0x25efc;

/* (image base) */
int32_t image_base_ = 0x1000a650;

struct s99 {
    signed char[8] pad8;
    int32_t f8;
};

void** fun_10016030(int32_t ecx, struct s99** a2);

/* (image base) */
int32_t image_base_ = 0x1000a63c;

void fun_10012e3f(struct s98* ecx) {
    int32_t v2;
    int32_t* ecx3;
    int32_t v4;
    int32_t edi5;

    ecx->f0 = 0x10001df0;
    v2 = reinterpret_cast<int32_t>(&ecx->pad52);
    DeleteCriticalSection();
    DeleteCriticalSection();
    ecx3 = &ecx->f52;
    if (*ecx3) {
        if (*ecx3) {
            v4 = *ecx3;
            image_base_(v4, fun_10016030, 0, edi5);
            *ecx3 = 0;
            image_base_();
            *ecx3 = 0;
        }
        goto v2;
    } else {
        goto v2;
    }
}

void** fun_10012e6c(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** eax50;
    void** esi51;
    void** v52;
    void** edi53;
    void** ebx54;
    void** ebp55;
    uint32_t ecx56;
    void** eax57;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    if (*ecx != a2) {
        if (a2) {
            eax50 = *reinterpret_cast<void***>(a2);
            esi51 = *reinterpret_cast<void***>(eax50 + 4);
            image_base_(esi51);
            esi51(esi51);
        }
        v52 = *ecx;
        *ecx = a2;
        fun_100136b5(ebp47 + 0xfffffff8, edi53, ebx54, v52, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    }
    ecx56 = reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47);
    eax57 = fun_1000a130(ecx56, ecx56);
    return eax57;
}

/* (image base) */
int32_t image_base_ = 0x1000a646;

void fun_1001437c(void** ecx, void** a2);

void** fun_10014ff2(void** ecx, void** a2, void** a3) {
    void** eax4;
    int32_t edx5;
    int32_t ebp6;

    eax4 = reinterpret_cast<void**>(image_base_());
    edx5 = 0;
    *reinterpret_cast<void***>(ecx + 52) = eax4;
    *reinterpret_cast<unsigned char*>(&edx5) = reinterpret_cast<uint1_t>(!!eax4);
    if (edx5) {
        *reinterpret_cast<void***>(ecx + 68) = a2;
        fun_1001437c(ecx, a3);
    }
    goto ebp6;
}

struct s100 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
};

void** fun_10014ba8(struct s100* ecx, int32_t a2, int32_t a3, int32_t a4);

void** fun_100131f9(void** ecx, void** a2, void** a3, void** a4) {
    struct s100* ecx5;
    void** eax6;

    ecx5 = reinterpret_cast<struct s100*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 12);
    eax6 = fun_10014ba8(ecx5, 1, 0, 0);
    if (!1) {
        eax6 = reinterpret_cast<void**>(FreeLibrary(ecx5, 0, 0, 0));
    }
    return eax6;
}

int32_t EnterCriticalSection = 0x26502;

/* (image base) */
int32_t image_base_ = 0x1000a621;

signed char fun_10013229(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void* ebp6;
    uint32_t eax7;
    void** ebx8;
    void** v9;
    void** eax10;
    void** v11;
    void** eax12;
    void** eax13;
    void** esi14;
    void** ecx15;
    void** esi16;
    int32_t eax17;
    void** edi18;
    void** esi19;
    int32_t eax20;
    void** ecx21;
    void** eax22;
    void** esi23;
    uint32_t ecx24;
    void** eax25;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    ebx8 = reinterpret_cast<void**>(0);
    v9 = ecx;
    EnterCriticalSection();
    if (!*reinterpret_cast<void***>(ecx + 52)) {
        eax10 = reinterpret_cast<void**>(0);
    } else {
        eax10 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 52));
    }
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax10) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax10 == 0))) {
        v11 = *reinterpret_cast<void***>(ecx + 52);
        eax12 = reinterpret_cast<void**>(image_base_(v11, 0));
        ebx8 = eax12;
    }
    if (!*reinterpret_cast<void***>(ecx + 52)) {
        eax13 = reinterpret_cast<void**>(0);
    } else {
        eax13 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 52));
    }
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax13) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax13 == 0))) {
        esi14 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 12);
        image_base_(esi14);
        ecx = ecx;
        esi14(ecx);
    }
    LeaveCriticalSection(ecx);
    if (ebx8) {
        ecx15 = *reinterpret_cast<void***>(ebx8);
        esi16 = *reinterpret_cast<void***>(ecx15 + 24);
        image_base_(esi16, ebx8);
        eax17 = reinterpret_cast<int32_t>(esi16(esi16, ebx8));
        if (!eax17) {
            edi18 = *reinterpret_cast<void***>(ebx8);
            esi19 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(v9));
            image_base_(esi19, ebx8);
            eax20 = reinterpret_cast<int32_t>(esi19(v9, ebx8));
            ecx21 = *reinterpret_cast<void***>(edi18 + 16);
            image_base_(ecx21, ebx8, eax20, ebx8);
            *reinterpret_cast<void***>(edi18 + 16)(ecx21, ebx8, eax20, ebx8);
        }
        eax22 = *reinterpret_cast<void***>(ebx8);
        esi23 = *reinterpret_cast<void***>(eax22 + 8);
        image_base_(esi23, ebx8, ebx8);
        esi23(esi23, ebx8, ebx8);
    }
    ecx24 = eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6);
    eax25 = fun_1000a130(ecx24, ecx24);
    return *reinterpret_cast<signed char*>(&eax25);
}

/* (image base) */
int32_t image_base_ = 0x1000a664;

/* (image base) */
int32_t image_base_ = 0x1000a67f;

void** fun_100133c3(void** ecx) {
    int32_t esi2;
    void** eax3;

    image_base_(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 8, 0, esi2, 0, 0);
    eax3 = reinterpret_cast<void**>(image_base_());
    return eax3;
}

void** fun_10010167(void** ecx, int32_t a2, uint32_t* a3) {
    int32_t edx4;
    void** eax5;

    eax5 = reinterpret_cast<void**>(RegGetValueW(ecx, edx4, a2, 16, 0, a3, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4, 4));
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax5) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax5 == 0))) {
        eax5 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax5)) | 0x80070000);
    }
    return eax5;
}

void** fun_100136ef(void** ecx) {
    void* ebp2;
    unsigned char bl3;
    void** eax4;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    bl3 = 0;
    eax4 = fun_10010167(0x80000002, "D", reinterpret_cast<int32_t>(ebp2) - 4);
    if (reinterpret_cast<signed char>(eax4) >= reinterpret_cast<signed char>(0) || (eax4 = fun_10010167(0x80000002, "D", reinterpret_cast<int32_t>(ebp2) - 4), reinterpret_cast<signed char>(eax4) >= reinterpret_cast<signed char>(0))) {
        bl3 = reinterpret_cast<uint1_t>(ecx == 0);
    }
    *reinterpret_cast<unsigned char*>(&eax4) = bl3;
    return eax4;
}

void** fun_10013d21(void** ecx, int32_t a2, void** a3, int32_t a4);

void** fun_10013fc5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int32_t a8, void** a9) {
    void* ebp10;
    void** ecx11;
    int32_t edi12;
    uint32_t ebx13;
    void** eax14;

    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    fun_1000c870(ecx);
    ecx11 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp10) + 0xffffeffc);
    fun_10013d21(ecx11, a8, a9, edi12);
    fun_1000ead9(ecx, a2, 0, 0, a5, 2, a7, reinterpret_cast<uint32_t>(ebp10) + 0xffffeffc, ecx11);
    eax14 = fun_1000a130(ebx13 ^ reinterpret_cast<uint32_t>(ebp10));
    return eax14;
}

void** fun_1001dbf2(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34);

/* (image base) */
int32_t image_base_ = 0x1000b8e8;

void** fun_1001d174(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26) {
    void** esi27;
    void** ebx28;
    void** esi29;
    void** ebx30;
    void** ebp31;
    void** eax32;
    void** edi33;
    void** eax34;

    esi27 = reinterpret_cast<void**>(0);
    ebx28 = ecx;
    eax32 = fun_1001dbf2(ecx, a2, 0, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, esi29, ebx30, ecx, ebp31, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
    if (reinterpret_cast<signed char>(eax32) >= reinterpret_cast<signed char>(0)) {
        edi33 = ecx;
        if (!edi33) {
            edi33 = ebx28;
            ebx28 = reinterpret_cast<void**>(0);
        }
        eax34 = reinterpret_cast<void**>(image_base_());
        esi27 = eax34;
        if (!esi27) {
            DeleteObject(edi33);
        }
    }
    if (ebx28) {
        DeleteObject(ebx28);
    }
    return esi27;
}

void** fun_10015e8f(void** ecx, uint32_t a2, int32_t a3);

void** fun_10015d47(void** ecx, signed char a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

int32_t RedrawWindow = 0x2662c;

void** fun_10014fa3(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_10015b89(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_1001461e(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_10015dba(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void*** esp6;
    uint32_t eax7;
    void** v8;
    void*** esp9;
    void** edi10;
    void** esi11;
    void** ebx12;
    void** v13;
    void** v14;
    void** edi15;
    void** esi16;
    void** eax17;
    void** eax18;
    void** eax19;
    void* esp20;
    void** edi21;
    void** esi22;
    void* esp23;
    uint32_t eax24;
    void** eax25;
    uint32_t eax26;
    void** eax27;

    esp6 = reinterpret_cast<void***>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 4);
    eax7 = g100240c4;
    v8 = reinterpret_cast<void**>(eax7 ^ reinterpret_cast<uint32_t>(esp6));
    esp9 = esp6 - 4 - 4 - 4;
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 1) {
        *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0xfffff7fd);
        fun_10015e8f(ecx, 2, 0);
        fun_10015d47(ecx, 1, edi10, esi11, ebx12, v8, v13, v14);
        edi15 = *reinterpret_cast<void***>(ecx + 60);
        esi16 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi15) + 0xb4);
        image_base_(esi16, 0, 0, 0x102);
        eax17 = reinterpret_cast<void**>(esi16(edi15, 0, 0, 0x102));
        RedrawWindow(edi15, eax17, 0, 0, 0x102);
        eax18 = fun_10014fa3(ecx, 1, 1, eax17, 0, 0, 0x102);
        eax19 = fun_10015b89(ecx, eax18, 1, eax17, 0, 0, 0x102);
        esp20 = reinterpret_cast<void*>(esp9 - 4 - 4 - 4 + 8 + 4 - 4 - 4 + 4 + 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4 - 4 - 4 + 4 - 4 - 4 - 4 + 4 + 4 - 4 - 4 + 8 + 4);
        if (!*reinterpret_cast<signed char*>(&eax19)) {
            fun_1001461e(ecx, eax17, 0, 0, 0x102);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4);
        }
        edi21 = *reinterpret_cast<void***>(ecx + 72);
        esi22 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi21) + 84);
        image_base_(esi22, eax17, 0, 0, 0x102);
        esi22(edi21, eax17, 0, 0, 0x102);
        esp23 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4 - 4 + 4);
    } else {
        *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) | 3);
        eax24 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) >> 6;
        eax25 = fun_10014fa3(ecx, eax24 & 2, 0, edi10, esi11, ebx12, v8);
        fun_10015b89(ecx, eax25, 0, edi10, esi11, ebx12, v8);
        eax26 = ~(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) >> 7);
        fun_10015e8f(ecx, eax26 & 1, 1);
        esp23 = reinterpret_cast<void*>(esp9 - 4 - 4 - 4 + 4 + 4 - 4 - 4 + 8 + 4 - 4 - 4 - 4 + 8 + 4);
    }
    eax27 = fun_1000a130(reinterpret_cast<unsigned char>(v8) ^ reinterpret_cast<uint32_t>(esp23) + 4 + 4 + 4);
    return eax27;
}

/* (image base) */
int32_t image_base_ = 0x1000a6a7;

/* (image base) */
int32_t image_base_ = 0x1000a944;

void** fun_10012661(void** ecx, int32_t* a2, void* a3);

/* (image base) */
int32_t image_base_ = 0x1000a6c2;

void** fun_100158a2(void** ecx, unsigned char a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t eax5;
    void** esi6;
    void* v7;
    int32_t eax8;
    void** eax9;
    void** eax10;
    void** esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    if (eax5) {
        esi6 = *reinterpret_cast<void***>(ecx + 72);
        v7 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp3) - 12);
        eax8 = reinterpret_cast<int32_t>(image_base_(v7));
        if (eax8 >= 0 && (eax9 = fun_10012661(esi6, reinterpret_cast<uint32_t>(ebp3) - 8, v7), reinterpret_cast<signed char>(eax9) >= reinterpret_cast<signed char>(0))) {
            image_base_(esi6, 0, (static_cast<uint32_t>(a2) ^ 1) + 0x4e30, v7);
        }
        if (!1) {
            eax10 = g0;
            esi11 = *reinterpret_cast<void***>(eax10 + 8);
            image_base_(esi11, 0, v7);
            esi11(esi11, 0, v7);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

void** fun_10014bef(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void*** ebp10;
    uint32_t eax11;
    void** v12;
    void** ecx13;
    void** eax14;
    void** esi15;
    int1_t zf16;
    void** ebp17;
    void** eax18;

    ebp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax11 = g100240c4;
    v12 = reinterpret_cast<void**>(eax11 ^ reinterpret_cast<uint32_t>(ebp10));
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 16) {
        *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0xffffffef);
        ecx13 = *reinterpret_cast<void***>(ecx + 0x94);
        if (ecx13) {
            eax14 = *reinterpret_cast<void***>(ecx13);
            esi15 = *reinterpret_cast<void***>(eax14 + 32);
            ecx13 = esi15;
            image_base_(ecx13);
            esi15(ecx13);
        }
        zf16 = (g100244c0 & 0x100) == 0;
        if (!zf16) {
            fun_10010b65(ecx13, v12, ebp17, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
        }
    }
    eax18 = fun_1000a130(reinterpret_cast<unsigned char>(v12) ^ reinterpret_cast<uint32_t>(ebp10));
    return eax18;
}

int32_t GetSystemMetrics = 0x26218;

void** fun_10015b3e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48);

unsigned char fun_10015664(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int24_t a8);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(0x80);

/* (image base) */
int32_t image_base_ = 0x1000a874;

void fun_1001da0f(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, int16_t a9);

/* (image base) */
int32_t image_base_ = 0x1000a7d1;

/* (image base) */
int32_t image_base_ = 0x1000a8b2;

/* (image base) */
int32_t image_base_ = 0x1000a8bc;

/* (image base) */
int32_t image_base_ = 0x1000b37e;

/* (image base) */
int32_t image_base_ = 0x1000b388;

void** fun_1001571e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45);

/* (image base) */
int32_t image_base_ = 0x1000a8c6;

/* (image base) */
int32_t image_base_ = 0x1000a8d0;

/* (image base) */
int32_t image_base_ = 0x1000a8da;

/* (image base) */
int32_t image_base_ = 0x1000a8e4;

void fun_10014d63(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39) {
    void** v40;
    void** esi41;
    void** edi42;
    void** esi43;
    void** ebx44;
    void** eax45;
    void** eax46;
    void** ebp47;
    unsigned char al48;
    int1_t zf49;
    void** v50;
    void** ecx51;
    void** eax52;
    void*** edx53;
    void** ecx54;
    void** v55;
    void** ecx56;
    void** eax57;
    void** eax58;
    void** eax59;
    void** ecx60;
    int32_t eax61;
    uint16_t ax62;
    void** ecx63;
    void** v64;
    int32_t eax65;
    int32_t eax66;
    void** eax67;
    int32_t eax68;
    int32_t eax69;
    int32_t ebx70;
    int32_t eax71;
    void** ecx72;
    int32_t edi73;
    int32_t eax74;
    void** ecx75;
    int32_t eax76;
    void** ecx77;
    void** ecx78;

    v40 = ecx;
    esi41 = ecx;
    eax45 = reinterpret_cast<void**>(GetSystemMetrics(0, edi42, esi43, ebx44, ecx, v40));
    eax46 = reinterpret_cast<void**>(GetSystemMetrics());
    if (*reinterpret_cast<void***>(esi41 + 0x84) != eax45 || *reinterpret_cast<void***>(esi41 + 0x88) != eax46) {
        if (*reinterpret_cast<void***>(esi41 + 0x84) != eax46 || (*reinterpret_cast<signed char*>(&v40 + 3) = 1, *reinterpret_cast<void***>(esi41 + 0x88) != eax45)) {
            *reinterpret_cast<signed char*>(&v40 + 3) = 0;
        }
        *reinterpret_cast<void***>(esi41 + 0x84) = eax45;
        *reinterpret_cast<void***>(esi41 + 0x88) = eax46;
        fun_10015b3e(esi41, 1, 0, edi42, esi43, ebx44, ecx, v40, ebp47, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
        al48 = fun_10015664(esi41, 1, 0, edi42, esi43, ebx44, ecx, *reinterpret_cast<int24_t*>(&v40));
        zf49 = *reinterpret_cast<signed char*>(&v40 + 3) == 0;
        *reinterpret_cast<unsigned char*>(&v40 + 2) = al48;
        if (zf49 || !al48) {
            v50 = image_base_;
            ecx51 = *reinterpret_cast<void***>(esi41 + 72);
            image_base_(ecx51, v50);
            fun_1001da0f(esi41 + 0x90, v50, 1, 0, edi42, esi43, ebx44, ecx, *reinterpret_cast<int16_t*>(&v40));
            fun_1001da0f(esi41 + 0x8c, v50, 1, 0, edi42, esi43, ebx44, ecx, *reinterpret_cast<int16_t*>(&v40));
        } else {
            eax52 = *reinterpret_cast<void***>(esi41 + 0x90);
            edx53 = reinterpret_cast<void***>(esi41 + 0x8c);
            *reinterpret_cast<void***>(esi41 + 0x90) = *edx53;
            ecx54 = *reinterpret_cast<void***>(esi41 + 72);
            *edx53 = eax52;
            if (!eax52) {
                v50 = image_base_;
                image_base_(ecx54, v50);
            } else {
                v50 = eax52;
                v55 = image_base_;
                image_base_(ecx54, v55, 1, v50);
            }
        }
        ecx56 = *reinterpret_cast<void***>(esi41 + 72);
        eax57 = reinterpret_cast<void**>(image_base_(ecx56, v50));
        if (eax45 != eax57 || (ecx = *reinterpret_cast<void***>(esi41 + 72), eax58 = reinterpret_cast<void**>(image_base_(ecx, v50)), eax46 != eax58)) {
            eax59 = *reinterpret_cast<void***>(esi41 + 64);
            ecx60 = eax59;
            eax61 = reinterpret_cast<int32_t>(image_base_(ecx60, eax45, v50));
            if (eax61 >= 0) {
                ecx60 = eax59;
                image_base_(ecx60, eax46, eax45, v50);
            }
            ax62 = reinterpret_cast<uint16_t>(image_base_(ecx60, "S", eax45, v50));
            ecx63 = *reinterpret_cast<void***>(esi41 + 64);
            v64 = reinterpret_cast<void**>(static_cast<uint32_t>(ax62));
            eax65 = reinterpret_cast<int32_t>(image_base_(ecx63, v64, "S", eax45, v50));
            eax66 = reinterpret_cast<int32_t>(image_base_(eax65, eax45, v64, "S", eax45, v50));
            if (eax66 >= 0) {
                image_base_(eax65, reinterpret_cast<unsigned char>(eax46) + reinterpret_cast<unsigned char>(eax46), eax45, v64, "S", eax45, v50);
            }
            eax67 = *reinterpret_cast<void***>(esi41 + 72);
            eax68 = reinterpret_cast<int32_t>(image_base_(eax67, eax45, eax45, v64, "S", eax45, v50));
            if (eax68 >= 0) {
                image_base_(eax67, eax46, eax45, eax45, v64, "S", eax45, v50);
            }
            ecx = esi41;
            fun_10015d47(ecx, 1, eax45, eax45, v64, "S", eax45, v50);
            if (*reinterpret_cast<signed char*>(&a2) && (*reinterpret_cast<unsigned char*>(&v40 + 2) && !*reinterpret_cast<void***>(esi41 + 0x8c))) {
                ecx = esi41;
                fun_1001571e(ecx, 0, eax45, eax45, v64, "S", eax45, v50, 1, 0, edi42, esi43, ebx44, eax67, v40, ebp47, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29);
            }
        }
    }
    eax69 = reinterpret_cast<int32_t>(GetSystemMetrics(ecx));
    ebx70 = -eax69;
    eax71 = reinterpret_cast<int32_t>(GetSystemMetrics(ecx));
    ecx72 = *reinterpret_cast<void***>(esi41 + 64);
    edi73 = -eax71;
    eax74 = reinterpret_cast<int32_t>(image_base_(ecx72));
    if (ebx70 != eax74 || (ecx75 = *reinterpret_cast<void***>(esi41 + 64), eax76 = reinterpret_cast<int32_t>(image_base_(ecx75)), edi73 != eax76)) {
        ecx77 = *reinterpret_cast<void***>(esi41 + 64);
        image_base_(ecx77, ebx70);
        ecx78 = *reinterpret_cast<void***>(esi41 + 64);
        image_base_(ecx78, edi73, ebx70);
    }
    return;
}

void** fun_10012ec1(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    int32_t* edx5;
    uint32_t ecx6;
    void** eax7;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = *edx5;
    image_base_(esi4);
    esi4(esi4);
    ecx6 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax7 = fun_1000a130(ecx6, ecx6);
    return eax7;
}

void** fun_100149d6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48, void** a49);

void** fun_10014ac5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44);

void** fun_10014933(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void*** ebp46;
    uint32_t eax47;
    void** v48;
    void** eax49;
    void** ebx50;
    void** ebp51;
    void** edi52;
    void** esi53;
    void** eax54;
    void** edi55;
    void** esi56;
    void** eax57;
    void** ecx58;
    void** v59;
    void** eax60;
    void** eax61;

    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax47 = g100240c4;
    v48 = reinterpret_cast<void**>(eax47 ^ reinterpret_cast<uint32_t>(ebp46));
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 30) {
        addr_100149c7_2:
        eax49 = fun_1000a130(reinterpret_cast<unsigned char>(v48) ^ reinterpret_cast<uint32_t>(ebp46));
        return eax49;
    } else {
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 1)) {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x400)) {
                fun_100149d6(ecx, ebx50, v48, ebp51, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
                goto addr_100149c7_2;
            }
        } else {
            edi52 = *reinterpret_cast<void***>(ecx + 76);
            esi53 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi52 + 0x80) + 4);
            image_base_(esi53);
            eax54 = reinterpret_cast<void**>(esi53(edi52 + 0x80));
            eax57 = fun_10014fa3(ecx, 0, edi55, esi56, ebx50, v48, ebp51);
            ecx58 = ecx;
            if (reinterpret_cast<signed char>(eax54) >= reinterpret_cast<signed char>(eax57)) {
                v59 = reinterpret_cast<void**>(0);
                goto addr_10014996_8;
            }
            eax60 = fun_10014fa3(ecx58, 2, edi55, esi56, ebx50, v48, ebp51);
            ecx58 = ecx;
            v59 = reinterpret_cast<void**>(1);
            if (reinterpret_cast<signed char>(eax54) > reinterpret_cast<signed char>(eax60)) {
                eax61 = fun_10014fa3(ecx58, 1, edi55, esi56, ebx50, v48, ebp51);
                if (eax54 == eax61) {
                    fun_1001461e(ecx, edi55, esi56, ebx50, v48);
                    goto addr_100149ad_13;
                }
            } else {
                addr_10014996_8:
                fun_10014ac5(ecx58, v59, edi55, esi56, ebx50, v48, ebp51, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
                goto addr_100149ad_13;
            }
        }
    }
    addr_100149c5_14:
    goto addr_100149c7_2;
    addr_100149ad_13:
    goto addr_100149c5_14;
}

int32_t SetTimer = 0x2663c;

void** fun_1001544f(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41);

void** fun_10014ac5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44) {
    void** edi45;
    void** esi46;
    void** ebx47;
    void** ebp48;
    void** eax49;
    void** v50;
    int1_t zf51;
    int1_t zf52;
    void* eax53;
    void** eax54;
    uint32_t eax55;

    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 1)) {
        *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) | 2);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x100 || (!*reinterpret_cast<unsigned char*>(&a2) || !(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x400))) {
            eax49 = fun_100149d6(ecx, edi45, esi46, ebx47, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
        } else {
            v50 = *reinterpret_cast<void***>(ecx + 48);
            eax49 = reinterpret_cast<void**>(SetTimer(v50, 1, 0x1388, 0));
        }
        zf51 = (g100244c0 & 0x100) == 0;
        if (!zf51) {
            eax49 = fun_10010b65(ecx, edi45, esi46, ebx47, ebp48, __return_address(), a2, a3, a4, a5, a6, a7);
        }
    } else {
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x800)) {
            zf52 = (g100244c0 & 0x100) == 0;
            if (!zf52) {
                fun_10010b65(ecx, edi45, esi46, ebx47, ebp48, __return_address(), a2, a3, a4, a5, a6, a7);
            }
            *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) | 0x800);
        }
        fun_10014bef(ecx, edi45, esi46, ebx47, ebp48, __return_address(), a2, a3, a4);
        fun_10015d47(ecx, 0, edi45, esi46, ebx47, ebp48, __return_address(), a2);
        eax53 = reinterpret_cast<void*>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&a2)));
        eax54 = fun_10014fa3(ecx, reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53), 1, edi45, esi46, ebx47, ebp48);
        eax49 = fun_10015b89(ecx, eax54, 1, edi45, esi46, ebx47, ebp48);
        if (!*reinterpret_cast<signed char*>(&eax49)) {
            *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0xfffffffe);
            if (*reinterpret_cast<unsigned char*>(&a2)) {
                fun_1001544f(ecx, edi45, esi46, ebx47, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36);
            }
            fun_100158a2(ecx, 0);
            eax55 = ~(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) >> 9);
            eax49 = fun_10015e8f(ecx, eax55 & 2, 2);
        }
    }
    return eax49;
}

/* (image base) */
int32_t image_base_ = 0x1000a8a8;

void** fun_10015d47(void** ecx, signed char a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void* ebp9;
    uint32_t eax10;
    void** esi11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** eax16;
    void** v17;
    void** v18;
    void** v19;
    void** eax20;
    void** v21;
    void** v22;
    void** v23;
    void** ecx24;
    uint32_t ecx25;
    void** eax26;

    ebp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax10 = g100240c4;
    if (a2) {
        eax16 = fun_10014fa3(ecx, 0, esi11, v12, v13, v14, v15);
        __asm__("fild dword [ebp-0x24]");
        __asm__("fstp qword [ebp-0x20]");
        eax20 = fun_10014fa3(ecx, 1, esi11, eax16, v17, v18, v19);
        __asm__("fild dword [ebp-0x24]");
        __asm__("fstp qword [ebp-0x18]");
        fun_10014fa3(ecx, 2, esi11, eax20, v21, v22, v23);
        __asm__("fild dword [ebp-0x24]");
        __asm__("fstp qword [ebp-0x10]");
    }
    ecx24 = *reinterpret_cast<void***>(ecx + 64);
    image_base_(ecx24);
    ecx25 = eax10 ^ reinterpret_cast<uint32_t>(ebp9) ^ reinterpret_cast<uint32_t>(ebp9);
    eax26 = fun_1000a130(ecx25, ecx25);
    return eax26;
}

struct s101 {
    void** f0;
    unsigned char f1;
    signed char[2] pad4;
    void** f4;
    signed char[3] pad8;
    void* f8;
    uint32_t f12;
    uint32_t f16;
};

/* (image base) */
int32_t image_base_ = 0x1000b994;

/* (image base) */
int32_t image_base_ = 0x1000b9b2;

/* (image base) */
int32_t image_base_ = 0x1000a8ee;

struct s102 {
    uint32_t f0;
    uint32_t f4;
};

void** fun_10019132(void** ecx, struct s102* a2);

/* (image base) */
int32_t image_base_ = 0x1000b9a8;

/* (image base) */
int32_t image_base_ = 0x1000b99e;

void** fun_1001d267(struct s101* ecx, void** a2, void** a3, unsigned char* a4) {
    void** v5;
    uint32_t ebx6;
    void** dl7;
    void** eax8;
    uint32_t eax9;
    uint32_t eax10;
    void** ecx11;
    uint32_t edi12;
    uint32_t edx13;

    if (a4) {
        *a4 = 0;
    }
    v5 = ecx->f0;
    ebx6 = 1;
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 32) == 1)) {
        addr_1001d334_4:
        dl7 = v5;
    } else {
        eax8 = *reinterpret_cast<void***>(a3 + 16) - 1 - 1;
        if (!eax8) {
            dl7 = v5;
            if (!dl7) 
                goto addr_1001d340_7;
            ecx->f0 = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(a3 + 4) = reinterpret_cast<void**>(1);
            if (a4) {
                *a4 = ecx->f1;
            }
        } else {
            --eax8;
            if (!eax8) {
                *reinterpret_cast<void***>(a3 + 4) = reinterpret_cast<void**>(1);
                if (ecx->f0 == eax8) {
                    eax9 = reinterpret_cast<uint32_t>(image_base_(a2));
                    ecx->f16 = eax9 >> 1 & 1;
                }
                if (!ecx->f16) {
                    eax10 = reinterpret_cast<uint32_t>(image_base_(a2));
                } else {
                    eax10 = reinterpret_cast<uint32_t>(image_base_(a2));
                }
                ecx11 = *reinterpret_cast<void***>(a3);
                fun_10019132(ecx11, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 16);
                if (!ecx->f0) {
                    ecx->f0 = reinterpret_cast<void**>(1);
                    ecx->f12 = eax10;
                    ecx->f4 = reinterpret_cast<void**>(0);
                    ecx->f8 = reinterpret_cast<void*>(0);
                }
                edi12 = ecx->f16;
                if (!edi12) {
                    eax8 = reinterpret_cast<void**>(-static_cast<uint32_t>(reinterpret_cast<unsigned char>(ecx->f4)));
                } else {
                    eax8 = reinterpret_cast<void**>(-static_cast<uint32_t>(ecx->f8));
                }
                edx13 = ecx->f12 - reinterpret_cast<unsigned char>(eax8);
                if (edx13 != eax10) {
                    ecx->f1 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(edx13) > reinterpret_cast<int32_t>(eax10));
                    if (!edi12) {
                        image_base_(a2, edx13);
                        goto addr_1001d334_4;
                    } else {
                        image_base_(a2, edx13);
                        goto addr_1001d334_4;
                    }
                }
            }
        }
    }
    if (!dl7 || ecx->f0) {
        addr_1001d340_7:
        *reinterpret_cast<void***>(&ebx6) = reinterpret_cast<void**>(0);
        goto addr_1001d342_26;
    } else {
        addr_1001d342_26:
        eax8 = *reinterpret_cast<void***>(&ebx6);
        return eax8;
    }
}

/* (image base) */
int32_t image_base_ = 0x1000a8f8;

void** fun_10015b89(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void* ebp8;
    uint32_t eax9;
    void** ecx10;
    void** eax11;
    void** ecx12;
    uint32_t ecx13;
    void** eax14;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax9 = g100240c4;
    ecx10 = *reinterpret_cast<void***>(ecx + 64);
    eax11 = reinterpret_cast<void**>(image_base_(ecx10));
    if (a2 != eax11) {
        ecx12 = *reinterpret_cast<void***>(ecx + 64);
        image_base_(ecx12, reinterpret_cast<uint32_t>(ebp8) - 20, a3);
    }
    ecx13 = eax9 ^ reinterpret_cast<uint32_t>(ebp8) ^ reinterpret_cast<uint32_t>(ebp8);
    eax14 = fun_1000a130(ecx13, ecx13);
    return eax14;
}

uint32_t fun_1000efe5(void** a1, uint32_t a2, void* a3, int32_t a4, int32_t a5, int16_t a6, void** a7, void** a8, void* a9, int32_t a10, void** a11, int32_t a12) {
    uint32_t ecx13;
    void** ecx14;
    uint32_t eax15;

    ecx13 = 0;
    if (!a2 || a2 > 0x7fffffff) {
        ecx13 = 0x80070057;
    }
    if (reinterpret_cast<int32_t>(ecx13) < reinterpret_cast<int32_t>(0)) {
        if (a2) {
            *reinterpret_cast<void***>(a1) = reinterpret_cast<void**>(0);
        }
    } else {
        ecx14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 20);
        eax15 = fun_1000f136(a1, ecx14, a3, ecx14);
        ecx13 = eax15;
    }
    return ecx13;
}

struct s103 {
    signed char[468] pad468;
    int32_t f468;
};

struct s103* g30;

void** fun_10013dc7(int32_t ecx, uint32_t* a2);

uint16_t fun_1001356d(void** ecx) {
    void* ebp2;
    struct s103* ecx3;
    int32_t ecx4;
    void** eax5;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ecx3 = g30;
    ecx4 = ecx3->f468;
    eax5 = fun_10013dc7(ecx4, reinterpret_cast<int32_t>(ebp2) - 4);
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0)) {
        fun_10010167(ecx, "U", reinterpret_cast<int32_t>(ebp2) - 8);
        RegCloseKey(ecx, ecx);
    }
    if (!0) {
    }
    return 0;
}

int32_t NtQueryWnfStateData = 0x2671a;

void** fun_1001373d(void** ecx, void** a2, int32_t a3, void** a4, void** a5, signed char a6, int32_t a7);

void** fun_10012ac6(void** ecx, void* a2, void** a3) {
    void** v4;
    void** ebx5;
    signed char* edx6;
    uint32_t eax7;
    void** esi8;
    void** v9;
    void** eax10;

    v4 = ecx;
    ebx5 = reinterpret_cast<void**>(0);
    *edx6 = 0;
    eax7 = reinterpret_cast<uint32_t>(NtQueryWnfStateData());
    esi8 = reinterpret_cast<void**>(eax7 | 0x10000000);
    if (!__intrinsic() || esi8 == 0xd0000023) {
        if (v4 && !1) {
            v9 = ecx;
            ecx = reinterpret_cast<void**>(__return_address());
            fun_1000de84(ecx, v9);
        }
        fun_1001373d(ecx, __return_address(), 0x1443, "internal\\sdk\\inc\\wil\\Resource.h", 0x8000ffff, 0, "Inconsistent state data size in wnf_query");
        if (v4 && !0) {
            *reinterpret_cast<signed char*>(&ebx5) = 1;
        }
        *edx6 = *reinterpret_cast<signed char*>(&ebx5);
        eax10 = reinterpret_cast<void**>(0);
    } else {
        fun_1000ecea(__return_address(), "internal\\sdk\\inc\\wil\\Resource.h", esi8);
        eax10 = esi8;
    }
    return eax10;
}

uint32_t fun_10014331(void** ecx, int32_t a2, int32_t a3, int16_t* a4, uint32_t a5) {
    uint32_t eax6;

    eax6 = reinterpret_cast<uint32_t>(RegGetValueW());
    if (eax6) {
        *a4 = 0;
    }
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax6 == 0))) {
        eax6 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax6)) | 0x80070000;
    }
    return eax6;
}

void fun_10014f84(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;

    if (*reinterpret_cast<void***>(ecx)) {
        v8 = *reinterpret_cast<void***>(ecx);
        LocalFree(v8);
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0);
    return;
}

void** fun_10018bab(uint32_t* a1);

int32_t GetTokenInformation = 0x26fe6;

void** fun_10018ac3(void** ecx, void** a2, uint32_t* a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void* ebp10;
    void** ebx11;
    void** eax12;
    uint32_t esi13;
    void** eax14;
    void** esi15;
    uint32_t edi16;
    uint32_t v17;
    int32_t eax18;
    int1_t sf19;
    void** eax20;
    uint32_t v21;
    void** eax22;
    uint32_t v23;
    void* v24;
    int32_t eax25;
    void** eax26;

    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebx11 = ecx;
    *a3 = 0;
    if (!ebx11) {
        eax12 = fun_10018bab(reinterpret_cast<int32_t>(ebp10) - 12);
        if (reinterpret_cast<signed char>(eax12) < reinterpret_cast<signed char>(0)) {
            addr_10018ba4_3:
            return eax12;
        } else {
            ebx11 = reinterpret_cast<void**>(0);
        }
    }
    eax14 = fun_10013050(0x800, 0x800, reinterpret_cast<int32_t>(ebp10) + 0xfffffff8, esi13);
    esi15 = eax14;
    if (reinterpret_cast<signed char>(esi15) < reinterpret_cast<signed char>(0)) {
        addr_10018b92_6:
        if (!1) {
            CloseHandle(0);
        }
    } else {
        edi16 = v17;
        eax18 = reinterpret_cast<int32_t>(GetTokenInformation());
        if (eax18) {
            addr_10018b7f_9:
            sf19 = reinterpret_cast<signed char>(esi15) < reinterpret_cast<signed char>(0);
            goto addr_10018b81_10;
        } else {
            eax20 = reinterpret_cast<void**>(GetLastError());
            esi15 = eax20;
            if (!reinterpret_cast<int1_t>(esi15 == 0x7a)) {
                addr_10018b72_12:
                sf19 = reinterpret_cast<signed char>(esi15) < reinterpret_cast<signed char>(0);
                if (reinterpret_cast<uint1_t>(sf19) | reinterpret_cast<uint1_t>(esi15 == 0)) {
                    addr_10018b81_10:
                    if (sf19) {
                        addr_10018b8a_13:
                        LocalFree(edi16);
                        goto addr_10018b91_14;
                    } else {
                        *a3 = edi16;
                        goto addr_10018b91_14;
                    }
                } else {
                    esi15 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi15)) | 0x80070000);
                    goto addr_10018b7f_9;
                }
            } else {
                v21 = edi16;
                LocalFree(v21);
                eax22 = fun_10013050(0x800, 0x800, reinterpret_cast<int32_t>(ebp10) + 0xfffffff8, v21);
                edi16 = v23;
                esi15 = eax22;
                if (reinterpret_cast<signed char>(esi15) < reinterpret_cast<signed char>(0)) 
                    goto addr_10018b8a_13;
                v24 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp10) - 4);
                eax25 = reinterpret_cast<int32_t>(GetTokenInformation(ebx11, 1, edi16, 0x800, v24, v21));
                if (eax25) 
                    goto addr_10018b7f_9; else 
                    goto addr_10018b6a_19;
            }
        }
    }
    eax12 = esi15;
    goto addr_10018ba4_3;
    addr_10018b91_14:
    goto addr_10018b92_6;
    addr_10018b6a_19:
    eax26 = reinterpret_cast<void**>(GetLastError(ebx11, 1, edi16, 0x800, v24, v21));
    esi15 = eax26;
    goto addr_10018b72_12;
}

void** fun_1001d48b(void** ecx, void* a2, void* a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void* ebp12;
    uint32_t eax13;
    int32_t eax14;
    uint32_t eax15;
    uint32_t esi16;
    int1_t sf17;
    void** eax18;
    uint32_t eax19;
    int1_t sf20;
    int32_t edx21;
    uint32_t ecx22;
    void** eax23;

    ebp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax13 = g100240c4;
    eax14 = reinterpret_cast<int32_t>(LoadLibraryExW());
    if (!eax14) {
        eax15 = reinterpret_cast<uint32_t>(GetLastError());
        esi16 = eax15;
        sf17 = reinterpret_cast<int32_t>(esi16) < reinterpret_cast<int32_t>(0);
        if (!(reinterpret_cast<uint1_t>(sf17) | reinterpret_cast<uint1_t>(esi16 == 0))) {
            esi16 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi16)) | 0x80070000;
            sf17 = reinterpret_cast<int32_t>(esi16) < reinterpret_cast<int32_t>(0);
        }
        if (!sf17) {
        }
    } else {
        eax18 = reinterpret_cast<void**>(GetProcAddress(eax14, "GetAutoUpdateNotification"));
        if (!eax18) {
            eax19 = reinterpret_cast<uint32_t>(GetLastError(eax14, "GetAutoUpdateNotification"));
            esi16 = eax19;
            sf20 = reinterpret_cast<int32_t>(esi16) < reinterpret_cast<int32_t>(0);
            if (!(reinterpret_cast<uint1_t>(sf20) | reinterpret_cast<uint1_t>(esi16 == 0))) {
                esi16 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi16)) | 0x80070000;
                sf20 = reinterpret_cast<int32_t>(esi16) < reinterpret_cast<int32_t>(0);
            }
            if (!sf20) {
            }
        } else {
            ecx = eax18;
            image_base_(ecx, 0, edx21, a2, a3, eax14, "GetAutoUpdateNotification");
            eax18(ecx, 0, edx21, a2, a3, eax14, "GetAutoUpdateNotification");
        }
        FreeLibrary(ecx, eax14, eax14, "GetAutoUpdateNotification");
    }
    ecx22 = eax13 ^ reinterpret_cast<uint32_t>(ebp12) ^ reinterpret_cast<uint32_t>(ebp12);
    eax23 = fun_1000a130(ecx22, ecx22);
    return eax23;
}

void** fun_10016342(uint32_t a1) {
    void* ebp2;
    uint32_t eax3;
    void** eax4;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    fun_10010ae0(2, reinterpret_cast<uint32_t>(ebp2) - 36);
    eax4 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax4;
}

void** fun_1001d89d(void** ecx, int32_t a2);

void** fun_1001d1cd(void** ecx) {
    void** eax2;
    void** eax3;
    void** eax4;
    void** esi5;
    void** eax6;

    eax2 = reinterpret_cast<void**>(image_base_());
    if (reinterpret_cast<signed char>(eax2) >= reinterpret_cast<signed char>(0) && ((eax3 = reinterpret_cast<void**>(image_base_(0x30002)), reinterpret_cast<signed char>(eax3) < reinterpret_cast<signed char>(0)) || ((eax4 = reinterpret_cast<void**>(image_base_(0x30002)), esi5 = eax4, reinterpret_cast<signed char>(esi5) < reinterpret_cast<signed char>(0)) || (eax6 = fun_1001d89d(ecx, 0x30002), esi5 = eax6, reinterpret_cast<signed char>(esi5) < reinterpret_cast<signed char>(0))) && (image_base_(0x30002), reinterpret_cast<signed char>(esi5) < reinterpret_cast<signed char>(0)))) {
        image_base_(0x10000000, 0x30002);
    }
    goto 1;
}

struct s104 {
    signed char[44] pad44;
    int32_t f44;
};

struct s104** g10024714;

int32_t fun_100177f6(void* ecx);

void** fun_10017e79() {
    void* ebp1;
    uint32_t eax2;
    int32_t ebx3;
    int32_t eax4;
    int32_t** eax5;
    int32_t esi6;
    int32_t** ecx7;
    int32_t eax8;
    int32_t eax9;
    void* ecx10;
    int32_t eax11;
    void* v12;
    signed char al13;
    struct s104** v14;
    int32_t eax15;
    struct s104** v16;
    int32_t eax17;
    int32_t esi18;
    void** eax19;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = g100240c4;
    ebx3 = 0;
    eax4 = reinterpret_cast<int32_t>(image_base_());
    if (eax4) {
        eax5 = reinterpret_cast<int32_t**>(image_base_());
        esi6 = **eax5;
        image_base_(esi6);
        ecx7 = eax5;
        esi6(ecx7);
    } else {
        eax8 = reinterpret_cast<int32_t>(image_base_());
        ebx3 = eax8;
    }
    if (ebx3 >= 0) {
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx7));
        ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp1) - 16);
        image_base_(ecx10, eax9);
        eax11 = reinterpret_cast<int32_t>(image_base_(ecx10, eax9));
        v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp1) - 12);
        al13 = reinterpret_cast<signed char>(image_base_(ecx10, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9));
        if (al13) {
            g10024714 = v14;
        } else {
            g10024714 = reinterpret_cast<struct s104**>(0);
            eax15 = fun_100177f6(ecx10);
            if (eax15 >= 0) {
                eax17 = reinterpret_cast<int32_t>(image_base_(v16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9));
                if (eax17 < 0) {
                    esi18 = (*v16)->f44;
                    image_base_(esi18, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
                    esi18(v16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
                } else {
                    g10024714 = v16;
                }
            }
        }
        image_base_(reinterpret_cast<uint32_t>(ebp1) - 16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
    }
    eax19 = fun_1000a130(eax2 ^ reinterpret_cast<uint32_t>(ebp1) ^ reinterpret_cast<uint32_t>(ebp1));
    return eax19;
}

struct s105 {
    int32_t f0;
    signed char[260] pad264;
    uint32_t f264;
};

/* (image base) */
int32_t image_base_ = 0x1000af80;

void** fun_1001804c(struct s105* ecx, struct s105* a2);

void** fun_10017860(void** a1, void** a2, void** a3) {
    struct s105** edx4;
    struct s105* eax5;
    void** eax6;
    int32_t edi7;

    *edx4 = reinterpret_cast<struct s105*>(0);
    GetProcessHeap();
    eax5 = reinterpret_cast<struct s105*>(HeapAlloc());
    if (eax5) {
        image_base_();
        eax5->f0 = 0x100013bc;
        eax6 = fun_1001804c(eax5, eax5);
        if (reinterpret_cast<signed char>(eax6) < reinterpret_cast<signed char>(0)) {
            image_base_(eax5, 1);
        } else {
            *edx4 = eax5;
        }
    }
    goto edi7;
}

/* (image base) */
int32_t image_base_ = 0x1000a7db;

/* (image base) */
int32_t image_base_ = 0x1000a7f9;

void** fun_1001b0f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16);

void** fun_10012aaa(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

void** fun_1001277d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12);

void** fun_100127d2(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15);

/* (image base) */
int32_t image_base_ = 0x1000a81a;

/* (image base) */
int32_t image_base_ = 0x1000b3c1;

/* (image base) */
int32_t image_base_ = 0x1000a824;

/* (image base) */
int32_t image_base_ = 0x1000b3f3;

int32_t SystemParametersInfoW = 0x26692;

void fun_10015bf4(void** ecx, signed char a2);

void** fun_1001539b(void** ecx, void** a2);

void** fun_100152e5(void** ecx);

void** fun_100159a9(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44);

void** fun_1001592e(void** ecx);

void fun_10015972(void** ecx);

void fun_1001606c(void** ecx);

void** fun_1001503c(void** ecx, void** a2, void** a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    uint32_t esi7;
    void** ecx8;
    void** esi9;
    void** edi10;
    void** esi11;
    void** ebx12;
    uint16_t ax13;
    void** ecx14;
    void** v15;
    void** eax16;
    void** ecx17;
    uint32_t ecx18;
    uint32_t ecx19;
    void** ecx20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    uint16_t ax28;
    void** ecx29;
    void** v30;
    void** eax31;
    void** eax32;
    uint16_t ax33;
    void** ecx34;
    void** v35;
    void** eax36;
    void** ebx37;
    void** eax38;
    uint16_t ax39;
    void** ecx40;
    void** v41;
    void** eax42;
    void** ebx43;
    void** eax44;
    void** ecx45;
    void** eax46;
    void** eax47;
    uint16_t ax48;
    void** ecx49;
    void** v50;
    void** eax51;
    void** ecx52;
    void** ecx53;
    void** eax54;
    void** esi55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** eax65;
    void** ecx66;
    void** eax67;
    void** esi68;
    void** v69;
    void** v70;
    void** eax71;
    int32_t eax72;
    void** eax73;
    void** eax74;
    void** eax75;
    void** eax76;
    uint32_t ecx77;
    void** eax78;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    esi7 = -reinterpret_cast<unsigned char>(ecx);
    ecx8 = *reinterpret_cast<void***>(ecx + 60);
    esi9 = reinterpret_cast<void**>(esi7 - (esi7 + reinterpret_cast<uint1_t>(esi7 < esi7 + reinterpret_cast<uint1_t>(!!ecx))) & reinterpret_cast<uint32_t>(ecx + 40));
    image_base_(ecx8, esi9, edi10, esi11, ebx12);
    ax13 = reinterpret_cast<uint16_t>(image_base_(ecx8, "S", esi9, edi10, esi11, ebx12));
    ecx14 = *reinterpret_cast<void***>(ecx + 60);
    v15 = reinterpret_cast<void**>(static_cast<uint32_t>(ax13));
    eax16 = reinterpret_cast<void**>(image_base_(ecx14, v15, "S", esi9, edi10, esi11, ebx12));
    ecx17 = *reinterpret_cast<void***>(ecx + 52);
    *reinterpret_cast<void***>(ecx + 80) = eax16;
    ecx18 = *reinterpret_cast<unsigned char*>(&ecx17) & 0x80;
    ecx19 = -ecx18;
    image_base_(eax16, (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    ecx20 = *reinterpret_cast<void***>(ecx + 80);
    fun_1001b0f0(ecx20, 5, (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12, v21, v22, v23, v24, v25, v26, v27);
    ax28 = reinterpret_cast<uint16_t>(image_base_(ecx20, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ecx29 = *reinterpret_cast<void***>(ecx + 60);
    v30 = reinterpret_cast<void**>(static_cast<uint32_t>(ax28));
    eax31 = reinterpret_cast<void**>(image_base_(ecx29, v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    eax32 = fun_10012aaa(eax31, v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    *reinterpret_cast<void***>(ecx + 64) = eax32;
    ax33 = reinterpret_cast<uint16_t>(image_base_(eax31, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ecx34 = *reinterpret_cast<void***>(ecx + 64);
    v35 = reinterpret_cast<void**>(static_cast<uint32_t>(ax33));
    eax36 = reinterpret_cast<void**>(image_base_(ecx34, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ebx37 = reinterpret_cast<void**>(0);
    if (eax36 && (eax38 = fun_1001277d(eax36, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12), !!eax38)) {
        ebx37 = eax36;
    }
    *reinterpret_cast<void***>(ecx + 76) = ebx37;
    image_base_(ebx37, esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    ax39 = reinterpret_cast<uint16_t>(image_base_(ebx37, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ecx40 = *reinterpret_cast<void***>(ecx + 64);
    v41 = reinterpret_cast<void**>(static_cast<uint32_t>(ax39));
    eax42 = reinterpret_cast<void**>(image_base_(ecx40, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ebx43 = reinterpret_cast<void**>(0);
    if (eax42 && (eax44 = fun_100127d2(eax42, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12), !!eax44)) {
        ebx43 = eax42;
    }
    *reinterpret_cast<void***>(ecx + 72) = ebx43;
    fun_1001b0f0(ebx43, 9, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    ecx45 = *reinterpret_cast<void***>(ecx + 72);
    eax46 = reinterpret_cast<void**>(image_base_(ecx45, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    image_base_(ecx45, eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    eax47 = *reinterpret_cast<void***>(ecx + 72);
    *reinterpret_cast<void***>(eax47 + 0x80) = reinterpret_cast<void**>(1);
    ax48 = reinterpret_cast<uint16_t>(image_base_(ecx45, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ecx49 = *reinterpret_cast<void***>(ecx + 60);
    v50 = reinterpret_cast<void**>(static_cast<uint32_t>(ax48));
    eax51 = reinterpret_cast<void**>(image_base_(ecx49, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    ecx52 = *reinterpret_cast<void***>(ecx + 64);
    *reinterpret_cast<void***>(ecx + 68) = eax51;
    image_base_(ecx52, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    ecx53 = *reinterpret_cast<void***>(ecx + 68);
    eax54 = reinterpret_cast<void**>(image_base_(ecx53, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    image_base_(ecx53, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    esi55 = *reinterpret_cast<void***>(ecx + 68);
    fun_1000b8d8(ecx53, reinterpret_cast<uint32_t>(ebp5) + 0xffffff88, 0, 0x74, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12, v56, v57, v58, eax36, v59, v60, v61, v62, v63);
    image_base_(esi55, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    v64 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp5) + 0xffffff88);
    image_base_(esi55, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    eax65 = reinterpret_cast<void**>(image_base_(esi55, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    image_base_(esi55, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    ecx66 = *reinterpret_cast<void***>(ecx + 64);
    eax67 = reinterpret_cast<void**>(image_base_(ecx66, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    image_base_(ecx66, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    esi68 = *reinterpret_cast<void***>(ecx + 64);
    v69 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp5) + 0xffffff88);
    fun_1000b8d8(ecx66, v69, 0, 0x74, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12, ecx66, v69, 0, 0x74, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    image_base_(esi68, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    v70 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp5) + 0xffffff88);
    image_base_(esi68, 0, 1, v70, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    eax71 = reinterpret_cast<void**>(image_base_(esi68, 32, 32, 0, 1, v70, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12));
    image_base_(esi68, eax71, 32, 32, 0, 1, v70, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12);
    eax72 = reinterpret_cast<int32_t>(SystemParametersInfoW());
    if (eax72) {
    }
    fun_10015bf4(ecx, 0);
    eax73 = fun_1001539b(ecx, 66);
    if (reinterpret_cast<signed char>(eax73) >= reinterpret_cast<signed char>(0) && ((eax74 = fun_100152e5(ecx), reinterpret_cast<signed char>(eax74) >= reinterpret_cast<signed char>(0)) && ((eax75 = fun_100159a9(ecx, 66, 12, reinterpret_cast<uint32_t>(ebp5) + 0xffffff78, 0, eax71, 32, 32, 0, 1, v70, eax67, 1, 1, eax65, 32, 32, 0, 1, v64, eax54, 1, 1, 1, v50, "S", eax46, 0x4000, 0x4000, v41, "S", esi9, v35, "v", v30, "S", (ecx19 - (ecx19 + reinterpret_cast<uint1_t>(ecx19 < ecx19 + reinterpret_cast<uint1_t>(!!ecx18))) & 0x4d000000) + 0xb2000000, v15, "S", esi9, edi10, esi11, ebx12, 12), reinterpret_cast<signed char>(eax75) >= reinterpret_cast<signed char>(0)) && (eax76 = fun_1001592e(ecx), reinterpret_cast<signed char>(eax76) >= reinterpret_cast<signed char>(0))))) {
        fun_10015972(ecx);
        fun_1001606c(ecx);
    }
    ecx77 = eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5);
    eax78 = fun_1000a130(ecx77, ecx77);
    return eax78;
}

void** fun_100132fe(void** ecx, void** a2, void** a3, void** a4) {
    struct s100* ecx5;
    void** eax6;

    ecx5 = reinterpret_cast<struct s100*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 12);
    eax6 = fun_10014ba8(ecx5, 0, 0, 0);
    if (!1) {
        eax6 = reinterpret_cast<void**>(FreeLibrary(ecx5, 0, 0, 0));
    }
    return eax6;
}

/* (image base) */
int32_t image_base_ = 0x1000a93a;

void** fun_1001e1ee(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45);

void** fun_10012271(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47);

void** fun_1001571e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void** v46;
    void*** ebp47;
    void** v48;
    uint32_t eax49;
    void** v50;
    void** edi51;
    void** esi52;
    void** ebx53;
    void** ebp54;
    unsigned char al55;
    void** esi56;
    int32_t eax57;
    void** ecx58;
    void** esi59;
    void** edi60;
    void** v61;
    unsigned char al62;
    void** ecx63;
    void** v64;
    unsigned char al65;
    void** v66;
    void** eax67;
    void** eax68;
    void** esi69;
    void** ecx70;
    int32_t eax71;
    void** esi72;
    void** ecx73;
    void** esi74;
    void** ecx75;
    void** eax76;
    void** esi77;
    uint32_t eax78;
    void** v79;
    void** eax80;
    void*** v81;
    void** esi82;
    void** eax83;

    v46 = reinterpret_cast<void**>(__return_address());
    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v48 = ecx;
    eax49 = g100240c4;
    v50 = reinterpret_cast<void**>(eax49 ^ reinterpret_cast<uint32_t>(ebp47));
    al55 = fun_10015664(ecx, edi51, esi52, ebx53, v48, v50, ebp54, *reinterpret_cast<int24_t*>(&v46));
    if (al55 && (!*reinterpret_cast<void***>(ecx + 0x6c) && ((esi56 = ecx + 0x68, !!*reinterpret_cast<void***>(esi56)) || (fun_100136b5(esi56, edi51, esi52, ebx53, v48, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45), eax57 = reinterpret_cast<int32_t>(CoCreateInstance(esi56, 0x10008064, 0, 1, 0x10007954, esi56)), eax57 >= 0)))) {
        ecx58 = reinterpret_cast<void**>(ebp47 + 0xfffffff8);
        v48 = reinterpret_cast<void**>(0);
        fun_100136b5(ecx58, edi51, esi52, ebx53, 0, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
        esi59 = *reinterpret_cast<void***>(ecx + 88);
        edi60 = *reinterpret_cast<void***>(ecx + 100);
        v61 = reinterpret_cast<void**>(ebp47 + 0xfffffff8);
        al62 = fun_10015664(ecx, ecx58, v61, edi51, esi52, ebx53, 0, *reinterpret_cast<int24_t*>(&v50));
        ecx63 = *reinterpret_cast<void***>(ecx + 64);
        v64 = reinterpret_cast<void**>(static_cast<uint32_t>(al62));
        al65 = reinterpret_cast<unsigned char>(image_base_(ecx63, esi59, v64, ecx58, v61));
        v66 = *reinterpret_cast<void***>(ecx + 0x88);
        eax67 = fun_1001e1ee(edi60, v66, static_cast<uint32_t>(al65), esi59, v64, ecx58, v61, edi51, esi52, ebx53, 0, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
        if (reinterpret_cast<signed char>(eax67) >= reinterpret_cast<signed char>(0) && (eax68 = *reinterpret_cast<void***>(ecx + 0x68), esi69 = *reinterpret_cast<void***>(eax68), ecx70 = *reinterpret_cast<void***>(esi69 + 12), image_base_(ecx70, eax68, 0, 0x10007964, 0xff, 0x10000000), eax71 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi69 + 12)(ecx70, eax68, 0, 0x10007964, 0xff, 0x10000000)), eax71 >= 0)) {
            esi72 = ecx + 0x6c;
            fun_100136b5(esi72, eax68, 0, 0x10007964, 0xff, 0x10000000, edi51, esi52, ebx53, 0, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40);
            ecx73 = g0;
            esi74 = *reinterpret_cast<void***>(ecx73);
            image_base_(esi74, 0, 0x10003170, esi72, eax68, 0, 0x10007964, 0xff, 0x10000000);
            esi74(esi74, 0, 0x10003170, esi72, eax68, 0, 0x10007964, 0xff, 0x10000000);
        }
        fun_100136b5(ebp47 + 0xfffffff8, edi51, esi52, ebx53, 0, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    }
    if (*reinterpret_cast<signed char*>(&a2) && ((ecx75 = *reinterpret_cast<void***>(ecx + 0x6c), !!ecx75) && (eax76 = *reinterpret_cast<void***>(ecx75), esi77 = *reinterpret_cast<void***>(eax76 + 12), image_base_(esi77, ecx75, 0x3e8), eax78 = reinterpret_cast<uint32_t>(esi77(esi77, ecx75, 0x3e8)), !eax78))) {
        v79 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v48) & eax78);
        eax80 = fun_10012271(ecx + 0x6c, ebp47 + 0xfffffff8, ecx75, 0x3e8, edi51, esi52, ebx53, v79, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
        if (reinterpret_cast<signed char>(eax80) >= reinterpret_cast<signed char>(0)) {
            v81 = reinterpret_cast<void***>(ecx + 12);
            esi82 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(v79) + 16);
            image_base_(esi82, v79, v81, ecx75, 0x3e8);
            esi82(esi82, v79, v81, ecx75, 0x3e8);
        }
        fun_100136b5(ebp47 + 0xfffffff8, ecx75, 0x3e8, edi51, esi52, ebx53, v79, v50, ebp54, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    eax83 = fun_1000a130(reinterpret_cast<unsigned char>(v50) ^ reinterpret_cast<uint32_t>(ebp47));
    return eax83;
}

uint32_t fun_10014576(void** ecx, int32_t* a2, void** a3, uint32_t a4) {
    int32_t esi5;
    int32_t edx6;
    uint32_t eax7;
    uint32_t ebx8;
    void* edi9;
    uint32_t eax10;
    int32_t edx11;

    esi5 = 0;
    if (!edx6) {
        addr_100145b1_2:
        ecx = ecx - 2;
        eax7 = 0x8007007a;
        --esi5;
    } else {
        ebx8 = a4;
        edi9 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(a3) - reinterpret_cast<unsigned char>(ecx));
        do {
            if (!ebx8) 
                break;
            eax10 = *reinterpret_cast<uint16_t*>(reinterpret_cast<uint32_t>(edi9) + reinterpret_cast<unsigned char>(ecx));
        } while (*reinterpret_cast<void***>(&eax10) && (*reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(&eax10), ecx = ecx + 2, --ebx8, ++esi5, --edx11, !!edx11));
        eax7 = 0;
        if (!edx11) 
            goto addr_100145b1_2;
    }
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    if (a2) {
        *a2 = esi5;
    }
    return eax7;
}

void** fun_100145cd(void** ecx) {
    int32_t edi2;

    fun_1001437c(ecx, 0);
    EnterCriticalSection();
    *reinterpret_cast<void***>(ecx + 68) = reinterpret_cast<void**>(0);
    LeaveCriticalSection();
    goto edi2;
}

int32_t UnhookWinEvent = 0x266d6;

void** g1002466c;

void** fun_10016101(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44);

int32_t UnregisterPowerSettingNotification = 0x26606;

void** fun_10015ab3(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46);

/* (image base) */
int32_t image_base_ = 0x1000a842;

int32_t DestroyWindow = 0x26648;

void** fun_10017c5a(void** ecx, void*** a2);

void** fun_100149d6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48, void** a49) {
    void** ecx50;
    void** v51;
    void** ecx52;
    void* ecx53;
    uint32_t ecx54;
    void** edi55;
    void** esi56;
    void** v57;
    void** eax58;
    void** ecx59;
    void** ecx60;
    void** v61;
    void*** v62;
    void** ecx63;

    ecx50 = *reinterpret_cast<void***>(ecx + 84);
    if (ecx50) {
        fun_10014498(ecx50);
    }
    if (*reinterpret_cast<void***>(ecx + 0xb0)) {
        v51 = *reinterpret_cast<void***>(ecx + 0xb0);
        UnhookWinEvent(v51);
        *reinterpret_cast<void***>(ecx + 0xb0) = reinterpret_cast<void**>(0);
    }
    ecx52 = g1002466c;
    ecx53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx52) - reinterpret_cast<unsigned char>(ecx));
    ecx54 = -reinterpret_cast<uint32_t>(ecx53);
    g1002466c = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g1002466c) & ecx54 - (ecx54 + reinterpret_cast<uint1_t>(ecx54 < ecx54 + reinterpret_cast<uint1_t>(!!ecx53))));
    fun_10016101(ecx, edi55, esi56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41);
    if (*reinterpret_cast<void***>(ecx + 0xb4)) {
        v57 = *reinterpret_cast<void***>(ecx + 0xb4);
        UnregisterPowerSettingNotification(ecx, v57);
        *reinterpret_cast<void***>(ecx + 0xb4) = reinterpret_cast<void**>(0);
    }
    fun_10015ab3(ecx, edi55, esi56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    fun_1001da0f(ecx + 0x8c, edi55, esi56, __return_address(), a2, a3, a4, a5, *reinterpret_cast<int16_t*>(&a6));
    fun_1001da0f(ecx + 0x90, edi55, esi56, __return_address(), a2, a3, a4, a5, *reinterpret_cast<int16_t*>(&a6));
    if (*reinterpret_cast<void***>(ecx + 76)) {
        image_base_(ecx + 40);
        *reinterpret_cast<void***>(ecx + 76) = reinterpret_cast<void**>(0);
    }
    eax58 = fun_100136b5(ecx + 0x68, edi55, esi56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49);
    ecx59 = *reinterpret_cast<void***>(ecx + 100);
    if (ecx59 && (eax58 = fun_100145cd(ecx59), ecx60 = *reinterpret_cast<void***>(ecx + 100), !!ecx60)) {
        *reinterpret_cast<void***>(ecx + 100) = reinterpret_cast<void**>(0);
        eax58 = fun_10013f7b(ecx60, edi55, esi56, __return_address(), a2, a3, a4, a5, a6, a7);
    }
    *reinterpret_cast<void***>(ecx + 64) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 68) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 72) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 80) = reinterpret_cast<void**>(0);
    if (*reinterpret_cast<void***>(ecx + 48)) {
        v61 = *reinterpret_cast<void***>(ecx + 48);
        eax58 = reinterpret_cast<void**>(DestroyWindow(v61));
        *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(0);
    }
    if (*reinterpret_cast<void***>(ecx + 60)) {
        v62 = reinterpret_cast<void***>(ecx + 40);
        image_base_(v62);
        ecx63 = *reinterpret_cast<void***>(ecx + 60);
        eax58 = fun_10017c5a(ecx63, v62);
        *reinterpret_cast<void***>(ecx + 60) = reinterpret_cast<void**>(0);
    }
    return eax58;
}

void** fun_1000c89b(void** ecx, void** a2, void** a3, void** a4);

void** fun_10014fa3(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** edx8;
    void** eax9;
    void** eax10;
    void** ebp11;
    void** eax12;

    edx8 = reinterpret_cast<void**>(0xffffffff);
    eax9 = a2;
    if (!eax9) {
        edx8 = *reinterpret_cast<void***>(ecx + 0x88);
    } else {
        eax10 = eax9 - 1;
        if (!eax10) {
            __asm__("fild dword [ecx+0x88]");
            __asm__("fstp qword [ebp-0x8]");
            __asm__("fld qword [ebp-0x8]");
            __asm__("fmul qword [0x10008518]");
            __asm__("fdiv qword [0x10008520]");
            eax12 = fun_1000c89b(ecx, ecx, ecx, ebp11);
            edx8 = eax12;
        } else {
            if (!(eax10 - 1)) {
                edx8 = reinterpret_cast<void**>(0);
            }
        }
    }
    return edx8;
}

int32_t _ftol2_sse = 0x2720c;

void** fun_1000c89b(void** ecx, void** a2, void** a3, void** a4) {
    goto _ftol2_sse;
}

/* SHCORE.dll:123 */
int32_t SHCORE_dll_123 = 0x8000007b;

void** fun_10014c49(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45);

void** fun_1001461e(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void* esp6;
    uint32_t eax7;
    void** v8;
    void*** esp9;
    int32_t eax10;
    int1_t zf11;
    void** edi12;
    void** esi13;
    void** ebx14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** eax57;
    void** eax58;
    void** eax59;
    void** edi60;
    void** ecx61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** esi106;
    void** ecx107;
    int32_t eax108;
    void*** edi109;
    void** eax110;
    void** esi111;
    void** ecx112;
    int32_t eax113;
    void** eax114;
    void** esi115;
    void** ecx116;
    int32_t eax117;
    void** eax118;
    void** esi119;
    int32_t eax120;
    void** esi121;
    void** edi122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    void** v149;
    void** v150;
    void** v151;
    void** v152;
    void** v153;
    void** eax154;
    void** esi155;
    int32_t eax156;
    void** ecx157;
    void** esi158;
    void** v159;
    void** ecx160;
    int32_t eax161;
    void** edi162;
    void** v163;
    void** v164;
    void** v165;
    void** v166;
    void** v167;
    void** v168;
    void** v169;
    void** v170;
    void** v171;
    void** v172;
    void** v173;
    void** v174;
    void** v175;
    void** v176;
    void** v177;
    void** v178;
    void** v179;
    void** v180;
    void** v181;
    void** v182;
    void** v183;
    void** v184;
    void** v185;
    void** v186;
    void** v187;
    void* esp188;
    void** esi189;
    void** v190;
    void** ecx191;
    int32_t eax192;
    void* esp193;
    void** ecx194;
    void** v195;
    void** eax196;
    void** esi197;
    void** v198;
    int32_t eax199;
    void** edi200;
    void** v201;
    void** v202;
    void** v203;
    void** v204;
    void** v205;
    void** v206;
    void** v207;
    void** v208;
    void** v209;
    void** v210;
    void** v211;
    void** v212;
    void** v213;
    void** v214;
    void** v215;
    void** v216;
    void** v217;
    void** v218;
    void** v219;
    void* esp220;
    void** esi221;
    void** ecx222;
    int32_t eax223;
    void* esp224;
    int32_t esi225;
    void** ecx226;
    void** v227;
    void** eax228;
    void** esi229;
    int32_t v230;
    int32_t eax231;
    void** v232;
    void** v233;
    void** v234;
    void** v235;
    void** v236;
    void** v237;
    void** v238;
    void** v239;
    void** v240;
    void** v241;
    void** v242;
    void** v243;
    void** v244;
    void** v245;
    void** v246;
    void** v247;
    void** v248;
    void** v249;
    void** v250;
    void** v251;
    void** v252;
    void** v253;
    void** v254;
    void** eax255;
    void* v256;
    void** esi257;
    int32_t eax258;
    void** eax259;
    void** esi260;
    void** ecx261;
    int32_t eax262;
    void** v263;
    void** v264;
    void** v265;
    void** v266;
    void** v267;
    void** v268;
    void** v269;
    void** v270;
    void** v271;
    void** v272;
    void** v273;
    void** v274;
    void** v275;
    void** v276;
    void** v277;
    void** v278;
    void** v279;
    void** v280;
    void** v281;
    void** v282;
    void** v283;
    void** v284;
    uint32_t ecx285;
    void** eax286;

    esp6 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 44);
    eax7 = g100240c4;
    v8 = reinterpret_cast<void**>(eax7 ^ reinterpret_cast<uint32_t>(esp6));
    esp9 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) - 4 - 4 - 4);
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 16) && (eax10 = reinterpret_cast<int32_t>(SHCORE_dll_123("S", "D", 0)), esp9 = esp9 - 4 - 4 - 4 - 4 + 4, !eax10)) {
        zf11 = (g100244c0 & 0x100) == 0;
        if (!zf11) {
            fun_10010b65(ecx, "S", "D", 0, edi12, esi13, ebx14, v15, v16, v17, v18, v19);
            esp9 = esp9 - 4 + 4;
        }
        eax57 = fun_10014c49(ecx, "S", "D", 0, edi12, esi13, ebx14, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v8, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56);
        esp9 = esp9 - 4 + 4;
        if (reinterpret_cast<signed char>(eax57) >= reinterpret_cast<signed char>(0) && ((eax58 = fun_10014fa3(ecx, 1, "S", "D", 0, edi12, esi13), eax59 = fun_1000c89b(ecx, "S", "D", 0), edi60 = *reinterpret_cast<void***>(ecx + 0x94), ecx61 = ecx + 0xa0, v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax58) - reinterpret_cast<unsigned char>(eax59)), fun_100136b5(ecx61, "S", "D", 0, edi12, esi13, ebx14, v62, v63, eax58, v64, v65, v66, v67, v68, v69, v70, v8, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104), v105 = ecx + 0xa0, esi106 = *reinterpret_cast<void***>(edi60), ecx107 = *reinterpret_cast<void***>(esi106 + 16), image_base_(edi60, ecx61, ecx61, v105, "S", "D", 0), eax108 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi106 + 16)(edi60, ecx61, ecx61, v105, "S", "D", 0)), esp9 = esp9 - 4 - 4 + 4 + 4 - 4 + 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4, eax108 >= 0) && ((edi109 = reinterpret_cast<void***>(ecx + 0xa0), eax110 = *edi109, esi111 = *reinterpret_cast<void***>(eax110), ecx112 = *reinterpret_cast<void***>(esi111 + 76), image_base_(eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0), eax113 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi111 + 76)(eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0)), esp9 = esp9 - 4 - 4 - 4 - 4 + 4 - 4 + 4, eax113 >= 0) && ((eax114 = *edi109, esi115 = *reinterpret_cast<void***>(eax114), ecx116 = *reinterpret_cast<void***>(esi115 + 84), image_base_(ecx116, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0), eax117 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi115 + 84)(ecx116, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0)), esp9 = esp9 - 4 - 4 - 4 - 4 + 4 - 4 + 4, eax117 >= 0) && ((eax118 = *reinterpret_cast<void***>(ecx + 0x94), esi119 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax118) + 32), image_base_(esi119, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0), eax120 = reinterpret_cast<int32_t>(esi119(esi119, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0)), esp9 = esp9 - 4 - 4 + 4 - 4 + 4, eax120 >= 0) && ((esi121 = *reinterpret_cast<void***>(ecx + 0x94), edi122 = ecx + 0xa4, fun_100136b5(edi122, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0, edi12, esi13, ebx14, v62, v123, eax58, v124, v125, v126, v127, v128, v129, v130, v8, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152, v153), eax154 = *reinterpret_cast<void***>(esi121), esi155 = *reinterpret_cast<void***>(eax154 + 24), image_base_(esi155, esi121, edi122, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0), eax156 = reinterpret_cast<int32_t>(esi155(esi155, esi121, edi122, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0)), esp9 = esp9 - 4 + 4 - 4 - 4 - 4 + 4 - 4 + 4, eax156 >= 0) && (ecx157 = *reinterpret_cast<void***>(edi122), esi158 = *reinterpret_cast<void***>(ecx157), v159 = ecx + 20, ecx160 = *reinterpret_cast<void***>(esi158 + 80), image_base_(ecx160, ecx157, v159, 0, 0, esi121, edi122, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0), eax161 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi158 + 80)(ecx160, ecx157, v159, 0, 0, esi121, edi122, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0)), esp9 = esp9 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4, eax161 >= 0))))))) {
            edi162 = *reinterpret_cast<void***>(ecx + 0x9c);
            fun_100136b5(esp9 + 20, ecx157, v159, 0, 0, esi121, 0, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0, edi12, esi13, ebx14, v62, v163, eax58, v164, v165, v166, v167, v168, v169, v170, v8, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180, v181, v182, v183, v184, v185, v186, v187);
            esp188 = reinterpret_cast<void*>(esp9 - 4 + 4);
            __asm__("fld1 ");
            esi189 = *reinterpret_cast<void***>(edi162);
            v190 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp188) + 20);
            ecx191 = *reinterpret_cast<void***>(esi189 + 80);
            __asm__("fstp qword [esp+0x28]");
            __asm__("fld qword [0x10008508]");
            __asm__("fstp qword [esp+0x20]");
            __asm__("fldz ");
            __asm__("fstp qword [esp+0x18]");
            __asm__("fld qword [0x10008500]");
            __asm__("fstp qword [esp+0x10]");
            __asm__("fld qword [esp+0x4c]");
            __asm__("fstp qword [esp+0x8]");
            __asm__("fld qword [0x10008510]");
            __asm__("fstp qword [esp]");
            image_base_(ecx191, edi162);
            eax192 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi189 + 80)(ecx191, edi162));
            esp193 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp188) - 4 - 48 - 4 - 4 + 4 - 4 + 4);
            if (eax192 >= 0 && (ecx194 = *reinterpret_cast<void***>(ecx + 0xa4), v195 = *reinterpret_cast<void***>(ecx + 0xa0), eax196 = *reinterpret_cast<void***>(ecx194), esi197 = *reinterpret_cast<void***>(eax196 + 12), image_base_(esi197, ecx194, v195, v198, edi162), eax199 = reinterpret_cast<int32_t>(esi197(esi197, ecx194, v195, v198, edi162)), esp193 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp193) - 4 - 4 - 4 - 4 + 4 - 4 + 4), eax199 >= 0)) {
                edi200 = *reinterpret_cast<void***>(ecx + 0x9c);
                fun_100136b5(reinterpret_cast<uint32_t>(esp193) + 16, ecx194, v195, v198, edi162, 0, v201, v202, v203, v204, v205, v206, v207, v208, v209, v210, v211, v190, ecx157, v159, 0, 0, esi121, 0, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0, edi12, esi13, ebx14, v62, v212, eax58, v213, v214, v215, v216, v217, v218, v219, v8);
                esp220 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp193) - 4 + 4);
                __asm__("fld1 ");
                esi221 = *reinterpret_cast<void***>(edi200);
                ecx222 = *reinterpret_cast<void***>(esi221 + 80);
                __asm__("fstp qword [esp+0x28]");
                __asm__("fld qword [0x10008508]");
                __asm__("fstp qword [esp+0x20]");
                __asm__("fldz ");
                __asm__("fstp qword [esp+0x18]");
                __asm__("fld qword [0x10008500]");
                __asm__("fstp qword [esp+0x10]");
                __asm__("fld qword [esp+0x54]");
                __asm__("fstp qword [esp+0x8]");
                __asm__("fld qword [0x10008510]");
                __asm__("fstp qword [esp]");
                image_base_(ecx222, edi200);
                eax223 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi221 + 80)(ecx222, edi200));
                esp224 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp220) - 4 - 48 - 4 - 4 + 4 - 4 + 4);
                esi225 = eax223;
                if (esi225 >= 0) {
                    ecx226 = *reinterpret_cast<void***>(ecx + 0xa4);
                    v227 = *reinterpret_cast<void***>(ecx + 0xa0);
                    eax228 = *reinterpret_cast<void***>(ecx226);
                    esi229 = *reinterpret_cast<void***>(eax228 + 12);
                    image_base_(esi229, ecx226, v227, v230, edi200);
                    eax231 = reinterpret_cast<int32_t>(esi229(esi229, ecx226, v227, v230, edi200));
                    esp224 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp224) - 4 - 4 - 4 - 4 + 4 - 4 + 4);
                    esi225 = eax231;
                }
                fun_100136b5(reinterpret_cast<uint32_t>(esp224) + 16, edi200, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, reinterpret_cast<uint32_t>(esp220) + 16, ecx194, v195, v198, edi162, 0, v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v190, ecx157, v159, 0, 0, esi121, 0, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0);
                esp193 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp224) - 4 + 4);
                if (esi225 >= 0 && ((eax255 = *reinterpret_cast<void***>(ecx + 0x98), v256 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp193) + 40), esi257 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax255) + 32), image_base_(eax255, v256, edi200), eax258 = reinterpret_cast<int32_t>(esi257(eax255, v256, edi200)), esp193 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp193) - 4 - 4 - 4 + 4 - 4 + 4), eax258 >= 0) && (eax259 = *reinterpret_cast<void***>(ecx + 0xa4), esi260 = *reinterpret_cast<void***>(eax259), ecx261 = *reinterpret_cast<void***>(esi260 + 48), image_base_(ecx261, eax259, esi257, esi257, 0, eax255, v256, edi200), eax262 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi260 + 48)(ecx261, eax259, esi257, esi257, 0, eax255, v256, edi200)), esp193 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp193) - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 4), eax262 >= 0))) {
                    *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) | 16);
                }
            }
            fun_100136b5(reinterpret_cast<uint32_t>(esp193) + 20, edi162, 0, v263, v264, v265, v266, v267, v268, v269, v270, v271, v272, v273, v190, ecx157, v159, 0, 0, esi121, 0, eax118, eax114, ecx112, ecx112, eax110, ecx107, ecx107, edi60, ecx61, ecx61, v105, "S", "D", 0, edi12, esi13, ebx14, v62, v274, eax58, v275, v276, v277, v278, v279, v280, v281, v8, v282, v283, v284);
            esp9 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp193) - 4 + 4);
        }
    }
    ecx285 = reinterpret_cast<unsigned char>(v8) ^ reinterpret_cast<uint32_t>(esp9 + 4 + 4 + 4);
    eax286 = fun_1000a130(ecx285, ecx285);
    return eax286;
}

void** fun_10015ab3(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** ebx50;
    void** edx51;
    void** eax52;
    void** esi53;
    void** edi54;
    void** esi55;
    void** ebx56;
    void** ebp57;
    void** ebx58;
    void** edx59;
    void** esi60;
    void** v61;
    void** ecx62;
    void** eax63;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    ebx50 = ecx + 0x98;
    edx51 = *reinterpret_cast<void***>(ebx50);
    if (edx51) {
        eax52 = *reinterpret_cast<void***>(edx51);
        esi53 = *reinterpret_cast<void***>(eax52 + 16);
        image_base_(esi53, edx51, 0);
        esi53(esi53, edx51, 0);
        fun_100136b5(ebx50, edx51, 0, edi54, esi55, ebx56, v49, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
    }
    ebx58 = ecx + 0xa4;
    edx59 = *reinterpret_cast<void***>(ebx58);
    if (edx59) {
        esi60 = *reinterpret_cast<void***>(edx59);
        v61 = ecx + 20;
        ecx62 = *reinterpret_cast<void***>(esi60 + 80);
        image_base_(ecx62, edx59, v61, 0, 0);
        *reinterpret_cast<void***>(esi60 + 80)(ecx62, edx59, v61, 0, 0);
        fun_100136b5(ebx58, edx59, v61, 0, 0, edi54, esi55, ebx56, v49, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    }
    fun_100136b5(ecx + 0x94, edi54, esi55, ebx56, v49, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    fun_100136b5(ecx + 0x9c, edi54, esi55, ebx56, v49, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax63 = fun_1000a130(reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47));
    return eax63;
}

/* (image base) */
int32_t image_base_ = 0x1000a7c7;

/* (image base) */
int32_t image_base_ = 0x1000b374;

void fun_1001da0f(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, int16_t a9) {
    void** edx10;

    if (*ecx) {
        image_base_();
        *ecx = reinterpret_cast<void**>(0);
    }
    *ecx = edx10;
    if (!edx10) {
        return;
    } else {
        goto image_base_;
    }
}

/* (image base) */
int32_t image_base_ = 0x1000aea2;

void** fun_10017c5a(void** ecx, void*** a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t ecx5;
    int32_t edi6;
    int32_t esi7;
    void** eax8;
    void** esi9;
    uint32_t ecx10;
    void** eax11;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    ecx5 = *reinterpret_cast<int32_t*>(ecx + 0x108);
    image_base_(ecx5, edi6, esi7);
    eax8 = *reinterpret_cast<void***>(ecx);
    esi9 = *reinterpret_cast<void***>(eax8 + 0xb4);
    image_base_(esi9);
    esi9(ecx);
    SetTimer(ecx);
    ecx10 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax11 = fun_1000a130(ecx10, ecx10);
    return eax11;
}

void** fun_10013414(void*** ecx);

int32_t g100079f8 = 0xf810121;

int32_t g100079f4 = 0xa3bc1035;

int32_t RtlPublishWnfStateData = 0x26658;

void** fun_10015f50(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37);

void** fun_1001544f(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41) {
    void*** ebp42;
    uint32_t eax43;
    void** v44;
    void** edi45;
    void** v46;
    signed char bl47;
    void** eax48;
    unsigned char bh49;
    void** v50;
    void** edi51;
    void** esi52;
    void** ebx53;
    void** v54;
    void** v55;
    void** ebp56;
    void** eax57;
    void** v58;
    void** v59;
    void** v60;
    void** esi61;
    void** ecx62;
    int32_t eax63;
    void** v64;
    void** ecx65;
    void** esi66;
    int32_t eax67;
    void** v68;
    void** ecx69;
    void** esi70;
    int32_t eax71;
    void** v72;
    void** v73;
    void** esi74;
    void** ecx75;
    int32_t eax76;
    void** eax77;
    void** esi78;
    void** esi79;
    void** v80;
    void** ecx81;
    int32_t eax82;
    void** ecx83;
    void** esi84;
    int32_t eax85;
    void** ecx86;
    void** esi87;
    int32_t eax88;
    void** eax89;
    void** esi90;
    int32_t v91;
    int32_t v92;
    uint32_t ecx93;
    void** eax94;

    ebp42 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax43 = g100240c4;
    v44 = reinterpret_cast<void**>(eax43 ^ reinterpret_cast<uint32_t>(ebp42));
    edi45 = ecx;
    *reinterpret_cast<signed char*>(&v46 + 1) = 0;
    bl47 = 1;
    eax48 = fun_100136ef(ecx);
    bh49 = *reinterpret_cast<unsigned char*>(&eax48);
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi45 + 52)) & 0x80) {
        v50 = reinterpret_cast<void**>(0);
        fun_100136b5(ebp42 + 0xfffffff0, edi51, esi52, ebx53, v54, v55, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41);
        eax57 = fun_10013414(ebp42 + 0xfffffff0);
        if (reinterpret_cast<signed char>(eax57) >= reinterpret_cast<signed char>(0) && (fun_100136b5(ebp42 + 0xfffffff4, edi51, esi52, ebx53, v58, v59, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41), v60 = reinterpret_cast<void**>(ebp42 + 0xfffffff4), esi61 = g0, ecx62 = *reinterpret_cast<void***>(esi61), image_base_(ecx62, 0, 0x10007914, v60), eax63 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi61)(ecx62, 0, 0x10007914, v60)), eax63 >= 0)) {
            *reinterpret_cast<signed char*>(&v46 + 3) = 0;
            v64 = reinterpret_cast<void**>(ebp42 + 0xfffffffb);
            ecx65 = g0;
            esi66 = *reinterpret_cast<void***>(ecx65 + 76);
            image_base_(esi66, 0, v64, 0, 0x10007914, v60);
            eax67 = reinterpret_cast<int32_t>(esi66(esi66, 0, v64, 0, 0x10007914, v60));
            if (eax67 >= 0) {
                bh49 = 0;
            }
            *reinterpret_cast<signed char*>(&v46 + 2) = 0;
            v68 = reinterpret_cast<void**>(ebp42 + 0xfffffffa);
            ecx69 = g0;
            esi70 = *reinterpret_cast<void***>(ecx69 + 44);
            image_base_(esi70, 0, v68, 0, v64, 0, 0x10007914, v60);
            eax71 = reinterpret_cast<int32_t>(esi70(esi70, 0, v68, 0, v64, 0, 0x10007914, v60));
            if (eax71 >= 0) {
                if (1) {
                    bl47 = 0;
                    fun_100136b5(ebp42 + 0xffffffe8, 0, v68, 0, v64, 0, 0x10007914, v60, edi51, esi52, ebx53, 0, v72, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
                    v73 = reinterpret_cast<void**>(ebp42 + 0xffffffe8);
                    esi74 = g0;
                    ecx75 = *reinterpret_cast<void***>(esi74);
                    image_base_(ecx75, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60);
                    eax76 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi74)(ecx75, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60));
                    if (eax76 >= 0) {
                        eax77 = *reinterpret_cast<void***>(edi45);
                        esi78 = *reinterpret_cast<void***>(eax77 + 4);
                        image_base_(esi78, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60);
                        esi78(esi78, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60);
                        fun_100136b5(ebp42 + 0xffffffec, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60, edi51, esi52, ebx53, 0, 0, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
                        esi79 = *reinterpret_cast<void***>(edi45);
                        v80 = reinterpret_cast<void**>(ebp42 + 0xffffffec);
                        ecx81 = *reinterpret_cast<void***>(esi79);
                        image_base_(ecx81, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60);
                        eax82 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi79)(ecx81, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60));
                        if (eax82 >= 0 && ((ecx83 = g0, esi84 = *reinterpret_cast<void***>(ecx83 + 16), image_base_(esi84, 0, 0, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60), eax85 = reinterpret_cast<int32_t>(esi84(esi84, 0, 0, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60)), eax85 >= 0) && (ecx86 = g0, esi87 = *reinterpret_cast<void***>(ecx86 + 20), image_base_(esi87, 0, 0, 0, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60), eax88 = reinterpret_cast<int32_t>(esi87(esi87, 0, 0, 0, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60)), eax88 >= 0))) {
                            *reinterpret_cast<signed char*>(&v46 + 1) = 1;
                        }
                        fun_100136b5(ebp42 + 0xffffffec, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60, edi51, esi52, ebx53, 0, 0, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27);
                        eax89 = *reinterpret_cast<void***>(edi45);
                        esi90 = *reinterpret_cast<void***>(eax89 + 8);
                        image_base_(esi90, edi45, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60);
                        esi90(esi90, edi45, edi45, 0x10002fc4, v80, edi45, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60);
                    }
                    fun_100136b5(ebp42 + 0xffffffe8, 0, 0x10007924, v73, 0, v68, 0, v64, 0, 0x10007914, v60, edi51, esi52, ebx53, 0, 0, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31);
                } else {
                    bl47 = 1;
                }
            }
        }
        fun_100136b5(ebp42 + 0xfffffff4, edi51, esi52, ebx53, 0, 0, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41);
        ecx = reinterpret_cast<void**>(ebp42 + 0xfffffff0);
        eax48 = fun_100136b5(ecx, edi51, esi52, ebx53, 0, 0, 0, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41);
    }
    if ((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi45 + 52)) & 0x100 || reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi45 + 52)) & 0x80 && bl47) && ((v50 = reinterpret_cast<void**>(1), v91 = g100079f8, v92 = g100079f4, eax48 = reinterpret_cast<void**>(RtlPublishWnfStateData(ecx, v92, v91, 0, ebp42 + 0xfffffff0, 4, 0)), reinterpret_cast<signed char>(eax48) >= reinterpret_cast<signed char>(0)) && !bh49)) {
        *reinterpret_cast<void***>(edi45 + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi45 + 52)) | 0x400);
    }
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi45 + 52)) & 0x400) && !*reinterpret_cast<signed char*>(&v46 + 1)) {
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi45 + 52)) & 0x80) || bl47 && !bh49) {
            *reinterpret_cast<unsigned char*>(&eax48) = 0;
        } else {
            *reinterpret_cast<unsigned char*>(&eax48) = 1;
        }
        fun_10015f50(edi45, eax48, edi51, esi52, ebx53, 0, 0, v50, 0, v46, v44, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
    }
    ecx93 = reinterpret_cast<unsigned char>(v44) ^ reinterpret_cast<uint32_t>(ebp42);
    eax94 = fun_1000a130(ecx93, ecx93);
    return eax94;
}

void fun_10014f3c(struct s100* ecx);

void** fun_10014ba8(struct s100* ecx, int32_t a2, int32_t a3, int32_t a4) {
    void* ebp5;
    uint32_t eax6;
    int32_t esi7;
    void** eax8;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    fun_10014f3c(ecx);
    esi7 = ecx->f0;
    if (esi7) {
        image_base_(esi7, a2);
        esi7(esi7, a2);
    }
    eax8 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax8;
}

void** fun_100122b8(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47);

struct s106 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
    int32_t f8;
    int32_t f12;
    int32_t f16;
    int32_t f20;
    int32_t f24;
    int32_t f28;
    int32_t f32;
    int32_t f36;
};

void** fun_10014c49(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void*** ebp46;
    void** v47;
    uint32_t eax48;
    void** v49;
    void** ebx50;
    void** esi51;
    void** edi52;
    void** esi53;
    void** ebx54;
    void** ebp55;
    void** eax56;
    void** esi57;
    void** eax58;
    void** eax59;
    void** eax60;
    void** esi61;
    void*** ebx62;
    void** eax63;
    void** ecx64;
    void** esi65;
    void** eax66;
    void** ecx67;
    struct s106* v68;
    void** esi69;
    void** eax70;
    void** eax71;

    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v47 = ecx;
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp46));
    ebx50 = ecx + 0x9c;
    if (!*reinterpret_cast<void***>(ebx50)) {
        esi51 = ecx + 0x94;
        fun_100136b5(esi51, edi52, esi53, ebx54, v47, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
        eax56 = reinterpret_cast<void**>(CoCreateInstance(esi51, 0x100081d8, 0, 1, 0x10007994, esi51));
        if (reinterpret_cast<signed char>(eax56) < reinterpret_cast<signed char>(0) || ((esi57 = ecx + 0x98, fun_100136b5(esi57, 0x100081d8, 0, 1, 0x10007994, esi51, edi52, esi53, ebx54, v47, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40), eax58 = reinterpret_cast<void**>(CoCreateInstance(esi57, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51)), reinterpret_cast<signed char>(eax58) < reinterpret_cast<signed char>(0)) || (fun_100136b5(ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51, edi52, esi53, ebx54, v47, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35), eax59 = reinterpret_cast<void**>(CoCreateInstance(ebx50, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51)), reinterpret_cast<signed char>(eax59) < reinterpret_cast<signed char>(0)))) {
            addr_10014d49_3:
            fun_10015ab3(ecx, 0x100081d8, 0, 1, 0x10007994, esi51, edi52, esi53, ebx54, v47, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
        } else {
            v47 = reinterpret_cast<void**>(0);
            eax60 = fun_100122b8(ecx + 0x94, ebp46 + 0xfffffff8, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51, edi52, esi53, ebx54, 0, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
            esi61 = eax60;
            if (reinterpret_cast<signed char>(esi61) >= reinterpret_cast<signed char>(0) && (ebx62 = reinterpret_cast<void***>(ecx + 0x98), eax63 = *ebx62, ecx64 = *reinterpret_cast<void***>(eax63), esi65 = *reinterpret_cast<void***>(ecx64 + 12), image_base_(esi65, eax63, 0, 1, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51), eax66 = reinterpret_cast<void**>(esi65(esi65, eax63, 0, 1, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51)), esi61 = eax66, reinterpret_cast<signed char>(esi61) >= reinterpret_cast<signed char>(0))) {
                ecx67 = *ebx62;
                v68 = reinterpret_cast<struct s106*>(ecx + 16);
                esi69 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx67) + 16);
                image_base_(esi69, ecx67, v68, eax63, 0, 1, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51);
                eax70 = reinterpret_cast<void**>(esi69(esi69, ecx67, v68, eax63, 0, 1, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51));
                esi61 = eax70;
            }
            fun_100136b5(ebp46 + 0xfffffff8, 0x100081b8, 0, 1, 0x10007974, ebx50, 0x100081c8, 0, 1, 0x10007984, esi57, 0x100081d8, 0, 1, 0x10007994, esi51, edi52, esi53, ebx54, 0, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
            if (reinterpret_cast<signed char>(esi61) < reinterpret_cast<signed char>(0)) 
                goto addr_10014d49_3;
        }
    }
    eax71 = fun_1000a130(reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp46));
    return eax71;
}

void** fun_100122b8(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47) {
    void*** ebp48;
    uint32_t eax49;
    void** v50;
    void** edi51;
    void** esi52;
    void** ebp53;
    void** eax54;
    void** esi55;
    uint32_t ecx56;
    void** eax57;

    ebp48 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax49 = g100240c4;
    v50 = reinterpret_cast<void**>(eax49 ^ reinterpret_cast<uint32_t>(ebp48));
    fun_100136b5(a2, edi51, esi52, v50, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
    eax54 = *ecx;
    esi55 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax54));
    image_base_(esi55);
    esi55(esi55);
    ecx56 = reinterpret_cast<unsigned char>(v50) ^ reinterpret_cast<uint32_t>(ebp48);
    eax57 = fun_1000a130(ecx56, ecx56);
    return eax57;
}

void fun_1001437c(void** ecx, void** a2) {
    int32_t esi3;

    EnterCriticalSection();
    *reinterpret_cast<void***>(ecx + 56) = a2;
    LeaveCriticalSection();
    goto esi3;
}

struct s107 {
    signed char[40] pad40;
    int32_t f40;
};

/* (image base) */
int32_t image_base_ = 0x1000a976;

void** fun_1001277d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void* ebp13;
    uint32_t eax14;
    void** esi15;
    struct s107** eax16;
    struct s107* ecx17;
    int32_t esi18;
    uint32_t ecx19;
    void** eax20;

    ebp13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax14 = g100240c4;
    esi15 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 0x8c);
    image_base_(esi15);
    eax16 = reinterpret_cast<struct s107**>(esi15(ecx));
    image_base_(ecx);
    ecx17 = *eax16;
    esi18 = ecx17->f40;
    image_base_(esi18);
    esi18(eax16);
    ecx19 = eax14 ^ reinterpret_cast<uint32_t>(ebp13) ^ reinterpret_cast<uint32_t>(ebp13);
    eax20 = fun_1000a130(ecx19, ecx19);
    return eax20;
}

struct s108 {
    signed char[40] pad40;
    int32_t f40;
};

void** fun_100127d2(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15) {
    void* ebp16;
    uint32_t eax17;
    void** esi18;
    struct s108** eax19;
    int32_t esi20;
    uint32_t ecx21;
    void** eax22;

    ebp16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax17 = g100240c4;
    esi18 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 0x8c);
    image_base_(esi18);
    eax19 = reinterpret_cast<struct s108**>(esi18(ecx));
    esi20 = (*eax19)->f40;
    image_base_(esi20);
    esi20(eax19);
    ecx21 = eax17 ^ reinterpret_cast<uint32_t>(ebp16) ^ reinterpret_cast<uint32_t>(ebp16);
    eax22 = fun_1000a130(ecx21, ecx21);
    return eax22;
}

/* (image base) */
int32_t image_base_ = 0x1000a860;

/* (image base) */
int32_t image_base_ = 0x1000a810;

/* (image base) */
int32_t image_base_ = 0x1000a894;

/* (image base) */
int32_t image_base_ = 0x1000a89e;

/* (image base) */
int32_t image_base_ = 0x1000a84c;

/* (image base) */
int32_t image_base_ = 0x1000a86a;

/* (image base) */
int32_t image_base_ = 0x1000a88a;

void fun_10015bf4(void** ecx, signed char a2) {
    uint32_t eax3;
    int32_t esi4;
    int32_t esi5;
    uint16_t ax6;
    void** ecx7;
    uint32_t v8;
    int32_t eax9;
    uint16_t ax10;
    void** ecx11;
    uint32_t v12;
    int32_t eax13;
    uint16_t ax14;
    void** ecx15;
    uint32_t v16;
    int32_t eax17;
    int32_t v18;
    void** ecx19;
    void** ecx20;
    uint16_t ax21;
    void** ecx22;
    uint32_t v23;
    int32_t eax24;
    uint16_t ax25;
    void** ecx26;
    uint32_t v27;
    int32_t eax28;
    uint16_t ax29;
    void** ecx30;
    uint32_t v31;
    int32_t eax32;
    void** ecx33;
    void** ecx34;
    void** ecx35;

    eax3 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) >> 6 & 1;
    if (*reinterpret_cast<signed char*>(&eax3) != a2) {
        if (!a2) {
            esi4 = image_base_;
            *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0xffffffbf);
            ax6 = reinterpret_cast<uint16_t>(image_base_("S", esi4, esi5));
            ecx7 = *reinterpret_cast<void***>(ecx + 64);
            v8 = ax6;
            eax9 = reinterpret_cast<int32_t>(image_base_(ecx7, v8, "S", esi4, esi5));
            image_base_(eax9, v8, "S", esi4, esi5);
            ax10 = reinterpret_cast<uint16_t>(image_base_(eax9, "S", esi4, v8, "S", esi4, esi5));
            ecx11 = *reinterpret_cast<void***>(ecx + 64);
            v12 = ax10;
            eax13 = reinterpret_cast<int32_t>(image_base_(ecx11, v12, "S", esi4, v8, "S", esi4, esi5));
            image_base_(eax13, v12, "S", esi4, v8, "S", esi4, esi5);
            ax14 = reinterpret_cast<uint16_t>(image_base_(eax13, "S", esi4, v12, "S", esi4, v8, "S", esi4, esi5));
            ecx15 = *reinterpret_cast<void***>(ecx + 64);
            v16 = ax14;
            eax17 = reinterpret_cast<int32_t>(image_base_(ecx15, v16, "S", esi4, v12, "S", esi4, v8, "S", esi4, esi5));
            image_base_(eax17, v16, "S", esi4, v12, "S", esi4, v8, "S", esi4, esi5);
            v18 = image_base_;
            ecx19 = *reinterpret_cast<void***>(ecx + 72);
            image_base_(ecx19, v18, v16, "S", esi4, v12, "S", esi4, v8, "S", esi4, esi5);
            image_base_(ecx19, v18, v16, "S", esi4, v12, "S", esi4, v8, "S", esi4, esi5);
            ecx20 = *reinterpret_cast<void***>(ecx + 72);
            image_base_(ecx20);
        } else {
            *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) | 64);
            ax21 = reinterpret_cast<uint16_t>(image_base_("S", 0x2718, esi5));
            ecx22 = *reinterpret_cast<void***>(ecx + 64);
            v23 = ax21;
            eax24 = reinterpret_cast<int32_t>(image_base_(ecx22, v23, "S", 0x2718, esi5));
            image_base_(eax24, v23, "S", 0x2718, esi5);
            ax25 = reinterpret_cast<uint16_t>(image_base_(eax24, "S", 0x2718, v23, "S", 0x2718, esi5));
            ecx26 = *reinterpret_cast<void***>(ecx + 64);
            v27 = ax25;
            eax28 = reinterpret_cast<int32_t>(image_base_(ecx26, v27, "S", 0x2718, v23, "S", 0x2718, esi5));
            image_base_(eax28, v27, "S", 0x2718, v23, "S", 0x2718, esi5);
            ax29 = reinterpret_cast<uint16_t>(image_base_(eax28, "S", 0x2718, v27, "S", 0x2718, v23, "S", 0x2718, esi5));
            ecx30 = *reinterpret_cast<void***>(ecx + 64);
            v31 = ax29;
            eax32 = reinterpret_cast<int32_t>(image_base_(ecx30, v31, "S", 0x2718, v27, "S", 0x2718, v23, "S", 0x2718, esi5));
            image_base_(eax32, v31, "S", 0x2718, v27, "S", 0x2718, v23, "S", 0x2718, esi5);
            ecx33 = *reinterpret_cast<void***>(ecx + 72);
            image_base_(ecx33, 0x2715, v31, "S", 0x2718, v27, "S", 0x2718, v23, "S", 0x2718, esi5);
            ecx34 = *reinterpret_cast<void***>(ecx + 72);
            image_base_(ecx34);
            ecx35 = *reinterpret_cast<void***>(ecx + 72);
            image_base_(ecx35, "H");
        }
    }
    return;
}

void** fun_100191c8(int32_t ecx, uint32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7);

/* (image base) */
int32_t image_base_ = 0x1000a82e;

/* (image base) */
int32_t image_base_ = 0x1000a838;

void** fun_1001539b(void** ecx, void** a2) {
    void** v3;
    void** ebx4;
    void** v5;
    void** esi6;
    uint32_t esi7;
    int32_t ebx8;
    void* ebp9;
    void** eax10;
    void** eax11;
    void** v12;
    void** edi13;
    void** edi14;
    void** ecx15;
    uint16_t ax16;
    void** ecx17;
    void** v18;
    int32_t eax19;

    v3 = ecx;
    ebx4 = ecx;
    v5 = esi6;
    esi7 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx4 + 52)) >> 9 & 1;
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx4 + 52)) & 0x80)) {
        eax10 = fun_10011458(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xffffffff, v5, ebx8, v3, ebp9, __return_address(), a2);
        if (eax10 && (esi7 = esi7 | 2, !*reinterpret_cast<signed char*>(&v3 + 3))) {
            esi7 = esi7 | 4;
        }
    } else {
        esi7 = esi7 | 6;
    }
    eax11 = reinterpret_cast<void**>(0);
    if (!esi7) {
        addr_10015449_6:
        return eax11;
    } else {
        v12 = edi13;
        edi14 = reinterpret_cast<void**>(0);
        ecx15 = reinterpret_cast<void**>(0);
        do {
            if (reinterpret_cast<unsigned char>(ecx15) >= reinterpret_cast<unsigned char>(40)) 
                break;
            if (esi7 == *reinterpret_cast<uint32_t*>(ecx15 + 0x100079c4)) {
                edi14 = *reinterpret_cast<void***>(ecx15 + 0x100079c8);
            }
            ecx15 = ecx15 + 8;
        } while (!edi14);
        if (!edi14) 
            goto addr_10015448_13;
        ax16 = reinterpret_cast<uint16_t>(image_base_("S"));
        ecx17 = *reinterpret_cast<void***>(ebx4 + 64);
        v18 = reinterpret_cast<void**>(static_cast<uint32_t>(ax16));
        eax19 = reinterpret_cast<int32_t>(image_base_(ecx17, v18, "S"));
        eax11 = fun_100191c8(eax19, static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edi14)), 0x10000000, v18, "S", v12, v5);
        if (reinterpret_cast<signed char>(eax11) < reinterpret_cast<signed char>(0)) 
            goto addr_10015448_13;
        eax11 = reinterpret_cast<void**>(image_base_(eax19, 0xff, v18, "S"));
        if (reinterpret_cast<signed char>(eax11) >= reinterpret_cast<signed char>(0)) 
            goto addr_1001543e_16;
    }
    addr_10015448_13:
    goto addr_10015449_6;
    addr_1001543e_16:
    eax11 = reinterpret_cast<void**>(image_base_(eax19, 1, 0xff, v18, "S"));
    goto addr_10015448_13;
}

/* SHCORE.dll:188 */
int32_t SHCORE_dll_188 = 0x800000bc;

struct s110 {
    signed char[8] pad8;
    int32_t f8;
};

struct s109 {
    struct s110* f0;
    int32_t f4;
};

void** fun_10016160(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, struct s109** a5);

void** fun_100130f3(void** ecx, void** a2, void** a3);

void** fun_1001c628(void*** ecx);

int32_t DwmIsCompositionEnabled = 0x26dc2;

void** fun_100152e5(void** ecx) {
    uint32_t edx2;
    void** ebx3;
    void** eax4;
    void** esi5;
    void** ecx6;
    void** eax7;
    void** edi8;
    void** esi9;
    void** ebx10;
    void** eax11;
    void** esi12;
    void*** ecx13;
    void** eax14;
    void* v15;
    int32_t eax16;
    void** v17;
    void** ecx18;
    void** eax19;
    int1_t sf20;

    edx2 = -reinterpret_cast<unsigned char>(ecx);
    ebx3 = reinterpret_cast<void**>(0);
    eax4 = reinterpret_cast<void**>(SHCORE_dll_188());
    *reinterpret_cast<void***>(ecx + 48) = eax4;
    if (eax4) {
        esi5 = ecx + 100;
        ecx6 = *reinterpret_cast<void***>(esi5);
        eax7 = ecx + 12;
        if (ecx6) {
            *reinterpret_cast<void***>(esi5) = reinterpret_cast<void**>(0);
            fun_10013f7b(ecx6, fun_10016160, 0xfd, 0, 0, 0, edx2 - (edx2 + reinterpret_cast<uint1_t>(edx2 < edx2 + reinterpret_cast<uint1_t>(!!ecx))) & reinterpret_cast<uint32_t>(ecx + 44), edi8, esi9, ebx10);
            eax7 = ecx + 12;
        }
        eax11 = fun_100130f3(eax7, ecx6, esi5);
        esi12 = eax11;
        if (reinterpret_cast<signed char>(esi12) >= reinterpret_cast<signed char>(0) && (ecx13 = reinterpret_cast<void***>(ecx + 56), eax14 = fun_1001c628(ecx13), esi12 = eax14, reinterpret_cast<signed char>(esi12) >= reinterpret_cast<signed char>(0))) {
            v15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
            eax16 = reinterpret_cast<int32_t>(DwmIsCompositionEnabled(ecx13, v15));
            if (eax16 >= 0 && ecx) {
                ebx3 = reinterpret_cast<void**>(1);
            }
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 56) + 44) = ebx3;
            v17 = *reinterpret_cast<void***>(ecx + 56);
            ecx18 = *reinterpret_cast<void***>(ecx + 60);
            image_base_(ecx18, v17, v15);
        }
    } else {
        eax19 = reinterpret_cast<void**>(GetLastError());
        esi12 = eax19;
        sf20 = reinterpret_cast<signed char>(esi12) < reinterpret_cast<signed char>(0);
        if (!(reinterpret_cast<uint1_t>(sf20) | reinterpret_cast<uint1_t>(esi12 == 0))) {
            esi12 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi12)) | 0x80070000);
            sf20 = reinterpret_cast<signed char>(esi12) < reinterpret_cast<signed char>(0);
        }
        if (!sf20) {
            esi12 = reinterpret_cast<void**>(0x80004005);
        }
    }
    return esi12;
}

void** fun_100159a9(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44) {
    void*** ebp45;
    uint32_t eax46;
    void** v47;
    int1_t zf48;
    void** ecx49;
    void** edi50;
    void** esi51;
    void** ebx52;
    void** ebp53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    int32_t eax58;
    int32_t esi59;
    void** eax60;
    void* v61;
    void** esi62;
    int32_t eax63;
    void** ecx64;
    int32_t eax65;
    uint32_t ecx66;
    void** eax67;
    void** edi68;
    void** esi69;
    void** eax70;
    void** v71;
    void** v72;
    void** esi73;
    void** ecx74;
    int32_t eax75;

    ebp45 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax46 = g100240c4;
    v47 = reinterpret_cast<void**>(eax46 ^ reinterpret_cast<uint32_t>(ebp45));
    zf48 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x100) == 0;
    if (zf48) {
        ecx49 = reinterpret_cast<void**>(ebp45 + 0xfffffff4);
        fun_100136b5(ecx49, edi50, esi51, ebx52, 0, 0, v47, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
        v54 = reinterpret_cast<void**>(ebp45 + 0xfffffff4);
        v55 = reinterpret_cast<void**>(0x100079b4);
        v56 = reinterpret_cast<void**>(4);
        v57 = reinterpret_cast<void**>(0x10008074);
        eax58 = reinterpret_cast<int32_t>(CoCreateInstance(ecx49));
        esi59 = eax58;
        if (esi59 >= 0) {
            fun_100136b5(ebp45 + 0xfffffff8, 0x10008074, 0, 4, 0x100079b4, v54, edi50, esi51, ebx52, 0, 0, v47, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
            eax60 = g0;
            v61 = reinterpret_cast<void*>(ebp45 + 0xfffffff8);
            esi62 = *reinterpret_cast<void***>(eax60 + 12);
            image_base_(esi62, 0, v61);
            eax63 = reinterpret_cast<int32_t>(esi62(esi62, 0, v61));
            esi59 = eax63;
        }
        fun_100136b5(ebp45 + 0xfffffff4, 0x10008074, 0, 4, 0x100079b4, v54, edi50, esi51, ebx52, 0, 0, v47, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
        if (esi59 >= 0) 
            goto addr_10015a48_5;
    }
    ecx64 = reinterpret_cast<void**>(ebp45 + 0xfffffff8);
    fun_100136b5(ecx64, edi50, esi51, ebx52, 0, 0, v47, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
    v54 = reinterpret_cast<void**>(ebp45 + 0xfffffff8);
    v55 = reinterpret_cast<void**>(0x100079a4);
    v56 = reinterpret_cast<void**>(1);
    v57 = reinterpret_cast<void**>(0x100080b4);
    eax65 = reinterpret_cast<int32_t>(CoCreateInstance(ecx64));
    if (eax65 < 0) {
        addr_10015a98_7:
        fun_100136b5(ebp45 + 0xfffffff8, v57, 0, v56, v55, v54, edi50, esi51, ebx52, 0, 0, v47, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
        ecx66 = reinterpret_cast<unsigned char>(v47) ^ reinterpret_cast<uint32_t>(ebp45);
        eax67 = fun_1000a130(ecx66, ecx66);
        return eax67;
    } else {
        addr_10015a48_5:
        edi68 = *reinterpret_cast<void***>(ecx + 60);
        esi69 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi68) + 0xb4);
        image_base_(esi69);
        eax70 = reinterpret_cast<void**>(esi69(edi68));
        v71 = ecx + 0xac;
        v72 = ecx + 24;
        esi73 = g0;
        ecx74 = *reinterpret_cast<void***>(esi73 + 12);
        image_base_(ecx74, 0, 81, eax70, v72, v71);
        eax75 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi73 + 12)(ecx74, 0, 81, eax70, v72, v71));
        if (eax75 >= 0) {
            fun_10012e6c(ecx + 0xa8, 0, 0, 81, eax70, v72, v71, v57, 0, v56, v55, v54, edi50, esi51, ebx52, 0, 0, v47, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27);
            goto addr_10015a98_7;
        }
    }
}

int32_t RegisterPowerSettingNotification = 0x265e2;

void** fun_1001592e(void** ecx) {
    void** eax2;
    uint32_t eax3;
    uint32_t edi4;
    int1_t sf5;

    eax2 = reinterpret_cast<void**>(RegisterPowerSettingNotification());
    *reinterpret_cast<void***>(ecx + 0xb4) = eax2;
    if (!eax2) {
        eax3 = reinterpret_cast<uint32_t>(GetLastError());
        edi4 = eax3;
        sf5 = reinterpret_cast<int32_t>(edi4) < reinterpret_cast<int32_t>(0);
        if (!(reinterpret_cast<uint1_t>(sf5) | reinterpret_cast<uint1_t>(edi4 == 0))) {
            edi4 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edi4)) | 0x80070000;
            sf5 = reinterpret_cast<int32_t>(edi4) < reinterpret_cast<int32_t>(0);
        }
        if (!sf5) {
        }
    }
    goto 0;
}

int32_t SetWinEventHook = 0x266c4;

void** fun_10014600(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46);

void fun_10015972(void** ecx) {
    int1_t zf2;
    void** eax3;

    zf2 = g1002466c == 0;
    if (zf2 && (g1002466c = ecx, !*reinterpret_cast<void***>(ecx + 0xb0))) {
        eax3 = reinterpret_cast<void**>(SetWinEventHook(32, 32, 0, fun_10014600, 0, 0, 0));
        *reinterpret_cast<void***>(ecx + 0xb0) = eax3;
    }
    return;
}

int32_t GetLastInputInfo = 0x26e7c;

uint32_t fun_10017335(void** ecx, void*** a2);

void fun_1001738f(void** ecx, void** a2);

void fun_1001606c(void** ecx) {
    int32_t eax2;
    void** edi3;
    void** eax4;
    void* esp5;
    void** ebx6;
    void** v7;
    void** eax8;
    void** edi9;
    void* esp10;
    void** v11;
    int32_t eax12;
    int32_t eax13;
    int32_t eax14;
    int1_t zf15;

    eax2 = reinterpret_cast<int32_t>(SHCORE_dll_123());
    if (eax2) {
        addr_100160ff_2:
        goto "D";
    } else {
        eax4 = fun_1000b6b9(36, 0x10002b64, edi3);
        esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 4 + 4 - 4 - 4 - 4 - 4 - 4 + 4 + 4 + 4);
        if (!eax4) {
            ebx6 = reinterpret_cast<void**>(0);
        } else {
            v7 = *reinterpret_cast<void***>(ecx + 48);
            eax8 = fun_10012bef(eax4, 0x10002b64, v7, 0x10002b64);
            esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 - 4 - 4 - 4 + 12 + 4);
            ebx6 = eax8;
        }
        edi9 = *reinterpret_cast<void***>(ecx + 84);
        *reinterpret_cast<void***>(ecx + 84) = reinterpret_cast<void**>(0);
        if (edi9) {
            fun_10014498(edi9);
            fun_10014498(edi9);
            esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) - 4 + 4 - 4 + 4);
            if (*reinterpret_cast<void***>(edi9 + 4)) {
                v11 = *reinterpret_cast<void***>(edi9 + 4);
                eax12 = reinterpret_cast<int32_t>(GetProcessHeap(edi9, 0, v11));
                HeapFree(edi9, eax12, 0, v11);
                esp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) - 4 - 4 - 4 + 4 - 4 - 4 + 4);
            }
            eax13 = reinterpret_cast<int32_t>(GetProcessHeap(edi9, 0, edi9));
            HeapFree(edi9, eax13, 0, edi9);
            esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp10) - 4 - 4 - 4 + 4 - 4 - 4 + 4);
        }
        *reinterpret_cast<void***>(ecx + 84) = ebx6;
        if (!ebx6) 
            goto addr_100160ff_2;
    }
    eax14 = reinterpret_cast<int32_t>(GetLastInputInfo());
    if (!eax14) 
        goto addr_10017447_13;
    *reinterpret_cast<void***>(ebx6 + 28) = reinterpret_cast<void**>(0);
    zf15 = *reinterpret_cast<void***>(ebx6) == 0;
    *reinterpret_cast<void***>(ebx6 + 32) = reinterpret_cast<void**>(0);
    if (zf15) 
        goto addr_1001742b_15;
    addr_10017447_13:
    goto "D";
    addr_1001742b_15:
    fun_10017335(ebx6, reinterpret_cast<int32_t>(esp5) + 4 + 4 + 4 - 4 - 4);
    __asm__("fld dword [esi+0x8]");
    __asm__("fstp dword [esp]");
    fun_1001738f(ebx6, ebx6);
    goto addr_10017447_13;
}

void** fun_100130f3(void** ecx, void** a2, void** a3) {
    void** edi4;
    void** eax5;
    void** esi6;
    void** v7;
    uint32_t edi8;
    void** edi9;
    void** edx10;
    void** eax11;
    void** esi12;
    void** ebx13;
    void** ebp14;

    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    eax5 = fun_1000b6b9(72, 0x10002b64, edi4);
    esi6 = eax5;
    if (!esi6) {
        esi6 = reinterpret_cast<void**>(0);
    } else {
        *reinterpret_cast<void***>(esi6) = reinterpret_cast<void**>(0x10001df0);
        *reinterpret_cast<void***>(esi6 + 52) = reinterpret_cast<void**>(0);
        v7 = esi6 + 4;
        *reinterpret_cast<void***>(esi6 + 56) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(esi6 + 60) = reinterpret_cast<void**>(1);
        InitializeCriticalSection(0x10002b64, v7);
        InitializeCriticalSection(0x10002b64, esi6 + 28, v7);
        *reinterpret_cast<void***>(esi6) = reinterpret_cast<void**>(0x10001120);
        *reinterpret_cast<void***>(esi6 + 64) = reinterpret_cast<void**>(0x401);
        *reinterpret_cast<void***>(esi6 + 68) = reinterpret_cast<void**>(0);
    }
    edi8 = -reinterpret_cast<unsigned char>(esi6);
    edi9 = reinterpret_cast<void**>((edi8 - (edi8 + reinterpret_cast<uint1_t>(edi8 < edi8 + reinterpret_cast<uint1_t>(!!esi6))) & 0x7ff8fff2) + 0x8007000e);
    if (esi6) {
        eax11 = fun_10014ff2(esi6, ecx, edx10);
        edi9 = eax11;
        if (reinterpret_cast<signed char>(edi9) >= reinterpret_cast<signed char>(0)) {
            *reinterpret_cast<void***>(a3) = esi6;
            *reinterpret_cast<void***>(esi6 + 60) = *reinterpret_cast<void***>(esi6 + 60) + 1;
        }
        fun_10013f7b(esi6, edi4, esi12, ebx13, ecx, edx10, ebp14, __return_address(), a2, a3);
    }
    return edi9;
}

void** fun_1001930f(void** ecx);

void** fun_1001c628(void*** ecx) {
    void** eax2;
    void** eax3;
    void** esi4;
    void** eax5;
    void** ecx6;

    eax2 = g10024740;
    if (eax2) {
        *reinterpret_cast<void***>(eax2 + 48) = *reinterpret_cast<void***>(eax2 + 48) + 1;
        eax3 = g10024740;
    } else {
        eax5 = fun_1000b6b9(52, 0x10002b64, esi4);
        if (!eax5) {
            eax3 = reinterpret_cast<void**>(0);
        } else {
            eax3 = fun_1001930f(eax5);
        }
        g10024740 = eax3;
    }
    if (!eax3) {
        ecx6 = reinterpret_cast<void**>(0x8007000e);
        eax3 = reinterpret_cast<void**>(0);
    } else {
        ecx6 = reinterpret_cast<void**>(0);
    }
    *ecx = eax3;
    return ecx6;
}

/* (image base) */
int32_t image_base_ = 0x1000b8de;

void** fun_100191c8(int32_t ecx, uint32_t a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    int32_t eax8;
    int32_t edx9;
    int32_t ebx10;

    eax8 = reinterpret_cast<int32_t>(image_base_());
    if (eax8) {
        image_base_(ecx, edx9, 1, eax8);
        image_base_(eax8, edx9, 1, eax8);
    }
    goto ebx10;
}

int32_t WindowsCreateStringReference = 0x266fa;

int32_t RaiseException = 0x266e8;

int32_t RoGetActivationFactory = 0x26730;

void** fun_10013414(void*** ecx) {
    void* esp2;
    uint32_t eax3;
    void** v4;
    void*** esp5;
    void*** esp6;
    void** v7;
    void** v8;
    void** v9;
    int32_t eax10;
    void* esp11;
    void** ecx12;
    void** edi13;
    void** esi14;
    void** ebx15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void* esp57;
    void** v58;
    void** eax59;
    void* esp60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    void** v99;
    void* esp100;
    void** v101;
    int32_t* esi102;
    int32_t ecx103;
    void** eax104;
    void* esp105;
    void** esi106;
    void** eax107;
    void* esp108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    void** v120;
    void** v121;
    void** v122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void* esp142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    void** v149;
    void** v150;
    void** v151;
    void** v152;
    void** v153;
    void** v154;
    void** v155;
    void** v156;
    void** v157;
    void** v158;
    void** v159;
    void** v160;
    void** v161;
    void** v162;
    void** v163;
    void** v164;
    void** v165;
    void** v166;
    void** v167;
    void** v168;
    void** v169;
    void** v170;
    void** v171;
    void** v172;
    void** v173;
    void** v174;
    void** v175;
    void** v176;
    void** v177;
    void** v178;
    void** v179;
    void** v180;
    uint32_t ecx181;
    void** eax182;

    esp2 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 36);
    eax3 = g100240c4;
    v4 = reinterpret_cast<void**>(eax3 ^ reinterpret_cast<uint32_t>(esp2));
    esp5 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp2) - 4 - 4 - 4);
    esp6 = esp5 - 4;
    v7 = reinterpret_cast<void**>(esp5 + 40);
    v8 = reinterpret_cast<void**>(esp6 + 24);
    v9 = reinterpret_cast<void**>("l");
    *ecx = reinterpret_cast<void**>(0);
    eax10 = reinterpret_cast<int32_t>(WindowsCreateStringReference("l"));
    esp11 = reinterpret_cast<void*>(esp6 - 4 - 4 - 4 - 4 + 4);
    if (eax10 < 0) {
        RaiseException(eax10, 1, 0, 0, "l");
        esp11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp11) - 4 - 4 - 4 - 4 - 4 + 4);
    }
    ecx12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp11) + 16);
    fun_100136b5(ecx12, "l", 27, v8, v7, edi13, esi14, ebx15, v16, 0, v17, v18, v19, v20, v21, 0, v4, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56);
    esp57 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp11) - 4 + 4);
    v58 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp57) + 16);
    eax59 = reinterpret_cast<void**>(RoGetActivationFactory(ecx12));
    esp60 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp57) - 4 - 4 - 4 - 4 + 4);
    if (reinterpret_cast<signed char>(eax59) >= reinterpret_cast<signed char>(0)) {
        v9 = reinterpret_cast<void**>(0);
        fun_100136b5(reinterpret_cast<uint32_t>(esp60) + 12, v61, 0x100031c8, v58, 0, 27, v8, v7, edi13, esi14, ebx15, v62, 0, v63, v64, v65, v66, v67, 0, v4, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99);
        esp100 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp60) - 4 + 4);
        v101 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp100) + 12);
        esi102 = *reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&g18) + 3);
        ecx103 = *esi102;
        image_base_(ecx103, 27, 0x10007934, v101);
        eax104 = reinterpret_cast<void**>(*esi102(ecx103, 27, 0x10007934, v101));
        esp105 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp100) - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        if (reinterpret_cast<signed char>(eax104) >= reinterpret_cast<signed char>(0)) {
            esi106 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(v61) + 12);
            image_base_(esi106, v61, ecx, 27, 0x10007934, v101);
            eax107 = reinterpret_cast<void**>(esi106(esi106, v61, ecx, 27, 0x10007934, v101));
            esp108 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp105) - 4 - 4 - 4 + 4 - 4 + 4);
            if (reinterpret_cast<signed char>(eax107) >= reinterpret_cast<signed char>(0)) {
            }
        } else {
            fun_1000ed1e(__return_address(), "internal\\onecoreuapshell\\inc\\lockscreenappinterop.h", eax104, 27, 0x10007934, v101, v61, 0x100031c8, v58, 0, 27, v8, v7, edi13, esi14, ebx15);
            esp108 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp105) - 4 - 4 - 4 + 4 - 4 + 8 + 4);
        }
        fun_100136b5(reinterpret_cast<uint32_t>(esp108) + 12, 27, 0x10007934, v101, v61, 0x100031c8, v58, 0, 27, v8, v7, edi13, esi14, ebx15, v109, 0, v110, 0, v111, v112, v113, 0, v4, 0, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v141);
        esp142 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp108) - 4 + 4);
    } else {
        fun_1000ed1e(__return_address(), "internal\\onecoreuapshell\\inc\\lockscreenappinterop.h", eax59, v61, 0x100031c8, v58, "l", 27, v8, v7, edi13, esi14, ebx15, v143, 0, v144);
        esp142 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp60) - 4 - 4 - 4 + 4 - 4 + 8 + 4);
    }
    fun_100136b5(reinterpret_cast<uint32_t>(esp142) + 16, v61, 0x100031c8, v58, v9, 27, v8, v7, edi13, esi14, ebx15, v145, 0, v146, v147, v148, v149, 0, 0, v4, v150, v151, v152, 0, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v180);
    ecx181 = reinterpret_cast<uint32_t>(esp142) - 4 + 4 + 4 + 4 + 4;
    eax182 = fun_1000a130(ecx181, ecx181);
    return eax182;
}

int32_t ConvertStringSidToSidW = 0x266aa;

void** fun_1001921b(void** ecx, int32_t a2, int32_t a3, uint32_t* a4, void** a5, void* a6);

unsigned char fun_10015664(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, int24_t a8) {
    void* ebp9;
    void** esi10;
    uint32_t esi11;
    int32_t eax12;
    int32_t ebx13;
    unsigned char al14;
    int32_t ecx15;
    unsigned char v16;
    void** v17;
    uint32_t v18;
    void* v19;
    void** v20;
    int32_t eax21;
    void** eax22;
    int32_t v23;

    ebp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    esi10 = *reinterpret_cast<void***>(ecx + 52);
    esi11 = reinterpret_cast<unsigned char>(esi10) & 64;
    eax12 = reinterpret_cast<int32_t>(SystemParametersInfoW());
    ebx13 = 1;
    if (!eax12) {
        al14 = 0;
    } else {
        al14 = 1;
    }
    *reinterpret_cast<unsigned char*>(&ecx15) = 1;
    v16 = 1;
    if (esi11) 
        goto addr_100156f5_5;
    if (al14 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x100) {
        v17 = reinterpret_cast<void**>(v18 & esi11);
        v19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp9) - 8);
        v20 = *reinterpret_cast<void***>(ecx + 88);
        eax21 = reinterpret_cast<int32_t>(ConvertStringSidToSidW(v20, v19));
        if (eax21) {
            eax22 = fun_1001921b(v17, 1, 1, reinterpret_cast<int32_t>(ebp9) - 16, v20, v19);
            if (reinterpret_cast<signed char>(eax22) < reinterpret_cast<signed char>(0)) {
                addr_100156d3_9:
                *reinterpret_cast<unsigned char*>(&ecx15) = 1;
            } else {
                *reinterpret_cast<unsigned char*>(&ecx15) = reinterpret_cast<uint1_t>(v23 == 0);
                v16 = *reinterpret_cast<unsigned char*>(&ecx15);
            }
            if (v17) {
                LocalFree(v17, v20, v19);
                *reinterpret_cast<unsigned char*>(&ecx15) = v16;
            }
        } else {
            GetLastError(v20, v19);
            goto addr_100156d3_9;
        }
    }
    if (esi11 || (!al14 || !*reinterpret_cast<unsigned char*>(&ecx15))) {
        addr_100156f5_5:
        *reinterpret_cast<unsigned char*>(&ebx13) = 0;
        goto addr_100156f7_15;
    } else {
        addr_100156f7_15:
        return *reinterpret_cast<unsigned char*>(&ebx13);
    }
}

void** fun_1001df13(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45);

void** fun_1001e1ee(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void*** ebp46;
    uint32_t eax47;
    void** v48;
    void** esi49;
    void** edx50;
    void** ebp51;
    void** eax52;
    void** ecx53;
    void** esi54;
    uint32_t ecx55;
    void** eax56;

    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax47 = g100240c4;
    v48 = reinterpret_cast<void**>(eax47 ^ reinterpret_cast<uint32_t>(ebp46));
    fun_100136b5(ebp46 + 0xfffffff8, esi49, ecx, edx50, 0, v48, ebp51, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    eax52 = fun_1001df13(ebp46 + 0xfffffff8, ebp46 + 0xfffffff4, ebp46 + 8, ebp46 + 12, ebp46 + 16, ebp46 + 20, esi49, ecx, edx50, 0, v48, ebp51, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33);
    if (reinterpret_cast<signed char>(eax52) >= reinterpret_cast<signed char>(0)) {
        ecx53 = g0;
        esi54 = *reinterpret_cast<void***>(ecx53);
        image_base_(esi54, 0, 0x10003180, a7);
        esi54(esi54, 0, 0x10003180, a7);
    }
    fun_100136b5(ebp46 + 0xfffffff8, esi49, ecx, edx50, 0, v48, ebp51, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    ecx55 = reinterpret_cast<unsigned char>(v48) ^ reinterpret_cast<uint32_t>(ebp46);
    eax56 = fun_1000a130(ecx55, ecx55);
    return eax56;
}

void** fun_10012271(void*** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47) {
    void*** ebp48;
    uint32_t eax49;
    void** v50;
    void** edi51;
    void** esi52;
    void** ebp53;
    void** eax54;
    void** esi55;
    uint32_t ecx56;
    void** eax57;

    ebp48 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax49 = g100240c4;
    v50 = reinterpret_cast<void**>(eax49 ^ reinterpret_cast<uint32_t>(ebp48));
    fun_100136b5(a2, edi51, esi52, v50, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
    eax54 = *ecx;
    esi55 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax54));
    image_base_(esi55);
    esi55(esi55);
    ecx56 = reinterpret_cast<unsigned char>(v50) ^ reinterpret_cast<uint32_t>(ebp48);
    eax57 = fun_1000a130(ecx56, ecx56);
    return eax57;
}

/* (image base) */
int32_t image_base_ = 0x1000a94e;

struct s112 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
};

struct s111 {
    signed char[8] pad8;
    struct s112* f8;
};

struct s113 {
    signed char[40] pad40;
    int32_t f40;
};

/* (image base) */
int32_t image_base_ = 0x1000a980;

/* (image base) */
int32_t image_base_ = 0x1000a962;

/* (image base) */
int32_t image_base_ = 0x1000a958;

void** fun_10012661(void** ecx, int32_t* a2, void* a3) {
    void* ebp4;
    uint32_t eax5;
    void** eax6;
    void** eax7;
    void** esi8;
    int32_t eax9;
    struct s111* eax10;
    struct s111* v11;
    struct s112** eax12;
    int32_t esi13;
    struct s112** eax14;
    int32_t esi15;
    void** eax16;
    void* v17;
    void** esi18;
    int32_t edx19;
    int32_t eax20;
    int32_t edi21;
    void** esi22;
    struct s113** eax23;
    int32_t eax24;
    struct s113* ecx25;
    int32_t esi26;
    signed char al27;
    void* v28;
    int32_t eax29;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    *a2 = 0;
    if (!ecx) {
        addr_10012769_2:
        eax6 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
        return eax6;
    } else {
        eax7 = *reinterpret_cast<void***>(ecx);
        esi8 = *reinterpret_cast<void***>(eax7 + 0x98);
        image_base_(esi8);
        eax9 = reinterpret_cast<int32_t>(esi8(ecx));
        if (eax9 != 0x80004001) {
            addr_10012768_4:
            goto addr_10012769_2;
        } else {
            eax10 = reinterpret_cast<struct s111*>(image_base_(ecx, ecx));
            v11 = eax10;
            if (eax10) {
                addr_10012736_6:
                eax12 = &eax10->f8;
                esi13 = (*eax12)->f0;
                image_base_(esi13, eax12, 0x10007840, a2, ecx);
                esi13(esi13, eax12, 0x10007840, a2, ecx);
                eax14 = &v11->f8;
                esi15 = (*eax14)->f8;
                image_base_(esi15, eax14, eax12, 0x10007840, a2, ecx);
                esi15(esi15, eax14, eax12, 0x10007840, a2, ecx);
                goto addr_10012768_4;
            } else {
                eax16 = *reinterpret_cast<void***>(ecx);
                v17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) - 8);
                esi18 = *reinterpret_cast<void***>(eax16 + 0x9c);
                image_base_(esi18, edx19, v17, ecx);
                eax20 = reinterpret_cast<int32_t>(esi18(ecx, edx19, v17, ecx));
                edi21 = eax20;
                if (edi21 == 0x80004001) {
                    esi22 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 0x8c);
                    image_base_(esi22, edx19, v17, ecx);
                    eax23 = reinterpret_cast<struct s113**>(esi22(ecx, edx19, v17, ecx));
                    eax24 = reinterpret_cast<int32_t>(image_base_(ecx, edx19, v17, ecx));
                    ecx25 = *eax23;
                    esi26 = ecx25->f40;
                    image_base_(esi26, eax24, edx19, v17, ecx);
                    al27 = reinterpret_cast<signed char>(esi26(eax23, eax24, edx19, v17, ecx));
                    v28 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) - 8);
                    if (!al27) {
                        eax29 = reinterpret_cast<int32_t>(image_base_(eax23, ecx, edx19, v28, eax24, edx19, v17, ecx));
                    } else {
                        eax29 = reinterpret_cast<int32_t>(image_base_(eax23, ecx, edx19, v28, eax24, edx19, v17, ecx));
                    }
                    edi21 = eax29;
                }
                if (edi21 < 0) 
                    goto addr_10012768_4;
            }
        }
    }
    eax10 = v11;
    goto addr_10012736_6;
}

struct s114 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    int16_t f8;
    void** f10;
    signed char[1] pad12;
    uint32_t f12;
    uint32_t f16;
    void** f20;
};

struct s114* fun_10019377(struct s114* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28);

struct s115 {
    signed char[12] pad12;
    signed char f12;
    signed char[23] pad36;
    uint32_t f36;
    uint32_t f40;
    signed char[4] pad48;
    signed char f48;
};

void** fun_10019ccf(void** ecx, void** a2);

struct s116 {
    void** f0;
    signed char[7] pad8;
    signed char f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
};

void** fun_1001974b(struct s116* ecx);

void** fun_10015e8f(void** ecx, uint32_t a2, int32_t a3) {
    void** ebx4;
    void** v5;
    void*** esp6;
    void** edi7;
    void** esi8;
    void** ebx9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void* esp31;
    struct s115* v32;
    void** v33;
    void** v34;
    void** eax35;

    if (!a3 || a3 == 1) {
        ebx4 = reinterpret_cast<void**>(0);
    } else {
        ebx4 = reinterpret_cast<void**>(1);
    }
    if (a3 == 1 || (*reinterpret_cast<signed char*>(&v5 + 3) = 0, a3 == 2)) {
        *reinterpret_cast<signed char*>(&v5 + 3) = 1;
    }
    esp6 = reinterpret_cast<void***>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 36 - 4 - 4 - 4 - 4);
    fun_10019377(esp6 + 28, ebx4, edi7, esi8, ebx9, v10, v5, ecx, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
    esp31 = reinterpret_cast<void*>(esp6 - 4 + 4 + 4);
    if (v32) {
        v32->f48 = 1;
        v32->f40 = 0;
        v32->f12 = 1;
    }
    if (!a2 || a2 == 2) {
        v33 = *reinterpret_cast<void***>(ecx + 72);
        fun_10019ccf(reinterpret_cast<uint32_t>(esp31) + 24, v33);
        esp31 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp31) - 4 - 4 + 4 + 4);
    }
    if (a2 == 1 || a2 == 2) {
        v34 = *reinterpret_cast<void***>(ecx + 80);
        fun_10019ccf(reinterpret_cast<uint32_t>(esp31) + 24, v34);
        esp31 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp31) - 4 - 4 + 4 + 4);
    }
    if (*reinterpret_cast<signed char*>(&v5 + 3)) {
        if (v32) {
            v32->f36 = reinterpret_cast<uint32_t>(ebx4 + 14);
        }
    }
    eax35 = fun_1001974b(reinterpret_cast<uint32_t>(esp31) + 24);
    return eax35;
}

void** fun_1001c00e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7);

void** fun_10019ccf(void** ecx, void** a2) {
    void*** ebp3;
    uint32_t eax4;
    void** v5;
    void** ebx6;
    void** eax7;
    void** esi8;
    int32_t eax9;
    void** edi10;
    void** ebx11;
    void** ebp12;
    void** eax13;

    ebp3 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = reinterpret_cast<void**>(eax4 ^ reinterpret_cast<uint32_t>(ebp3));
    ebx6 = *reinterpret_cast<void***>(ecx);
    if (!ebx6 || (eax7 = *reinterpret_cast<void***>(ebx6), esi8 = *reinterpret_cast<void***>(eax7 + 4), image_base_(esi8), eax9 = reinterpret_cast<int32_t>(esi8(ebx6)), eax9 < 0)) {
        fun_1001c00e(ecx, a2, edi10, ebx11, v5, ebp12, __return_address());
    }
    eax13 = fun_1000a130(reinterpret_cast<unsigned char>(v5) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax13;
}

void** fun_10016101(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44) {
    void*** ebp45;
    uint32_t eax46;
    void** v47;
    void** ebx48;
    void** edx49;
    void** eax50;
    void** v51;
    void** esi52;
    void** esi53;
    void** edi54;
    void** ebx55;
    void** ebp56;
    void** eax57;

    ebp45 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax46 = g100240c4;
    v47 = reinterpret_cast<void**>(eax46 ^ reinterpret_cast<uint32_t>(ebp45));
    ebx48 = ecx + 0xa8;
    edx49 = *reinterpret_cast<void***>(ebx48);
    if (edx49) {
        eax50 = *reinterpret_cast<void***>(edx49);
        v51 = *reinterpret_cast<void***>(ecx + 0xac);
        esi52 = *reinterpret_cast<void***>(eax50 + 20);
        image_base_(esi52);
        esi52(esi52);
        fun_100136b5(ebx48, edx49, v51, esi53, edi54, ebx55, v47, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
        *reinterpret_cast<void***>(ecx + 0xac) = reinterpret_cast<void**>(0);
    }
    eax57 = fun_1000a130(reinterpret_cast<unsigned char>(v47) ^ reinterpret_cast<uint32_t>(ebp45));
    return eax57;
}

int32_t fun_1000bb25(void** ecx, void** a2, void** a3, void** a4) {
    int32_t* edx5;
    int32_t ebp6;
    int32_t edx7;
    int32_t eax8;
    int32_t ebp9;
    int32_t ebp10;

    fun_1000a5b0(0x1001f100, 16, __return_address());
    *edx5 = 0;
    *reinterpret_cast<int32_t*>(ebp6 - 4) = 0;
    eax8 = reinterpret_cast<int32_t>(image_base_("X3", 0x10004e82, 0, 0, edx7));
    *reinterpret_cast<int32_t*>(ebp9 - 32) = eax8;
    *reinterpret_cast<int32_t*>(ebp10 - 4) = -2;
    fun_1000a5f5(ecx, 0x1001f100, 16, __return_address(), a2, a3);
    goto 0x1001f100;
}

void fun_1000b894(int32_t a1, int32_t a2);

struct s117 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_100097e0(int32_t a1);

void fun_1000b880(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5);

void** fun_1000b6b9(int32_t a1, int32_t a2, void** a3) {
    int32_t v4;
    struct s117* ebp5;
    int32_t ebp6;

    fun_1000b894(8, __return_address());
    v4 = ebp5->f8;
    *reinterpret_cast<uint32_t*>(ebp6 - 4) = 0;
    fun_100097e0(v4);
    fun_1000b880(v4, 8, __return_address(), a1, a2);
    goto 8;
}

int32_t SetProcessShutdownParameters = 0x26672;

int32_t InitiateShutdownW = 0x2643a;

void** fun_10015f50(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37) {
    void*** ebp38;
    void** edi39;
    void** v40;
    void** v41;
    void** v42;
    void** ebp43;
    void** eax44;
    void** eax45;
    void** ecx46;
    void** v47;
    void** v48;
    void** v49;
    uint32_t esi50;
    uint32_t esi51;
    void** esi52;
    void** esi53;
    void** ebx54;
    int32_t eax55;
    int32_t eax56;
    int32_t eax57;
    void** v58;

    ebp38 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x400) && (eax44 = fun_10018c27(ecx, ebp38 + 0xfffffff4, edi39, v40, v41, v42, ebp43, __return_address(), a2, a3, a4, a5), !eax44)) {
        eax45 = fun_100133c3(ecx);
        ecx46 = *reinterpret_cast<void***>(ecx + 80);
        image_base_(ecx46, eax45);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x100)) {
            ecx46 = ecx;
            fun_10016101(ecx46, eax45, edi39, v47, v48, v49, ebp43, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
            SetProcessShutdownParameters(ecx46, 2, 1, eax45);
        }
        esi50 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) & 0x200;
        esi51 = -esi50;
        esi52 = reinterpret_cast<void**>((esi51 - (esi51 + reinterpret_cast<uint1_t>(esi51 < esi51 + reinterpret_cast<uint1_t>(!!esi50))) & 0xfffffe40) + 0x209);
        if (*reinterpret_cast<signed char*>(&a2)) {
            esi52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi52) | 2);
        }
        eax55 = fun_1000bb25(ecx46, esi53, ebx54, eax45);
        if (eax55 >= 0 && (!1 && ((ecx46 = reinterpret_cast<void**>(ebp38 + 0xfffffff8), eax56 = fun_1000bac6(ecx46, esi53, ebx54, eax45), eax56 >= 0) && !1))) {
            esi52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi52) | 0x80);
        }
        eax57 = reinterpret_cast<int32_t>(InitiateShutdownW(ecx46));
        if (!eax57) {
            *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 52)) | 0x400);
        }
        eax44 = fun_10018c27(ecx46, 0, 0, 0, 0, esi52, 0, esi53, ebx54, eax45, edi39, v58);
    }
    return eax44;
}

struct s119 {
    signed char[140] pad140;
    int32_t f140;
};

struct s118 {
    struct s119* f0;
    signed char[248] pad252;
    uint32_t f252;
};

/* (image base) */
int32_t image_base_ = 0x1000aade;

void** fun_100163c6(struct s118* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    void** eax5;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    image_base_();
    esi4 = ecx->f0->f140;
    image_base_(esi4);
    esi4(ecx);
    eax5 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax5;
}

struct s120 {
    signed char[40] pad40;
    int32_t f40;
};

/* (image base) */
int32_t image_base_ = 0x1000aaf2;

void** fun_10016463(struct s118* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    struct s120** eax5;
    struct s120* ecx6;
    int32_t esi7;
    uint32_t ecx8;
    void** eax9;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = ecx->f0->f140;
    image_base_(esi4);
    eax5 = reinterpret_cast<struct s120**>(esi4(ecx));
    image_base_(ecx);
    ecx6 = *eax5;
    esi7 = ecx6->f40;
    image_base_(esi7);
    esi7(eax5);
    ecx8 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax9 = fun_1000a130(ecx8, ecx8);
    return eax9;
}

struct s121 {
    signed char[40] pad40;
    int32_t f40;
};

/* (image base) */
int32_t image_base_ = 0x1000aae8;

void** fun_10016562(struct s118* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    struct s121** eax5;
    struct s121* ecx6;
    int32_t esi7;
    uint32_t ecx8;
    void** eax9;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = ecx->f0->f140;
    image_base_(esi4);
    eax5 = reinterpret_cast<struct s121**>(esi4(ecx));
    image_base_(ecx);
    ecx6 = *eax5;
    esi7 = ecx6->f40;
    image_base_(esi7);
    esi7(eax5);
    ecx8 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax9 = fun_1000a130(ecx8, ecx8);
    return eax9;
}

void** fun_10016679(void*** ecx, void** a2, void** a3, void** a4, void** a5) {
    void* ebp6;
    uint32_t eax7;
    void** eax8;
    void** esi9;
    void** eax10;
    void** ecx11;
    void** esi12;
    void** eax13;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    if (*ecx != a2) {
        if (a2) {
            eax8 = *reinterpret_cast<void***>(a2);
            esi9 = *reinterpret_cast<void***>(eax8 + 4);
            image_base_(esi9, a2);
            esi9(esi9, a2);
        }
        eax10 = *ecx;
        *ecx = a2;
        if (eax10) {
            ecx11 = *reinterpret_cast<void***>(eax10);
            esi12 = *reinterpret_cast<void***>(ecx11 + 8);
            image_base_(esi12, eax10);
            esi12(esi12, eax10);
        }
    }
    eax13 = fun_1000a130(eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6));
    return eax13;
}

struct s122 {
    signed char[44] pad44;
    int32_t f44;
};

struct s122** g10024720;

int32_t fun_1001868f(void* ecx);

void** fun_100187a4(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t ebx4;
    int32_t eax5;
    void** eax6;
    void** esi7;
    int32_t eax8;
    int32_t eax9;
    void* ecx10;
    int32_t eax11;
    void* v12;
    signed char al13;
    struct s122** v14;
    int32_t eax15;
    struct s122** v16;
    int32_t eax17;
    int32_t esi18;
    void** eax19;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ebx4 = 0;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    if (eax5) {
        eax6 = reinterpret_cast<void**>(image_base_());
        esi7 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax6));
        image_base_(esi7);
        ecx = eax6;
        esi7(ecx);
    } else {
        eax8 = reinterpret_cast<int32_t>(image_base_());
        ebx4 = eax8;
    }
    if (ebx4 >= 0) {
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx));
        ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 16);
        image_base_(ecx10, eax9);
        eax11 = reinterpret_cast<int32_t>(image_base_(ecx10, eax9));
        v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 12);
        al13 = reinterpret_cast<signed char>(image_base_(ecx10, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9));
        if (al13) {
            g10024720 = v14;
        } else {
            g10024720 = reinterpret_cast<struct s122**>(0);
            eax15 = fun_1001868f(ecx10);
            if (eax15 >= 0) {
                eax17 = reinterpret_cast<int32_t>(image_base_(v16, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9));
                if (eax17 < 0) {
                    esi18 = (*v16)->f44;
                    image_base_(esi18, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9);
                    esi18(v16, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9);
                } else {
                    g10024720 = v16;
                }
            }
        }
        image_base_(reinterpret_cast<uint32_t>(ebp2) - 16, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9);
    }
    eax19 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax19;
}

/* (image base) */
int32_t image_base_ = 0x1000b290;

struct s123 {
    signed char[44] pad44;
    int32_t f44;
};

struct s123** g1002471c;

int32_t fun_1001826f(void* ecx);

void** fun_10018502(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t ebx4;
    int32_t eax5;
    void** eax6;
    void** esi7;
    int32_t eax8;
    int32_t eax9;
    void* ecx10;
    int32_t eax11;
    void* v12;
    signed char al13;
    struct s123** v14;
    int32_t eax15;
    struct s123** v16;
    int32_t eax17;
    int32_t esi18;
    void** eax19;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ebx4 = 0;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    if (eax5) {
        eax6 = reinterpret_cast<void**>(image_base_());
        esi7 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax6));
        image_base_(esi7);
        ecx = eax6;
        esi7(ecx);
    } else {
        eax8 = reinterpret_cast<int32_t>(image_base_());
        ebx4 = eax8;
    }
    if (ebx4 >= 0) {
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx));
        ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 16);
        image_base_(ecx10, eax9);
        eax11 = reinterpret_cast<int32_t>(image_base_(ecx10, eax9));
        v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 12);
        al13 = reinterpret_cast<signed char>(image_base_(ecx10, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9));
        if (al13) {
            g1002471c = v14;
        } else {
            g1002471c = reinterpret_cast<struct s123**>(0);
            eax15 = fun_1001826f(ecx10);
            if (eax15 >= 0) {
                eax17 = reinterpret_cast<int32_t>(image_base_(v16, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9));
                if (eax17 < 0) {
                    esi18 = (*v16)->f44;
                    image_base_(esi18, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9);
                    esi18(v16, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9);
                } else {
                    g1002471c = v16;
                }
            }
        }
        image_base_(reinterpret_cast<uint32_t>(ebp2) - 16, v12, 0, 0, eax11, 0x10000000, "C", 0, eax9);
    }
    eax19 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax19;
}

void fun_10008044(int32_t ecx);

struct s124 {
    signed char[140] pad140;
    int32_t f140;
};

void** fun_100164b8(struct s124** ecx, void** a2, void** a3);

struct s125 {
    signed char[44] pad44;
    int32_t f44;
    int32_t f48;
};

void** fun_100182d9(struct s125** ecx, struct s124** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

/* (image base) */
int32_t image_base_ = 0x1000aa66;

void** fun_10017318(struct s118* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16);

void** fun_1001718b(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42) {
    void** v43;
    void** v44;
    void** ebp45;
    void*** ebp46;
    uint32_t eax47;
    void** v48;
    void** v49;
    void** ebx50;
    void** ecx51;
    void** v52;
    void** edi53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** eax59;
    void** v60;
    void** esi61;
    void** v62;
    void** ecx63;
    void** esi64;
    void** v65;
    void** v66;
    void** ecx67;
    void** esi68;
    void** v69;
    void** v70;
    void** eax71;
    void** v72;
    void** esi73;
    void** eax74;
    void** edi75;
    uint16_t ax76;
    void** v77;
    struct s124** eax78;
    struct s124** ebx79;
    void** eax80;
    void** v81;
    void** esi82;
    void** ecx83;
    int32_t eax84;
    void** eax85;
    signed char al86;
    uint16_t ax87;
    void** v88;
    struct s118* eax89;
    void** eax90;
    uint16_t ax91;
    uint32_t v92;
    int32_t eax93;
    void** eax94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    uint32_t ecx99;
    void** eax100;

    v43 = reinterpret_cast<void**>(__return_address());
    v44 = ebp45;
    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax47 = g100240c4;
    v48 = reinterpret_cast<void**>(eax47 ^ reinterpret_cast<uint32_t>(ebp46));
    v49 = ebx50;
    ecx51 = reinterpret_cast<void**>(ebp46 + 0xfffffff8);
    v52 = edi53;
    v54 = ecx;
    fun_100136b5(ecx51, v52, v49, v54, v55, v56, v57, 0, v48, v44, v43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    v58 = reinterpret_cast<void**>(ebp46 + 0xfffffff8);
    eax59 = reinterpret_cast<void**>(CoCreateInstance(ecx51));
    if (reinterpret_cast<signed char>(eax59) >= reinterpret_cast<signed char>(0)) {
        v60 = esi61;
        v62 = reinterpret_cast<void**>(ebp46 + 0xfffffff0);
        ecx63 = g0;
        esi64 = *reinterpret_cast<void***>(ecx63 + 24);
        image_base_(esi64, 0, v62, v60);
        esi64(esi64, 0, v62, v60);
        v65 = v66;
        ecx67 = g0;
        esi68 = *reinterpret_cast<void***>(ecx67 + 16);
        image_base_(esi68, 0, v65, 0, v62, v60);
        esi68(esi68, 0, v65, 0, v62, v60);
        fun_100136b5(ebp46 + 0xfffffff4, 0, v65, 0, v62, v60, fun_10008044, 0, 1, 0x10007ffc, v58, v52, v49, v54, v69, v70, 0, 0, v48, v44, v43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
        eax71 = g0;
        v72 = reinterpret_cast<void**>(ebp46 + 0xfffffff4);
        esi73 = *reinterpret_cast<void***>(eax71 + 32);
        image_base_(esi73);
        eax74 = reinterpret_cast<void**>(esi73(esi73));
        edi75 = eax74;
        if (reinterpret_cast<signed char>(edi75) >= reinterpret_cast<signed char>(0)) {
            ax76 = reinterpret_cast<uint16_t>(image_base_(esi73, "C"));
            v77 = reinterpret_cast<void**>(static_cast<uint32_t>(ax76));
            eax78 = reinterpret_cast<struct s124**>(image_base_(ecx, v77, "C"));
            ebx79 = reinterpret_cast<struct s124**>(0);
            if (eax78 && (eax80 = fun_100164b8(eax78, v77, "C"), !!eax80)) {
                ebx79 = eax78;
            }
            do {
                v81 = reinterpret_cast<void**>(ebp46 + 0xffffffec);
                esi82 = g0;
                ecx83 = *reinterpret_cast<void***>(esi82 + 12);
                image_base_(ecx83, 0, 1, v81, 0, v77, "C");
                eax84 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi82 + 12)(ecx83, 0, 1, v81, 0, v77, "C"));
                if (eax84) 
                    break;
                eax85 = fun_100182d9(0, ebx79, 0, 1, v81, 0, v77, "C");
                edi75 = eax85;
            } while (reinterpret_cast<signed char>(edi75) >= reinterpret_cast<signed char>(0));
            if (reinterpret_cast<signed char>(edi75) >= reinterpret_cast<signed char>(0) && ((al86 = reinterpret_cast<signed char>(image_base_(ebx79, 0, 1, v81, 0, v77, "C")), !al86) && ((ax87 = reinterpret_cast<uint16_t>(image_base_(ebx79, "S", 0, 1, v81, 0, v77, "C")), v88 = reinterpret_cast<void**>(static_cast<uint32_t>(ax87)), eax89 = reinterpret_cast<struct s118*>(image_base_(v54, v88, "S", 0, 1, v81, 0, v77, "C")), eax90 = fun_10017318(eax89, v88, "S", 0, 1, v81, 0, v77, "C", 0, v72, 0, v65, 0, v62, v60), reinterpret_cast<signed char>(eax90) >= reinterpret_cast<signed char>(0)) && (ax91 = reinterpret_cast<uint16_t>(image_base_(eax89, "S", v88, "S", 0, 1, v81, 0, v77, "C")), v92 = ax91, eax93 = reinterpret_cast<int32_t>(image_base_(v54, v92, "S", v88, "S", 0, 1, v81, 0, v77, "C")), eax94 = reinterpret_cast<void**>(image_base_(eax93, 0xff, v92, "S", v88, "S", 0, 1, v81, 0, v77, "C")), reinterpret_cast<signed char>(eax94) >= reinterpret_cast<signed char>(0))))) {
                image_base_(eax93, 1, 0xff, v92, "S", v88, "S", 0, 1, v81, 0, v77, "C");
            }
        }
        fun_100136b5(ebp46 + 0xfffffff4, 0, v72, 0, v65, 0, v62, v60, fun_10008044, 0, 1, 0x10007ffc, v58, v52, v49, v54, v95, v96, 0, 0, v48, v44, v43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
    }
    fun_100136b5(ebp46 + 0xfffffff8, fun_10008044, 0, 1, 0x10007ffc, v58, v52, v49, v54, v97, v98, 0, 0, v48, v44, v43, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    ecx99 = reinterpret_cast<unsigned char>(v48) ^ reinterpret_cast<uint32_t>(ebp46);
    eax100 = fun_1000a130(ecx99, ecx99);
    return eax100;
}

struct s126 {
    signed char[40] pad40;
    int32_t f40;
};

void** fun_1001640f(struct s118* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    struct s126** eax5;
    int32_t esi6;
    uint32_t ecx7;
    void** eax8;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = ecx->f0->f140;
    image_base_(esi4);
    eax5 = reinterpret_cast<struct s126**>(esi4(ecx));
    esi6 = (*eax5)->f40;
    image_base_(esi6);
    esi6(eax5);
    ecx7 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax8 = fun_1000a130(ecx7, ecx7);
    return eax8;
}

struct s127 {
    signed char[40] pad40;
    int32_t f40;
};

void** fun_1001650d(struct s118* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    struct s127** eax5;
    struct s127* ecx6;
    int32_t esi7;
    uint32_t ecx8;
    void** eax9;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = ecx->f0->f140;
    image_base_(esi4);
    eax5 = reinterpret_cast<struct s127**>(esi4(ecx));
    image_base_(ecx);
    ecx6 = *eax5;
    esi7 = ecx6->f40;
    image_base_(esi7);
    esi7(eax5);
    ecx8 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax9 = fun_1000a130(ecx8, ecx8);
    return eax9;
}

int32_t g1002474c;

int32_t GetSystemDirectoryW = 0x27090;

int32_t PathCchAppend = 0x270a6;

int32_t PathFileExistsW = 0x26ee8;

void fun_1001c676(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

signed char fun_1001d3b4(struct s118* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void* ebp9;
    uint32_t eax10;
    int1_t zf11;
    void** v12;
    int32_t eax13;
    void** v14;
    void** v15;
    void** v16;
    int32_t eax17;
    int32_t eax18;
    void** eax19;
    void** eax20;
    void** esi21;
    int1_t zf22;
    void** eax23;

    ebp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax10 = g100240c4;
    zf11 = g1002474c == 0;
    if (zf11) {
        v12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp9) + 0xfffffdf4);
        eax13 = reinterpret_cast<int32_t>(GetSystemDirectoryW(v12, 0x104));
        if (reinterpret_cast<uint32_t>(eax13 - 1) > 0x102 || ((v14 = reinterpret_cast<void**>("d"), v15 = reinterpret_cast<void**>(0x104), v16 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp9) + 0xfffffdf4), eax17 = reinterpret_cast<int32_t>(PathCchAppend()), eax17 < 0) || (eax18 = reinterpret_cast<int32_t>(PathFileExistsW(reinterpret_cast<uint32_t>(ebp9) + 0xfffffdf4)), !!eax18))) {
            g1002474c = 1;
            eax19 = image_base_;
            if (eax19 == 0x10024000) 
                goto addr_1001d479_4;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax19 + 28)) & 8)) 
                goto addr_1001d479_4;
            v14 = *reinterpret_cast<void***>(eax19 + 20);
            v15 = *reinterpret_cast<void***>(eax19 + 16);
            v16 = reinterpret_cast<void**>(10);
        } else {
            g1002474c = 2;
            eax20 = image_base_;
            if (eax20 == 0x10024000) 
                goto addr_1001d477_8;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax20 + 28)) & 8)) 
                goto addr_1001d477_8;
        }
        fun_1001c676(v16, v15, v14, v12, 0x104, esi21);
    }
    zf22 = g1002474c == 1;
    if (zf22) {
        addr_1001d479_4:
        eax23 = fun_1000a130(eax10 ^ reinterpret_cast<uint32_t>(ebp9) ^ reinterpret_cast<uint32_t>(ebp9));
        return *reinterpret_cast<signed char*>(&eax23);
    } else {
        addr_1001d477_8:
        goto addr_1001d479_4;
    }
}

struct s118* fun_100165d3(struct s118* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    struct s118* edi9;
    void** eax10;

    edi9 = reinterpret_cast<struct s118*>(0);
    if (ecx && (eax10 = fun_10016562(ecx), !!eax10)) {
        edi9 = ecx;
    }
    return edi9;
}

struct s128 {
    signed char[72] pad72;
    int32_t f72;
};

/* (image base) */
int32_t image_base_ = 0x1000aaca;

/* (image base) */
int32_t image_base_ = 0x1000aaac;

void** fun_1001759b(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6);

int32_t fun_1001670e(void* ecx) {
    struct s128*** v2;
    struct s128** eax3;
    int32_t eax4;
    int32_t esi5;

    *v2 = reinterpret_cast<struct s128**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<struct s128**>(HeapAlloc());
    if (eax3) {
        image_base_(eax3);
        *eax3 = reinterpret_cast<struct s128*>(0x10001130);
        eax4 = reinterpret_cast<int32_t>(image_base_(eax3, 0x10000000, "S", 0, 0, 0));
        if (eax4 < 0) {
            fun_1001759b(eax3, 0x10000000, "S", 0, 0, 0);
        } else {
            *v2 = eax3;
        }
    }
    goto esi5;
}

void** fun_10017318(struct s118* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    int32_t eax17;
    int32_t esi18;

    eax17 = reinterpret_cast<int32_t>(image_base_());
    if (eax17 >= 0) {
        image_base_(ecx, 0);
    }
    goto esi18;
}

struct s129 {
    signed char[40] pad40;
    int32_t f40;
};

/* (image base) */
int32_t image_base_ = 0x1000aafc;

void** fun_100164b8(struct s124** ecx, void** a2, void** a3) {
    void* ebp4;
    uint32_t eax5;
    int32_t esi6;
    struct s129** eax7;
    struct s129* ecx8;
    int32_t esi9;
    uint32_t ecx10;
    void** eax11;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    esi6 = (*ecx)->f140;
    image_base_(esi6);
    eax7 = reinterpret_cast<struct s129**>(esi6(ecx));
    image_base_(ecx);
    ecx8 = *eax7;
    esi9 = ecx8->f40;
    image_base_(esi9);
    esi9(eax7);
    ecx10 = eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4);
    eax11 = fun_1000a130(ecx10, ecx10);
    return eax11;
}

struct s130 {
    int32_t f0;
    signed char[248] pad252;
    int32_t f252;
};

/* (image base) */
int32_t image_base_ = 0x1000b29a;

void** fun_10018366(struct s130* ecx, struct s125** a2, int32_t a3, struct s124** a4);

/* (image base) */
int32_t image_base_ = 0x1000b238;

void** fun_100182d9(struct s125** ecx, struct s124** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    struct s130* eax9;
    int32_t edx10;
    void** eax11;
    void** eax12;
    int32_t esi13;

    GetProcessHeap();
    eax9 = reinterpret_cast<struct s130*>(HeapAlloc());
    if (eax9) {
        image_base_(eax9);
        eax9->f0 = 0x10001538;
        eax11 = fun_10018366(eax9, ecx, edx10, a2);
        if (reinterpret_cast<signed char>(eax11) < reinterpret_cast<signed char>(0) || (eax12 = reinterpret_cast<void**>(image_base_(a2, eax9)), reinterpret_cast<signed char>(eax12) < reinterpret_cast<signed char>(0))) {
            image_base_(eax9, 0);
        }
    }
    goto esi13;
}

uint32_t fun_10017335(void** ecx, void*** a2) {
    void** v3;
    int32_t eax4;
    void** esi5;
    void** eax6;
    uint32_t eax7;

    if (*reinterpret_cast<void***>(ecx + 4)) {
        v3 = *reinterpret_cast<void***>(ecx + 4);
        eax4 = reinterpret_cast<int32_t>(GetProcessHeap(0, v3));
        HeapFree(eax4, 0, v3);
    }
    eax6 = fun_1000b6b9(8, 0x10002b64, esi5);
    if (!eax6) {
        eax6 = reinterpret_cast<void**>(0);
    } else {
        *reinterpret_cast<void***>(eax6) = reinterpret_cast<void**>(0x10001e00);
        *reinterpret_cast<void***>(eax6 + 4) = *a2;
    }
    *reinterpret_cast<void***>(ecx + 4) = eax6;
    eax7 = -reinterpret_cast<unsigned char>(eax6);
    return (eax7 - (eax7 + reinterpret_cast<uint1_t>(eax7 < eax7 + reinterpret_cast<uint1_t>(!!eax6))) & 0x7ff8fff2) - 0x7ff8fff2;
}

/* (image base) */
int32_t image_base_ = 0x1000b3cb;

void fun_1001738f(void** ecx, void** a2) {
    void** esi3;
    int32_t ecx4;
    void** eax5;

    esi3 = ecx;
    fun_10014498(ecx);
    __asm__("fld dword [ebp+0x8]");
    ecx4 = 7;
    while (ecx4) {
        --ecx4;
        esi3 = esi3 + 4;
    }
    __asm__("fstp dword [ebp-0x1c]");
    __asm__("fldz ");
    __asm__("fstp dword [ebp-0x18]");
    __asm__("fld dword [esi+0x8]");
    __asm__("fstp dword [ebp-0x14]");
    eax5 = reinterpret_cast<void**>(image_base_());
    *reinterpret_cast<void***>(esi3) = eax5;
    return;
}

uint32_t fun_100175e2();

/* (image base) */
int32_t image_base_ = 0x1000a9d4;

int32_t fun_1001754e(int32_t a1, uint32_t* a2) {
    uint32_t eax3;
    int32_t edi4;
    int32_t edx5;
    int32_t eax6;

    *a2 = 0;
    eax3 = fun_100175e2();
    if (!eax3) {
        edi4 = 0x8007000e;
    } else {
        eax6 = reinterpret_cast<int32_t>(image_base_(eax3, 0, edx5, a1));
        edi4 = eax6;
        if (edi4 < 0) {
            image_base_(eax3, 0, 0, edx5, a1);
        } else {
            *a2 = eax3;
        }
    }
    return edi4;
}

/* (image base) */
int32_t image_base_ = 0x1000af3a;

void fun_10017cc0(int32_t* ecx, int32_t a2) {
    goto image_base_;
}

int32_t fun_1001778c(void* ecx) {
    struct s128*** v2;
    struct s128** eax3;
    int32_t eax4;
    int32_t esi5;

    *v2 = reinterpret_cast<struct s128**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<struct s128**>(HeapAlloc());
    if (eax3) {
        image_base_(eax3);
        *eax3 = reinterpret_cast<struct s128*>(0x100012e4);
        eax4 = reinterpret_cast<int32_t>(image_base_(eax3, 0x10000000, "S", 0, 0, 0));
        if (eax4 < 0) {
            fun_1001759b(eax3, 0x10000000, "S", 0, 0, 0);
        } else {
            *v2 = eax3;
        }
    }
    goto esi5;
}

void** fun_100178bb();

/* (image base) */
int32_t image_base_ = 0x1000ae84;

/* (image base) */
int32_t image_base_ = 0x1000aec6;

/* (image base) */
int32_t image_base_ = 0x1000a9de;

/* (image base) */
int32_t image_base_ = 0x1000aee4;

/* (image base) */
int32_t image_base_ = 0x1000a9e8;

/* (image base) */
int32_t image_base_ = 0x1000a9f2;

/* (image base) */
int32_t image_base_ = 0x1000aed0;

/* (image base) */
int32_t image_base_ = 0x1000aeda;

/* (image base) */
int32_t image_base_ = 0x1000a9fc;

/* (image base) */
int32_t image_base_ = 0x1000aa06;

void** fun_1001804c(struct s105* ecx, struct s105* a2) {
    void* ebp3;
    uint32_t* edi4;
    void** eax5;
    void** esi6;
    uint32_t ecx7;
    void* v8;
    int32_t eax9;
    void** eax10;
    void* v11;
    void** eax12;
    void** v13;
    int32_t v14;
    void** eax15;
    void* v16;
    int32_t v17;
    void** eax18;
    uint32_t ecx19;
    uint32_t ecx20;
    int32_t v21;
    int32_t v22;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    edi4 = &ecx->f264;
    eax5 = fun_100178bb();
    esi6 = eax5;
    if (reinterpret_cast<signed char>(esi6) >= reinterpret_cast<signed char>(0)) {
        ecx7 = *edi4;
        v8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp3) - 8);
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx7, 1, 28, 0, v8));
        eax10 = reinterpret_cast<void**>(image_base_(ecx, eax9, 1, 28, 0, v8));
        esi6 = eax10;
        if (reinterpret_cast<signed char>(esi6) < reinterpret_cast<signed char>(0) || (v11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp3) - 4), eax12 = reinterpret_cast<void**>(image_base_(ecx, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8)), esi6 = eax12, reinterpret_cast<signed char>(esi6) < reinterpret_cast<signed char>(0))) {
            addr_1001810e_3:
            if (*edi4) {
                image_base_(eax9, 1, 28, 0, v8);
                *edi4 = 0;
            }
        } else {
            v13 = g10024480;
            eax15 = reinterpret_cast<void**>(image_base_(v14, 0x3e9, v13, 0x10000000, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8));
            esi6 = eax15;
            if (reinterpret_cast<signed char>(esi6) >= reinterpret_cast<signed char>(0)) {
                v16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp3) - 12);
                eax18 = reinterpret_cast<void**>(image_base_(v17, "S", ecx, 0, 0, v16, 0x3e9, v13, 0x10000000, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8));
                esi6 = eax18;
                if (reinterpret_cast<signed char>(esi6) >= reinterpret_cast<signed char>(0)) {
                    ecx19 = *edi4;
                    image_base_(ecx19, ecx, "S", ecx, 0, 0, v16, 0x3e9, v13, 0x10000000, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8);
                    ecx20 = *edi4;
                    image_base_(ecx20, 5, ecx, "S", ecx, 0, 0, v16, 0x3e9, v13, 0x10000000, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8);
                }
                image_base_(ecx, v21, "S", ecx, 0, 0, v16, 0x3e9, v13, 0x10000000, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8);
            }
            image_base_(v22, 0x3e9, v13, 0x10000000, v11, 0, 0, 0, 0, eax9, 1, 28, 0, v8);
            if (reinterpret_cast<signed char>(esi6) < reinterpret_cast<signed char>(0)) 
                goto addr_1001810e_3;
        }
    }
    return esi6;
}

int32_t FindResourceExW = 0x263dc;

int32_t LoadResource = 0x263ee;

int32_t LockResource = 0x263fe;

signed char fun_100113c6(void** ecx, void** a2, uint32_t* a3, int16_t* a4) {
    int16_t* edi5;
    uint32_t ebx6;
    int32_t eax7;
    int32_t eax8;
    uint16_t* eax9;
    uint16_t* ecx10;
    uint32_t esi11;
    uint32_t edx12;
    uint32_t eax13;
    uint32_t ecx14;

    edi5 = a4;
    ebx6 = 0;
    *a3 = 0;
    if (edi5) {
        *edi5 = 0;
    }
    eax7 = reinterpret_cast<int32_t>(FindResourceExW());
    if (eax7 && ((eax8 = reinterpret_cast<int32_t>(LoadResource(ecx, eax7)), !!eax8) && (eax9 = reinterpret_cast<uint16_t*>(LockResource(eax8, ecx, eax7)), ecx10 = eax9, !!ecx10))) {
        esi11 = edx12 & 15;
        if (esi11) {
            do {
                ecx10 = ecx10 + *ecx10 + 1;
                --esi11;
            } while (esi11);
        }
        eax13 = *ecx10;
        if (!*reinterpret_cast<int16_t*>(&eax13)) {
            ecx14 = 0x1000316c;
        } else {
            ecx14 = reinterpret_cast<uint32_t>(ecx10 + 1);
        }
        *a3 = ecx14;
        if (edi5) {
            *edi5 = *reinterpret_cast<int16_t*>(&eax13);
        }
        *reinterpret_cast<signed char*>(&ebx6) = 1;
    }
    return *reinterpret_cast<signed char*>(&ebx6);
}

/* (image base) */
int32_t image_base_ = 0x1000aef8;

/* (image base) */
int32_t image_base_ = 0x1000af58;

void** fun_10017a07(int32_t ecx, uint32_t* a2, int32_t a3) {
    void* ebp4;
    uint32_t eax5;
    uint32_t v6;
    uint32_t* ebx7;
    int32_t v8;
    int32_t edx9;
    int32_t esi10;
    int32_t edx11;
    int32_t ecx12;
    int32_t v13;
    int32_t** edi14;
    int32_t esi15;
    int32_t edi16;
    int32_t eax17;
    int32_t eax18;
    void** eax19;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    v6 = eax5 ^ reinterpret_cast<uint32_t>(ebp4);
    ebx7 = a2;
    v8 = edx9;
    esi10 = 0x80004005;
    edx11 = ecx;
    ecx12 = 0;
    v13 = edx11;
    edi14 = reinterpret_cast<int32_t**>(0x10002080);
    *ebx7 = 0;
    do {
        if (**edi14 == edx11) 
            break;
        edi14 = edi14 + 3;
        ++ecx12;
    } while (reinterpret_cast<int32_t>(edi14) < 0x1000208c);
    goto addr_10017a4b_4;
    esi15 = *reinterpret_cast<int32_t*>((ecx12 + ecx12 * 2) * 4 + 0x10002084);
    if (!esi15) {
        esi10 = 1;
    } else {
        edi16 = v8;
        ecx12 = esi15;
        image_base_(ecx12, edi16, ebx7);
        eax17 = reinterpret_cast<int32_t>(esi15(ecx12, edi16, ebx7));
        edx11 = v13;
        esi10 = eax17;
        goto addr_10017a79_8;
    }
    addr_10017a76_9:
    edi16 = v8;
    addr_10017a79_8:
    if (esi10 < 0) {
        eax18 = reinterpret_cast<int32_t>(image_base_(ecx12, edx11, edi16, ebx7));
        image_base_(ecx12, eax18, edx11, edi16, ebx7);
    }
    eax19 = fun_1000a130(v6 ^ reinterpret_cast<uint32_t>(ebp4));
    return eax19;
    addr_10017a4b_4:
    goto addr_10017a76_9;
}

int32_t fun_100177f6(void* ecx) {
    struct s128*** v2;
    struct s128** eax3;
    int32_t eax4;
    int32_t esi5;

    *v2 = reinterpret_cast<struct s128**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<struct s128**>(HeapAlloc());
    if (eax3) {
        image_base_(eax3);
        *eax3 = reinterpret_cast<struct s128*>(0x10001330);
        eax4 = reinterpret_cast<int32_t>(image_base_(eax3, 0x10000000, "S", 0, 0, 0));
        if (eax4 < 0) {
            fun_1001759b(eax3, 0x10000000, "S", 0, 0, 0);
        } else {
            *v2 = eax3;
        }
    }
    goto esi5;
}

uint32_t fun_10018128(int32_t ecx, void** a2, void** a3, int32_t* a4) {
    uint32_t eax5;
    uint32_t ecx6;
    int16_t v7;
    int16_t v8;
    int32_t ecx9;
    uint1_t zf10;
    int16_t v11;
    int32_t v12;

    eax5 = reinterpret_cast<uint32_t>(RegGetValueW());
    ecx6 = eax5;
    if (ecx6) {
        if (ecx6 == 0xea) {
            ecx6 = 13;
        }
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx6) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx6 == 0))) 
            goto addr_100181b6_5;
    } else {
        ecx6 = 13;
        if (1) {
            if (48 != v7 && 49 != v8) {
                addr_100181b6_5:
                ecx6 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&ecx6)) | 0x80070000;
            } else {
                ecx9 = 0;
                zf10 = reinterpret_cast<uint1_t>(49 == v11);
                goto addr_1001817c_9;
            }
        } else {
            if (!v12) 
                goto addr_10018177_11;
            if (v12 != 1) 
                goto addr_100181b6_5;
            addr_10018177_11:
            ecx9 = 0;
            zf10 = reinterpret_cast<uint1_t>(v12 == 1);
            goto addr_1001817c_9;
        }
    }
    addr_100181bf_13:
    return ecx6;
    addr_1001817c_9:
    *reinterpret_cast<unsigned char*>(&ecx9) = zf10;
    *a4 = ecx9;
    ecx6 = 0;
    goto addr_100181bf_13;
}

/* (image base) */
int32_t image_base_ = 0x1000b242;

/* (image base) */
int32_t image_base_ = 0x1000b24c;

/* (image base) */
int32_t image_base_ = 0x1000b256;

/* (image base) */
int32_t image_base_ = 0x1000b260;

void** fun_10018366(struct s130* ecx, struct s125** a2, int32_t a3, struct s124** a4) {
    void* ebp5;
    uint32_t eax6;
    int32_t eax7;
    struct s125* esi8;
    void* v9;
    int32_t ecx10;
    int32_t eax11;
    void* v12;
    int32_t eax13;
    void** v14;
    int32_t eax15;
    void* v16;
    int32_t eax17;
    void* v18;
    struct s125* esi19;
    int32_t ecx20;
    int32_t eax21;
    void* v22;
    int32_t eax23;
    uint32_t ecx24;
    void** eax25;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    ecx->f252 = a3;
    eax7 = reinterpret_cast<int32_t>(image_base_(ecx));
    if (eax7 >= 0 && (esi8 = *a2, v9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x194), ecx10 = esi8->f44, image_base_(ecx10, a2, a3, 0, v9, 0xc8), eax11 = reinterpret_cast<int32_t>(esi8->f44(ecx10, a2, a3, 0, v9, 0xc8)), eax11 >= 0)) {
        v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x194);
        eax13 = reinterpret_cast<int32_t>(image_base_(ecx10, v12, 0, a2, a3, 0, v9, 0xc8));
        if (eax13) {
            v14 = image_base_;
            eax15 = reinterpret_cast<int32_t>(image_base_(ecx, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8));
            image_base_(eax13, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8);
            if (eax15 >= 0 && ((v16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x194), eax17 = reinterpret_cast<int32_t>(image_base_(ecx, v16, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8)), eax17 >= 0) && ((v18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x194), esi19 = *a2, ecx20 = esi19->f48, image_base_(ecx20, a2, a3, v18, 0xc8, v16, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8), eax21 = reinterpret_cast<int32_t>(esi19->f48(ecx20, a2, a3, v18, 0xc8, v16, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8)), eax21 >= 0) && (v22 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 0x194), eax23 = reinterpret_cast<int32_t>(image_base_(ecx, v22, a2, a3, v18, 0xc8, v16, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8)), eax23 >= 0)))) {
                image_base_(ecx, 0x300000, v22, a2, a3, v18, 0xc8, v16, v14, 1, eax13, v12, 0, a2, a3, 0, v9, 0xc8);
            }
        }
    }
    ecx24 = eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5);
    eax25 = fun_1000a130(ecx24, ecx24);
    return eax25;
}

int32_t fun_1001826f(void* ecx) {
    struct s128*** v2;
    struct s128** eax3;
    int32_t eax4;
    int32_t esi5;

    *v2 = reinterpret_cast<struct s128**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<struct s128**>(HeapAlloc());
    if (eax3) {
        image_base_(eax3);
        *eax3 = reinterpret_cast<struct s128*>(0x100014ec);
        eax4 = reinterpret_cast<int32_t>(image_base_(eax3, 0x10000000, "C", 0, 0, 0));
        if (eax4 < 0) {
            fun_1001759b(eax3, 0x10000000, "C", 0, 0, 0);
        } else {
            *v2 = eax3;
        }
    }
    goto esi5;
}

int32_t fun_1001868f(void* ecx) {
    struct s128*** v2;
    struct s128** eax3;
    int32_t eax4;
    int32_t esi5;

    *v2 = reinterpret_cast<struct s128**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<struct s128**>(HeapAlloc());
    if (eax3) {
        image_base_(eax3);
        *eax3 = reinterpret_cast<struct s128*>(0x100016ac);
        eax4 = reinterpret_cast<int32_t>(image_base_(eax3, 0x10000000, "C", 0, 0, 0));
        if (eax4 < 0) {
            fun_1001759b(eax3, 0x10000000, "C", 0, 0, 0);
        } else {
            *v2 = eax3;
        }
    }
    goto esi5;
}

void fun_1001897d(struct s65* ecx) {
    int32_t esi2;
    int32_t edi3;
    int32_t edx4;
    signed char* esi5;
    signed char* edx6;
    int32_t edx7;
    int32_t edx8;

    esi2 = 0;
    edi3 = 0x10002e05;
    if (edx4) {
        esi5 = edx6;
        edi3 = edx7;
        edx8 = reinterpret_cast<int32_t>(esi5 + 1);
        do {
            ++esi5;
        } while (*esi5);
        esi2 = reinterpret_cast<int32_t>(esi5) - edx8;
    }
    ecx->f4 = 0;
    ecx->f12 = 0;
    ecx->f0 = edi3;
    ecx->f8 = esi2 + 1;
    return;
}

struct s131 {
    signed char[12] pad12;
    int32_t f12;
};

struct s132 {
    signed char[8] pad8;
    int32_t f8;
};

void** fun_100189af() {
    void* ebp1;
    uint32_t eax2;
    int32_t eax3;
    void* v4;
    void* v5;
    struct s131* esi6;
    struct s131** v7;
    int32_t ecx8;
    int32_t eax9;
    int32_t v10;
    int32_t esi11;
    struct s132** v12;
    uint32_t ecx13;
    void** eax14;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = g100240c4;
    g10024748 = 0;
    eax3 = reinterpret_cast<int32_t>(CoCreateInstance());
    if (eax3 >= 0) {
        v4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp1) - 36);
        v5 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp1) - 28);
        esi6 = *v7;
        ecx8 = esi6->f12;
        image_base_(ecx8, v7, v5, v4);
        eax9 = reinterpret_cast<int32_t>(esi6->f12(ecx8, v7, v5, v4));
        if (eax9 >= 0) {
            g10024748 = v10;
        }
        esi11 = (*v12)->f8;
        image_base_(esi11, v12, v7, v5, v4);
        esi11(esi11, v12, v7, v5, v4);
    }
    ecx13 = eax2 ^ reinterpret_cast<uint32_t>(ebp1) ^ reinterpret_cast<uint32_t>(ebp1);
    eax14 = fun_1000a130(ecx13, ecx13);
    return eax14;
}

int32_t GetCurrentThread = 0x26f8e;

int32_t OpenThreadToken = 0x26f7c;

void** fun_10018bab(uint32_t* a1) {
    int32_t eax2;
    uint32_t eax3;
    int1_t sf4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int1_t sf8;

    *a1 = 0;
    GetCurrentThread();
    eax2 = reinterpret_cast<int32_t>(OpenThreadToken());
    if (!eax2) {
        eax3 = reinterpret_cast<uint32_t>(GetLastError());
        sf4 = reinterpret_cast<int32_t>(eax3) < reinterpret_cast<int32_t>(0);
        if (!(reinterpret_cast<uint1_t>(sf4) | reinterpret_cast<uint1_t>(eax3 == 0))) {
            eax3 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax3)) | 0x80070000;
            sf4 = reinterpret_cast<int32_t>(eax3) < reinterpret_cast<int32_t>(0);
        }
        if (sf4) 
            goto addr_10018bea_5;
    } else {
        goto addr_10018c22_7;
    }
    addr_10018c1c_8:
    goto addr_10018c21_9;
    addr_10018bea_5:
    if (eax3 != 0x800703f0) {
        addr_10018c21_9:
    } else {
        eax5 = reinterpret_cast<int32_t>(GetCurrentProcess(8, a1));
        eax6 = reinterpret_cast<int32_t>(OpenProcessToken(eax5, 8, a1));
        if (!eax6) {
            eax7 = reinterpret_cast<int32_t>(GetLastError(eax5, 8, a1));
            sf8 = eax7 < 0;
            if (!(reinterpret_cast<uint1_t>(sf8) | reinterpret_cast<uint1_t>(eax7 == 0))) {
                sf8 = reinterpret_cast<int32_t>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax7)) | 0x80070000) < reinterpret_cast<int32_t>(0);
            }
            if (sf8) 
                goto addr_10018c21_9; else 
                goto addr_10018c1c_8;
        } else {
            goto addr_10018c21_9;
        }
    }
    addr_10018c22_7:
    goto 0;
}

struct s133 {
    signed char[8] pad8;
    int32_t f8;
    signed char[16] pad28;
    int32_t f28;
    signed char[20] pad52;
    int32_t f52;
};

/* OLEAUT32.dll:2 */
int32_t OLEAUT32_dll_2 = 0x80000002;

/* OLEAUT32.dll:6 */
int32_t OLEAUT32_dll_6 = 0x80000006;

void** fun_10018f73(struct s133** ecx, uint32_t* a2) {
    void* ebp3;
    uint32_t eax4;
    struct s133* esi5;
    int32_t ecx6;
    int32_t eax7;
    int32_t ebx8;
    int32_t eax9;
    struct s133* ecx10;
    int32_t esi11;
    int32_t esi12;
    uint32_t ecx13;
    void** eax14;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = 0;
    esi5 = *ecx;
    ecx6 = esi5->f28;
    image_base_(ecx6);
    eax7 = reinterpret_cast<int32_t>(esi5->f28(ecx6));
    if (eax7 >= 0) {
        eax9 = reinterpret_cast<int32_t>(OLEAUT32_dll_2(ecx6, "\\", ebx8));
        if (eax9) {
            ecx10 = *ecx;
            esi11 = ecx10->f52;
            image_base_(esi11, ecx, eax9, a2, "\\", ebx8);
            esi11(esi11, ecx, eax9, a2, "\\", ebx8);
            OLEAUT32_dll_6(esi11, eax9, ecx, eax9, a2, "\\", ebx8);
        }
        esi12 = (*ecx)->f8;
        image_base_(esi12);
        esi12(esi12);
    }
    ecx13 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax14 = fun_1000a130(ecx13, ecx13);
    return eax14;
}

int32_t fun_1000a689();

void** fun_10019008(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    int32_t eax10;
    uint32_t eax11;
    int1_t sf12;

    eax10 = fun_1000a689();
    if (eax10) {
        if (eax10 != 0x102) {
            if (eax10 == -1) {
                eax11 = reinterpret_cast<uint32_t>(GetLastError());
                sf12 = reinterpret_cast<int32_t>(eax11) < reinterpret_cast<int32_t>(0);
                if (!(reinterpret_cast<uint1_t>(sf12) | reinterpret_cast<uint1_t>(eax11 == 0))) {
                    eax11 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax11)) | 0x80070000;
                    sf12 = reinterpret_cast<int32_t>(eax11) < reinterpret_cast<int32_t>(0);
                }
                if (sf12) {
                }
            }
        }
    }
    goto 0x7530;
}

void fun_1000a68f(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    goto CloseHandle;
}

void** fun_1000a695(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    goto CoCreateInstance;
}

int32_t CreateEventW = 0x26326;

void** fun_1000a6a1(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    goto CreateEventW;
}

void** fun_10018ebe(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44);

void** g100081a8 = reinterpret_cast<void**>(0);

void** g100081ac = reinterpret_cast<void**>(0);

void** g100081b0 = reinterpret_cast<void**>(0);

void** g100081b4 = reinterpret_cast<void**>(0);

void** fun_10018ce0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42) {
    void*** ebp43;
    uint32_t eax44;
    void** v45;
    void** edi46;
    void** esi47;
    void** ebx48;
    void** v49;
    void** v50;
    void** v51;
    void** ebp52;
    void** v53;
    void** v54;
    void** v55;
    void** eax56;
    void** v57;
    void** v58;
    void** eax59;
    void** ebx60;
    void** v61;
    void** ecx62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** eax67;

    ebp43 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax44 = g100240c4;
    v45 = reinterpret_cast<void**>(eax44 ^ reinterpret_cast<uint32_t>(ebp43));
    fun_100136b5(ebp43 + 0xfffffff4, edi46, esi47, ebx48, v49, v50, 0, v51, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    eax56 = fun_10018ebe(ebp43 + 0xfffffff4, edi46, esi47, ebx48, v53, v54, 0, v55, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
    if (reinterpret_cast<signed char>(eax56) >= reinterpret_cast<signed char>(0)) {
        fun_100136b5(ebp43 + 0xfffffff8, edi46, esi47, ebx48, v57, v58, 0, 0, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
        eax59 = fun_10018f73(0, ebp43 + 0xfffffff8);
        if (reinterpret_cast<signed char>(eax59) >= reinterpret_cast<signed char>(0)) {
            fun_100136b5(ebp43 + 0xfffffff0, edi46, esi47, ebx48, 0, 0, 0, 0, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
            ebx60 = g0;
            v61 = reinterpret_cast<void**>(ebp43 + 0xfffffff0);
            ecx62 = *reinterpret_cast<void***>(ebx60 + 48);
            v63 = g100081a8;
            v64 = g100081ac;
            v65 = g100081b0;
            v66 = g100081b4;
            image_base_(ecx62, 0, v63, v64, v65, v66, v61);
            *reinterpret_cast<void***>(ebx60 + 48)(ecx62, 0, v63, v64, v65, v66, v61);
            fun_100136b5(ebp43 + 0xfffffff0, 0, v63, v64, v65, v66, v61, edi46, esi47, ebx48, 0, 0, 0, 0, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36);
        }
        fun_100136b5(ebp43 + 0xfffffff8, edi46, esi47, ebx48, 0, 0, 0, 0, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    }
    fun_100136b5(ebp43 + 0xfffffff4, edi46, esi47, ebx48, 0, 0, 0, 0, v45, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    eax67 = fun_1000a130(reinterpret_cast<unsigned char>(v45) ^ reinterpret_cast<uint32_t>(ebp43));
    return eax67;
}

void** fun_10018ebe(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44) {
    void*** ebp45;
    uint32_t eax46;
    void** v47;
    void** ecx48;
    void** edi49;
    void** esi50;
    void** ebx51;
    void** ebp52;
    void** v53;
    void** eax54;
    uint32_t ecx55;
    void** eax56;
    void** ebx57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** ecx70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** eax75;

    ebp45 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax46 = g100240c4;
    v47 = reinterpret_cast<void**>(eax46 ^ reinterpret_cast<uint32_t>(ebp45));
    ecx48 = reinterpret_cast<void**>(ebp45 + 0xfffffff8);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    fun_100136b5(ecx48, edi49, esi50, ebx51, ecx, 0, v47, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
    v53 = reinterpret_cast<void**>(ebp45 + 0xfffffff8);
    eax54 = fun_1000a695(ecx48, 0x100082cc, 0, 1, 0x100082dc, v53, edi49, esi50, ebx51, ecx, 0, v47, ebp52, __return_address());
    if (reinterpret_cast<signed char>(eax54) < reinterpret_cast<signed char>(0)) {
        addr_10018f58_2:
        fun_100136b5(ebp45 + 0xfffffff8, 0x100082cc, 0, 1, 0x100082dc, v53, edi49, esi50, ebx51, ecx, 0, v47, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
        ecx55 = reinterpret_cast<unsigned char>(v47) ^ reinterpret_cast<uint32_t>(ebp45);
        eax56 = fun_1000a130(ecx55, ecx55);
        return eax56;
    } else {
        ebx57 = g0;
        v58 = g100081a8;
        v59 = g100081ac;
        v60 = g100081b0;
        v61 = g100081b4;
        v62 = g100081a8;
        v63 = g100081ac;
        v64 = g100081b0;
        v65 = g100081b4;
        v66 = g100081a8;
        v67 = g100081ac;
        v68 = g100081b0;
        v69 = g100081b4;
        ecx70 = *reinterpret_cast<void***>(ebx57 + 40);
        v71 = g100081a8;
        v72 = g100081ac;
        v73 = g100081b0;
        v74 = g100081b4;
        image_base_(ecx70, 0, v71, v72, v73, v74, v66, v67, v68, v69, v62, v63, v64, v65, v58, v59, v60, v61);
        eax75 = reinterpret_cast<void**>(*reinterpret_cast<void***>(ebx57 + 40)(ecx70, 0, v71, v72, v73, v74, v66, v67, v68, v69, v62, v63, v64, v65, v58, v59, v60, v61));
        if (reinterpret_cast<signed char>(eax75) < reinterpret_cast<signed char>(0)) 
            goto addr_10018f58_2;
    }
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    goto addr_10018f58_2;
}

struct s134 {
    signed char[140] pad140;
    int32_t f140;
};

/* (image base) */
int32_t image_base_ = 0x1000b8f2;

struct s135 {
    signed char[40] pad40;
    int32_t f40;
};

void** fun_100190ac() {
    void* ebp1;
    uint32_t eax2;
    struct s134*** edx3;
    struct s134** eax4;
    struct s134* ecx5;
    int32_t esi6;
    int32_t esi7;
    struct s135** eax8;
    struct s135* ecx9;
    int32_t esi10;
    signed char al11;
    void** eax12;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = g100240c4;
    *edx3 = reinterpret_cast<struct s134**>(0);
    eax4 = reinterpret_cast<struct s134**>(image_base_());
    if (!eax4 || (ecx5 = *eax4, esi6 = ecx5->f140, image_base_(esi6, esi7), eax8 = reinterpret_cast<struct s135**>(esi6(eax4, esi7)), image_base_(eax4, esi7), ecx9 = *eax8, esi10 = ecx9->f40, image_base_(esi10), al11 = reinterpret_cast<signed char>(esi10(eax8)), al11 == 0)) {
        *edx3 = reinterpret_cast<struct s134**>(0);
    } else {
        *edx3 = eax4;
    }
    eax12 = fun_1000a130(eax2 ^ reinterpret_cast<uint32_t>(ebp1) ^ reinterpret_cast<uint32_t>(ebp1));
    return eax12;
}

void** fun_1001962f(void** ecx) {
    fun_100192d7(ecx);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001e54);
    *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001e3c);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(6);
    *reinterpret_cast<unsigned char*>(ecx + 50) = 1;
    return ecx;
}

void** fun_100192d7(void** ecx) {
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001dd8);
    *reinterpret_cast<void***>(ecx + 32) = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(ecx + 36) = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 40) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001e70);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001e3c);
    return ecx;
}

struct s136 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s137 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_10019658(void** ecx) {
    struct s101* edi2;
    struct s136* edi3;
    struct s137* edi4;

    fun_100192d7(ecx);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001e20);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001e3c);
    edi2 = reinterpret_cast<struct s101*>(ecx + 72);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 88) = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 56) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 60) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 64) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 92) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 96) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 68) = reinterpret_cast<void**>(6);
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(0x101);
    edi2->f0 = reinterpret_cast<void**>(0);
    edi3 = reinterpret_cast<struct s136*>(&edi2->f4);
    edi3->f0 = reinterpret_cast<void**>(0);
    edi4 = reinterpret_cast<struct s137*>(&edi3->f4);
    edi4->f0 = reinterpret_cast<void**>(0);
    edi4->f4 = reinterpret_cast<void**>(0);
    return ecx;
}

void fun_100196a3(void** ecx) {
    void** esi2;
    void** eax3;
    void*** ebx4;
    int1_t zf5;
    void** v6;
    void** edi7;
    uint32_t edi8;
    void** ecx9;
    void** edi10;
    void** v11;
    int32_t eax12;

    esi2 = ecx;
    eax3 = *reinterpret_cast<void***>(esi2 + 16);
    ebx4 = reinterpret_cast<void***>(esi2 + 8);
    *reinterpret_cast<void***>(esi2) = reinterpret_cast<void**>(0x10001e70);
    *ebx4 = reinterpret_cast<void**>(0x10001e3c);
    *reinterpret_cast<signed char*>(esi2 + 27) = 1;
    if (eax3) {
        zf5 = *reinterpret_cast<signed char*>(esi2 + 26) == 0;
        v6 = edi7;
        if (!zf5 && (edi8 = 0, !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3)) & 0xfffffff))) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 16))) & 0x10000000)) {
                    ecx9 = *reinterpret_cast<void***>(esi2 + 16) + 4;
                } else {
                    ecx9 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 16) + 4);
                }
                ecx = *reinterpret_cast<void***>(ecx9 + edi8 * 4);
                image_base_(ecx, ebx4, v6);
                ++edi8;
            } while (edi8 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 16))) & 0xfffffff));
        }
        edi10 = *reinterpret_cast<void***>(esi2 + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10)) & 0x10000000) {
            if (*reinterpret_cast<void***>(edi10 + 4)) {
                v11 = *reinterpret_cast<void***>(edi10 + 4);
                eax12 = reinterpret_cast<int32_t>(GetProcessHeap(ecx, 0, v11, v6));
                HeapFree(ecx, eax12, 0, v11, v6);
                *reinterpret_cast<void***>(edi10 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(edi10 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(edi10) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi10)) & 0xe0000000);
        GetProcessHeap(ecx, 0, edi10, v6);
        HeapFree(ecx);
    }
    *reinterpret_cast<void***>(esi2) = reinterpret_cast<void**>(0x1000183c);
    return;
}

int32_t EtwTraceMessage = 0x27028;

void fun_1001c7d7(void** a1, void** a2, void** a3, uint32_t a4) {
    void* ebp5;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 21, reinterpret_cast<int32_t>(ebp5) + 16, 4, reinterpret_cast<int32_t>(ebp5) + 20, 4, 0);
    return;
}

void** fun_1001bf82(void** ecx);

void** fun_1001a116(void** ecx, void** a2, void** a3, void** a4, void** a5);

void fun_1001c6d3(void** a1, void** a2, void** a3, void** a4);

void** fun_1001c368(void** ecx);

void** fun_10019b4b(void** ecx, void** a2) {
    void* ebp3;
    uint32_t eax4;
    void** eax5;
    void** esi6;
    signed char al7;
    void** eax8;
    void** v9;
    void** v10;
    void** edi11;
    void** esi12;
    void** ebx13;
    void** eax14;
    void** ecx15;
    void** eax16;
    void** v17;
    void** v18;
    void** eax19;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    eax5 = fun_1001bf82(ecx);
    if (reinterpret_cast<signed char>(eax5) < reinterpret_cast<signed char>(0) || (esi6 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a2) + 8), image_base_(esi6), al7 = reinterpret_cast<signed char>(esi6()), al7 == 0)) {
        eax8 = image_base_;
        if (eax8 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8 + 28)) & 4) {
            v9 = *reinterpret_cast<void***>(eax8 + 20);
            v10 = *reinterpret_cast<void***>(eax8 + 16);
            fun_1001c676(23, v10, v9, edi11, esi12, ebx13);
        }
    } else {
        eax14 = fun_1001a116(ecx + 4, a2, a2, edi11, esi12);
        if (reinterpret_cast<signed char>(eax14) >= reinterpret_cast<signed char>(0)) {
            ecx15 = image_base_;
            if (ecx15 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx15 + 28)) & 8) {
                if (!*reinterpret_cast<void***>(ecx + 4)) {
                    eax16 = reinterpret_cast<void**>(0);
                } else {
                    eax16 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 4));
                }
                v17 = *reinterpret_cast<void***>(ecx15 + 20);
                v18 = *reinterpret_cast<void***>(ecx15 + 16);
                fun_1001c6d3(v18, v17, eax16 - 1, a2);
            }
            *reinterpret_cast<void***>(a2 + 4) = *reinterpret_cast<void***>(a2 + 4) + 1;
            *reinterpret_cast<signed char*>(a2 + 25) = 1;
            fun_1001c368(ecx);
        }
    }
    eax19 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax19;
}

void** fun_1001af64(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void* ebp7;
    uint32_t eax8;
    void** eax9;
    void** esi10;
    void** eax11;

    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax8 = g100240c4;
    __asm__("lock xadd [edi+0x4], eax");
    if (!1 && ecx) {
        eax9 = *reinterpret_cast<void***>(ecx);
        esi10 = *reinterpret_cast<void***>(eax9);
        image_base_(esi10);
        esi10(ecx);
    }
    eax11 = fun_1000a130(eax8 ^ reinterpret_cast<uint32_t>(ebp7) ^ reinterpret_cast<uint32_t>(ebp7));
    return eax11;
}

/* (image base) */
int32_t image_base_ = 0x1000aeee;

void fun_1001a508(void** ecx, void** a2, void** a3, void** a4) {
    if (*reinterpret_cast<void***>(ecx + 40) && a2 != 0xffffffff) {
        image_base_(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 28, 1, 0);
    }
    return;
}

/* (image base) */
int32_t image_base_ = 0x1000ae8e;

void fun_1001a13d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    if (*reinterpret_cast<void***>(ecx + 40) && a2 != 0xffffffff) {
        image_base_(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 28);
    }
    return;
}

void** fun_1001a4ee(void** ecx);

void** fun_1001bda4(void** ecx, void** a2, void** a3) {
    void* ebp4;
    uint32_t eax5;
    void** eax6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    eax6 = fun_1001a4ee(ecx);
    if (reinterpret_cast<signed char>(eax6) >= reinterpret_cast<signed char>(0)) {
        eax7 = *reinterpret_cast<void***>(ecx);
        ecx8 = *reinterpret_cast<void***>(eax7);
        esi9 = *reinterpret_cast<void***>(ecx8 + 0x88);
        image_base_(esi9, eax7, a2, a3);
        esi9(esi9, eax7, a2, a3);
    }
    eax10 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax10;
}

/* (image base) */
int32_t image_base_ = 0x1000b942;

/* (image base) */
int32_t image_base_ = 0x1000b938;

/* (image base) */
int32_t image_base_ = 0x1000b392;

struct s138 {
    int32_t f0;
    int32_t f4;
};

/* (image base) */
int32_t image_base_ = 0x1000ba34;

void fun_1001be33(void** ecx) {
    void* ebp2;
    void** ebx3;
    void** edx4;
    uint32_t ecx5;
    uint32_t v6;
    void* esi7;
    void* v8;
    void** edx9;
    int32_t v10;
    uint32_t eax11;
    uint32_t v12;
    void* v13;
    struct s138* eax14;
    int32_t v15;
    int32_t v16;
    int32_t eax17;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebx3 = ecx;
    if (*reinterpret_cast<signed char*>(ebx3 + 95) && (edx4 = *reinterpret_cast<void***>(ebx3 + 48), ecx5 = 0, v6 = 0, !!edx4)) {
        esi7 = reinterpret_cast<void*>(0);
        v8 = reinterpret_cast<void*>(0);
        do {
            if (ecx5 >= (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx4)) & 0xfffffff)) 
                break;
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx4)) & 0x10000000)) {
                edx9 = edx4 + 4;
            } else {
                edx9 = *reinterpret_cast<void***>(edx4 + 4);
            }
            v10 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi7) + reinterpret_cast<unsigned char>(edx9));
            eax11 = reinterpret_cast<uint32_t>(image_base_(v10));
            v12 = eax11 & 0xffefefff;
            image_base_(v10, v12);
            v13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 4);
            eax14 = reinterpret_cast<struct s138*>(image_base_(v10, v13, v12));
            v15 = eax14->f4;
            v16 = eax14->f0;
            eax17 = reinterpret_cast<int32_t>(image_base_(v10, v16, v15, 0, 0, 9, v13, v12));
            image_base_(v10, eax17, v16, v15, 0, 0, 9, v13, v12);
            if (!1) {
                image_base_(eax17, v16, v15, 0, 0, 9, v13, v12);
            }
            ecx5 = v6 + 1;
            edx4 = *reinterpret_cast<void***>(ebx3 + 48);
            esi7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(v8) + 16);
            v6 = ecx5;
            v8 = esi7;
        } while (edx4);
    }
    return;
}

/* (image base) */
int32_t image_base_ = 0x1000a65a;

void** fun_1001a116(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    int32_t eax6;

    eax6 = reinterpret_cast<int32_t>(image_base_());
    if (eax6 == -1) {
    }
    goto 0x7fffffff;
}

void fun_1001c676(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    int32_t edx7;

    EtwTraceMessage(a2, a3, 43, edx7, ecx, 0);
    return;
}

void** fun_1001b1b6(void** ecx, void** a2);

void** fun_1001a16f(void** ecx);

int32_t memmove = 0x271b8;

void** fun_1001a63d(void** ecx, uint32_t a2, void** a3, void** a4) {
    void** eax5;
    void** ecx6;
    void** v7;
    void** esi8;
    void** eax9;
    uint32_t ecx10;
    void** ebx11;
    void** eax12;
    uint32_t v13;

    eax5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & reinterpret_cast<unsigned char>(0xfffffff));
    ecx6 = eax5 + 1;
    v7 = ecx6;
    if (reinterpret_cast<unsigned char>(ecx6) < reinterpret_cast<unsigned char>(eax5) || reinterpret_cast<unsigned char>(ecx6) > reinterpret_cast<unsigned char>(0xfffffff)) {
        esi8 = reinterpret_cast<void**>(0x80070216);
    } else {
        esi8 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000) && reinterpret_cast<int1_t>(eax5 == 2)) {
            eax9 = fun_1001b1b6(ecx, ecx6);
            esi8 = eax9;
        }
        if (reinterpret_cast<signed char>(esi8) >= reinterpret_cast<signed char>(0)) {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000)) {
                ecx10 = a2;
                esi8 = reinterpret_cast<void**>(0);
                ebx11 = ecx + (ecx10 + 1) * 4;
            } else {
                eax12 = fun_1001a16f(ecx);
                ecx10 = a2;
                esi8 = eax12;
                if (reinterpret_cast<signed char>(esi8) < reinterpret_cast<signed char>(0)) {
                    ebx11 = v7;
                } else {
                    ebx11 = *reinterpret_cast<void***>(ecx + 4) + ecx10 * 4;
                }
            }
            if (reinterpret_cast<signed char>(esi8) >= reinterpret_cast<signed char>(0)) {
                v13 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0xfffffff) - ecx10 << 2;
                memmove(ebx11 + 4, ebx11, v13);
                *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ reinterpret_cast<unsigned char>(v7)) & 0xfffffff);
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x20000000) {
                    *reinterpret_cast<void***>(ebx11) = reinterpret_cast<void**>(0);
                }
                *reinterpret_cast<void***>(a3) = ebx11;
            }
        }
    }
    return esi8;
}

/* (image base) */
int32_t image_base_ = 0x1000b91a;

void** fun_1001c00e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** v8;
    void** esi9;
    uint32_t esi10;
    int32_t v11;
    uint32_t esi12;
    void** eax13;
    void** v14;
    void** v15;
    void** eax16;
    int32_t eax17;
    void** v18;
    void** edi19;
    void** esi20;
    void** ebx21;
    void** ebp22;

    v8 = ecx;
    esi9 = *reinterpret_cast<void***>(ecx + 4);
    if (reinterpret_cast<signed char>(esi9) > reinterpret_cast<signed char>(7)) {
        esi10 = reinterpret_cast<uint32_t>(esi9 - 8);
        if (!esi10) {
            v11 = 0xfd;
        } else {
            esi12 = esi10 - 3;
            if (!esi12) {
                goto addr_1001c053_6;
            } else {
                if (esi12 - 1) {
                    addr_1001c10a_8:
                    return eax13;
                } else {
                    addr_1001c0eb_9:
                    v14 = reinterpret_cast<void**>(1);
                    image_base_(a2, 1);
                    v15 = reinterpret_cast<void**>(1);
                    goto addr_1001c079_10;
                }
            }
        }
    } else {
        if (esi9 == 7) {
            v11 = 0xff;
        } else {
            if (reinterpret_cast<signed char>(esi9) < reinterpret_cast<signed char>(0)) 
                goto addr_1001c10a_8;
            if (reinterpret_cast<signed char>(esi9) <= reinterpret_cast<signed char>(1)) 
                goto addr_1001c087_15; else 
                goto addr_1001c03a_16;
        }
    }
    eax13 = reinterpret_cast<void**>(image_base_(a2, v11));
    goto addr_1001c10a_8;
    addr_1001c053_6:
    eax13 = reinterpret_cast<void**>(image_base_(a2, 1));
    goto addr_1001c10a_8;
    addr_1001c079_10:
    eax13 = reinterpret_cast<void**>(image_base_(a2, v15, v14));
    goto addr_1001c10a_8;
    addr_1001c087_15:
    *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<uint1_t>(esi9 == 0);
    *reinterpret_cast<unsigned char*>(&v8) = *reinterpret_cast<unsigned char*>(&eax16);
    image_base_(a2, eax16);
    eax13 = reinterpret_cast<void**>(image_base_(a2, v8, eax16));
    if (*reinterpret_cast<signed char*>(ecx + 9)) {
        eax17 = 0;
        *reinterpret_cast<unsigned char*>(&eax17) = reinterpret_cast<uint1_t>(esi9 == 0);
        eax13 = reinterpret_cast<void**>(image_base_(a2, eax17 * 2 - 3, v8, eax16));
    }
    if (*reinterpret_cast<signed char*>(ecx + 10)) {
        v18 = *reinterpret_cast<void***>(ecx + 20);
        eax13 = fun_1001b0f0(a2, v18, v8, eax16, edi19, esi20, ebx21, v8, ebp22, __return_address(), a2, a3, a4, a5, a6, a7);
        goto addr_1001c10a_8;
    }
    addr_1001c03a_16:
    if (esi9 == 2) {
        v14 = reinterpret_cast<void**>(0xfd);
        image_base_(a2, 0xfd);
        v15 = reinterpret_cast<void**>(0);
        image_base_(a2, 0, 0xfd);
        goto addr_1001c079_10;
    } else {
        if (esi9 == 4) {
            goto addr_1001c053_6;
        } else {
            if (esi9 == 6) 
                goto addr_1001c0eb_9;
            goto addr_1001c10a_8;
        }
    }
}

void** fun_1001a43a(void** ecx, void*** a2);

void** fun_1001a36c(void** ecx, void*** a2) {
    void** eax3;

    eax3 = fun_1001a43a(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    if (reinterpret_cast<signed char>(eax3) < reinterpret_cast<signed char>(0)) {
        *a2 = reinterpret_cast<void**>(0);
    } else {
        *a2 = ecx;
    }
    return eax3;
}

struct s139 {
    void** f0;
    signed char[3] pad4;
    uint32_t f4;
};

void** fun_1001b2d4(void** ecx, struct s139* a2);

void** fun_1001a2a3(void** ecx);

void** fun_1001a7cb(void** ecx, uint32_t a2, struct s139** a3) {
    struct s139* eax4;
    struct s139* ecx5;
    struct s139* v6;
    void** esi7;
    void** eax8;
    uint32_t ecx9;
    struct s139* ebx10;
    void** eax11;
    uint32_t v12;

    eax4 = reinterpret_cast<struct s139*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0xfffffff);
    ecx5 = reinterpret_cast<struct s139*>(&eax4->pad4);
    v6 = ecx5;
    if (reinterpret_cast<uint32_t>(ecx5) < reinterpret_cast<uint32_t>(eax4) || reinterpret_cast<uint32_t>(ecx5) > 0xfffffff) {
        esi7 = reinterpret_cast<void**>(0x80070216);
    } else {
        esi7 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000) && reinterpret_cast<int1_t>(eax4 == 1)) {
            eax8 = fun_1001b2d4(ecx, ecx5);
            esi7 = eax8;
        }
        if (reinterpret_cast<signed char>(esi7) >= reinterpret_cast<signed char>(0)) {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000)) {
                ecx9 = a2;
                ebx10 = reinterpret_cast<struct s139*>(ecx9 * 8 + 4 + reinterpret_cast<unsigned char>(ecx));
                esi7 = reinterpret_cast<void**>(0);
            } else {
                eax11 = fun_1001a2a3(ecx);
                ecx9 = a2;
                esi7 = eax11;
                if (reinterpret_cast<signed char>(esi7) < reinterpret_cast<signed char>(0)) {
                    ebx10 = v6;
                } else {
                    ebx10 = reinterpret_cast<struct s139*>(*reinterpret_cast<void***>(ecx + 4) + ecx9 * 8);
                }
            }
            if (reinterpret_cast<signed char>(esi7) >= reinterpret_cast<signed char>(0)) {
                v12 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0xfffffff) - ecx9 << 3;
                memmove(ebx10 + 1, ebx10, v12);
                *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ reinterpret_cast<uint32_t>(v6)) & 0xfffffff);
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x20000000) {
                    ebx10->f0 = reinterpret_cast<void**>(0);
                    ebx10->f4 = 0;
                }
                *a3 = ebx10;
            }
        }
    }
    return esi7;
}

void** fun_10019e98(void** ecx, void** a2, void** a3, void* a4, void* a5, void* a6, void* a7, int32_t a8, void** a9) {
    void* ebp10;
    uint32_t eax11;
    void** eax12;
    void** eax13;
    void** esi14;
    void** esi15;
    void** eax16;

    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax11 = g100240c4;
    eax12 = fun_1001a4ee(ecx);
    if (reinterpret_cast<signed char>(eax12) >= reinterpret_cast<signed char>(0)) {
        eax13 = *reinterpret_cast<void***>(ecx);
        esi14 = *reinterpret_cast<void***>(eax13);
        esi15 = *reinterpret_cast<void***>(esi14 + 0x98);
        image_base_(esi15, eax13, a2, a3, a4, a5, a6, 0, a8);
        esi15(esi15, eax13, a2, a3, a4, a5, a6, 0, a8);
    }
    eax16 = fun_1000a130(eax11 ^ reinterpret_cast<uint32_t>(ebp10) ^ reinterpret_cast<uint32_t>(ebp10));
    return eax16;
}

void fun_10019eee(void** ecx) {
    void** esi2;
    void** eax3;
    uint32_t edi4;
    void** ecx5;
    void** ecx6;

    esi2 = ecx;
    eax3 = *reinterpret_cast<void***>(esi2 + 16);
    if (eax3) {
        edi4 = 0;
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3)) & 0xfffffff) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 16))) & 0x10000000)) {
                    ecx5 = *reinterpret_cast<void***>(esi2 + 16) + 4;
                } else {
                    ecx5 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 16) + 4);
                }
                ecx6 = *reinterpret_cast<void***>(ecx5 + edi4 * 4);
                image_base_(ecx6);
                ++edi4;
            } while (edi4 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 16))) & 0xfffffff));
        }
        *reinterpret_cast<signed char*>(esi2 + 26) = 1;
    }
    return;
}

void** fun_1001a39b(void*** a1);

void** fun_1001a33d(void** ecx, void*** a2) {
    void** eax3;

    eax3 = fun_1001a39b(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    if (reinterpret_cast<signed char>(eax3) < reinterpret_cast<signed char>(0)) {
        *a2 = reinterpret_cast<void**>(0);
    } else {
        *a2 = ecx;
    }
    return eax3;
}

struct s140 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_1001b248(void** ecx, struct s140* a2);

void** fun_1001a209(void** ecx);

struct s141 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s142 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_1001a701(void** ecx, uint32_t a2, struct s140** a3) {
    struct s140* eax4;
    struct s140* ecx5;
    struct s140* v6;
    void** ebx7;
    void** eax8;
    uint32_t ecx9;
    struct s140* esi10;
    void** eax11;
    uint32_t v12;
    struct s141* edi13;
    struct s142* edi14;

    eax4 = reinterpret_cast<struct s140*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0xfffffff);
    ecx5 = reinterpret_cast<struct s140*>(&eax4->pad4);
    v6 = ecx5;
    if (reinterpret_cast<uint32_t>(ecx5) < reinterpret_cast<uint32_t>(eax4) || reinterpret_cast<uint32_t>(ecx5) > 0xfffffff) {
        ebx7 = reinterpret_cast<void**>(0x80070216);
    } else {
        ebx7 = reinterpret_cast<void**>(0);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000) && reinterpret_cast<int1_t>(eax4 == 1)) {
            eax8 = fun_1001b248(ecx, ecx5);
            ebx7 = eax8;
        }
        if (reinterpret_cast<signed char>(ebx7) >= reinterpret_cast<signed char>(0)) {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000)) {
                ecx9 = a2;
                esi10 = reinterpret_cast<struct s140*>(reinterpret_cast<unsigned char>(ecx + 4) + (ecx9 << 4));
                ebx7 = reinterpret_cast<void**>(0);
            } else {
                eax11 = fun_1001a209(ecx);
                ecx9 = a2;
                ebx7 = eax11;
                if (reinterpret_cast<signed char>(ebx7) < reinterpret_cast<signed char>(0)) {
                    esi10 = v6;
                } else {
                    esi10 = reinterpret_cast<struct s140*>((ecx9 << 4) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 4)));
                }
            }
            if (reinterpret_cast<signed char>(ebx7) >= reinterpret_cast<signed char>(0)) {
                v12 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) - ecx9 << 4;
                memmove(reinterpret_cast<uint32_t>(esi10) + 16, esi10, v12);
                *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ reinterpret_cast<uint32_t>(v6)) & 0xfffffff);
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x20000000) {
                    esi10->f0 = reinterpret_cast<void**>(0);
                    edi13 = reinterpret_cast<struct s141*>(&esi10->f4);
                    edi13->f0 = reinterpret_cast<void**>(0);
                    edi14 = reinterpret_cast<struct s142*>(&edi13->f4);
                    edi14->f0 = reinterpret_cast<void**>(0);
                    edi14->f4 = reinterpret_cast<void**>(0);
                    esi10 = reinterpret_cast<struct s140*>(&esi10->f4 + 4 + 4 + 4);
                }
                *a3 = esi10;
            }
        }
    }
    return ebx7;
}

void fun_1001c8c7(void** a1, void** a2, void** a3, int32_t a4, uint32_t a5, int32_t a6, int32_t a7) {
    void* ebp8;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 19, reinterpret_cast<int32_t>(ebp8) + 16, 4, reinterpret_cast<int32_t>(ebp8) + 20, 4, reinterpret_cast<int32_t>(ebp8) + 24, 4, reinterpret_cast<int32_t>(ebp8) + 28, 4, reinterpret_cast<int32_t>(ebp8) + 32, 4, reinterpret_cast<int32_t>(ebp8) - 12, 4, reinterpret_cast<int32_t>(ebp8) - 8, 4, reinterpret_cast<int32_t>(ebp8) - 4, 4, reinterpret_cast<int32_t>(ebp8) + 48, 4, 0, 1, 0, 0);
    return;
}

struct s143 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

/* (image base) */
int32_t image_base_ = 0x1000b910;

/* (image base) */
int32_t image_base_ = 0x1000b94c;

void** fun_1001befd(void** ecx);

void fun_1001afa8(void** ecx, uint32_t a2, void** a3);

void** fun_1001a052(void** ecx, void** a2, struct s143* a3) {
    void* ebp4;
    void** esi5;
    signed char al6;
    int32_t eax7;
    void** eax8;
    void*** eax9;
    void** eax10;
    void** ecx11;
    uint32_t v12;
    void** edi13;
    void** eax14;
    void** ecx15;
    void** ebx16;
    void** v17;
    uint32_t v18;
    void** eax19;
    void** ecx20;
    uint32_t v21;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    esi5 = reinterpret_cast<void**>(0x80070057);
    al6 = reinterpret_cast<signed char>(image_base_(a2));
    if (!al6 && ((eax7 = reinterpret_cast<int32_t>(image_base_(a2)), eax7 != -3) && (eax8 = fun_1001befd(ecx), esi5 = eax8, reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0)))) {
        eax9 = reinterpret_cast<void***>(ecx + 44);
        if (!*eax9) {
            eax10 = fun_1001a36c(ecx, eax9);
            esi5 = eax10;
        }
        if (reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0) && (ecx11 = *reinterpret_cast<void***>(ecx + 16), v12 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx11)) & 0xfffffff, eax14 = fun_1001a63d(ecx11, v12, reinterpret_cast<int32_t>(ebp4) + 0xfffffffc, edi13), esi5 = eax14, reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0))) {
            *reinterpret_cast<void***>(ecx) = a2;
            ecx15 = *reinterpret_cast<void***>(ecx + 44);
            ebx16 = a3->f0;
            v17 = a3->f4;
            v18 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx15)) & 0xfffffff;
            eax19 = fun_1001a7cb(ecx15, v18, reinterpret_cast<int32_t>(ebp4) - 4);
            esi5 = eax19;
            if (reinterpret_cast<signed char>(esi5) < reinterpret_cast<signed char>(0)) {
                ecx20 = *reinterpret_cast<void***>(ecx + 16);
                v21 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx20)) & 0xfffffff) - 1;
                fun_1001afa8(ecx20, v21, ecx20);
            } else {
                *reinterpret_cast<void***>(ecx) = ebx16;
                *reinterpret_cast<void***>(ecx + 4) = v17;
            }
        }
    }
    return esi5;
}

void** fun_1001a605(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9);

void** fun_1001befd(void** ecx) {
    void** ebx2;
    void** eax3;
    void** eax4;
    void** edi5;
    void** ebx6;
    void** eax7;
    void** esi8;
    void** v9;
    int32_t esi10;
    int32_t eax11;

    ebx2 = reinterpret_cast<void**>(0);
    if (!*reinterpret_cast<void***>(ecx + 16) && ((ebx2 = reinterpret_cast<void**>(0x8007000e), eax3 = reinterpret_cast<void**>(GetProcessHeap(8, 12)), eax4 = reinterpret_cast<void**>(HeapAlloc(eax3, 8, 12)), *reinterpret_cast<void***>(ecx + 16) = eax4, !!eax4) && (eax7 = fun_1001a605(eax4, ecx, ecx, eax3, 8, 12, edi5, ebx6, __return_address()), ebx2 = eax7, reinterpret_cast<signed char>(ebx2) < reinterpret_cast<signed char>(0)))) {
        esi8 = *reinterpret_cast<void***>(ecx + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi8)) & 0x10000000) {
            if (*reinterpret_cast<void***>(esi8 + 4)) {
                v9 = *reinterpret_cast<void***>(esi8 + 4);
                eax11 = reinterpret_cast<int32_t>(GetProcessHeap(eax4, 0, v9, esi10, eax3, 8, 12));
                HeapFree(eax4, eax11, 0, v9, esi10, eax3, 8, 12);
                *reinterpret_cast<void***>(esi8 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(esi8 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(esi8) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi8)) & 0xe0000000);
        GetProcessHeap(eax4, 0, esi8, esi10, eax3, 8, 12);
        HeapFree(eax4);
        *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(0);
    }
    return ebx2;
}

void** fun_1001b248(void** ecx, struct s140* a2) {
    void** eax3;
    uint32_t* ecx4;
    void** eax5;
    void** esi6;
    uint32_t eax7;
    void** eax8;
    void** ecx9;
    void** ebx10;
    void** edx11;
    void** ecx12;
    int32_t ebx13;

    eax3 = reinterpret_cast<void**>(-static_cast<uint32_t>(reinterpret_cast<uint1_t>(0 < static_cast<uint32_t>(reinterpret_cast<uint1_t>(0 < reinterpret_cast<uint32_t>(a2))))) & reinterpret_cast<uint32_t>(a2));
    ecx4 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    eax5 = fun_100119a9(ecx4, reinterpret_cast<unsigned char>(eax3) * 16, __intrinsic());
    esi6 = eax5;
    if (reinterpret_cast<signed char>(esi6) >= reinterpret_cast<signed char>(0)) {
        esi6 = reinterpret_cast<void**>(0);
        eax7 = reinterpret_cast<uint32_t>(GetProcessHeap(ecx4, 0, ecx));
        eax8 = reinterpret_cast<void**>(HeapAlloc(ecx4, eax7, 0, ecx));
        if (!eax8) {
            esi6 = reinterpret_cast<void**>(0x8007000e);
        } else {
            ecx9 = *reinterpret_cast<void***>(ecx);
            ebx10 = ecx + 4;
            if (!(reinterpret_cast<unsigned char>(ecx9) & 0x10000000)) {
                edx11 = ebx10;
            } else {
                edx11 = *reinterpret_cast<void***>(ebx10);
            }
            ecx12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx9) << 4);
            fun_1000c8ad(ecx12, eax8, edx11, ecx12, ebx13, eax7, 0, ecx);
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) | 0x10000000);
            *reinterpret_cast<void***>(ebx10) = eax8;
            *reinterpret_cast<void***>(ecx + 8) = eax3;
        }
    }
    return esi6;
}

/* (image base) */
int32_t image_base_ = 0x1000b906;

void** fun_1001a4ee(void** ecx) {
    if (!*reinterpret_cast<void***>(ecx)) {
        image_base_();
        goto 0x10008320;
    } else {
        return 0;
    }
}

void** fun_1001b1b6(void** ecx, void** a2) {
    void** eax3;
    uint32_t* ecx4;
    void** eax5;
    void** esi6;
    uint32_t eax7;
    void** eax8;
    void** ecx9;
    void** ebx10;
    void** edx11;
    void** ecx12;
    int32_t ebx13;

    eax3 = reinterpret_cast<void**>(-static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(0) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(0) < reinterpret_cast<unsigned char>(a2)))))))) & reinterpret_cast<unsigned char>(a2));
    ecx4 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    eax5 = fun_100119a9(ecx4, reinterpret_cast<unsigned char>(eax3) * 4, __intrinsic());
    esi6 = eax5;
    if (reinterpret_cast<signed char>(esi6) >= reinterpret_cast<signed char>(0)) {
        esi6 = reinterpret_cast<void**>(0);
        eax7 = reinterpret_cast<uint32_t>(GetProcessHeap(ecx4, 0, ecx));
        eax8 = reinterpret_cast<void**>(HeapAlloc(ecx4, eax7, 0, ecx));
        if (!eax8) {
            esi6 = reinterpret_cast<void**>(0x8007000e);
        } else {
            ecx9 = *reinterpret_cast<void***>(ecx);
            ebx10 = ecx + 4;
            if (!(reinterpret_cast<unsigned char>(ecx9) & 0x10000000)) {
                edx11 = ebx10;
            } else {
                edx11 = *reinterpret_cast<void***>(ebx10);
            }
            ecx12 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx9) & 0xfffffff) << 2);
            fun_1000c8ad(ecx12, eax8, edx11, ecx12, ebx13, eax7, 0, ecx);
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) | 0x10000000);
            *reinterpret_cast<void***>(ebx10) = eax8;
            *reinterpret_cast<void***>(ecx + 8) = eax3;
        }
    }
    return esi6;
}

int32_t HeapReAlloc = 0x2703a;

void** fun_1001a16f(void** ecx) {
    void* ebp2;
    void** eax3;
    void** edx4;
    void** eax5;
    void** eax6;
    void** edi7;
    uint32_t* ecx8;
    int1_t zf9;
    void** v10;
    int32_t eax11;
    void** eax12;
    int32_t eax13;
    void** eax14;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(edx4) <= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 8))) {
        addr_1001a202_2:
        return eax3;
    } else {
        eax5 = *reinterpret_cast<void***>(ecx + 8);
        eax6 = fun_100119a9(reinterpret_cast<int32_t>(ebp2) - 8, reinterpret_cast<unsigned char>(eax5) * 2, __intrinsic());
        if (reinterpret_cast<signed char>(eax6) < reinterpret_cast<signed char>(0) || (edi7 = ecx, reinterpret_cast<unsigned char>(edi7) < reinterpret_cast<unsigned char>(edx4))) {
            edi7 = edx4;
        }
        ecx8 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp2) - 4);
        eax3 = fun_100119a9(ecx8, reinterpret_cast<unsigned char>(edi7) * 4, __intrinsic());
        if (reinterpret_cast<signed char>(eax3) >= reinterpret_cast<signed char>(0)) 
            goto addr_1001a1bb_6;
    }
    addr_1001a1ff_7:
    *reinterpret_cast<void***>(ecx + 8) = edi7;
    goto addr_1001a202_2;
    addr_1001a1bb_6:
    zf9 = *reinterpret_cast<void***>(ecx + 4) == 0;
    if (!zf9) {
        v10 = *reinterpret_cast<void***>(ecx + 4);
        eax11 = reinterpret_cast<int32_t>(GetProcessHeap(ecx8, 0, v10, ecx));
        eax12 = reinterpret_cast<void**>(HeapReAlloc(ecx8, eax11, 0, v10, ecx));
        if (!eax12) 
            goto addr_1001a1da_9;
        *reinterpret_cast<void***>(ecx + 4) = eax12;
        goto addr_1001a1fc_11;
    }
    eax13 = reinterpret_cast<int32_t>(GetProcessHeap(ecx8, 0, ecx));
    eax14 = reinterpret_cast<void**>(HeapAlloc(ecx8, eax13, 0, ecx));
    *reinterpret_cast<void***>(ecx + 4) = eax14;
    if (!eax14) {
        addr_1001a1da_9:
        eax3 = reinterpret_cast<void**>(0x8007000e);
        goto addr_1001a202_2;
    } else {
        addr_1001a1fc_11:
        eax3 = eax3;
        goto addr_1001a1ff_7;
    }
}

void** fun_1001a209(void** ecx) {
    void* ebp2;
    void** eax3;
    void** edx4;
    void** eax5;
    void** eax6;
    void** edi7;
    uint32_t* ecx8;
    int1_t zf9;
    void** v10;
    int32_t eax11;
    void** eax12;
    int32_t eax13;
    void** eax14;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(edx4) <= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 8))) {
        addr_1001a29c_2:
        return eax3;
    } else {
        eax5 = *reinterpret_cast<void***>(ecx + 8);
        eax6 = fun_100119a9(reinterpret_cast<int32_t>(ebp2) - 8, reinterpret_cast<unsigned char>(eax5) * 2, __intrinsic());
        if (reinterpret_cast<signed char>(eax6) < reinterpret_cast<signed char>(0) || (edi7 = ecx, reinterpret_cast<unsigned char>(edi7) < reinterpret_cast<unsigned char>(edx4))) {
            edi7 = edx4;
        }
        ecx8 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp2) - 4);
        eax3 = fun_100119a9(ecx8, reinterpret_cast<unsigned char>(edi7) * 16, __intrinsic());
        if (reinterpret_cast<signed char>(eax3) >= reinterpret_cast<signed char>(0)) 
            goto addr_1001a255_6;
    }
    addr_1001a299_7:
    *reinterpret_cast<void***>(ecx + 8) = edi7;
    goto addr_1001a29c_2;
    addr_1001a255_6:
    zf9 = *reinterpret_cast<void***>(ecx + 4) == 0;
    if (!zf9) {
        v10 = *reinterpret_cast<void***>(ecx + 4);
        eax11 = reinterpret_cast<int32_t>(GetProcessHeap(ecx8, 0, v10, ecx));
        eax12 = reinterpret_cast<void**>(HeapReAlloc(ecx8, eax11, 0, v10, ecx));
        if (!eax12) 
            goto addr_1001a274_9;
        *reinterpret_cast<void***>(ecx + 4) = eax12;
        goto addr_1001a296_11;
    }
    eax13 = reinterpret_cast<int32_t>(GetProcessHeap(ecx8, 0, ecx));
    eax14 = reinterpret_cast<void**>(HeapAlloc(ecx8, eax13, 0, ecx));
    *reinterpret_cast<void***>(ecx + 4) = eax14;
    if (!eax14) {
        addr_1001a274_9:
        eax3 = reinterpret_cast<void**>(0x8007000e);
        goto addr_1001a29c_2;
    } else {
        addr_1001a296_11:
        eax3 = eax3;
        goto addr_1001a299_7;
    }
}

void** fun_1001b2d4(void** ecx, struct s139* a2) {
    void** eax3;
    uint32_t* ecx4;
    void** eax5;
    void** esi6;
    uint32_t eax7;
    void** eax8;
    void** ecx9;
    void** ebx10;
    void** edx11;
    void** ecx12;
    int32_t ebx13;

    eax3 = reinterpret_cast<void**>(-static_cast<uint32_t>(reinterpret_cast<uint1_t>(0 < static_cast<uint32_t>(reinterpret_cast<uint1_t>(0 < reinterpret_cast<uint32_t>(a2))))) & reinterpret_cast<uint32_t>(a2));
    ecx4 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    eax5 = fun_100119a9(ecx4, reinterpret_cast<unsigned char>(eax3) * 8, __intrinsic());
    esi6 = eax5;
    if (reinterpret_cast<signed char>(esi6) >= reinterpret_cast<signed char>(0)) {
        esi6 = reinterpret_cast<void**>(0);
        eax7 = reinterpret_cast<uint32_t>(GetProcessHeap(ecx4, 0, ecx));
        eax8 = reinterpret_cast<void**>(HeapAlloc(ecx4, eax7, 0, ecx));
        if (!eax8) {
            esi6 = reinterpret_cast<void**>(0x8007000e);
        } else {
            ecx9 = *reinterpret_cast<void***>(ecx);
            ebx10 = ecx + 4;
            if (!(reinterpret_cast<unsigned char>(ecx9) & 0x10000000)) {
                edx11 = ebx10;
            } else {
                edx11 = *reinterpret_cast<void***>(ebx10);
            }
            ecx12 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ecx9) & 0xfffffff) << 3);
            fun_1000c8ad(ecx12, eax8, edx11, ecx12, ebx13, eax7, 0, ecx);
            *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) | 0x10000000);
            *reinterpret_cast<void***>(ebx10) = eax8;
            *reinterpret_cast<void***>(ecx + 8) = eax3;
        }
    }
    return esi6;
}

void** fun_1001a2a3(void** ecx) {
    void* ebp2;
    void** eax3;
    void** edx4;
    void** eax5;
    void** eax6;
    void** edi7;
    uint32_t* ecx8;
    int1_t zf9;
    void** v10;
    int32_t eax11;
    void** eax12;
    int32_t eax13;
    void** eax14;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = reinterpret_cast<void**>(0);
    if (reinterpret_cast<unsigned char>(edx4) <= reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 8))) {
        addr_1001a336_2:
        return eax3;
    } else {
        eax5 = *reinterpret_cast<void***>(ecx + 8);
        eax6 = fun_100119a9(reinterpret_cast<int32_t>(ebp2) - 8, reinterpret_cast<unsigned char>(eax5) * 2, __intrinsic());
        if (reinterpret_cast<signed char>(eax6) < reinterpret_cast<signed char>(0) || (edi7 = ecx, reinterpret_cast<unsigned char>(edi7) < reinterpret_cast<unsigned char>(edx4))) {
            edi7 = edx4;
        }
        ecx8 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp2) - 4);
        eax3 = fun_100119a9(ecx8, reinterpret_cast<unsigned char>(edi7) * 8, __intrinsic());
        if (reinterpret_cast<signed char>(eax3) >= reinterpret_cast<signed char>(0)) 
            goto addr_1001a2ef_6;
    }
    addr_1001a333_7:
    *reinterpret_cast<void***>(ecx + 8) = edi7;
    goto addr_1001a336_2;
    addr_1001a2ef_6:
    zf9 = *reinterpret_cast<void***>(ecx + 4) == 0;
    if (!zf9) {
        v10 = *reinterpret_cast<void***>(ecx + 4);
        eax11 = reinterpret_cast<int32_t>(GetProcessHeap(ecx8, 0, v10, ecx));
        eax12 = reinterpret_cast<void**>(HeapReAlloc(ecx8, eax11, 0, v10, ecx));
        if (!eax12) 
            goto addr_1001a30e_9;
        *reinterpret_cast<void***>(ecx + 4) = eax12;
        goto addr_1001a330_11;
    }
    eax13 = reinterpret_cast<int32_t>(GetProcessHeap(ecx8, 0, ecx));
    eax14 = reinterpret_cast<void**>(HeapAlloc(ecx8, eax13, 0, ecx));
    *reinterpret_cast<void***>(ecx + 4) = eax14;
    if (!eax14) {
        addr_1001a30e_9:
        eax3 = reinterpret_cast<void**>(0x8007000e);
        goto addr_1001a336_2;
    } else {
        addr_1001a330_11:
        eax3 = eax3;
        goto addr_1001a333_7;
    }
}

void fun_1001c7af(int32_t ecx, void** a2, void** a3, void** a4) {
    EtwTraceMessage(a2, a3, 43, 0x10008330, ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 16, 4, 0);
    return;
}

struct s145 {
    uint32_t f0;
    void** f4;
};

struct s144 {
    signed char[12] pad12;
    unsigned char f12;
    signed char[3] pad16;
    struct s145* f16;
    int32_t f20;
    signed char f24;
    signed char[19] pad44;
    int32_t f44;
    signed char f48;
    signed char f49;
    signed char[2] pad52;
    void** f52;
};

void fun_1001c806(int32_t ecx, void** a2, void** a3, struct s144* a4, uint32_t a5, int32_t a6, int32_t a7) {
    void* ebp8;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a2, a3, 43, 0x10008330, ecx, reinterpret_cast<int32_t>(ebp8) + 16, 4, reinterpret_cast<int32_t>(ebp8) + 20, 4, reinterpret_cast<int32_t>(ebp8) + 24, 4, reinterpret_cast<int32_t>(ebp8) + 28, 4, 0);
    return;
}

/* (image base) */
int32_t image_base_ = 0x1000b3e9;

/* (image base) */
int32_t image_base_ = 0x1000b3df;

void** fun_1001b0f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16) {
    void* ebp17;
    uint32_t eax18;
    void** edi19;
    signed char dl20;
    void** eax21;
    int32_t eax22;
    void** v23;
    void** v24;
    void** edi25;
    void** esi26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void* v56;
    int32_t eax57;
    uint32_t ecx58;
    void** eax59;

    ebp17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax18 = g100240c4;
    edi19 = ecx;
    if (!dl20) {
        image_base_();
        image_base_();
    } else {
        eax21 = reinterpret_cast<void**>(image_base_());
        eax22 = reinterpret_cast<int32_t>(image_base_());
        if (!eax22 && ((ecx = image_base_, ecx != 0x10024000) && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 28)) & 4)) {
            v23 = *reinterpret_cast<void***>(ecx + 20);
            v24 = *reinterpret_cast<void***>(ecx + 16);
            ecx = reinterpret_cast<void**>(34);
            fun_1001c676(34, v24, v23, eax21, edi25, esi26);
        }
        fun_1000b8d8(ecx, reinterpret_cast<uint32_t>(ebp17) + 0xffffff88, 0, 0x74, eax21, edi25, esi26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55);
        image_base_(edi19);
        v56 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp17) + 0xffffff88);
        image_base_(edi19, 0, 1, v56);
        eax57 = reinterpret_cast<int32_t>(image_base_(edi19, 32, 32, 0, 1, v56));
        image_base_(edi19, eax57, 32, 32, 0, 1, v56);
    }
    ecx58 = eax18 ^ reinterpret_cast<uint32_t>(ebp17) ^ reinterpret_cast<uint32_t>(ebp17);
    eax59 = fun_1000a130(ecx58, ecx58);
    return eax59;
}

struct s146 {
    signed char[4] pad4;
    void** f4;
    signed char[3] pad8;
    signed char f8;
    signed char[3] pad12;
    int32_t f12;
    signed char[4] pad20;
    int32_t f20;
    void** f24;
};

void fun_1001bfee(void** ecx);

/* (image base) */
int32_t image_base_ = 0x1000b96a;

void fun_1001c770(void** a1, void** a2, void** a3, void** a4, uint32_t a5, void** a6, int32_t a7);

void** fun_1001c317(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6);

void fun_1001c702(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9);

void** fun_1001c570();

void** fun_1001c113(void** ecx, struct s146* a2, int32_t a3, void** a4, void** a5) {
    void* esp6;
    uint32_t eax7;
    uint32_t v8;
    void** v9;
    void** ebx10;
    void** v11;
    void** esi12;
    void** ebx13;
    void** esi14;
    struct s146* ecx15;
    void*** esp16;
    void** v17;
    void** edi18;
    void** v19;
    void** v20;
    void** eax21;
    void** edi22;
    int1_t zf23;
    void** v24;
    void** esi25;
    void** ecx26;
    int32_t v27;
    uint32_t eax28;
    void** v29;
    void** v30;
    void** v31;
    void** eax32;
    void** v33;
    void** bl34;
    void** v35;
    void** v36;
    void* esp37;
    void** eax38;
    void** eax39;
    void** v40;
    void** v41;
    void** eax42;
    void** v43;
    void** v44;
    void** eax45;

    esp6 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 20);
    eax7 = g100240c4;
    v8 = eax7 ^ reinterpret_cast<uint32_t>(esp6);
    v9 = ebx10;
    v11 = esi12;
    ebx13 = ecx;
    esi14 = reinterpret_cast<void**>(0);
    ecx15 = a2;
    esp16 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) - 4 - 4 - 4);
    v17 = edi18;
    v19 = ebx13;
    v20 = reinterpret_cast<void**>(0);
    do {
        if (!*reinterpret_cast<void***>(ebx13 + 4)) {
            eax21 = reinterpret_cast<void**>(0);
        } else {
            eax21 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx13 + 4));
        }
        if (reinterpret_cast<signed char>(esi14) >= reinterpret_cast<signed char>(eax21)) 
            break;
        edi22 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx13 + 4) + 4) + reinterpret_cast<unsigned char>(esi14) * 4);
        if (!ecx15->f24 || ecx15->f24 != *reinterpret_cast<void***>(edi22 + 20)) {
            continue;
        } else {
            zf23 = *reinterpret_cast<void***>(edi22 + 12) == 0;
            *reinterpret_cast<signed char*>(&v24 + 3) = 1;
            if (!zf23) {
                fun_1001bfee(ebx13);
                esp16 = esp16 - 4 + 4;
            }
            if (*reinterpret_cast<void***>(ebx13 + 40)) {
                image_base_(esp16 + 24);
                esp16 = esp16 - 4 - 4 + 4;
            }
            if (a2->f20 != 1) {
                esi25 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi22) + 24);
            } else {
                esi25 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi22) + 20);
            }
            image_base_(esi25);
            esi25(edi22);
            esp16 = esp16 - 4 + 4 - 4 + 4;
            if (*reinterpret_cast<void***>(ebx13 + 40)) {
                image_base_(v19);
                esp16 = esp16 - 4 - 4 + 4;
            }
            ecx26 = image_base_;
            esi14 = v20;
            if (ecx26 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx26 + 28)) & 8) {
                v27 = a2->f20;
                eax28 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi22 + 12));
                v29 = *reinterpret_cast<void***>(edi22 + 20);
                v30 = *reinterpret_cast<void***>(ecx26 + 20);
                v31 = *reinterpret_cast<void***>(ecx26 + 16);
                fun_1001c770(v31, v30, esi14, edi22, eax28, v29, v27);
                esp16 = esp16 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 28 + 4;
            }
            eax32 = *reinterpret_cast<void***>(edi22 + 40);
            if (eax32) 
                goto addr_1001c204_20;
        }
        addr_1001c273_21:
        v33 = *reinterpret_cast<void***>(edi22 + 36);
        bl34 = *reinterpret_cast<void***>(edi22 + 12);
        fun_1001a13d(v19, v33, v17, v11, v9, v24, eax32);
        v35 = esi14;
        v36 = *reinterpret_cast<void***>(v19 + 4);
        image_base_(v19, v36, v35);
        esp37 = reinterpret_cast<void*>(esp16 - 4 - 4 + 4 + 4 - 4 - 4 - 4 + 4);
        --esi14;
        ebx13 = v24;
        if (bl34) {
            fun_1001c317(ebx13, v36, v35, v17, v11, v9);
            esp37 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp37) - 4 + 4);
        }
        fun_1001af64(edi22, v36, v35, v17, v11, v9);
        esp16 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp37) - 4 + 4);
        addr_1001c244_24:
        ecx15 = a2;
        continue;
        addr_1001c204_20:
        eax38 = reinterpret_cast<void**>(SetTimer(0, 0, eax32));
        esp16 = esp16 - 4 - 4 - 4 - 4 - 4 + 4;
        *reinterpret_cast<void***>(ebx13 + 24) = eax38;
        if (!eax38) {
            eax39 = image_base_;
            if (eax39 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 28)) & 8) {
                v40 = *reinterpret_cast<void***>(eax39 + 20);
                v41 = *reinterpret_cast<void***>(eax39 + 16);
                fun_1001c702(29, v41, v40, esi14, edi22, fun_1001c570, 0, 0, eax32);
                esp16 = esp16 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 20 + 4;
                goto addr_1001c273_21;
            }
        } else {
            eax42 = image_base_;
            if (eax42 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax42 + 28)) & 8) {
                v43 = *reinterpret_cast<void***>(eax42 + 20);
                v44 = *reinterpret_cast<void***>(eax42 + 16);
                fun_1001c702(28, v44, v43, esi14, edi22, fun_1001c570, 0, 0, eax32);
                esp16 = esp16 - 4 - 4 - 4 - 4 - 4 - 4 + 4 - 4 + 20 + 4;
            }
            *reinterpret_cast<void***>(ebx13 + 32) = esi14;
            goto addr_1001c244_24;
        }
        ++esi14;
        ecx15->f8 = 0;
        v20 = esi14;
    } while (1);
    eax45 = fun_1000a130(v8 ^ reinterpret_cast<uint32_t>(esp16 + 4 + 4 + 4));
    return eax45;
}

/* (image base) */
int32_t image_base_ = 0x1000b92e;

void fun_1000c8a1();

void** fun_1001af25(void** ecx) {
    void** ebp2;
    void** eax3;

    image_base_(ecx);
    __asm__("fild dword [ebp-0x4]");
    __asm__("fstp dword [ebp-0x4]");
    __asm__("fmul dword [ebp-0x4]");
    __asm__("fadd qword [0x10006fb0]");
    __asm__("fstp dword [ebp-0x4]");
    __asm__("fld dword [ebp-0x4]");
    __asm__("fstp qword [esp]");
    fun_1000c8a1();
    __asm__("fstp dword [ebp-0x4]");
    __asm__("fld dword [ebp-0x4]");
    eax3 = fun_1000c89b(ecx, ecx, ebp2, __return_address());
    return eax3;
}

void** fun_1001ccf4(void** ecx, void** a2, int32_t a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    void** eax7;
    void** esi8;
    void** eax9;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    if (*reinterpret_cast<void***>(ecx)) {
        eax7 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx));
        esi8 = *reinterpret_cast<void***>(eax7 + 8);
        image_base_(esi8);
        esi8(esi8);
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    }
    eax9 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax9;
}

void** fun_1001a605(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** eax10;

    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x80000000);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0);
    eax10 = fun_1001b1b6(ecx, 5);
    return eax10;
}

void** fun_1001bdec(void** ecx, void** a2, void** a3, void*** a4, void** a5, int32_t a6, void** a7) {
    void* ebp8;
    uint32_t eax9;
    void** eax10;
    void** eax11;
    void** esi12;
    void** ecx13;
    void** eax14;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax9 = g100240c4;
    eax10 = fun_1001a4ee(ecx);
    if (reinterpret_cast<signed char>(eax10) >= reinterpret_cast<signed char>(0)) {
        eax11 = *reinterpret_cast<void***>(ecx);
        esi12 = *reinterpret_cast<void***>(eax11);
        ecx13 = *reinterpret_cast<void***>(esi12 + 0x74);
        image_base_(ecx13, eax11, a2, a3, a4);
        *reinterpret_cast<void***>(esi12 + 0x74)(ecx13, eax11, a2, a3, a4);
    }
    eax14 = fun_1000a130(eax9 ^ reinterpret_cast<uint32_t>(ebp8) ^ reinterpret_cast<uint32_t>(ebp8));
    return eax14;
}

void fun_1001c83f(void** a1, void** a2, void** a3, uint32_t a4, void** a5, void** a6, void** a7, void** a8, int32_t a9, void** a10) {
    void* ebp11;

    ebp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 10, reinterpret_cast<int32_t>(ebp11) + 16, 4, reinterpret_cast<int32_t>(ebp11) + 20, 4, reinterpret_cast<int32_t>(ebp11) + 24, 4, reinterpret_cast<int32_t>(ebp11) + 28, 4, reinterpret_cast<int32_t>(ebp11) + 32, 4, 0);
    return;
}

struct s148 {
    signed char[8] pad8;
    int32_t f8;
};

struct s149 {
    uint32_t f0;
    void** f4;
};

struct s147 {
    struct s148* f0;
    signed char[8] pad12;
    unsigned char f12;
    signed char[7] pad20;
    int32_t f20;
    signed char[20] pad44;
    void** f44;
    signed char[3] pad48;
    struct s149* f48;
    void** f52;
    signed char[11] pad64;
    int32_t f64;
    int32_t f68;
    signed char[4] pad76;
    int32_t f76;
    signed char[4] pad84;
    int32_t f84;
    void** f88;
    signed char[3] pad92;
    unsigned char f92;
    signed char[2] pad95;
    signed char f95;
    signed char f96;
};

void fun_1001c87e(void** a1, void** a2, struct s147* a3, void** a4, uint32_t a5, int32_t a6, uint32_t a7, uint32_t a8, void** a9, void** a10) {
    void* ebp11;

    ebp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 16, reinterpret_cast<int32_t>(ebp11) + 16, 4, reinterpret_cast<int32_t>(ebp11) + 20, 4, reinterpret_cast<int32_t>(ebp11) + 24, 4, reinterpret_cast<int32_t>(ebp11) + 28, 4, reinterpret_cast<int32_t>(ebp11) + 32, 4, reinterpret_cast<int32_t>(ebp11) + 36, 4, reinterpret_cast<int32_t>(ebp11) + 40, 4, 0);
    return;
}

void** fun_1001bd59(void** ecx, void** a2, void*** a3, int32_t* a4) {
    void* ebp5;
    uint32_t eax6;
    void** eax7;
    void** eax8;
    void** esi9;
    void** esi10;
    void** eax11;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    eax7 = fun_1001a4ee(ecx);
    if (reinterpret_cast<signed char>(eax7) >= reinterpret_cast<signed char>(0)) {
        eax8 = *reinterpret_cast<void***>(ecx);
        esi9 = *reinterpret_cast<void***>(eax8);
        esi10 = *reinterpret_cast<void***>(esi9 + 0x80);
        image_base_(esi10, eax8, a2, a3, a4);
        esi10(esi10, eax8, a2, a3, a4);
    }
    eax11 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax11;
}

int32_t KillTimer = 0x265d6;

void fun_1001bfee(void** ecx) {
    void** v2;

    if (*reinterpret_cast<void***>(ecx + 28)) {
        v2 = *reinterpret_cast<void***>(ecx + 28);
        KillTimer(0, v2);
        *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(ecx + 36) = reinterpret_cast<void**>(0);
    return;
}

void fun_1001c770(void** a1, void** a2, void** a3, void** a4, uint32_t a5, void** a6, int32_t a7) {
    void* ebp8;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 27, reinterpret_cast<int32_t>(ebp8) + 16, 4, reinterpret_cast<int32_t>(ebp8) + 20, 4, reinterpret_cast<int32_t>(ebp8) + 24, 4, reinterpret_cast<int32_t>(ebp8) + 28, 4, reinterpret_cast<int32_t>(ebp8) + 32, 4, 0);
    return;
}

void fun_1001c702(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void* ebp10;

    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a2, a3, 43, 0x10008330, ecx, reinterpret_cast<int32_t>(ebp10) + 16, 4, reinterpret_cast<int32_t>(ebp10) + 20, 4, reinterpret_cast<int32_t>(ebp10) + 24, 4, 0);
    return;
}

void** fun_1001a57d(void** ecx);

int32_t PostMessageW = 0x263cc;

void** fun_1001c317(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** eax7;
    void** v8;

    eax7 = fun_1001c368(ecx);
    if (*reinterpret_cast<void***>(ecx + 8) && (eax7 = fun_1001a57d(ecx), !*reinterpret_cast<signed char*>(&eax7))) {
        v8 = *reinterpret_cast<void***>(ecx + 8);
        eax7 = reinterpret_cast<void**>(PostMessageW(ecx, v8, 0x8009, 0, 0));
    }
    return eax7;
}

int32_t fun_1001c350(void** a1, void** a2, void** a3);

int32_t fun_1001a4c2(void** ecx) {
    int32_t eax2;
    void** v3;
    int32_t edi4;

    eax2 = 1;
    if (*reinterpret_cast<void***>(ecx)) {
        v3 = *reinterpret_cast<void***>(ecx);
        image_base_(v3, fun_1001c350, 0, edi4);
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
        eax2 = reinterpret_cast<int32_t>(image_base_());
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    }
    return eax2;
}

void** fun_1001a57d(void** ecx) {
    void** esi2;
    void** eax3;
    void** edx4;
    void** ecx5;

    esi2 = *reinterpret_cast<void***>(ecx + 4);
    eax3 = reinterpret_cast<void**>(0);
    edx4 = reinterpret_cast<void**>(0);
    do {
        if (!esi2) {
            ecx5 = reinterpret_cast<void**>(0);
        } else {
            ecx5 = *reinterpret_cast<void***>(esi2);
        }
    } while (reinterpret_cast<signed char>(edx4) < reinterpret_cast<signed char>(ecx5) && (eax3 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi2 + 4) + reinterpret_cast<unsigned char>(edx4) * 4), ++edx4, eax3 = *reinterpret_cast<void***>(eax3 + 12), eax3 == 0));
    return eax3;
}

void fun_1001c694(void** a1, void** a2, void** a3, uint32_t a4, uint32_t a5, void** a6, uint32_t a7);

void fun_1001c736(void** a1, void** a2, void** a3, void** a4, uint32_t a5, void** a6);

void** fun_1001c368(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    void** v5;
    void** ebx6;
    void** v7;
    void** esi8;
    void** v9;
    void** edi10;
    void** edi11;
    void** esi12;
    void** ecx13;
    void** v14;
    void** v15;
    void** eax16;
    void** ebx17;
    void** al18;
    uint32_t v19;
    void** eax20;
    uint32_t v21;
    uint32_t v22;
    void** v23;
    void** v24;
    void** esi25;
    int32_t eax26;
    void** ecx27;
    void** v28;
    uint32_t v29;
    void** v30;
    void** v31;
    void** v32;
    void** eax33;
    void** cl34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** esi39;
    void** v40;
    void** v41;
    void** eax42;
    void** v43;
    void** v44;
    void** eax45;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    v5 = ebx6;
    v7 = esi8;
    v9 = edi10;
    edi11 = ecx;
    if (!*reinterpret_cast<void***>(edi11 + 20)) {
        esi12 = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(edi11 + 20) = reinterpret_cast<void**>(1);
        ecx13 = image_base_;
        v14 = reinterpret_cast<void**>(0);
        v15 = reinterpret_cast<void**>(0);
        do {
            if (!*reinterpret_cast<void***>(edi11 + 4)) {
                eax16 = reinterpret_cast<void**>(0);
            } else {
                eax16 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi11 + 4));
            }
            if (reinterpret_cast<signed char>(esi12) >= reinterpret_cast<signed char>(eax16)) 
                break;
            ebx17 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(edi11 + 4) + 4) + reinterpret_cast<unsigned char>(esi12) * 4);
            if (!*reinterpret_cast<void***>(ebx17 + 12)) {
                if (*reinterpret_cast<void***>(ebx17 + 24)) {
                    addr_1001c54b_9:
                    al18 = v14;
                    continue;
                } else {
                    addr_1001c401_10:
                    if (*reinterpret_cast<void***>(edi11 + 12) || (*reinterpret_cast<void***>(edi11 + 16) || !*reinterpret_cast<void***>(edi11 + 44))) {
                        addr_1001c4d9_11:
                        if (ecx13 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx13 + 28)) & 8) {
                            v19 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx17 + 12));
                            eax20 = reinterpret_cast<void**>(0);
                            *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<uint1_t>(!!*reinterpret_cast<void***>(edi11 + 16));
                            v21 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi11 + 44));
                            v22 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi11 + 12));
                            v23 = *reinterpret_cast<void***>(ecx13 + 20);
                            v24 = *reinterpret_cast<void***>(ecx13 + 16);
                            fun_1001c694(v24, v23, esi12, v22, v21, eax20, v19);
                        }
                    } else {
                        esi25 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx17) + 16);
                        image_base_(esi25);
                        eax26 = reinterpret_cast<int32_t>(esi25(ebx17));
                        if (eax26 < 0) {
                            ecx13 = image_base_;
                            esi12 = v15;
                            goto addr_1001c4d9_11;
                        } else {
                            ecx27 = image_base_;
                            esi12 = v15;
                            if (ecx27 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx27 + 28)) & 8) {
                                v28 = *reinterpret_cast<void***>(ebx17 + 20);
                                v29 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx17 + 12));
                                v30 = *reinterpret_cast<void***>(ecx27 + 20);
                                v31 = *reinterpret_cast<void***>(ecx27 + 16);
                                fun_1001c736(v31, v30, esi12, ebx17, v29, v28);
                            }
                            v32 = *reinterpret_cast<void***>(ebx17 + 32);
                            fun_1001a508(edi11, v32, v9, v7);
                            fun_10019eee(ebx17);
                            eax33 = *reinterpret_cast<void***>(ebx17 + 20);
                            cl34 = *reinterpret_cast<void***>(ebx17 + 12);
                            *reinterpret_cast<void***>(ebx17 + 24) = reinterpret_cast<void**>(1);
                            v14 = cl34;
                            if (eax33) 
                                goto addr_1001c4a9_18; else 
                                goto addr_1001c489_19;
                        }
                    }
                }
            } else {
                if (!*reinterpret_cast<void***>(ebx17 + 24)) 
                    goto addr_1001c401_10;
                if (ecx13 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx13 + 28)) & 8) {
                    v35 = *reinterpret_cast<void***>(ebx17 + 20);
                    v36 = *reinterpret_cast<void***>(ecx13 + 20);
                    v37 = *reinterpret_cast<void***>(ecx13 + 16);
                    fun_1001c702(31, v37, v36, esi12, ebx17, v35, v9, v7, v5);
                    ecx13 = image_base_;
                }
                al18 = reinterpret_cast<void**>(1);
                v14 = reinterpret_cast<void**>(1);
                continue;
            }
            v38 = *reinterpret_cast<void***>(edi11 + 4);
            image_base_(v38, esi12);
            esi39 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx17) + 24);
            image_base_(esi39, v38, esi12);
            esi39(ebx17, v38, esi12);
            v40 = *reinterpret_cast<void***>(ebx17 + 32);
            fun_1001a508(edi11, v40, v38, esi12);
            v41 = *reinterpret_cast<void***>(ebx17 + 36);
            fun_1001a13d(edi11, v41, v38, esi12, v9, v7, v5);
            fun_1001af64(ebx17, v38, esi12, v9, v7, v5);
            esi12 = v15;
            addr_1001c544_25:
            --esi12;
            addr_1001c545_26:
            ecx13 = image_base_;
            goto addr_1001c54b_9;
            addr_1001c4a9_18:
            if (cl34) {
                eax42 = reinterpret_cast<void**>(SetTimer(0, 0, 0x1388, fun_1001c570));
                *reinterpret_cast<void***>(edi11 + 28) = eax42;
                *reinterpret_cast<void***>(edi11 + 36) = eax33;
                goto addr_1001c545_26;
            }
            addr_1001c489_19:
            v43 = *reinterpret_cast<void***>(edi11 + 4);
            image_base_(v43, esi12);
            v44 = *reinterpret_cast<void***>(ebx17 + 36);
            fun_1001a13d(edi11, v44, v43, esi12, v9, v7, v5);
            fun_1001af64(ebx17, v43, esi12, v9, v7, v5);
            goto addr_1001c544_25;
            ++esi12;
            v15 = esi12;
        } while (!al18);
        *reinterpret_cast<void***>(edi11 + 20) = reinterpret_cast<void**>(0);
    }
    eax45 = fun_1000a130(v4 ^ reinterpret_cast<uint32_t>(ebp2));
    return eax45;
}

void fun_1001c736(void** a1, void** a2, void** a3, void** a4, uint32_t a5, void** a6) {
    void* ebp7;

    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 32, reinterpret_cast<int32_t>(ebp7) + 16, 4, reinterpret_cast<int32_t>(ebp7) + 20, 4, reinterpret_cast<int32_t>(ebp7) + 24, 4, reinterpret_cast<int32_t>(ebp7) + 28, 4, 0);
    return;
}

void fun_1001c694(void** a1, void** a2, void** a3, uint32_t a4, uint32_t a5, void** a6, uint32_t a7) {
    void* ebp8;

    ebp8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 33, reinterpret_cast<int32_t>(ebp8) + 16, 4, reinterpret_cast<int32_t>(ebp8) + 20, 4, reinterpret_cast<int32_t>(ebp8) + 24, 4, reinterpret_cast<int32_t>(ebp8) + 28, 4, reinterpret_cast<int32_t>(ebp8) + 32, 4, 0);
    return;
}

void** fun_1001930f(void** ecx) {
    void** ebx2;
    void** eax3;

    ebx2 = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001824);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 32) = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 36) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 40) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(1);
    eax3 = fun_10010167(0x80000002, "A", reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    if (reinterpret_cast<signed char>(eax3) < reinterpret_cast<signed char>(0) || !0) {
        ebx2 = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(ecx + 12) = ebx2;
    return ecx;
}

struct s150 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_1001ca07(struct s150** ecx, struct s150*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s150* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s150** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s150**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

void** fun_1001cbae(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** esi47;
    void** eax48;
    void** ecx49;
    void** eax50;
    void** edi51;
    void** eax52;
    void** edi53;
    void** edi54;
    void** ebx55;
    void** ebp56;
    uint32_t ecx57;
    void** eax58;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    eax48 = fun_1000b6b9(20, 0x10002b64, esi47);
    if (eax48) {
        ecx49 = g10024484;
        *reinterpret_cast<void***>(eax48 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001ea0);
        if (ecx49) {
            eax50 = *reinterpret_cast<void***>(ecx49);
            edi51 = *reinterpret_cast<void***>(eax50 + 4);
            image_base_(edi51, ecx49);
            edi51(edi51, ecx49);
        }
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x100018a4);
        *reinterpret_cast<void***>(eax48 + 12) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(eax48 + 16) = reinterpret_cast<void**>(0);
        if (eax48) {
            eax52 = *reinterpret_cast<void***>(eax48);
            edi53 = *reinterpret_cast<void***>(eax52 + 4);
            image_base_(edi53, eax48);
            edi53(edi53, eax48);
        }
        *reinterpret_cast<void***>(ecx) = eax48;
        fun_100136b5(ebp44 + 0xfffffff4, edi54, esi47, ebx55, eax48, eax48, ecx, v46, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    ecx57 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
    eax58 = fun_1000a130(ecx57, ecx57);
    return eax58;
}

void** fun_1001dae1(void** ecx, void*** a2);

void** fun_1001d7ee(void** ecx, void** a2, uint32_t* a3);

int32_t fun_1001d9e0(void** ecx, void** a2, void** a3, int32_t a4);

void** fun_1001cd72(void** ecx, void** a2, uint32_t* a3) {
    void** ecx4;
    int32_t edx5;
    uint32_t* edx6;
    void** esi7;
    void** eax8;
    void** v9;
    void** eax10;
    void** edi11;
    int32_t esi12;

    ecx4 = g100240d0;
    *a3 = 0;
    if (edx5) {
        *edx6 = 0;
    }
    esi7 = reinterpret_cast<void**>(1);
    if (ecx4 != 0xffffffff) {
        eax8 = fun_1001dae1(ecx4, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
        esi7 = eax8;
        if (reinterpret_cast<signed char>(esi7) < reinterpret_cast<signed char>(0)) {
            esi7 = reinterpret_cast<void**>(1);
        } else {
            if (!esi7) {
                v9 = ecx4;
                ecx4 = ecx;
                eax10 = fun_1001d7ee(ecx4, v9, a3);
                esi7 = eax10;
            }
            fun_1001d9e0(ecx4, ecx, edi11, esi12);
        }
    }
    return esi7;
}

int32_t CoGetApartmentType = 0x2707a;

int32_t TlsGetValue = 0x26ffc;

void** fun_1001d36d(void** ecx, void** a2, void** a3);

int32_t TlsSetValue = 0x2700a;

void** fun_1001dae1(void** ecx, void*** a2) {
    void* ebp3;
    uint32_t esi4;
    uint32_t v5;
    void** edi6;
    uint32_t* edx7;
    int32_t eax8;
    void** eax9;
    void** eax10;
    void** esi11;
    void** eax12;
    int32_t edi13;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *a2 = reinterpret_cast<void**>(0);
    esi4 = 1;
    v5 = 1;
    edi6 = reinterpret_cast<void**>(0x80004005);
    if (!edx7) {
        addr_1001db35_2:
        if (!esi4) 
            goto addr_1001dbe7_3;
    } else {
        *edx7 = 0;
        eax8 = reinterpret_cast<int32_t>(CoGetApartmentType(reinterpret_cast<int32_t>(ebp3) - 4, reinterpret_cast<int32_t>(ebp3) - 12));
        if (eax8 < 0 || static_cast<int1_t>(!0)) {
            esi4 = 0;
            v5 = 0;
            goto addr_1001db35_2;
        } else {
            v5 = 1;
        }
    }
    eax9 = reinterpret_cast<void**>(TlsGetValue(ecx));
    if (eax9) {
        if (!*reinterpret_cast<void***>(eax9 + 24)) {
            if (!edx7) 
                goto addr_1001dbe7_3;
            *edx7 = 0;
            v5 = 0;
        } else {
            edi6 = reinterpret_cast<void**>(0);
            *a2 = eax9;
            *reinterpret_cast<void***>(eax9 + 4) = *reinterpret_cast<void***>(eax9 + 4) + 1;
            goto addr_1001dbde_12;
        }
    } else {
        eax10 = fun_1000b6b9(32, 0x10002b64, ecx);
        esi11 = eax10;
        if (!esi11) {
            esi11 = reinterpret_cast<void**>(0);
        } else {
            *reinterpret_cast<void***>(esi11 + 16) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi11 + 20) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi11 + 24) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi11 + 8) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi11 + 12) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(esi11) = reinterpret_cast<void**>(0x10001ef0);
            *reinterpret_cast<void***>(esi11 + 4) = reinterpret_cast<void**>(1);
        }
        if (!esi11) {
            edi6 = reinterpret_cast<void**>(0x8007000e);
        } else {
            eax12 = fun_1001d36d(esi11, ecx, ecx);
            edi6 = eax12;
            if (reinterpret_cast<signed char>(edi6) >= reinterpret_cast<signed char>(0)) {
                TlsSetValue(esi11, ecx, esi11, ecx);
                *a2 = esi11;
                *reinterpret_cast<void***>(esi11 + 4) = *reinterpret_cast<void***>(esi11 + 4) + 1;
                edi6 = reinterpret_cast<void**>(1);
            }
            fun_1001d9e0(esi11, esi11, ecx, edi13);
        }
    }
    if (reinterpret_cast<signed char>(edi6) < reinterpret_cast<signed char>(0)) {
        addr_1001dbe7_3:
        return edi6;
    } else {
        addr_1001dbde_12:
        if (edx7) {
            *edx7 = v5;
            goto addr_1001dbe7_3;
        }
    }
}

void** fun_1001d7ee(void** ecx, void** a2, uint32_t* a3) {
    void* ebp4;
    uint32_t eax5;
    void** eax6;
    void** esi7;
    void** eax8;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    *a3 = 0;
    if (*reinterpret_cast<void***>(ecx + 20)) {
        eax6 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 20));
        esi7 = *reinterpret_cast<void***>(eax6);
        image_base_(esi7);
        esi7(esi7);
    }
    eax8 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax8;
}

int32_t fun_1001d9e0(void** ecx, void** a2, void** a3, int32_t a4) {
    int32_t eax5;

    __asm__("lock xadd [ecx+0x4], esi");
    if (!1 && a2) {
        eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, a2));
        HeapFree(eax5, 0, a2);
    }
    return -2;
}

void** fun_1001cee3(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33) {
    void*** ebp34;
    uint32_t eax35;
    void** v36;
    void** v37;
    void** eax38;
    void** esi39;
    void** edi40;
    void** esi41;
    void** ebx42;
    void** edx43;
    void** eax44;
    void** esi45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** ebp50;
    void** esi51;
    int32_t eax52;
    void** esi53;
    void* v54;
    void** ecx55;
    int32_t eax56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    uint32_t ecx61;
    void** eax62;

    ebp34 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax35 = g100240c4;
    v36 = reinterpret_cast<void**>(eax35 ^ reinterpret_cast<uint32_t>(ebp34));
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    v37 = reinterpret_cast<void**>(ebp34 + 0xffffffdc);
    eax38 = *reinterpret_cast<void***>(ecx);
    esi39 = *reinterpret_cast<void***>(eax38 + 16);
    image_base_(esi39);
    esi39(esi39);
    eax44 = fun_1000c8a7(esi39, ebp34 + 0xffffffdc, ebp34 + 0xffffffec, 16, ecx, v37, edi40, esi41, ebx42, edx43);
    if (!(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax44 == 0)) ^ 1)) {
        *reinterpret_cast<void***>(a2) = ecx;
        esi45 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 4);
        image_base_(esi45);
        esi45(esi45);
    } else {
        fun_100136b5(ebp34 + 0xffffffd8, ecx, v37, edi40, esi41, ebx42, edx43, a2, 0, v46, v47, v48, v49, a3, a4, a5, a6, v36, ebp50, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33);
        esi51 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edx43) + 40);
        image_base_(esi51, edx43);
        eax52 = reinterpret_cast<int32_t>(esi51(esi51, edx43));
        if (eax52 >= 0 && (esi53 = g0, v54 = reinterpret_cast<void*>(ebp34 + 0xffffffec), ecx55 = *reinterpret_cast<void***>(esi53 + 32), image_base_(ecx55, 0, ecx, v54, 0, 0, 0, 0, 0, edx43), eax56 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi53 + 32)(ecx55, 0, ecx, v54, 0, 0, 0, 0, 0, edx43)), eax56 >= 0)) {
            *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
        }
        fun_100136b5(ebp34 + 0xffffffd8, edx43, ebp34 + 0xffffffd8, ecx, v37, edi40, esi41, ebx42, edx43, a2, 0, v57, v58, v59, v60, a3, a4, a5, a6, v36, ebp50, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31);
    }
    ecx61 = reinterpret_cast<unsigned char>(v36) ^ reinterpret_cast<uint32_t>(ebp34);
    eax62 = fun_1000a130(ecx61, ecx61);
    return eax62;
}

void** fun_1001cc54(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** esi47;
    void** eax48;
    void** ecx49;
    void** eax50;
    void** edi51;
    void** eax52;
    void** edi53;
    void** edi54;
    void** ebx55;
    void** ebp56;
    uint32_t ecx57;
    void** eax58;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    eax48 = fun_1000b6b9(12, 0x10002b64, esi47);
    if (eax48) {
        ecx49 = g10024484;
        *reinterpret_cast<void***>(eax48 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001ea0);
        if (ecx49) {
            eax50 = *reinterpret_cast<void***>(ecx49);
            edi51 = *reinterpret_cast<void***>(eax50 + 4);
            image_base_(edi51, ecx49);
            edi51(edi51, ecx49);
        }
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001840);
        if (eax48) {
            eax52 = *reinterpret_cast<void***>(eax48);
            edi53 = *reinterpret_cast<void***>(eax52 + 4);
            image_base_(edi53, eax48);
            edi53(edi53, eax48);
        }
        *reinterpret_cast<void***>(ecx) = eax48;
        fun_100136b5(ebp44 + 0xfffffff4, edi54, esi47, ebx55, eax48, eax48, ecx, v46, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    ecx57 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
    eax58 = fun_1000a130(ecx57, ecx57);
    return eax58;
}

void** g10024638;

void** fun_1001cb23(void*** ecx);

struct s151 {
    signed char[12] pad12;
    int32_t f12;
    int32_t f16;
};

void** fun_1001d924(struct s151*** ecx, void*** a2, void** a3);

void** fun_1001d89d(void** ecx, int32_t a2) {
    void* ebp3;
    uint32_t eax4;
    int1_t zf5;
    void*** ecx6;
    void** eax7;
    void** ecx8;
    void** edi9;
    void** esi10;
    int32_t ebx11;
    void** eax12;
    void** esi13;
    void** eax14;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    zf5 = g10024638 == 0;
    if (zf5) {
        ecx6 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebp3) + 0xfffffff8);
        fun_1001cb23(ecx6);
        if (ecx) {
            eax7 = fun_1001d924(reinterpret_cast<uint32_t>(ebp3) + 0xfffffff8, ecx6, ecx);
            if (reinterpret_cast<signed char>(eax7) >= reinterpret_cast<signed char>(0)) {
                ecx8 = *reinterpret_cast<void***>(ecx);
                edi9 = *reinterpret_cast<void***>(ecx8 + 4);
                image_base_(edi9);
                edi9(edi9);
                g10024638 = ecx;
            }
            fun_1001ccf4(reinterpret_cast<uint32_t>(ebp3) + 0xfffffff8, esi10, ebx11, 0);
            eax12 = *reinterpret_cast<void***>(ecx);
            esi13 = *reinterpret_cast<void***>(eax12 + 8);
            image_base_(esi13, ecx);
            esi13(esi13, ecx);
        }
    }
    eax14 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax14;
}

int32_t RemovePropW = 0x26eae;

int32_t SetPropW = 0x26e90;

int32_t NotifyWinEvent = 0x26e9c;

void fun_10018a4f(unsigned char cl, void** a2) {
    int32_t edx3;
    int32_t edi4;
    int32_t esi5;
    int32_t ebx6;

    if (!cl) {
        RemovePropW(edx3, "{", edi4, esi5, ebx6, __return_address());
    } else {
        SetPropW(edx3, "{", 1, edi4, esi5, ebx6, __return_address());
    }
    NotifyWinEvent();
    goto 0;
}

int32_t fun_1001d24d(struct s151*** ecx) {
    if (!*ecx) {
        image_base_();
        goto 0x10008374;
    } else {
        return 0;
    }
}

int32_t CoRegisterInitializeSpy = 0x27060;

int32_t g10024750;

void** fun_1001d36d(void** ecx, void** a2, void** a3) {
    int32_t eax4;
    int1_t zf5;
    int32_t esi6;

    *reinterpret_cast<void***>(ecx + 16) = a2;
    eax4 = reinterpret_cast<int32_t>(CoRegisterInitializeSpy());
    if (eax4 >= 0 && (*reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(1), zf5 = g10024750 == 0, zf5)) {
        GetModuleHandleExW(4, 0x10024750, 0x10024750);
    }
    goto esi6;
}

void** fun_1001cb23(void*** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    void** eax5;
    void** eax6;
    void** ecx7;
    void** edi8;
    void** esi9;
    void** eax10;
    void** v11;
    void** edi12;
    void** eax13;
    void** edi14;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *ecx = reinterpret_cast<void**>(0);
    eax5 = fun_1000b6b9(12, 0x10002b64, esi4);
    if (!eax5) {
        addr_1001cb9c_2:
        eax6 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
        return eax6;
    } else {
        ecx7 = g10024484;
        *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0);
        edi8 = eax5 + 4;
        *reinterpret_cast<void***>(edi8) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(edi8 + 4) = reinterpret_cast<void**>(0);
        esi9 = eax5 + 4 + 4 + 4;
        *reinterpret_cast<void***>(esi9 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(esi9) = reinterpret_cast<void**>(0x10001e8c);
        if (ecx7) 
            goto addr_1001cb6d_13;
    }
    addr_1001cb7d_14:
    *reinterpret_cast<void***>(esi9) = reinterpret_cast<void**>(0x10001890);
    if (*ecx) {
        eax10 = *reinterpret_cast<void***>(*ecx);
        v11 = *ecx;
        edi12 = *reinterpret_cast<void***>(eax10 + 8);
        image_base_(edi12, v11);
        edi12(edi12, v11);
    }
    *ecx = esi9;
    goto addr_1001cb9c_2;
    addr_1001cb6d_13:
    eax13 = *reinterpret_cast<void***>(ecx7);
    edi14 = *reinterpret_cast<void***>(eax13 + 4);
    image_base_(edi14, ecx7);
    edi14(edi14, ecx7);
    goto addr_1001cb7d_14;
}

void** fun_1001d924(struct s151*** ecx, void*** a2, void** a3) {
    void* ebp4;
    uint32_t eax5;
    int32_t eax6;
    struct s151** eax7;
    struct s151* ecx8;
    int32_t esi9;
    void** eax10;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    eax6 = fun_1001d24d(ecx);
    if (eax6 >= 0) {
        eax7 = *ecx;
        ecx8 = *eax7;
        esi9 = ecx8->f12;
        image_base_(esi9, eax7, "L", a3);
        esi9(esi9, eax7, "L", a3);
    }
    eax10 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax10;
}

void** fun_1001da94(struct s151*** ecx, void** a2, void** a3, int32_t a4) {
    void* ebp5;
    uint32_t eax6;
    void** edi7;
    int32_t eax8;
    struct s151** eax9;
    int32_t esi10;
    void** eax11;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    edi7 = g10024638;
    eax8 = fun_1001d24d(ecx);
    if (eax8 >= 0) {
        eax9 = *ecx;
        esi10 = (*eax9)->f16;
        image_base_(esi10, eax9, "L", edi7);
        esi10(esi10, eax9, "L", edi7);
    }
    eax11 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax11;
}

void** fun_1001dcf9(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39) {
    void*** ebp40;
    uint32_t eax41;
    void** v42;
    void** v43;
    void** esi44;
    void** edx45;
    void** v46;
    void** ecx47;
    int32_t eax48;
    void** v49;
    void** v50;
    void** ebx51;
    void** edi52;
    void** esi53;
    void** v54;
    void** v55;
    void** ebp56;
    void** esi57;
    int32_t eax58;
    void** esi59;
    void** ecx60;
    int32_t eax61;
    void** ecx62;
    void** esi63;
    void** v64;
    void** v65;
    void** eax66;
    void** esi67;
    uint32_t ecx68;
    void** eax69;

    ebp40 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax41 = g100240c4;
    v42 = reinterpret_cast<void**>(eax41 ^ reinterpret_cast<uint32_t>(ebp40));
    *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
    v43 = reinterpret_cast<void**>(ebp40 + 0xfffffff0);
    esi44 = *reinterpret_cast<void***>(edx45);
    v46 = reinterpret_cast<void**>(ebp40 + 0xfffffff4);
    ecx47 = *reinterpret_cast<void***>(esi44 + 12);
    image_base_(ecx47);
    eax48 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi44 + 12)(ecx47));
    if (eax48 >= 0) {
        if (a2 != v49 || a3 != v50) {
            fun_100136b5(ebp40 + 0xfffffff8, ebx51, edx45, v46, v43, edi52, esi53, ecx, v54, v55, 0, v42, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
            esi57 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 44);
            image_base_(esi57);
            eax58 = reinterpret_cast<int32_t>(esi57(esi57));
            if (eax58 >= 0 && (esi59 = g0, ecx60 = *reinterpret_cast<void***>(esi59 + 32), image_base_(ecx60, 0, edx45, a2, a3, 3), eax61 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi59 + 32)(ecx60, 0, edx45, a2, a3, 3)), eax61 >= 0)) {
                ecx62 = g0;
                esi63 = *reinterpret_cast<void***>(ecx62);
                image_base_(esi63, 0, 0x1000306c, a4, 0, edx45, a2, a3, 3);
                esi63(esi63, 0, 0x1000306c, a4, 0, edx45, a2, a3, 3);
            }
            fun_100136b5(ebp40 + 0xfffffff8, ecx, ebp40 + 0xfffffff8, ebx51, edx45, v46, v43, edi52, esi53, ecx, v64, v65, 0, v42, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
        } else {
            eax66 = *reinterpret_cast<void***>(edx45);
            esi67 = *reinterpret_cast<void***>(eax66);
            image_base_(esi67, edx45);
            esi67(esi67, edx45);
        }
    }
    ecx68 = reinterpret_cast<unsigned char>(v42) ^ reinterpret_cast<uint32_t>(ebp40);
    eax69 = fun_1000a130(ecx68, ecx68);
    return eax69;
}

void** g10008194 = reinterpret_cast<void**>(36);

void** g10008198 = reinterpret_cast<void**>(3);

void** g1000819c = reinterpret_cast<void**>(0xb1);

void** g100081a0 = reinterpret_cast<void**>(0x76);

void** fun_1001cfd6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void*** ebp46;
    void** edi47;
    void** esi48;
    void** ebx49;
    void** ebp50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** eax55;
    void** esi56;
    void** eax57;

    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    fun_100136b5(ebp46 + 0xfffffffc, edi47, esi48, ebx49, ecx, 0, ebp50, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    v51 = g10008194;
    v52 = g10008198;
    v53 = g1000819c;
    v54 = g100081a0;
    eax55 = fun_1001cee3(ecx, ebp46 + 0xfffffffc, v51, v52, v53, v54, edi47, esi48, ebx49, ecx, 0, ebp50, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
    esi56 = eax55;
    if (reinterpret_cast<signed char>(esi56) >= reinterpret_cast<signed char>(0)) {
        eax57 = fun_1000fea7(0);
        esi56 = eax57;
    }
    fun_100136b5(ebp46 + 0xfffffffc, edi47, esi48, ebx49, ecx, 0, ebp50, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    return esi56;
}

int32_t IUnknown_Set = 0x25cd8;

void** fun_1001cdc9(void** ecx) {
    void** ecx2;
    void** edi3;
    void** eax4;
    void** ecx5;
    int32_t edx6;

    ecx2 = g100240d0;
    edi3 = reinterpret_cast<void**>(1);
    if (ecx2 != 0xffffffff) {
        eax4 = fun_1001dae1(ecx2, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
        edi3 = eax4;
        if (reinterpret_cast<signed char>(edi3) < reinterpret_cast<signed char>(0)) {
            edi3 = reinterpret_cast<void**>(1);
        } else {
            ecx5 = ecx + 20;
            IUnknown_Set(ecx5, edx6);
            fun_1001d9e0(ecx5, ecx, ecx5, edx6);
        }
    }
    return edi3;
}

void** fun_1001dfb7(void** ecx);

struct s106* fun_1001e07d(struct s106* ecx, struct s106* a2);

void** fun_1001e00b(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31) {
    struct s106* ecx32;
    void** esi33;

    fun_1001dfb7(ecx);
    ecx32 = reinterpret_cast<struct s106*>(ecx + 16);
    fun_1001e07d(ecx32, ecx32);
    ecx32->f0 = reinterpret_cast<void**>(0x10001f7c);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001fd0);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0x10001fc0);
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0x10001f6c);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(0x10001f5c);
    *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0x10001f4c);
    *reinterpret_cast<void***>(ecx + 32) = reinterpret_cast<void**>(0x10001f3c);
    *reinterpret_cast<void***>(ecx + 56) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 60) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 64) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 68) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 72) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 76) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x28c) = reinterpret_cast<void**>(0);
    fun_1000b8d8(0, ecx + 0x258, 0, 52, esi33, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31);
    return ecx;
}

struct s153 {
    signed char[32] pad32;
    int32_t f32;
    signed char[4] pad40;
    int32_t f40;
    int32_t f44;
    int32_t f48;
    int32_t f52;
    int32_t f56;
    int32_t f60;
};

struct s152 {
    struct s153* f0;
    signed char[20] pad24;
    int32_t f24;
    unsigned char f28;
    signed char[3] pad32;
    int32_t f32;
    int32_t f36;
};

void fun_1001ea9b(struct s152* ecx, int32_t a2, struct s152* a3) {
    int32_t* esi4;
    int32_t v5;

    esi4 = &ecx->f36;
    if (*esi4 != a2 && (*esi4 = a2, !!ecx->f32)) {
        v5 = ecx->f32;
        if (!a2) {
            ResetEvent(v5);
        } else {
            SetEvent(v5);
        }
    }
    return;
}

struct s156 {
    signed char[8] pad8;
    int32_t f8;
};

struct s155 {
    signed char[8] pad8;
    struct s156* f8;
};

struct s154 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    struct s155* f12;
    int32_t f16;
};

/* (image base) */
int32_t image_base_ = 0x1000b9da;

/* (image base) */
int32_t image_base_ = 0x1000b9c6;

void** fun_1001ec7f(struct s154* ecx) {
    void* ebp2;
    uint32_t eax3;
    struct s155* ecx4;
    struct s156** eax5;
    int32_t esi6;
    uint32_t ecx7;
    void** eax8;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ecx4 = ecx->f12;
    ecx->f0 = 0x10002078;
    ecx->f8 = 0x10002074;
    image_base_(ecx4);
    if (ecx->f12) {
        eax5 = &ecx->f12->f8;
        esi6 = (*eax5)->f8;
        image_base_(esi6);
        esi6(esi6);
    }
    image_base_(ecx);
    ecx7 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax8 = fun_1000a130(ecx7, ecx7);
    return eax8;
}

struct s157 {
    struct s21* f0;
    struct s21* f1;
    struct s21* f2;
    struct s21* f3;
};

struct s159 {
    int32_t f0;
    void** f4;
    signed char[7] pad12;
    struct s22*** f12;
};

struct s158 {
    signed char[4] pad4;
    struct s159* f4;
};

void** fun_1000d65c(void** ecx, int32_t a2, struct s159* a3, struct s22*** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void* a10, void** a11, int32_t a12, int32_t a13, struct s157* a14);

void** fun_1000d51f(void** ecx, struct s157* a2, int32_t a3, struct s22*** a4) {
    int32_t v5;
    int32_t v6;
    int32_t ebp7;
    int32_t* ebp8;
    void** v9;
    uint32_t eax10;
    void** v11;
    void** v12;
    void** ebx13;
    void** ebx14;
    void** v15;
    void** esi16;
    void** v17;
    void** edi18;
    void** eax19;
    void** v20;
    void** esi21;
    struct s158* eax22;
    void** ecx23;
    void** v24;
    struct s159** edi25;
    void** esi26;
    struct s159** eax27;
    struct s159** esi28;
    void** ecx29;
    int32_t eax30;
    uint32_t ecx31;
    void** eax32;
    struct s159* v33;

    v5 = reinterpret_cast<int32_t>(__return_address());
    v6 = ebp7;
    ebp8 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v9 = ecx;
    eax10 = g100240c4;
    v11 = reinterpret_cast<void**>(eax10 ^ reinterpret_cast<uint32_t>(ebp8));
    v12 = ebx13;
    ebx14 = ecx;
    v15 = esi16;
    *a4 = reinterpret_cast<struct s22**>(0);
    v17 = edi18;
    eax19 = *reinterpret_cast<void***>(ebx14);
    v20 = ebx14;
    esi21 = *reinterpret_cast<void***>(eax19 + 16);
    image_base_(esi21);
    eax22 = reinterpret_cast<struct s158*>(esi21(esi21));
    ecx23 = *reinterpret_cast<void***>(ebx14);
    v24 = ebx14;
    edi25 = &eax22->f4;
    esi26 = *reinterpret_cast<void***>(ecx23 + 20);
    image_base_(esi26);
    eax27 = reinterpret_cast<struct s159**>(esi26(esi26));
    esi28 = eax27;
    while (reinterpret_cast<uint32_t>(edi25) < reinterpret_cast<uint32_t>(esi28)) {
        if (!*edi25) 
            goto addr_1000d577_4;
        ecx29 = (*edi25)->f4;
        eax30 = fun_1000d7c7(ecx29, v24, v20, v17, v15, v12, v9);
        if (eax30) 
            goto addr_1000d596_6;
        addr_1000d577_4:
        ++edi25;
    }
    addr_1000d583_8:
    ecx31 = reinterpret_cast<unsigned char>(v11) ^ reinterpret_cast<uint32_t>(ebp8);
    eax32 = fun_1000a130(ecx31, ecx31);
    return eax32;
    addr_1000d596_6:
    v33 = *edi25;
    fun_1000d65c(ebx14, a3, v33, a4, v24, v20, v17, v15, v12, 1, v11, v6, v5, a2);
    goto addr_1000d583_8;
}

void fun_1000b5c5() {
    EnterCriticalSection();
    goto 0x10024420;
}

int32_t fun_100095a0() {
    uint32_t eax1;
    uint32_t edx2;

    eax1 = g10024068;
    edx2 = g1002406c;
    if (!(eax1 | edx2)) {
        return 0;
    } else {
        EtwEventUnregister();
        g10024068 = 0;
        g1002406c = 0;
        goto eax1;
    }
}

void fun_1000a60f();

struct s160 {
    signed char[8] pad8;
    int32_t f8;
};

int32_t fun_1000a61b(int32_t ecx, int32_t a2, int32_t a3, int32_t a4);

void fun_1000a455();

struct s161 {
    signed char[8] pad8;
    void** f8;
};

int32_t _onexit = 0x25cb4;

int32_t fun_1000a3c5(void** a1) {
    int32_t ebp2;
    void** eax3;
    int32_t ebp4;
    int32_t ebp5;
    void** eax6;
    int32_t ebp7;
    void** eax8;
    int32_t ebp9;
    int32_t v10;
    struct s160* ebp11;
    int32_t ebp12;
    int32_t ebp13;
    int32_t eax14;
    int32_t ebp15;
    int32_t ebp16;
    void** ecx17;
    int32_t ebp18;
    int32_t ebp19;
    void** v20;
    struct s161* ebp21;
    int32_t esi22;

    fun_1000a33c(0x1001f068, 24, __return_address());
    *reinterpret_cast<uint32_t*>(ebp2 - 40) = 0;
    eax3 = g10024458;
    *reinterpret_cast<void***>(ebp4 - 32) = eax3;
    if (!reinterpret_cast<int1_t>(eax3 == 0xffffffff)) {
        fun_1000a60f();
        *reinterpret_cast<uint32_t*>(ebp5 - 4) = 0;
        eax6 = g10024458;
        *reinterpret_cast<void***>(ebp7 - 32) = eax6;
        eax8 = g10024454;
        *reinterpret_cast<void***>(ebp9 - 36) = eax8;
        v10 = ebp11->f8;
        eax14 = fun_1000a61b(8, v10, ebp12 - 32, ebp13 - 36);
        *reinterpret_cast<int32_t*>(ebp15 - 40) = eax14;
        g10024458 = *reinterpret_cast<void***>(ebp16 - 32);
        ecx17 = *reinterpret_cast<void***>(ebp18 - 36);
        g10024454 = ecx17;
        *reinterpret_cast<int32_t*>(ebp19 - 4) = -2;
        fun_1000a455();
    } else {
        v20 = ebp21->f8;
        esi22 = _onexit;
        image_base_(esi22);
        esi22(esi22);
        ecx17 = v20;
    }
    fun_1000a384(ecx17, 0x1001f068, 24, __return_address(), a1);
    goto 0x1001f068;
}

int32_t SetUnhandledExceptionFilter = 0x25e02;

int32_t UnhandledExceptionFilter = 0x25de6;

int32_t TerminateProcess = 0x25e34;

void** fun_1000a475(int32_t a1) {
    int32_t ebp2;

    SetUnhandledExceptionFilter(0, ebp2, __return_address());
    UnhandledExceptionFilter(a1, 0, ebp2, __return_address());
    GetCurrentProcess();
    TerminateProcess();
    goto 0xc0000409;
}

void fun_1000b631(void** ecx, int32_t a2) {
    LeaveCriticalSection(ecx);
    goto 0x10024420;
}

struct s162 {
    int32_t f0;
    signed char[20] pad24;
    int16_t f24;
};

int32_t fun_1000a260(struct s27* a1) {
    struct s162* ecx2;
    int32_t eax3;

    if (a1->f0 == 0x5a4d) {
        ecx2 = reinterpret_cast<struct s162*>(a1->f60 + reinterpret_cast<int32_t>(a1));
        eax3 = 0;
        if (ecx2->f0 == 0x4550) {
            *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<uint1_t>(ecx2->f24 == 0x10b);
        }
        return eax3;
    } else {
        return 0;
    }
}

void fun_1000a33c(void** a1, void** a2, void** a3) {
    void* esp4;
    void* ebp5;
    int32_t* esp6;
    int32_t ebx7;
    int32_t* esp8;
    int32_t esi9;
    int32_t* esp10;
    int32_t edi11;
    uint32_t eax12;
    uint32_t* esp13;
    int32_t* esp14;

    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) + 16);
    esp6 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp4) - reinterpret_cast<unsigned char>(a2) - 4);
    *esp6 = ebx7;
    esp8 = esp6 - 1;
    *esp8 = esi9;
    esp10 = esp8 - 1;
    *esp10 = edi11;
    eax12 = g100240c4;
    esp13 = reinterpret_cast<uint32_t*>(esp10 - 1);
    *esp13 = eax12 ^ reinterpret_cast<uint32_t>(ebp5);
    esp14 = reinterpret_cast<int32_t*>(esp13 - 1);
    *esp14 = reinterpret_cast<int32_t>(__return_address());
    g0 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp5) + 0xfffffff0);
    goto *esp14;
}

struct s163 {
    signed char[12] pad12;
    uint32_t f12;
};

uint32_t g100240c0 = 0xffffffff;

void fun_1000a0d5(void** ecx) {
    struct s163* ebp2;

    if (ebp2->f12 <= 1) {
        g100240c0 = 0xffffffff;
    }
    return;
}

void fun_1000a384(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    uint32_t ecx6;
    int32_t ebp7;
    uint32_t ebp8;
    int32_t ebp9;
    int32_t* esp10;
    void* ebp11;

    ecx6 = *reinterpret_cast<uint32_t*>(ebp7 - 28) ^ ebp8;
    fun_1000a130(ecx6);
    g0 = *reinterpret_cast<void***>(ebp9 - 16);
    esp10 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp11) + 4 - 4);
    *esp10 = reinterpret_cast<int32_t>(__return_address());
    goto *esp10;
}

int32_t _lock = 0x25c94;

void fun_1000a60f() {
    goto _lock;
}

int32_t __dllonexit = 0x25ca6;

int32_t fun_1000a61b(int32_t ecx, int32_t a2, int32_t a3, int32_t a4) {
    goto __dllonexit;
}

void fun_1000a615();

void fun_1000a455() {
    fun_1000a615();
    return;
}

int32_t IsProcessorFeaturePresent = 0x26f60;

int32_t IsDebuggerPresent = 0x26192;

void fun_1000b755(void** a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    void* ebp7;
    void** ebx8;
    int32_t eax9;
    void** ecx10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    int32_t v74;
    int32_t v75;
    int32_t v76;
    int32_t v77;
    int32_t v78;
    int32_t v79;
    int32_t v80;
    int32_t v81;
    int32_t v82;
    int32_t v83;
    int32_t v84;
    int32_t v85;
    int32_t v86;
    int32_t v87;
    int32_t v88;
    int32_t v89;
    int32_t v90;
    int32_t v91;
    int32_t v92;
    int32_t v93;
    int32_t v94;
    int32_t v95;
    int32_t v96;
    int32_t v97;
    int32_t v98;
    int32_t v99;
    int32_t v100;
    int32_t v101;
    int32_t v102;
    int32_t eax103;
    int32_t ebx104;
    int32_t ebx105;
    int32_t eax106;

    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax9 = reinterpret_cast<int32_t>(IsProcessorFeaturePresent(23, ebx8));
    if (eax9) {
        ecx10 = a1;
        __asm__("int 0x29");
    }
    fun_1000b8d0(3, 23, ebx8, v11, v12, v13);
    fun_1000b8d8(ecx10, reinterpret_cast<int32_t>(ebp7) + 0xfffffcdc, 0, 0x2cc, 23, ebx8, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43);
    v44 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp7) + 0xffffffa8);
    fun_1000b8d8(ecx10, v44, 0, 80, 23, ebx8, 0x10001, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, ecx10, v44, 0, 80, 23, ebx8, 0x10001, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102);
    eax103 = reinterpret_cast<int32_t>(IsDebuggerPresent(23, ebx8, 0x10001));
    ebx104 = eax103 - 1;
    ebx105 = -ebx104;
    SetUnhandledExceptionFilter(0, 23, ebx8, 0x10001);
    eax106 = reinterpret_cast<int32_t>(UnhandledExceptionFilter());
    if (!eax106 && !(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx105) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx105) + (*reinterpret_cast<unsigned char*>(&ebx105) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx105) + reinterpret_cast<uint1_t>(!!ebx104))))) + 1)) {
        fun_1000b8d0(3, reinterpret_cast<int32_t>(ebp7) + 0xfffffff8, 0, 23, ebx8, 0x10001);
    }
    return;
}

int32_t GetModuleHandleW = 0x26170;

uint32_t g10024440;

void** fun_1000b432(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t edi4;
    int32_t esi5;
    int32_t ebx6;
    int32_t eax7;
    int32_t esi8;
    int32_t v9;
    int32_t eax10;
    int32_t eax11;
    uint32_t eax12;
    uint32_t eax13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t ecx16;
    void** eax17;
    uint32_t eax18;
    uint32_t eax19;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    fun_1000b741(ecx, 0x10024420, 0xfa0, 0, edi4, esi5, ebx6);
    eax7 = reinterpret_cast<int32_t>(GetModuleHandleW("a", edi4, esi5, ebx6));
    esi8 = eax7;
    if (esi8) 
        goto addr_1000b47f_2;
    v9 = reinterpret_cast<int32_t>("k");
    eax10 = reinterpret_cast<int32_t>(GetModuleHandleW("k", "a", edi4, esi5, ebx6));
    esi8 = eax10;
    if (!esi8) 
        goto addr_1000b50c_4;
    addr_1000b47f_2:
    v9 = reinterpret_cast<int32_t>("InitializeConditionVariable");
    eax11 = reinterpret_cast<int32_t>(GetProcAddress(esi8, "InitializeConditionVariable", "a", edi4, esi5, ebx6));
    eax12 = reinterpret_cast<uint32_t>(GetProcAddress(esi8, "SleepConditionVariableCS", esi8, "InitializeConditionVariable", "a", edi4, esi5, ebx6));
    eax13 = reinterpret_cast<uint32_t>(GetProcAddress());
    if (!eax11 || (!eax12 || !eax13)) {
        eax14 = reinterpret_cast<uint32_t>(CreateEventW(0, 1, 0));
        g1002443c = eax14;
        if (!eax14) {
            addr_1000b50c_4:
            fun_1000b755(7, v9, "a", edi4, esi5, ebx6);
            DeleteCriticalSection();
            eax15 = g1002443c;
            if (eax15) {
                CloseHandle(eax15);
            }
        } else {
            addr_1000b4fb_7:
            ecx16 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
            eax17 = fun_1000a130(ecx16, ecx16);
            return eax17;
        }
        goto 0x10024420;
    } else {
        g1002443c = 0;
        image_base_(eax11);
        eax11(eax11);
        eax18 = fun_1000b413(eax11, eax12);
        g10024440 = eax18;
        eax19 = fun_1000b413(eax11, eax13);
        g10024444 = eax19;
        goto addr_1000b4fb_7;
    }
}

int32_t WaitForSingleObjectEx = 0x26114;

void** fun_1000b63d(void** ecx, void** a2) {
    void* ebp3;
    uint32_t eax4;
    int1_t zf5;
    int32_t esi6;
    uint32_t esi7;
    uint32_t esi8;
    uint32_t ecx9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    zf5 = g1002443c == 0;
    if (!zf5) {
        fun_1000b631(ecx, esi6);
        WaitForSingleObjectEx();
        fun_1000b5c5();
    } else {
        esi7 = g100240c4;
        esi8 = esi7 ^ g10024440;
        __asm__("ror esi, cl");
        image_base_(esi8);
        esi8(esi8);
    }
    ecx9 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax10 = fun_1000a130(ecx9, ecx9);
    return eax10;
}

int32_t _except_handler4_common = 0x25c7a;

void fun_1000a609(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    goto _except_handler4_common;
}

struct s164 {
    signed char[12] pad12;
    void** f12;
};

struct s165 {
    signed char[8] pad8;
    void** f8;
};

int32_t InitializeCriticalSectionAndSpinCount = 0x26f38;

void fun_1000b6e7(void** ecx) {
    int32_t ebp2;
    void** v3;
    struct s164* ebp4;
    void** v5;
    struct s165* ebp6;
    int32_t eax7;
    int32_t ebp8;
    int32_t ebp9;

    fun_1000a5b0(0x1001f0e0, 16, __return_address());
    *reinterpret_cast<uint32_t*>(ebp2 - 4) = 0;
    v3 = ebp4->f12;
    v5 = ebp6->f8;
    eax7 = reinterpret_cast<int32_t>(InitializeCriticalSectionAndSpinCount());
    *reinterpret_cast<int32_t*>(ebp8 - 32) = eax7;
    *reinterpret_cast<int32_t*>(ebp9 - 4) = -2;
    fun_1000a5f5(ecx, v5, v3, 0x1001f0e0, 16, __return_address());
    goto v5;
}

unsigned char fun_1000baa8(int32_t* ecx) {
    return static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!*ecx));
}

int32_t EtwUnregisterTraceGuids = 0x25eb0;

int32_t TlsFree = 0x25f82;

void fun_10009510(uint32_t a1, uint32_t a2) {
    void** eax3;
    int32_t v4;
    int32_t esi5;
    void** esi6;
    void** edx7;
    void** v8;
    void** eax9;

    eax3 = g10024664;
    if (eax3) {
        FreeLibrary(eax3, __return_address());
        g10024664 = reinterpret_cast<void**>(0);
    }
    v4 = esi5;
    DeleteCriticalSection();
    esi6 = image_base_;
    if (esi6 != 0x10024000) {
        if (esi6) {
            do {
                edx7 = *reinterpret_cast<void***>(esi6 + 8);
                if (reinterpret_cast<unsigned char>(edx7) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 12))) {
                    v8 = *reinterpret_cast<void***>(esi6 + 12);
                    EtwUnregisterTraceGuids(edx7, v8);
                    *reinterpret_cast<void***>(esi6 + 8) = reinterpret_cast<void**>(0);
                    *reinterpret_cast<void***>(esi6 + 12) = reinterpret_cast<void**>(0);
                }
                esi6 = *reinterpret_cast<void***>(esi6);
            } while (esi6);
        }
        image_base_ = reinterpret_cast<void**>(0x10024000);
    }
    fun_100095a0();
    eax9 = g100240d0;
    if (eax9 != 0xffffffff) {
        TlsFree(eax9);
        g100240d0 = reinterpret_cast<void**>(0xffffffff);
    }
    goto v4;
}

void fun_1000a5b0(void** a1, void** a2, void** a3) {
    void* esp4;
    void* ebp5;
    int32_t* esp6;
    int32_t ebx7;
    int32_t* esp8;
    int32_t esi9;
    int32_t* esp10;
    int32_t edi11;
    uint32_t eax12;
    uint32_t* esp13;
    int32_t* esp14;

    esp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp4) + 16);
    esp6 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp4) - reinterpret_cast<unsigned char>(a2) - 4);
    *esp6 = ebx7;
    esp8 = esp6 - 1;
    *esp8 = esi9;
    esp10 = esp8 - 1;
    *esp10 = edi11;
    eax12 = g100240c4;
    esp13 = reinterpret_cast<uint32_t*>(esp10 - 1);
    *esp13 = eax12 ^ reinterpret_cast<uint32_t>(ebp5);
    esp14 = reinterpret_cast<int32_t*>(esp13 - 1);
    *esp14 = reinterpret_cast<int32_t>(__return_address());
    g0 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp5) + 0xfffffff0);
    goto *esp14;
}

struct s166 {
    signed char[12] pad12;
    uint32_t* f12;
};

struct s167 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s168 {
    signed char[8] pad8;
    int32_t f8;
};

struct s169 {
    signed char[8] pad8;
    int32_t f8;
};

struct s170 {
    signed char[12] pad12;
    void** f12;
};

void** fun_1000c19e(int32_t ecx, void** a2, void** a3) {
    struct s166* ebp4;
    struct s167* edx5;
    int32_t eax6;
    void* ebp7;
    int32_t ebp8;
    struct s168* eax9;
    int32_t ebp10;
    int32_t v11;
    struct s169* ebp12;
    int32_t v13;
    int32_t eax14;
    int32_t ebp15;
    int32_t ebp16;
    void** ecx17;
    struct s170* ebp18;
    int32_t ebp19;

    fun_1000a5b0(0x1001f198, 20, __return_address());
    *ebp4->f12 = 0;
    edx5->f4 = 0;
    eax6 = fun_1000c23a(ecx);
    if (eax6 < 0) {
        addr_1000c220_2:
        fun_1000c27c(reinterpret_cast<int32_t>(ebp7) + 0xffffffe4, 0x1001f198, 20, __return_address(), a2);
    } else {
        *reinterpret_cast<uint32_t*>(ebp8 - 4) = 0;
        eax9 = *reinterpret_cast<struct s168**>(ebp10 - 28);
        v11 = ebp12->f8;
        v13 = eax9->f8;
        eax14 = reinterpret_cast<int32_t>(image_base_("X3", 0x10003d30, v13, edx5, v11, reinterpret_cast<int32_t>(eax9) + 4));
        *reinterpret_cast<int32_t*>(ebp15 - 36) = eax14;
        *reinterpret_cast<int32_t*>(ebp16 - 4) = -2;
        if (eax14 < 0) 
            goto addr_1000c220_2;
    }
    ecx17 = ebp18->f12;
    *reinterpret_cast<void***>(ecx17) = *reinterpret_cast<void***>(ebp19 - 28);
    fun_1000a5f5(ecx17, 0x1001f198, 20, __return_address(), a2, a3);
    goto 0x1001f198;
}

uint32_t fun_1000c754(void** ecx, void** a2, int32_t a3, int32_t a4);

/* (image base) */
int32_t image_base_ = 0x1000a705;

/* (image base) */
int32_t image_base_ = 0x1000a6fb;

/* (image base) */
int32_t image_base_ = 0x1000a70f;

int32_t GetComputerNameExW = 0x267b0;

int32_t _wcsnicmp = 0x26d88;

void** fun_1000c526(void** ecx, void** a2, void** a3) {
    void* ebp4;
    uint32_t eax5;
    uint32_t v6;
    void** ebx7;
    void** ecx8;
    void** v9;
    void** esi10;
    int32_t v11;
    int32_t edi12;
    void** v13;
    void** v14;
    void** esi15;
    int32_t v16;
    void** eax17;
    void** esi18;
    uint32_t eax19;
    uint32_t esi20;
    void** v21;
    uint32_t eax22;
    void** v23;
    uint32_t eax24;
    void* v25;
    int32_t eax26;
    int32_t v27;
    int32_t eax28;
    void** eax29;
    uint32_t v30;
    void** eax31;
    void** v32;
    void* v33;
    void* v34;
    int32_t eax35;
    int32_t eax36;
    int32_t eax37;
    int32_t eax38;
    int32_t ebx39;
    int32_t eax40;
    uint32_t eax41;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    v6 = eax5 ^ reinterpret_cast<uint32_t>(ebp4);
    ebx7 = ecx;
    ecx8 = a3;
    v9 = esi10;
    v11 = edi12;
    v13 = ecx8;
    v14 = reinterpret_cast<void**>(0);
    esi15 = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx8) = reinterpret_cast<void**>(0);
    if (!ebx7) {
        addr_1000c699_2:
        v16 = 28;
        eax17 = reinterpret_cast<void**>(LocalAlloc(0, 28));
        if (!eax17) 
            goto addr_1000c646_3;
    } else {
        esi18 = ebx7;
        ecx8 = esi18 + 2;
        do {
            esi18 = esi18 + 2;
        } while (*reinterpret_cast<void***>(esi18));
        eax19 = reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ebx7));
        esi20 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi18) - reinterpret_cast<unsigned char>(ecx8)) >> 1);
        if (*reinterpret_cast<void***>(&eax19)) 
            goto addr_1000c577_7; else 
            goto addr_1000c570_8;
    }
    v21 = ecx8;
    ecx8 = eax17;
    eax22 = fun_1000c79d(ecx8, v21, 0, 28);
    if (reinterpret_cast<int32_t>(eax22) < reinterpret_cast<int32_t>(0) || (v23 = ecx8, ecx8 = eax17, eax24 = fun_1000c754(ecx8, v23, 0, 28), reinterpret_cast<int32_t>(eax24) < reinterpret_cast<int32_t>(0))) {
        LocalFree(ecx8, eax17, 0, 28);
    } else {
        v25 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) + 0xffffffc8);
        eax26 = reinterpret_cast<int32_t>(image_base_(ecx8, 0, "n", esi15, eax17, 0, v25, 0, 28));
        LocalFree(ecx8, eax17, 0, "n", esi15, eax17, 0, v25, 0, 28);
        if (eax26) {
            addr_1000c646_3:
        } else {
            eax28 = reinterpret_cast<int32_t>(image_base_(ecx8, v27, v13, eax17, 0, "n", esi15, eax17, 0, v25, 0, 28));
            image_base_(ecx8, reinterpret_cast<uint32_t>(ebp4) + 0xffffffc8, v27, v13, eax17, 0, "n", esi15, eax17, 0, v25, 0, 28);
            if (eax28 && ((*reinterpret_cast<void***>(v13) = reinterpret_cast<void**>(0), eax28 == 0x6aa) || eax28 == 0x6ab)) {
            }
        }
    }
    if (v14) {
        LocalFree(ecx8, v14, 0, v16);
    }
    addr_1000c73f_16:
    eax29 = fun_1000a130(v6 ^ reinterpret_cast<uint32_t>(ebp4));
    return eax29;
    addr_1000c577_7:
    ecx8 = reinterpret_cast<void**>(92);
    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(&eax19) == 92)) {
        v30 = esi20 * 2 + 6;
        eax31 = reinterpret_cast<void**>(LocalAlloc(0, v30));
        ecx8 = eax31;
        v14 = ecx8;
        if (ecx8) {
            *reinterpret_cast<void***>(ecx8) = reinterpret_cast<void**>(92);
            *reinterpret_cast<void***>(ecx8 + 2) = reinterpret_cast<void**>(92);
            fun_1000c8ad(ecx8, ecx8 + 4, ebx7, esi20 * 2 + 2, 0, v30, v11, v9);
            v32 = v14;
            goto addr_1000c5e2_19;
        } else {
            goto addr_1000c73f_16;
        }
    } else {
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ebx7 + 2) == 92) || (v32 = ebx7, ebx7 = ebx7 + 4, esi20 = esi20 - 1 - 1, !esi20)) {
            goto addr_1000c73f_16;
        } else {
            addr_1000c5e2_19:
            if (!ebx7) {
                addr_1000c696_23:
                esi15 = v32;
                goto addr_1000c699_2;
            } else {
                if (esi20 <= 15 && ((v33 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) + 0xffffffd4), v34 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) + 0xffffffdc), eax35 = reinterpret_cast<int32_t>(GetComputerNameExW(0, v34, v33)), !!eax35) && (esi20 == 16 && (eax36 = reinterpret_cast<int32_t>(_wcsnicmp(reinterpret_cast<uint32_t>(ebp4) + 0xffffffdc, ebx7, esi20, 0, v34, v33)), !eax36)))) {
                    ebx7 = reinterpret_cast<void**>(0);
                    v32 = reinterpret_cast<void**>(0);
                }
                if (!ebx7) 
                    goto addr_1000c696_23;
            }
        }
    }
    if (*reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(ebx7 + esi20 * 2) - 2) == 46) {
        --esi20;
    }
    v16 = 0x20a;
    eax37 = reinterpret_cast<int32_t>(LocalAlloc(0, 0x20a));
    if (!eax37) 
        goto addr_1000c646_3;
    ecx8 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xffffffd4);
    eax38 = reinterpret_cast<int32_t>(GetComputerNameExW(3, eax37, ecx8, 0, 0x20a));
    if (!eax38 || esi20 != 0x105) {
        ebx39 = eax37;
        esi15 = v32;
    } else {
        ebx39 = eax37;
        eax40 = reinterpret_cast<int32_t>(_wcsnicmp(ebx39, ebx7, esi20, 3, eax37, ecx8, 0, 0x20a));
        eax41 = reinterpret_cast<uint32_t>(-eax40);
        esi15 = reinterpret_cast<void**>(eax41 - (eax41 + reinterpret_cast<uint1_t>(eax41 < eax41 + reinterpret_cast<uint1_t>(!!eax40))) & reinterpret_cast<unsigned char>(v32));
    }
    LocalFree(ebx39, 3, eax37, ecx8, 0, 0x20a);
    goto addr_1000c699_2;
    addr_1000c570_8:
    esi15 = reinterpret_cast<void**>(0);
    goto addr_1000c699_2;
}

uint32_t fun_1000c754(void** ecx, void** a2, int32_t a3, int32_t a4) {
    uint32_t eax5;
    void** ecx6;

    eax5 = fun_1000c853(ecx);
    if (reinterpret_cast<int32_t>(eax5) < reinterpret_cast<int32_t>(0)) {
        ecx6 = reinterpret_cast<void**>(0);
    } else {
        eax5 = fun_1000c80e(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
        ecx6 = ecx;
    }
    if (reinterpret_cast<int32_t>(eax5) >= reinterpret_cast<int32_t>(0)) {
        eax5 = fun_1000c7c3(ecx + reinterpret_cast<unsigned char>(ecx6) * 2, ecx6, "l", ecx6);
    }
    return eax5;
}

uint32_t fun_1000c853(void** a1) {
    uint32_t eax2;
    int32_t edx3;
    uint32_t edx4;

    eax2 = 0;
    if (!edx3 || edx4 > 0x7fffffff) {
        eax2 = 0xc000000d;
    }
    return eax2;
}

int32_t AcquireSRWLockShared = 0x25f2e;

int32_t ReleaseSRWLockShared = 0x25eca;

int32_t EncodePointer = 0x25f72;

void** fun_1000d65c(void** ecx, int32_t a2, struct s159* a3, struct s22*** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void* a10, void** a11, int32_t a12, int32_t a13, struct s157* a14) {
    void* ebp15;
    uint32_t eax16;
    struct s159* ebx17;
    struct s22** edi18;
    struct s22*** eax19;
    void** eax20;
    void** esi21;
    int32_t edi22;
    int32_t esi23;
    int32_t ebx24;
    int32_t eax25;
    int32_t** eax26;
    int32_t* ecx27;
    int32_t esi28;
    int32_t esi29;
    int32_t eax30;
    uint32_t ecx31;
    void** eax32;
    unsigned char* edx33;
    void** esi34;
    int32_t eax35;
    int32_t esi36;
    int32_t v37;
    struct s22** v38;
    struct s22** eax39;
    struct s22*** esi40;
    struct s22*** ecx41;
    struct s22** eax42;
    void** ecx43;
    void** esi44;
    void** ecx45;
    void** esi46;

    ebp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax16 = g100240c4;
    ebx17 = a3;
    edi18 = reinterpret_cast<struct s22**>(0);
    *a4 = reinterpret_cast<struct s22**>(0);
    eax19 = ebx17->f12;
    if (*eax19) {
        eax20 = *reinterpret_cast<void***>(ecx);
        esi21 = *reinterpret_cast<void***>(eax20 + 28);
        image_base_(esi21, ecx, edi22, esi23, ebx24);
        eax25 = reinterpret_cast<int32_t>(esi21(esi21, ecx, edi22, esi23, ebx24));
        AcquireSRWLockShared(esi21);
        if (!*a3->f12) {
            if (!eax25) {
                ebx17 = a3;
            } else {
                ReleaseSRWLockShared(eax25);
                ebx17 = a3;
            }
        } else {
            eax26 = reinterpret_cast<int32_t**>(DecodePointer());
            ecx27 = *eax26;
            esi28 = *ecx27;
            image_base_(esi28, eax26, a2);
            esi28(esi28, eax26, a2);
            if (eax25) {
                ReleaseSRWLockShared(esi28, eax25, eax26, a2);
            }
            goto addr_1000d7b4_9;
        }
    }
    esi29 = ebx17->f0;
    image_base_(esi29);
    eax30 = reinterpret_cast<int32_t>(esi29(esi29));
    if (eax30 < 0) {
        addr_1000d7b4_9:
        ecx31 = eax16 ^ reinterpret_cast<uint32_t>(ebp15) ^ reinterpret_cast<uint32_t>(ebp15);
        eax32 = fun_1000a130(ecx31, ecx31);
        return eax32;
    } else {
        if (*edx33 & 4) {
            addr_1000d7aa_12:
            edi18 = reinterpret_cast<struct s22**>(0);
        } else {
            esi34 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 28);
            image_base_(esi34, ecx);
            eax35 = reinterpret_cast<int32_t>(esi34(esi34, ecx));
            esi36 = eax35;
            v37 = esi36;
            AcquireSRWLockExclusive(esi34, v37, ecx);
            if (*ebx17->f12) {
                v38 = *ebx17->f12;
                eax39 = reinterpret_cast<struct s22**>(DecodePointer(v38, v37, ecx));
                edi18 = eax39;
                esi40 = *reinterpret_cast<struct s22****>(&(*edi18)->f4);
                ecx41 = esi40;
                image_base_(ecx41, edi18, v38, v37, ecx);
                esi40(ecx41, edi18, v38, v37, ecx);
                esi36 = esi36;
            } else {
                v38 = reinterpret_cast<struct s22**>(0);
                eax42 = reinterpret_cast<struct s22**>(EncodePointer(0, v37, ecx));
                ecx41 = ebx17->f12;
                *ecx41 = eax42;
            }
            if (esi36) {
                ReleaseSRWLockExclusive(ecx41, esi36, v38, v37, ecx);
            }
            if (!edi18) 
                goto addr_1000d7aa_12; else 
                goto addr_1000d782_19;
        }
    }
    addr_1000d7ad_20:
    *a4 = edi18;
    goto addr_1000d7b4_9;
    addr_1000d782_19:
    ecx43 = g0;
    esi44 = *reinterpret_cast<void***>(ecx43 + 8);
    image_base_(esi44, 0, v38, v37, ecx);
    esi44(esi44, 0, v38, v37, ecx);
    ecx45 = g0;
    esi46 = *reinterpret_cast<void***>(ecx45 + 8);
    image_base_(esi46, 0, 0, v38, v37, ecx);
    esi46(esi46, 0, 0, v38, v37, ecx);
    goto addr_1000d7ad_20;
}

void** fun_1000d7dd() {
    int1_t zf1;
    void** esi2;
    void** eax3;
    void** ecx4;
    int1_t zf5;
    void** tmp32_6;
    int1_t zf7;

    zf1 = g10024664 == 0;
    if (!zf1) {
        addr_1000d822_2:
        esi2 = reinterpret_cast<void**>(1);
    } else {
        esi2 = reinterpret_cast<void**>(0);
        eax3 = reinterpret_cast<void**>(LoadLibraryExW("i", 0, 0x802));
        if (eax3) {
            ecx4 = eax3;
            zf5 = g10024664 == ecx4;
            if (zf5) {
                tmp32_6 = g10024664;
                g10024664 = ecx4;
                ecx4 = tmp32_6;
            }
            if (!1) {
                FreeLibrary(ecx4, eax3, "i", 0, 0x802);
            }
        }
        zf7 = g10024664 == 0;
        if (!zf7) 
            goto addr_1000d822_2;
    }
    return esi2;
}

void** fun_1000f176(void** ecx, void** a2, void** a3);

void** fun_1000d946(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    int32_t* edx10;
    void** eax11;
    void** eax12;
    void** edi13;
    void** esi14;
    void** ebp15;

    *edx10 = 0;
    eax11 = fun_1000f176(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffff8, ecx);
    if (reinterpret_cast<signed char>(eax11) >= reinterpret_cast<signed char>(0)) {
        *edx10 = 0;
        eax12 = reinterpret_cast<void**>(0);
    } else {
        fun_1000ed1e(__return_address(), "wil", eax11, edi13, esi14, 0, 0, ebp15, __return_address(), a2, a3, a4, a5, a6, a7, a8);
        eax12 = eax11;
    }
    return eax12;
}

void** fun_1000ebb9(void** ecx) {
    void** v2;
    void** eax3;
    void** edi4;
    void** esi5;
    void** v6;

    eax3 = fun_1000e1b3(ecx, "internal\\sdk\\inc\\wil\\Resource.h", ecx, ecx, v2);
    edi4 = eax3;
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(edi4) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(edi4 == 0))) {
        esi5 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edi4)) | 0x80070000);
    } else {
        esi5 = edi4;
    }
    fun_1000e941(3);
    fun_1000ead9(ecx, "internal\\sdk\\inc\\wil\\Resource.h", 0, 0, v6, 3, esi5, 0, 3);
    return edi4;
}

void fun_1000f291(void** ecx, void*** a2) {
    void** edi3;
    void** esi4;
    void** eax5;
    void** ecx6;
    int32_t edi7;

    edi3 = *reinterpret_cast<void***>(ecx);
    esi4 = reinterpret_cast<void**>(0);
    eax5 = reinterpret_cast<void**>(WaitForSingleObjectEx());
    ecx6 = reinterpret_cast<void**>(0x80);
    if (eax5 != 0x102) {
        if (!eax5) 
            goto addr_1000f2d0_3;
        if (eax5 != 0x80) {
            ecx6 = reinterpret_cast<void**>(__return_address());
            eax5 = fun_1000de84(ecx6, 0x80);
        }
    }
    if (!eax5 || eax5 == ecx6) {
        addr_1000f2d0_3:
        esi4 = edi3;
        goto addr_1000f2d2_7;
    } else {
        addr_1000f2d2_7:
        *a2 = esi4;
        goto edi7;
    }
}

uint32_t fun_1000f0ed(void** ecx, int32_t* a2) {
    int32_t edx3;
    uint32_t eax4;

    edx3 = 0x104;
    do {
        if (!*reinterpret_cast<void***>(ecx)) 
            break;
        ecx = ecx + 2;
        --edx3;
    } while (edx3);
    eax4 = reinterpret_cast<uint32_t>(-edx3);
    if (a2) {
        if (!edx3) {
            *a2 = 0;
        } else {
            *a2 = 0x104 - edx3;
        }
    }
    return (eax4 - (eax4 + reinterpret_cast<uint1_t>(eax4 < eax4 + reinterpret_cast<uint1_t>(!!edx3))) & 0x7ff8ffa9) + 0x80070057;
}

int32_t g10024694;

void** fun_1000dea5(struct s15* ecx, void* a2) {
    void* ebp3;
    uint32_t eax4;
    uint32_t v5;
    struct s16* ebx6;
    struct s15* eax7;
    int32_t v8;
    struct s15* v9;
    unsigned char* edx10;
    int1_t zf11;
    struct s16* esi12;
    struct s16* eax13;
    signed char al14;
    struct s15* ecx15;
    struct s16* eax16;
    struct s16* v17;
    int32_t** edi18;
    int32_t esi19;
    unsigned char al20;
    int32_t esi21;
    void** eax22;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = eax4 ^ reinterpret_cast<uint32_t>(ebp3);
    ebx6 = reinterpret_cast<struct s16*>(0);
    eax7 = ecx;
    *reinterpret_cast<unsigned char*>(&v8) = 0;
    v9 = eax7;
    *edx10 = 0;
    zf11 = g100245f4 == 0;
    if (zf11) {
        esi12 = reinterpret_cast<struct s16*>(0);
    } else {
        eax13 = fun_1000e20d(ecx, ecx);
        esi12 = eax13;
        eax7 = v9;
    }
    if (esi12 && esi12->f0) {
        *edx10 = 0;
        al14 = fun_1000e373(eax7, edx10, a2);
        ecx15 = v9;
        if (al14) {
            ecx15->f40 = edx10;
        }
        eax16 = esi12->f0;
        v17 = eax16;
        do {
            edi18 = eax16->f4;
            esi19 = **edi18;
            image_base_(esi19, ecx15);
            al20 = reinterpret_cast<unsigned char>(esi19(edi18, ecx15));
            ecx15 = v9;
            *reinterpret_cast<unsigned char*>(&ebx6) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx6) | al20);
            *reinterpret_cast<unsigned char*>(&v8) = *reinterpret_cast<unsigned char*>(&ebx6);
            eax16 = v17->f8;
            v17 = eax16;
        } while (eax16);
    }
    esi21 = g10024694;
    if (esi21) {
        image_base_(esi21, v8, v9);
        esi21(esi21, v8, v9);
    }
    eax22 = fun_1000a130(v5 ^ reinterpret_cast<uint32_t>(ebp3));
    return eax22;
}

void** fun_1000e1b3(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** eax6;

    eax6 = reinterpret_cast<void**>(GetLastError());
    if (!eax6) {
        fun_1000ec6f(ecx, a2, eax6, eax6, a5, 2, 0x8007029c);
        eax6 = reinterpret_cast<void**>(0x29c);
    }
    return eax6;
}

int32_t WaitForSingleObject = 0x260b6;

int32_t ReleaseSemaphore = 0x2608c;

void** fun_1000e466(void** ecx) {
    void* ebp2;
    int32_t eax3;
    int32_t v4;
    void* v5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;
    int32_t eax9;
    int32_t* edx10;
    void** eax11;
    void* v12;
    int32_t eax13;
    int32_t eax14;
    int32_t eax15;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = reinterpret_cast<int32_t>(WaitForSingleObject());
    if (eax3 != -1) {
        if (!eax3 || eax3 == 0x102) {
            v4 = 0;
            if (eax3) {
                v5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 8);
                eax6 = reinterpret_cast<int32_t>(ReleaseSemaphore(ecx, 1, v5));
                if (eax6) {
                    if (1) {
                        eax7 = reinterpret_cast<int32_t>(ReleaseSemaphore(ecx, 1, 0, ecx, 1, v5));
                        if (!(eax7 || (eax8 = reinterpret_cast<int32_t>(GetLastError(ecx, 1, 0, ecx, 1, v5)), eax8 != 0x12a))) {
                            eax9 = reinterpret_cast<int32_t>(WaitForSingleObject(ecx, 0, ecx, 1, 0, ecx, 1, v5));
                            if (eax9 != -1) {
                                if (!eax9) {
                                    addr_1000e55a_10:
                                    *edx10 = v4;
                                    eax11 = reinterpret_cast<void**>(0);
                                    goto addr_1000e57d_11;
                                }
                            } else {
                                goto addr_1000e488_14;
                            }
                        }
                    }
                } else {
                    goto addr_1000e488_14;
                }
            } else {
                v12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 4);
                eax13 = reinterpret_cast<int32_t>(ReleaseSemaphore(ecx, 1, v12));
                if (eax13) {
                    v4 = 1;
                    eax14 = reinterpret_cast<int32_t>(ReleaseSemaphore(ecx, 1, 0, ecx, 1, v12));
                    if (eax14) 
                        goto addr_1000e4ec_19;
                    eax15 = reinterpret_cast<int32_t>(GetLastError(ecx, 1, 0, ecx, 1, v12));
                    if (eax15 == 0x12a) 
                        goto addr_1000e55a_10;
                    addr_1000e4ec_19:
                } else {
                    goto addr_1000e488_14;
                }
            }
        }
    } else {
        goto addr_1000e488_14;
    }
    fun_1000ecea(__return_address(), "wil", 0x8000ffff);
    eax11 = reinterpret_cast<void**>(0x8000ffff);
    addr_1000e57d_11:
    return eax11;
    addr_1000e488_14:
    eax11 = fun_1000ecd1(__return_address(), "wil");
    goto addr_1000e57d_11;
}

void** fun_1000ec1c(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** eax7;
    void** esi8;

    eax7 = fun_1000e1b3(ecx, a2, ecx, ecx, a5);
    esi8 = eax7;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(esi8) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(esi8 == 0))) {
        esi8 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi8)) | 0x80070000);
    }
    fun_1000e941(1);
    fun_1000ead9(ecx, a2, 0, 0, a5, 1, esi8, 0, 1);
    return esi8;
}

signed char g10024688;

int32_t g10024684;

signed char fun_1000e584(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    int1_t zf4;
    int32_t esi5;
    int32_t eax6;
    uint32_t eax7;
    uint32_t eax8;
    unsigned char al9;
    void** eax10;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    zf4 = g10024688 == 0;
    if (!zf4) {
        addr_1000e5cc_2:
    } else {
        esi5 = g10024684;
        if (!esi5) {
            eax6 = reinterpret_cast<int32_t>(IsDebuggerPresent());
            eax7 = reinterpret_cast<uint32_t>(-eax6);
            eax8 = -(eax7 - (eax7 + reinterpret_cast<uint1_t>(eax7 < eax7 + reinterpret_cast<uint1_t>(!!eax6))));
        } else {
            image_base_(esi5);
            al9 = reinterpret_cast<unsigned char>(esi5(esi5));
            eax8 = al9;
        }
        if (eax8) 
            goto addr_1000e5cc_2; else 
            goto addr_1000e5c8_7;
    }
    addr_1000e5ce_8:
    eax10 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return *reinterpret_cast<signed char*>(&eax10);
    addr_1000e5c8_7:
    goto addr_1000e5ce_8;
}

void** fun_1000e9ed(void** ecx);

void** g10024600;

void** g10024698;

int32_t OutputDebugStringW = 0x260fe;

signed char g10024690;

int32_t g100245fc;

void** fun_1000e5dc(void** ecx, void** a2, void** a3, void** a4, void** a5, int32_t a6, void** a7, void** a8, signed char a9, void** a10, void** a11, signed char* a12, void** a13, struct s49* a14) {
    void* ebp15;
    uint32_t eax16;
    uint32_t v17;
    void** v18;
    void** ebx19;
    void** ebx20;
    void** v21;
    void** esi22;
    void** v23;
    void** edi24;
    void** edi25;
    void** v26;
    void** v27;
    int32_t eax28;
    void** eax29;
    int32_t eax30;
    int32_t eax31;
    struct s49* esi32;
    void** eax33;
    int32_t eax34;
    void*** edi35;
    void** edx36;
    void** eax37;
    void** ecx38;
    void** edi39;
    void** edi40;
    void** edi41;
    signed char al42;
    unsigned char al43;
    void** edi44;
    int1_t zf45;
    void** edi46;
    int1_t zf47;
    int1_t zf48;
    int32_t esi49;
    void** eax50;

    ebp15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax16 = g100240c4;
    v17 = eax16 ^ reinterpret_cast<uint32_t>(ebp15);
    v18 = ebx19;
    ebx20 = a10;
    v21 = esi22;
    v23 = edi24;
    edi25 = a7;
    *reinterpret_cast<void***>(ebx20) = reinterpret_cast<void**>(0);
    v26 = ecx;
    *a12 = 0;
    v27 = reinterpret_cast<void**>(0);
    eax28 = a6;
    if (!eax28) {
        ecx = edi25;
        eax29 = fun_1000e9c7(ecx);
    } else {
        eax30 = eax28 - 1;
        if (!eax30) {
            ecx = edi25;
            eax29 = fun_1000e9ed(ecx);
        } else {
            eax31 = eax30 - 1;
            if (!eax31) {
                if (reinterpret_cast<signed char>(edi25) >= reinterpret_cast<signed char>(0)) {
                    edi25 = reinterpret_cast<void**>(0x8007029c);
                    fun_1000ec6f(ecx, a2, a3, a4, a5, 2, 0x8007029c);
                }
                ecx = edi25;
                eax29 = fun_1000e9da(ecx);
            } else {
                if (eax31 - 1) {
                    addr_1000e665_10:
                    esi32 = a14;
                    esi32->f0 = a6;
                    esi32->f4 = edi25;
                    __asm__("lock xadd [0x10024628], eax");
                    esi32->f8 = 2;
                    eax33 = a8;
                    if (!eax33 || (ecx = reinterpret_cast<void**>(0), !*reinterpret_cast<void***>(eax33))) {
                        eax33 = reinterpret_cast<void**>(0);
                        goto addr_1000e68f_12;
                    }
                } else {
                    eax29 = fun_10009bb0(edi25);
                }
            }
        }
    }
    v27 = eax29;
    goto addr_1000e665_10;
    addr_1000e68f_12:
    esi32->f12 = eax33;
    eax34 = reinterpret_cast<int32_t>(GetCurrentThreadId(ecx));
    esi32->f16 = eax34;
    edi35 = &esi32->f44;
    esi32->f28 = a2;
    esi32->f32 = edx36;
    esi32->f36 = v27;
    esi32->f20 = a4;
    esi32->f24 = a3;
    esi32->f72 = a5;
    esi32->f76 = v26;
    eax37 = reinterpret_cast<void**>(0);
    ecx38 = reinterpret_cast<void**>(6);
    esi32->f40 = reinterpret_cast<void**>(0);
    while (ecx38) {
        --ecx38;
        *edi35 = reinterpret_cast<void**>(0);
        edi35 = edi35 + 4;
        esi32 = reinterpret_cast<struct s49*>(&esi32->f4);
    }
    edi39 = g10024600;
    if (edi39) {
        ecx38 = edi39;
        image_base_(ecx38);
        eax37 = reinterpret_cast<void**>(edi39(ecx38));
    }
    edi40 = g100245f8;
    esi32->f68 = eax37;
    if (edi40) {
        ecx38 = edi40;
        image_base_(ecx38, esi32, a12, 0x400);
        edi40(ecx38, esi32, a12, 0x400);
    }
    edi41 = g10024698;
    if (edi41) {
        ecx38 = edi41;
        image_base_(ecx38, esi32);
        edi41(ecx38, esi32);
    }
    if (reinterpret_cast<signed char>(esi32->f4) >= reinterpret_cast<signed char>(0)) {
        if (a6 != 3) {
            fun_1000f274(ecx38, v23, v21, v18);
        }
        esi32->f4 = reinterpret_cast<void**>(0x8000ffff);
    }
    al42 = fun_1000e584(ecx38);
    al43 = reinterpret_cast<uint1_t>(!!al42);
    if (a9 || al43) {
        edi44 = g1002468c;
        if (edi44 && (zf45 = g10024691 == 0, zf45)) {
            ecx38 = edi44;
            image_base_(ecx38, esi32, ebx20, 0x800);
            edi44(ecx38, esi32, ebx20, 0x800);
        }
        if (!*reinterpret_cast<void***>(ebx20)) {
            ecx38 = ebx20;
            fun_1000dfa9(ecx38, esi32);
        }
        if (al43) {
            OutputDebugStringW(ecx38, ebx20);
        }
    } else {
        edi46 = g1002468c;
        if (edi46 && (zf47 = g10024691 == al43, zf47)) {
            image_base_(edi46, esi32, 0, 0);
            edi46(edi46, esi32, 0, 0);
        }
    }
    zf48 = g10024690 == 0;
    if (!zf48 && (esi49 = g100245fc, !!esi49)) {
        image_base_(esi49);
        esi49(esi49);
    }
    eax50 = fun_1000a130(v17 ^ reinterpret_cast<uint32_t>(ebp15));
    return eax50;
}

void** g100245ec;

void** fun_1000e9ed(void** ecx) {
    g100245ec = ecx;
    __asm__("lock xadd [0x10024634], eax");
    return 2;
}

void fun_1000c870(void** ecx) {
    int32_t v2;
    void* esp3;
    void* ecx4;
    int32_t* ecx5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;
    uint32_t eax9;
    int32_t eax10;
    void* eax11;
    int32_t* eax12;

    v2 = reinterpret_cast<int32_t>(__return_address());
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ecx4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp3) + 4);
    ecx5 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx4) - eax6 & ~(eax7 - (eax8 + reinterpret_cast<uint1_t>(eax9 < eax10 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(ecx4) < reinterpret_cast<uint32_t>(eax11))))));
    eax12 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp3) & 0xfffff000);
    while (reinterpret_cast<uint32_t>(ecx5) < reinterpret_cast<uint32_t>(eax12)) {
        eax12 = eax12 - 0x400;
    }
    *ecx5 = v2;
    goto *ecx5;
}

struct s14* fun_1000de26(struct s14* ecx, signed char a2) {
    struct s14* esi3;
    int1_t zf4;
    int32_t eax5;
    struct s14* eax6;
    struct s14* ecx7;

    esi3 = ecx;
    zf4 = esi3->f16 == 0;
    if (zf4) {
        if (a2 && ((eax5 = reinterpret_cast<int32_t>(GetProcessHeap(8, 0x104)), eax6 = reinterpret_cast<struct s14*>(HeapAlloc(eax5, 8, 0x104)), esi3->f16 = eax6, !!eax6) && (esi3->f20 = 5, esi3->f22 = 0, ecx7 = reinterpret_cast<struct s14*>(reinterpret_cast<uint32_t>(eax6) + 0x104), eax6 != ecx7))) {
            do {
                eax6->f0 = 52;
                eax6 = reinterpret_cast<struct s14*>(reinterpret_cast<uint32_t>(eax6) + 52);
            } while (eax6 != ecx7);
        }
        zf4 = esi3->f16 == 0;
    }
    *reinterpret_cast<unsigned char*>(&eax6) = reinterpret_cast<uint1_t>(!zf4);
    return eax6;
}

int32_t OpenSemaphoreW = 0x2612c;

void** fun_1000f176(void** ecx, void** a2, void** a3) {
    void* ebp4;
    uint32_t eax5;
    void** edi6;
    void** esi7;
    void** ebx8;
    void** ecx9;
    void** eax10;
    void** esi11;
    void** eax12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    int32_t eax17;
    int32_t eax18;
    uint32_t ecx19;
    void** eax20;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a2 + 4) = reinterpret_cast<void**>(0);
    fun_1000efcd(reinterpret_cast<uint32_t>(ebp4) + 0xfffffdf4, ecx, edi6, esi7, ebx8);
    ecx9 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffdf4);
    fun_1000ef66(ecx9, "_", edi6, esi7, ebx8);
    eax10 = reinterpret_cast<void**>(OpenSemaphoreW());
    esi11 = eax10;
    if (esi11) {
        eax12 = fun_1000e466(esi11);
        if (reinterpret_cast<signed char>(eax12) >= reinterpret_cast<signed char>(0)) {
            ecx9 = a2;
            __asm__("cdq ");
            *reinterpret_cast<void***>(ecx9) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx9 + 4) = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffdec);
            goto addr_1000f242_4;
        } else {
            ecx9 = reinterpret_cast<void**>(__return_address());
            fun_1000ed1e(ecx9, "wil", eax12, 0x1f0003, 0, reinterpret_cast<uint32_t>(ebp4) + 0xfffffdf4, edi6, esi7, ebx8, a2, 0, esi11, v13, v14, v15, v16);
        }
    } else {
        eax17 = reinterpret_cast<int32_t>(GetLastError());
        if (eax17 == 2) {
            addr_1000f242_4:
            if (esi11 && (eax18 = reinterpret_cast<int32_t>(CloseHandle(esi11)), !eax18)) {
                fun_1000f27a(__return_address(), ecx9, esi11);
                goto addr_1000f25f_8;
            }
        } else {
            ecx9 = reinterpret_cast<void**>(__return_address());
            fun_1000ecd1(ecx9, "wil");
        }
    }
    esi11 = esi11;
    goto addr_1000f242_4;
    addr_1000f25f_8:
    ecx19 = eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4);
    eax20 = fun_1000a130(ecx19, ecx19);
    return eax20;
}

struct s171 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_1000f391(struct s171** ecx, struct s171*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s171* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s171** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s171**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

void** fun_1000f41f(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** esi47;
    void** eax48;
    void** ecx49;
    void** eax50;
    void** edi51;
    void** eax52;
    void** edi53;
    void** edi54;
    void** ebx55;
    void** ebp56;
    uint32_t ecx57;
    void** eax58;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    eax48 = fun_1000b6b9(12, 0x10002b64, esi47);
    if (eax48) {
        ecx49 = g10024484;
        *reinterpret_cast<void***>(eax48 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001b08);
        if (ecx49) {
            eax50 = *reinterpret_cast<void***>(ecx49);
            edi51 = *reinterpret_cast<void***>(eax50 + 4);
            image_base_(edi51, ecx49);
            edi51(edi51, ecx49);
        }
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001090);
        if (eax48) {
            eax52 = *reinterpret_cast<void***>(eax48);
            edi53 = *reinterpret_cast<void***>(eax52 + 4);
            image_base_(edi53, eax48);
            edi53(edi53, eax48);
        }
        *reinterpret_cast<void***>(ecx) = eax48;
        fun_100136b5(ebp44 + 0xfffffff4, edi54, esi47, ebx55, eax48, eax48, ecx, v46, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    ecx57 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
    eax58 = fun_1000a130(ecx57, ecx57);
    return eax58;
}

void** fun_1000f6d4(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** esi47;
    void** eax48;
    void** ecx49;
    void** eax50;
    void** edi51;
    void** eax52;
    void** edi53;
    void** edi54;
    void** ebx55;
    void** ebp56;
    uint32_t ecx57;
    void** eax58;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    eax48 = fun_1000b6b9(16, 0x10002b64, esi47);
    if (eax48) {
        ecx49 = g10024484;
        *reinterpret_cast<void***>(eax48 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001b20);
        if (ecx49) {
            eax50 = *reinterpret_cast<void***>(ecx49);
            edi51 = *reinterpret_cast<void***>(eax50 + 4);
            image_base_(edi51, ecx49);
            edi51(edi51, ecx49);
        }
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x100010a8);
        if (eax48) {
            eax52 = *reinterpret_cast<void***>(eax48);
            edi53 = *reinterpret_cast<void***>(eax52 + 4);
            image_base_(edi53, eax48);
            edi53(edi53, eax48);
        }
        *reinterpret_cast<void***>(ecx) = eax48;
        fun_100136b5(ebp44 + 0xfffffff4, edi54, esi47, ebx55, eax48, eax48, ecx, v46, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    ecx57 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
    eax58 = fun_1000a130(ecx57, ecx57);
    return eax58;
}

void fun_1000fc75(struct s56* ecx) {
    int32_t esi2;

    if (*reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(ecx) + 2) > 0) {
        GetProcessHeap(esi2);
        HeapFree();
        ecx->f0 = 0;
        *reinterpret_cast<int32_t*>(&ecx->f2) = 0;
    }
    return;
}

void** fun_1000fc0f(void** ecx) {
    int32_t v2;
    int32_t ebx3;
    uint32_t v4;
    uint32_t esi5;
    int32_t v6;
    int32_t edi7;
    void*** edi8;
    void*** edx9;
    void** v10;
    void** esi11;
    void*** ecx12;
    void* esi13;
    void** esi14;
    void* ebx15;
    void** eax16;
    void** eax17;
    void** ecx18;
    void** v19;

    v2 = ebx3;
    v4 = esi5;
    v6 = edi7;
    edi8 = edx9;
    v10 = ecx;
    esi11 = ecx;
    *edi8 = reinterpret_cast<void**>(0);
    ecx12 = reinterpret_cast<void***>(esi11 + 2);
    do {
        esi11 = esi11 + 2;
    } while (*reinterpret_cast<void***>(esi11));
    esi13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(esi11) - reinterpret_cast<uint32_t>(ecx12)) >> 1);
    if (reinterpret_cast<uint32_t>(esi13) >= 0xffffffff) {
        esi14 = reinterpret_cast<void**>(0x80070216);
    } else {
        ebx15 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi13) + 1);
        eax16 = reinterpret_cast<void**>(GetProcessHeap(ebx15, edi8));
        eax17 = fun_1000fbd4(eax16, ebx15, edi8);
        esi14 = eax17;
        if (reinterpret_cast<signed char>(esi14) >= reinterpret_cast<signed char>(0)) {
            ecx18 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx15) + reinterpret_cast<uint32_t>(ebx15));
            v19 = *edi8;
            fun_1000c8ad(ecx18, v19, v10, ecx18, v6, v4, v2, v10);
        }
    }
    return esi14;
}

struct s172 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_1000fd10(struct s172** ecx, struct s172*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s172* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s172** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s172**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

void** fun_1000fd9e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** esi47;
    void** eax48;
    void** ecx49;
    void** eax50;
    void** edi51;
    void** eax52;
    void** edi53;
    void** edi54;
    void** ebx55;
    void** ebp56;
    uint32_t ecx57;
    void** eax58;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    eax48 = fun_1000b6b9(12, 0x10002b64, esi47);
    if (eax48) {
        ecx49 = g10024484;
        *reinterpret_cast<void***>(eax48 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x10001b3c);
        if (ecx49) {
            eax50 = *reinterpret_cast<void***>(ecx49);
            edi51 = *reinterpret_cast<void***>(eax50 + 4);
            image_base_(edi51, ecx49);
            edi51(edi51, ecx49);
        }
        *reinterpret_cast<void***>(eax48) = reinterpret_cast<void**>(0x100010c4);
        if (eax48) {
            eax52 = *reinterpret_cast<void***>(eax48);
            edi53 = *reinterpret_cast<void***>(eax52 + 4);
            image_base_(edi53, eax48);
            edi53(edi53, eax48);
        }
        *reinterpret_cast<void***>(ecx) = eax48;
        fun_100136b5(ebp44 + 0xfffffff4, edi54, esi47, ebx55, eax48, eax48, ecx, v46, ebp56, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    ecx57 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
    eax58 = fun_1000a130(ecx57, ecx57);
    return eax58;
}

signed char fun_10010451(struct s61** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    int32_t eax5;
    void** edi6;
    void** esi7;
    void** eax8;
    void** eax9;
    uint32_t ecx10;
    void** eax11;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = (*ecx)->f20;
    image_base_(esi4);
    eax5 = reinterpret_cast<int32_t>(esi4(esi4));
    if (eax5 < 0 || (eax8 = fun_1000c8a7(esi4, reinterpret_cast<uint32_t>(ebp2) + 0xffffffec, 0x10008184, 16, edi6, esi7, 0, 0, 0, 0), !!eax8) && (eax9 = fun_1000c8a7(esi4, reinterpret_cast<uint32_t>(ebp2) + 0xffffffec, 0x10008174, 16, edi6, esi7, 0, 0, 0, 0), !!eax9)) {
    }
    ecx10 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax11 = fun_1000a130(ecx10, ecx10);
    return *reinterpret_cast<signed char*>(&eax11);
}

struct s173 {
    signed char[20] pad20;
    uint32_t f20;
};

int32_t PropVariantClear = 0x261f0;

void** fun_1001037d(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    void* esi4;
    uint32_t* edx5;
    struct s173* esi6;
    uint32_t ecx7;
    int32_t eax8;
    uint32_t ecx9;
    void** eax10;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = *ecx;
    *edx5 = 0;
    esi6 = reinterpret_cast<struct s173*>(reinterpret_cast<int32_t>(esi4) + 4 + 4 + 4 + 4);
    ecx7 = esi6->f20;
    image_base_(ecx7);
    eax8 = reinterpret_cast<int32_t>(esi6->f20(ecx7));
    if (eax8 == 0x88982f40 || 1) {
        *edx5 = 0;
    } else {
        if (eax8 >= 0) {
            ecx7 = 2;
            if (0) {
                *edx5 = 8;
            } else {
                if (0) {
                    *edx5 = 2;
                } else {
                    if (0) {
                        *edx5 = 16;
                    } else {
                        if (0) {
                            *edx5 = 17;
                        } else {
                            if (0) {
                                *edx5 = 1;
                            } else {
                                if (0) {
                                    *edx5 = 19;
                                } else {
                                    if (0) {
                                        *edx5 = 3;
                                    } else {
                                        *edx5 = 0;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    PropVariantClear(ecx7);
    ecx9 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax10 = fun_1000a130(ecx9, ecx9);
    return eax10;
}

void** fun_100102ce(void** ecx, void** a2, void** a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    void** eax7;
    void** eax8;
    void* v9;
    void** esi10;
    void** eax11;
    void** ecx12;
    void** esi13;
    int32_t edx14;
    void** eax15;
    void** eax16;
    void** esi17;
    void** ecx18;
    void** esi19;
    void** eax20;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    eax7 = fun_1001037d(a2);
    if (reinterpret_cast<signed char>(eax7) >= reinterpret_cast<signed char>(0) && (eax8 = *reinterpret_cast<void***>(ecx), v9 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 8), esi10 = *reinterpret_cast<void***>(eax8 + 52), image_base_(esi10, ecx, v9), eax11 = reinterpret_cast<void**>(esi10(esi10, ecx, v9)), reinterpret_cast<signed char>(eax11) >= reinterpret_cast<signed char>(0))) {
        ecx12 = g0;
        esi13 = *reinterpret_cast<void***>(ecx12 + 32);
        image_base_(esi13, 0, edx14, 0, ecx, v9);
        eax15 = reinterpret_cast<void**>(esi13(esi13, 0, edx14, 0, ecx, v9));
        if (reinterpret_cast<signed char>(eax15) >= reinterpret_cast<signed char>(0)) {
            *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
            eax16 = g0;
            esi17 = *reinterpret_cast<void***>(eax16 + 4);
            image_base_(esi17, 0, 0, edx14, 0, ecx, v9);
            esi17(esi17, 0, 0, edx14, 0, ecx, v9);
        }
        ecx18 = g0;
        esi19 = *reinterpret_cast<void***>(ecx18 + 8);
        image_base_(esi19, 0, 0, edx14, 0, ecx, v9);
        esi19(esi19, 0, 0, edx14, 0, ecx, v9);
    }
    eax20 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax20;
}

void** fun_1001dde6(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44) {
    void*** ebp45;
    uint32_t eax46;
    void** v47;
    uint32_t* edx48;
    void** eax49;
    void** ecx50;
    void** ebx51;
    void** edi52;
    void** esi53;
    void** v54;
    void** ebp55;
    void** eax56;
    int32_t v57;
    void** ecx58;
    void** esi59;
    void** v60;
    void** eax61;

    ebp45 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax46 = g100240c4;
    v47 = reinterpret_cast<void**>(eax46 ^ reinterpret_cast<uint32_t>(ebp45));
    eax49 = fun_1001cd72(ecx, ecx, edx48);
    if (reinterpret_cast<int1_t>(eax49 == 1)) {
        ecx50 = reinterpret_cast<void**>(ebp45 + 0xfffffff8);
        fun_100136b5(ecx50, ebx51, edi52, esi53, v54, 0, v47, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
        eax56 = reinterpret_cast<void**>(CoCreateInstance(ecx50));
        if (reinterpret_cast<signed char>(eax56) >= reinterpret_cast<signed char>(0)) {
            if (v57) {
                fun_1001cdc9(ecx50);
            }
            ecx58 = g0;
            esi59 = *reinterpret_cast<void***>(ecx58);
            image_base_(esi59, 0, 0x1000305c, edx48);
            esi59(esi59, 0, 0x1000305c, edx48);
        }
        fun_100136b5(ebp45 + 0xfffffff8, 0x10008164, 0, eax49, 0x1000305c, ebp45 + 0xfffffff8, ebx51, edi52, esi53, v60, 0, v47, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
    }
    eax61 = fun_1000a130(reinterpret_cast<unsigned char>(v47) ^ reinterpret_cast<uint32_t>(ebp45));
    return eax61;
}

uint16_t* g10024070 = reinterpret_cast<uint16_t*>(0);

struct s174 {
    signed char[3] pad3;
    signed char f3;
};

int32_t EtwEventWrite = 0x262b2;

void fun_10010ae0(int32_t a1, struct s62* a2) {
    uint16_t* ebx3;
    int32_t v4;
    int32_t eax5;
    struct s174* edx6;

    ebx3 = g10024070;
    if (ebx3) {
        v4 = 0;
        a2->f0 = ebx3;
        a2->f4 = 0;
        a2->f8 = *ebx3;
        a2->f12 = 2;
    } else {
        *reinterpret_cast<signed char*>(&v4) = 12;
    }
    eax5 = v4;
    if (edx6->f3 == *reinterpret_cast<signed char*>(&eax5)) {
    }
    EtwEventWrite();
    return;
}

struct s175 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_10010b90(struct s175** ecx, struct s175*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s175* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s175** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s175**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

struct s176 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_10010c1e(struct s176** ecx, struct s176*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s176** edi5;
    struct s23* edx6;
    int32_t eax7;
    struct s176* eax8;
    int32_t esi9;
    int32_t eax10;
    struct s176** ebx11;
    int32_t eax12;
    int32_t eax13;
    void** eax14;
    struct s176** ecx15;
    int32_t esi16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    edi5 = reinterpret_cast<struct s176**>(0);
    *a2 = reinterpret_cast<struct s176**>(0);
    eax7 = fun_1000f58d(edx6);
    if (eax7) {
        *a2 = ecx;
        eax8 = *ecx;
        esi9 = eax8->f4;
        image_base_(esi9, ecx);
        esi9(esi9, ecx);
    } else {
        eax10 = fun_1000f58d(edx6);
        if (!eax10) {
            ebx11 = ecx + 1;
            eax12 = fun_1000f58d(edx6);
            if (!eax12) {
                eax13 = fun_1000f58d(edx6);
                if (!eax13) {
                    edi5 = reinterpret_cast<struct s176**>(0x80004002);
                } else {
                    *a2 = ebx11 + 1;
                }
            } else {
                *a2 = ebx11;
            }
            if (reinterpret_cast<int32_t>(edi5) < 0) 
                goto addr_10010ca6_10; else 
                goto addr_10010c94_11;
        } else {
            *a2 = ecx;
            goto addr_10010c94_11;
        }
    }
    addr_10010cbe_13:
    eax14 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax14;
    addr_10010ca6_10:
    goto addr_10010cbe_13;
    addr_10010c94_11:
    ecx15 = *a2;
    esi16 = (*ecx15)->f4;
    image_base_(esi16, ecx15);
    esi16(esi16, ecx15);
    goto addr_10010ca6_10;
}

void** fun_10010e14(uint32_t* ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    void** eax5;
    int32_t edi6;
    void** eax7;
    void** esi8;
    void** ecx9;
    void** esi10;
    void** eax11;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *ecx = 0;
    eax5 = fun_1000b6b9(52, 0x10002b64, esi4);
    if (eax5) {
        eax7 = fun_10010ee4(eax5, 0x10002b64, edi6);
        esi8 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax7));
        image_base_(esi8, eax7, 0x10002fc4, ecx, edi6);
        esi8(esi8, eax7, 0x10002fc4, ecx, edi6);
        ecx9 = *reinterpret_cast<void***>(eax7);
        esi10 = *reinterpret_cast<void***>(ecx9 + 8);
        image_base_(esi10);
        esi10(esi10);
    }
    eax11 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax11;
}

void** fun_10010e89(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** ecx4;
    void** eax5;
    void** esi6;
    void** eax7;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ecx4 = g10024484;
    *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001b80);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0x10001b64);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001b54);
    if (ecx4) {
        eax5 = *reinterpret_cast<void***>(ecx4);
        esi6 = *reinterpret_cast<void***>(eax5 + 4);
        image_base_(esi6);
        esi6(esi6);
    }
    eax7 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax7;
}

struct s177 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    signed char[4] pad16;
    int32_t f16;
    signed char[4] pad24;
    void** f24;
    signed char[3] pad28;
    signed char f28;
    signed char[3] pad32;
    void** f32;
};

void** fun_10010f22(struct s177* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48, void** a49, void** a50) {
    int1_t zf51;
    void** esi52;
    void** eax53;

    zf51 = ecx->f28 == 0;
    ecx->f0 = 0x10001be0;
    ecx->f4 = 0x10001bc4;
    ecx->f8 = 0x10001bb4;
    if (!zf51) {
        image_base_();
        image_base_(0x10000000);
    }
    fun_100136b5(&ecx->f32, esi52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50);
    eax53 = fun_100136b5(&ecx->f24, esi52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50);
    ecx->f16 = 0xc0000001;
    return eax53;
}

int32_t BuildReasonArray = 0x26e5a;

struct s118* fun_100165b7(struct s118* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10);

/* (image base) */
int32_t image_base_ = 0x1000a9c0;

/* (image base) */
int32_t image_base_ = 0x1000a9ca;

/* (image base) */
int32_t image_base_ = 0x1000a9b6;

struct s178 {
    signed char[84] pad84;
    int32_t f84;
};

void** fun_10016f2a(void** ecx, uint32_t a2, int32_t a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    uint32_t v7;
    void** eax8;
    void** v9;
    void** ebx10;
    void** v11;
    void** esi12;
    void** v13;
    void** edi14;
    void** edi15;
    void** v16;
    void** v17;
    void** eax18;
    void** v19;
    void** esi20;
    void** eax21;
    uint32_t ecx22;
    void** eax23;
    uint16_t ax24;
    void** v25;
    int32_t eax26;
    void** eax27;
    void** eax28;
    void** esi29;
    int32_t v30;
    void** esi31;
    void** v32;
    int32_t eax33;
    void** ebx34;
    uint16_t ax35;
    void** v36;
    struct s118* eax37;
    struct s118* ecx38;
    struct s118* eax39;
    struct s118* v40;
    signed char al41;
    uint16_t ax42;
    void** v43;
    struct s118* eax44;
    struct s118* eax45;
    struct s118* ecx46;
    void** v47;
    struct s118* v48;
    void** edx49;
    void** v50;
    int32_t eax51;
    void** eax52;
    void** eax53;
    void** v54;
    void** eax55;
    void** eax56;
    uint16_t ax57;
    void** v58;
    struct s118* eax59;
    void** v60;
    void** eax61;
    uint16_t ax62;
    uint32_t v63;
    int32_t eax64;
    void** eax65;
    void** eax66;
    uint16_t ax67;
    uint32_t v68;
    struct s178** eax69;
    int32_t esi70;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    v7 = eax6 ^ reinterpret_cast<uint32_t>(ebp5);
    eax8 = g10024480;
    v9 = ebx10;
    v11 = esi12;
    v13 = edi14;
    edi15 = ecx;
    v16 = edi15;
    v17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp5) + 0xffffffe8);
    eax18 = *reinterpret_cast<void***>(edi15 + 0x88);
    v19 = eax18;
    esi20 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax18) + 0xb0);
    image_base_(esi20);
    eax21 = reinterpret_cast<void**>(esi20(esi20));
    if (reinterpret_cast<signed char>(eax21) < reinterpret_cast<signed char>(0)) {
        addr_10017176_2:
        ecx22 = v7 ^ reinterpret_cast<uint32_t>(ebp5);
        eax23 = fun_1000a130(ecx22, ecx22);
        return eax23;
    } else {
        ax24 = reinterpret_cast<uint16_t>(image_base_(esi20, "R"));
        v25 = reinterpret_cast<void**>(static_cast<uint32_t>(ax24));
        eax26 = reinterpret_cast<int32_t>(image_base_(edi15, v25, "R"));
        eax27 = fun_100191c8(eax26, a2, eax8, v25, "R", v19, v17);
        if (reinterpret_cast<signed char>(eax27) < reinterpret_cast<signed char>(0)) {
            addr_1001715a_4:
            eax28 = *reinterpret_cast<void***>(edi15 + 0x88);
            esi29 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax28) + 0xb4);
            image_base_(esi29, eax28, v30, v25, "R");
            esi29(esi29, eax28, v30, v25, "R");
            goto addr_10017176_2;
        } else {
            esi31 = reinterpret_cast<void**>(0);
            v32 = edi15 + 0x8c;
            eax33 = reinterpret_cast<int32_t>(BuildReasonArray(eax26, v32, 1, 0, v25, "R"));
            if (!eax33) {
                goto addr_1001715a_4;
            } else {
                ebx34 = reinterpret_cast<void**>(0);
                ax35 = reinterpret_cast<uint16_t>(image_base_(eax26, "O", v32, 1, 0, v25, "R"));
                v36 = reinterpret_cast<void**>(static_cast<uint32_t>(ax35));
                eax37 = reinterpret_cast<struct s118*>(image_base_(edi15, v36, "O", v32, 1, 0, v25, "R"));
                ecx38 = eax37;
                eax39 = fun_100165d3(ecx38, v36, "O", v32, 1, 0, v25, "R");
                v40 = eax39;
                al41 = fun_1001d3b4(ecx38, v36, "O", v32, 1, 0, v25, "R");
                if (!al41) {
                    ax42 = reinterpret_cast<uint16_t>(image_base_(ecx38, "O", v36, "O", v32, 1, 0, v25, "R"));
                    v43 = reinterpret_cast<void**>(static_cast<uint32_t>(ax42));
                    eax44 = reinterpret_cast<struct s118*>(image_base_(edi15, v43, "O", v36, "O", v32, 1, 0, v25, "R"));
                    eax45 = fun_100165b7(eax44, v43, "O", v36, "O", v32, 1, 0, v25, "R");
                    ecx46 = eax45;
                    v47 = reinterpret_cast<void**>(0);
                    v48 = ecx46;
                    edx49 = reinterpret_cast<void**>(0);
                    do {
                        if (reinterpret_cast<signed char>(edx49) >= reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi15 + 0x90))) 
                            break;
                        v50 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi15 + 0x8c) + reinterpret_cast<unsigned char>(edx49) * 4) + 4;
                        eax51 = reinterpret_cast<int32_t>(image_base_(ecx46, v50, v43, "O", v36, "O", v32, 1, 0, v25, "R"));
                        if (eax51 == -1 || (ebx34 = reinterpret_cast<void**>(0), eax51 == -2)) {
                            ebx34 = reinterpret_cast<void**>(0x80004005);
                        }
                        ecx46 = v48;
                        edx49 = v47 + 1;
                        v47 = edx49;
                    } while (reinterpret_cast<signed char>(ebx34) >= reinterpret_cast<signed char>(0));
                    if (reinterpret_cast<signed char>(ebx34) < reinterpret_cast<signed char>(0)) 
                        goto addr_1001715a_4;
                    image_base_(ecx46, 0, v43, "O", v36, "O", v32, 1, 0, v25, "R");
                    eax52 = fun_10017318(v40, 0, v43, "O", v36, "O", v32, 1, 0, v25, "R", v19, v17, v13, v11, v9);
                    if (reinterpret_cast<signed char>(eax52) < reinterpret_cast<signed char>(0)) 
                        goto addr_1001715a_4;
                    eax53 = reinterpret_cast<void**>(image_base_(v48, 1, 0, v43, "O", v36, "O", v32, 1, 0, v25, "R"));
                    if (reinterpret_cast<signed char>(eax53) < reinterpret_cast<signed char>(0)) 
                        goto addr_1001715a_4;
                } else {
                    do {
                        if (reinterpret_cast<signed char>(esi31) >= reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi15 + 0x90))) 
                            goto addr_100170c1_17;
                        ecx38 = v40;
                        v54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi15 + 0x8c) + reinterpret_cast<unsigned char>(esi31) * 4) + 4;
                        eax55 = reinterpret_cast<void**>(image_base_(ecx38, v54, v36, "O", v32, 1, 0, v25, "R"));
                        ebx34 = eax55;
                        ++esi31;
                    } while (reinterpret_cast<signed char>(ebx34) >= reinterpret_cast<signed char>(0));
                    goto addr_10017016_19;
                }
            }
        }
    }
    ecx38 = v48;
    eax56 = reinterpret_cast<void**>(image_base_(ecx38, 1, 1, 0, v43, "O", v36, "O", v32, 1, 0, v25, "R"));
    ebx34 = eax56;
    addr_100170c1_17:
    if (reinterpret_cast<signed char>(ebx34) >= reinterpret_cast<signed char>(0) && ((ax57 = reinterpret_cast<uint16_t>(image_base_(ecx38, "S", v36, "O", v32, 1, 0, v25, "R")), v58 = reinterpret_cast<void**>(static_cast<uint32_t>(ax57)), eax59 = reinterpret_cast<struct s118*>(image_base_(edi15, v58, "S", v36, "O", v32, 1, 0, v25, "R")), eax61 = fun_10017318(eax59, v58, "S", v36, "O", v32, 1, 0, v25, "R", v19, v17, v13, v11, v9, v60), reinterpret_cast<signed char>(eax61) >= reinterpret_cast<signed char>(0)) && ((ax62 = reinterpret_cast<uint16_t>(image_base_(eax59, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R")), v63 = ax62, eax64 = reinterpret_cast<int32_t>(image_base_(edi15, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R")), eax65 = reinterpret_cast<void**>(image_base_(eax64, 0xff, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R")), reinterpret_cast<signed char>(eax65) >= reinterpret_cast<signed char>(0)) && (eax66 = reinterpret_cast<void**>(image_base_(eax64, 1, 0xff, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R")), reinterpret_cast<signed char>(eax66) >= reinterpret_cast<signed char>(0))))) {
        ax67 = reinterpret_cast<uint16_t>(image_base_(eax64, "R", 1, 0xff, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R"));
        v68 = ax67;
        eax69 = reinterpret_cast<struct s178**>(image_base_(edi15, v68, "R", 1, 0xff, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R"));
        esi70 = (*eax69)->f84;
        image_base_(esi70, v68, "R", 1, 0xff, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R");
        esi70(eax69, v68, "R", 1, 0xff, v63, "S", v58, "S", v36, "O", v32, 1, 0, v25, "R");
        edi15 = v16;
        goto addr_1001715a_4;
    }
    addr_10017016_19:
    goto addr_100170c1_17;
}

struct s179 {
    int32_t f0;
    signed char[128] pad132;
    uint32_t f132;
    uint32_t f136;
};

/* (image base) */
int32_t image_base_ = 0x1000aac0;

void** fun_10016389() {
    struct s179* eax1;

    GetProcessHeap();
    eax1 = reinterpret_cast<struct s179*>(HeapAlloc());
    if (eax1) {
        image_base_(eax1);
        eax1->f0 = 0x1000117c;
        eax1->f132 = 0;
        eax1->f136 = 0;
    }
    goto 8;
}

struct s180 {
    signed char[84] pad84;
    int32_t f84;
};

void** fun_10016d97(void** ecx, uint32_t a2, uint32_t a3, int32_t a4, int32_t a5, void** a6, int32_t a7, void** a8, void* a9, int32_t a10, void** a11) {
    void* ebp12;
    uint32_t eax13;
    void** v14;
    void** eax15;
    void** edi16;
    void** v17;
    void** eax18;
    void** esi19;
    void** eax20;
    uint16_t ax21;
    void** v22;
    int32_t eax23;
    void** eax24;
    uint16_t ax25;
    void** v26;
    int32_t eax27;
    void** eax28;
    uint16_t ax29;
    void** v30;
    struct s118* eax31;
    void** edi32;
    void** esi33;
    void** ebx34;
    void** v35;
    void** eax36;
    uint16_t ax37;
    void** v38;
    struct s118* eax39;
    void** v40;
    void** eax41;
    uint16_t ax42;
    uint32_t v43;
    int32_t eax44;
    void** eax45;
    void** eax46;
    uint16_t ax47;
    uint32_t v48;
    struct s180** eax49;
    int32_t esi50;
    void** eax51;
    void** esi52;
    int32_t v53;
    uint32_t ecx54;
    void** eax55;

    ebp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax13 = g100240c4;
    v14 = reinterpret_cast<void**>(eax13 ^ reinterpret_cast<uint32_t>(ebp12));
    eax15 = g10024480;
    edi16 = ecx;
    v17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp12) + 0xfffffff0);
    eax18 = *reinterpret_cast<void***>(edi16 + 0x88);
    esi19 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax18) + 0xb0);
    image_base_(esi19);
    eax20 = reinterpret_cast<void**>(esi19(esi19));
    if (reinterpret_cast<signed char>(eax20) >= reinterpret_cast<signed char>(0)) {
        ax21 = reinterpret_cast<uint16_t>(image_base_(esi19, "C"));
        v22 = reinterpret_cast<void**>(static_cast<uint32_t>(ax21));
        eax23 = reinterpret_cast<int32_t>(image_base_(edi16, v22, "C"));
        eax24 = fun_100191c8(eax23, a2, eax15, v22, "C", eax18, v17);
        if (reinterpret_cast<signed char>(eax24) >= reinterpret_cast<signed char>(0) && ((ax25 = reinterpret_cast<uint16_t>(image_base_(eax23, "C", v22, "C")), v26 = reinterpret_cast<void**>(static_cast<uint32_t>(ax25)), eax27 = reinterpret_cast<int32_t>(image_base_(edi16, v26, "C", v22, "C")), eax28 = fun_100191c8(eax27, a3, eax15, v26, "C", v22, "C"), reinterpret_cast<signed char>(eax28) >= reinterpret_cast<signed char>(0)) && ((ax29 = reinterpret_cast<uint16_t>(image_base_(eax27, "S", v26, "C", v22, "C")), v30 = reinterpret_cast<void**>(static_cast<uint32_t>(ax29)), eax31 = reinterpret_cast<struct s118*>(image_base_(edi16, v30, "S", v26, "C", v22, "C")), eax36 = fun_10017318(eax31, v30, "S", v26, "C", v22, "C", eax18, v17, edi32, esi33, ebx34, v35, edi16, eax15, v14), reinterpret_cast<signed char>(eax36) >= reinterpret_cast<signed char>(0)) && ((ax37 = reinterpret_cast<uint16_t>(image_base_(eax31, "S", v30, "S", v26, "C", v22, "C")), v38 = reinterpret_cast<void**>(static_cast<uint32_t>(ax37)), eax39 = reinterpret_cast<struct s118*>(image_base_(edi16, v38, "S", v30, "S", v26, "C", v22, "C")), eax41 = fun_10017318(eax39, v38, "S", v30, "S", v26, "C", v22, "C", eax18, v17, edi32, esi33, ebx34, v40, edi16), reinterpret_cast<signed char>(eax41) >= reinterpret_cast<signed char>(0)) && ((ax42 = reinterpret_cast<uint16_t>(image_base_(eax39, "S", v38, "S", v30, "S", v26, "C", v22, "C")), v43 = ax42, eax44 = reinterpret_cast<int32_t>(image_base_(edi16, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C")), eax45 = reinterpret_cast<void**>(image_base_(eax44, 0xff, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C")), reinterpret_cast<signed char>(eax45) >= reinterpret_cast<signed char>(0)) && (eax46 = reinterpret_cast<void**>(image_base_(eax44, 1, 0xff, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C")), reinterpret_cast<signed char>(eax46) >= reinterpret_cast<signed char>(0))))))) {
            ax47 = reinterpret_cast<uint16_t>(image_base_(eax44, "C", 1, 0xff, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C"));
            v48 = ax47;
            eax49 = reinterpret_cast<struct s180**>(image_base_(edi16, v48, "C", 1, 0xff, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C"));
            esi50 = (*eax49)->f84;
            image_base_(esi50, v48, "C", 1, 0xff, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C");
            esi50(eax49, v48, "C", 1, 0xff, v43, "S", v38, "S", v30, "S", v26, "C", v22, "C");
            edi16 = edi16;
        }
        eax51 = *reinterpret_cast<void***>(edi16 + 0x88);
        esi52 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax51) + 0xb4);
        image_base_(esi52, eax51, v53, v22, "C");
        esi52(esi52, eax51, v53, v22, "C");
    }
    ecx54 = reinterpret_cast<unsigned char>(v14) ^ reinterpret_cast<uint32_t>(ebp12);
    eax55 = fun_1000a130(ecx54, ecx54);
    return eax55;
}

void fun_10011c1d(void** ecx) {
    void** v2;

    if (*reinterpret_cast<void***>(ecx)) {
        v2 = *reinterpret_cast<void***>(ecx);
        CoTaskMemFree(v2);
        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0);
    return;
}

int32_t CoTaskMemRealloc = 0x264ee;

void** fun_10011b1c(void** ecx, void** a2) {
    void* ebp3;
    void** eax4;
    void** edi5;
    void** eax6;
    void** eax7;
    void** eax8;
    void** ebx9;
    void** v10;
    void** eax11;
    uint32_t* ecx12;
    void** eax13;
    void** eax14;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = fun_100118f6(a2, reinterpret_cast<int32_t>(ebp3) + 8);
    edi5 = eax4;
    if (reinterpret_cast<signed char>(edi5) < reinterpret_cast<signed char>(0)) {
        addr_10011be7_2:
        return edi5;
    } else {
        if (reinterpret_cast<int1_t>(*reinterpret_cast<void***>(ecx + 8) == 0xffffffff)) {
            fun_10011bf1(ecx);
            eax6 = reinterpret_cast<void**>(0);
            if (*reinterpret_cast<void***>(ecx)) {
                eax6 = *reinterpret_cast<void***>(ecx + 4) + 1;
            }
            *reinterpret_cast<void***>(ecx + 8) = eax6;
        }
        eax7 = *reinterpret_cast<void***>(ecx + 8);
        if (!eax7) 
            goto addr_10011b5e_8;
    }
    if (reinterpret_cast<unsigned char>(a2) <= reinterpret_cast<unsigned char>(eax7) || (eax8 = fun_100119a9(reinterpret_cast<int32_t>(ebp3) - 4, reinterpret_cast<unsigned char>(eax7) * 2, __intrinsic()), edi5 = eax8, reinterpret_cast<signed char>(edi5) < reinterpret_cast<signed char>(0))) {
        addr_10011be6_10:
        goto addr_10011be7_2;
    } else {
        ebx9 = ecx;
        if (reinterpret_cast<unsigned char>(ebx9) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 8)) > 0x800) {
            ebx9 = *reinterpret_cast<void***>(ecx + 8) + 0x800;
        }
        if (reinterpret_cast<unsigned char>(a2) > reinterpret_cast<unsigned char>(ebx9)) {
            ebx9 = a2;
        }
        v10 = *reinterpret_cast<void***>(ecx);
        eax11 = reinterpret_cast<void**>(CoTaskMemRealloc(v10, reinterpret_cast<unsigned char>(ebx9) + reinterpret_cast<unsigned char>(ebx9)));
        if (eax11) 
            goto addr_10011bda_16;
    }
    edi5 = reinterpret_cast<void**>(0x8007000e);
    goto addr_10011be6_10;
    addr_10011bda_16:
    *reinterpret_cast<void***>(ecx + 8) = ebx9;
    *reinterpret_cast<void***>(ecx) = eax11;
    goto addr_10011be6_10;
    addr_10011b5e_8:
    ecx12 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ebp3) - 4);
    eax13 = fun_100119a9(ecx12, reinterpret_cast<unsigned char>(a2) * 2, __intrinsic());
    edi5 = eax13;
    if (reinterpret_cast<signed char>(edi5) < reinterpret_cast<signed char>(0)) 
        goto addr_10011be6_10;
    eax14 = reinterpret_cast<void**>(CoTaskMemAlloc(ecx12, ecx));
    if (eax14) {
        *reinterpret_cast<void***>(ecx + 8) = a2;
        *reinterpret_cast<void***>(ecx) = eax14;
        *reinterpret_cast<void***>(eax14) = reinterpret_cast<void**>(0);
        goto addr_10011be6_10;
    }
}

int32_t IsOS = 0x25cbe;

signed char fun_10011f38(void** ecx, void** a2) {
    void*** ebp3;
    uint32_t eax4;
    void** v5;
    void** esi6;
    int1_t zf7;
    void** edi8;
    void** esi9;
    void** ebx10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** ebp15;
    void** v16;
    unsigned char bl17;
    void** v18;
    void* v19;
    signed char al20;
    int32_t v21;
    int32_t eax22;
    uint32_t eax23;
    int32_t ecx24;
    int32_t ecx25;
    int32_t ecx26;
    int32_t ecx27;
    int32_t ecx28;
    void** eax29;
    signed char v30;
    signed char v31;
    int1_t zf32;
    void** v33;
    void** v34;
    void** v35;
    void** eax36;
    uint32_t eax37;
    uint32_t eax38;
    void** eax39;
    void** eax40;
    void** esi41;

    ebp3 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = reinterpret_cast<void**>(eax4 ^ reinterpret_cast<uint32_t>(ebp3));
    esi6 = ecx;
    zf7 = (g100244c0 & 0x100) == 0;
    if (!zf7) {
        fun_10010b65(ecx, edi8, esi9, ebx10, v11, v12, v13, v14, v5, ebp15, __return_address(), a2);
    }
    if (!(!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40)) & 6) || reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40)) & 0x1010000)) {
        v16 = reinterpret_cast<void**>(1);
        bl17 = 1;
        v18 = reinterpret_cast<void**>(ebp3 + 0xffffffec);
        v19 = reinterpret_cast<void*>(ebp3 + 0xfffffff0);
        al20 = reinterpret_cast<signed char>(image_base_(0, 0xff, 28, v19, 4, v18));
        if (!al20 || v21) {
            addr_10011fdd_6:
            eax22 = reinterpret_cast<int32_t>(IsOS(29, 0, 0xff, 28, v19, 4, v18));
            if (!eax22) {
                eax23 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40)) & 2;
                if (!eax23) {
                    ecx24 = 0;
                    *reinterpret_cast<unsigned char*>(&ecx24) = reinterpret_cast<uint1_t>(!!bl17);
                    ecx25 = ecx24 + 0xbbe;
                    goto addr_10012030_9;
                } else {
                    ecx26 = 0;
                    *reinterpret_cast<unsigned char*>(&ecx26) = reinterpret_cast<uint1_t>(!!bl17);
                    ecx25 = ecx26 + 0xbbc;
                    goto addr_10012030_9;
                }
            } else {
                eax23 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40)) & 2;
                if (!eax23) {
                    ecx27 = 0;
                    *reinterpret_cast<unsigned char*>(&ecx27) = reinterpret_cast<uint1_t>(!!bl17);
                    ecx25 = ecx27 + 0xc1f;
                    goto addr_10012030_9;
                } else {
                    ecx28 = 0;
                    *reinterpret_cast<unsigned char*>(&ecx28) = reinterpret_cast<uint1_t>(!!bl17);
                    ecx25 = ecx28 + 0xc1d;
                    goto addr_10012030_9;
                }
            }
        } else {
            ecx = reinterpret_cast<void**>(ebp3 + 0xfffffffa);
            eax29 = fun_10011458(ecx, 0, 0xff, 28, v19, 4, v18);
            if (eax29) {
                ecx = reinterpret_cast<void**>(1);
            } else {
                *reinterpret_cast<signed char*>(&ecx) = 0;
                v16 = ecx;
                if (v30) {
                    *reinterpret_cast<void***>(esi6 + 40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi6 + 40)) | 0x1000000);
                }
            }
            bl17 = reinterpret_cast<unsigned char>(1 & reinterpret_cast<unsigned char>(reinterpret_cast<uint1_t>(!!v31) - 1));
            if (!*reinterpret_cast<signed char*>(&ecx)) 
                goto addr_1001205e_19; else 
                goto addr_10011fdd_6;
        }
    }
    addr_10012065_20:
    zf32 = (g100244c0 & 0x100) == 0;
    if (!zf32) {
        fun_10010b65(ecx, edi8, esi9, ebx10, v33, v34, v16, v35, v5, ebp15, __return_address(), a2);
    }
    eax36 = fun_1000a130(reinterpret_cast<unsigned char>(v5) ^ reinterpret_cast<uint32_t>(ebp3));
    return *reinterpret_cast<signed char*>(&eax36);
    addr_10012030_9:
    eax37 = -eax23;
    eax38 = eax37 - (eax37 + reinterpret_cast<uint1_t>(eax37 < eax37 + reinterpret_cast<uint1_t>(!!eax23))) + 0xbc2;
    ecx = *reinterpret_cast<void***>(esi6 + 36);
    eax39 = fun_10016d97(ecx, static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&ecx25)), static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax38)), ecx25, 29, 0, 0xff, 28, v19, 4, v18);
    if (reinterpret_cast<signed char>(eax39) < reinterpret_cast<signed char>(0)) {
        eax40 = *reinterpret_cast<void***>(esi6);
        esi41 = *reinterpret_cast<void***>(eax40 + 24);
        ecx = esi41;
        image_base_(ecx, esi6, 29, 0, 0xff, 28, v19, 4, v18);
        esi41(ecx, esi6, 29, 0, 0xff, 28, v19, 4, v18);
    }
    addr_1001205e_19:
    goto addr_10012065_20;
}

void** fun_1001238d(struct s71** ecx, struct s71*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    int32_t eax7;
    struct s71* eax8;
    int32_t esi9;
    int32_t eax10;
    struct s71** ecx11;
    int32_t esi12;
    uint32_t ecx13;
    void** eax14;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s71**>(0);
    eax6 = fun_1000f58d(edx5, edx5);
    if (eax6 || (eax7 = fun_1000f58d(edx5, edx5), !!eax7)) {
        *a2 = ecx;
        eax8 = *ecx;
        esi9 = eax8->f4;
        image_base_(esi9, ecx);
        esi9(esi9, ecx);
    } else {
        eax10 = fun_100124ee(ecx, edx5, a2, edx5);
        if (eax10 >= 0 && !0) {
            ecx11 = *a2;
            esi12 = (*ecx11)->f4;
            image_base_(esi12, ecx11);
            esi12(esi12, ecx11);
        }
    }
    ecx13 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax14 = fun_1000a130(ecx13, ecx13);
    return eax14;
}

void** fun_10012c24(void** ecx);

void** fun_100140b8(void** ecx);

void** fun_100129a1(uint32_t* ecx) {
    void* ebp2;
    uint32_t eax3;
    void** esi4;
    void** eax5;
    void** eax6;
    void** eax7;
    void** eax8;
    void** esi9;
    void** ecx10;
    void** esi11;
    void** eax12;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *ecx = 0;
    eax5 = fun_1000b6b9(0xb8, 0x10002b64, esi4);
    if (eax5) {
        eax6 = fun_10012c24(eax5);
        eax7 = fun_100140b8(eax6);
        if (reinterpret_cast<signed char>(eax7) >= reinterpret_cast<signed char>(0)) {
            eax8 = *reinterpret_cast<void***>(eax6);
            esi9 = *reinterpret_cast<void***>(eax8);
            image_base_(esi9, eax6, 0x10002fc4, ecx);
            esi9(esi9, eax6, 0x10002fc4, ecx);
        }
        if (eax6) {
            ecx10 = *reinterpret_cast<void***>(eax6);
            esi11 = *reinterpret_cast<void***>(ecx10 + 8);
            image_base_(esi11, eax6);
            esi11(esi11, eax6);
        }
    }
    eax12 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax12;
}

void** fun_10012b71(void** ecx);

void** fun_10012c24(void** ecx) {
    fun_10012b71(ecx);
    *reinterpret_cast<void***>(ecx + 40) = reinterpret_cast<void**>(0x10001dc0);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(0x10001db4);
    *reinterpret_cast<void***>(ecx + 48) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001d98);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0x10001d88);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001d78);
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(0x10001d68);
    *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(0x10001d50);
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0x10001d3c);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(0x10001d2c);
    *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0x10001d00);
    *reinterpret_cast<void***>(ecx + 40) = reinterpret_cast<void**>(0x10001ce8);
    *reinterpret_cast<void***>(ecx + 44) = reinterpret_cast<void**>(0x10001cdc);
    *reinterpret_cast<void***>(ecx + 52) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 56) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 60) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 64) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 68) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 72) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 76) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 80) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 84) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 88) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 92) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 96) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 100) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x68) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x6c) = reinterpret_cast<void**>(0);
    *reinterpret_cast<int16_t*>(ecx + 0x70) = 0;
    *reinterpret_cast<void***>(ecx + 0x74) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x78) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x7c) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx + 0x80) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx + 0x84) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x88) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x8c) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x90) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x94) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x98) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0x9c) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0xa0) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0xa4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0xa8) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0xac) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0xb0) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 0xb4) = reinterpret_cast<void**>(0);
    return ecx;
}

int32_t SetThreadUILanguage = 0x265a6;

signed char fun_1001c92d();

signed char fun_100181c8(void** ecx, void** a2, unsigned char* a3);

int32_t ConvertSidToStringSidW = 0x265bc;

void** fun_100140b8(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    int1_t zf5;
    void** v6;
    void** ebx7;
    void** v8;
    void** edi9;
    void** ebx10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    uint16_t ax20;
    uint32_t eax21;
    signed char al22;
    void** v23;
    void** eax24;
    int32_t eax25;
    int1_t zf26;
    void** v27;
    void** esi28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    uint32_t eax56;
    void** v57;
    signed char al58;
    void** v59;
    void** v60;
    void** v61;
    void** eax62;
    int32_t v63;
    void** esi64;
    void** v65;
    void** v66;
    void** v67;
    int16_t* ecx68;
    void* edx69;
    int16_t v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** eax78;
    void** eax79;
    void** eax80;
    void** v81;
    void** v82;
    void** v83;
    void** eax84;
    void** edi85;
    void** v86;
    int32_t eax87;
    void** eax88;
    void** edi89;
    int1_t sf90;
    int1_t zf91;
    void** v92;
    void** v93;
    uint32_t ecx94;
    void** eax95;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    zf5 = (g100244c0 & 0x100) == 0;
    v6 = ebx7;
    v8 = edi9;
    ebx10 = ecx;
    if (!zf5) {
        fun_10010b65(ecx, v8, v6, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    }
    ax20 = fun_1001356d(ecx);
    eax21 = ax20;
    if (*reinterpret_cast<int16_t*>(&eax21)) {
        SetThreadUILanguage(eax21);
    }
    al22 = fun_1001c92d();
    if (al22) {
        *reinterpret_cast<void***>(ebx10 + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) | 0x100);
    }
    *reinterpret_cast<signed char*>(&v23 + 3) = 0;
    eax24 = fun_10012ac6(ecx, reinterpret_cast<uint32_t>(ebp2) + 0xfffffde8, ecx);
    if (reinterpret_cast<signed char>(eax24) >= reinterpret_cast<signed char>(0) && (!1 && !1)) {
        *reinterpret_cast<void***>(ebx10 + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) | 0x80);
    }
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) & 0x80) && (eax25 = reinterpret_cast<int32_t>(SHCORE_dll_123("S", "S", 0)), !!eax25)) {
        *reinterpret_cast<void***>(ebx10 + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) | 0x80);
    }
    zf26 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) & 0x100) == 0;
    v27 = esi28;
    if (zf26) 
        goto addr_100141ff_12;
    fun_1000b8d8(ecx, reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4, 0, 0x208, v27, v8, v6, v29, v30, v31, v32, v33, 0, v34, v23, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55);
    ecx = reinterpret_cast<void**>(0);
    eax56 = fun_10014331(0, 0, 0, reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4, 0x208);
    if (reinterpret_cast<int32_t>(eax56) < reinterpret_cast<int32_t>(0)) {
        addr_100141eb_14:
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) & 0x100) || !*reinterpret_cast<void***>(ebx10 + 88)) {
            addr_100141ff_12:
        } else {
            addr_100142b2_15:
            *reinterpret_cast<signed char*>(&v57 + 3) = 0;
            al58 = fun_100181c8(ecx, ecx, reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf3);
            if ((!al58 || !0) && ((eax62 = fun_1001d48b(ecx, reinterpret_cast<uint32_t>(ebp2) + 0xfffffdd4, reinterpret_cast<uint32_t>(ebp2) + 0xfffffde4, v8, v6, 14, v59, v60, 0, v61, 0), reinterpret_cast<signed char>(eax62) >= reinterpret_cast<signed char>(0)) && (!1 && v63 == 1))) {
                *reinterpret_cast<void***>(ebx10 + 52) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 52)) | 0x200);
                goto addr_10014309_17;
            }
        }
    } else {
        esi64 = ebx10 + 88;
        fun_10014f84(esi64, v27, v8, v6, v65, v66, v67);
        *reinterpret_cast<void***>(esi64 + 4) = reinterpret_cast<void**>(0xffffffff);
        ecx68 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4);
        *reinterpret_cast<void***>(esi64 + 8) = reinterpret_cast<void**>(0xffffffff);
        edx69 = reinterpret_cast<void*>(ecx68 + 1);
        do {
            ++ecx68;
        } while (v70);
        ecx = reinterpret_cast<void**>(reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ecx68) - reinterpret_cast<uint32_t>(edx69)) >> 1);
        eax78 = fun_10012a5e(ecx, reinterpret_cast<uint32_t>(ebp2) + 0xfffffdf4, ecx, ecx, esi64, v27, v8, v6, v71, v72, v73, v74, v75, 0, v76, v23, v77);
        if (reinterpret_cast<signed char>(eax78) < reinterpret_cast<signed char>(0)) 
            goto addr_100142b0_21; else 
            goto addr_100141eb_14;
    }
    eax79 = reinterpret_cast<void**>(GetCurrentProcessId());
    v59 = eax79;
    eax80 = reinterpret_cast<void**>(GetCurrentThreadId());
    v60 = eax80;
    v81 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffde4);
    v82 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffdd8);
    image_base_(0, 0xff, 14, v82, 12, v81);
    v83 = ecx;
    ecx = reinterpret_cast<void**>(0);
    eax84 = fun_10018ac3(0, v83, reinterpret_cast<uint32_t>(ebp2) + 0xfffffdec, 0, 0xff, 14, v82, 12, v81);
    if (reinterpret_cast<signed char>(eax84) >= reinterpret_cast<signed char>(0)) {
        edi85 = ebx10 + 88;
        ecx = edi85;
        fun_10014f84(ecx, 0, 0xff, 14, v82, 12, v81);
        *reinterpret_cast<void***>(edi85 + 4) = reinterpret_cast<void**>(0xffffffff);
        *reinterpret_cast<void***>(edi85 + 8) = reinterpret_cast<void**>(0xffffffff);
        v86 = g0;
        eax87 = reinterpret_cast<int32_t>(ConvertSidToStringSidW(v86, edi85, 0, 0xff, 14, v82, 12, v81));
        if (!eax87) {
            eax88 = reinterpret_cast<void**>(GetLastError(v86, edi85, 0, 0xff, 14, v82, 12, v81));
            edi89 = eax88;
            sf90 = reinterpret_cast<signed char>(edi89) < reinterpret_cast<signed char>(0);
            if (!(reinterpret_cast<uint1_t>(sf90) | reinterpret_cast<uint1_t>(edi89 == 0))) {
                edi89 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edi89)) | 0x80070000);
                sf90 = reinterpret_cast<signed char>(edi89) < reinterpret_cast<signed char>(0);
            }
            if (!sf90) {
            }
        }
    }
    LocalFree(0, 0, 0xff, 14, v82, 12, v81);
    addr_100142b0_21:
    goto addr_100142b2_15;
    addr_10014309_17:
    zf91 = (g100244c0 & 0x100) == 0;
    if (!zf91) {
        fun_10010b65(ecx, v8, v6, 14, v59, v60, 0, v92, 0, 0, v57, v93);
    }
    ecx94 = v4 ^ reinterpret_cast<uint32_t>(ebp2);
    eax95 = fun_1000a130(ecx94, ecx94);
    return eax95;
}

void** fun_10012aaa(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    void** edi11;
    void** eax12;

    edi11 = reinterpret_cast<void**>(0);
    if (ecx && (eax12 = fun_10012826(ecx), !!eax12)) {
        edi11 = ecx;
    }
    return edi11;
}

void** fun_1001287b(void*** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** edi4;
    void** eax5;
    void** eax6;
    void*** edx7;
    void** ecx8;
    void** eax9;
    void** v10;
    void** edi11;
    void** v12;
    uint32_t ecx13;
    void** eax14;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *ecx = reinterpret_cast<void**>(0);
    eax5 = fun_1000b6b9(20, 0x10002b64, edi4);
    if (eax5) {
        eax6 = *edx7;
        ecx8 = g10024484;
        *reinterpret_cast<void***>(eax5 + 8) = reinterpret_cast<void**>(1);
        *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0x10001cb4);
        if (ecx8) {
            eax9 = *reinterpret_cast<void***>(ecx8);
            v10 = ecx8;
            edi11 = *reinterpret_cast<void***>(eax9 + 4);
            ecx8 = edi11;
            image_base_(ecx8, v10);
            edi11(ecx8, v10);
            eax6 = eax6;
        }
        *reinterpret_cast<void***>(eax5 + 12) = reinterpret_cast<void**>(0x3fffffff);
        *reinterpret_cast<void***>(eax5) = reinterpret_cast<void**>(0x1000110c);
        *reinterpret_cast<void***>(eax5 + 16) = eax6;
        *reinterpret_cast<void***>(eax5 + 8) = reinterpret_cast<void**>(2);
        if (*ecx) {
            v12 = *ecx;
            fun_10013e70(ecx8, v12);
        }
        *ecx = eax5;
    }
    ecx13 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax14 = fun_1000a130(ecx13, ecx13);
    return eax14;
}

void** fun_10012b71(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** ecx4;
    void** eax5;
    void** esi6;
    void** eax7;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ecx4 = g10024484;
    *reinterpret_cast<void***>(ecx + 36) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001c98);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0x10001c88);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001c78);
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(0x10001c68);
    *reinterpret_cast<void***>(ecx + 16) = reinterpret_cast<void**>(0x10001c50);
    *reinterpret_cast<void***>(ecx + 20) = reinterpret_cast<void**>(0x10001c3c);
    *reinterpret_cast<void***>(ecx + 24) = reinterpret_cast<void**>(0x10001c2c);
    *reinterpret_cast<void***>(ecx + 28) = reinterpret_cast<void**>(0x10001c00);
    if (ecx4) {
        eax5 = *reinterpret_cast<void***>(ecx4);
        esi6 = *reinterpret_cast<void***>(eax5 + 4);
        image_base_(esi6);
        esi6(esi6);
    }
    eax7 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax7;
}

void** fun_1001373d(void** ecx, void** a2, int32_t a3, void** a4, void** a5, signed char a6, int32_t a7) {
    void** eax8;

    if (a6) {
        eax8 = fun_10013fc5(a2, a4, ecx, ecx, __return_address(), ecx, a5, a7, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 32);
    }
    *reinterpret_cast<signed char*>(&eax8) = a6;
    return eax8;
}

void** fun_10012d1b(struct s97* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48) {
    int32_t eax49;
    uint32_t eax50;
    void** edi51;
    void** esi52;
    void** ebx53;
    void** ecx54;
    void** edi55;
    void** v56;
    int32_t eax57;
    int32_t eax58;
    void** ecx59;
    void** eax60;

    ecx->f0 = 0x10001d98;
    ecx->f4 = 0x10001d88;
    ecx->f8 = 0x10001d78;
    ecx->f12 = 0x10001d68;
    ecx->f16 = 0x10001d50;
    ecx->f20 = 0x10001d3c;
    ecx->f24 = 0x10001d2c;
    ecx->f28 = 0x10001d00;
    ecx->f40 = 0x10001ce8;
    ecx->f44 = 0x10001cdc;
    if (ecx->f56) {
        eax49 = fun_1001c2cf(ecx);
        eax50 = reinterpret_cast<uint32_t>(-eax49);
        ecx->f56 = reinterpret_cast<void**>(0);
        g10024740 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(g10024740) & eax50 - (eax50 + reinterpret_cast<uint1_t>(eax50 < eax50 + reinterpret_cast<uint1_t>(!!eax49))));
    }
    fun_100136b5(&ecx->f168, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f164, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f160, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f156, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f152, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f148, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f108, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    fun_100136b5(&ecx->f104, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
    ecx54 = ecx->f100;
    if (ecx54) {
        ecx->f100 = reinterpret_cast<void**>(0);
        fun_10013f7b(ecx54, edi51, esi52, ebx53, __return_address(), a2, a3, a4, a5, a6);
    }
    fun_10014f84(&ecx->f88, edi51, esi52, ebx53, __return_address(), a2, a3);
    edi55 = ecx->f84;
    ecx->f84 = reinterpret_cast<void**>(0);
    if (edi55) {
        fun_10014498(edi55);
        fun_10014498(edi55);
        if (*reinterpret_cast<void***>(edi55 + 4)) {
            v56 = *reinterpret_cast<void***>(edi55 + 4);
            eax57 = reinterpret_cast<int32_t>(GetProcessHeap(edi55, 0, v56));
            HeapFree(edi55, eax57, 0, v56);
        }
        eax58 = reinterpret_cast<int32_t>(GetProcessHeap(edi55, 0, edi55));
        HeapFree(edi55, eax58, 0, edi55);
    }
    ecx59 = ecx->f36;
    eax60 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx59) >> 31);
    if (*reinterpret_cast<signed char*>(&eax60)) {
        eax60 = fun_10013e70(ecx59, reinterpret_cast<unsigned char>(ecx59) + reinterpret_cast<unsigned char>(ecx59));
    }
    return eax60;
}

void** fun_1001319a(void** ecx) {
    void** eax2;
    void** esi3;

    eax2 = fun_1001287b(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    esi3 = *reinterpret_cast<void***>(eax2);
    *reinterpret_cast<void***>(eax2) = reinterpret_cast<void**>(0);
    if (ecx) {
        fun_10013e70(ecx, ecx);
    }
    return esi3;
}

void** fun_10013d21(void** ecx, int32_t a2, void** a3, int32_t a4) {
    void*** ebp5;
    int32_t eax6;
    int32_t ebx7;
    int16_t edi8;
    void** esi9;
    void** ebp10;
    void** eax11;

    ebp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    fun_1000c870(ecx);
    eax6 = a2;
    if (eax6) {
        fun_1000efe5(ebp5 + 0xffffeffc, 0x800, "%", eax6, ebx7, edi8, esi9, ebp10, __return_address(), a2, a3, a4);
        fun_1000f029(ecx, ebp5 + 0xffffeffc, a3);
    } else {
        *reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(&eax6);
    }
    eax11 = fun_1000a130(reinterpret_cast<unsigned char>(esi9) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax11;
}

int32_t GetObjectW = 0x271ce;

void** fun_1001ce13(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43);

void** fun_1001dbf2(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34) {
    void*** ebp35;
    void** v36;
    void** v37;
    int32_t eax38;
    void** edx39;
    void** v40;
    void** v41;
    void** ecx42;
    void** edi43;
    void** esi44;
    void** ebx45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** ebp53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** eax61;
    void** esi62;
    void** esi63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** eax76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** eax89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** eax96;
    void** v97;
    void** v98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** eax115;
    int1_t sf116;

    ebp35 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v36 = ecx;
    v37 = reinterpret_cast<void**>(ebp35 + 0xffffffd8);
    *reinterpret_cast<void***>(a4) = reinterpret_cast<void**>(0);
    eax38 = reinterpret_cast<int32_t>(GetObjectW());
    if (eax38) {
        if (edx39 != v40 || a2 != v41) {
            ecx42 = reinterpret_cast<void**>(ebp35 + 0xfffffffc);
            fun_100136b5(ecx42, edi43, ecx, 24, v37, esi44, ebx45, v46, v47, v48, v49, v50, v51, edx39, v52, v36, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
            eax61 = fun_1001dde6(ecx42, edi43, ecx, 24, v37, esi44, ebx45, v54, v55, v56, v57, v58, v59, edx39, v60, v36, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
            esi62 = eax61;
            if (reinterpret_cast<signed char>(esi62) >= reinterpret_cast<signed char>(0)) {
                if (!*reinterpret_cast<signed char*>(&a3)) {
                    esi63 = reinterpret_cast<void**>(2);
                } else {
                    esi63 = reinterpret_cast<void**>(0);
                }
                fun_100136b5(ebp35 + 0xfffffff4, edi43, ecx, 24, v37, esi44, ebx45, v64, v65, v66, v67, v68, v69, edx39, 0, v36, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
                eax76 = fun_1001ce13(0, esi63, ebp35 + 0xfffffff4, edi43, ecx, 24, v37, esi44, ebx45, v70, v71, v72, v73, v74, v75, edx39, 0, v36, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
                esi62 = eax76;
                if (reinterpret_cast<signed char>(esi62) >= reinterpret_cast<signed char>(0)) {
                    v36 = reinterpret_cast<void**>(0);
                    fun_100136b5(ebp35 + 0xfffffff8, edi43, ecx, 24, v37, esi44, ebx45, v77, v78, v79, v80, v81, v82, edx39, 0, 0, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
                    eax89 = fun_1001dcf9(0, edx39, a2, ebp35 + 0xfffffff8, edi43, ecx, 24, v37, esi44, ebx45, v83, v84, v85, v86, v87, v88, edx39, 0, 0, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                    esi62 = eax89;
                    if (reinterpret_cast<signed char>(esi62) >= reinterpret_cast<signed char>(0)) {
                        eax96 = fun_1001cfd6(0, a4, edi43, ecx, 24, v37, esi44, ebx45, v90, v91, v92, v93, v94, v95, edx39, 0, 0, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
                        esi62 = eax96;
                    }
                    fun_100136b5(ebp35 + 0xfffffff8, edi43, ecx, 24, v37, esi44, ebx45, v97, v98, v99, v100, v101, v102, edx39, 0, 0, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
                }
                fun_100136b5(ebp35 + 0xfffffff4, edi43, ecx, 24, v37, esi44, ebx45, v103, v104, v105, v106, v107, v108, edx39, 0, v36, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
            }
            fun_100136b5(ebp35 + 0xfffffffc, edi43, ecx, 24, v37, esi44, ebx45, v109, v110, v111, v112, v113, v114, edx39, 0, v36, 0, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34);
        } else {
            esi62 = reinterpret_cast<void**>(1);
        }
    } else {
        eax115 = reinterpret_cast<void**>(GetLastError());
        esi62 = eax115;
        sf116 = reinterpret_cast<signed char>(esi62) < reinterpret_cast<signed char>(0);
        if (!(reinterpret_cast<uint1_t>(sf116) | reinterpret_cast<uint1_t>(esi62 == 0))) {
            esi62 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi62)) | 0x80070000);
            sf116 = reinterpret_cast<signed char>(esi62) < reinterpret_cast<signed char>(0);
        }
        if (!sf116) {
            esi62 = reinterpret_cast<void**>(0x80004005);
        }
    }
    return esi62;
}

void** fun_10013dc7(int32_t ecx, uint32_t* a2) {
    void* ebp3;
    uint32_t eax4;
    uint32_t eax5;
    uint32_t esi6;
    int1_t sf7;
    int32_t edi8;
    void** esi9;
    int32_t ebx10;
    uint32_t eax11;
    int32_t v12;
    uint32_t eax13;
    int32_t v14;
    uint32_t ecx15;
    void** eax16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = 0;
    eax5 = reinterpret_cast<uint32_t>(RegOpenKeyExW());
    esi6 = eax5;
    sf7 = reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0);
    if (!(reinterpret_cast<uint1_t>(sf7) | reinterpret_cast<uint1_t>(esi6 == 0))) {
        esi6 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi6)) | 0x80070000;
        sf7 = reinterpret_cast<int32_t>(esi6) < reinterpret_cast<int32_t>(0);
    }
    if (!sf7) {
        eax11 = fun_1000efe5(reinterpret_cast<uint32_t>(ebp3) + 0xffffffec, 8, "%", ecx, 0x80000002, "S", 0, 8, reinterpret_cast<uint32_t>(ebp3) + 0xffffffe8, edi8, esi9, ebx10);
        if (reinterpret_cast<int32_t>(eax11) >= reinterpret_cast<int32_t>(0) && (eax13 = reinterpret_cast<uint32_t>(RegOpenKeyExW(v12, reinterpret_cast<uint32_t>(ebp3) + 0xffffffec, 0, 1, a2)), !(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax13) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax13 == 0)))) {
        }
        RegCloseKey(v14);
    }
    ecx15 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax16 = fun_1000a130(ecx15, ecx15);
    return eax16;
}

int32_t GetThreadDesktop = 0x271dc;

int32_t GetUserObjectInformationW = 0x271f0;

int32_t _wcsicmp = 0x271c2;

signed char fun_1001c92d() {
    void* ebp1;
    uint32_t eax2;
    int32_t ebx3;
    int32_t eax4;
    uint32_t ecx5;
    void** eax6;
    int32_t eax7;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = g100240c4;
    GetCurrentThreadId(ebx3);
    eax4 = reinterpret_cast<int32_t>(GetThreadDesktop());
    if (!eax4) {
        addr_1001c996_2:
        ecx5 = eax2 ^ reinterpret_cast<uint32_t>(ebp1) ^ reinterpret_cast<uint32_t>(ebp1);
        eax6 = fun_1000a130(ecx5, ecx5);
        return *reinterpret_cast<signed char*>(&eax6);
    } else {
        eax7 = reinterpret_cast<int32_t>(GetUserObjectInformationW());
        if (!eax7) 
            goto addr_1001c996_2;
    }
    _wcsicmp();
    goto addr_1001c996_2;
}

signed char fun_100181c8(void** ecx, void** a2, unsigned char* a3) {
    void* ebp4;
    signed char bl5;
    uint32_t eax6;
    uint32_t eax7;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    bl5 = 0;
    eax6 = fun_10018128(0x80000002, ecx, ecx, reinterpret_cast<int32_t>(ebp4) - 4);
    if (reinterpret_cast<int32_t>(eax6) >= reinterpret_cast<int32_t>(0) || (eax7 = fun_10018128(0x80000001, 0x80000002, 0x80000002, reinterpret_cast<int32_t>(ebp4) - 4), reinterpret_cast<int32_t>(eax7) >= reinterpret_cast<int32_t>(0))) {
        bl5 = 1;
        *a3 = reinterpret_cast<uint1_t>(!!ecx);
    }
    return bl5;
}

/* (image base) */
int32_t image_base_ = 0x1000af62;

/* (image base) */
int32_t image_base_ = 0x1000af44;

struct s181 {
    signed char[44] pad44;
    int32_t f44;
};

struct s181** g10024718;

void** fun_10017d8c() {
    void* ebp1;
    uint32_t eax2;
    int32_t ebx3;
    int32_t eax4;
    int32_t** eax5;
    int32_t esi6;
    int32_t** ecx7;
    int32_t eax8;
    int32_t eax9;
    void* ecx10;
    int32_t eax11;
    void* v12;
    signed char al13;
    struct s181** v14;
    int32_t eax15;
    struct s181** v16;
    int32_t eax17;
    int32_t esi18;
    void** eax19;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax2 = g100240c4;
    ebx3 = 0;
    eax4 = reinterpret_cast<int32_t>(image_base_());
    if (eax4) {
        eax5 = reinterpret_cast<int32_t**>(image_base_());
        esi6 = **eax5;
        image_base_(esi6);
        ecx7 = eax5;
        esi6(ecx7);
    } else {
        eax8 = reinterpret_cast<int32_t>(image_base_());
        ebx3 = eax8;
    }
    if (ebx3 >= 0) {
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx7));
        ecx10 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp1) - 16);
        image_base_(ecx10, eax9);
        eax11 = reinterpret_cast<int32_t>(image_base_(ecx10, eax9));
        v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp1) - 12);
        al13 = reinterpret_cast<signed char>(image_base_(ecx10, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9));
        if (al13) {
            g10024718 = v14;
        } else {
            g10024718 = reinterpret_cast<struct s181**>(0);
            eax15 = fun_1001778c(ecx10);
            if (eax15 >= 0) {
                eax17 = reinterpret_cast<int32_t>(image_base_(v16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9));
                if (eax17 < 0) {
                    esi18 = (*v16)->f44;
                    image_base_(esi18, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
                    esi18(v16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
                } else {
                    g10024718 = v16;
                }
            }
        }
        image_base_(reinterpret_cast<uint32_t>(ebp1) - 16, v12, 0, 0, eax11, 0x10000000, "S", 0, eax9);
    }
    eax19 = fun_1000a130(eax2 ^ reinterpret_cast<uint32_t>(ebp1) ^ reinterpret_cast<uint32_t>(ebp1));
    return eax19;
}

void** fun_1001da38(void** ecx, void** a2, void** a3, void** a4) {
    void* ebp5;
    uint32_t eax6;
    int1_t zf7;
    int32_t esi8;
    void** eax9;
    void** esi10;
    void** eax11;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    zf7 = g10024638 == 0;
    if (!zf7) {
        fun_1001da94(reinterpret_cast<uint32_t>(ebp5) + 0xfffffff8, ecx, ecx, esi8);
        eax9 = g10024638;
        esi10 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax9) + 8);
        image_base_(esi10);
        esi10(esi10);
        g10024638 = reinterpret_cast<void**>(0);
        fun_1001ccf4(reinterpret_cast<uint32_t>(ebp5) + 0xfffffff8, eax9, esi8, 0);
    }
    eax11 = fun_1000a130(eax6 ^ reinterpret_cast<uint32_t>(ebp5) ^ reinterpret_cast<uint32_t>(ebp5));
    return eax11;
}

int32_t floor = 0x2721a;

void fun_1000c8a1() {
    goto floor;
}

int32_t LoadLibraryW = 0x26596;

void fun_10014f3c(struct s100* ecx) {
    int32_t eax2;
    int32_t eax3;
    int32_t v4;
    int32_t eax5;

    if ((!ecx->f0 || !ecx->f4) && (!ecx->f8 && (eax2 = reinterpret_cast<int32_t>(LoadLibraryW("u")), ecx->f8 = eax2, !!eax2))) {
        eax3 = reinterpret_cast<int32_t>(GetProcAddress(eax2, 0x9d7, "u"));
        v4 = ecx->f8;
        ecx->f0 = eax3;
        eax5 = reinterpret_cast<int32_t>(GetProcAddress(v4, 0x9d8, eax2, 0x9d7, "u"));
        ecx->f4 = eax5;
    }
    return;
}

struct s182 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_100122ff(struct s182** ecx, struct s182*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s182* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s182** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s182**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

void** fun_10015b3e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47, void** a48) {
    void*** ebp49;
    uint32_t eax50;
    void** v51;
    void** esi52;
    void** ebp53;
    void** eax54;
    void** esi55;
    void** ecx56;
    void** eax57;

    ebp49 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax50 = g100240c4;
    v51 = reinterpret_cast<void**>(eax50 ^ reinterpret_cast<uint32_t>(ebp49));
    if (*reinterpret_cast<void***>(ecx + 0x68)) {
        fun_100136b5(ecx + 0x6c, esi52, v51, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48);
        eax54 = *reinterpret_cast<void***>(ecx + 0x68);
        esi55 = *reinterpret_cast<void***>(eax54);
        ecx56 = *reinterpret_cast<void***>(esi55 + 16);
        image_base_(ecx56, eax54, 0x100081a8, 0xff, 0);
        *reinterpret_cast<void***>(esi55 + 16)(ecx56, eax54, 0x100081a8, 0xff, 0);
    }
    eax57 = fun_1000a130(reinterpret_cast<unsigned char>(v51) ^ reinterpret_cast<uint32_t>(ebp49));
    return eax57;
}

/* (image base) */
int16_t image_base_ = 0x6ef0;

void** fun_1001921b(void** ecx, int32_t a2, int32_t a3, uint32_t* a4, void** a5, void* a6) {
    void* ebp7;
    uint32_t eax8;
    int32_t eax9;
    int16_t v10;
    int32_t v11;
    int32_t edi12;
    void** esi13;
    int32_t v14;
    uint32_t eax15;
    int32_t v16;
    uint32_t eax17;
    uint32_t esi18;
    int1_t sf19;
    uint32_t ecx20;
    void** eax21;

    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax8 = g100240c4;
    *a4 = 0;
    eax9 = reinterpret_cast<int32_t>(ConvertSidToStringSidW());
    if (eax9) {
        v10 = image_base_;
        eax15 = fun_1000efe5(reinterpret_cast<uint32_t>(ebp7) + 0xfffffdf4, 0x104, "%", "S", v11, v10, "L", ecx, reinterpret_cast<uint32_t>(ebp7) + 0xfffffdf0, edi12, esi13, v14);
        if (reinterpret_cast<int32_t>(eax15) >= reinterpret_cast<int32_t>(0)) {
            ecx = reinterpret_cast<void**>(0x80000002);
            fun_10010167(0x80000002, "H", a4);
        }
        LocalFree(ecx, v16);
    } else {
        eax17 = reinterpret_cast<uint32_t>(GetLastError());
        esi18 = eax17;
        sf19 = reinterpret_cast<int32_t>(esi18) < reinterpret_cast<int32_t>(0);
        if (!(reinterpret_cast<uint1_t>(sf19) | reinterpret_cast<uint1_t>(esi18 == 0))) {
            esi18 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi18)) | 0x80070000;
            sf19 = reinterpret_cast<int32_t>(esi18) < reinterpret_cast<int32_t>(0);
        }
        if (!sf19) {
        }
    }
    ecx20 = eax8 ^ reinterpret_cast<uint32_t>(ebp7) ^ reinterpret_cast<uint32_t>(ebp7);
    eax21 = fun_1000a130(ecx20, ecx20);
    return eax21;
}

uint32_t fun_1001ea0b(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, signed char a7);

void** fun_1001df13(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void*** ebp46;
    uint32_t eax47;
    void** v48;
    void** esi49;
    void** eax50;
    void** edi51;
    void** ebx52;
    void** ebp53;
    void** eax54;
    uint32_t v55;
    void** v56;
    uint32_t v57;
    void** v58;
    void** v59;
    void** v60;
    void*** edx61;
    uint32_t eax62;
    void** eax63;
    void** esi64;
    uint32_t ecx65;
    void** eax66;

    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax47 = g100240c4;
    v48 = reinterpret_cast<void**>(eax47 ^ reinterpret_cast<uint32_t>(ebp46));
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0);
    eax50 = fun_1000b6b9(0x290, 0x10002b64, esi49);
    if (eax50) {
        eax54 = fun_1001e00b(eax50, edi51, esi49, ebx52, ecx, v48, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
        v55 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a6));
        v56 = *reinterpret_cast<void***>(a5);
        v57 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a4));
        v58 = *reinterpret_cast<void***>(a3);
        v59 = *reinterpret_cast<void***>(a2);
        v60 = *edx61;
        eax62 = fun_1001ea0b(eax54, v60, v59, v58, *reinterpret_cast<void***>(&v57), v56, *reinterpret_cast<signed char*>(&v55));
        if (reinterpret_cast<int32_t>(eax62) >= reinterpret_cast<int32_t>(0)) {
            if (eax54) {
                eax63 = *reinterpret_cast<void***>(eax54);
                esi64 = *reinterpret_cast<void***>(eax63 + 4);
                image_base_(esi64, eax54);
                esi64(esi64, eax54);
            }
            *reinterpret_cast<void***>(ecx) = eax54;
        }
        fun_100136b5(ebp46 + 0xfffffff8, edi51, esi49, ebx52, eax54, v48, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    }
    ecx65 = reinterpret_cast<unsigned char>(v48) ^ reinterpret_cast<uint32_t>(ebp46);
    eax66 = fun_1000a130(ecx65, ecx65);
    return eax66;
}

struct s114* fun_10019377(struct s114* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28) {
    void** ebx29;
    void** esi30;
    void** eax31;
    void** eax32;
    void** eax33;
    void** eax34;
    void** eax35;
    void** ecx36;
    void** eax37;
    void** eax38;
    void** edi39;
    void** eax40;
    void** edi41;
    void** ebx42;
    void** ebp43;
    void** eax44;
    void** eax45;
    void** eax46;
    void** ecx47;
    void** eax48;
    void** eax49;
    void** eax50;

    ebx29 = reinterpret_cast<void**>(0);
    ecx->f12 = 0xffffffff;
    ecx->f16 = 0xffffffff;
    ecx->f4 = a2;
    ecx->f8 = 0;
    ecx->f10 = reinterpret_cast<void**>(0);
    ecx->f20 = reinterpret_cast<void**>(0);
    ecx->f0 = reinterpret_cast<void**>(0);
    switch (a2) {
    case 0:
        eax31 = fun_1000b6b9(56, 0x10002b64, esi30);
        if (!eax31) {
            addr_100193c7_4:
            ecx->f0 = ebx29;
            break;
        } else {
            eax32 = fun_1001962f(eax31);
            goto addr_100193c5_6;
        }
    case 1:
        eax33 = fun_1000b6b9(56, 0x10002b64, esi30);
        if (eax33) {
            eax34 = fun_1001962f(eax33);
            ebx29 = eax34;
        }
        ecx->f0 = ebx29;
        if (ebx29) {
            *reinterpret_cast<void***>(ebx29 + 44) = reinterpret_cast<void**>(7);
            break;
        }
    case 2:
        eax35 = fun_1000b6b9(52, 0x10002b64, esi30);
        ecx36 = eax35;
        if (!ecx36) {
            addr_100195ce_12:
            ecx36 = reinterpret_cast<void**>(0);
            goto addr_100195d0_13;
        } else {
            fun_100192d7(ecx36);
            *reinterpret_cast<void***>(ecx36) = reinterpret_cast<void**>(0x10001808);
            *reinterpret_cast<void***>(ecx36 + 8) = reinterpret_cast<void**>(0x100017d4);
            *reinterpret_cast<void***>(ecx36 + 44) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx36 + 48) = reinterpret_cast<void**>(0);
            goto addr_100195d0_13;
        }
    case 3:
        eax37 = fun_1000b6b9(100, 0x10002b64, esi30);
        if (!eax37) 
            goto addr_100193c7_4;
        eax32 = fun_10019658(eax37);
        goto addr_100193c5_6;
    case 4:
        eax38 = fun_1000b6b9(44, 0x10002b64, esi30);
        ecx36 = eax38;
        if (!ecx36) 
            goto addr_100195ce_12;
        fun_100192d7(ecx36);
        *reinterpret_cast<void***>(ecx36) = reinterpret_cast<void**>(0x100017ec);
        *reinterpret_cast<void***>(ecx36 + 8) = reinterpret_cast<void**>(0x100017d4);
        goto addr_100195d0_13;
    case 5:
        eax40 = fun_1000b6b9(44, 0x10002b64, edi39);
        edi41 = eax40;
        if (!edi41) {
            edi41 = reinterpret_cast<void**>(0);
        } else {
            fun_1000b8d8(0x10002b64, edi41, 0, 44, edi39, esi30, ebx42, ebp43, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
            fun_100192d7(edi41);
            *reinterpret_cast<void***>(edi41) = reinterpret_cast<void**>(0x10001748);
            *reinterpret_cast<void***>(edi41 + 8) = reinterpret_cast<void**>(0x100017d4);
        }
        ecx->f0 = edi41;
        break;
    case 6:
        eax44 = fun_1000b6b9(56, 0x10002b64, esi30);
        if (!eax44) 
            goto addr_100193c7_4;
        eax32 = fun_1001960f(eax44);
        goto addr_100193c5_6;
    case 7:
        eax45 = fun_1000b6b9(48, 0x10002b64, esi30);
        ecx36 = eax45;
        if (!ecx36) 
            goto addr_100195ce_12;
        fun_100192d7(ecx36);
        *reinterpret_cast<void***>(ecx36) = reinterpret_cast<void**>(0x100017b8);
        *reinterpret_cast<void***>(ecx36 + 8) = reinterpret_cast<void**>(0x100017d4);
        *reinterpret_cast<void***>(ecx36 + 44) = reinterpret_cast<void**>(0);
        goto addr_100195d0_13;
    case 8:
        eax46 = fun_1000b6b9(48, 0x10002b64, esi30);
        ecx47 = eax46;
        if (!ecx47) {
            ecx47 = reinterpret_cast<void**>(0);
        } else {
            fun_100192d7(ecx47);
            *reinterpret_cast<void***>(ecx47) = reinterpret_cast<void**>(0x100017b8);
            *reinterpret_cast<void***>(ecx47 + 8) = reinterpret_cast<void**>(0x100017d4);
            *reinterpret_cast<void***>(ecx47 + 44) = reinterpret_cast<void**>(0);
        }
        ecx->f0 = ecx47;
        if (ecx47) {
            *reinterpret_cast<void***>(ecx47 + 44) = reinterpret_cast<void**>(1);
            break;
        }
    case 10:
        eax48 = fun_1000b6b9(48, 0x10002b64, esi30);
        ecx36 = eax48;
        if (!ecx36) 
            goto addr_100195ce_12;
        fun_100192d7(ecx36);
        *reinterpret_cast<void***>(ecx36) = reinterpret_cast<void**>(0x1000179c);
        *reinterpret_cast<void***>(ecx36 + 8) = reinterpret_cast<void**>(0x100017d4);
        goto addr_100195c9_34;
    case 11:
        eax49 = fun_1000b6b9(44, 0x10002b64, esi30);
        ecx36 = eax49;
        if (!ecx36) 
            goto addr_100195ce_12;
        fun_100192d7(ecx36);
        *reinterpret_cast<void***>(ecx36) = reinterpret_cast<void**>(0x10001780);
        *reinterpret_cast<void***>(ecx36 + 8) = reinterpret_cast<void**>(0x100017d4);
        goto addr_100195d0_13;
    case 12:
        eax50 = fun_1000b6b9(48, 0x10002b64, esi30);
        ecx36 = eax50;
        if (!ecx36) 
            goto addr_100195ce_12;
        fun_100192d7(ecx36);
        *reinterpret_cast<void***>(ecx36) = reinterpret_cast<void**>(0x10001764);
        *reinterpret_cast<void***>(ecx36 + 8) = reinterpret_cast<void**>(0x100017d4);
        goto addr_100195c9_34;
    case 9:
        goto 0x100195d2;
    }
    addr_100195d2_39:
    return ecx;
    addr_100195c9_34:
    *reinterpret_cast<void***>(ecx36 + 44) = reinterpret_cast<void**>(0);
    addr_100195d0_13:
    ecx->f0 = ecx36;
    goto addr_100195d2_39;
    addr_100193c5_6:
    ebx29 = eax32;
    goto addr_100193c7_4;
}

void** fun_1001974b(struct s116* ecx) {
    void* ebp2;
    uint32_t eax3;
    void** v4;
    void** edx5;
    void** v6;
    void** ecx7;
    void** edi8;
    void** esi9;
    void** v10;
    void** ecx11;
    void** ebx12;
    void** v13;
    void** ecx14;
    uint32_t v15;
    void** v16;
    void** v17;
    void** ecx18;
    void** v19;
    void** eax20;
    void** edi21;
    void** esi22;
    void** ecx23;
    void** v24;
    void** eax25;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *reinterpret_cast<unsigned char*>(&v4 + 3) = 1;
    edx5 = ecx->f0;
    if (!edx5) {
        addr_100197e6_2:
        v6 = ecx->f12;
        ecx7 = g10024740;
        fun_1001a508(ecx7, v6, edi8, esi9);
        v10 = ecx->f16;
        ecx11 = g10024740;
        fun_1001a13d(ecx11, v10, edi8, esi9, ebx12, v13, v4);
    } else {
        ecx14 = image_base_;
        if (ecx14 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx14 + 28)) & 8) {
            v15 = *reinterpret_cast<unsigned char*>(edx5 + 13);
            v16 = *reinterpret_cast<void***>(ecx14 + 20);
            v17 = *reinterpret_cast<void***>(ecx14 + 16);
            fun_1001c7d7(v17, v16, edx5, v15);
        }
        if (!*reinterpret_cast<unsigned char*>(ecx->f0 + 13)) {
            if (ecx->f8 || (ecx18 = g10024740, v19 = ecx->f0, eax20 = fun_10019b4b(ecx18, v19), reinterpret_cast<signed char>(eax20) < reinterpret_cast<signed char>(0))) {
                edi21 = ecx->f0;
                esi22 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi21) + 24);
                image_base_(esi22);
                esi22(edi21);
            } else {
                *reinterpret_cast<unsigned char*>(&v4 + 3) = 0;
            }
        } else {
            *reinterpret_cast<unsigned char*>(&v4 + 3) = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(ecx->f0 + 25) == 0);
        }
        ecx23 = ecx->f0;
        ecx->f0 = reinterpret_cast<void**>(0);
        if (ecx23) {
            fun_1001af64(ecx23, edi8, esi9, ebx12, v24, v4);
        }
        if (*reinterpret_cast<unsigned char*>(&v4 + 3)) 
            goto addr_100197e6_2;
    }
    eax25 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax25;
}

void fun_1000b894(int32_t a1, int32_t a2) {
    void* esp3;
    int32_t* esp4;
    int32_t ebx5;
    int32_t* esp6;
    int32_t esi7;
    int32_t* esp8;
    int32_t edi9;
    void* ebp10;
    uint32_t eax11;
    uint32_t* esp12;
    int32_t* esp13;

    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
    esp4 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp3) - a1 - 4);
    *esp4 = ebx5;
    esp6 = esp4 - 1;
    *esp6 = esi7;
    esp8 = esp6 - 1;
    *esp8 = edi9;
    ebp10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp3) + 12);
    eax11 = g100240c4;
    esp12 = reinterpret_cast<uint32_t*>(esp8 - 1);
    *esp12 = eax11 ^ reinterpret_cast<uint32_t>(ebp10);
    esp13 = reinterpret_cast<int32_t*>(esp12 - 1);
    *esp13 = reinterpret_cast<int32_t>(__return_address());
    g0 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp10) + 0xfffffff4);
    goto *esp13;
}

void fun_100097e0(int32_t a1) {
    GetProcessHeap();
    HeapAlloc();
    goto 8;
}

struct s118* fun_100165b7(struct s118* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10) {
    struct s118* edi11;
    void** eax12;

    edi11 = reinterpret_cast<struct s118*>(0);
    if (ecx && (eax12 = fun_10016463(ecx), !!eax12)) {
        edi11 = ecx;
    }
    return edi11;
}

struct s184 {
    signed char[8] pad8;
    int32_t f8;
    signed char[12] pad24;
    int32_t f24;
};

struct s183 {
    int32_t f0;
    signed char[128] pad132;
    struct s184** f132;
    void** f136;
    signed char[3] pad140;
    int32_t f140;
};

int32_t DestroyReasons = 0x26e48;

/* (image base) */
int32_t image_base_ = 0x1000a994;

void** fun_100165ef(struct s183* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47) {
    void*** ebp48;
    uint32_t eax49;
    void** v50;
    int32_t* eax51;
    struct s184* eax52;
    struct s184** v53;
    int32_t esi54;
    void** edi55;
    void** esi56;
    void** ebp57;
    struct s184** ecx58;
    struct s184* eax59;
    int32_t esi60;
    void** eax61;

    ebp48 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax49 = g100240c4;
    v50 = reinterpret_cast<void**>(eax49 ^ reinterpret_cast<uint32_t>(ebp48));
    eax51 = &ecx->f140;
    ecx->f0 = 0x1000117c;
    if (*eax51) {
        DestroyReasons(eax51);
    }
    if (ecx->f132) {
        eax52 = *ecx->f132;
        v53 = ecx->f132;
        esi54 = eax52->f24;
        image_base_(esi54, v53);
        esi54(esi54, v53);
    }
    fun_100136b5(&ecx->f136, edi55, esi56, v50, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
    ecx58 = ecx->f132;
    if (ecx58) {
        ecx->f132 = reinterpret_cast<struct s184**>(0);
        eax59 = *ecx58;
        esi60 = eax59->f8;
        image_base_(esi60, ecx58);
        esi60(esi60, ecx58);
    }
    image_base_(ecx);
    eax61 = fun_1000a130(reinterpret_cast<unsigned char>(v50) ^ reinterpret_cast<uint32_t>(ebp48));
    return eax61;
}

void** fun_1001759b(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6) {
    void* ebp7;
    uint32_t eax8;
    int32_t esi9;
    int32_t edi10;
    int32_t esi11;
    uint32_t ecx12;
    void** eax13;

    ebp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax8 = g100240c4;
    esi9 = (*ecx)->f72;
    image_base_(esi9, 0, edi10, esi11);
    esi9(ecx, 0, edi10, esi11);
    GetProcessHeap(ecx);
    HeapFree(ecx);
    ecx12 = eax8 ^ reinterpret_cast<uint32_t>(ebp7) ^ reinterpret_cast<uint32_t>(ebp7);
    eax13 = fun_1000a130(ecx12, ecx12);
    return eax13;
}

void** fun_1001681d(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** eax47;
    void** esi48;
    void** edi49;
    void** esi50;
    void** ebx51;
    void** v52;
    void** v53;
    void** v54;
    void** ebp55;
    void** eax56;
    void** eax57;
    void** eax58;
    void** v59;
    void** eax60;
    void** v61;
    void** eax62;
    void** v63;
    void** v64;
    void** eax65;
    void** v66;
    void** v67;
    int32_t v68;
    uint32_t ecx69;
    void** eax70;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    if (*reinterpret_cast<void***>(ecx + 0x88) != a3) {
        if (a3) {
            eax47 = *reinterpret_cast<void***>(a3);
            esi48 = *reinterpret_cast<void***>(eax47 + 4);
            image_base_(esi48, a3, edi49, esi50, ebx51);
            esi48(esi48, a3, edi49, esi50, ebx51);
        }
        v52 = *reinterpret_cast<void***>(ecx + 0x88);
        *reinterpret_cast<void***>(ecx + 0x88) = a3;
        fun_100136b5(ebp44 + 0xfffffff8, edi49, esi50, ebx51, v53, v54, v52, v46, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    fun_10016679(ecx + 0x84, a4, edi49, esi50, ebx51);
    eax56 = reinterpret_cast<void**>(image_base_(ecx));
    if (reinterpret_cast<signed char>(eax56) >= reinterpret_cast<signed char>(0) && ((eax57 = fun_100187a4(ecx), reinterpret_cast<signed char>(eax57) >= reinterpret_cast<signed char>(0)) && ((eax58 = fun_10018502(ecx), reinterpret_cast<signed char>(eax58) >= reinterpret_cast<signed char>(0)) && (v59 = reinterpret_cast<void**>(ebp44 + 0xfffffff8), eax60 = reinterpret_cast<void**>(image_base_(ecx, v59, 0, 0, 0, 0)), reinterpret_cast<signed char>(eax60) >= reinterpret_cast<signed char>(0))))) {
        v61 = g10024480;
        eax62 = reinterpret_cast<void**>(image_base_(v52, 0x3e8, v61, 0x10000000, v59, 0, 0, 0, 0));
        if (reinterpret_cast<signed char>(eax62) >= reinterpret_cast<signed char>(0) && (v63 = reinterpret_cast<void**>(ebp44 + 0xfffffff0), v64 = reinterpret_cast<void**>(ebp44 + 0xfffffff4), eax65 = reinterpret_cast<void**>(image_base_(v52, "m", ecx, 0, v64, v63, 0x3e8, v61, 0x10000000, v59, 0, 0, 0, 0)), reinterpret_cast<signed char>(eax65) >= reinterpret_cast<signed char>(0))) {
            if (*reinterpret_cast<signed char*>(&a2)) {
                fun_1001718b(ecx, "m", ecx, 0, v64, v63, 0x3e8, v61, 0x10000000, v59, 0, 0, 0, 0, 0, 0, 0, edi49, esi50, ebx51, v66, v67, v52, v46, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
            }
            image_base_(ecx, v68, "m", ecx, 0, v64, v63, 0x3e8, v61, 0x10000000, v59, 0, 0, 0, 0);
        }
        image_base_(v52, 0x3e8, v61, 0x10000000, v59, 0, 0, 0, 0);
    }
    ecx69 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
    eax70 = fun_1000a130(ecx69, ecx69);
    return eax70;
}

struct s186 {
    signed char[16] pad16;
    int32_t f16;
};

struct s187 {
    signed char[8] pad8;
    int32_t f8;
};

struct s185 {
    struct s186* f0;
    signed char[4] pad8;
    struct s187* f8;
};

struct s188 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
};

/* (image base) */
int32_t image_base_ = 0x1000b206;

struct s185* fun_100174e8() {
    struct s188* eax1;

    GetProcessHeap();
    eax1 = reinterpret_cast<struct s188*>(HeapAlloc());
    if (eax1) {
        image_base_(eax1);
        eax1->f0 = 0x100014d8;
        eax1->f8 = 0x1000139c;
        eax1->f12 = 0x100014b4;
        eax1->f16 = 0x10001388;
        ++g10024668;
        eax1->f0 = 0x100014d8;
        eax1->f8 = 0x1000139c;
        eax1->f12 = 0x100014b4;
        eax1->f16 = 0x10001388;
    }
    goto 8;
}

struct s189 {
    int32_t f0;
    signed char[124] pad128;
    signed char f128;
};

uint32_t fun_100175e2() {
    struct s189* eax1;

    GetProcessHeap();
    eax1 = reinterpret_cast<struct s189*>(HeapAlloc());
    if (eax1) {
        image_base_(eax1);
        eax1->f128 = 0;
        eax1->f0 = 0x10001230;
    }
    goto 8;
}

void** fun_100176cf(int32_t ecx, struct s185** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s185* eax5;
    struct s186* eax6;
    int32_t esi7;
    int32_t edx8;
    int32_t eax9;
    struct s187** eax10;
    struct s187* ecx11;
    int32_t esi12;
    void** eax13;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s185*>(0);
    eax5 = fun_100174e8();
    if (eax5) {
        eax6 = eax5->f0;
        esi7 = eax6->f16;
        image_base_(esi7, ecx, edx8);
        eax9 = reinterpret_cast<int32_t>(esi7(eax5, ecx, edx8));
        if (eax9 < 0) {
            eax10 = &eax5->f8;
            ecx11 = *eax10;
            esi12 = ecx11->f8;
            image_base_(esi12, eax10, ecx, edx8);
            esi12(esi12, eax10, ecx, edx8);
        } else {
            *a2 = eax5;
        }
    }
    eax13 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax13;
}

struct s191 {
    signed char[8] pad8;
    int32_t f8;
};

struct s190 {
    struct s191* f0;
    int32_t f4;
};

/* (image base) */
int32_t image_base_ = 0x1000af4e;

void** fun_10017ccc(struct s190* ecx, int32_t a2, signed char* a3) {
    void* ebp4;
    uint32_t eax5;
    uint32_t v6;
    signed char* ebx7;
    int32_t edx8;
    struct s190* v9;
    int32_t* esi10;
    int32_t ecx11;
    int32_t edi12;
    int32_t v13;
    signed char al14;
    int32_t eax15;
    void** eax16;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    v6 = eax5 ^ reinterpret_cast<uint32_t>(ebp4);
    ebx7 = a3;
    edx8 = 0x80004005;
    v9 = ecx;
    esi10 = reinterpret_cast<int32_t*>(0x10002088);
    ecx11 = a2;
    *ebx7 = 0;
    do {
        if (edx8 >= 0) 
            break;
        if (**reinterpret_cast<int32_t**>(esi10 - 2) == ecx11) {
            edi12 = *esi10;
            if (edi12) {
                v13 = v9->f4;
                image_base_(edi12, v13);
                al14 = reinterpret_cast<signed char>(edi12(edi12, v13));
                ecx11 = a2;
                *ebx7 = al14;
            }
            edx8 = 0;
        }
        esi10 = esi10 + 3;
    } while (reinterpret_cast<int32_t>(esi10) < 0x10002094);
    if (edx8 < 0) {
        eax15 = reinterpret_cast<int32_t>(image_base_(ecx11, ebx7));
        image_base_(v9, eax15, ecx11, ebx7);
    }
    eax16 = fun_1000a130(v6 ^ reinterpret_cast<uint32_t>(ebp4));
    return eax16;
}

/* (image base) */
int32_t image_base_ = 0x1000af6c;

/* (image base) */
int32_t image_base_ = 0x1000ae70;

/* (image base) */
int32_t image_base_ = 0x1000ae7a;

void** fun_100178bb() {
    void* ebp1;
    void*** edx2;
    void** eax3;
    void** edi4;
    void** ecx5;
    signed char al6;
    int16_t* v7;
    uint16_t v8;
    void** eax9;
    int32_t eax10;
    int32_t eax11;
    int32_t eax12;
    int32_t eax13;
    void** eax14;

    ebp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *edx2 = reinterpret_cast<void**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<void**>(HeapAlloc());
    if (!eax3) {
        edi4 = reinterpret_cast<void**>(0x8007000e);
    } else {
        image_base_();
        ecx5 = reinterpret_cast<void**>(0x10000000);
        *reinterpret_cast<void***>(eax3) = reinterpret_cast<void**>(0x100014a8);
        *reinterpret_cast<void***>(eax3 + 24) = reinterpret_cast<void**>(14);
        edi4 = reinterpret_cast<void**>(0x80004005);
        al6 = fun_100113c6(0x10000000, eax3, reinterpret_cast<int32_t>(ebp1) + 0xfffffff8, reinterpret_cast<int32_t>(ebp1) + 0xfffffffc);
        if (al6) {
            ecx5 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp1) + 0xffffffec);
            eax9 = fun_10011c3c(ecx5, v7, static_cast<uint32_t>(v8));
            edi4 = eax9;
        }
        if (reinterpret_cast<signed char>(edi4) < reinterpret_cast<signed char>(0) || (eax10 = reinterpret_cast<int32_t>(GetSystemMetrics(ecx5, 79, 0x200080, 0x80000000, 0, 49)), eax11 = reinterpret_cast<int32_t>(GetSystemMetrics(ecx5, 78, eax10, 79, 0x200080, 0x80000000, 0, 49)), eax12 = reinterpret_cast<int32_t>(GetSystemMetrics(ecx5, 77, eax11, 78, eax10, 79, 0x200080, 0x80000000, 0, 49)), eax13 = reinterpret_cast<int32_t>(GetSystemMetrics(ecx5, 76, eax12, 77, eax11, 78, eax10, 79, 0x200080, 0x80000000, 0, 49)), eax14 = reinterpret_cast<void**>(image_base_(eax3, "S", 0, 0, 0, eax13, 76, eax12, 77, eax11, 78, eax10, 79, 0x200080, 0x80000000, 0, 49)), edi4 = eax14, reinterpret_cast<signed char>(edi4) < reinterpret_cast<signed char>(0))) {
            image_base_(eax3);
        } else {
            *edx2 = eax3;
        }
        fun_10011c1d(reinterpret_cast<int32_t>(ebp1) + 0xffffffec);
    }
    return edi4;
}

int32_t ResolveDelayLoadedAPI = 0x26efa;

int32_t fun_10018a97(int32_t a1, int32_t a2) {
    ResolveDelayLoadedAPI();
    goto a1;
}

void** fun_1000a69b(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8);

int32_t fun_10018d8e(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25) {
    void** edi26;
    void** esi27;
    void** ebx28;
    void** ebp29;
    void** eax30;
    void** eax31;
    void** eax32;
    void** eax33;
    void** esi34;
    int1_t sf35;
    void** eax36;
    void** eax37;

    *reinterpret_cast<void***>(a5) = reinterpret_cast<void**>(0);
    eax30 = fun_1000a69b(0x1f0003, 0, "G", edi26, esi27, ebx28, ebp29, __return_address());
    if (eax30) {
        ecx = eax30;
        fun_10019008(ecx, 0x1f0003, 0, "G", edi26, esi27, ebx28, ebp29, __return_address());
        fun_1000a68f(ecx, eax30, 0x1f0003, 0, "G", edi26, esi27, ebx28, ebp29, __return_address());
    }
    eax31 = fun_1000a695(ecx, 0x100080a4, 0, 4, 0x100082bc, a5, 0x1f0003, 0, "G", edi26, esi27, ebx28, ebp29, __return_address());
    if (reinterpret_cast<signed char>(eax31) < reinterpret_cast<signed char>(0)) {
        eax32 = fun_1000a6a1(ecx, 0, 1, 0, "G");
        if (!eax32) {
            eax33 = reinterpret_cast<void**>(GetLastError(ecx, 0, 1, 0, "G"));
            esi34 = eax33;
            sf35 = reinterpret_cast<signed char>(esi34) < reinterpret_cast<signed char>(0);
            if (!(reinterpret_cast<uint1_t>(sf35) | reinterpret_cast<uint1_t>(esi34 == 0))) {
                esi34 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi34)) | 0x80070000);
                sf35 = reinterpret_cast<signed char>(esi34) < reinterpret_cast<signed char>(0);
            }
            if (!sf35) {
            }
        } else {
            eax36 = fun_10018ce0(ecx, 0, 1, 0, "G", 0x100080a4, 0, 4, 0x100082bc, a5, 0x1f0003, 0, "G", edi26, esi27, ebx28, ebp29, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
            if (reinterpret_cast<signed char>(eax36) >= reinterpret_cast<signed char>(0) && (ecx = eax32, eax37 = fun_10019008(ecx, 0, 1, 0, "G", 0x100080a4, 0, 4, 0x100082bc), reinterpret_cast<signed char>(eax37) >= reinterpret_cast<signed char>(0))) {
                fun_1000a695(ecx, 0x100080a4, 0, 4, 0x100082bc, a5, 0, 1, 0, "G", 0x100080a4, 0, 4, 0x100082bc);
            }
            fun_1000a68f(ecx, eax32, 0, 1, 0, "G", 0x100080a4, 0, 4, 0x100082bc);
        }
    }
    goto a5;
}

int32_t fun_1000a689() {
    goto WaitForSingleObject;
}

int32_t OpenEventW = 0x26318;

void** fun_1000a69b(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    goto OpenEventW;
}

void** fun_10018e4a(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** ecx50;
    void** edi51;
    void** esi52;
    void** ebp53;
    void** v54;
    void** v55;
    void** v56;
    int32_t eax57;
    void** esi58;
    void** ecx59;
    void** eax60;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    ecx50 = reinterpret_cast<void**>(ebp47 + 0xfffffff8);
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0);
    fun_100136b5(ecx50, edi51, esi52, 0, v49, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax57 = fun_10018d8e(ecx50, v54, v55, v56, ebp47 + 0xfffffff8, edi51, esi52, 0, v49, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    if (eax57 >= 0) {
        esi58 = g0;
        ecx59 = *reinterpret_cast<void***>(esi58 + 12);
        image_base_(ecx59, 0, 0x10008034, 0, 0x100073dc, a2);
        *reinterpret_cast<void***>(esi58 + 12)(ecx59, 0, 0x10008034, 0, 0x100073dc, a2);
    }
    fun_100136b5(ebp47 + 0xfffffff8, edi51, esi52, 0, v49, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax60 = fun_1000a130(reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47));
    return eax60;
}

void** fun_10019052(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t* edx4;
    void** eax5;
    void** esi6;
    uint32_t eax7;
    void** eax8;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    *edx4 = 0;
    eax5 = fun_100190ac();
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0)) {
        esi6 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 0xb4);
        image_base_(esi6);
        eax7 = reinterpret_cast<uint32_t>(esi6(ecx));
        *edx4 = eax7;
    }
    eax8 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax8;
}

int32_t GetWindowRect = 0x27018;

/* (image base) */
int32_t image_base_ = 0x1000b8fc;

struct s192 {
    int32_t f0;
    int32_t f4;
};

void** fun_10019132(void** ecx, struct s102* a2) {
    void* ebp3;
    uint32_t eax4;
    void** eax5;
    void* v6;
    int32_t v7;
    int32_t eax8;
    void** eax9;
    void** eax10;
    struct s192* edx11;
    int32_t v12;
    int32_t v13;
    int32_t v14;
    int32_t v15;
    void** eax16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    a2->f0 = 0;
    a2->f4 = 0;
    eax5 = fun_10019052(ecx);
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0)) {
        v6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp3) - 36);
        eax8 = reinterpret_cast<int32_t>(GetWindowRect(v7, v6));
        if (!eax8) {
            eax9 = reinterpret_cast<void**>(GetLastError(v7, v6));
            if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax9) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax9 == 0))) {
            }
        } else {
            eax10 = reinterpret_cast<void**>(image_base_(ecx, reinterpret_cast<uint32_t>(ebp3) - 20, v7, v6));
            if (reinterpret_cast<signed char>(eax10) >= reinterpret_cast<signed char>(0)) {
                a2->f0 = reinterpret_cast<uint32_t>(edx11->f0 + v12 + v13);
                a2->f4 = reinterpret_cast<uint32_t>(edx11->f4 + v14 + v15);
            }
        }
    }
    eax16 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax16;
}

void** fun_1001bf82(void** ecx) {
    void** esi2;
    void** eax3;
    void** eax4;
    int1_t sf5;

    esi2 = reinterpret_cast<void**>(0);
    if (!*reinterpret_cast<void***>(ecx + 4) && (eax3 = reinterpret_cast<void**>(image_base_(5)), *reinterpret_cast<void***>(ecx + 4) = eax3, !eax3)) {
        eax4 = reinterpret_cast<void**>(GetLastError(5));
        esi2 = eax4;
        sf5 = reinterpret_cast<signed char>(esi2) < reinterpret_cast<signed char>(0);
        if (!(reinterpret_cast<uint1_t>(sf5) | reinterpret_cast<uint1_t>(esi2 == 0))) {
            esi2 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi2)) | 0x80070000);
            sf5 = reinterpret_cast<signed char>(esi2) < reinterpret_cast<signed char>(0);
        }
        if (!sf5) {
            esi2 = reinterpret_cast<void**>(0x80004005);
        }
    }
    return esi2;
}

void fun_10019813(void** ecx) {
    void** esi2;
    void** v3;
    int32_t ebx4;
    int32_t eax5;
    void** ecx6;
    void** esi7;
    void** eax8;
    void*** ebx9;
    int1_t zf10;
    void** v11;
    void** edi12;
    uint32_t edi13;
    void** ecx14;
    void** edi15;
    void** v16;
    int32_t eax17;

    esi2 = *reinterpret_cast<void***>(ecx + 44);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001808);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x100017d4);
    if (esi2) {
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) & 0x10000000) {
            if (*reinterpret_cast<void***>(esi2 + 4)) {
                v3 = *reinterpret_cast<void***>(esi2 + 4);
                eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, v3, ebx4));
                HeapFree(eax5, 0, v3, ebx4);
                *reinterpret_cast<void***>(esi2 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(esi2 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(esi2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) & 0xe0000000);
        GetProcessHeap(0, esi2, ebx4);
        HeapFree();
    }
    ecx6 = ecx;
    esi7 = ecx6;
    eax8 = *reinterpret_cast<void***>(esi7 + 16);
    ebx9 = reinterpret_cast<void***>(esi7 + 8);
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0x10001e70);
    *ebx9 = reinterpret_cast<void**>(0x10001e3c);
    *reinterpret_cast<signed char*>(esi7 + 27) = 1;
    if (eax8) {
        zf10 = *reinterpret_cast<signed char*>(esi7 + 26) == 0;
        v11 = edi12;
        if (!zf10 && (edi13 = 0, !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8)) & 0xfffffff))) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16))) & 0x10000000)) {
                    ecx14 = *reinterpret_cast<void***>(esi7 + 16) + 4;
                } else {
                    ecx14 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16) + 4);
                }
                ecx6 = *reinterpret_cast<void***>(ecx14 + edi13 * 4);
                image_base_(ecx6, ebx9, v11);
                ++edi13;
            } while (edi13 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16))) & 0xfffffff));
        }
        edi15 = *reinterpret_cast<void***>(esi7 + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)) & 0x10000000) {
            if (*reinterpret_cast<void***>(edi15 + 4)) {
                v16 = *reinterpret_cast<void***>(edi15 + 4);
                eax17 = reinterpret_cast<int32_t>(GetProcessHeap(ecx6, 0, v16, v11));
                HeapFree(ecx6, eax17, 0, v16, v11);
                *reinterpret_cast<void***>(edi15 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(edi15 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(edi15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)) & 0xe0000000);
        GetProcessHeap(ecx6, 0, edi15, v11);
        HeapFree(ecx6);
    }
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0x1000183c);
    return;
}

void fun_10019873(void** ecx) {
    void** esi2;
    void** v3;
    int32_t ebx4;
    int32_t eax5;
    void** ecx6;
    void** esi7;
    void** eax8;
    void*** ebx9;
    int1_t zf10;
    void** v11;
    void** edi12;
    uint32_t edi13;
    void** ecx14;
    void** edi15;
    void** v16;
    int32_t eax17;

    esi2 = *reinterpret_cast<void***>(ecx + 44);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001e04);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001e3c);
    if (esi2) {
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) & 0x10000000) {
            if (*reinterpret_cast<void***>(esi2 + 4)) {
                v3 = *reinterpret_cast<void***>(esi2 + 4);
                eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, v3, ebx4));
                HeapFree(eax5, 0, v3, ebx4);
                *reinterpret_cast<void***>(esi2 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(esi2 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(esi2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) & 0xe0000000);
        GetProcessHeap(0, esi2, ebx4);
        HeapFree();
    }
    ecx6 = ecx;
    esi7 = ecx6;
    eax8 = *reinterpret_cast<void***>(esi7 + 16);
    ebx9 = reinterpret_cast<void***>(esi7 + 8);
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0x10001e70);
    *ebx9 = reinterpret_cast<void**>(0x10001e3c);
    *reinterpret_cast<signed char*>(esi7 + 27) = 1;
    if (eax8) {
        zf10 = *reinterpret_cast<signed char*>(esi7 + 26) == 0;
        v11 = edi12;
        if (!zf10 && (edi13 = 0, !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8)) & 0xfffffff))) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16))) & 0x10000000)) {
                    ecx14 = *reinterpret_cast<void***>(esi7 + 16) + 4;
                } else {
                    ecx14 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16) + 4);
                }
                ecx6 = *reinterpret_cast<void***>(ecx14 + edi13 * 4);
                image_base_(ecx6, ebx9, v11);
                ++edi13;
            } while (edi13 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16))) & 0xfffffff));
        }
        edi15 = *reinterpret_cast<void***>(esi7 + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)) & 0x10000000) {
            if (*reinterpret_cast<void***>(edi15 + 4)) {
                v16 = *reinterpret_cast<void***>(edi15 + 4);
                eax17 = reinterpret_cast<int32_t>(GetProcessHeap(ecx6, 0, v16, v11));
                HeapFree(ecx6, eax17, 0, v16, v11);
                *reinterpret_cast<void***>(edi15 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(edi15 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(edi15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)) & 0xe0000000);
        GetProcessHeap(ecx6, 0, edi15, v11);
        HeapFree(ecx6);
    }
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0x1000183c);
    return;
}

void fun_100198d3(void** ecx) {
    void** esi2;
    void** v3;
    int32_t ebx4;
    int32_t eax5;
    void** ecx6;
    void** esi7;
    void** eax8;
    void*** ebx9;
    int1_t zf10;
    void** v11;
    void** edi12;
    uint32_t edi13;
    void** ecx14;
    void** edi15;
    void** v16;
    int32_t eax17;

    esi2 = *reinterpret_cast<void***>(ecx + 44);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001764);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x100017d4);
    if (esi2) {
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) & 0x10000000) {
            if (*reinterpret_cast<void***>(esi2 + 4)) {
                v3 = *reinterpret_cast<void***>(esi2 + 4);
                eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, v3, ebx4));
                HeapFree(eax5, 0, v3, ebx4);
                *reinterpret_cast<void***>(esi2 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(esi2 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(esi2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) & 0xe0000000);
        GetProcessHeap(0, esi2, ebx4);
        HeapFree();
    }
    ecx6 = ecx;
    esi7 = ecx6;
    eax8 = *reinterpret_cast<void***>(esi7 + 16);
    ebx9 = reinterpret_cast<void***>(esi7 + 8);
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0x10001e70);
    *ebx9 = reinterpret_cast<void**>(0x10001e3c);
    *reinterpret_cast<signed char*>(esi7 + 27) = 1;
    if (eax8) {
        zf10 = *reinterpret_cast<signed char*>(esi7 + 26) == 0;
        v11 = edi12;
        if (!zf10 && (edi13 = 0, !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8)) & 0xfffffff))) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16))) & 0x10000000)) {
                    ecx14 = *reinterpret_cast<void***>(esi7 + 16) + 4;
                } else {
                    ecx14 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16) + 4);
                }
                ecx6 = *reinterpret_cast<void***>(ecx14 + edi13 * 4);
                image_base_(ecx6, ebx9, v11);
                ++edi13;
            } while (edi13 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi7 + 16))) & 0xfffffff));
        }
        edi15 = *reinterpret_cast<void***>(esi7 + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)) & 0x10000000) {
            if (*reinterpret_cast<void***>(edi15 + 4)) {
                v16 = *reinterpret_cast<void***>(edi15 + 4);
                eax17 = reinterpret_cast<int32_t>(GetProcessHeap(ecx6, 0, v16, v11));
                HeapFree(ecx6, eax17, 0, v16, v11);
                *reinterpret_cast<void***>(edi15 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(edi15 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(edi15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi15)) & 0xe0000000);
        GetProcessHeap(ecx6, 0, edi15, v11);
        HeapFree(ecx6);
    }
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(0x1000183c);
    return;
}

void fun_10019933(void** ecx) {
    void** ecx2;
    void** v3;
    void** v4;
    int32_t eax5;
    void** edi6;
    void** v7;
    int32_t eax8;
    int32_t eax9;
    void** v10;
    void** v11;
    void** edi12;
    int32_t esi13;
    void** ebx14;
    void** ecx15;
    void** esi16;
    void** eax17;
    void*** ebx18;
    int1_t zf19;
    void** v20;
    uint32_t edi21;
    void** ecx22;
    void** edi23;
    void** v24;
    int32_t eax25;

    ecx2 = *reinterpret_cast<void***>(ecx + 56);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001e20);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x10001e3c);
    if (ecx2 && *reinterpret_cast<void***>(ecx + 60)) {
        v3 = *reinterpret_cast<void***>(ecx + 60);
        image_base_(v3);
    }
    if (*reinterpret_cast<void***>(ecx + 60)) {
        v4 = *reinterpret_cast<void***>(ecx + 60);
        eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, v4));
        HeapFree(eax5, 0, v4);
    }
    if (!*reinterpret_cast<void***>(ecx + 92)) {
        addr_1001998d_6:
        if (!*reinterpret_cast<void***>(ecx + 24)) {
            ecx2 = ecx;
            fun_1001be33(ecx2);
            goto addr_10019999_8;
        }
    } else {
        if (*reinterpret_cast<void***>(ecx + 24)) {
            addr_10019999_8:
            edi6 = *reinterpret_cast<void***>(ecx + 48);
            if (edi6) {
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi6)) & 0x10000000) {
                    if (*reinterpret_cast<void***>(edi6 + 4)) {
                        v7 = *reinterpret_cast<void***>(edi6 + 4);
                        eax8 = reinterpret_cast<int32_t>(GetProcessHeap(ecx2, 0, v7));
                        HeapFree(ecx2, eax8, 0, v7);
                        *reinterpret_cast<void***>(edi6 + 4) = reinterpret_cast<void**>(0);
                    }
                    *reinterpret_cast<void***>(edi6 + 8) = reinterpret_cast<void**>(0);
                }
                *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi6)) & 0xe0000000);
                eax9 = reinterpret_cast<int32_t>(GetProcessHeap(ecx2, 0, edi6));
                HeapFree(ecx2, eax9, 0, edi6);
            }
        } else {
            v10 = *reinterpret_cast<void***>(ecx + 88);
            ecx2 = ecx + 44;
            v11 = *reinterpret_cast<void***>(ecx + 52);
            fun_1001bda4(ecx2, v11, v10);
            goto addr_1001998d_6;
        }
    }
    fun_1001ccf4(ecx + 44, edi12, esi13, ebx14);
    ecx15 = ecx;
    esi16 = ecx15;
    eax17 = *reinterpret_cast<void***>(esi16 + 16);
    ebx18 = reinterpret_cast<void***>(esi16 + 8);
    *reinterpret_cast<void***>(esi16) = reinterpret_cast<void**>(0x10001e70);
    *ebx18 = reinterpret_cast<void**>(0x10001e3c);
    *reinterpret_cast<signed char*>(esi16 + 27) = 1;
    if (eax17) {
        zf19 = *reinterpret_cast<signed char*>(esi16 + 26) == 0;
        v20 = edi12;
        if (!zf19 && (edi21 = 0, !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax17)) & 0xfffffff))) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi16 + 16))) & 0x10000000)) {
                    ecx22 = *reinterpret_cast<void***>(esi16 + 16) + 4;
                } else {
                    ecx22 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi16 + 16) + 4);
                }
                ecx15 = *reinterpret_cast<void***>(ecx22 + edi21 * 4);
                image_base_(ecx15, ebx18, v20);
                ++edi21;
            } while (edi21 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi16 + 16))) & 0xfffffff));
        }
        edi23 = *reinterpret_cast<void***>(esi16 + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi23)) & 0x10000000) {
            if (*reinterpret_cast<void***>(edi23 + 4)) {
                v24 = *reinterpret_cast<void***>(edi23 + 4);
                eax25 = reinterpret_cast<int32_t>(GetProcessHeap(ecx15, 0, v24, v20));
                HeapFree(ecx15, eax25, 0, v24, v20);
                *reinterpret_cast<void***>(edi23 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(edi23 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(edi23) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi23)) & 0xe0000000);
        GetProcessHeap(ecx15, 0, edi23, v20);
        HeapFree(ecx15);
    }
    *reinterpret_cast<void***>(esi16) = reinterpret_cast<void**>(0x1000183c);
    return;
}

void fun_1001c6d3(void** a1, void** a2, void** a3, void** a4) {
    void* ebp5;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    EtwTraceMessage(a1, a2, 43, 0x10008330, 22, reinterpret_cast<int32_t>(ebp5) + 16, 4, reinterpret_cast<int32_t>(ebp5) + 20, 4, 0);
    return;
}

void** fun_1001a61d(void** ecx, void** a2, void** a3);

void** fun_1001a43a(void** ecx, void*** a2) {
    void** eax3;
    void** eax4;
    void** v5;
    int32_t eax6;
    int32_t eax7;
    int32_t edi8;

    *a2 = reinterpret_cast<void**>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<void**>(HeapAlloc());
    if (eax3) {
        eax4 = fun_1001a61d(eax3, ecx, ecx);
        if (reinterpret_cast<signed char>(eax4) >= reinterpret_cast<signed char>(0)) {
            *a2 = eax3;
        } else {
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3)) & 0x10000000) {
                if (*reinterpret_cast<void***>(eax3 + 4)) {
                    v5 = *reinterpret_cast<void***>(eax3 + 4);
                    eax6 = reinterpret_cast<int32_t>(GetProcessHeap(eax3, 0, v5));
                    HeapFree(eax3, eax6, 0, v5);
                    *reinterpret_cast<void***>(eax3 + 4) = reinterpret_cast<void**>(0);
                }
                *reinterpret_cast<void***>(eax3 + 8) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(eax3) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax3)) & 0xe0000000);
            eax7 = reinterpret_cast<int32_t>(GetProcessHeap(eax3, 0, eax3));
            HeapFree(eax3, eax7, 0, eax3);
        }
    }
    goto edi8;
}

void fun_1001afa8(void** ecx, uint32_t a2, void** a3) {
    uint32_t edx4;
    void** eax5;
    void*** ecx6;

    edx4 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0xfffffff) - a2 - 1;
    if (edx4 >= 1) {
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0x10000000)) {
            eax5 = ecx + 4;
        } else {
            eax5 = *reinterpret_cast<void***>(ecx + 4);
        }
        ecx6 = reinterpret_cast<void***>(eax5 + a2 * 4);
        memmove(ecx6, ecx6 + 4, edx4 << 2);
    }
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx) + 0xffffffff) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx))) & 0xfffffff ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)));
    return;
}

void** fun_1001a39b(void*** a1) {
    void** eax2;
    void** eax3;
    void** edi4;
    void** edi5;
    void** edi6;
    void** esi7;
    void** eax8;
    int32_t esi9;
    void** v10;
    int32_t eax11;
    int32_t eax12;

    *a1 = reinterpret_cast<void**>(0);
    GetProcessHeap();
    eax2 = reinterpret_cast<void**>(HeapAlloc());
    if (eax2) {
        eax3 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax2)) & 0xa0000000 | 0x20000000);
        *reinterpret_cast<void***>(eax2) = eax3;
        edi4 = eax2 + 4;
        *reinterpret_cast<void***>(edi4) = reinterpret_cast<void**>(0);
        edi5 = edi4 + 4;
        *reinterpret_cast<void***>(edi5) = reinterpret_cast<void**>(0);
        edi6 = edi5 + 4;
        *reinterpret_cast<void***>(edi6) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(edi6 + 4) = reinterpret_cast<void**>(0);
        esi7 = eax2 + 4 + 4 + 4 + 4;
        eax8 = fun_1001b248(eax2, 3);
        if (reinterpret_cast<signed char>(eax8) < reinterpret_cast<signed char>(0)) 
            goto addr_1001a3ed_15;
    } else {
        goto addr_1001a434_17;
    }
    *a1 = esi7;
    addr_1001a433_19:
    addr_1001a434_17:
    goto esi9;
    addr_1001a3ed_15:
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi7)) & 0x10000000) {
        if (*reinterpret_cast<void***>(esi7 + 4)) {
            v10 = *reinterpret_cast<void***>(esi7 + 4);
            eax11 = reinterpret_cast<int32_t>(GetProcessHeap(eax2, 0, v10));
            HeapFree(eax2, eax11, 0, v10);
            *reinterpret_cast<void***>(esi7 + 4) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(esi7 + 8) = reinterpret_cast<void**>(0);
    }
    *reinterpret_cast<void***>(esi7) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi7)) & 0xe0000000);
    eax12 = reinterpret_cast<int32_t>(GetProcessHeap(eax2, 0, esi7));
    HeapFree(eax2, eax12, 0, esi7);
    goto addr_1001a433_19;
}

void** fun_1001a61d(void** ecx, void** a2, void** a3) {
    void** eax4;

    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) & 0xa0000000 | 0x20000000);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0);
    eax4 = fun_1001b2d4(ecx, 5);
    return eax4;
}

/* (image base) */
int32_t image_base_ = 0x1000b356;

/* (image base) */
int32_t image_base_ = 0x1000b360;

/* (image base) */
int32_t image_base_ = 0x1000b98a;

signed char fun_1001a53e(void** ecx) {
    int32_t eax2;
    int32_t eax3;

    eax2 = reinterpret_cast<int32_t>(image_base_());
    if (eax2 && (eax3 = reinterpret_cast<int32_t>(image_base_(eax2)), eax3 == 2)) {
        image_base_(eax2);
        image_base_(eax2);
    }
    goto 0;
}

/* (image base) */
int32_t image_base_ = 0x1000b924;

/* (image base) */
int32_t image_base_ = 0x1000b980;

void fun_1001b0b5(void** ecx) {
    int32_t eax2;
    int32_t v3;
    int32_t ebx4;

    eax2 = reinterpret_cast<int32_t>(image_base_());
    if (eax2) {
        v3 = image_base_;
        image_base_(ecx, v3, 1, eax2);
        image_base_(eax2, v3, 1, eax2);
    }
    goto ebx4;
}

void** fun_1001bfc1(struct s147* ecx) {
    void** eax2;
    void** v3;
    uint32_t ecx4;

    eax2 = reinterpret_cast<void**>(0);
    if (!ecx->f92) {
        v3 = ecx->f52;
        eax2 = fun_1001bd59(&ecx->f44, v3, &ecx->f88, &ecx->f20);
    }
    ecx4 = reinterpret_cast<unsigned char>(eax2) >> 31;
    ecx->f92 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx4) ^ 1);
    return eax2;
}

struct s193 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_1001ca95(struct s193** ecx, struct s193*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s23* edx5;
    int32_t eax6;
    struct s193* eax7;
    int32_t esi8;
    int32_t eax9;
    struct s193** ecx10;
    int32_t esi11;
    void** eax12;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    *a2 = reinterpret_cast<struct s193**>(0);
    eax6 = fun_1000f58d(edx5);
    if (eax6) {
        *a2 = ecx;
        eax7 = *ecx;
        esi8 = eax7->f4;
        image_base_(esi8, ecx);
        esi8(esi8, ecx);
    } else {
        eax9 = fun_1000f58d(edx5);
        if (eax9) {
            *a2 = ecx;
        }
        if (eax9) {
            ecx10 = *a2;
            esi11 = (*ecx10)->f4;
            image_base_(esi11, ecx10);
            esi11(esi11, ecx10);
        }
    }
    eax12 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax12;
}

void** fun_1001ce13(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** eax47;
    void** v48;
    void** esi49;
    void** edi50;
    void** esi51;
    void** ebx52;
    void** esi53;
    void** ecx54;
    void** edx55;
    void** v56;
    void** ebp57;
    void** v58;
    void** v59;
    void** v60;
    int32_t eax61;
    uint32_t ecx62;
    void** eax63;
    void** edi64;
    void** ecx65;
    int32_t eax66;
    void** ecx67;
    void** esi68;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    if (!ecx || (eax47 = *reinterpret_cast<void***>(ecx), v48 = ecx, esi49 = *reinterpret_cast<void***>(eax47 + 4), image_base_(esi49, v48, edi50, esi51, ebx52), esi49(esi49, v48, edi50, esi51, ebx52), esi53 = ecx, !esi53)) {
        ecx54 = reinterpret_cast<void**>(ebp44 + 0xfffffff8);
        fun_100136b5(ecx54, edi50, esi51, ebx52, edx55, v56, ecx, v46, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
        v48 = reinterpret_cast<void**>(ebp44 + 0xfffffff8);
        v58 = reinterpret_cast<void**>(0x1000305c);
        v59 = reinterpret_cast<void**>(1);
        v60 = reinterpret_cast<void**>(0x10008164);
        eax61 = reinterpret_cast<int32_t>(CoCreateInstance(ecx54));
        if (eax61 < 0) {
            addr_1001cec6_3:
            fun_100136b5(ebp44 + 0xfffffff8, v60, 0, v59, v58, v48, edi50, esi51, ebx52, edx55, 0, ecx, v46, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
            ecx62 = reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44);
            eax63 = fun_1000a130(ecx62, ecx62);
            return eax63;
        } else {
            esi53 = ecx;
        }
    }
    fun_100136b5(ebp44 + 0xfffffff4, v48, edi50, esi51, ebx52, edx55, 0, ecx, v46, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    edi64 = *reinterpret_cast<void***>(esi53);
    v58 = reinterpret_cast<void**>(ebp44 + 0xfffffff4);
    v59 = a2;
    ecx65 = *reinterpret_cast<void***>(edi64 + 84);
    v60 = edx55;
    image_base_(ecx65, esi53);
    eax66 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(edi64 + 84)(ecx65, esi53));
    if (eax66 >= 0) {
        ecx67 = g0;
        esi68 = *reinterpret_cast<void***>(ecx67);
        image_base_(esi68, 0, 0x1000306c, a3, esi53);
        esi68(esi68, 0, 0x1000306c, a3, esi53);
    }
    fun_100136b5(ebp44 + 0xfffffff4, esi53, v60, 0, v59, v58, v48, edi50, esi51, ebx52, edx55, 0, ecx, v46, ebp57, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    goto addr_1001cec6_3;
}

struct s194 {
    signed char[4] pad4;
    int32_t f4;
};

void** fun_1001de77(struct s194** ecx, struct s194*** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s194** edi5;
    struct s23* edx6;
    int32_t eax7;
    struct s194* eax8;
    int32_t esi9;
    int32_t eax10;
    int32_t eax11;
    uint32_t ecx12;
    void** eax13;
    struct s194** ecx14;
    int32_t esi15;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    edi5 = reinterpret_cast<struct s194**>(0);
    *a2 = reinterpret_cast<struct s194**>(0);
    eax7 = fun_1000f58d(edx6, edx6);
    if (eax7) {
        *a2 = ecx;
        eax8 = *ecx;
        esi9 = eax8->f4;
        image_base_(esi9, ecx);
        esi9(esi9, ecx);
    } else {
        eax10 = fun_1000f58d(edx6, edx6);
        if (!eax10) {
            eax11 = fun_1000f58d(edx6, edx6);
            if (!eax11) {
                edi5 = reinterpret_cast<struct s194**>(0x80004002);
            } else {
                *a2 = ecx + 1;
            }
            if (reinterpret_cast<int32_t>(edi5) < 0) 
                goto addr_1001dee8_8; else 
                goto addr_1001ded6_9;
        } else {
            *a2 = ecx;
            goto addr_1001ded6_9;
        }
    }
    addr_1001df00_11:
    ecx12 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax13 = fun_1000a130(ecx12, ecx12);
    return eax13;
    addr_1001dee8_8:
    goto addr_1001df00_11;
    addr_1001ded6_9:
    ecx14 = *a2;
    esi15 = (*ecx14)->f4;
    image_base_(esi15, ecx14);
    esi15(esi15, ecx14);
    goto addr_1001dee8_8;
}

void** fun_1001dfb7(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    void** ecx4;
    void** eax5;
    void** esi6;
    void** eax7;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ecx4 = g10024484;
    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x10001f1c);
    *reinterpret_cast<void***>(ecx + 4) = reinterpret_cast<void**>(0x10001f0c);
    if (ecx4) {
        eax5 = *reinterpret_cast<void***>(ecx4);
        esi6 = *reinterpret_cast<void***>(eax5 + 4);
        image_base_(esi6);
        esi6(esi6);
    }
    eax7 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax7;
}

uint32_t fun_1001ea0b(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, signed char a7) {
    void** ecx8;
    void** edi9;
    void** esi10;
    void** ebp11;
    uint32_t eax12;
    uint32_t esi13;
    void** eax14;
    void** ecx15;
    uint32_t eax16;
    int1_t sf17;

    ecx8 = ecx + 78;
    eax12 = fun_1000efcd(ecx8, a6, edi9, esi10, ebp11);
    esi13 = eax12;
    if (reinterpret_cast<int32_t>(esi13) < reinterpret_cast<int32_t>(0)) {
        addr_1001ea93_2:
        return esi13;
    } else {
        esi13 = 0;
        eax14 = reinterpret_cast<void**>(CreateEventW(ecx8, 0, 0, 0, 0));
        *reinterpret_cast<void***>(ecx + 56) = eax14;
        if (eax14) {
            addr_1001ea58_4:
            if (reinterpret_cast<int32_t>(esi13) >= reinterpret_cast<int32_t>(0)) {
                if (*reinterpret_cast<void***>(ecx + 64) != a2) {
                    if (a2) {
                        *reinterpret_cast<void***>(a2 + 60) = *reinterpret_cast<void***>(a2 + 60) + 1;
                    }
                    ecx15 = *reinterpret_cast<void***>(ecx + 64);
                    *reinterpret_cast<void***>(ecx + 64) = a2;
                    if (ecx15) {
                        fun_10013f7b(ecx15, 0, 0, 0, 0, edi9, esi10, ebp11, __return_address(), a2);
                    }
                }
                *reinterpret_cast<void***>(ecx + 68) = a3;
                *reinterpret_cast<void***>(ecx + 72) = a4;
                *reinterpret_cast<void***>(ecx + 76) = a5;
                *reinterpret_cast<signed char*>(ecx + 77) = a7;
                goto addr_1001ea93_2;
            }
        } else {
            eax16 = reinterpret_cast<uint32_t>(GetLastError(ecx8, 0, 0, 0, 0));
            esi13 = eax16;
            sf17 = reinterpret_cast<int32_t>(esi13) < reinterpret_cast<int32_t>(0);
            if (!(reinterpret_cast<uint1_t>(sf17) | reinterpret_cast<uint1_t>(esi13 == 0))) {
                esi13 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi13)) | 0x80070000;
                sf17 = reinterpret_cast<int32_t>(esi13) < reinterpret_cast<int32_t>(0);
            }
            if (sf17) 
                goto addr_1001ea58_4;
        }
    }
    esi13 = 0x80004005;
    goto addr_1001ea93_2;
}

struct s106* fun_1001e07d(struct s106* ecx, struct s106* a2) {
    ecx->f0 = reinterpret_cast<void**>(0x10002030);
    ecx->f24 = 0;
    ecx->f28 = 0;
    ecx->f32 = 0;
    ecx->f36 = 0;
    ecx->f4 = 0x10002020;
    ecx->f8 = 0x10002010;
    ecx->f12 = 0x10002000;
    ecx->f16 = 0x10001ff0;
    ecx->f20 = 1;
    return ecx;
}

struct s195 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t f12;
    int32_t f16;
    signed char[12] pad32;
    int32_t f32;
};

void fun_1001e14b(struct s195* ecx) {
    int1_t zf2;
    int32_t v3;
    int32_t v4;

    zf2 = ecx->f32 == 0;
    ecx->f0 = 0x10002030;
    ecx->f4 = 0x10002020;
    ecx->f8 = 0x10002010;
    ecx->f12 = 0x10002000;
    ecx->f16 = 0x10001ff0;
    if (!zf2) {
        v3 = ecx->f32;
        SetEvent(v3);
        v4 = ecx->f32;
        CloseHandle(v4, v3);
    }
    return;
}

struct s196 {
    int32_t f0;
    int32_t f4;
    signed char[4] pad12;
    int32_t f12;
    int32_t f16;
    int32_t f20;
    int32_t f24;
    int32_t f28;
    int32_t f32;
    signed char[20] pad56;
    uint32_t f56;
    signed char[4] pad64;
    void** f64;
    signed char[535] pad600;
    void** f600;
    signed char[51] pad652;
    uint32_t f652;
};

void fun_1001eba5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20);

void fun_1001e0b9(struct s196* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17) {
    void** ecx18;
    void** edi19;
    void** esi20;
    uint32_t eax21;
    void** ecx22;
    uint32_t eax23;

    ecx18 = reinterpret_cast<void**>(&ecx->f600);
    ecx->f0 = 0x10001fd0;
    ecx->f4 = 0x10001fc0;
    ecx->f16 = 0x10001f7c;
    ecx->f20 = 0x10001f6c;
    ecx->f24 = 0x10001f5c;
    ecx->f28 = 0x10001f4c;
    ecx->f32 = 0x10001f3c;
    fun_1001eba5(ecx18, edi19, esi20, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
    eax21 = ecx->f652;
    ecx->f652 = 0;
    if (eax21) {
        DeleteObject(ecx18, eax21);
    }
    ecx22 = ecx->f64;
    if (ecx22) {
        ecx->f64 = reinterpret_cast<void**>(0);
        fun_10013f7b(ecx22, edi19, esi20, __return_address(), a2, a3, a4, a5, a6, a7);
    }
    eax23 = ecx->f56;
    ecx->f56 = 0;
    if (eax23 && eax23 != 0xffffffff) {
        CloseHandle(eax23);
    }
    fun_1001e14b(&ecx->f16);
    ecx->f12 = 0xc0000001;
    return;
}

void fun_1001eba5(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    void** v21;
    void** esi22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;

    v21 = *reinterpret_cast<void***>(ecx);
    CoTaskMemFree(v21, esi22, __return_address());
    v23 = *reinterpret_cast<void***>(ecx + 8);
    CoTaskMemFree(v23, v21, esi22, __return_address());
    v24 = *reinterpret_cast<void***>(ecx + 12);
    CoTaskMemFree(v24, v23, v21, esi22, __return_address());
    v25 = *reinterpret_cast<void***>(ecx + 16);
    CoTaskMemFree(v25, v24, v23, v21, esi22, __return_address());
    v26 = *reinterpret_cast<void***>(ecx + 20);
    CoTaskMemFree(v26, v25, v24, v23, v21, esi22, __return_address());
    v27 = *reinterpret_cast<void***>(ecx + 24);
    CoTaskMemFree(v27, v26, v25, v24, v23, v21, esi22, __return_address());
    v28 = *reinterpret_cast<void***>(ecx + 28);
    CoTaskMemFree(v28, v27, v26, v25, v24, v23, v21, esi22, __return_address());
    v29 = *reinterpret_cast<void***>(ecx + 36);
    CoTaskMemFree(v29, v28, v27, v26, v25, v24, v23, v21, esi22, __return_address());
    v30 = *reinterpret_cast<void***>(ecx + 40);
    CoTaskMemFree(v30, v29, v28, v27, v26, v25, v24, v23, v21, esi22, __return_address());
    v31 = *reinterpret_cast<void***>(ecx + 44);
    CoTaskMemFree();
    v32 = *reinterpret_cast<void***>(ecx + 48);
    CoTaskMemFree();
    fun_1000b8d8(ecx, ecx, 0, 52, v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v21, esi22, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
    goto v31;
}

struct s197 {
    signed char[4] pad4;
    int32_t f4;
};

struct s198 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    uint32_t f12;
    int32_t f16;
};

/* (image base) */
int32_t image_base_ = 0x1000b9bc;

/* (image base) */
int32_t image_base_ = 0x1000b9f8;

struct s197** fun_1001ec1b() {
    struct s198* eax1;
    int32_t* esi2;

    GetProcessHeap();
    eax1 = reinterpret_cast<struct s198*>(HeapAlloc());
    if (eax1) {
        image_base_(eax1);
        esi2 = &eax1->f8;
        image_base_(esi2);
        eax1->f12 = 0;
        eax1->f0 = 0x10001970;
        *esi2 = 0x1000196c;
        eax1->f16 = 0x1000195c;
        ++g10024668;
        *esi2 = 0x1000196c;
        eax1->f0 = 0x10001970;
        eax1->f16 = 0x1000194c;
    }
    goto 8;
}

struct s200 {
    signed char[8] pad8;
    int32_t f8;
};

struct s199 {
    signed char[8] pad8;
    int32_t* f8;
    struct s200** f12;
};

/* (image base) */
int32_t image_base_ = 0x1000b9d0;

void** fun_1001ee3d(int32_t ecx, struct s199* a2, int32_t a3) {
    void* ebp4;
    uint32_t eax5;
    struct s200** edi6;
    int32_t esi7;
    int32_t eax8;
    struct s200** ebx9;
    int32_t** edi10;
    void* v11;
    int32_t esi12;
    int32_t ebx13;
    void** eax14;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    edi6 = a2->f12;
    esi7 = (*edi6)->f8;
    image_base_(esi7);
    eax8 = reinterpret_cast<int32_t>(esi7(edi6));
    if (eax8) {
        ebx9 = a2->f12;
        edi10 = &a2->f8;
        v11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) + 16);
        esi12 = **edi10;
        image_base_(esi12, v11, ebx13);
        esi12(edi10, v11, ebx13);
        image_base_(ebx9);
    }
    eax14 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax14;
}

struct s201 {
    signed char[8] pad8;
    signed char f8;
};

struct s202 {
    signed char[4] pad4;
    int32_t f4;
};

unsigned char* fun_10008af6(struct s0** ecx, int32_t a2) {
    uint32_t eax3;
    int32_t ebp4;
    uint32_t ebp5;
    struct s0** edi6;
    int32_t ebp7;
    int32_t esi8;
    struct s26* eax9;
    struct s1** esi10;
    int32_t ebx11;
    struct s1** eax12;
    struct s1** ebx13;
    int32_t eax14;
    int32_t ebp15;
    int32_t ebp16;
    int32_t eax17;
    struct s201* ebp18;
    struct s0* eax19;
    int32_t edi20;
    int32_t eax21;
    int32_t* eax22;
    int32_t ecx23;
    int32_t ebp24;
    int32_t ebp25;
    struct s4** eax26;
    int32_t edi27;
    int32_t ebp28;
    int32_t esi29;
    int32_t eax30;
    uint32_t ecx31;
    int32_t ebp32;
    uint32_t ebp33;
    struct s202* ebp34;

    eax3 = g100240c4;
    *reinterpret_cast<uint32_t*>(ebp4 - 4) = eax3 ^ ebp5;
    edi6 = ecx;
    *reinterpret_cast<struct s0***>(ebp7 - 8) = edi6;
    esi8 = (*edi6)->f16;
    if (!reinterpret_cast<int1_t>(esi8 == fun_10009680)) {
        image_base_(edi6);
        eax9 = reinterpret_cast<struct s26*>(esi8(edi6));
    } else {
        eax9 = reinterpret_cast<struct s26*>(fun_1001f1fc);
    }
    esi10 = &eax9->f4;
    ebx11 = (*edi6)->f24;
    if (!reinterpret_cast<int1_t>(ebx11 == fun_10009690)) {
        image_base_(edi6);
        eax12 = reinterpret_cast<struct s1**>(ebx11(edi6));
        ebx13 = eax12;
    } else {
        ebx13 = reinterpret_cast<struct s1**>(0x1001f20c);
    }
    if (reinterpret_cast<uint32_t>(esi10) < reinterpret_cast<uint32_t>(ebx13)) {
        do {
            if (*esi10) {
                eax14 = (*edi6)->f12;
                *reinterpret_cast<int32_t*>(ebp15 - 12) = eax14;
                if (!reinterpret_cast<int1_t>(eax14 == fun_100096a0)) {
                    image_base_(eax14, edi6);
                    eax17 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp16 - 12)(eax14, edi6));
                } else {
                    eax17 = g10024624;
                }
                if (eax17) {
                    if (!ebp18->f8) 
                        goto addr_10008ba9_17;
                }
                if (*(*esi10)->f12) {
                    eax19 = *edi6;
                    edi20 = eax19->f28;
                    image_base_(edi20, edi6);
                    eax21 = reinterpret_cast<int32_t>(edi20(edi20, edi6));
                    AcquireSRWLockExclusive(edi20, eax21, edi6);
                    eax22 = (*esi10)->f12;
                    ecx23 = *eax22;
                    *reinterpret_cast<int32_t*>(ebp24 - 12) = ecx23;
                    if (ecx23) {
                        *eax22 = 0;
                        if (eax21) {
                            ReleaseSRWLockExclusive(eax21, eax21, edi6);
                            ecx23 = *reinterpret_cast<int32_t*>(ebp25 - 12);
                        }
                        eax26 = reinterpret_cast<struct s4**>(DecodePointer(ecx23, eax21, edi6));
                        edi27 = (*eax26)->f8;
                        image_base_(edi27, eax26, ecx23, eax21, edi6);
                        edi27(edi27, eax26, ecx23, eax21, edi6);
                    } else {
                        if (eax21) {
                            ReleaseSRWLockExclusive(eax21, eax21, edi6);
                        }
                    }
                    edi6 = *reinterpret_cast<struct s0***>(ebp28 - 8);
                }
            }
            ++esi10;
        } while (reinterpret_cast<uint32_t>(esi10) < reinterpret_cast<uint32_t>(ebx13));
    }
    esi29 = (*edi6)->f12;
    if (!reinterpret_cast<int1_t>(esi29 == fun_100096a0)) {
        image_base_(esi29, edi6);
        eax30 = reinterpret_cast<int32_t>(esi29(esi29, edi6));
    } else {
        eax30 = g10024624;
    }
    if (eax30) {
        addr_10008ba9_17:
    }
    ecx31 = *reinterpret_cast<uint32_t*>(ebp32 - 4) ^ ebp33;
    fun_1000a130(ecx31, ecx31);
    goto ebp34->f4;
}

struct s203 {
    signed char[24] pad24;
    int32_t f24;
};

struct s204 {
    signed char[8] pad8;
    signed char f8;
};

struct s205 {
    signed char[4] pad4;
    int32_t f4;
};

signed char* fun_10008b12(int32_t a1, int32_t a2) {
    int1_t zf3;
    struct s0** edi4;
    int32_t esi5;
    struct s26* eax6;
    struct s1** esi7;
    int32_t ebx8;
    struct s203** edi9;
    struct s0** edi10;
    struct s1** eax11;
    struct s1** ebx12;
    int32_t eax13;
    struct s0** edi14;
    int32_t ebp15;
    int32_t ebp16;
    int32_t eax17;
    struct s204* ebp18;
    struct s0* eax19;
    int32_t edi20;
    int32_t eax21;
    int32_t* eax22;
    int32_t ecx23;
    int32_t ebp24;
    int32_t ebp25;
    struct s4** eax26;
    int32_t edi27;
    int32_t ebp28;
    int32_t esi29;
    int32_t eax30;
    uint32_t ecx31;
    int32_t ebp32;
    uint32_t ebp33;
    struct s205* ebp34;

    if (!zf3) {
        image_base_(edi4);
        eax6 = reinterpret_cast<struct s26*>(esi5(edi4));
    } else {
        eax6 = reinterpret_cast<struct s26*>(fun_1001f1fc);
    }
    esi7 = &eax6->f4;
    ebx8 = (*edi9)->f24;
    if (!reinterpret_cast<int1_t>(ebx8 == fun_10009690)) {
        image_base_(edi10);
        eax11 = reinterpret_cast<struct s1**>(ebx8(edi10));
        ebx12 = eax11;
    } else {
        ebx12 = reinterpret_cast<struct s1**>(0x1001f20c);
    }
    if (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(ebx12)) {
        do {
            if (*esi7) {
                eax13 = (*edi14)->f12;
                *reinterpret_cast<int32_t*>(ebp15 - 12) = eax13;
                if (!reinterpret_cast<int1_t>(eax13 == fun_100096a0)) {
                    image_base_(eax13, edi14);
                    eax17 = reinterpret_cast<int32_t>(*reinterpret_cast<int32_t*>(ebp16 - 12)(eax13, edi14));
                } else {
                    eax17 = g10024624;
                }
                if (eax17) {
                    if (!ebp18->f8) 
                        goto addr_10008ba9_16;
                }
                if (*(*esi7)->f12) {
                    eax19 = *edi14;
                    edi20 = eax19->f28;
                    image_base_(edi20, edi14);
                    eax21 = reinterpret_cast<int32_t>(edi20(edi20, edi14));
                    AcquireSRWLockExclusive(edi20, eax21, edi14);
                    eax22 = (*esi7)->f12;
                    ecx23 = *eax22;
                    *reinterpret_cast<int32_t*>(ebp24 - 12) = ecx23;
                    if (ecx23) {
                        *eax22 = 0;
                        if (eax21) {
                            ReleaseSRWLockExclusive(eax21, eax21, edi14);
                            ecx23 = *reinterpret_cast<int32_t*>(ebp25 - 12);
                        }
                        eax26 = reinterpret_cast<struct s4**>(DecodePointer(ecx23, eax21, edi14));
                        edi27 = (*eax26)->f8;
                        image_base_(edi27, eax26, ecx23, eax21, edi14);
                        edi27(edi27, eax26, ecx23, eax21, edi14);
                    } else {
                        if (eax21) {
                            ReleaseSRWLockExclusive(eax21, eax21, edi14);
                        }
                    }
                    edi14 = *reinterpret_cast<struct s0***>(ebp28 - 8);
                }
            }
            ++esi7;
        } while (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(ebx12));
    }
    esi29 = (*edi14)->f12;
    if (!reinterpret_cast<int1_t>(esi29 == fun_100096a0)) {
        image_base_(esi29, edi14);
        eax30 = reinterpret_cast<int32_t>(esi29(esi29, edi14));
    } else {
        eax30 = g10024624;
    }
    if (eax30) {
        addr_10008ba9_16:
    }
    ecx31 = *reinterpret_cast<uint32_t*>(ebp32 - 4) ^ ebp33;
    fun_1000a130(ecx31);
    goto ebp34->f4;
}

struct s24* fun_10009680(struct s2* a1) {
    return fun_1001f1fc;
}

struct s25** fun_10009690(struct s2* a1) {
    return 0x1001f20c;
}

int32_t _unlock = 0x25c9c;

void fun_1000a615() {
    goto _unlock;
}

int32_t fun_1000bb85(int32_t ecx) {
    int32_t eax2;

    eax2 = ecx;
    if (ecx >= 0) {
        eax2 = 0xc0000001;
    }
    return eax2;
}

struct s14* g1002467c;

int32_t g10024680;

struct s14* fun_1000ef19(struct s15* ecx) {
    struct s14* eax2;
    int1_t zf3;

    eax2 = reinterpret_cast<struct s14*>(GetCurrentThreadId());
    zf3 = g1002467c == eax2;
    if (!zf3) {
        __asm__("lock xadd [0x10024680], edx");
        if (!0) {
            g1002467c = eax2;
            eax2 = fun_1000e42d(ecx);
            if (eax2) {
                eax2 = fun_1000ee93(eax2, ecx);
            }
            g1002467c = reinterpret_cast<struct s14*>(0);
        }
        --g10024680;
    }
    return eax2;
}

uint32_t g10024038 = 0;

void** fun_10018891(int32_t ecx, int32_t* a2) {
    void* ebp3;
    uint32_t eax4;
    uint32_t v5;
    int32_t v6;
    int32_t ebx7;
    void** v8;
    void** esi9;
    void** v10;
    void** edi11;
    int32_t* edi12;
    int32_t esi13;
    void** eax14;
    uint32_t eax15;
    uint32_t esi16;
    int1_t sf17;
    int1_t below_or_equal18;
    struct s65* ecx19;
    int32_t v20;
    uint32_t ecx21;
    void** eax22;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = eax4 ^ reinterpret_cast<uint32_t>(ebp3);
    v6 = ebx7;
    v8 = esi9;
    v10 = edi11;
    edi12 = a2;
    esi13 = 0;
    *edi12 = 0;
    while (((eax14 = fun_1000c19e(ecx, 0x800, reinterpret_cast<uint32_t>(ebp3) + 0xffffffa0), eax14 == 0xc0020017) || reinterpret_cast<int1_t>(eax14 == 0xc0020018)) && (++esi13, esi13 < 10)) {
        Sleep(10);
    }
    eax15 = reinterpret_cast<uint32_t>(RtlNtStatusToDosError());
    esi16 = eax15;
    sf17 = reinterpret_cast<int32_t>(esi16) < reinterpret_cast<int32_t>(0);
    if (!(reinterpret_cast<uint1_t>(sf17) | reinterpret_cast<uint1_t>(esi16 == 0))) {
        esi16 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi16)) | 0x80070000;
        sf17 = reinterpret_cast<int32_t>(esi16) < reinterpret_cast<int32_t>(0);
    }
    if (sf17) {
        below_or_equal18 = g10024038 <= 2;
        if (!below_or_equal18) {
            fun_1001897d(reinterpret_cast<uint32_t>(ebp3) + 0xffffffc4);
            ecx19 = reinterpret_cast<struct s65*>(reinterpret_cast<uint32_t>(ebp3) + 0xffffffd4);
            fun_1001897d(ecx19);
            fun_100121e9(0x10024038, ecx19, ecx19, 5, reinterpret_cast<uint32_t>(ebp3) + 0xffffffa4, eax14, v10, v8, v6);
        }
    } else {
        *edi12 = v20;
    }
    ecx21 = v5 ^ reinterpret_cast<uint32_t>(ebp3);
    eax22 = fun_1000a130(ecx21, ecx21);
    return eax22;
}

void fun_1000b880(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t ebp6;
    int32_t* esp7;
    void* ebp8;

    g0 = *reinterpret_cast<void***>(ebp6 - 12);
    esp7 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp8) + 4 - 4);
    *esp7 = reinterpret_cast<int32_t>(__return_address());
    goto *esp7;
}

void fun_100185ef(int32_t a1, int32_t** a2) {
    int32_t* eax3;
    int32_t edx4;
    int32_t eax5;
    int32_t esi6;

    *a2 = reinterpret_cast<int32_t*>(0);
    GetProcessHeap();
    eax3 = reinterpret_cast<int32_t*>(HeapAlloc());
    if (eax3) {
        image_base_(eax3);
        *eax3 = 0x100015f8;
        eax5 = reinterpret_cast<int32_t>(image_base_(eax3, 0, edx4, a1));
        if (eax5 < 0) {
            image_base_(eax3, 0, 0, edx4, a1);
        } else {
            *a2 = eax3;
        }
    }
    goto esi6;
}

struct s206 {
    int32_t f0;
    int32_t f4;
};

struct s207 {
    int32_t f0;
    int32_t f4;
};

struct s208 {
    int32_t f0;
    int32_t f4;
};

void** fun_10019f3d(void** ecx, int32_t a2) {
    void** esi3;
    void** ebx4;
    void*** edi5;
    void** eax6;
    void** ecx7;
    uint32_t eax8;
    int32_t v9;
    void** eax10;
    void** v11;
    void** v12;
    struct s206* v13;
    struct s207* edi14;
    int32_t v15;
    struct s208* edi16;
    int32_t v17;
    void** eax18;
    uint32_t ecx19;
    void** v20;
    void** v21;
    int32_t v22;
    int32_t v23;

    esi3 = ecx;
    ebx4 = reinterpret_cast<void**>(0);
    edi5 = reinterpret_cast<void***>(esi3 + 48);
    if (!*edi5) {
        eax6 = fun_1001a33d(ecx, edi5);
        ebx4 = eax6;
    }
    if (reinterpret_cast<signed char>(ebx4) >= reinterpret_cast<signed char>(0)) {
        ecx7 = *edi5;
        eax8 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx7)) & 0xfffffff;
        *reinterpret_cast<int16_t*>(&v9) = 1;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v9) + 2) = 0;
        eax10 = fun_1001a701(ecx7, eax8, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
        ebx4 = eax10;
        if (reinterpret_cast<signed char>(ebx4) < reinterpret_cast<signed char>(0)) {
            v11 = *reinterpret_cast<void***>(esi3 + 88);
            v12 = *reinterpret_cast<void***>(esi3 + 52);
            fun_1001bda4(esi3 + 44, v12, v11);
            *reinterpret_cast<void***>(esi3 + 92) = reinterpret_cast<void**>(0);
        } else {
            v13->f0 = a2;
            edi14 = reinterpret_cast<struct s207*>(&v13->f4);
            edi14->f0 = v15;
            edi16 = reinterpret_cast<struct s208*>(&edi14->f4);
            edi16->f0 = v17;
            edi16->f4 = v9;
            esi3 = esi3;
        }
        eax18 = image_base_;
        if (eax18 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax18 + 28)) & 8) {
            ecx19 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi3 + 12));
            v20 = *reinterpret_cast<void***>(eax18 + 20);
            v21 = *reinterpret_cast<void***>(eax18 + 16);
            fun_1001c8c7(v21, v20, esi3, a2, ecx19, v22, v23);
        }
    }
    return ebx4;
}

void** fun_10019ff9(void** ecx, void** a2, void** a3, uint32_t a4, uint32_t a5, int32_t a6, int32_t a7, uint32_t a8, uint32_t a9, void** a10) {
    void* ebp11;
    uint32_t eax12;
    void** eax13;
    void** eax14;
    void** esi15;
    void** esi16;
    void** eax17;

    ebp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax12 = g100240c4;
    eax13 = fun_1001a4ee(ecx);
    if (reinterpret_cast<signed char>(eax13) >= reinterpret_cast<signed char>(0)) {
        eax14 = *reinterpret_cast<void***>(ecx);
        esi15 = *reinterpret_cast<void***>(eax14);
        esi16 = *reinterpret_cast<void***>(esi15 + 0x8c);
        image_base_(esi16, eax14, a2, a3, a8, a9, 0, a5, a6, a7);
        esi16(esi16, eax14, a2, a3, a8, a9, 0, a5, a6, a7);
    }
    eax17 = fun_1000a130(eax12 ^ reinterpret_cast<uint32_t>(ebp11) ^ reinterpret_cast<uint32_t>(ebp11));
    return eax17;
}

void fun_1000104c() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
}

void fun_10001708() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_10001710() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

struct s209 {
    unsigned char f0;
    signed char[1343225881] pad1343225882;
    signed char f1343225882;
};

void fun_9c911011(int32_t a1);

void fun_1000171c(unsigned char* ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;
    unsigned char* eax11;
    unsigned char al12;
    unsigned char* eax13;
    struct s209* eax14;

    *eax2 = *eax3 + eax4;
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(al12 | *eax13);
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<unsigned char*>(&eax11));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<unsigned char*>(&eax11));
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) + *ecx);
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) | *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<unsigned char*>(eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax14) + *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax14) + 0x5010001a) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax14) + 0x5010001a) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    fun_9c911011(__return_address());
}

struct s210 {
    signed char[111] pad111;
    signed char f111;
};

struct s211 {
    signed char[111] pad111;
    signed char f111;
};

void fun_10001978(unsigned char* ecx) {
    signed char* esi2;
    signed char* esi3;
    signed char dh4;
    unsigned char tmp8_5;
    signed char* edx6;
    int32_t edx7;
    uint1_t cf8;
    unsigned char* edx9;
    int32_t edx10;
    unsigned char* edx11;
    int32_t edx12;
    signed char al13;
    signed char* eax14;
    signed char* eax15;
    signed char al16;
    signed char* eax17;
    signed char* eax18;
    signed char al19;
    signed char* eax20;
    signed char* eax21;
    signed char al22;
    signed char* esi23;
    signed char* esi24;
    signed char al25;
    signed char* eax26;
    signed char* eax27;
    signed char al28;
    signed char* edx29;
    signed char* edx30;
    signed char* eax31;
    signed char* eax32;
    signed char al33;
    signed char* eax34;
    signed char* eax35;
    signed char al36;
    signed char* eax37;
    signed char* eax38;
    signed char al39;
    int32_t eax40;
    int32_t eax41;
    signed char dh42;
    uint32_t* eax43;
    uint32_t* eax44;
    uint32_t eax45;
    unsigned char* eax46;
    signed char* eax47;
    signed char al48;
    signed char* eax49;
    signed char* eax50;
    signed char al51;
    int32_t eax52;
    int32_t eax53;
    signed char ah54;
    signed char* eax55;
    signed char* eax56;
    signed char al57;
    int32_t eax58;
    int32_t eax59;
    signed char dl60;
    signed char* eax61;
    signed char* eax62;
    signed char al63;
    int32_t eax64;
    int32_t eax65;
    signed char al66;
    signed char* eax67;
    signed char* eax68;
    signed char al69;
    struct s210* eax70;
    struct s211* eax71;
    signed char dh72;
    unsigned char tmp8_73;
    signed char* eax74;
    signed char dl75;
    uint1_t cf76;
    unsigned char* eax77;
    unsigned char* eax78;
    unsigned char* eax79;
    signed char* eax80;
    signed char al81;
    signed char* eax82;
    signed char* eax83;
    signed char al84;
    signed char* eax85;
    signed char* eax86;
    signed char al87;
    signed char* eax88;
    signed char* eax89;
    signed char al90;
    signed char* eax91;
    signed char* eax92;
    signed char al93;
    signed char* eax94;
    signed char* eax95;
    signed char al96;

    *esi2 = reinterpret_cast<signed char>(*esi3 + dh4);
    tmp8_5 = reinterpret_cast<unsigned char>(edx6[edx7 * 2] + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf8 = reinterpret_cast<uint1_t>(tmp8_5 < edx9[edx10 * 2]);
    edx11[edx12 * 2] = tmp8_5;
    *ecx = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx + al13) + cf8);
    *eax14 = reinterpret_cast<signed char>(*eax15 + al16);
    *eax17 = reinterpret_cast<signed char>(*eax18 + al19);
    *eax20 = reinterpret_cast<signed char>(*eax21 + al22);
    *esi23 = reinterpret_cast<signed char>(*esi24 + al25);
    *eax26 = reinterpret_cast<signed char>(*eax27 + al28);
    *edx29 = reinterpret_cast<signed char>(*edx30 + *reinterpret_cast<signed char*>(&ecx));
    *eax31 = reinterpret_cast<signed char>(*eax32 + al33);
    *eax34 = reinterpret_cast<signed char>(*eax35 + al36);
    *eax37 = reinterpret_cast<signed char>(*eax38 + al39);
    *reinterpret_cast<signed char*>(eax40 - 0x7fefffe6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax41 - 0x7fefffe6) + dh42);
    *eax43 = *eax44 ^ eax45;
    *eax46 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax47 + al48)));
    *eax49 = reinterpret_cast<signed char>(*eax50 + al51);
    *reinterpret_cast<signed char*>(eax52 + 0x810006f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax53 + 0x810006f) + ah54);
    *eax55 = reinterpret_cast<signed char>(*eax56 + al57);
    *reinterpret_cast<signed char*>(eax58 + 0x410006f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax59 + 0x410006f) + dl60);
    *eax61 = reinterpret_cast<signed char>(*eax62 + al63);
    *reinterpret_cast<signed char*>(eax64 + 0xc10006f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax65 + 0xc10006f) + al66);
    *eax67 = reinterpret_cast<signed char>(*eax68 + al69);
    eax70->f111 = reinterpret_cast<signed char>(eax71->f111 + dh72);
    tmp8_73 = reinterpret_cast<unsigned char>(*eax74 + dl75);
    cf76 = reinterpret_cast<uint1_t>(tmp8_73 < *eax77);
    *eax78 = tmp8_73;
    *eax79 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax80 + al81) + cf76);
    *eax82 = reinterpret_cast<signed char>(*eax83 + al84);
    *eax85 = reinterpret_cast<signed char>(*eax86 + al87);
    *eax88 = reinterpret_cast<signed char>(*eax89 + al90);
    *eax91 = reinterpret_cast<signed char>(*eax92 + al93);
    *eax94 = reinterpret_cast<signed char>(*eax95 + al96);
}

void fun_100019cc() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    unsigned char* eax7;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *reinterpret_cast<unsigned char*>(&eax7) = *reinterpret_cast<unsigned char*>(&g0);
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
    *eax7 = reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7));
}

void fun_10001a14() {
    signed char* eax1;
    signed char al2;
    signed char* eax3;

    *reinterpret_cast<signed char*>(&eax1) = reinterpret_cast<signed char>(al2 + *eax3);
    *eax1 = reinterpret_cast<signed char>(*eax1 + *reinterpret_cast<signed char*>(&eax1));
}

void fun_10001a1c() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_10001a24(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    unsigned char tmp8_5;
    signed char* eax6;
    signed char al7;
    uint1_t cf8;
    unsigned char* eax9;
    unsigned char* eax10;
    signed char* eax11;
    unsigned char* eax12;
    signed char* eax13;
    signed char al14;
    signed char* eax15;
    signed char* eax16;
    signed char al17;
    signed char* eax18;
    signed char* eax19;
    signed char al20;
    signed char* eax21;
    signed char* eax22;
    signed char al23;
    signed char* eax24;
    signed char* eax25;
    signed char al26;
    signed char* eax27;
    signed char* eax28;
    signed char al29;
    int32_t eax30;
    int32_t eax31;
    signed char* eax32;
    signed char* eax33;
    signed char al34;
    signed char* eax35;
    signed char* eax36;
    signed char al37;
    signed char* eax38;
    signed char* eax39;
    signed char al40;
    signed char* eax41;
    signed char* eax42;
    signed char al43;
    signed char* eax44;
    signed char* eax45;
    signed char al46;
    signed char* eax47;
    signed char* eax48;
    signed char al49;
    signed char* eax50;
    signed char* eax51;
    signed char al52;
    signed char* eax53;
    signed char* eax54;
    signed char al55;
    signed char* eax56;
    signed char* eax57;
    signed char al58;
    signed char* eax59;
    signed char* eax60;
    signed char al61;
    signed char* eax62;
    signed char* eax63;
    signed char al64;
    signed char* eax65;
    signed char* eax66;
    signed char al67;
    signed char* eax68;
    signed char* eax69;
    signed char al70;
    signed char* eax71;
    signed char* eax72;
    signed char al73;
    signed char* eax74;
    signed char* eax75;
    signed char al76;
    signed char* eax77;
    signed char* eax78;
    signed char al79;
    signed char* eax80;
    signed char* eax81;
    signed char al82;
    signed char* eax83;
    signed char* eax84;
    signed char al85;
    signed char* eax86;
    signed char* eax87;
    signed char al88;
    signed char* eax89;
    signed char* eax90;
    signed char al91;
    signed char* eax92;
    signed char* eax93;
    signed char al94;
    signed char* eax95;
    signed char* eax96;
    signed char al97;
    signed char* eax98;
    signed char* eax99;
    signed char al100;
    signed char* eax101;
    signed char* eax102;
    signed char al103;
    signed char* eax104;
    signed char* eax105;
    signed char al106;
    signed char* eax107;
    signed char ah108;
    signed char dl109;
    signed char dl110;

    __asm__("out dx, al");
    *eax2 = *eax3 + eax4;
    tmp8_5 = reinterpret_cast<unsigned char>(*eax6 + al7);
    cf8 = reinterpret_cast<uint1_t>(tmp8_5 < *eax9);
    *eax10 = tmp8_5;
    if (!*eax11) {
        *eax12 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax13 + al14) + cf8);
    }
    *eax15 = reinterpret_cast<signed char>(*eax16 + al17);
    *eax18 = reinterpret_cast<signed char>(*eax19 + al20);
    *eax21 = reinterpret_cast<signed char>(*eax22 + al23);
    *eax24 = reinterpret_cast<signed char>(*eax25 + al26);
    *eax27 = reinterpret_cast<signed char>(*eax28 + al29);
    *reinterpret_cast<signed char*>(eax30 + 0xa10002a) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax31 + 0xa10002a) + cl);
    *eax32 = reinterpret_cast<signed char>(*eax33 + al34);
    *eax35 = reinterpret_cast<signed char>(*eax36 + al37);
    *eax38 = reinterpret_cast<signed char>(*eax39 + al40);
    *eax41 = reinterpret_cast<signed char>(*eax42 + al43);
    *eax44 = reinterpret_cast<signed char>(*eax45 + al46);
    *eax47 = reinterpret_cast<signed char>(*eax48 + al49);
    *eax50 = reinterpret_cast<signed char>(*eax51 + al52);
    *eax53 = reinterpret_cast<signed char>(*eax54 + al55);
    *eax56 = reinterpret_cast<signed char>(*eax57 + al58);
    *eax59 = reinterpret_cast<signed char>(*eax60 + al61);
    *eax62 = reinterpret_cast<signed char>(*eax63 + al64);
    *eax65 = reinterpret_cast<signed char>(*eax66 + al67);
    *eax68 = reinterpret_cast<signed char>(*eax69 + al70);
    *eax71 = reinterpret_cast<signed char>(*eax72 + al73);
    *eax74 = reinterpret_cast<signed char>(*eax75 + al76);
    *eax77 = reinterpret_cast<signed char>(*eax78 + al79);
    *eax80 = reinterpret_cast<signed char>(*eax81 + al82);
    *eax83 = reinterpret_cast<signed char>(*eax84 + al85);
    *eax86 = reinterpret_cast<signed char>(*eax87 + al88);
    *eax89 = reinterpret_cast<signed char>(*eax90 + al91);
    *eax92 = reinterpret_cast<signed char>(*eax93 + al94);
    *eax95 = reinterpret_cast<signed char>(*eax96 + al97);
    *eax98 = reinterpret_cast<signed char>(*eax99 + al100);
    *eax101 = reinterpret_cast<signed char>(*eax102 + al103);
    *eax104 = reinterpret_cast<signed char>(*eax105 + al106);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax107) + 1) = reinterpret_cast<signed char>(ah108 + dl109);
    *eax107 = reinterpret_cast<signed char>(*eax107 + dl110);
}

void fun_10001ab0() {
    void** eax1;
    void* al2;
    signed char* eax3;

    *reinterpret_cast<void**>(&eax1) = reinterpret_cast<void*>(static_cast<int32_t>(reinterpret_cast<signed char>(al2)));
    *eax1 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax1) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax1)));
    *eax1 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax1) + reinterpret_cast<int32_t>(eax1));
    *eax1 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax1) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax1)));
    *eax1 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax1) + reinterpret_cast<int32_t>(eax1));
    *eax1 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax1) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax1)));
    eax3 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax1) + reinterpret_cast<signed char>(*eax1));
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
}

void fun_10001acc() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

void fun_10001aec() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    unsigned char* eax10;
    unsigned char* eax11;
    unsigned char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<unsigned char>(*eax11 ^ al12);
}

void fun_10001ba8() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_10001bb0() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_10001cd0() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_10001cd8() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_10002090() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
}

void fun_100020a0() {
    unsigned char* eax1;
    signed char* eax2;
    signed char al3;
    uint1_t cf4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;
    signed char* eax11;
    signed char* eax12;
    signed char al13;
    signed char* eax14;
    signed char* eax15;
    signed char al16;
    signed char* eax17;
    signed char* eax18;
    signed char al19;
    signed char* eax20;
    signed char* eax21;
    signed char al22;
    signed char* eax23;
    signed char* eax24;
    signed char al25;

    *eax1 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax2 + al3) + cf4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    *eax11 = reinterpret_cast<signed char>(*eax12 + al13);
    *eax14 = reinterpret_cast<signed char>(*eax15 + al16);
    *eax17 = reinterpret_cast<signed char>(*eax18 + al19);
    *eax20 = reinterpret_cast<signed char>(*eax21 + al22);
    *eax23 = reinterpret_cast<signed char>(*eax24 + al25);
}

void fun_100020c4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
}

struct s212 {
    signed char[138] pad138;
    signed char f138;
};

struct s213 {
    signed char[138] pad138;
    signed char f138;
};

struct s214 {
    unsigned char f0;
    signed char[140] pad141;
    signed char f141;
};

signed char g8e;

struct s215 {
    signed char f0;
    signed char[1073741823] pad1073741824;
    unsigned char f1073741824;
    signed char[1342177279] pad1342177280;
    unsigned char f1342177280;
};

struct s217 {
    unsigned char f0;
    unsigned char f1;
    signed char[169] pad171;
    unsigned char f171;
    unsigned char f172;
    unsigned char f173;
    signed char[1] pad175;
    signed char f175;
    unsigned char f176;
    unsigned char f177;
    signed char[268435278] pad268435456;
    signed char f268435456;
    signed char[805306367] pad536870912;
    unsigned char f536870912;
    signed char[1073741823] pad1073741824;
    unsigned char f1073741824;
};

struct s216 {
    unsigned char f0;
    struct s217* f1;
    signed char[145] pad150;
    signed char f150;
};

struct s218 {
    signed char f0;
    signed char[151] pad152;
    signed char f152;
};

struct s219 {
    signed char f0;
    signed char[152] pad153;
    unsigned char f153;
};

signed char* fun_200009a0();

signed char* fun_500009a0();

struct s220 {
    unsigned char f0;
    signed char[153] pad154;
    signed char f154;
};

struct s220* fun_700009a0();

struct s219* fun_d00009a0();

struct s221 {
    unsigned char f0;
    signed char[154] pad155;
    signed char f155;
};

struct s221* fun_9b0();

struct s217* ga0000000;

/* (image base) */
struct s217* image_base_;

struct s222 {
    struct s217* f0;
    struct s217* f4;
};

struct s223 {
    struct s217* f0;
    struct s217* f4;
};

struct s224 {
    struct s217* f0;
    struct s217* f4;
};

struct s225 {
    struct s217* f0;
    struct s217* f4;
};

struct s226 {
    struct s217* f0;
    struct s217* f4;
};

struct s227 {
    struct s217* f0;
    struct s217* f4;
};

struct s228 {
    struct s217* f0;
    struct s217* f4;
};

struct s229 {
    unsigned char f0;
    signed char f1;
    signed char[183] pad185;
    unsigned char f185;
    signed char[15] pad201;
    unsigned char f201;
    unsigned char f202;
    unsigned char f203;
    unsigned char f204;
    unsigned char f205;
    signed char[10] pad216;
    signed char f216;
    signed char[6] pad223;
    unsigned char f223;
};

unsigned char gc4;

void fun_100020d4(unsigned char cl, unsigned char a2) {
    int32_t ecx1;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;
    signed char* eax12;
    signed char* eax13;
    signed char al14;
    signed char* eax15;
    signed char* eax16;
    signed char al17;
    signed char* eax18;
    signed char* eax19;
    signed char al20;
    int32_t edx21;
    int32_t edx22;
    signed char* eax23;
    signed char* eax24;
    signed char al25;
    struct s212* eax26;
    struct s213* eax27;
    signed char dh28;
    struct s214* eax29;
    signed char* eax30;
    signed char dh31;
    struct s214* eax32;
    signed char dl33;
    int32_t edi34;
    int32_t edi35;
    unsigned char dl36;
    struct s214* edx37;
    struct s215* eax38;
    struct s215* edx39;
    struct s215* edx40;
    struct s214* eax41;
    struct s216* eax42;
    struct s216* esi43;
    struct s216* edi44;
    signed char* eax45;
    signed char* edi46;
    signed char* eax47;
    unsigned char* eax48;
    struct s218* eax49;
    unsigned char* eax50;
    struct s219* eax51;
    signed char* eax52;
    unsigned char bl53;
    signed char* eax54;
    struct s220* eax55;
    unsigned char tmp8_56;
    uint1_t cf57;
    struct s221* eax58;
    unsigned char tmp8_59;
    uint1_t cf60;
    int32_t ebx61;
    int32_t ebx62;
    signed char bl63;
    struct s217* eax64;
    struct s222* edi65;
    struct s223* edi66;
    struct s224* edi67;
    struct s225* edi68;
    struct s226* edi69;
    struct s227* edi70;
    struct s228* edi71;
    unsigned char tmp8_72;
    uint1_t cf73;
    int32_t ebx74;
    int32_t ebx75;
    int32_t ebx76;
    struct s229* eax77;
    unsigned char tmp8_78;
    uint1_t cf79;
    signed char bh80;
    signed char* eax81;

    *reinterpret_cast<unsigned char*>(&ecx1) = cl;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
    *eax12 = reinterpret_cast<signed char>(*eax13 + al14);
    *eax15 = reinterpret_cast<signed char>(*eax16 + al17);
    *eax18 = reinterpret_cast<signed char>(*eax19 + al20);
    *reinterpret_cast<unsigned char*>(edx21 - 0x70000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx22 - 0x70000000) | 0x8a);
    *eax23 = reinterpret_cast<signed char>(*eax24 + al25);
    eax26->f138 = reinterpret_cast<signed char>(eax27->f138 + dh28);
    __asm__("ror byte [edx+0xe0000000], 1");
    *reinterpret_cast<signed char*>(&eax29) = *eax30;
    eax29->f0 = reinterpret_cast<unsigned char>(eax29->f0 + *reinterpret_cast<signed char*>(&eax29));
    __asm__("ror byte [ebx+0xd0020000], 0x8c");
    eax29->f0 = reinterpret_cast<unsigned char>(eax29->f0 + *reinterpret_cast<signed char*>(&eax29));
    eax29->f0 = reinterpret_cast<unsigned char>(eax29->f0 + dh31);
    eax32 = eax29;
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 + *reinterpret_cast<signed char*>(&eax32));
    if (__intrinsic()) 
        goto 0x10002097;
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 + *reinterpret_cast<signed char*>(&eax32));
    eax32->f141 = reinterpret_cast<signed char>(eax32->f141 + dl33);
    *reinterpret_cast<signed char*>(&eax32) = g8e;
    *reinterpret_cast<unsigned char*>(edi34 - 0x40000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi35 - 0x40000000) ^ *reinterpret_cast<unsigned char*>(&ecx1));
    eax32->f0 = reinterpret_cast<unsigned char>(__return_address());
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 + *reinterpret_cast<signed char*>(&eax32));
    __asm__("ror byte [edi+0xe0000000], 1");
    eax32->f0 = a2;
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 + *reinterpret_cast<signed char*>(&eax32));
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 ^ dl36);
    edx37 = eax32;
    eax38 = edx39;
    *reinterpret_cast<signed char*>(eax38) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax38) + *reinterpret_cast<signed char*>(&eax38));
    *reinterpret_cast<signed char*>(&eax38) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax38) + *reinterpret_cast<signed char*>(&edx37));
    edx40 = eax38;
    eax41 = edx37;
    eax41->f0 = reinterpret_cast<unsigned char>(eax41->f0 + *reinterpret_cast<signed char*>(&eax41));
    eax42 = esi43;
    eax42->f0 = reinterpret_cast<unsigned char>(eax42->f0 + *reinterpret_cast<signed char*>(&eax42));
    eax42->f150 = reinterpret_cast<signed char>(eax42->f150 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax42) + 1));
    __asm__("pushad ");
    edi44 = eax42;
    eax45 = edi46;
    *eax45 = reinterpret_cast<signed char>(*eax45 + *reinterpret_cast<signed char*>(&eax45));
    *eax45 = reinterpret_cast<signed char>(*eax45 + *reinterpret_cast<signed char*>(&edx40));
    eax47 = reinterpret_cast<signed char*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax45)));
    *eax47 = reinterpret_cast<signed char>(*eax47 + *reinterpret_cast<signed char*>(&eax47));
    *eax47 = reinterpret_cast<signed char>(*eax47 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax47) + 1));
    eax48 = reinterpret_cast<unsigned char*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax47)));
    *eax48 = reinterpret_cast<unsigned char>(*eax48 + *reinterpret_cast<signed char*>(&eax48));
    *eax48 = reinterpret_cast<unsigned char>(*eax48 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax49 = reinterpret_cast<struct s218*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax48)));
    eax49->f0 = reinterpret_cast<signed char>(eax49->f0 + *reinterpret_cast<signed char*>(&eax49));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax49) - 0x68) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax49) - 0x68) + *reinterpret_cast<signed char*>(&eax49));
    eax49->f0 = reinterpret_cast<signed char>(eax49->f0 + *reinterpret_cast<signed char*>(&eax49));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax49) - 0x68) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax49) - 0x68) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax49) + 1));
    eax49->f0 = reinterpret_cast<signed char>(eax49->f0 + *reinterpret_cast<signed char*>(&eax49));
    eax49->f152 = reinterpret_cast<signed char>(eax49->f152 + *reinterpret_cast<signed char*>(&eax49));
    *reinterpret_cast<signed char*>(&eax49) = 0x98;
    eax49->f0 = reinterpret_cast<signed char>(eax49->f0 - 0x68);
    *reinterpret_cast<signed char*>(&eax49) = reinterpret_cast<signed char>(0x68 - *reinterpret_cast<signed char*>(&edx40));
    eax50 = reinterpret_cast<unsigned char*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax49)));
    *eax50 = reinterpret_cast<unsigned char>(*eax50 + *reinterpret_cast<unsigned char*>(&eax50));
    *reinterpret_cast<unsigned char*>(&eax50) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax50) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax51 = reinterpret_cast<struct s219*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax50)));
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    __asm__("cdq ");
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&edx40));
    __asm__("cdq ");
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax51) + 1));
    __asm__("cdq ");
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax51) - 0x67) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax51) - 0x67) + *reinterpret_cast<signed char*>(&eax51));
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax51) - 0x67) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax51) - 0x67) + *reinterpret_cast<signed char*>(&edx40));
    do {
        eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax51) - 0x67) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax51) - 0x67) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
        eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
        eax51->f153 = reinterpret_cast<unsigned char>(eax51->f153 + *reinterpret_cast<signed char*>(&eax51));
        __asm__("cdq ");
        eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
        eax51->f153 = reinterpret_cast<unsigned char>(eax51->f153 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
        __asm__("rcr byte [ecx+0xf0000000], 1");
        __asm__("cdq ");
        eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
        eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&edx40));
        eax52 = fun_200009a0();
        *eax52 = reinterpret_cast<signed char>(*eax52 + *reinterpret_cast<signed char*>(&eax52));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) + 0x40000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) + 0x40000000) ^ bl53);
        eax54 = fun_500009a0();
        *eax54 = reinterpret_cast<signed char>(*eax54 + *reinterpret_cast<signed char*>(&eax54));
        __asm__("pushad ");
        eax55 = fun_700009a0();
        tmp8_56 = reinterpret_cast<unsigned char>(eax55->f0 + *reinterpret_cast<signed char*>(&eax55));
        cf57 = reinterpret_cast<uint1_t>(tmp8_56 < eax55->f0);
        eax55->f0 = tmp8_56;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) - 0x70000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) - 0x70000000) - reinterpret_cast<unsigned char>(0x66 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) - 0x70000000) < reinterpret_cast<unsigned char>(0x66 - cf57))));
        eax55->f0 = reinterpret_cast<unsigned char>(eax55->f0 + *reinterpret_cast<signed char*>(&eax55));
        eax55->f154 = reinterpret_cast<signed char>(eax55->f154 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax55) + 1));
        *reinterpret_cast<signed char*>(&eax55) = 0x9a;
        eax55->f0 = reinterpret_cast<unsigned char>(eax55->f0 - 0x66);
        eax51 = fun_d00009a0();
        eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
        --ecx1;
    } while (reinterpret_cast<uint1_t>(!!ecx1) & reinterpret_cast<uint1_t>(!!eax51->f0));
    eax51->f0 = reinterpret_cast<signed char>(eax51->f0 + *reinterpret_cast<signed char*>(&eax51));
    eax58 = fun_9b0();
    tmp8_59 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    cf60 = reinterpret_cast<uint1_t>(tmp8_59 < eax58->f0);
    eax58->f0 = tmp8_59;
    *reinterpret_cast<unsigned char*>(ebx61 + 0x20000000) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx62 + 0x20000000) + bl63) + cf60);
    __asm__("wait ");
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("wait ");
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) + *reinterpret_cast<signed char*>(&eax58));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) + *reinterpret_cast<signed char*>(&edx40));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax58) + 1));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax58) - 0x65) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    eax58->f155 = reinterpret_cast<signed char>(eax58->f155 + *reinterpret_cast<signed char*>(&eax58));
    __asm__("wait ");
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    eax58->f155 = reinterpret_cast<signed char>(eax58->f155 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax58) + 1));
    *reinterpret_cast<signed char*>(&eax58) = 0x9b;
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 - 0x65);
    *reinterpret_cast<signed char*>(&eax58) = reinterpret_cast<signed char>(0x65 - *reinterpret_cast<signed char*>(&edx40));
    __asm__("wait ");
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    *reinterpret_cast<signed char*>(&eax58) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax58) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax58) + 1));
    __asm__("wait ");
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&edx40));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<signed char*>(&eax58));
    eax58->f0 = reinterpret_cast<unsigned char>(eax58->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax64 = ga0000000;
    image_base_ = eax64;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    __asm__("pushad ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<signed char*>(&(eax64 + 0x10000000)->f0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&(eax64 + 0x10000000)->f0) + 87);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    edi44->f0 = *reinterpret_cast<unsigned char*>(&eax64);
    edi65 = reinterpret_cast<struct s222*>(&edi44->f1);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<signed char*>(&(eax64 - 86)->f0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&(eax64 - 86)->f0) + *reinterpret_cast<signed char*>(&edx40));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<signed char*>(&(eax64 - 86)->f0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&(eax64 - 86)->f0) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(&edx40));
    edi65->f0 = eax64;
    edi66 = reinterpret_cast<struct s223*>(&edi65->f4);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    edi66->f0 = eax64;
    edi67 = reinterpret_cast<struct s224*>(&edi66->f4);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    edi67->f0 = eax64;
    edi68 = reinterpret_cast<struct s225*>(&edi67->f4);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 85)->f0 = reinterpret_cast<unsigned char>((eax64 - 85)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 85)->f0 = reinterpret_cast<unsigned char>((eax64 - 85)->f0 + *reinterpret_cast<signed char*>(&edx40));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 85)->f0 = reinterpret_cast<unsigned char>((eax64 - 85)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 85)->f0 = reinterpret_cast<unsigned char>((eax64 - 85)->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xab)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xab)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    edi68->f0 = eax64;
    edi69 = reinterpret_cast<struct s226*>(&edi68->f4);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xab)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xab)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    *reinterpret_cast<unsigned char*>(&eax64) = 0xab;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 0xab);
    *reinterpret_cast<unsigned char*>(&eax64) = 86;
    edi69->f0 = eax64;
    edi70 = reinterpret_cast<struct s227*>(&edi69->f4);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 86);
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(86 + *reinterpret_cast<signed char*>(&edx40));
    edi70->f0 = eax64;
    edi71 = reinterpret_cast<struct s228*>(&edi70->f4);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    edi71->f0 = eax64;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    edi71->f4 = eax64;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(&edx40));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 84)->f0 = reinterpret_cast<unsigned char>((eax64 - 84)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 84)->f0 = reinterpret_cast<unsigned char>((eax64 - 84)->f0 + *reinterpret_cast<signed char*>(&edx40));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 84)->f0 = reinterpret_cast<unsigned char>((eax64 - 84)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 84)->f0 = reinterpret_cast<unsigned char>((eax64 - 84)->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xac)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xac)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xac)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xac)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    *reinterpret_cast<unsigned char*>(&eax64) = 0xac;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 0xac);
    *reinterpret_cast<unsigned char*>(&eax64) = 88;
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 88);
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(88 + *reinterpret_cast<signed char*>(&edx40));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("lodsb ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(&edx40));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 83)->f0 = reinterpret_cast<unsigned char>((eax64 - 83)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 83)->f0 = reinterpret_cast<unsigned char>((eax64 - 83)->f0 + *reinterpret_cast<signed char*>(&edx40));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 83)->f0 = reinterpret_cast<unsigned char>((eax64 - 83)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 83)->f0 = reinterpret_cast<unsigned char>((eax64 - 83)->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xad)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xad)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xad)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xad)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    *reinterpret_cast<unsigned char*>(&eax64) = 0xad;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 0xad);
    *reinterpret_cast<unsigned char*>(&eax64) = 90;
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 90);
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(90 + *reinterpret_cast<signed char*>(&edx40));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("lodsd ");
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(&edx40));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 82)->f0 = reinterpret_cast<unsigned char>((eax64 - 82)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 82)->f0 = reinterpret_cast<unsigned char>((eax64 - 82)->f0 + *reinterpret_cast<signed char*>(&edx40));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 - 82)->f0 = reinterpret_cast<unsigned char>((eax64 - 82)->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    do {
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<unsigned char*>(&eax64));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        *reinterpret_cast<signed char*>(&(eax64 + 0xaf)->f0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&(eax64 + 0xaf)->f0) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
        *reinterpret_cast<unsigned char*>(&eax64) = 0xaf;
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 0xaf);
        *reinterpret_cast<unsigned char*>(&eax64) = 94;
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 94);
        *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(94 + *reinterpret_cast<signed char*>(&edx40));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax64) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        tmp8_72 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        cf73 = reinterpret_cast<uint1_t>(tmp8_72 < eax64->f0);
        eax64->f0 = tmp8_72;
        (eax64 + 0x20000000)->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>((eax64 + 0x20000000)->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1)) + cf73);
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        (eax64 + 0x40000000)->f0 = reinterpret_cast<unsigned char>((eax64 + 0x40000000)->f0 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        __asm__("pushad ");
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
    } while (__intrinsic());
    eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
    do {
        (eax64 + 0xb0)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xb0)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        *reinterpret_cast<unsigned char*>(&eax64) = 0xb0;
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 0xb0);
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        *reinterpret_cast<signed char*>(&(eax64 - 0x20000000)->f0) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&(eax64 - 0x20000000)->f0) << 1);
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        *reinterpret_cast<unsigned char*>(&eax64) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        *reinterpret_cast<unsigned char*>(ecx1 + 0x10000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx1 + 0x10000000) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
        *reinterpret_cast<unsigned char*>(&ecx1) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        *reinterpret_cast<unsigned char*>(ecx1 + 0x30000000) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax64->f0));
        ++eax64;
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
        __asm__("pushad ");
        *reinterpret_cast<unsigned char*>(&ecx1) = 0;
        eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    } while (__intrinsic());
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    (eax64 + 0xb1)->f0 = reinterpret_cast<unsigned char>((eax64 + 0xb1)->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(&eax64) = 0xb1;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 0xb1);
    *reinterpret_cast<unsigned char*>(&eax64) = 98;
    *reinterpret_cast<unsigned char*>(&ecx1) = 0;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 98);
    *reinterpret_cast<signed char*>(ecx1 - 0x20000000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx1 - 0x20000000) << 1);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 98);
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 98);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) - 0x80000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) + 0x80000000) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    *reinterpret_cast<signed char*>(&edx40) = 0;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 98);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx40) - 0x30000000) = 0;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + 98);
    *reinterpret_cast<unsigned char*>(&eax64) = reinterpret_cast<unsigned char>(98 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax64) + 1));
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<signed char*>(&edx40) = 0;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(ebx74 + 0x10000000) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx75 + 0x10000000) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    *reinterpret_cast<signed char*>(&ebx76) = 0;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    *reinterpret_cast<unsigned char*>(ebx76 + 0x30000000) = 0;
    eax64->f0 = reinterpret_cast<unsigned char>(eax64->f0 + *reinterpret_cast<unsigned char*>(&eax64));
    eax77 = reinterpret_cast<struct s229*>(eax64 + 1);
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) + reinterpret_cast<int32_t>(eax77) - 0x4ae00000) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax77) + reinterpret_cast<int32_t>(eax77) - 0x4ae00000) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax77) - 71) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax77) - 71) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    tmp8_78 = reinterpret_cast<unsigned char>(eax77->f185 + *reinterpret_cast<unsigned char*>(&eax77));
    cf79 = reinterpret_cast<uint1_t>(tmp8_78 < eax77->f185);
    eax77->f185 = tmp8_78;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) + 0x50000000) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx40) + 0x50000000) + bh80) + cf79);
    __asm__("les eax, [eax]");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = gc4;
    __asm__("rol ah, 1");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("lds eax, [eax]");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax77) + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("enter 0x0, 0x0");
    __asm__("ror al, 1");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax77) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    __asm__("enter 0x0, 0x0");
    __asm__("lock enter 0x0, 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax77->f0));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 55) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f201 = reinterpret_cast<unsigned char>(eax77->f201 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f201 = reinterpret_cast<unsigned char>(eax77->f201 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    *reinterpret_cast<unsigned char*>(&eax77) = 0xc9;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xc9);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x92;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x92);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x92;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x92);
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(0x92 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax77) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("retf 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax77->f0));
    __asm__("retf 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    __asm__("retf 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("retf 0x0");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 54) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f202 = reinterpret_cast<unsigned char>(eax77->f202 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("retf 0x0");
    eax77->f202 = reinterpret_cast<unsigned char>(eax77->f202 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    *reinterpret_cast<unsigned char*>(&eax77) = 0xca;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xca);
    __asm__("retf 0x0");
    __asm__("retf 0x0");
    __asm__("retf 0x0");
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(0x6c - *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1)) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("retf 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax77->f0));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 53) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f203 = reinterpret_cast<unsigned char>(eax77->f203 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f203 = reinterpret_cast<unsigned char>(eax77->f203 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    *reinterpret_cast<unsigned char*>(&eax77) = 0xcb;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xcb);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x96;
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x96);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x96;
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x96);
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(0x96 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax77) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    __asm__("retf ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax77->f0));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 52) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f204 = reinterpret_cast<unsigned char>(eax77->f204 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f204 = reinterpret_cast<unsigned char>(eax77->f204 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    *reinterpret_cast<unsigned char*>(&eax77) = 0xcc;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xcc);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x98;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x98);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x98;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x98);
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(0x98 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax77) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("int 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    __asm__("int 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 51) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    eax77->f205 = reinterpret_cast<unsigned char>(eax77->f205 + *reinterpret_cast<unsigned char*>(&eax77));
    __asm__("int 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(&eax77) = 0xcd;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xcd);
    *reinterpret_cast<unsigned char*>(&eax77) = 0x9a;
    __asm__("int 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x9a);
    __asm__("ror ch, 1");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x9a);
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x9a);
    __asm__("into ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x9a);
    eax77->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax77->f0));
    __asm__("into ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x9a);
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    __asm__("into ");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0x9a);
    *reinterpret_cast<unsigned char*>(&eax77) = 52;
    __asm__("aad 0x0");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 52);
    *reinterpret_cast<unsigned char*>(&eax77) = 52;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 52);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 40) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 40)));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 52);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 40) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax77) - 40) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx40) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 52);
    eax77->f216 = reinterpret_cast<signed char>(static_cast<int32_t>(eax77->f216));
    *reinterpret_cast<unsigned char*>(&eax77) = 0xd8;
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xd8);
    __asm__("fadd dword [eax]");
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xd8);
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xd8);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax77) - 33) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax77) - 33) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    eax77->f0 = reinterpret_cast<unsigned char>(eax77->f0 + 0xd8);
    eax77->f223 = reinterpret_cast<unsigned char>(eax77->f223 + 0xd8);
    eax81 = &eax77->f1;
    __asm__("in eax, dx");
    *eax81 = reinterpret_cast<signed char>(*eax81 + *reinterpret_cast<signed char*>(&eax81));
    *(eax81 - 13) = reinterpret_cast<signed char>(static_cast<int32_t>(*(eax81 - 13)));
    *eax81 = reinterpret_cast<signed char>(*eax81 + *reinterpret_cast<signed char*>(&eax81));
    __asm__("hlt ");
}

struct s230 {
    void* f0;
    signed char[66311] pad66312;
    unsigned char f66312;
};

struct s231 {
    signed char[5] pad5;
    unsigned char f5;
};

unsigned char g10000;

struct s232 {
    signed char f0;
    signed char[5] pad6;
    unsigned char f6;
};

struct s233 {
    void* f0;
    signed char f1;
};

struct s234 {
    signed char f0;
    unsigned char f1;
};

struct s235 {
    void* f0;
    void* f1;
};

struct s236 {
    void* f0;
    unsigned char f1;
    signed char[10] pad12;
    signed char f12;
};

unsigned char g30001000;

struct s237 {
    void* f0;
    unsigned char f1;
    signed char[10] pad12;
    signed char f12;
};

struct s238 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s239 {
    signed char[5] pad5;
    unsigned char f5;
};

struct s240 {
    void* f0;
    void* f1;
};

void fun_10003e31(uint32_t ecx) {
    signed char* ecx2;
    uint32_t* ebx3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;
    signed char* eax9;
    signed char* eax10;
    unsigned char* eax11;
    unsigned char* eax12;
    unsigned char al13;
    struct s230* eax14;
    uint32_t eax15;
    signed char* edx16;
    void* dh17;
    struct s231* esi18;
    uint32_t esi19;
    signed char dl20;
    void** ecx21;
    void** eax22;
    struct s232* esi23;
    signed char dl24;
    unsigned char* eax25;
    void* esp26;
    struct s233* eax27;
    signed char* ebx28;
    signed char* ebx29;
    void* bl30;
    struct s234* eax31;
    unsigned char* eax32;
    void** eax33;
    struct s235** esp34;
    void* tmp8_35;
    uint1_t cf36;
    struct s235* eax37;
    void* esp38;
    signed char dl39;
    struct s236* eax40;
    void* bl41;
    unsigned char tmp8_42;
    unsigned char* eax43;
    signed char* eax44;
    struct s237* eax45;
    void* dl46;
    struct s238* eax47;
    struct s239* esi48;
    unsigned char* eax49;
    struct s240* eax50;
    void* dl51;
    signed char* edi52;
    signed char* edi53;
    signed char dl54;
    void** eax55;

    ecx2 = reinterpret_cast<signed char*>(ecx | *ebx3);
    *reinterpret_cast<int32_t*>(eax4 + eax5) = *reinterpret_cast<int32_t*>(eax6 + eax7) + eax8;
    __asm__("salc ");
    *eax9 = reinterpret_cast<signed char>(*eax10 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx2)));
    *eax11 = reinterpret_cast<unsigned char>(*eax12 | al13);
    eax14 = reinterpret_cast<struct s230*>(eax15 | 0xc201300);
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(dh17) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx2)));
    esi18 = reinterpret_cast<struct s231*>(esi19 | reinterpret_cast<unsigned char>(eax14->f0));
    eax14->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)))));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx2)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    *ecx2 = reinterpret_cast<signed char>(*ecx2 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14)) + dl20);
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    *edx16 = reinterpret_cast<signed char>(*edx16 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx2) + 1));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx2)));
    esi18->f5 = reinterpret_cast<unsigned char>(esi18->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    ecx21 = reinterpret_cast<void**>(ecx2 - 1);
    if (!(reinterpret_cast<uint1_t>(!!ecx21) & reinterpret_cast<uint1_t>(!!eax14->f0))) {
        eax22 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax14) | reinterpret_cast<unsigned char>(*ecx21));
        *reinterpret_cast<unsigned char*>(&eax22) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax22)));
        __asm__("salc ");
        *eax22 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax22) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
        *eax22 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax22) | *reinterpret_cast<unsigned char*>(&eax22));
        eax14 = reinterpret_cast<struct s230*>(reinterpret_cast<uint32_t>(eax22) | 0xc000b00);
    }
    *reinterpret_cast<void**>(&eax14) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx21) + 1)));
    esi23 = reinterpret_cast<struct s232*>(reinterpret_cast<uint32_t>(esi18) | reinterpret_cast<unsigned char>(eax14->f0));
    eax14->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)))));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    *edx16 = reinterpret_cast<signed char>(*edx16 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14)) + dl24);
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax14)));
    eax14->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax14->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    *reinterpret_cast<void**>(&eax14) = reinterpret_cast<void*>(0);
    eax25 = &eax14->f66312;
    *eax25 = reinterpret_cast<unsigned char>(*eax25 + *reinterpret_cast<unsigned char*>(&eax25));
    *eax25 = reinterpret_cast<unsigned char>(*eax25 + *reinterpret_cast<unsigned char*>(&eax25));
    *eax25 = reinterpret_cast<unsigned char>(*eax25 | *reinterpret_cast<unsigned char*>(&eax25));
    *eax25 = reinterpret_cast<unsigned char>(*eax25 + *reinterpret_cast<unsigned char*>(&eax25));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25)) + reinterpret_cast<uint32_t>(eax25);
    *eax25 = reinterpret_cast<unsigned char>(*eax25 | *reinterpret_cast<unsigned char*>(&eax25));
    esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<unsigned char>(*ecx21));
    *eax25 = reinterpret_cast<unsigned char>(*eax25 | *reinterpret_cast<unsigned char*>(&eax25));
    *reinterpret_cast<unsigned char*>(&eax25) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax25) ^ 12);
    eax27 = reinterpret_cast<struct s233*>(eax25 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax27) + reinterpret_cast<uint32_t>(eax27)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax27) + reinterpret_cast<uint32_t>(eax27)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax27->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax27->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax27)));
    eax27->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax27->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax27)))));
    eax27->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax27->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax27)));
    eax27->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax27->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax27->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax27->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax27)));
    *ebx28 = reinterpret_cast<signed char>(*ebx29 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    eax27->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax27->f0) + reinterpret_cast<signed char>(bl30));
    eax27->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax27->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    eax31 = reinterpret_cast<struct s234*>(&eax27->f1);
    eax31->f0 = reinterpret_cast<signed char>(eax31->f0 + *reinterpret_cast<signed char*>(&eax31));
    eax31->f0 = reinterpret_cast<signed char>(eax31->f0 + *reinterpret_cast<signed char*>(&eax31));
    *reinterpret_cast<signed char*>(&eax31) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax31)));
    eax32 = &eax31->f1;
    esi23->f6 = reinterpret_cast<unsigned char>(esi23->f6 + *reinterpret_cast<unsigned char*>(&eax32));
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax32));
    *eax32 = reinterpret_cast<unsigned char>(*eax32 + *reinterpret_cast<unsigned char*>(&eax32));
    *eax32 = reinterpret_cast<unsigned char>(*eax32 | *reinterpret_cast<unsigned char*>(&eax32));
    *eax32 = reinterpret_cast<unsigned char>(*eax32 + *reinterpret_cast<unsigned char*>(&eax32));
    eax33 = reinterpret_cast<void**>(eax32 - 1);
    *reinterpret_cast<void**>(&eax33) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33)) | 11);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33)));
    esp34 = reinterpret_cast<struct s235**>(reinterpret_cast<uint32_t>(esp26) - 1);
    *reinterpret_cast<void**>(&eax33) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33)) | 11);
    *eax33 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax33) + reinterpret_cast<uint32_t>(ecx21));
    esi23->f0 = reinterpret_cast<signed char>(esi23->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax33) + 1));
    *eax33 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax33) | reinterpret_cast<uint32_t>(ecx21));
    *reinterpret_cast<void**>(&eax33) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33))));
    *eax33 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax33) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33)));
    tmp8_35 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33)))));
    cf36 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_35) < reinterpret_cast<unsigned char>(*ecx21));
    *ecx21 = tmp8_35;
    *eax33 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax33) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax33))) + cf36);
    eax37 = *esp34;
    esp38 = reinterpret_cast<void*>(esp34 + 1);
    *reinterpret_cast<void**>(&eax37) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)) | 0x70);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax37) + reinterpret_cast<int32_t>(eax37)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax37) + reinterpret_cast<int32_t>(eax37)) + dl39);
    eax37->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax37->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    eax37->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax37->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax37->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax37->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax37) + reinterpret_cast<int32_t>(eax37)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax37) + reinterpret_cast<int32_t>(eax37)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    eax37->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax37->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *reinterpret_cast<void**>(&eax37) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax37) + 1));
    eax37->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax37->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    eax37->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax37->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    eax40 = reinterpret_cast<struct s236*>(&eax37->f1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx16) + reinterpret_cast<int32_t>(eax40) + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx16) + reinterpret_cast<int32_t>(eax40) + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<int32_t>(eax40));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<signed char>(bl41));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<int32_t>(eax40));
    eax40->f12 = reinterpret_cast<signed char>(eax40->f12 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax40) + 1));
    *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40))));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax40->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax40->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    tmp8_42 = reinterpret_cast<unsigned char>(g30001000 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    g30001000 = tmp8_42;
    eax43 = &eax40->f1;
    *eax43 = reinterpret_cast<unsigned char>(*eax43 + *reinterpret_cast<unsigned char*>(&eax43));
    *eax43 = reinterpret_cast<unsigned char>(*eax43 + *reinterpret_cast<unsigned char*>(&eax43));
    *reinterpret_cast<unsigned char*>(&eax43) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax43) - *eax43);
    *eax43 = reinterpret_cast<unsigned char>(*eax43 | *reinterpret_cast<unsigned char*>(&eax43));
    *reinterpret_cast<unsigned char*>(&eax43) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax43) + 8);
    eax44 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax43) + reinterpret_cast<unsigned char>(*ecx21));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp38) + reinterpret_cast<uint32_t>(ecx21) + 72) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp38) + reinterpret_cast<uint32_t>(ecx21) + 72) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax44) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint32_t>(eax44)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint32_t>(eax44)) + *reinterpret_cast<signed char*>(&eax44));
    eax45 = reinterpret_cast<struct s237*>(reinterpret_cast<uint32_t>(eax44) | 0x8201300);
    eax45->f12 = reinterpret_cast<signed char>(eax45->f12 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx21) + 1)));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45))));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    esi23->f0 = reinterpret_cast<signed char>(esi23->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<signed char>(dl46));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    eax47 = reinterpret_cast<struct s238*>(&eax45->f1);
    eax47->f0 = reinterpret_cast<unsigned char>(eax47->f0 + *reinterpret_cast<unsigned char*>(&eax47));
    eax47->f0 = reinterpret_cast<unsigned char>(eax47->f0 + *reinterpret_cast<unsigned char*>(&eax47));
    *reinterpret_cast<unsigned char*>(&eax47) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax47) - eax47->f0);
    eax47->f0 = reinterpret_cast<unsigned char>(eax47->f0 | *reinterpret_cast<unsigned char*>(&eax47));
    esi48 = reinterpret_cast<struct s239*>(&esi23->pad6);
    *reinterpret_cast<unsigned char*>(&eax47) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax47) + 8);
    eax49 = &eax47->f65536;
    *eax49 = reinterpret_cast<unsigned char>(*eax49 + *reinterpret_cast<unsigned char*>(&eax49));
    *eax49 = reinterpret_cast<unsigned char>(*eax49 | *reinterpret_cast<unsigned char*>(&eax49));
    *eax49 = reinterpret_cast<unsigned char>(*eax49 + *reinterpret_cast<unsigned char*>(&eax49));
    *reinterpret_cast<unsigned char*>(&eax49) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax49) | 72);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax49) + reinterpret_cast<uint32_t>(eax49)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax49) + reinterpret_cast<uint32_t>(eax49)) + *reinterpret_cast<unsigned char*>(&eax49));
    eax50 = reinterpret_cast<struct s240*>(reinterpret_cast<uint32_t>(eax49) | 0x8000b00);
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<signed char>(dl51)) | 0x70);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax50->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax50->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    eax50->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax50->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    eax50->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax50->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *edi52 = reinterpret_cast<signed char>(*edi53 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx16) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) + dl54);
    eax50->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax50->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    eax50->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax50->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx21) + 1)));
    eax55 = &eax50->f1;
    esi48->f5 = reinterpret_cast<unsigned char>(esi48->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    __asm__("fimul word [ebx+ecx]");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax55) + reinterpret_cast<uint32_t>(eax55)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax55) + reinterpret_cast<uint32_t>(eax55)) + reinterpret_cast<uint32_t>(eax55);
    __asm__("salc ");
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx21)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *ecx21 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)))));
    goto 0x1000f00c;
}

struct s241 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s242 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s243 {
    signed char[5] pad5;
    unsigned char f5;
};

struct s244 {
    signed char[5] pad5;
    signed char f5;
};

struct s245 {
    signed char[22] pad22;
    unsigned char f22;
};

struct s246 {
    signed char[4] pad4;
    void* f4;
};

struct s247 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

void fun_100048ef(void* cl) {
    unsigned char* eax2;
    int32_t eax3;
    uint1_t cf4;
    void* dl5;
    unsigned char dl6;
    unsigned char* esi7;
    int32_t edx8;
    signed char* esi9;
    void** esi10;
    struct s241* eax11;
    void* tmp8_12;
    void* dh13;
    uint1_t cf14;
    signed char* esi15;
    signed char* esi16;
    signed char bl17;
    unsigned char* esi18;
    struct s242* esi19;
    unsigned char* eax20;
    unsigned char* eax21;
    unsigned char* eax22;
    void** eax23;
    unsigned char* ebx24;
    signed char* ebx25;
    unsigned char* eax26;
    void** esp27;
    void* ss28;
    void** eax29;
    void* bl30;
    void* tmp8_31;
    void* dh32;
    uint1_t cf33;
    unsigned char tmp8_34;
    signed char* edi35;
    signed char bl36;
    uint1_t cf37;
    unsigned char* edi38;
    unsigned char* edi39;
    int16_t* esp40;
    int16_t es41;
    struct s243* edi42;
    struct s244* edi43;
    unsigned char* edi44;
    unsigned char* edi45;
    signed char* eax46;
    struct s245* esi47;
    int16_t* esp48;
    int16_t ss49;
    void* eax50;
    void** eax51;
    unsigned char tmp8_52;
    uint1_t cf53;
    int32_t* esp54;
    int32_t esi55;
    void** esp56;
    unsigned char* ecx57;
    unsigned char* ebx58;
    signed char* ebx59;
    struct s247* eax60;
    signed char dh61;
    unsigned char tmp8_62;
    uint1_t cf63;
    void* esp64;
    unsigned char* eax65;
    signed char* eax66;
    uint32_t* eax67;
    unsigned char* eax68;
    signed char* edi69;
    unsigned char* eax70;
    unsigned char* eax71;

    eax2 = reinterpret_cast<unsigned char*>(eax3 + 0x8000b + cf4);
    dl5 = reinterpret_cast<void*>(dl6 | *esi7);
    *eax2 = *reinterpret_cast<unsigned char*>(&eax2);
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax2)));
    *reinterpret_cast<void**>(&edx8) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(dl5) - reinterpret_cast<unsigned char>(*esi9 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(dl5) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*esi10))))));
    eax11 = reinterpret_cast<struct s241*>(eax2 - 1);
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx8)));
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) + reinterpret_cast<unsigned char>(cl));
    tmp8_12 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) + reinterpret_cast<signed char>(dh13));
    cf14 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_12) < reinterpret_cast<unsigned char>(eax11->f0));
    eax11->f0 = tmp8_12;
    *reinterpret_cast<void**>(&eax11) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)))) + cf14);
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) + reinterpret_cast<unsigned char>(cl));
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    *esi15 = reinterpret_cast<signed char>(*esi16 + bl17);
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax11) + reinterpret_cast<uint32_t>(eax11)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax11) + reinterpret_cast<uint32_t>(eax11)) ^ reinterpret_cast<uint32_t>(eax11);
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax11)));
    esi18 = &esi19->f1;
    eax11->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax11->f0) | reinterpret_cast<unsigned char>(cl));
    eax20 = &eax11->f65536;
    *eax20 = reinterpret_cast<unsigned char>(*eax20 + *reinterpret_cast<signed char*>(&eax20));
    eax21 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax20) | *eax20);
    *eax21 = reinterpret_cast<unsigned char>(*eax21 + *reinterpret_cast<unsigned char*>(&eax21));
    *reinterpret_cast<unsigned char*>(&eax21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax21) & 22);
    eax22 = eax21 - 1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<uint32_t>(eax22)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<uint32_t>(eax22)) + *reinterpret_cast<unsigned char*>(&eax22));
    *eax22 = reinterpret_cast<unsigned char>(*eax22 | *reinterpret_cast<unsigned char*>(&eax22));
    eax23 = reinterpret_cast<void**>(eax22 - 1);
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(cl));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(cl));
    *ebx24 = reinterpret_cast<unsigned char>(*ebx25 + reinterpret_cast<unsigned char>(cl));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) + reinterpret_cast<unsigned char>(cl));
    *esi18 = reinterpret_cast<unsigned char>(*esi18 - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx8)));
    eax26 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax23) | reinterpret_cast<unsigned char>(*eax23));
    *eax26 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax26 + *reinterpret_cast<unsigned char*>(&eax26))));
    *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax26) ^ 22);
    *eax26 = *reinterpret_cast<unsigned char*>(&eax26);
    *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax26)))));
    esp27 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__return_address()) + 4 + 1 - 2);
    *esp27 = ss28;
    eax29 = reinterpret_cast<void**>(eax26 - 1);
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<signed char>(bl30));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(cl));
    tmp8_31 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<signed char>(dh32));
    cf33 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_31) < reinterpret_cast<unsigned char>(*eax29));
    *eax29 = tmp8_31;
    *reinterpret_cast<void**>(&eax29) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf33))))));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(cl));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    tmp8_34 = reinterpret_cast<unsigned char>(*edi35 + bl36);
    cf37 = reinterpret_cast<uint1_t>(tmp8_34 < *edi38);
    *edi39 = tmp8_34;
    *reinterpret_cast<void**>(&eax29) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)))) + cf37);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29)) ^ reinterpret_cast<uint32_t>(eax29);
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    esp40 = reinterpret_cast<int16_t*>(reinterpret_cast<int16_t>(*esp27) + 4 - 2);
    *esp40 = es41;
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(cl));
    edi42->f5 = reinterpret_cast<unsigned char>(edi43->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *edi44 = reinterpret_cast<unsigned char>(*edi45 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<uint32_t>(eax29));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<uint32_t>(eax29));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    eax46 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax29) | reinterpret_cast<unsigned char>(*eax29));
    *eax46 = reinterpret_cast<signed char>(*eax46 + *reinterpret_cast<signed char*>(&eax46));
    esi47 = reinterpret_cast<struct s245*>(esi18 - 1);
    esp48 = esp40 - 1;
    *esp48 = ss49;
    eax50 = reinterpret_cast<void*>(eax46 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<uint32_t>(eax50)) + *reinterpret_cast<signed char*>(&eax50));
    eax51 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax50) | 0x8010b00);
    tmp8_52 = reinterpret_cast<unsigned char>(esi47->f22 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx8)));
    cf53 = reinterpret_cast<uint1_t>(tmp8_52 < esi47->f22);
    esi47->f22 = tmp8_52;
    esp54 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp48) + reinterpret_cast<unsigned char>(*eax51) + cf53);
    *reinterpret_cast<void**>(&eax51) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51))));
    esi55 = *esp54;
    *eax51 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)))));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(cl));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax51) + 1)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax51) + reinterpret_cast<uint32_t>(eax51)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax51) + reinterpret_cast<uint32_t>(eax51)) ^ reinterpret_cast<uint32_t>(eax51);
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    esp56 = &(*reinterpret_cast<struct s246**>(reinterpret_cast<uint32_t>(esp54 + 1) + 2))->f4;
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *reinterpret_cast<void**>(&ecx57) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(cl) + reinterpret_cast<unsigned char>(*eax51));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<uint32_t>(eax51));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *ebx58 = reinterpret_cast<unsigned char>(*ebx59 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx57)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    *reinterpret_cast<unsigned char*>(edx8 + 0x4007017) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx8 + 0x4007017) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx8)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx57)));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax51) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax51)));
    eax60 = reinterpret_cast<struct s247*>(eax51 - 1);
    eax60->f0 = reinterpret_cast<unsigned char>(eax60->f0 + *reinterpret_cast<unsigned char*>(&eax60));
    eax60->f0 = reinterpret_cast<unsigned char>(eax60->f0 + *reinterpret_cast<unsigned char*>(&eax60));
    __asm__("popad ");
    eax60->f0 = reinterpret_cast<unsigned char>(eax60->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax60) + 1));
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 + dh61);
    *reinterpret_cast<unsigned char*>(&eax60) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax60)));
    tmp8_62 = reinterpret_cast<unsigned char>(eax60->f0 + *reinterpret_cast<unsigned char*>(&eax60));
    cf63 = reinterpret_cast<uint1_t>(tmp8_62 < eax60->f0);
    eax60->f0 = tmp8_62;
    esp64 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp56) + 4);
    eax60->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax60->f0 + *reinterpret_cast<unsigned char*>(&eax60)) + cf63);
    eax60->f0 = reinterpret_cast<unsigned char>(eax60->f0 | *reinterpret_cast<unsigned char*>(&eax60));
    eax60->f0 = reinterpret_cast<unsigned char>(eax60->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx57)));
    eax65 = &eax60->f65536;
    *eax65 = reinterpret_cast<unsigned char>(*eax65 + *reinterpret_cast<signed char*>(&eax65));
    eax66 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax65) | *eax65);
    *eax66 = reinterpret_cast<signed char>(*eax66 + *reinterpret_cast<signed char*>(&eax66));
    eax67 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi55 + 1 + 1) | *ecx57);
    *reinterpret_cast<signed char*>(&eax67) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax67)));
    eax68 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax67) | *eax67);
    *eax68 = reinterpret_cast<unsigned char>(*eax68 | *reinterpret_cast<unsigned char*>(&eax68));
    *edi69 = *eax66;
    eax70 = eax68 - 1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax70) + reinterpret_cast<uint32_t>(eax70)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax70) + reinterpret_cast<uint32_t>(eax70)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx57)));
    *eax70 = reinterpret_cast<unsigned char>(*eax70 | *reinterpret_cast<unsigned char*>(&eax70));
    eax71 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax70) | *eax70);
    *eax71 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax71 + *reinterpret_cast<signed char*>(&eax71))));
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp64) + 2 + 2 + 2);
}

struct s248 {
    signed char[4] pad4;
    struct s248* f4;
};

struct s249 {
    unsigned char f0;
    signed char f1;
};

struct s250 {
    struct s249* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s252 {
    signed char[4] pad4;
    void** f4;
};

struct s251 {
    signed char[4] pad4;
    struct s252* f4;
};

struct s253 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s255 {
    signed char[4] pad4;
    void* f4;
};

struct s254 {
    void** f0;
    struct s255* f4;
};

struct s256 {
    void* f0;
    signed char[25] pad26;
    unsigned char f26;
};

struct s262 {
    signed char[4] pad4;
    int32_t f4;
};

struct s261 {
    signed char[4] pad4;
    struct s262* f4;
};

struct s260 {
    signed char[4] pad4;
    struct s261* f4;
};

struct s259 {
    signed char[4] pad4;
    struct s260* f4;
};

struct s258 {
    signed char[4] pad4;
    struct s259* f4;
};

struct s257 {
    void* f0;
    signed char[3] pad4;
    struct s258* f4;
    signed char[18] pad26;
    unsigned char f26;
    signed char[65509] pad65536;
    unsigned char f65536;
};

struct s263 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s264 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s265 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s266 {
    void* f0;
    signed char[67127321] pad67127322;
    unsigned char f67127322;
};

void fun_10004b9b(int16_t cx) {
    void* ecx1;
    uint1_t cf2;
    int32_t ebx3;
    uint1_t cf4;
    int32_t ebx5;
    int32_t ebx6;
    void* tmp8_7;
    int32_t ebx8;
    uint1_t cf9;
    uint1_t cf10;
    unsigned char* eax11;
    signed char dh12;
    unsigned char* eax13;
    signed char* eax14;
    signed char dh15;
    void** eax16;
    void* al17;
    void* tmp8_18;
    uint1_t cf19;
    void** eax20;
    void** eax21;
    struct s248** esp22;
    void** eax23;
    void* tmp8_24;
    uint1_t cf25;
    uint1_t cf26;
    int32_t ebx27;
    int32_t ebx28;
    int32_t ebx29;
    unsigned char dl30;
    signed char dl31;
    signed char* ebx32;
    signed char* ecx33;
    void* ecx34;
    signed char* ebx35;
    signed char* ebx36;
    unsigned char tmp8_37;
    signed char bh38;
    void** edx39;
    struct s248** esp40;
    unsigned char* ecx41;
    unsigned char* ebx42;
    signed char* ebx43;
    void* tmp8_44;
    void* dh45;
    void* bh46;
    void* dh47;
    uint32_t tmp32_48;
    uint1_t cf49;
    signed char* ebx50;
    signed char* ebx51;
    struct s248** esp52;
    struct s249* esi53;
    void* esi54;
    unsigned char* ebx55;
    signed char* ebx56;
    unsigned char tmp8_57;
    uint1_t cf58;
    struct s248** esp59;
    unsigned char* edi60;
    void* edi61;
    void** ecx62;
    struct s250* eax63;
    signed char* ebx64;
    signed char* ebx65;
    void* tmp8_66;
    uint1_t cf67;
    uint32_t* ebx68;
    int32_t* ebx69;
    uint32_t* ebx70;
    void** esp71;
    void* cs72;
    unsigned char tmp8_73;
    signed char* ebp74;
    uint1_t cf75;
    unsigned char* ebp76;
    unsigned char* ebp77;
    void* esp78;
    signed char* esi79;
    unsigned char* eax80;
    signed char* eax81;
    unsigned char* eax82;
    void** eax83;
    struct s251** esp84;
    struct s251* cs85;
    void* dh86;
    struct s252** esp87;
    void** ecx88;
    unsigned char* ebx89;
    signed char* ebx90;
    void* tmp8_91;
    uint1_t cf92;
    signed char* ebx93;
    void** ebx94;
    uint32_t tmp32_95;
    uint1_t cf96;
    unsigned char tmp8_97;
    uint1_t cf98;
    struct s253* esi99;
    unsigned char* ebx100;
    signed char* ebx101;
    void** ebx102;
    signed char bl103;
    void** eax104;
    unsigned char* ebx105;
    void* tmp8_106;
    uint1_t cf107;
    struct s254* esp108;
    void** eax109;
    struct s256* eax110;
    void* al111;
    void* tmp8_112;
    void** esp113;
    void* ecx114;
    uint32_t* eax115;
    struct s257* eax116;
    void* esp117;
    void* ecx118;
    struct s257** esp119;
    struct s258** esp120;
    unsigned char* ecx121;
    struct s257** esp122;
    struct s258** esp123;
    void* cl124;
    unsigned char* ebp125;
    signed char* ebp126;
    struct s259** esp127;
    unsigned char* esi128;
    struct s260** esp129;
    void* ecx130;
    struct s257** esp131;
    unsigned char tmp8_132;
    uint1_t cf133;
    struct s258** esp134;
    unsigned char* eax135;
    struct s263* eax136;
    struct s257** esp137;
    void* bh138;
    struct s258** esp139;
    unsigned char* ecx140;
    unsigned char* eax141;
    struct s264* eax142;
    struct s259** esp143;
    uint32_t* ecx144;
    unsigned char* eax145;
    struct s265* eax146;
    struct s260** esp147;
    uint32_t* ecx148;
    unsigned char* eax149;
    signed char* eax150;
    struct s266* eax151;
    uint16_t ss152;
    uint16_t ss153;
    uint16_t ss154;
    signed char bh155;
    struct s261** esp156;
    unsigned char* ecx157;
    signed char bh158;
    struct s262** esp159;
    void* ecx160;
    signed char* ebp161;
    signed char* ebp162;
    signed char bh163;
    int32_t* esp164;
    void** ecx165;
    signed char* eax166;
    void* bh167;
    signed char bh168;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    cf2 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx3 + 0x5c000400) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)) + cf4));
    *reinterpret_cast<unsigned char*>(ebx5 + 0x5c000400) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx6 + 0x5c000400) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)) + cf2));
    tmp8_7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(ebx8 - 0x1ffff400))) + cf2);
    cf9 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_7) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)));
    *reinterpret_cast<void**>(&ecx1) = tmp8_7;
    cf10 = reinterpret_cast<uint1_t>(*eax11 < reinterpret_cast<unsigned char>(dh12 + cf9));
    *eax13 = reinterpret_cast<unsigned char>(*eax14 - reinterpret_cast<unsigned char>(dh15 + cf10));
    *reinterpret_cast<void**>(&eax16) = reinterpret_cast<void*>(reinterpret_cast<signed char>(static_cast<int32_t>(reinterpret_cast<signed char>(al17))) + cf10);
    *eax16 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax16) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax16)));
    *eax16 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)));
    *eax16 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax16)));
    tmp8_18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax16) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx1) + 1)));
    cf19 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_18) < reinterpret_cast<unsigned char>(*eax16));
    *eax16 = tmp8_18;
    *reinterpret_cast<void**>(&eax20) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax16)))) + cf19);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax20) + reinterpret_cast<uint32_t>(eax20)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax20) + reinterpret_cast<uint32_t>(eax20)) ^ reinterpret_cast<uint32_t>(eax20);
    *eax20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    *eax20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    *eax20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)) + 8);
    esp22 = reinterpret_cast<struct s248**>(reinterpret_cast<int32_t>(__return_address()) + 4 + 2);
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<uint32_t>(eax21));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<uint32_t>(eax21));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    eax23 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax21) | reinterpret_cast<unsigned char>(*eax21));
    tmp8_24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    cf25 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_24) < reinterpret_cast<unsigned char>(*eax23));
    *eax23 = tmp8_24;
    cf26 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx27 + 0x5c000400) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)) + cf25));
    *reinterpret_cast<unsigned char*>(ebx28 + 0x5c000400) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx29 + 0x5c000400) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx1)) + cf26));
    dl30 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(dl31 + *ebx32) + cf26);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) & reinterpret_cast<uint32_t>(ecx1);
    ecx33 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx1) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx33) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)))) {
        addr_10004bf6_2:
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
        ecx34 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx33) + reinterpret_cast<unsigned char>(*eax23));
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<uint32_t>(eax23));
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
        *ebx35 = reinterpret_cast<signed char>(*ebx36 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx34)));
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
        tmp8_37 = reinterpret_cast<unsigned char>(dl30 + bh38);
        *reinterpret_cast<unsigned char*>(&edx39) = tmp8_37;
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx34)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax23) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx34)) + reinterpret_cast<uint1_t>(tmp8_37 < dl30)))));
        *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23))));
        *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    } else {
        if (0) 
            goto addr_10004be0_4; else 
            goto addr_10004be0_4;
    }
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx34)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *edx39 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx39) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx34) + 1)));
    *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) ^ reinterpret_cast<uint32_t>(eax23);
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    esp40 = &(*esp22)->f4;
    *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23))));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    ecx41 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx34) + reinterpret_cast<unsigned char>(*eax23));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<uint32_t>(eax23));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *ebx42 = reinterpret_cast<unsigned char>(*ebx43 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    tmp8_44 = reinterpret_cast<void*>(reinterpret_cast<signed char>(dh45) + reinterpret_cast<signed char>(bh46));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1) = tmp8_44;
    *edx39 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx39) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*edx39) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_44) < reinterpret_cast<unsigned char>(dh47))))));
    tmp32_48 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) + reinterpret_cast<uint32_t>(eax23);
    cf49 = reinterpret_cast<uint1_t>(tmp32_48 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) = tmp32_48;
    *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax23) + cf49))));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *ebx50 = reinterpret_cast<signed char>(*ebx51 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx41) + 1));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) ^ reinterpret_cast<uint32_t>(eax23);
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    esp52 = &(*esp40)->f4;
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    esi53 = reinterpret_cast<struct s249*>(reinterpret_cast<int32_t>(esi54) + 1 + 1 + 1);
    *reinterpret_cast<void**>(&ecx41) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)) + reinterpret_cast<unsigned char>(*eax23));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<uint32_t>(eax23));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *ebx55 = reinterpret_cast<unsigned char>(*ebx56 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    tmp8_57 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&esi53->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    cf58 = reinterpret_cast<uint1_t>(tmp8_57 < *reinterpret_cast<unsigned char*>(&esi53->f0));
    *reinterpret_cast<unsigned char*>(&esi53->f0) = tmp8_57;
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) - (reinterpret_cast<unsigned char>(esi53) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax23) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi53) + cf58))));
    *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23))));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx41)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23) + 12) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23) + 12) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx41) + 1));
    *ecx41 = reinterpret_cast<unsigned char>(*ecx41 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23))));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    esp59 = &(*esp52)->f4;
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    edi60 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi61) + 1 + 1);
    ecx62 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx41) + reinterpret_cast<unsigned char>(*eax23));
    eax63 = reinterpret_cast<struct s250*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(*ecx62));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    *ebx64 = reinterpret_cast<signed char>(*ebx65 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx62)));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    tmp8_66 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx39) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx62)));
    cf67 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_66) < reinterpret_cast<unsigned char>(*edx39));
    *edx39 = tmp8_66;
    *ebx68 = *ebx69 - (reinterpret_cast<int32_t>(edx39) + reinterpret_cast<uint1_t>(*ebx70 < reinterpret_cast<int32_t>(edx39) + cf67));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(eax63)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(eax63)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    esp71 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp59) - 2);
    *esp71 = cs72;
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) - (reinterpret_cast<unsigned char>(esi53) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax63->f0) < reinterpret_cast<unsigned char>(&esi53->f0))));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx62)));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    tmp8_73 = reinterpret_cast<unsigned char>(*ebp74 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx62) + 1));
    cf75 = reinterpret_cast<uint1_t>(tmp8_73 < *ebp76);
    *ebp77 = tmp8_73;
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63))) + cf75);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(eax63)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(eax63)) ^ reinterpret_cast<uint32_t>(eax63);
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    esp78 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp71) + 4);
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    eax63->f0 = reinterpret_cast<struct s249*>(reinterpret_cast<unsigned char>(eax63->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)));
    esi79 = &esi53->f1;
    *reinterpret_cast<void**>(&eax63) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax63)) + 8);
    eax80 = &eax63->f65536;
    *eax80 = reinterpret_cast<unsigned char>(*eax80 + *reinterpret_cast<signed char*>(&eax80));
    eax81 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax80) | *eax80);
    *eax81 = reinterpret_cast<signed char>(*eax81 + *reinterpret_cast<signed char*>(&eax81));
    __asm__("ficomp dword [ecx]");
    eax82 = reinterpret_cast<unsigned char*>(eax81 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax82) + reinterpret_cast<uint32_t>(eax82)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax82) + reinterpret_cast<uint32_t>(eax82)) + *reinterpret_cast<unsigned char*>(&eax82));
    *eax82 = reinterpret_cast<unsigned char>(*eax82 | *reinterpret_cast<unsigned char*>(&eax82));
    eax83 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax82) | reinterpret_cast<uint32_t>(*ecx62));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    esp84 = reinterpret_cast<struct s251**>(reinterpret_cast<int32_t>(esp78) - 2);
    *esp84 = cs85;
    dh86 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax83))))));
    *reinterpret_cast<void**>(&eax83) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83))));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx62)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *esi79 = reinterpret_cast<signed char>(*esi79 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx62) + 1));
    *reinterpret_cast<void**>(&eax83) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)) ^ reinterpret_cast<uint32_t>(eax83);
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    esp87 = &(*esp84)->f4;
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    ecx88 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx62) + reinterpret_cast<unsigned char>(*eax83));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<uint32_t>(eax83));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *ebx89 = reinterpret_cast<unsigned char>(*ebx90 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    tmp8_91 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax83) + 1)));
    cf92 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_91) < reinterpret_cast<unsigned char>(*eax83));
    *eax83 = tmp8_91;
    *reinterpret_cast<void**>(&ecx88) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)) - reinterpret_cast<unsigned char>(*ebx93 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*ebx94) + cf92))));
    tmp32_95 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)) + reinterpret_cast<uint32_t>(eax83);
    cf96 = reinterpret_cast<uint1_t>(tmp32_95 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)) = tmp32_95;
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(dh86) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(dh86) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax83) + cf96))));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    tmp8_97 = reinterpret_cast<unsigned char>(*edi60 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx88) + 1));
    cf98 = reinterpret_cast<uint1_t>(tmp8_97 < *edi60);
    *edi60 = tmp8_97;
    *reinterpret_cast<void**>(&eax83) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)))) + cf98);
    *reinterpret_cast<void**>(&eax83) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)) ^ reinterpret_cast<unsigned char>(*eax83));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    esi99 = reinterpret_cast<struct s253*>(esi79 + 1 + 1);
    *reinterpret_cast<void**>(&eax83) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)) + 8);
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<uint32_t>(eax83));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *eax83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax83) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax83)));
    *ebx100 = reinterpret_cast<unsigned char>(*ebx101 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax83) + reinterpret_cast<uint32_t>(eax83)) + reinterpret_cast<uint32_t>(eax83);
    *reinterpret_cast<unsigned char*>(&ebx102) = reinterpret_cast<unsigned char>(bl103 - reinterpret_cast<unsigned char>(*edx39));
    eax104 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax83) | reinterpret_cast<unsigned char>(*ecx88));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    *reinterpret_cast<void**>(&ecx88) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebx102) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*ebx102))))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<uint32_t>(eax104)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<uint32_t>(eax104)) + reinterpret_cast<uint32_t>(ecx88);
    *reinterpret_cast<unsigned char*>(&ebx105) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx102) ^ reinterpret_cast<unsigned char>(*edx39));
    *eax104 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)))));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    tmp8_106 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    cf107 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_106) < reinterpret_cast<unsigned char>(*eax104));
    *eax104 = tmp8_106;
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104))) + cf107);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<uint32_t>(eax104)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax104) + reinterpret_cast<uint32_t>(eax104)) ^ reinterpret_cast<uint32_t>(eax104);
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    esp108 = reinterpret_cast<struct s254*>(&(*esp87)->f4);
    eax109 = esp108->f0;
    *eax109 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax109) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)));
    esi99->f4 = reinterpret_cast<unsigned char>(esi99->f4 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax109)));
    *ecx88 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx88) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax109)));
    *eax109 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax109) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax109)));
    *eax109 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax109) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax109)));
    *eax109 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax109) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax109)));
    eax110 = reinterpret_cast<struct s256*>(reinterpret_cast<uint32_t>(eax109) | reinterpret_cast<unsigned char>(*eax109));
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)));
    al111 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)) ^ 26) | reinterpret_cast<unsigned char>(*ecx88));
    tmp8_112 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al111)));
    *reinterpret_cast<void**>(&eax110) = tmp8_112;
    *reinterpret_cast<void**>(&eax110) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_112) < reinterpret_cast<unsigned char>(al111)))))) | reinterpret_cast<unsigned char>(*ecx88));
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)));
    *reinterpret_cast<void**>(&eax110) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax110->f0) + (reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax110->f0))))))));
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)));
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx88)));
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)));
    *ecx88 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx88) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax110) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax110) + reinterpret_cast<uint32_t>(eax110)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax110) + reinterpret_cast<uint32_t>(eax110)) ^ reinterpret_cast<uint32_t>(eax110);
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax110)));
    esp113 = &esp108->f4->f4;
    *reinterpret_cast<void**>(&eax110) = reinterpret_cast<void*>(0);
    eax110->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax110->f0)));
    ecx114 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx88) + reinterpret_cast<unsigned char>(eax110->f0));
    eax110->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax110->f0) + reinterpret_cast<uint32_t>(eax110));
    eax110->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax110->f0)));
    eax110->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax110->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx114)));
    eax110->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax110->f0)));
    eax110->f26 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax110->f26));
    eax115 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax110) - 1);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax115) + reinterpret_cast<uint32_t>(eax115)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax115) + reinterpret_cast<uint32_t>(eax115)) + reinterpret_cast<uint32_t>(eax115);
    eax116 = reinterpret_cast<struct s257*>(reinterpret_cast<uint32_t>(eax115) | *eax115);
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax116)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax116)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx114)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax116)));
    *edx39 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx39) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax116))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) ^ reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax116)));
    esp117 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp113) + 4);
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax116)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    ecx118 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx114) + reinterpret_cast<unsigned char>(eax116->f0));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<uint32_t>(eax116));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx118)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f26 = reinterpret_cast<unsigned char>(eax116->f26 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx118)));
    esp119 = reinterpret_cast<struct s257**>(reinterpret_cast<int32_t>(esp117) - 4);
    *esp119 = eax116;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) & reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx118)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) ^ reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    esp120 = &(*esp119)->f4;
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    ecx121 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx118) + reinterpret_cast<unsigned char>(eax116->f0));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<uint32_t>(eax116));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx121)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f26 = reinterpret_cast<unsigned char>(eax116->f26 + *reinterpret_cast<unsigned char*>(&edx39));
    esp122 = reinterpret_cast<struct s257**>(esp120 - 1);
    *esp122 = eax116;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) & reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx121)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116) + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116) + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *ecx121 = reinterpret_cast<unsigned char>(*ecx121 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    esp123 = &(*esp122)->f4;
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    cl124 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx121)) + reinterpret_cast<unsigned char>(eax116->f0));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<uint32_t>(eax116));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<unsigned char>(cl124));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f26 = reinterpret_cast<unsigned char>(eax116->f26 + *reinterpret_cast<unsigned char*>(&ebx105));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<unsigned char>(cl124));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebp125 = reinterpret_cast<unsigned char>(*ebp126 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) ^ reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    esp127 = &(*esp123)->f4;
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    esi128 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi99) + 1 + 1 + 1 + 1 + 1);
    *reinterpret_cast<void**>(&ecx121) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(cl124) + reinterpret_cast<unsigned char>(eax116->f0));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<uint32_t>(eax116));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx121)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 0x70) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 0x70) + *reinterpret_cast<unsigned char*>(&ebx105));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116))));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx121)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *esi128 = reinterpret_cast<unsigned char>(*esi128 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) ^ reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    esp129 = &(*esp127)->f4;
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(0);
    ecx130 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx121) + reinterpret_cast<unsigned char>(eax116->f0));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<uint32_t>(eax116));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx130)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f26 = reinterpret_cast<unsigned char>(eax116->f26 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax116) + 1));
    esp131 = reinterpret_cast<struct s257**>(esp129 - 1);
    *esp131 = eax116;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) & reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax116->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx130)));
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    tmp8_132 = reinterpret_cast<unsigned char>(*edi60 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    cf133 = reinterpret_cast<uint1_t>(tmp8_132 < *edi60);
    *edi60 = tmp8_132;
    eax116->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0))) + cf133);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax116) + reinterpret_cast<uint32_t>(eax116)) ^ reinterpret_cast<uint32_t>(eax116);
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    esp134 = &(*esp131)->f4;
    eax116->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax116->f0)));
    *reinterpret_cast<void**>(&eax116) = reinterpret_cast<void*>(8);
    eax135 = &eax116->f65536;
    *eax135 = reinterpret_cast<unsigned char>(*eax135 + *reinterpret_cast<signed char*>(&eax135));
    eax136 = reinterpret_cast<struct s263*>(reinterpret_cast<uint32_t>(eax135) | *eax135);
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    esp137 = reinterpret_cast<struct s257**>(esp134 - 1);
    *esp137 = reinterpret_cast<struct s257*>(0x4000b1a);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 80) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 80) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx130) + 1));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) & reinterpret_cast<uint32_t>(ecx130));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx130)));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax136) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136))));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx130)));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<signed char>(bh138));
    *reinterpret_cast<void**>(&eax136) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136)) ^ reinterpret_cast<uint32_t>(eax136);
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    esp139 = &(*esp137)->f4;
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    eax136->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax136->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    ecx140 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx130) + reinterpret_cast<unsigned char>(eax136->f0));
    eax141 = &eax136->f65536;
    *eax141 = reinterpret_cast<unsigned char>(*eax141 + *reinterpret_cast<signed char*>(&eax141));
    eax142 = reinterpret_cast<struct s264*>(reinterpret_cast<uint32_t>(eax141) | *eax141);
    eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
    if (!eax142->f0) {
        addr_10004ef6_14:
        esp143 = &(*esp139)->f4;
        eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
        eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
        ecx144 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx140) + reinterpret_cast<unsigned char>(eax142->f0));
        eax145 = &eax142->f65536;
        *eax145 = reinterpret_cast<unsigned char>(*eax145 + *reinterpret_cast<signed char*>(&eax145));
        eax146 = reinterpret_cast<struct s265*>(reinterpret_cast<uint32_t>(eax145) | *eax145);
        eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
        if (reinterpret_cast<signed char>(eax146->f0) < reinterpret_cast<signed char>(0) != __intrinsic()) {
            addr_10004f26_15:
            esp147 = &(*esp143)->f4;
            eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
            eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
            ecx148 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx144) + reinterpret_cast<unsigned char>(eax146->f0));
            eax149 = &eax146->f65536;
            *eax149 = reinterpret_cast<unsigned char>(*eax149 + *reinterpret_cast<signed char*>(&eax149));
            eax150 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax149) | *eax149);
            *eax150 = reinterpret_cast<signed char>(*eax150 + *reinterpret_cast<signed char*>(&eax150));
            eax151 = reinterpret_cast<struct s266*>(reinterpret_cast<uint32_t>(eax150) | *ecx148);
            *reinterpret_cast<void**>(&eax151) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151))));
            *ecx148 = ss152;
        } else {
            eax146 = reinterpret_cast<struct s265*>(reinterpret_cast<uint32_t>(eax146) | *ecx144);
            *reinterpret_cast<void**>(&eax146) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146))));
            *ecx144 = ss153;
            if (__intrinsic()) 
                goto addr_10004f14_17; else 
                goto addr_10004f14_17;
        }
    } else {
        eax142 = reinterpret_cast<struct s264*>(reinterpret_cast<uint32_t>(eax142) | *ecx140);
        *reinterpret_cast<void**>(&eax142) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142))));
        *ecx140 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(ss154));
        if (__intrinsic()) 
            goto addr_10004ee4_19; else 
            goto addr_10004ee4_19;
    }
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx148)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + bh155);
    *reinterpret_cast<void**>(&eax151) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151)) ^ reinterpret_cast<uint32_t>(eax151);
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    esp156 = &(*esp147)->f4;
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    *reinterpret_cast<void**>(&eax151) = reinterpret_cast<void*>(0);
    ecx157 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx148) + reinterpret_cast<unsigned char>(eax151->f0));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<uint32_t>(eax151));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx157)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 0x42150) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 0x42150) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx157)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx157)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151) + 12) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151) + 12) + bh158);
    *ecx157 = reinterpret_cast<unsigned char>(*ecx157 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    *reinterpret_cast<void**>(&eax151) = reinterpret_cast<void*>(0);
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    esp159 = &(*esp156)->f4;
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    ecx160 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx157) + reinterpret_cast<unsigned char>(eax151->f0));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<uint32_t>(eax151));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx160)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 0x40048) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx39) + reinterpret_cast<int32_t>(ebx105) + 0x40048) + *reinterpret_cast<unsigned char*>(&edx39));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx160)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *ebp161 = reinterpret_cast<signed char>(*ebp162 + bh163);
    *reinterpret_cast<void**>(&eax151) = reinterpret_cast<void*>(0);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151)) ^ reinterpret_cast<uint32_t>(eax151);
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    esp164 = &(*esp159)->f4;
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    ecx165 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx160) + reinterpret_cast<unsigned char>(eax151->f0));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<uint32_t>(eax151));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx165)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f67127322 = reinterpret_cast<unsigned char>(eax151->f67127322 + *reinterpret_cast<unsigned char*>(&ebx105));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx165)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx39) + 1)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx165)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<uint32_t>(eax151)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx165)));
    *reinterpret_cast<void**>(&eax151) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax151->f0)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    eax151->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax151->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax151)));
    *reinterpret_cast<void**>(&ecx165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx165)) + reinterpret_cast<unsigned char>(eax151->f0));
    eax166 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax151) + reinterpret_cast<int32_t>(*ecx165));
    *eax166 = reinterpret_cast<signed char>(*eax166 + *reinterpret_cast<signed char*>(&eax166));
    *eax166 = reinterpret_cast<signed char>(*eax166 + *reinterpret_cast<signed char*>(&eax166));
    *ebx105 = reinterpret_cast<unsigned char>(*ebx105 + *reinterpret_cast<unsigned char*>(&edx39));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax166) + reinterpret_cast<uint32_t>(eax166)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax166) + reinterpret_cast<uint32_t>(eax166)) & reinterpret_cast<uint32_t>(eax166);
    goto *esp164;
    addr_10004f14_17:
    eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
    eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
    eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx144)));
    eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
    *edx39 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx39) + reinterpret_cast<signed char>(bh167));
    *reinterpret_cast<void**>(&eax146) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax146) + reinterpret_cast<uint32_t>(eax146)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax146) + reinterpret_cast<uint32_t>(eax146)) ^ reinterpret_cast<uint32_t>(eax146);
    eax146->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax146->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
    goto addr_10004f26_15;
    addr_10004ee4_19:
    eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
    eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
    eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx140)));
    eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
    *ecx140 = reinterpret_cast<unsigned char>(*ecx140 + bh168);
    *reinterpret_cast<void**>(&eax142) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax142) + reinterpret_cast<uint32_t>(eax142)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax142) + reinterpret_cast<uint32_t>(eax142)) ^ reinterpret_cast<uint32_t>(eax142);
    eax142->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax142->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax142)));
    goto addr_10004ef6_14;
    addr_10004be0_4:
    *eax23 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)))));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx33)));
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    *ecx33 = reinterpret_cast<signed char>(*ecx33 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx33) + 1));
    *reinterpret_cast<void**>(&eax23) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint32_t>(eax23)) ^ reinterpret_cast<uint32_t>(eax23);
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    esp22 = &(*esp22)->f4;
    *eax23 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax23) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax23)));
    goto addr_10004bf6_2;
}

struct s267 {
    signed char[268637787] pad268637787;
    signed char f268637787;
};

struct s268 {
    signed char[92] pad92;
    signed char f92;
};

struct s269 {
    signed char[92] pad92;
    signed char f92;
};

struct s270 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s271 {
    signed char[4] pad4;
    struct s270* f4;
};

void fun_100052c7(void* ecx) {
    int1_t less_or_equal2;
    int32_t* eax3;
    int32_t* eax4;
    int32_t eax5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    int32_t* eax9;
    int32_t* eax10;
    int32_t eax11;
    signed char* eax12;
    struct s267* eax13;
    struct s268* ebx14;
    struct s269* ebx15;
    struct s270** esp16;
    struct s271* ebp17;
    unsigned char al18;
    unsigned char tmp8_19;
    signed char* ecx20;
    struct s270* ebx21;
    int16_t* esp22;
    int16_t es23;
    int16_t* esp24;
    int16_t es25;
    signed char* eax26;
    unsigned char tmp8_27;
    uint1_t cf28;
    unsigned char* eax29;

    if (!less_or_equal2) {
        *eax3 = *eax4 + eax5;
        *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
        *eax9 = *eax10 + eax11;
        eax12 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax13) + 0x1003165b);
        ebx14->f92 = reinterpret_cast<signed char>(ebx15->f92 + *reinterpret_cast<signed char*>(&ecx));
        esp16 = &ebp17->f4;
        al18 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax12)));
        tmp8_19 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al18));
        *reinterpret_cast<unsigned char*>(&eax12) = tmp8_19;
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + *eax12) + reinterpret_cast<uint1_t>(tmp8_19 < al18));
        ecx20 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) - 1);
        if (reinterpret_cast<uint1_t>(!!ecx20) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<unsigned char*>(&eax12))) {
        }
        ebx21 = *esp16;
        esp22 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp16 + 1) - 2);
        *esp22 = es23;
        esp24 = esp22 - 1;
        *esp24 = es25;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax12) + reinterpret_cast<int32_t>(eax12) - 48) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax12) + reinterpret_cast<int32_t>(eax12) - 48) | *reinterpret_cast<unsigned char*>(&ecx20));
        *reinterpret_cast<int32_t*>(esp24 - 2) = 0x10005351;
        eax26 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx21) + reinterpret_cast<int32_t>(ebx21) * 2 + 27)());
        *ecx20 = reinterpret_cast<signed char>(*ecx20 + *reinterpret_cast<signed char*>(&ebx21));
        *eax26 = reinterpret_cast<signed char>(*eax26 + *reinterpret_cast<signed char*>(&eax26));
        *ecx20 = reinterpret_cast<signed char>(*ecx20 + *reinterpret_cast<signed char*>(&eax26));
        tmp8_27 = reinterpret_cast<unsigned char>(ebx21->f92 + *reinterpret_cast<unsigned char*>(&ecx20));
        cf28 = reinterpret_cast<uint1_t>(tmp8_27 < ebx21->f92);
        ebx21->f92 = tmp8_27;
        eax29 = reinterpret_cast<unsigned char*>(eax26 - 1);
        *eax29 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<signed char*>(&eax29)) + cf28);
        *eax29 = reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<signed char*>(&eax29));
        *eax29 = reinterpret_cast<unsigned char>(*eax29 + reinterpret_cast<int32_t>(eax29));
    } else {
        return;
    }
}

struct s272 {
    signed char[1] pad1;
    unsigned char f1;
};

signed char g8000803;

void fun_100052f3(int32_t* ecx) {
    unsigned char* eax2;
    unsigned char* eax3;
    unsigned char al4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    signed char* eax19;
    signed char* eax20;
    signed char al21;
    unsigned char tmp8_22;
    signed char* eax23;
    signed char al24;
    uint1_t cf25;
    unsigned char* eax26;
    unsigned char* eax27;
    int32_t edx28;
    int32_t eax29;
    int32_t edx30;
    int32_t eax31;
    int32_t eax32;
    signed char* eax33;
    signed char* eax34;
    signed char dh35;
    struct s272* ecx36;
    signed char* eax37;
    signed char* eax38;
    signed char* eax39;
    signed char dh40;
    unsigned char* ecx41;
    signed char* eax42;
    signed char* eax43;
    signed char al44;
    unsigned char al45;
    signed char dl46;
    unsigned char* eax47;
    unsigned char* eax48;
    uint32_t* eax49;
    int32_t ebx50;
    int32_t* eax51;
    int32_t ebx52;
    int32_t eax53;
    signed char tmp8_54;
    signed char dl55;
    void* ebx56;
    int32_t ebx57;
    void* ebx58;
    int32_t ebx59;
    unsigned char bl60;
    int32_t* edx61;
    int32_t* edx62;
    int32_t eax63;
    signed char* edi64;
    signed char* edi65;
    signed char dl66;
    int32_t ebp67;

    *ecx = *ecx + 1;
    *eax2 = reinterpret_cast<unsigned char>(*eax3 | al4);
    *reinterpret_cast<signed char*>(eax5 + eax6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax7 + eax8) + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *eax19 = reinterpret_cast<signed char>(*eax20 + al21);
    tmp8_22 = reinterpret_cast<unsigned char>(*eax23 + al24);
    cf25 = reinterpret_cast<uint1_t>(tmp8_22 < *eax26);
    *eax27 = tmp8_22;
    *reinterpret_cast<uint32_t*>(edx28 + eax29) = *reinterpret_cast<int32_t*>(edx30 + eax31) + eax32 + cf25;
    *eax33 = reinterpret_cast<signed char>(*eax34 + dh35);
    ecx36 = reinterpret_cast<struct s272*>(reinterpret_cast<int32_t>(ecx) - 1);
    *eax38 = reinterpret_cast<signed char>(*eax39 + dh40);
    ecx41 = &ecx36->f1;
    *eax42 = reinterpret_cast<signed char>(*eax43 + al44);
    *ecx41 = reinterpret_cast<unsigned char>(*ecx41 ^ al45);
    *ecx41 = reinterpret_cast<unsigned char>(*ecx41 + dl46);
    *eax47 = reinterpret_cast<unsigned char>(*eax48 | *reinterpret_cast<unsigned char*>(&ecx41));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(eax49) + ebx50 * 2) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax51) + ebx52 * 2) + eax53);
    tmp8_54 = reinterpret_cast<signed char>(g8000803 + dl55);
    g8000803 = tmp8_54;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx56) + ebx57 * 2 + 28) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx58) + ebx59 * 2 + 28) | bl60);
    *edx61 = *edx62 + eax63;
    *edi64 = reinterpret_cast<signed char>(*edi65 + dl66);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 - 4) = ebp67;
}

struct s273 {
    signed char[22] pad22;
    int32_t f22;
};

struct s274 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s275 {
    signed char[92] pad92;
    signed char f92;
};

struct s276 {
    signed char[92] pad92;
    signed char f92;
};

struct s277 {
    signed char[1] pad1;
    struct s276* f1;
};

struct s278 {
    signed char[8] pad8;
    signed char f8;
};

struct s279 {
    signed char[8] pad8;
    signed char f8;
};

struct s280 {
    unsigned char f0;
    signed char[134420058] pad134420059;
    signed char f134420059;
};

struct s281 {
    signed char[4] pad4;
    void* f4;
};

struct s283 {
    signed char[4] pad4;
    void* f4;
};

struct s282 {
    int32_t f0;
    struct s283* f4;
};

struct s285 {
    signed char[92] pad92;
    signed char f92;
};

struct s284 {
    struct s283* f0;
    struct s285* f2;
};

unsigned char gb000115c;

struct s286 {
    int32_t f0;
    void* f4;
};

struct s287 {
    void* f0;
    int16_t f4;
};

struct s288 {
    signed char[92] pad92;
    int32_t f92;
};

void fun_10005370(void* ecx) {
    struct s273* ebx2;
    void** eax3;
    void** ecx4;
    struct s274* ebx5;
    struct s275* ebx6;
    struct s276** esi7;
    struct s277* esi8;
    void* al9;
    void* tmp8_10;
    int32_t* esp11;
    int32_t ebx12;
    void* tmp8_13;
    void* dl14;
    uint1_t cf15;
    signed char* edx16;
    signed char* edx17;
    signed char dl18;
    struct s278* edi19;
    struct s279* edi20;
    signed char dh21;
    unsigned char tmp8_22;
    uint1_t cf23;
    void** eax24;
    void* tmp32_25;
    uint1_t cf26;
    unsigned char* ecx27;
    unsigned char tmp8_28;
    uint1_t cf29;
    struct s276** esp30;
    struct s276* ebx31;
    signed char dl32;
    int32_t* esp33;
    struct s280* eax34;
    unsigned char tmp8_35;
    signed char dl36;
    uint1_t cf37;
    int32_t* esp38;
    int32_t ebp39;
    struct s281** esp40;
    struct s281* ebp41;
    signed char* eax42;
    void** esp43;
    unsigned char al44;
    unsigned char tmp8_45;
    unsigned char* ecx46;
    void* ebx47;
    int16_t* esp48;
    int16_t es49;
    int16_t* esp50;
    int16_t es51;
    int32_t* esp52;
    int32_t* esp53;
    int32_t* esp54;
    struct s282* esp55;
    int32_t* edx56;
    void** eax57;
    struct s284* esp58;
    struct s283* ss59;
    struct s285** esp60;
    unsigned char* edx61;
    signed char* edx62;
    signed char* edi63;
    signed char* edi64;
    signed char dl65;
    unsigned char* edx66;
    signed char* edx67;
    struct s285* ebx68;
    struct s283** esp69;
    void* ecx70;
    void** esi71;
    void** esp72;
    void* al73;
    void* tmp8_74;
    int32_t* ecx75;
    void* ebx76;
    int16_t* esp77;
    int16_t es78;
    void** esp79;
    void* es80;
    unsigned char* edx81;
    signed char* edx82;
    void* ebx83;
    struct s286* esp84;
    void* eax85;
    struct s287* esp86;
    void** eax87;
    void* ebx88;
    int16_t* esp89;
    int16_t ss90;
    unsigned char* ecx91;
    signed char dh92;
    int32_t* edx93;
    int32_t* edx94;
    int32_t* esp95;
    void** eax96;
    int32_t* edx97;
    int32_t* edx98;
    struct s288* esi99;
    void* al100;
    void* tmp8_101;

    eax3 = reinterpret_cast<void**>(ebx2->f22());
    ecx4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<unsigned char>(*eax3));
    ebx5->f92 = reinterpret_cast<unsigned char>(ebx6->f92 + *reinterpret_cast<unsigned char*>(&ecx4));
    esi7 = &esi8->f1;
    al9 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3))));
    tmp8_10 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al9)));
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_10) + reinterpret_cast<unsigned char>(*ecx4)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_10) < reinterpret_cast<unsigned char>(al9)));
    esp11 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 + 4);
    *eax3 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax3) | *reinterpret_cast<unsigned char*>(&ecx4));
    ebx12 = *esp11;
    *ecx4 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx4) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    tmp8_13 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx4) + reinterpret_cast<signed char>(dl14));
    cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_13) < reinterpret_cast<unsigned char>(*ecx4));
    *ecx4 = tmp8_13;
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + 2) + cf15);
    *edx16 = reinterpret_cast<signed char>(*edx17 + dl18);
    *eax3 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax3) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx12)));
    edi19->f8 = reinterpret_cast<signed char>(edi20->f8 + dh21);
    *eax3 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax3) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    tmp8_22 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    cf23 = reinterpret_cast<uint1_t>(tmp8_22 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) = tmp8_22;
    eax24 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax3) - (reinterpret_cast<unsigned char>(*eax3) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax3) < reinterpret_cast<unsigned char>(*eax3) + cf23)));
    tmp32_25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<uint32_t>(eax24));
    cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_25) < reinterpret_cast<unsigned char>(*eax24));
    *eax24 = tmp32_25;
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) - (reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax24) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax24) + cf26))));
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax24)));
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<uint32_t>(eax24));
    ecx27 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx4) + reinterpret_cast<unsigned char>(*eax24));
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax24)));
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx27)));
    tmp8_28 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24) - 32) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx27)));
    cf29 = reinterpret_cast<uint1_t>(tmp8_28 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24) - 32));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24) - 32) = tmp8_28;
    esp30 = reinterpret_cast<struct s276**>(esp11 + 1 - 1);
    *esp30 = *esi7;
    ebx31 = *esp30;
    __asm__("in al, 0xff");
    *ecx27 = reinterpret_cast<unsigned char>(*ecx27 ^ reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax24)) + reinterpret_cast<unsigned char>(*eax24)) + cf29));
    *ecx27 = reinterpret_cast<unsigned char>(*ecx27 + dl32);
    esp33 = reinterpret_cast<int32_t*>(esp30 + 1 - 1);
    *esp33 = 0x100053c3;
    eax34 = reinterpret_cast<struct s280*>(*ecx27());
    tmp8_35 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax34) + reinterpret_cast<int32_t>(eax34)) + dl36);
    cf37 = reinterpret_cast<uint1_t>(tmp8_35 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax34) + reinterpret_cast<int32_t>(eax34)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax34) + reinterpret_cast<int32_t>(eax34)) = tmp8_35;
    *reinterpret_cast<unsigned char*>(&eax34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax34) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax34) < reinterpret_cast<unsigned char>(1 + cf37))));
    *reinterpret_cast<unsigned char*>(&eax34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax34) + eax34->f0);
    esp38 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp33 + 1) + 2 - 4);
    *esp38 = ebp39;
    *reinterpret_cast<unsigned char*>(&eax34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax34) + eax34->f0);
    eax34->f0 = reinterpret_cast<unsigned char>(eax34->f0 + reinterpret_cast<int32_t>(eax34));
    esp40 = reinterpret_cast<struct s281**>(reinterpret_cast<int32_t>(esp38) + 2 - 4);
    *esp40 = ebp41;
    eax34->f0 = reinterpret_cast<unsigned char>(eax34->f0 + *reinterpret_cast<unsigned char*>(&eax34));
    eax34->f0 = reinterpret_cast<unsigned char>(eax34->f0 + reinterpret_cast<int32_t>(eax34));
    eax42 = &eax34->f134420059;
    ebx31->f92 = reinterpret_cast<signed char>(ebx31->f92 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx27)));
    esp43 = &(*esp40)->f4;
    al44 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax42)));
    tmp8_45 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al44));
    *reinterpret_cast<unsigned char*>(&eax42) = tmp8_45;
    ecx46 = ecx27 - 1;
    if (reinterpret_cast<uint1_t>(!!ecx46) & reinterpret_cast<uint1_t>(!!(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) + *eax42) + (tmp8_45 < al44)))) {
    }
    ebx47 = *esp43;
    esp48 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp43 + 1) - 2);
    *esp48 = es49;
    esp50 = esp48 - 1;
    *esp50 = es51;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx47) + reinterpret_cast<int32_t>(ebx47) * 2 + 17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx47) + reinterpret_cast<int32_t>(ebx47) * 2 + 17) | *reinterpret_cast<unsigned char*>(&ebx47));
    esp52 = reinterpret_cast<int32_t*>(esp50 - 2);
    *esp52 = 0x100053f3;
    *ecx46();
    esp53 = esp52 + 1 - 1;
    *esp53 = 0x100053f7;
    *ecx46();
    esp54 = esp53 + 1 - 1;
    *esp54 = 0x100053fb;
    *ecx46();
    esp55 = reinterpret_cast<struct s282*>(esp54 + 1 - 1);
    esp55->f0 = 0x100053ff;
    eax57 = reinterpret_cast<void**>(*edx56());
    esp58 = reinterpret_cast<struct s284*>(&esp55->f4);
    gb000115c = reinterpret_cast<unsigned char>(gb000115c | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax57) + reinterpret_cast<int32_t>(eax57)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax57) + reinterpret_cast<int32_t>(eax57)) + *reinterpret_cast<unsigned char*>(&ebx47));
    *eax57 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax57) + reinterpret_cast<int32_t>(eax57));
    ss59 = esp58->f0;
    esp60 = &esp58->f2;
    *edx61 = reinterpret_cast<unsigned char>(*edx62 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *ecx46 = reinterpret_cast<unsigned char>(*ecx46 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *edi63 = reinterpret_cast<signed char>(*edi64 + dl65);
    *eax57 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax57) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *ecx46 = reinterpret_cast<unsigned char>(*ecx46 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *edx66 = reinterpret_cast<unsigned char>(*edx67 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    ebx68 = *esp60;
    esp69 = reinterpret_cast<struct s283**>(reinterpret_cast<int32_t>(esp60 + 1) - 2);
    *esp69 = ss59;
    ecx70 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx46) + reinterpret_cast<unsigned char>(*eax57));
    ebx68->f92 = reinterpret_cast<signed char>(ebx68->f92 + *reinterpret_cast<signed char*>(&ecx70));
    esi71 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi7) + 1 + 1);
    esp72 = &(*esp69)->f4;
    al73 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57))));
    tmp8_74 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al73)));
    *reinterpret_cast<void**>(&eax57) = tmp8_74;
    *reinterpret_cast<void**>(&eax57) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)) + reinterpret_cast<unsigned char>(*eax57)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_74) < reinterpret_cast<unsigned char>(al73)));
    ecx75 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx70) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx75) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax57))) {
    }
    ebx76 = *esp72;
    esp77 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp72 + 1) - 2);
    *esp77 = es78;
    esp79 = reinterpret_cast<void**>(esp77 - 1);
    *esp79 = es80;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx76) + reinterpret_cast<int32_t>(ebx76) * 2 + 29) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx76) + reinterpret_cast<int32_t>(ebx76) * 2 + 29) | *reinterpret_cast<unsigned char*>(&ebx76));
    *esi71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*esi71) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *edx81 = reinterpret_cast<unsigned char>(*edx82 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    ebx83 = *esp79;
    esp84 = reinterpret_cast<struct s286*>(esp79 + 2 - 2);
    esp84->f0 = 0x1000543f;
    eax85 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(ebx83) + reinterpret_cast<int16_t>(ebx83) * 2 + 27)());
    esp86 = reinterpret_cast<struct s287*>(&esp84->f4);
    eax87 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax85) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax85) + reinterpret_cast<int32_t>(eax85))));
    *reinterpret_cast<signed char*>(&eax87) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax87)));
    *ecx75 = *ecx75 + 1;
    *eax87 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax87) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx75)));
    ebx88 = esp86->f0;
    esp89 = &esp86->f4;
    ss90 = *esp89;
    ecx91 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx75) + reinterpret_cast<signed char>(*eax87));
    *reinterpret_cast<signed char*>(&eax87) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax87) + dh92);
    *edx93 = *edx94 + 1;
    *reinterpret_cast<signed char*>(&ecx91) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx91) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) - 32));
    esp95 = reinterpret_cast<int32_t*>(esp89 + 1 - 2);
    *esp95 = 0x10005459;
    eax96 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx88) + reinterpret_cast<int32_t>(ebx88) * 2 + 27)());
    *ecx91 = reinterpret_cast<unsigned char>(*ecx91 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *eax96 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax96) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *eax96 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax96) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *eax96 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax96) + reinterpret_cast<int32_t>(eax96));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax96) + reinterpret_cast<int32_t>(eax96)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax96) + reinterpret_cast<int32_t>(eax96)) + reinterpret_cast<int32_t>(eax96);
    *edx97 = *edx98 + 1;
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<unsigned char>(*esi71));
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp95 + 1 + 1 + 1) - 2) = ss90;
    esi99 = reinterpret_cast<struct s288*>(esi71 + 1);
    al100 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96))));
    tmp8_101 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al100)));
    *reinterpret_cast<void**>(&eax96) = tmp8_101;
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<unsigned char>(*eax96)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_101) < reinterpret_cast<unsigned char>(al100)));
    __asm__("into ");
    esi99->f92 = esi99->f92 + 1;
    *eax96 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax96) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *eax96 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax96) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
}

struct s289 {
    signed char[92] pad92;
    int32_t f92;
};

struct s290 {
    signed char[92] pad92;
    int32_t f92;
};

struct s291 {
    signed char[4] pad4;
    unsigned char* f4;
};

unsigned char g5b3e0202;

struct s292 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s293 {
    signed char[92] pad92;
    int32_t f92;
};

void fun_10005487(unsigned char cl) {
    struct s289* esi2;
    struct s290* esi3;
    signed char* eax4;
    unsigned char al5;
    unsigned char tmp8_6;
    unsigned char* eax7;
    unsigned char tmp8_8;
    uint1_t cf9;
    unsigned char tmp8_10;
    uint1_t cf11;
    unsigned char* eax12;
    signed char* edx13;
    struct s291** esp14;
    struct s291* es15;
    unsigned char** esp16;
    unsigned char* ebx17;
    unsigned char* eax18;
    int16_t ss19;
    struct s292* ebx20;
    struct s293* esi21;
    void* esi22;
    unsigned char* eax23;
    unsigned char tmp8_24;
    unsigned char* eax25;
    unsigned char tmp8_26;
    uint1_t cf27;

    esi2->f92 = esi3->f92 + 1;
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(al5))));
    tmp8_6 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax4) + *eax4)));
    *reinterpret_cast<unsigned char*>(&eax7) = tmp8_6;
    __asm__("aam 0xff");
    tmp8_8 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7)) + reinterpret_cast<uint1_t>(tmp8_6 < *reinterpret_cast<unsigned char*>(&eax4)));
    cf9 = reinterpret_cast<uint1_t>(tmp8_8 < *eax7);
    *eax7 = tmp8_8;
    tmp8_10 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax7 + *reinterpret_cast<unsigned char*>(&eax7)) + cf9);
    cf11 = reinterpret_cast<uint1_t>(tmp8_10 < *eax7);
    *eax7 = tmp8_10;
    __asm__("retf 0x5bff");
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax7) + *eax7) + cf11) + *edx13);
    esp14 = reinterpret_cast<struct s291**>(reinterpret_cast<int32_t>(__return_address()) + 4 - 2);
    *esp14 = es15;
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | cl);
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | cl);
    esp16 = &(*esp14)->f4;
    ebx17 = *esp16;
    *reinterpret_cast<unsigned char*>(&eax18) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) - reinterpret_cast<unsigned char>(*ebx17 + (*reinterpret_cast<unsigned char*>(&eax12) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*ebx17)))))));
    *eax18 = reinterpret_cast<unsigned char>(*eax18 + *reinterpret_cast<unsigned char*>(&eax18));
    *eax18 = reinterpret_cast<unsigned char>(*eax18 + *reinterpret_cast<unsigned char*>(&eax18));
    g5b3e0202 = reinterpret_cast<unsigned char>(g5b3e0202 | cl);
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp16 + 1) - 2) = ss19;
    ebx20 = reinterpret_cast<struct s292*>(reinterpret_cast<int32_t>(ebx17) + *eax18);
    ebx20->f92 = reinterpret_cast<unsigned char>(ebx20->f92 + cl);
    esi21 = reinterpret_cast<struct s293*>(reinterpret_cast<int32_t>(esi22) + 1 + 1);
    *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax18)))));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 | *reinterpret_cast<unsigned char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 | *reinterpret_cast<unsigned char*>(&eax23));
    tmp8_24 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) + *eax23)));
    *reinterpret_cast<unsigned char*>(&eax25) = tmp8_24;
    esi21->f92 = esi21->f92 + 1;
    tmp8_26 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax25 + *reinterpret_cast<unsigned char*>(&eax25)) + reinterpret_cast<uint1_t>(tmp8_24 < *reinterpret_cast<unsigned char*>(&eax23)));
    cf27 = reinterpret_cast<uint1_t>(tmp8_26 < *eax25);
    *eax25 = tmp8_26;
    *eax25 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax25 + *reinterpret_cast<unsigned char*>(&eax25)) + cf27);
    esi21->f92 = esi21->f92 + 1;
}

struct s294 {
    signed char[8] pad8;
    int32_t f8;
};

struct s295 {
    signed char[17] pad17;
    unsigned char f17;
};

struct s296 {
    signed char[17] pad17;
    unsigned char f17;
};

signed char g41300000;

struct s297 {
    void* f0;
    unsigned char f1;
    signed char[1278] pad1280;
    unsigned char f1280;
};

int32_t gb000807;

struct s298 {
    unsigned char f0;
    signed char f1;
};

struct s299 {
    signed char[18] pad18;
    int32_t f18;
    signed char[70] pad92;
    signed char f92;
};

struct s300 {
    signed char[4] pad4;
    struct s299* f4;
};

void** fun_2b00558e();

struct s301 {
    signed char f0;
    signed char[201528922] pad201528923;
    void* f201528923;
};

struct s302 {
    signed char[4] pad4;
    void* f4;
};

struct s303 {
    void* f0;
    signed char[201528922] pad201528923;
    unsigned char f201528923;
};

struct s304 {
    signed char[92] pad92;
    unsigned char f92;
};

void fun_100054e1(void* ecx) {
    struct s294* ebx2;
    unsigned char* eax3;
    struct s295* ebx4;
    struct s296* ebx5;
    unsigned char bl6;
    signed char dh7;
    unsigned char tmp8_8;
    uint1_t cf9;
    void* edx10;
    void* edx11;
    int32_t edx12;
    signed char* edx13;
    signed char* edx14;
    signed char dl15;
    uint32_t* edx16;
    int32_t* edx17;
    signed char* ebx18;
    signed char* ebx19;
    struct s297* eax20;
    uint48_t v21;
    int16_t cs22;
    void* bl23;
    unsigned char* esi24;
    signed char* esi25;
    uint32_t* edi26;
    int32_t* edi27;
    void* dh28;
    signed char dh29;
    unsigned char* eax30;
    int32_t* edx31;
    struct s298* eax32;
    signed char* edi33;
    signed char* edi34;
    signed char bh35;
    signed char bh36;
    unsigned char bh37;
    signed char* eax38;
    struct s299** esp39;
    struct s299* ebx40;
    int32_t* esp41;
    void** eax42;
    void** tmp32_43;
    void** eax44;
    int32_t ecx45;
    signed char* edi46;
    int32_t* esp47;
    int32_t eax48;
    int32_t* esp49;
    struct s301* eax50;
    int32_t* esp51;
    int32_t ebp52;
    struct s302** esp53;
    struct s302* ebp54;
    struct s303* eax55;
    void* al56;
    void* tmp8_57;
    int32_t ecx58;
    void* esp59;
    void* tmp8_60;
    uint1_t cf61;
    uint1_t below_or_equal62;
    int16_t* esp63;
    int16_t es64;
    struct s304** esp65;
    struct s304* es66;
    struct s304* ebx67;
    int32_t* esp68;
    int32_t ebp69;
    int32_t ebp70;
    unsigned char* eax71;
    unsigned char al72;
    unsigned char tmp8_73;

    eax3 = reinterpret_cast<unsigned char*>(ebx2->f8(__return_address()));
    *eax3 = reinterpret_cast<unsigned char>(*eax3 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *eax3 = reinterpret_cast<unsigned char>(*eax3 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    ebx4->f17 = reinterpret_cast<unsigned char>(ebx5->f17 | bl6);
    *reinterpret_cast<signed char*>(&eax3) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax3) + 2);
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + dh7);
    *reinterpret_cast<signed char*>(&eax3) = g41300000;
    tmp8_8 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    cf9 = reinterpret_cast<uint1_t>(tmp8_8 < *eax3);
    *eax3 = tmp8_8;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx10) + reinterpret_cast<uint32_t>(eax3)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx11) + reinterpret_cast<uint32_t>(eax3)) + edx12 + cf9;
    *edx13 = reinterpret_cast<signed char>(*edx14 + dl15);
    *edx16 = *edx17 + reinterpret_cast<uint32_t>(eax3);
    *ebx18 = reinterpret_cast<signed char>(*ebx19 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax20 = reinterpret_cast<struct s297*>(reinterpret_cast<uint32_t>(eax3) | 0x40026);
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<uint32_t>(eax20));
    *reinterpret_cast<void**>(&eax20) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)) + reinterpret_cast<unsigned char>(eax20->f0));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v21) + 4) = cs22;
    if (!0) {
        eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    }
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<signed char>(bl23));
    *reinterpret_cast<void**>(&eax20) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)) + reinterpret_cast<unsigned char>(eax20->f0));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + 3);
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f1280 = reinterpret_cast<unsigned char>(eax20->f1280 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax20) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax20) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax20) + 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax20) + reinterpret_cast<uint32_t>(eax20)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax20) + reinterpret_cast<uint32_t>(eax20)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    *esi24 = reinterpret_cast<unsigned char>(*esi25 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *edi26 = *edi27 + reinterpret_cast<uint32_t>(eax20);
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<signed char>(dh28));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<int32_t>(ecx));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    eax20->f1 = reinterpret_cast<unsigned char>(eax20->f1 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax20) + 1));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) | reinterpret_cast<uint32_t>(eax20));
    eax20->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax20)));
    *reinterpret_cast<int32_t*>(&v21) = 0xa01;
    eax20->f1 = reinterpret_cast<unsigned char>(eax20->f1 + dh29);
    eax30 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax20) | reinterpret_cast<unsigned char>(eax20->f0));
    *eax30 = reinterpret_cast<unsigned char>(*eax30 + *reinterpret_cast<unsigned char*>(&eax30));
    if (!__intrinsic()) {
        *reinterpret_cast<unsigned char*>(&eax30) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax30)));
    }
    *eax30 = reinterpret_cast<unsigned char>(*eax30 + *reinterpret_cast<unsigned char*>(&eax30));
    edx31 = reinterpret_cast<int32_t*>(0xd01);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<uint32_t>(eax30) + 14) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<uint32_t>(eax30) + 14) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx31) + 1));
    eax32 = reinterpret_cast<struct s298*>(gb000807());
    *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) - reinterpret_cast<unsigned char>(*edi33 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax32) < reinterpret_cast<unsigned char>(*edi34 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(bh35 + bh36) < bh37)))));
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 - *reinterpret_cast<unsigned char*>(&eax32));
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 + *reinterpret_cast<unsigned char*>(&eax32));
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 + *reinterpret_cast<unsigned char*>(&eax32));
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx31) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx31) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *edx31 = *edx31 + 1;
    *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax32->f0 = reinterpret_cast<unsigned char>(eax32->f0 - 1);
    eax38 = &eax32->f1;
    esp39 = &(*reinterpret_cast<struct s300**>(reinterpret_cast<int32_t>(&v21) + 2))->f4;
    ebx40 = *esp39;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx40) + 1) = 8;
    *eax38 = reinterpret_cast<signed char>(*eax38 + *reinterpret_cast<signed char*>(&eax38));
    *eax38 = reinterpret_cast<signed char>(*eax38 + *reinterpret_cast<signed char*>(&eax38));
    esp41 = reinterpret_cast<int32_t*>(esp39 + 1 - 1);
    *esp41 = 0x1000558b;
    eax42 = fun_2b00558e();
    tmp32_43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax42) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax42) + reinterpret_cast<uint32_t>(eax42))));
    eax44 = tmp32_43;
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) - (reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax44) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_43) < reinterpret_cast<uint32_t>(eax42))))));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx40) - 79) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx40) - 79) | *reinterpret_cast<unsigned char*>(&ebx40));
    ecx45 = reinterpret_cast<int32_t>(ecx) + *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint32_t>(eax44));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx40) + 1) = reinterpret_cast<signed char>(8 + *edi46);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx45) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx45) + 1) + *reinterpret_cast<unsigned char*>(&ebx40));
    esp47 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp41 + 1) - 1 - 4);
    *esp47 = 0x100055a7;
    eax48 = reinterpret_cast<int32_t>(ebx40->f18());
    esp49 = esp47 + 1 - 1;
    *esp49 = 0x100055ac;
    eax50 = reinterpret_cast<struct s301*>(*reinterpret_cast<int32_t*>(ecx45 + eax48)());
    *reinterpret_cast<signed char*>(&eax50) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax50) + eax50->f0);
    esp51 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp49 + 1) + 2 - 4);
    *esp51 = ebp52;
    *reinterpret_cast<signed char*>(&eax50) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax50) + eax50->f0);
    eax50->f0 = reinterpret_cast<signed char>(eax50->f0 + reinterpret_cast<int32_t>(eax50));
    esp53 = reinterpret_cast<struct s302**>(reinterpret_cast<int32_t>(esp51) + 2 - 4);
    *esp53 = ebp54;
    eax50->f0 = reinterpret_cast<signed char>(eax50->f0 + *reinterpret_cast<signed char*>(&eax50));
    eax50->f0 = reinterpret_cast<signed char>(eax50->f0 + reinterpret_cast<int32_t>(eax50));
    eax55 = reinterpret_cast<struct s303*>(&eax50->f201528923);
    ebx40->f92 = reinterpret_cast<signed char>(ebx40->f92 + *reinterpret_cast<signed char*>(&ecx45));
    al56 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55))));
    tmp8_57 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al56)));
    *reinterpret_cast<void**>(&eax55) = tmp8_57;
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_57) < reinterpret_cast<unsigned char>(al56)));
    ecx58 = ecx45 - 1;
    if (reinterpret_cast<uint1_t>(!!ecx58) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax55))) {
    }
    esp59 = reinterpret_cast<void*>(reinterpret_cast<int32_t>((*esp53)->f4) + 4);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    tmp8_60 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0))));
    cf61 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_60) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *reinterpret_cast<void**>(&eax55) = tmp8_60;
    below_or_equal62 = reinterpret_cast<uint1_t>(cf61 | reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax55) == 0));
    do {
    } while (below_or_equal62);
    esp63 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp59) + 4 - 2);
    *esp63 = es64;
    esp65 = reinterpret_cast<struct s304**>(esp63 - 1);
    *esp65 = es66;
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) | *reinterpret_cast<unsigned char*>(&ecx58));
    ebx67 = *esp65;
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) < 1)));
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
    esp68 = reinterpret_cast<int32_t*>(esp65 + 2 + 1 - 2);
    *esp68 = ebp69;
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<int32_t>(eax55));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp68) + 2 - 4) = ebp70;
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<int32_t>(eax55));
    eax71 = &eax55->f201528923;
    ebx67->f92 = reinterpret_cast<unsigned char>(ebx67->f92 + *reinterpret_cast<unsigned char*>(&ecx58));
    al72 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax71)));
    tmp8_73 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al72));
    *reinterpret_cast<unsigned char*>(&eax71) = tmp8_73;
    *reinterpret_cast<unsigned char*>(&eax71) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax71) + *eax71) + reinterpret_cast<uint1_t>(tmp8_73 < al72));
    if (reinterpret_cast<uint1_t>(!!(ecx58 - 1)) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<unsigned char*>(&eax71))) {
    }
    *eax71 = reinterpret_cast<unsigned char>(*eax71 | *reinterpret_cast<unsigned char*>(&eax71));
    *eax71 = reinterpret_cast<unsigned char>(*eax71 | *reinterpret_cast<unsigned char*>(&eax71));
}

struct s305 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s306 {
    unsigned char f0;
    signed char[134420058] pad134420059;
    unsigned char f134420059;
};

struct s307 {
    signed char[6] pad6;
    int32_t f6;
    signed char[82] pad92;
    unsigned char f92;
};

struct s308 {
    signed char[4] pad4;
    struct s307* f4;
};

struct s309 {
    unsigned char f0;
    signed char[33627226] pad33627227;
    void* f33627227;
};

struct s310 {
    unsigned char f0;
    signed char[91] pad92;
    int32_t f92;
};

struct s311 {
    unsigned char f0;
    signed char[75] pad76;
    unsigned char f76;
};

void fun_10005608(int32_t ecx, int16_t a2) {
    struct s305* v3;
    int16_t es4;
    struct s305* es5;
    unsigned char* eax6;
    unsigned char* eax7;
    signed char* eax8;
    signed char al9;
    unsigned char al10;
    signed char* eax11;
    struct s306* eax12;
    unsigned char* eax13;
    struct s307** esp14;
    struct s308* ebp15;
    unsigned char al16;
    unsigned char tmp8_17;
    int32_t ecx18;
    struct s307* ebx19;
    int16_t* esp20;
    int16_t es21;
    int16_t* esp22;
    int16_t es23;
    struct s309* eax24;
    signed char* edi25;
    signed char* edi26;
    signed char dl27;
    int32_t* esp28;
    int32_t ebp29;
    int32_t* esp30;
    int32_t ebp31;
    void** eax32;
    signed char* edi33;
    signed char* edi34;
    signed char dl35;
    int32_t* esp36;
    int32_t ebp37;
    void** esp38;
    void* ebp39;
    struct s310* esi40;
    void* esi41;
    void* esp42;
    int32_t* esp43;
    struct s311* eax44;
    int16_t* esp45;
    int16_t es46;
    int16_t es47;

    *reinterpret_cast<int16_t*>(&v3 + 1) = es4;
    v3 = es5;
    *eax6 = reinterpret_cast<unsigned char>(*eax7 | *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<unsigned char*>(&eax8) = reinterpret_cast<unsigned char>(al9 - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(al10 < 1)));
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax8) + *eax8);
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) + *eax11);
    eax12->f0 = reinterpret_cast<unsigned char>(eax12->f0 + reinterpret_cast<int32_t>(eax12));
    eax12->f0 = reinterpret_cast<unsigned char>(eax12->f0 + *reinterpret_cast<unsigned char*>(&eax12));
    eax12->f0 = reinterpret_cast<unsigned char>(eax12->f0 + reinterpret_cast<int32_t>(eax12));
    eax13 = &eax12->f134420059;
    v3->f92 = reinterpret_cast<unsigned char>(v3->f92 + *reinterpret_cast<unsigned char*>(&ecx));
    esp14 = &ebp15->f4;
    al16 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax13)));
    tmp8_17 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al16));
    *reinterpret_cast<unsigned char*>(&eax13) = tmp8_17;
    *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax13) + *eax13) + reinterpret_cast<uint1_t>(tmp8_17 < al16));
    ecx18 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx18) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<unsigned char*>(&eax13))) {
    }
    ebx19 = *esp14;
    esp20 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp14 + 1) - 2);
    *esp20 = es21;
    esp22 = esp20 - 1;
    *esp22 = es23;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx19) + reinterpret_cast<int32_t>(ebx19) * 2 + 26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx19) + reinterpret_cast<int32_t>(ebx19) * 2 + 26) | *reinterpret_cast<unsigned char*>(&ebx19));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax13) + reinterpret_cast<uint32_t>(eax13)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax13) + reinterpret_cast<uint32_t>(eax13)) + reinterpret_cast<uint32_t>(eax13);
    *eax13 = reinterpret_cast<unsigned char>(*eax13 + *reinterpret_cast<unsigned char*>(&eax13));
    *eax13 = reinterpret_cast<unsigned char>(*eax13 + *reinterpret_cast<unsigned char*>(&eax13));
    eax24 = reinterpret_cast<struct s309*>(reinterpret_cast<uint32_t>(eax13) | 0x2011c5b);
    *edi25 = reinterpret_cast<signed char>(*edi26 + dl27);
    esp28 = reinterpret_cast<int32_t*>(esp22 - 2);
    *esp28 = ebp29;
    *reinterpret_cast<unsigned char*>(&eax24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax24) + eax24->f0);
    eax24->f0 = reinterpret_cast<unsigned char>(eax24->f0 + reinterpret_cast<uint32_t>(eax24));
    esp30 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp28) + 2 - 4);
    *esp30 = ebp31;
    eax24->f0 = reinterpret_cast<unsigned char>(eax24->f0 + *reinterpret_cast<unsigned char*>(&eax24));
    eax24->f0 = reinterpret_cast<unsigned char>(eax24->f0 + reinterpret_cast<uint32_t>(eax24));
    eax32 = &eax24->f33627227;
    *edi33 = reinterpret_cast<signed char>(*edi34 + dl35);
    esp36 = esp30 - 1;
    *esp36 = ebp37;
    *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) | reinterpret_cast<unsigned char>(*eax32));
    *eax32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax32) + reinterpret_cast<uint32_t>(eax32));
    esp38 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp36) + 2 - 4);
    *esp38 = ebp39;
    *eax32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax32) | *reinterpret_cast<unsigned char*>(&eax32));
    *eax32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax32) + reinterpret_cast<uint32_t>(eax32));
    ebx19->f92 = reinterpret_cast<unsigned char>(ebx19->f92 + *reinterpret_cast<unsigned char*>(&ecx18));
    esi40 = reinterpret_cast<struct s310*>(reinterpret_cast<int32_t>(esi41) + 1 + 1);
    esp42 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp38) + 4);
    __asm__("into ");
    esi40->f92 = esi40->f92 + 1;
    __asm__("salc ");
    esp43 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp42) - 4);
    *esp43 = 0x10005680;
    eax44 = reinterpret_cast<struct s311*>(ebx19->f6());
    esp45 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp43 + 1) - 2);
    *esp45 = es46;
    esi40->f0 = reinterpret_cast<unsigned char>(esi40->f0 | *reinterpret_cast<unsigned char*>(&eax44));
    *(esp45 - 1) = es47;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx19) - 79) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx19) - 79) | *reinterpret_cast<unsigned char*>(&ebx19));
    eax44->f0 = reinterpret_cast<unsigned char>(eax44->f0 & *reinterpret_cast<unsigned char*>(&eax44));
    eax44->f0 = reinterpret_cast<unsigned char>(eax44->f0 + *reinterpret_cast<unsigned char*>(&eax44));
    eax44->f0 = reinterpret_cast<unsigned char>(eax44->f0 + *reinterpret_cast<unsigned char*>(&eax44));
    eax44->f0 = reinterpret_cast<unsigned char>(eax44->f0 | *reinterpret_cast<unsigned char*>(&ecx18));
    eax44->f0 = reinterpret_cast<unsigned char>(eax44->f0 | *reinterpret_cast<unsigned char*>(&ecx18));
    eax44->f76 = reinterpret_cast<unsigned char>(eax44->f76 | *reinterpret_cast<unsigned char*>(&eax44));
}

struct s312 {
    int32_t f0;
    int16_t f4;
};

struct s313 {
    signed char[28] pad28;
    int32_t f28;
    signed char[60] pad92;
    signed char f92;
};

struct s314 {
    signed char f0;
    signed char[33627226] pad33627227;
    void* f33627227;
};

struct s315 {
    void* f0;
    signed char[33627226] pad33627227;
    unsigned char f33627227;
};

struct s316 {
    unsigned char f0;
    signed char[738399834] pad738399835;
    signed char f738399835;
};

void fun_10005698() {
    void** esp1;
    void* ebx2;
    signed char* ecx3;
    unsigned char* eax4;
    unsigned char* eax5;
    unsigned char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    unsigned char tmp8_13;
    signed char dl14;
    signed char ah15;
    int32_t* edx16;
    struct s312* esp17;
    unsigned char* eax18;
    int16_t* esp19;
    int16_t es20;
    unsigned char dl21;
    unsigned char tmp8_22;
    int32_t esi23;
    int32_t edi24;
    signed char dh25;
    uint1_t cf26;
    int32_t esi27;
    int32_t edi28;
    int32_t esi29;
    int32_t edi30;
    unsigned char* tmp32_31;
    struct s313** esp32;
    signed char* eax33;
    struct s313* ebx34;
    int16_t* esp35;
    int16_t* esp36;
    signed char cl37;
    signed char dh38;
    int32_t* esp39;
    struct s314* eax40;
    unsigned char* edi41;
    signed char* edi42;
    int32_t* esp43;
    int32_t ebp44;
    int32_t* esp45;
    int32_t ebp46;
    struct s315* eax47;
    unsigned char* edi48;
    signed char* edi49;
    int32_t* esp50;
    int32_t ebp51;
    int32_t* esp52;
    int32_t ebp53;
    struct s316* eax54;
    unsigned char tmp8_55;
    signed char* edi56;
    uint1_t cf57;
    unsigned char* edi58;
    unsigned char* edi59;
    int32_t* esp60;
    int32_t ebp61;
    unsigned char tmp32_62;
    uint1_t cf63;
    int32_t ebp64;
    signed char* eax65;
    unsigned char al66;
    unsigned char tmp8_67;

    esp1 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__return_address()) + 4);
    ebx2 = *esp1;
    *reinterpret_cast<signed char*>(&ecx3) = 7;
    *eax4 = reinterpret_cast<unsigned char>(*eax5 & al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    tmp8_13 = reinterpret_cast<unsigned char>(dl14 + ah15);
    *reinterpret_cast<unsigned char*>(&edx16) = tmp8_13;
    esp17 = reinterpret_cast<struct s312*>(reinterpret_cast<int32_t>(esp1 + 1) - 1 - 4);
    esp17->f0 = 0x100056a9;
    eax18 = reinterpret_cast<unsigned char*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx2) + reinterpret_cast<int32_t>(ebx2) * 2 + 21)());
    esp19 = &esp17->f4;
    es20 = *esp19;
    *eax18 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax18 + *reinterpret_cast<signed char*>(&eax18)) + reinterpret_cast<uint1_t>(tmp8_13 < dl21));
    tmp8_22 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi23 + edi24 * 8 - 0x14fffb4) + dh25);
    cf26 = reinterpret_cast<uint1_t>(tmp8_22 < *reinterpret_cast<unsigned char*>(esi27 + edi28 * 8 - 0x14fffb4));
    *reinterpret_cast<unsigned char*>(esi29 + edi30 * 8 - 0x14fffb4) = tmp8_22;
    tmp32_31 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax18 + 0x2000100) + cf26);
    esp32 = reinterpret_cast<struct s313**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp19 + 1) - 1)) + 4 + 4 + 4);
    eax33 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(tmp32_31 + 0x2000200) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_31) < reinterpret_cast<uint32_t>(eax18)));
    *eax33 = reinterpret_cast<signed char>(*eax33 + 7);
    *ecx3 = reinterpret_cast<signed char>(*ecx3 + *reinterpret_cast<signed char*>(&eax33));
    ebx34 = *esp32;
    esp35 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp32 + 1) - 2);
    *esp35 = es20;
    esp36 = esp35 - 1;
    *esp36 = es20;
    cl37 = reinterpret_cast<signed char>(7 + dh38);
    esp39 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp36) - 1 - 4);
    *esp39 = 0x100056d7;
    eax40 = reinterpret_cast<struct s314*>(ebx34->f28());
    *edx16 = *edx16 + reinterpret_cast<int32_t>(eax40);
    *edi41 = reinterpret_cast<unsigned char>(*edi42 + *reinterpret_cast<unsigned char*>(&edx16));
    esp43 = esp39 + 1 - 1;
    *esp43 = ebp44;
    *reinterpret_cast<signed char*>(&eax40) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax40) + eax40->f0);
    eax40->f0 = reinterpret_cast<signed char>(eax40->f0 + reinterpret_cast<int32_t>(eax40));
    esp45 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp43) + 2 - 4);
    *esp45 = ebp46;
    eax40->f0 = reinterpret_cast<signed char>(eax40->f0 + *reinterpret_cast<signed char*>(&eax40));
    eax40->f0 = reinterpret_cast<signed char>(eax40->f0 + reinterpret_cast<int32_t>(eax40));
    eax47 = reinterpret_cast<struct s315*>(&eax40->f33627227);
    *edi48 = reinterpret_cast<unsigned char>(*edi49 + *reinterpret_cast<unsigned char*>(&edx16));
    esp50 = esp45 - 1;
    *esp50 = ebp51;
    *reinterpret_cast<unsigned char*>(&eax47) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax47) | reinterpret_cast<unsigned char>(eax47->f0));
    eax47->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax47->f0) + reinterpret_cast<int32_t>(eax47));
    esp52 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp50) + 2 - 4);
    *esp52 = ebp53;
    eax47->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax47->f0) | *reinterpret_cast<unsigned char*>(&eax47));
    eax47->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax47->f0) + reinterpret_cast<int32_t>(eax47));
    eax54 = reinterpret_cast<struct s316*>(&eax47->f33627227);
    tmp8_55 = reinterpret_cast<unsigned char>(*edi56 + *reinterpret_cast<unsigned char*>(&edx16));
    cf57 = reinterpret_cast<uint1_t>(tmp8_55 < *edi58);
    *edi59 = tmp8_55;
    esp60 = esp52 - 1;
    *esp60 = ebp61;
    *reinterpret_cast<unsigned char*>(&eax54) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax54) + eax54->f0) + cf57);
    tmp32_62 = reinterpret_cast<unsigned char>(eax54->f0 + reinterpret_cast<int32_t>(eax54));
    cf63 = reinterpret_cast<uint1_t>(tmp32_62 < eax54->f0);
    eax54->f0 = tmp32_62;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp60) + 2 - 4) = ebp64;
    eax54->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax54->f0 + *reinterpret_cast<unsigned char*>(&eax54)) + cf63);
    eax54->f0 = reinterpret_cast<unsigned char>(eax54->f0 + reinterpret_cast<int32_t>(eax54));
    eax65 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax54) + 0x2c03165b);
    ebx34->f92 = reinterpret_cast<signed char>(ebx34->f92 + cl37);
    al66 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax65)));
    tmp8_67 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al66));
    *reinterpret_cast<unsigned char*>(&eax65) = tmp8_67;
    *reinterpret_cast<unsigned char*>(&eax65) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax65) + *eax65) + reinterpret_cast<uint1_t>(tmp8_67 < al66));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax65) + reinterpret_cast<int32_t>(eax65)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax65) + reinterpret_cast<int32_t>(eax65)) + cl37);
}

struct s317 {
    signed char[92] pad92;
    int32_t f92;
};

struct s318 {
    signed char[92] pad92;
    int32_t f92;
};

struct s319 {
    signed char[92] pad92;
    int32_t f92;
};

struct s320 {
    signed char[92] pad92;
    int32_t f92;
};

struct s324 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s323 {
    signed char[4] pad4;
    struct s324* f4;
};

struct s322 {
    signed char[4] pad4;
    struct s323* f4;
};

struct s321 {
    signed char[4] pad4;
    struct s322* f4;
};

void* g41300100;

struct s325 {
    void* f0;
    signed char[201528922] pad201528923;
    void* f201528923;
};

void* g4c5bfc;

struct s326 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s329 {
    signed char[4] pad4;
    int32_t f4;
};

struct s328 {
    signed char[4] pad4;
    struct s329* f4;
};

struct s327 {
    signed char[4] pad4;
    struct s328* f4;
};

struct s330 {
    signed char[4] pad4;
    void* f4;
};

struct s332 {
    signed char[4] pad4;
    void* f4;
};

struct s331 {
    void** f0;
    signed char[2] pad4;
    struct s332* f4;
};

unsigned char g80008ff;

struct s333 {
    unsigned char f0;
    signed char[47] pad48;
    unsigned char f48;
};

struct s334 {
    signed char[4] pad4;
    void* f4;
};

struct s335 {
    int32_t f0;
    void* f4;
};

int32_t* fun_21005864();

struct s336 {
    void** f0;
    void* f4;
};

struct s337 {
    signed char[8] pad8;
    signed char f8;
};

void fun_10005725(unsigned char* ecx) {
    struct s317* esi2;
    struct s318* esi3;
    unsigned char tmp8_4;
    signed char al5;
    uint1_t cf6;
    unsigned char tmp8_7;
    unsigned char al8;
    signed char* eax9;
    unsigned char* eax10;
    struct s319* esi11;
    struct s320* esi12;
    uint1_t cf13;
    int32_t* eax14;
    struct s321* v15;
    int16_t es16;
    unsigned char* esi17;
    unsigned char* esi18;
    signed char* v19;
    int16_t es20;
    unsigned char* esi21;
    unsigned char* esi22;
    signed char* es23;
    signed char* ebx24;
    signed char dl25;
    uint32_t* edx26;
    int32_t* edx27;
    unsigned char* eax28;
    void* edi29;
    void* edi30;
    signed char dh31;
    void* ecx32;
    unsigned char tmp8_33;
    uint1_t cf34;
    unsigned char tmp32_35;
    uint1_t cf36;
    void* edx37;
    void* edx38;
    signed char dh39;
    unsigned char tmp8_40;
    uint1_t cf41;
    int32_t edx42;
    int32_t edx43;
    struct s321* ss44;
    unsigned char* eax45;
    void* ebx46;
    struct s323** esp47;
    unsigned char tmp8_48;
    uint1_t cf49;
    unsigned char* tmp32_50;
    unsigned char* eax51;
    struct s324** esp52;
    struct s325* eax53;
    struct s324* ebx54;
    void** esp55;
    void* ss56;
    void** ecx57;
    void* al58;
    void* tmp8_59;
    struct s326** esp60;
    struct s326* ebx61;
    void* dl62;
    uint32_t tmp32_63;
    int32_t edx64;
    uint1_t cf65;
    struct s327** esp66;
    struct s327* ebp67;
    struct s327* ss68;
    struct s330** esp69;
    struct s330* ebp70;
    void** eax71;
    void* al72;
    void* tmp8_73;
    void* ecx74;
    void* esp75;
    int32_t* esp76;
    int32_t edx77;
    int16_t* esp78;
    int16_t es79;
    struct s331* esp80;
    void** es81;
    void** ebx82;
    void* edx83;
    void* edx84;
    void* dh85;
    void* tmp8_86;
    uint1_t cf87;
    void* edx88;
    void* edx89;
    uint1_t cf90;
    void** eax91;
    void** esp92;
    unsigned char* eax93;
    signed char* ecx94;
    signed char* edx95;
    signed char* edx96;
    signed char dl97;
    signed char dl98;
    void* ebx99;
    int32_t ebp100;
    int32_t ebp101;
    struct s333* ebx102;
    void* esp103;
    unsigned char al104;
    unsigned char tmp8_105;
    struct s335* esp106;
    int32_t* eax107;
    signed char* edx108;
    signed char* edx109;
    signed char* ecx110;
    void* esp111;
    void** eax112;
    void* al113;
    void* tmp8_114;
    void* eax115;
    struct s336* esp116;
    unsigned char tmp8_117;
    int32_t ebp118;
    signed char dl119;
    uint1_t cf120;
    int32_t ebp121;
    int32_t ebp122;
    void** ebx123;
    void* edx124;
    void* edx125;
    int32_t edx126;
    signed char* edx127;
    signed char* edx128;
    signed char dl129;
    uint32_t tmp32_130;
    int32_t ebp131;
    uint1_t cf132;
    void** eax133;
    int32_t ebx134;
    void* esp135;
    void** eax136;
    uint32_t ecx137;
    void* al138;
    void* tmp8_139;
    signed char* edx140;
    signed char* edx141;
    signed char dl142;
    int32_t edx143;
    int32_t edx144;
    struct s337* edi145;
    struct s327** esp146;
    void** ecx147;
    struct s329** esp148;
    void* al149;
    void* tmp8_150;
    int32_t ebx151;
    signed char dh152;
    signed char* eax153;
    signed char* edx154;
    signed char* edx155;
    signed char* ecx156;
    void** eax157;
    signed char* eax158;

    esi2->f92 = esi3->f92 + 1;
    tmp8_4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(static_cast<int32_t>(al5)) + cf6);
    tmp8_7 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(tmp8_4)) + reinterpret_cast<uint1_t>(tmp8_4 < al8));
    *reinterpret_cast<unsigned char*>(&eax9) = tmp8_7;
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) + *eax9) + reinterpret_cast<uint1_t>(tmp8_7 < tmp8_4));
    esi11->f92 = esi12->f92 + 1;
    *eax10 = reinterpret_cast<unsigned char>(*eax10 - *reinterpret_cast<unsigned char*>(&eax10));
    cf13 = reinterpret_cast<uint1_t>(*eax10 < *reinterpret_cast<unsigned char*>(&eax10));
    *eax10 = reinterpret_cast<unsigned char>(*eax10 - *reinterpret_cast<unsigned char*>(&eax10));
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) + *eax10) + cf13);
    *reinterpret_cast<int16_t*>(&v15 + 1) = es16;
    *esi17 = reinterpret_cast<unsigned char>(*esi18 | *reinterpret_cast<unsigned char*>(&eax14));
    *reinterpret_cast<int16_t*>(&v19 + 1) = es20;
    *esi21 = reinterpret_cast<unsigned char>(*esi22 | *reinterpret_cast<unsigned char*>(&eax14));
    v19 = es23;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14) - 0x7c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax14) + reinterpret_cast<uint32_t>(eax14) - 0x7c) | *reinterpret_cast<unsigned char*>(&ecx));
    *eax14 = *eax14 - 1;
    ebx24 = v19;
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ *reinterpret_cast<unsigned char*>(&eax14));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl25);
    *edx26 = *edx27 + reinterpret_cast<uint32_t>(eax14);
    *ebx24 = reinterpret_cast<signed char>(*ebx24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax28 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax14) | 0x40026);
    *eax28 = reinterpret_cast<unsigned char>(*eax28 + reinterpret_cast<uint32_t>(eax28));
    edi29 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edi30) + 1);
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)));
    *eax28 = reinterpret_cast<unsigned char>(*eax28 + dh31);
    ecx32 = reinterpret_cast<void*>(ecx + 1);
    tmp8_33 = reinterpret_cast<unsigned char>(*eax28 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)));
    cf34 = reinterpret_cast<uint1_t>(tmp8_33 < *eax28);
    *eax28 = tmp8_33;
    tmp32_35 = reinterpret_cast<unsigned char>(*eax28 + reinterpret_cast<uint32_t>(eax28) + cf34);
    cf36 = reinterpret_cast<uint1_t>(tmp32_35 < *eax28);
    *eax28 = tmp32_35;
    __asm__("in al, 0xfc");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx37) + reinterpret_cast<uint32_t>(eax28)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx38) + reinterpret_cast<uint32_t>(eax28)) + reinterpret_cast<uint32_t>(eax28) + cf36;
    *eax28 = reinterpret_cast<unsigned char>(*eax28 + dh39);
    *reinterpret_cast<void**>(&eax28) = g41300100;
    tmp8_40 = reinterpret_cast<unsigned char>(*eax28 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)));
    cf41 = reinterpret_cast<uint1_t>(tmp8_40 < *eax28);
    *eax28 = tmp8_40;
    *eax28 = reinterpret_cast<unsigned char>(*eax28 + reinterpret_cast<int32_t>(ecx32) + cf41);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx32) + edx42 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx32) + edx43 + 4) | *reinterpret_cast<unsigned char*>(&ebx24));
    v15 = ss44;
    eax45 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28))));
    ebx46 = reinterpret_cast<void*>(ebx24 - 1);
    esp47 = &v15->f4->f4;
    *eax45 = reinterpret_cast<unsigned char>(*eax45 + *reinterpret_cast<unsigned char*>(&eax45));
    tmp8_48 = reinterpret_cast<unsigned char>(*eax45 + *reinterpret_cast<unsigned char*>(&eax45));
    cf49 = reinterpret_cast<uint1_t>(tmp8_48 < *eax45);
    *eax45 = tmp8_48;
    *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + *eax45) + cf49);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1) >> 91);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx46) + reinterpret_cast<int32_t>(ebx46) * 2 + 27) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx46) + reinterpret_cast<int32_t>(ebx46) * 2 + 27) | *reinterpret_cast<unsigned char*>(&ebx46));
    tmp32_50 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45))));
    eax51 = tmp32_50;
    *eax51 = reinterpret_cast<unsigned char>(*eax51 - (reinterpret_cast<uint32_t>(eax51) + reinterpret_cast<uint1_t>(*eax51 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax51) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_50) < reinterpret_cast<uint32_t>(eax45))))));
    *eax51 = reinterpret_cast<unsigned char>(*eax51 + *reinterpret_cast<signed char*>(&eax51));
    *eax51 = reinterpret_cast<unsigned char>(*eax51 + reinterpret_cast<uint32_t>(eax51));
    esp52 = &(*esp47)->f4;
    eax53 = reinterpret_cast<struct s325*>(eax51 - 1);
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53))));
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<uint32_t>(eax53));
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    *reinterpret_cast<void**>(&eax53) = g4c5bfc;
    __asm__("int 0xff");
    ebx54 = *esp52;
    esp55 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp52 + 1) - 2);
    *esp55 = ss56;
    ecx57 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx32) - 1 + reinterpret_cast<unsigned char>(eax53->f0));
    ebx54->f92 = reinterpret_cast<unsigned char>(ebx54->f92 + *reinterpret_cast<unsigned char*>(&ecx57));
    al58 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53))));
    tmp8_59 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al58)));
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_59) + reinterpret_cast<unsigned char>(*ecx57)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_59) < reinterpret_cast<unsigned char>(al58)));
    esp60 = reinterpret_cast<struct s326**>(reinterpret_cast<int16_t>(*esp55) + 4 + 4);
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) | *reinterpret_cast<unsigned char*>(&ecx57));
    ebx61 = *esp60;
    *ecx57 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx57) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    *ecx57 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx57) + reinterpret_cast<signed char>(dl62));
    tmp32_63 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53)) + edx64);
    cf65 = reinterpret_cast<uint1_t>(tmp32_63 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53)) = tmp32_63;
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)) < reinterpret_cast<unsigned char>(1 + cf65))));
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)) + reinterpret_cast<unsigned char>(eax53->f0));
    esp66 = reinterpret_cast<struct s327**>(reinterpret_cast<int32_t>(esp60 + 1) + 2 - 4);
    *esp66 = ebp67;
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)) + reinterpret_cast<unsigned char>(eax53->f0));
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<uint32_t>(eax53));
    ss68 = *esp66;
    esp69 = reinterpret_cast<struct s330**>(esp66 + 1 - 2);
    *esp69 = ebp70;
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    eax53->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax53->f0) + reinterpret_cast<uint32_t>(eax53));
    eax71 = &eax53->f201528923;
    ebx61->f92 = reinterpret_cast<unsigned char>(ebx61->f92 + *reinterpret_cast<unsigned char*>(&ecx57));
    al72 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71))));
    tmp8_73 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al72)));
    *reinterpret_cast<void**>(&eax71) = tmp8_73;
    *reinterpret_cast<void**>(&eax71) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71)) + reinterpret_cast<unsigned char>(*eax71)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_73) < reinterpret_cast<unsigned char>(al72)));
    ecx74 = reinterpret_cast<void*>(ecx57 - 1);
    if (reinterpret_cast<uint1_t>(!!ecx74) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax71))) {
    }
    esp75 = reinterpret_cast<void*>(reinterpret_cast<int32_t>((*esp69)->f4) + 4);
    *eax71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax71) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71)));
    *eax71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax71) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71)));
    *reinterpret_cast<void**>(&eax71) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71)) + reinterpret_cast<unsigned char>(*eax71))));
    esp76 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp75) - 4);
    *esp76 = edx77;
    esp78 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp76 + 1) - 2);
    *esp78 = es79;
    esp80 = reinterpret_cast<struct s331*>(esp78 - 1);
    esp80->f0 = es81;
    *eax71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax71) | *reinterpret_cast<unsigned char*>(&ecx74));
    ebx82 = esp80->f0;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx83) + reinterpret_cast<uint32_t>(eax71)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx84) + reinterpret_cast<uint32_t>(eax71)) + reinterpret_cast<uint32_t>(eax71);
    *eax71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax71) + reinterpret_cast<signed char>(dh85));
    *reinterpret_cast<void**>(&eax71) = g41300100;
    tmp8_86 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax71) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71)));
    cf87 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_86) < reinterpret_cast<unsigned char>(*eax71));
    *eax71 = tmp8_86;
    *eax71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax71) + reinterpret_cast<uint32_t>(ecx74) + cf87);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx74) + reinterpret_cast<int32_t>(edx88) + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx74) + reinterpret_cast<int32_t>(edx89) + 4) | *reinterpret_cast<unsigned char*>(&ebx82));
    cf90 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71)) < 0);
    *reinterpret_cast<void**>(&eax71) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax71))));
    eax91 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax71) - (reinterpret_cast<int32_t>(*ebx82) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax71) < reinterpret_cast<int32_t>(*ebx82) + cf90)));
    *reinterpret_cast<void**>(&eax91) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax91))));
    *reinterpret_cast<void***>(eax91) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax91)) - (reinterpret_cast<unsigned char>(eax91) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax91)) < reinterpret_cast<unsigned char>(eax91))));
    *reinterpret_cast<void***>(eax91) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax91)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax91)));
    *reinterpret_cast<void***>(eax91) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax91)) + reinterpret_cast<unsigned char>(eax91));
    esp92 = &esp80->f4->f4;
    eax93 = reinterpret_cast<unsigned char*>(eax91 - 1);
    ecx94 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx74) - 1);
    *reinterpret_cast<unsigned char*>(&eax93) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax93)));
    *eax93 = reinterpret_cast<unsigned char>(*eax93 + *reinterpret_cast<unsigned char*>(&eax93));
    *reinterpret_cast<unsigned char*>(&eax93) = g80008ff;
    *edx95 = reinterpret_cast<signed char>(*edx96 + dl97);
    esp92[reinterpret_cast<int32_t>(edi29) * 8] = reinterpret_cast<void*>(reinterpret_cast<signed char>(esp92[reinterpret_cast<int32_t>(edi29) * 8]) + dl98);
    ebx99 = *esp92;
    *reinterpret_cast<signed char*>(ebp100 + 0x3165bff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp101 + 0x3165bff) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax93) + 1));
    *eax93 = reinterpret_cast<unsigned char>(*eax93 | *reinterpret_cast<unsigned char*>(&eax93));
    ebx102 = reinterpret_cast<struct s333*>(reinterpret_cast<signed char>(ebx99) - 1);
    esp103 = reinterpret_cast<void*>(reinterpret_cast<int32_t>((*reinterpret_cast<struct s334**>(esp92 + 4 - 1))->f4) + 4);
    al104 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax93)));
    tmp8_105 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al104));
    *reinterpret_cast<unsigned char*>(&eax93) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_105 + *ecx94) + reinterpret_cast<uint1_t>(tmp8_105 < al104));
    __asm__("enter 0x5bff, 0x8");
    ebx102->f48 = reinterpret_cast<unsigned char>(ebx102->f48 | *reinterpret_cast<unsigned char*>(&ebx102));
    *eax93 = reinterpret_cast<unsigned char>(*eax93 + *reinterpret_cast<unsigned char*>(&eax93));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx102) + 1) = 8;
    *eax93 = reinterpret_cast<unsigned char>(*eax93 + *reinterpret_cast<unsigned char*>(&eax93));
    *eax93 = reinterpret_cast<unsigned char>(*eax93 + *reinterpret_cast<unsigned char*>(&eax93));
    esp106 = reinterpret_cast<struct s335*>(reinterpret_cast<int32_t>(esp103) - 4);
    esp106->f0 = 0x10005861;
    eax107 = fun_21005864();
    *edx108 = reinterpret_cast<signed char>(*edx109 + *reinterpret_cast<signed char*>(&eax107));
    ebx102->f0 = reinterpret_cast<unsigned char>(ebx102->f0 + *reinterpret_cast<unsigned char*>(&ebx102));
    ecx110 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx94 + 1) + *eax107);
    *ecx110 = reinterpret_cast<signed char>(*ecx110 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx110) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax107) + reinterpret_cast<int32_t>(eax107)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax107) + reinterpret_cast<int32_t>(eax107)) + *reinterpret_cast<signed char*>(&eax107));
    *eax107 = *eax107 + reinterpret_cast<int32_t>(eax107);
    esp111 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp106->f4) + 4);
    eax112 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax107) - 1);
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)));
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)));
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) + reinterpret_cast<int32_t>(eax112));
    al113 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112))));
    tmp8_114 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al113)));
    *reinterpret_cast<void**>(&eax112) = tmp8_114;
    *reinterpret_cast<void**>(&eax112) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)) + reinterpret_cast<unsigned char>(*eax112)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_114) < reinterpret_cast<unsigned char>(al113)));
    eax115 = reinterpret_cast<void*>(eax112 - 1);
    __asm__("sti ");
    esp116 = reinterpret_cast<struct s336*>(reinterpret_cast<int32_t>(esp111) + 4 - 1);
    tmp8_117 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebp118 - 5) + dl119);
    cf120 = reinterpret_cast<uint1_t>(tmp8_117 < *reinterpret_cast<unsigned char*>(ebp121 - 5));
    *reinterpret_cast<unsigned char*>(ebp122 - 5) = tmp8_117;
    ebx123 = esp116->f0;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx124) + reinterpret_cast<uint32_t>(eax115)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx125) + reinterpret_cast<uint32_t>(eax115)) + edx126 + cf120;
    *edx127 = reinterpret_cast<signed char>(*edx128 + dl129);
    tmp32_130 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax115) + reinterpret_cast<uint32_t>(eax115)) + ebp131);
    cf132 = reinterpret_cast<uint1_t>(tmp32_130 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax115) + reinterpret_cast<uint32_t>(eax115)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax115) + reinterpret_cast<uint32_t>(eax115)) = tmp32_130;
    eax133 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax115) - (reinterpret_cast<int32_t>(*ebx123) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax115) < reinterpret_cast<int32_t>(*ebx123) + cf132)));
    *reinterpret_cast<void**>(&eax133) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133))));
    *reinterpret_cast<void***>(eax133) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax133)) - (reinterpret_cast<unsigned char>(eax133) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax133)) < reinterpret_cast<unsigned char>(eax133))));
    *reinterpret_cast<void***>(eax133) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax133)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    *reinterpret_cast<void***>(eax133) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax133)) + reinterpret_cast<unsigned char>(eax133));
    ebx134 = reinterpret_cast<int32_t>(ebx123) - 1;
    esp135 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp116->f4) + 4);
    eax136 = reinterpret_cast<void**>(eax133 - 1);
    ecx137 = reinterpret_cast<uint32_t>(ecx110 - 1 - 1);
    *reinterpret_cast<void**>(&eax136) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136))));
    *eax136 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax136) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)));
    al138 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)) + reinterpret_cast<unsigned char>(*eax136))));
    tmp8_139 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al138)));
    *reinterpret_cast<void**>(&eax136) = tmp8_139;
    *reinterpret_cast<void**>(&eax136) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)) + reinterpret_cast<unsigned char>(*eax136)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_139) < reinterpret_cast<unsigned char>(al138)));
    *eax136 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax136) - 1);
    *eax136 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax136) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx137)));
    *edx140 = reinterpret_cast<signed char>(*edx141 + dl142);
    *reinterpret_cast<signed char*>(edx143 + 0x4c5bfb) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx144 + 0x4c5bfb) + *reinterpret_cast<signed char*>(&ebx134));
    edi145 = reinterpret_cast<struct s337*>(reinterpret_cast<int32_t>(edi29) - reinterpret_cast<int32_t>(edi29));
    esp146 = reinterpret_cast<struct s327**>(reinterpret_cast<int32_t>(esp135) + 4 - 2);
    *esp146 = ss68;
    ecx147 = reinterpret_cast<void**>(ecx137 + *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136)));
    esp148 = &(*esp146)->f4->f4;
    al149 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136))));
    tmp8_150 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al149)));
    *reinterpret_cast<void**>(&eax136) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_150) + reinterpret_cast<signed char>(*ecx147)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_150) < reinterpret_cast<unsigned char>(al149)));
    __asm__("enter 0x5bff, 0x8");
    *eax136 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax136) | *reinterpret_cast<unsigned char*>(&ecx147));
    ebx151 = (*esp148)->f4;
    *eax136 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax136) + reinterpret_cast<uint32_t>(eax136))));
    edi145->f8 = reinterpret_cast<signed char>(edi145->f8 + dh152);
    *reinterpret_cast<void**>(&eax136) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax136)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx147) + 1)));
    eax153 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<unsigned char>(*eax136));
    *edx154 = reinterpret_cast<signed char>(*edx155 + *reinterpret_cast<signed char*>(&ebx151));
    ecx156 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx147) + *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax153) + reinterpret_cast<uint32_t>(eax153)));
    *eax153 = reinterpret_cast<signed char>(*eax153 + *reinterpret_cast<signed char*>(&eax153));
    *eax153 = reinterpret_cast<signed char>(*eax153 + *reinterpret_cast<signed char*>(&eax153));
    eax157 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax153) | 0x215b0808);
    eax158 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax157) + reinterpret_cast<int32_t>(*eax157));
    *ecx156 = reinterpret_cast<signed char>(*ecx156 + *reinterpret_cast<signed char*>(&ebx151));
    *eax158 = reinterpret_cast<signed char>(*eax158 + *reinterpret_cast<signed char*>(&eax158));
    *ecx156 = reinterpret_cast<signed char>(*ecx156 + *reinterpret_cast<signed char*>(&eax158));
}

void fun_100058f5(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    signed char* eax10;
    int32_t ecx11;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 30) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 30) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)(__return_address()));
    ecx11 = ecx + *eax10;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&ecx11));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 54) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 54) + *reinterpret_cast<signed char*>(&ecx11));
}

struct s338 {
    signed char[4] pad4;
    void* f4;
};

struct s340 {
    signed char[4] pad4;
    int32_t f4;
};

struct s339 {
    void* f0;
    signed char[2] pad4;
    struct s340* f4;
};

struct s341 {
    signed char[1] pad1;
    signed char* f1;
};

struct s342 {
    signed char[8] pad8;
    signed char f8;
};

struct s343 {
    signed char[8] pad8;
    signed char f8;
};

void fun_1000590f(unsigned char* ecx) {
    unsigned char* eax2;
    signed char dl3;
    unsigned char* edx4;
    signed char* edx5;
    signed char dl6;
    signed char* esi7;
    signed char* esi8;
    signed char dl9;
    unsigned char* eax10;
    void* esp11;
    unsigned char tmp8_12;
    uint1_t cf13;
    struct s339* esp14;
    void* ss15;
    void* ebx16;
    unsigned char* tmp32_17;
    unsigned char* eax18;
    int32_t* esp19;
    unsigned char* eax20;
    int32_t ecx21;
    unsigned char tmp8_22;
    uint1_t cf23;
    signed char* edx24;
    signed char dl25;
    int32_t ebx26;
    int32_t* esp27;
    unsigned char* eax28;
    unsigned char* ecx29;
    unsigned char tmp8_30;
    uint1_t cf31;
    signed char** esp32;
    struct s341* esi33;
    signed char* ebx34;
    uint1_t cf35;
    int32_t* esp36;
    unsigned char* eax37;
    void* edi38;
    int32_t edi39;
    void* edi40;
    int32_t edi41;
    struct s342* edi42;
    struct s343* edi43;
    unsigned char tmp8_44;
    uint1_t cf45;
    uint1_t cf46;
    void** eax47;
    signed char* eax48;

    eax2 = reinterpret_cast<unsigned char*>(*ecx());
    *eax2 = reinterpret_cast<unsigned char>(*eax2 | *reinterpret_cast<unsigned char*>(&ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ *reinterpret_cast<unsigned char*>(&eax2));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl3);
    *edx4 = reinterpret_cast<unsigned char>(*edx5 + *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + dl6);
    *esi7 = reinterpret_cast<signed char>(*esi8 + dl9);
    eax10 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax2) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax2) + reinterpret_cast<int32_t>(eax2))));
    esp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>((*reinterpret_cast<struct s338**>(reinterpret_cast<int32_t>(__return_address()) + 4))->f4) + 4);
    *eax10 = reinterpret_cast<unsigned char>(*eax10 + *reinterpret_cast<unsigned char*>(&eax10));
    tmp8_12 = reinterpret_cast<unsigned char>(*eax10 + *reinterpret_cast<unsigned char*>(&eax10));
    cf13 = reinterpret_cast<uint1_t>(tmp8_12 < *eax10);
    *eax10 = tmp8_12;
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax10) + *eax10) + cf13);
    esp14 = reinterpret_cast<struct s339*>(reinterpret_cast<int32_t>(esp11) - 2);
    esp14->f0 = ss15;
    __asm__("sti ");
    ebx16 = esp14->f0;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(ebx16) + reinterpret_cast<int16_t>(ebx16) * 2 + 27) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(ebx16) + reinterpret_cast<int16_t>(ebx16) * 2 + 27) | *reinterpret_cast<unsigned char*>(&ebx16));
    tmp32_17 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax10) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax10) + reinterpret_cast<uint32_t>(eax10))));
    eax18 = tmp32_17;
    *eax18 = reinterpret_cast<unsigned char>(*eax18 - (reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint1_t>(*eax18 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_17) < reinterpret_cast<uint32_t>(eax10))))));
    *eax18 = reinterpret_cast<unsigned char>(*eax18 + *reinterpret_cast<signed char*>(&eax18));
    *eax18 = reinterpret_cast<unsigned char>(*eax18 + reinterpret_cast<uint32_t>(eax18));
    esp19 = &esp14->f4->f4;
    eax20 = eax18 - 1;
    ecx21 = reinterpret_cast<int32_t>(ecx - 1);
    *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax20)));
    *eax20 = reinterpret_cast<unsigned char>(*eax20 + *reinterpret_cast<unsigned char*>(&eax20));
    *eax20 = reinterpret_cast<unsigned char>(*eax20 + reinterpret_cast<uint32_t>(eax20));
    *eax20 = reinterpret_cast<unsigned char>(*eax20 + *reinterpret_cast<unsigned char*>(&eax20));
    tmp8_22 = reinterpret_cast<unsigned char>(*eax20 + *reinterpret_cast<unsigned char*>(&eax20));
    cf23 = reinterpret_cast<uint1_t>(tmp8_22 < *eax20);
    *eax20 = tmp8_22;
    *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) + *eax20) + cf23);
    *reinterpret_cast<int16_t*>(&edx24) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax20) % dl25);
    ebx26 = *esp19;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx21) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx21) + 1) + *reinterpret_cast<signed char*>(&ecx21));
    esp27 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp19 + 1) - 1 - 4);
    *esp27 = 0x1000595d;
    eax28 = reinterpret_cast<unsigned char*>(*reinterpret_cast<int32_t*>(ebx26 - 79)());
    ecx29 = reinterpret_cast<unsigned char*>(ecx21 + *eax28);
    *eax28 = reinterpret_cast<unsigned char>(*eax28 + *reinterpret_cast<unsigned char*>(&eax28));
    *eax28 = reinterpret_cast<unsigned char>(*eax28 + *reinterpret_cast<signed char*>(&ecx29));
    tmp8_30 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax28) + reinterpret_cast<int32_t>(eax28) - 74) + *reinterpret_cast<signed char*>(&ecx29));
    cf31 = reinterpret_cast<uint1_t>(tmp8_30 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax28) + reinterpret_cast<int32_t>(eax28) - 74));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax28) + reinterpret_cast<int32_t>(eax28) - 74) = tmp8_30;
    esp32 = reinterpret_cast<signed char**>(esp27 + 1 - 1);
    *esp32 = esi33->f1;
    ebx34 = *esp32;
    cf35 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax28) + *eax28) + cf31) < *reinterpret_cast<unsigned char*>(&eax28));
    __asm__("into ");
    esp36 = reinterpret_cast<int32_t*>(esp32 + 1 - 1);
    *esp36 = 0x1000596f;
    eax37 = reinterpret_cast<unsigned char*>(*ecx29());
    *reinterpret_cast<unsigned char*>(&eax37) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax37) + 2) + cf35);
    *edx24 = reinterpret_cast<signed char>(*edx24 + *reinterpret_cast<signed char*>(&edx24));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edi38) + edi39 * 8 + 17) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi40) + edi41 * 8 + 17) + reinterpret_cast<uint32_t>(eax37);
    *edx24 = reinterpret_cast<signed char>(*edx24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx24) + 1));
    edi42->f8 = reinterpret_cast<signed char>(edi43->f8 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx24) + 1));
    *eax37 = reinterpret_cast<unsigned char>(*eax37 + *reinterpret_cast<unsigned char*>(&eax37));
    *reinterpret_cast<unsigned char**>(esp36 + 1 - 1) = eax37;
    tmp8_44 = reinterpret_cast<unsigned char>(*eax37 + *reinterpret_cast<unsigned char*>(&eax37));
    cf45 = reinterpret_cast<uint1_t>(tmp8_44 < *eax37);
    *eax37 = tmp8_44;
    cf46 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax37) < reinterpret_cast<unsigned char>(*ebx34 + cf45));
    *reinterpret_cast<unsigned char*>(&eax37) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax37) - reinterpret_cast<unsigned char>(*ebx34 + cf46));
    *eax37 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax37 + *reinterpret_cast<unsigned char*>(&eax37)) + cf46);
    *eax37 = reinterpret_cast<unsigned char>(*eax37 + *reinterpret_cast<unsigned char*>(&eax37));
    *eax37 = reinterpret_cast<unsigned char>(*eax37 + *reinterpret_cast<unsigned char*>(&eax37));
    eax47 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax37) | 0xfa49004c);
    *reinterpret_cast<unsigned char*>(ebx34 + reinterpret_cast<int32_t>(ebx34) * 2 + 33) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx34 + reinterpret_cast<int32_t>(ebx34) * 2 + 33) | *reinterpret_cast<unsigned char*>(&ebx34));
    eax48 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax47) + reinterpret_cast<int32_t>(*eax47));
    *ecx29 = reinterpret_cast<unsigned char>(*ecx29 + *reinterpret_cast<unsigned char*>(&ebx34));
    *eax48 = reinterpret_cast<signed char>(*eax48 + *reinterpret_cast<signed char*>(&eax48));
    *ecx29 = reinterpret_cast<unsigned char>(*ecx29 + *reinterpret_cast<signed char*>(&eax48));
}

void fun_100059a1(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    signed char* eax10;
    int32_t ecx11;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 34) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 34) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)(__return_address()));
    ecx11 = ecx + *eax10;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&ecx11));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 58) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 58) + *reinterpret_cast<signed char*>(&ecx11));
}

struct s344 {
    signed char[8] pad8;
    signed char f8;
};

struct s345 {
    signed char[8] pad8;
    signed char f8;
};

struct s347 {
    unsigned char f0;
    signed char[91] pad92;
    signed char f92;
};

struct s346 {
    int32_t f0;
    struct s347* f4;
};

struct s348 {
    unsigned char f0;
    unsigned char f1;
};

signed char g130;

struct s349 {
    signed char f0;
    signed char[1207959551] pad1207959552;
    unsigned char f1207959552;
};

struct s349* fun_a6300();

signed char g6a000000;

struct s350 {
    signed char f0;
    signed char[134420058] pad134420059;
    void* f134420059;
};

struct s351 {
    signed char[4] pad4;
    int32_t f4;
};

unsigned char g1b000000;

int32_t g8000403;

void fun_100059bb(unsigned char* ecx) {
    void** eax2;
    void* esp3;
    signed char dl4;
    unsigned char tmp8_5;
    signed char* edx6;
    signed char dl7;
    uint1_t cf8;
    unsigned char* edx9;
    unsigned char* edx10;
    void* edx11;
    void* edx12;
    void* dh13;
    void* tmp8_14;
    uint1_t cf15;
    void* tmp32_16;
    uint1_t cf17;
    void* edx18;
    void* edx19;
    void* dh20;
    void* tmp8_21;
    uint1_t cf22;
    void* edx23;
    void* edx24;
    int32_t edx25;
    signed char* edx26;
    signed char* edx27;
    signed char dl28;
    signed char* esi29;
    signed char* esi30;
    struct s344* edi31;
    struct s345* edi32;
    signed char dh33;
    int32_t* eax34;
    signed char tmp8_35;
    signed char dl36;
    void* ebx37;
    int32_t ebx38;
    void* ebx39;
    int32_t ebx40;
    unsigned char bl41;
    int32_t* ecx42;
    void*** esp43;
    unsigned char tmp8_44;
    signed char dl45;
    signed char dh46;
    unsigned char* edx47;
    void** ebx48;
    uint32_t* eax49;
    unsigned char dl50;
    struct s346* esp51;
    void** eax52;
    struct s347** esp53;
    struct s348* ecx54;
    struct s347* ebx55;
    void** esp56;
    unsigned char* ecx57;
    void* tmp8_58;
    uint1_t cf59;
    void* al60;
    void* al61;
    void* esp62;
    void* dh63;
    void* ecx64;
    void* tmp8_65;
    uint1_t cf66;
    void* dh67;
    void* tmp8_68;
    uint1_t cf69;
    unsigned char* eax70;
    signed char tmp8_71;
    signed char* esi72;
    signed char* esi73;
    int32_t* esp74;
    struct s349* eax75;
    uint32_t* ecx76;
    unsigned char* eax77;
    int16_t* esp78;
    int16_t es79;
    int32_t* edi80;
    int32_t* edi81;
    signed char* edi82;
    signed char* esi83;
    int16_t edx84;
    signed char tmp8_85;
    int32_t* esp86;
    struct s350* eax87;
    int32_t* esp88;
    int32_t ebp89;
    struct s351** esp90;
    struct s351* ebp91;
    void** eax92;
    int32_t* esp93;
    void* al94;
    void* tmp8_95;
    void* ecx96;
    int32_t ebx97;
    int16_t* esp98;
    int16_t es99;
    int16_t* esp100;
    int16_t es101;
    unsigned char tmp8_102;
    unsigned char* ecx103;
    void** eax104;
    uint32_t ecx105;
    void* al106;
    void* tmp8_107;
    int32_t* esi108;
    int32_t esi109;
    int16_t ebx110;
    int32_t* esp111;
    int32_t* esp112;
    void** eax113;
    void* tmp8_114;
    uint1_t cf115;
    void* tmp8_116;
    uint1_t cf117;
    void* tmp8_118;
    void* tmp32_119;
    uint1_t cf120;
    void* tmp32_121;
    uint1_t cf122;

    eax2 = reinterpret_cast<void**>(*ecx());
    *eax2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) | *reinterpret_cast<unsigned char*>(&ecx));
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl4);
    tmp8_5 = reinterpret_cast<unsigned char>(*edx6 + dl7);
    cf8 = reinterpret_cast<uint1_t>(tmp8_5 < *edx9);
    *edx10 = tmp8_5;
    __asm__("cli ");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx11) + reinterpret_cast<int32_t>(eax2)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx12) + reinterpret_cast<int32_t>(eax2)) + reinterpret_cast<int32_t>(eax2) + cf8;
    *eax2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<signed char>(dh13));
    *reinterpret_cast<void**>(&eax2) = g41300100;
    do {
        tmp8_14 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
        cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_14) < reinterpret_cast<unsigned char>(*eax2));
        *eax2 = tmp8_14;
        tmp32_16 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<int32_t>(eax2) + cf15);
        cf17 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_16) < reinterpret_cast<unsigned char>(*eax2));
        *eax2 = tmp32_16;
    } while (!*eax2);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx18) + reinterpret_cast<int32_t>(eax2)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx19) + reinterpret_cast<int32_t>(eax2)) + reinterpret_cast<int32_t>(eax2) + cf17;
    *eax2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<signed char>(dh20));
    *reinterpret_cast<void**>(&eax2) = g41300100;
    tmp8_21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    cf22 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_21) < reinterpret_cast<unsigned char>(*eax2));
    *eax2 = tmp8_21;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx23) + reinterpret_cast<int32_t>(eax2)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx24) + reinterpret_cast<int32_t>(eax2)) + edx25 + cf22;
    *edx26 = reinterpret_cast<signed char>(*edx27 + dl28);
    *esi29 = reinterpret_cast<signed char>(*esi30 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    edi31->f8 = reinterpret_cast<signed char>(edi32->f8 + dh33);
    *reinterpret_cast<void**>(&eax2) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    eax34 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax2) + reinterpret_cast<unsigned char>(*eax2));
    tmp8_35 = reinterpret_cast<signed char>(g8000803 + dl36);
    g8000803 = tmp8_35;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx37) + ebx38 * 2 + 21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx39) + ebx40 * 2 + 21) | bl41);
    ecx42 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax34) + reinterpret_cast<uint32_t>(eax34))));
    esp43 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp3) - 1);
    tmp8_44 = reinterpret_cast<unsigned char>(dl45 + dh46);
    *reinterpret_cast<unsigned char*>(&edx47) = tmp8_44;
    *eax34 = *eax34 - 1;
    ebx48 = *esp43;
    eax49 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax34) - (reinterpret_cast<int32_t>(*ebx48) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax34) < reinterpret_cast<int32_t>(*ebx48) + reinterpret_cast<uint1_t>(tmp8_44 < dl50))));
    *reinterpret_cast<unsigned char*>(&eax49) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax49)));
    *eax49 = *eax49 | reinterpret_cast<uint32_t>(eax49);
    *ecx42 = *ecx42 + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax49) + reinterpret_cast<uint32_t>(eax49) - 22) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax49) + reinterpret_cast<uint32_t>(eax49) - 22) + *reinterpret_cast<signed char*>(&ecx42));
    esp51 = reinterpret_cast<struct s346*>(esp43 + 1 - 1);
    esp51->f0 = 0x10005a19;
    eax52 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx48) + reinterpret_cast<int32_t>(ebx48) * 2 - 79)());
    esp53 = &esp51->f4;
    ecx54 = reinterpret_cast<struct s348*>(reinterpret_cast<int32_t>(ecx42) + reinterpret_cast<unsigned char>(*eax52));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax52) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax52) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx54) + 1));
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax52) + reinterpret_cast<uint32_t>(eax52) - 54) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax52) + reinterpret_cast<uint32_t>(eax52) - 54) + *reinterpret_cast<signed char*>(&ecx54));
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) - 1);
    ebx55 = *esp53;
    ecx54->f0 = reinterpret_cast<unsigned char>(ecx54->f0 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    ecx54->f0 = reinterpret_cast<unsigned char>(ecx54->f0 + *reinterpret_cast<unsigned char*>(&edx47));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax52) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax52) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx54) + 1));
    esp56 = reinterpret_cast<void**>(esp53 + 1 - 1);
    *esp56 = *eax52;
    ecx57 = &ecx54->f1;
    tmp8_58 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    cf59 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_58) < reinterpret_cast<unsigned char>(*eax52));
    *eax52 = tmp8_58;
    al60 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)) + reinterpret_cast<unsigned char>(*eax52)) + cf59);
    __asm__("in al, 0xff");
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 ^ reinterpret_cast<unsigned char>(al60));
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 + *reinterpret_cast<unsigned char*>(&edx47));
    al61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al60) + 74);
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 ^ reinterpret_cast<unsigned char>(al61));
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 + *reinterpret_cast<unsigned char*>(&edx47));
    *(edx47 - 4) = reinterpret_cast<unsigned char>(*(edx47 - 4) + reinterpret_cast<unsigned char>(al61));
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 ^ reinterpret_cast<unsigned char>(al61));
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 + *reinterpret_cast<unsigned char*>(&edx47));
    *reinterpret_cast<void**>(&eax52) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al61) | 8);
    esp62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*esp56) + 4);
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<signed char>(dh63));
    ecx64 = reinterpret_cast<void*>(ecx57 + 1);
    tmp8_65 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    cf66 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_65) < reinterpret_cast<unsigned char>(*eax52));
    *eax52 = tmp8_65;
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<uint32_t>(eax52) + cf66);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<uint32_t>(eax52)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<uint32_t>(eax52)) + reinterpret_cast<uint32_t>(eax52) + 1;
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<signed char>(dh67));
    *reinterpret_cast<void**>(&eax52) = g41300100;
    tmp8_68 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    cf69 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_68) < reinterpret_cast<unsigned char>(*eax52));
    *eax52 = tmp8_68;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<uint32_t>(eax52)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<uint32_t>(eax52)) + reinterpret_cast<int32_t>(edx47) + cf69;
    *edx47 = reinterpret_cast<unsigned char>(*edx47 + *reinterpret_cast<unsigned char*>(&edx47));
    *edx47 = reinterpret_cast<unsigned char>(*edx47 + reinterpret_cast<uint32_t>(eax52));
    ebx55->f0 = reinterpret_cast<unsigned char>(ebx55->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx64) + 1));
    eax70 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax52) | 0x40026);
    *eax70 = reinterpret_cast<unsigned char>(*eax70 + reinterpret_cast<uint32_t>(eax70));
    *reinterpret_cast<unsigned char*>(&eax70) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax70) + *eax70);
    tmp8_71 = reinterpret_cast<signed char>(g130 + *reinterpret_cast<signed char*>(&ecx64));
    g130 = tmp8_71;
    *esi72 = reinterpret_cast<signed char>(*esi73 + *reinterpret_cast<signed char*>(&ebx55));
    *reinterpret_cast<unsigned char*>(&eax70) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax70) + *eax70);
    *eax70 = reinterpret_cast<unsigned char>(*eax70 + *reinterpret_cast<unsigned char*>(&eax70));
    esp74 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp62) + 1 - 4);
    *esp74 = 0x10005a8d;
    eax75 = fun_a6300();
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax75) + reinterpret_cast<int32_t>(eax75)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax75) + reinterpret_cast<int32_t>(eax75)) + *reinterpret_cast<signed char*>(&eax75));
    eax75->f0 = reinterpret_cast<signed char>(eax75->f0 + *reinterpret_cast<signed char*>(&eax75));
    ecx76 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx64) - 1);
    eax77 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax75) + 0x48000000);
    esp78 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp74 + 1) - 2);
    *esp78 = es79;
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<unsigned char*>(&eax77));
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<signed char*>(&ebx55));
    *edi80 = *edi81 + reinterpret_cast<int32_t>(eax77);
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx76) + reinterpret_cast<int32_t>(eax77) + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx76) + reinterpret_cast<int32_t>(eax77) + 8) + *reinterpret_cast<unsigned char*>(&eax77));
    *edi82 = *esi83;
    *ecx76 = *ecx76 + reinterpret_cast<uint32_t>(ecx76);
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1) + *reinterpret_cast<signed char*>(&ebx55));
    *edx47 = reinterpret_cast<unsigned char>(*edx47 + reinterpret_cast<uint32_t>(ecx76));
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    ebx55->f0 = reinterpret_cast<unsigned char>(ebx55->f0 + reinterpret_cast<uint32_t>(ecx76));
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<unsigned char*>(&eax77));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<int32_t>(eax77)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<int32_t>(eax77)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax77) + 1));
    *reinterpret_cast<unsigned char*>(&eax77) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax77)));
    *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<unsigned char*>(&eax77));
    edx84 = *esp78;
    tmp8_85 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx76) + g6a000000);
    *reinterpret_cast<signed char*>(&ecx76) = tmp8_85;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx55) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx55) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx55) + 1));
    esp86 = reinterpret_cast<int32_t*>(esp78 + 2 - 2);
    *esp86 = 0x10005ace;
    eax87 = reinterpret_cast<struct s350*>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx76) + reinterpret_cast<int32_t>(eax77))());
    *reinterpret_cast<signed char*>(&eax87) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax87) + eax87->f0);
    esp88 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp86 + 1) + 2 - 4);
    *esp88 = ebp89;
    *reinterpret_cast<signed char*>(&eax87) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax87) + eax87->f0);
    eax87->f0 = reinterpret_cast<signed char>(eax87->f0 + reinterpret_cast<int32_t>(eax87));
    esp90 = reinterpret_cast<struct s351**>(reinterpret_cast<uint32_t>(esp88) + 2 - 4);
    *esp90 = ebp91;
    eax87->f0 = reinterpret_cast<signed char>(eax87->f0 + *reinterpret_cast<signed char*>(&eax87));
    eax87->f0 = reinterpret_cast<signed char>(eax87->f0 + reinterpret_cast<int32_t>(eax87));
    eax92 = &eax87->f134420059;
    ebx55->f92 = reinterpret_cast<signed char>(ebx55->f92 + *reinterpret_cast<signed char*>(&ecx76));
    esp93 = &(*esp90)->f4;
    al94 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92))));
    tmp8_95 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al94)));
    *reinterpret_cast<void**>(&eax92) = tmp8_95;
    *reinterpret_cast<void**>(&eax92) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92)) + reinterpret_cast<unsigned char>(*eax92)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_95) < reinterpret_cast<unsigned char>(al94)));
    ecx96 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx76) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx96) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax92))) {
    }
    ebx97 = *esp93;
    esp98 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp93 + 1) - 2);
    *esp98 = es99;
    esp100 = esp98 - 1;
    *esp100 = es101;
    *reinterpret_cast<unsigned char*>(ebx97 + ebx97 * 2 - 73) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx97 + ebx97 * 2 - 73) | *reinterpret_cast<unsigned char*>(&ebx97));
    *eax92 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax92) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92)));
    *eax92 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax92) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92)));
    tmp8_102 = reinterpret_cast<unsigned char>(g1b000000 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92)));
    g1b000000 = tmp8_102;
    ecx103 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx96) + reinterpret_cast<unsigned char>(*eax92));
    *ecx103 = reinterpret_cast<unsigned char>(*ecx103 + *reinterpret_cast<unsigned char*>(&ebx97));
    *eax92 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax92) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92)));
    *ecx103 = reinterpret_cast<unsigned char>(*ecx103 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax92)));
    *reinterpret_cast<signed char*>(ebx97 + 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx97 + 92) + *reinterpret_cast<signed char*>(&ecx103));
    eax104 = eax92 - 1;
    ecx105 = reinterpret_cast<uint32_t>(ecx103 - 1);
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<int32_t>(eax104));
    al106 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104))));
    tmp8_107 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al106)));
    *reinterpret_cast<void**>(&eax104) = tmp8_107;
    *reinterpret_cast<void**>(&eax104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)) + reinterpret_cast<unsigned char>(*eax104)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_107) < reinterpret_cast<unsigned char>(al106)));
    esi108 = reinterpret_cast<int32_t*>(esi109 - 1 + 1 - 1);
    ebx110 = *esp100;
    *reinterpret_cast<signed char*>(ebx110 + 0x3b15bf8) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx110 + 0x3b15bf8) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx110) + 1));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    *eax104 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax104) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax104)));
    esp111 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp100 + 2) - 1 - 1 - 4);
    *esp111 = *esi108;
    __asm__("into ");
    esp112 = esp111 + 1 - 1;
    *esp112 = 0x10005b37;
    eax113 = reinterpret_cast<void**>(g8000403());
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)));
    tmp8_114 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)));
    cf115 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_114) < reinterpret_cast<unsigned char>(*eax113));
    *eax113 = tmp8_114;
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113))) + cf115);
    *reinterpret_cast<void**>(&eax113) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)) + reinterpret_cast<unsigned char>(*eax113));
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)));
    tmp8_116 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)));
    cf117 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_116) < reinterpret_cast<unsigned char>(*eax113));
    *eax113 = tmp8_116;
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113))) + cf117);
    tmp8_118 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)) + reinterpret_cast<unsigned char>(*eax113));
    *reinterpret_cast<void**>(&eax113) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp8_118) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_118) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_118) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)))))))));
    tmp32_119 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<int32_t>(eax113));
    cf120 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_119) < reinterpret_cast<unsigned char>(*eax113));
    *eax113 = tmp32_119;
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) - (reinterpret_cast<int32_t>(eax113) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax113) < reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(eax113) + cf120))));
    *reinterpret_cast<void**>(&eax113) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113))));
    tmp32_121 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<int32_t>(eax113));
    cf122 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_121) < reinterpret_cast<unsigned char>(*eax113));
    *eax113 = tmp32_121;
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) - (reinterpret_cast<int32_t>(eax113) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax113) < reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(eax113) + cf122))));
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)));
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<int32_t>(eax113));
    *eax113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)));
    *reinterpret_cast<void**>(&eax113) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax113)))) + reinterpret_cast<signed char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx84)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx105))));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax113) + reinterpret_cast<int32_t>(eax113) - 42) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax113) + reinterpret_cast<int32_t>(eax113) - 42) - 1;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp112 + 1 + 1) - 1 - 4) = *esi108;
}

struct s352 {
    void* f0;
    signed char[33627226] pad33627227;
    void* f33627227;
};

struct s353 {
    void* f0;
    signed char[15362] pad15363;
    int32_t f15363;
};

struct s354 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s355 {
    signed char[92] pad92;
    signed char f92;
};

struct s356 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s357 {
    void* f0;
    signed char[537073242] pad537073243;
    void* f537073243;
};

struct s359 {
    unsigned char f0;
    signed char[25] pad26;
    void* f26;
};

struct s358 {
    signed char[4] pad4;
    struct s359* f4;
};

struct s360 {
    void* f0;
    unsigned char f1;
};

struct s361 {
    void* f0;
    signed char[91] pad92;
    int32_t f92;
};

struct s362 {
    signed char[8] pad8;
    signed char f8;
};

struct s363 {
    signed char[8] pad8;
    signed char f8;
};

struct s364 {
    signed char[8] pad8;
    signed char f8;
};

struct s365 {
    signed char[8] pad8;
    signed char f8;
};

struct s366 {
    signed char[4] pad4;
    int32_t f4;
    signed char[84] pad92;
    unsigned char f92;
};

struct s367 {
    signed char f0;
    signed char[33627226] pad33627227;
    void* f33627227;
};

struct s368 {
    void* f0;
    signed char[16784218] pad16784219;
    signed char f16784219;
};

void fun_10005b73(void* ecx) {
    int32_t* esi2;
    struct s352* eax3;
    struct s353* ecx4;
    struct s354* ebx5;
    struct s355* ebx6;
    void* tmp8_7;
    uint1_t cf8;
    void* al9;
    void* tmp8_10;
    struct s356** esp11;
    struct s356* ebx12;
    int32_t* esp13;
    int32_t ebp14;
    int32_t* esp15;
    int32_t ebp16;
    struct s357* eax17;
    signed char* edi18;
    signed char* edi19;
    signed char dl20;
    int32_t* esp21;
    int32_t ebp22;
    struct s358** esp23;
    struct s358* ebp24;
    struct s360* eax25;
    struct s361* esi26;
    void* esi27;
    struct s359** esp28;
    void* al29;
    void* tmp8_30;
    void* al31;
    void* tmp8_32;
    uint1_t cf33;
    void* tmp8_34;
    uint1_t cf35;
    void* tmp8_36;
    uint1_t cf37;
    void* tmp8_38;
    struct s359* ebx39;
    int16_t* esp40;
    int16_t es41;
    int16_t* esp42;
    int16_t es43;
    int16_t* esp44;
    int16_t es45;
    struct s362* edi46;
    struct s363* edi47;
    signed char dh48;
    struct s364* edi49;
    struct s365* edi50;
    signed char dh51;
    int16_t* esp52;
    int16_t cs53;
    void** esp54;
    unsigned char* eax55;
    unsigned char tmp8_56;
    uint1_t cf57;
    unsigned char tmp8_58;
    uint1_t cf59;
    signed char** esp60;
    int32_t edi61;
    int32_t edi62;
    int32_t edi63;
    int32_t edi64;
    signed char dh65;
    signed char* ebx66;
    int32_t* esp67;
    int32_t* edx68;
    int32_t* esp69;
    int32_t* edx70;
    signed char* eax71;
    int32_t* esp72;
    int32_t* esp73;
    void** eax74;
    unsigned char* edx75;
    signed char* edx76;
    void* tmp8_77;
    uint1_t cf78;
    void** esp79;
    void* ebx80;
    int32_t* esp81;
    signed char* eax82;
    struct s366* ebp83;
    int32_t ebp84;
    signed char* edx85;
    signed char* edx86;
    signed char dl87;
    int32_t* esp88;
    struct s367* eax89;
    int32_t* edx90;
    int32_t* edx91;
    signed char* edi92;
    signed char* edi93;
    signed char dl94;
    struct s366** esp95;
    struct s366** esp96;
    struct s368* eax97;
    signed char* edi98;
    signed char* edi99;
    signed char dl100;
    struct s366** esp101;
    struct s366* ss102;
    struct s366** esp103;
    signed char* eax104;
    signed char* edx105;
    signed char* edx106;
    struct s366* ebx107;
    struct s366** esp108;

    eax3 = reinterpret_cast<struct s352*>(*esi2());
    ecx4 = reinterpret_cast<struct s353*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<unsigned char>(eax3->f0));
    ebx5->f92 = reinterpret_cast<unsigned char>(ebx6->f92 + *reinterpret_cast<unsigned char*>(&ecx4));
    eax3->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    tmp8_7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    cf8 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_7) < reinterpret_cast<unsigned char>(eax3->f0));
    eax3->f0 = tmp8_7;
    __asm__("fdiv st7, st0");
    al9 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<unsigned char>(ecx4->f0)) + cf8)));
    tmp8_10 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al9)));
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_10) + reinterpret_cast<unsigned char>(ecx4->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_10) < reinterpret_cast<unsigned char>(al9)));
    esp11 = reinterpret_cast<struct s356**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(__return_address()) + 4)) + 4 + 4);
    eax3->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3->f0) | *reinterpret_cast<unsigned char*>(&ecx4));
    ebx12 = *esp11;
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) < 1)));
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<unsigned char>(eax3->f0));
    esp13 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp11 + 1) + 2 - 4);
    *esp13 = ebp14;
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<unsigned char>(eax3->f0));
    eax3->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3->f0) + reinterpret_cast<int32_t>(eax3));
    esp15 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp13) + 2 - 4);
    *esp15 = ebp16;
    eax3->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    eax3->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax3->f0) + reinterpret_cast<int32_t>(eax3));
    eax17 = reinterpret_cast<struct s357*>(&eax3->f33627227);
    *edi18 = reinterpret_cast<signed char>(*edi19 + dl20);
    esp21 = esp15 - 1;
    *esp21 = ebp22;
    *reinterpret_cast<unsigned char*>(&eax17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax17) | reinterpret_cast<unsigned char>(eax17->f0));
    eax17->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax17->f0) + reinterpret_cast<int32_t>(eax17));
    esp23 = reinterpret_cast<struct s358**>(reinterpret_cast<int32_t>(esp21) + 2 - 4);
    *esp23 = ebp24;
    eax17->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax17->f0) | *reinterpret_cast<unsigned char*>(&eax17));
    eax17->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax17->f0) + reinterpret_cast<int32_t>(eax17));
    eax25 = reinterpret_cast<struct s360*>(reinterpret_cast<int32_t>(eax17) + 0x2003165b);
    ebx12->f92 = reinterpret_cast<unsigned char>(ebx12->f92 + *reinterpret_cast<unsigned char*>(&ecx4));
    esi26 = reinterpret_cast<struct s361*>(reinterpret_cast<int32_t>(esi27) + 1 + 1 + 1);
    esp28 = &(*esp23)->f4;
    al29 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25))));
    tmp8_30 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al29)));
    *reinterpret_cast<void**>(&eax25) = tmp8_30;
    al31 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(eax25->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_30) < reinterpret_cast<unsigned char>(al29)));
    __asm__("into ");
    esi26->f92 = esi26->f92 + 1;
    *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al31)))));
    tmp8_32 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(eax25->f0))));
    cf33 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_32) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *reinterpret_cast<void**>(&eax25) = tmp8_32;
    __asm__("salc ");
    esi26->f92 = esi26->f92 + 1;
    do {
        tmp8_34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25))) + cf33);
        cf35 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_34) < reinterpret_cast<unsigned char>(eax25->f0));
        eax25->f0 = tmp8_34;
        tmp8_36 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25))) + cf35);
        cf37 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_36) < reinterpret_cast<unsigned char>(eax25->f0));
        eax25->f0 = tmp8_36;
        tmp8_38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(eax25->f0)) + cf37);
        cf33 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_38) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
        *reinterpret_cast<void**>(&eax25) = tmp8_38;
    } while (cf33);
    ebx39 = *esp28;
    esp40 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp28 + 1) - 2);
    *esp40 = es41;
    esp42 = esp40 - 1;
    *esp42 = es43;
    esi26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi26->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    esp44 = esp42 - 1;
    *esp44 = es45;
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) | *reinterpret_cast<unsigned char*>(&ecx4));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) | *reinterpret_cast<unsigned char*>(&ecx4));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx39) - 73) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx39) - 73) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx39)));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    edi46->f8 = reinterpret_cast<signed char>(edi47->f8 + dh48);
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    edi49->f8 = reinterpret_cast<signed char>(edi50->f8 + dh51);
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    ebx39->f0 = reinterpret_cast<unsigned char>(ebx39->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx39)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx39)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<int32_t>(eax25)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<int32_t>(eax25)) + *reinterpret_cast<unsigned char*>(&ecx4));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<int32_t>(eax25));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax25->f0) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx39)) + reinterpret_cast<signed char>(ebx39->f26)) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx39)))))));
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    esp52 = esp44 + 1 - 1;
    *esp52 = cs53;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<int32_t>(eax25) + 72) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<int32_t>(eax25) + 72) + *reinterpret_cast<unsigned char*>(&ecx4));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<int32_t>(eax25) - 37) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<int32_t>(eax25) - 37) | *reinterpret_cast<unsigned char*>(&ecx4));
    esp54 = reinterpret_cast<void**>(esp52 - 2);
    *esp54 = esi26->f0;
    eax55 = &eax25->f1;
    tmp8_56 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax55) + *eax55)));
    cf57 = reinterpret_cast<uint1_t>(tmp8_56 < *reinterpret_cast<unsigned char*>(&eax55));
    *reinterpret_cast<unsigned char*>(&eax55) = tmp8_56;
    __asm__("fdivp st7, st0");
    *reinterpret_cast<unsigned char*>(&ecx4) = 3;
    *eax55 = reinterpret_cast<unsigned char>(*eax55 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax55) + reinterpret_cast<uint1_t>(*eax55 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax55) + cf57))));
    tmp8_58 = reinterpret_cast<unsigned char>(*eax55 + *reinterpret_cast<unsigned char*>(&eax55));
    cf59 = reinterpret_cast<uint1_t>(tmp8_58 < *eax55);
    *eax55 = tmp8_58;
    *eax55 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax55 + *reinterpret_cast<unsigned char*>(&eax55)) + cf59);
    esp60 = reinterpret_cast<signed char**>(esp54 + 4 - 1);
    *reinterpret_cast<signed char*>(edi61 + edi62 * 8 + 0x4c3636) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi63 + edi64 * 8 + 0x4c3636) + dh65);
    ebx66 = *esp60;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx66) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx66) + 1) >> 1);
    esp67 = reinterpret_cast<int32_t*>(esp60 + 1 - 1);
    *esp67 = 0x10005c47;
    *edx68();
    esp69 = esp67 + 1 - 1;
    *esp69 = 0x10005c4b;
    eax71 = reinterpret_cast<signed char*>(*edx70());
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax71) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax71) + 1) + *reinterpret_cast<signed char*>(&eax71));
    esp72 = esp69 + 1 - 1;
    *esp72 = ecx4->f15363;
    *eax71 = reinterpret_cast<signed char>(*eax71 + *reinterpret_cast<signed char*>(&eax71));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax71) + reinterpret_cast<int32_t>(eax71) + 94) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax71) + reinterpret_cast<int32_t>(eax71) + 94) + 3);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax71) + reinterpret_cast<int32_t>(eax71) - 42) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax71) + reinterpret_cast<int32_t>(eax71) - 42) - 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax71) + reinterpret_cast<int32_t>(eax71) - 56) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax71) + reinterpret_cast<int32_t>(eax71) - 56) - 1);
    esp73 = esp72 - 1;
    *esp73 = 0x10005c65;
    eax74 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx66 + reinterpret_cast<int32_t>(ebx66) * 2 - 73)());
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *ebx66 = reinterpret_cast<signed char>(*ebx66 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx66)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx66)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *edx75 = reinterpret_cast<unsigned char>(*edx76 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    tmp8_77 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax74) + 1)));
    cf78 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_77) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *reinterpret_cast<void**>(&eax74) = tmp8_77;
    esp79 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp73 + 1 + 1) - 1 - 4);
    *esp79 = esi26->f0;
    ebx80 = *esp79;
    *reinterpret_cast<void**>(&eax74) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)) + reinterpret_cast<unsigned char>(*eax74)) + cf78);
    __asm__("in al, 0xff");
    *reinterpret_cast<unsigned char*>(&ecx4) = 3;
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    *eax74 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax74) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax74)));
    esp81 = reinterpret_cast<int32_t*>(esp79 + 4 - 1 - 4);
    *esp81 = 0x10005c9b;
    eax82 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx80) + reinterpret_cast<unsigned char>(ebx80) * 2 - 79)());
    ebp83 = reinterpret_cast<struct s366*>(ebp84 + *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax82) + reinterpret_cast<int32_t>(eax82)));
    *eax82 = reinterpret_cast<signed char>(*eax82 + *reinterpret_cast<signed char*>(&eax82));
    *eax82 = reinterpret_cast<signed char>(*eax82 + *reinterpret_cast<signed char*>(&eax82));
    *edx85 = reinterpret_cast<signed char>(*edx86 + dl87);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax82) + reinterpret_cast<int32_t>(eax82) - 0x76) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax82) + reinterpret_cast<int32_t>(eax82) - 0x76) - 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax82) + reinterpret_cast<int32_t>(eax82) - 32) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax82) + reinterpret_cast<int32_t>(eax82) - 32) - 1);
    esp88 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp81 + 1) - 1 - 4);
    *esp88 = 0x10005cb1;
    eax89 = reinterpret_cast<struct s367*>(*reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(ebx80) + reinterpret_cast<unsigned char>(ebx80) * 2 + 28)());
    *edx90 = *edx91 + reinterpret_cast<int32_t>(eax89);
    *edi92 = reinterpret_cast<signed char>(*edi93 + dl94);
    esp95 = reinterpret_cast<struct s366**>(esp88 + 1 - 1);
    *esp95 = ebp83;
    *reinterpret_cast<signed char*>(&eax89) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax89) + eax89->f0);
    eax89->f0 = reinterpret_cast<signed char>(eax89->f0 + reinterpret_cast<int32_t>(eax89));
    esp96 = esp95 + 1 - 2;
    *esp96 = ebp83;
    eax89->f0 = reinterpret_cast<signed char>(eax89->f0 + *reinterpret_cast<signed char*>(&eax89));
    eax89->f0 = reinterpret_cast<signed char>(eax89->f0 + reinterpret_cast<int32_t>(eax89));
    eax97 = reinterpret_cast<struct s368*>(&eax89->f33627227);
    *edi98 = reinterpret_cast<signed char>(*edi99 + dl100);
    esp101 = esp96 - 2;
    *esp101 = ebp83;
    *reinterpret_cast<unsigned char*>(&eax97) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax97) | reinterpret_cast<unsigned char>(eax97->f0));
    eax97->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax97->f0) + reinterpret_cast<int32_t>(eax97));
    ss102 = *esp101;
    esp103 = esp101 + 1 - 2;
    *esp103 = ebp83;
    eax97->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax97->f0) | *reinterpret_cast<unsigned char*>(&eax97));
    eax97->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax97->f0) + reinterpret_cast<int32_t>(eax97));
    eax104 = &eax97->f16784219;
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<signed char>(ebx80));
    *eax104 = reinterpret_cast<signed char>(*eax104 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax104) + 1));
    ecx4->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx4->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax104)));
    *edx105 = reinterpret_cast<signed char>(*edx106 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax104)));
    ebx107 = *esp103;
    esp108 = esp103 + 2 - 1;
    *esp108 = ss102;
    ebx107->f92 = reinterpret_cast<unsigned char>(ebx107->f92 + 3);
    goto (*esp108)->f4;
}

struct s369 {
    unsigned char f0;
    signed char[33821173] pad33821174;
    signed char f33821174;
};

void fun_10005d30(unsigned char* ecx) {
    uint32_t eax2;
    int32_t eax3;
    uint1_t cf4;
    unsigned char* ebx5;
    signed char dl6;
    uint32_t* edx7;
    int32_t* edx8;
    struct s369* eax9;
    signed char dl10;
    signed char dh11;

    eax2 = eax3 + 0x8000403 + cf4;
    ebx5 = *reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(__return_address()) + 4 + 4);
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ *reinterpret_cast<unsigned char*>(&eax2));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl6);
    *edx7 = *edx8 + eax2;
    *ebx5 = reinterpret_cast<unsigned char>(*ebx5 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax9 = reinterpret_cast<struct s369*>(eax2 | 0x40026);
    eax9->f0 = reinterpret_cast<unsigned char>(eax9->f0 + reinterpret_cast<uint32_t>(eax9));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx) + 1) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx5) + 1));
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl10);
    eax9->f33821174 = reinterpret_cast<signed char>(eax9->f33821174 + *reinterpret_cast<signed char*>(&ecx));
    eax9->f0 = reinterpret_cast<unsigned char>(eax9->f0 + dh11);
    *reinterpret_cast<void**>(&eax9) = g41300100;
    eax9->f0 = reinterpret_cast<unsigned char>(eax9->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
}

struct s370 {
    signed char[4] pad4;
    int32_t f4;
};

struct s371 {
    void* f0;
    signed char[34869748] pad34869749;
    signed char f34869749;
};

struct s372 {
    signed char[1] pad1;
    void* f1;
};

struct s373 {
    signed char[8] pad8;
    unsigned char f8;
};

struct s374 {
    signed char[8] pad8;
    signed char f8;
};

struct s375 {
    signed char[92] pad92;
    signed char f92;
};

struct s376 {
    signed char[92] pad92;
    signed char f92;
};

struct s377 {
    void* f0;
    void* f1;
};

struct s378 {
    void* f0;
    void* f1;
};

void fun_10005d61(void** ecx) {
    struct s370** esp2;
    struct s370* v3;
    void* al4;
    void* al5;
    uint1_t cf6;
    unsigned char tmp8_7;
    signed char* edx8;
    signed char dl9;
    uint1_t cf10;
    unsigned char* edx11;
    unsigned char* edx12;
    void** eax13;
    signed char* edx14;
    signed char* edx15;
    signed char dl16;
    signed char** tmp32_17;
    void* esi18;
    void* ebp19;
    signed char** esi20;
    void* tmp8_21;
    signed char** esi22;
    int32_t* edx23;
    int32_t* edx24;
    struct s371* eax25;
    unsigned char* edx26;
    unsigned char* tmp32_27;
    uint1_t cf28;
    unsigned char tmp8_29;
    uint1_t cf30;
    void* bh31;
    signed char* tmp8_32;
    uint1_t cf33;
    signed char* tmp8_34;
    uint1_t cf35;
    uint32_t tmp32_36;
    uint1_t cf37;
    int32_t* esp38;
    struct s372* ecx39;
    void** ecx40;
    void* tmp8_41;
    uint1_t cf42;
    void* tmp8_43;
    void** eax44;
    uint1_t cf45;
    int32_t ebp46;
    int32_t ebp47;
    unsigned char tmp8_48;
    signed char bh49;
    uint1_t cf50;
    void* ebp51;
    void* ebp52;
    struct s373* edi53;
    struct s374* edi54;
    signed char* ebx55;
    signed char* ebx56;
    signed char bl57;
    unsigned char* ecx58;
    signed char bl59;
    struct s375* ebx60;
    struct s376* ebx61;
    void** eax62;
    struct s377* ecx63;
    void* al64;
    void* tmp8_65;
    int32_t ebx66;
    void* tmp8_67;
    uint1_t cf68;
    signed char** esp69;
    signed char* ebx70;
    void** esp71;
    struct s378* ecx72;
    void* tmp8_73;
    uint1_t cf74;
    void** ecx75;
    void* tmp8_76;
    uint1_t cf77;
    void* tmp32_78;
    uint1_t cf79;
    uint1_t cf80;
    uint32_t* eax81;
    uint32_t* eax82;

    esp2 = reinterpret_cast<struct s370**>(__zero_stack_offset());
    v3 = reinterpret_cast<struct s370*>(__return_address());
    al4 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al5) + reinterpret_cast<unsigned char>(*ecx)) + cf6);
    __asm__("cli ");
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) ^ reinterpret_cast<unsigned char>(al4));
    tmp8_7 = reinterpret_cast<unsigned char>(*edx8 + dl9);
    cf10 = reinterpret_cast<uint1_t>(tmp8_7 < *edx11);
    *edx12 = tmp8_7;
    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al4) + 2) + cf10);
    *edx14 = reinterpret_cast<signed char>(*edx15 + dl16);
    tmp32_17 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esi18) + reinterpret_cast<int32_t>(ebp19));
    esi20 = tmp32_17;
    tmp8_21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + reinterpret_cast<signed char>(*eax13)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_17) < reinterpret_cast<uint32_t>(esi22)));
    __asm__("out dx, al");
    *edx23 = ~*edx24;
    *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_21) + 2) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_21) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13))));
    do {
        *edx26 = reinterpret_cast<unsigned char>(*edx26 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
        tmp32_27 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<int32_t>(esp2));
        cf28 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_27) < reinterpret_cast<uint32_t>(edx26));
        edx26 = tmp32_27;
        *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(eax25->f0)) + cf28);
        --ecx;
    } while (ecx);
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    tmp8_29 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) - 10) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    cf30 = reinterpret_cast<uint1_t>(tmp8_29 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) - 10));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax25) - 10) = tmp8_29;
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<uint32_t>(edx26) * 4) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax25) + reinterpret_cast<uint32_t>(edx26) * 4)) + reinterpret_cast<int32_t>(eax25) + cf30);
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    eax25->f34869749 = reinterpret_cast<signed char>(eax25->f34869749 + *reinterpret_cast<signed char*>(&ecx));
    *edx26 = reinterpret_cast<unsigned char>(*edx26 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    esi20[reinterpret_cast<uint32_t>(esi20) * 8] = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi20[reinterpret_cast<uint32_t>(esi20) * 8]) + reinterpret_cast<signed char>(bh31));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    tmp8_32 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi20[reinterpret_cast<uint32_t>(esi20) * 8]) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)));
    cf33 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_32) < reinterpret_cast<unsigned char>(esi20[reinterpret_cast<uint32_t>(esi20) * 8]));
    esi20[reinterpret_cast<uint32_t>(esi20) * 8] = tmp8_32;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<int32_t>(eax25)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<int32_t>(eax25)) + reinterpret_cast<uint32_t>(edx26) + cf33;
    *edx26 = reinterpret_cast<unsigned char>(*edx26 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    tmp8_34 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi20[reinterpret_cast<uint32_t>(esi20) * 8]) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    cf35 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_34) < reinterpret_cast<unsigned char>(esi20[reinterpret_cast<uint32_t>(esi20) * 8]));
    esi20[reinterpret_cast<uint32_t>(esi20) * 8] = tmp8_34;
    tmp32_36 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi20) + reinterpret_cast<int32_t>(eax25)) + reinterpret_cast<int32_t>(ecx) + cf35;
    cf37 = reinterpret_cast<uint1_t>(tmp32_36 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi20) + reinterpret_cast<int32_t>(eax25)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi20) + reinterpret_cast<int32_t>(eax25)) = tmp32_36;
    esp38 = &v3->f4;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<int32_t>(eax25)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<int32_t>(eax25)) + reinterpret_cast<int32_t>(eax25) + cf37;
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)));
    ecx39 = reinterpret_cast<struct s372*>(ecx - 1);
    eax25->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)));
    ecx40 = &ecx39->f1;
    tmp8_41 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax25->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    cf42 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_41) < reinterpret_cast<unsigned char>(eax25->f0));
    eax25->f0 = tmp8_41;
    tmp8_43 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(eax25->f0)) + cf42);
    *reinterpret_cast<void**>(&eax44) = tmp8_43;
    cf45 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_43) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)))));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)) + cf45));
    esi20[ebp46 * 8] = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi20[ebp47 * 8]) + reinterpret_cast<int32_t>(eax44) + cf45);
    *ecx40 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx40) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *ecx40 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx40) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    tmp8_48 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi20 - 10) + bh49);
    cf50 = reinterpret_cast<uint1_t>(tmp8_48 < *reinterpret_cast<unsigned char*>(esi20 - 10));
    *reinterpret_cast<unsigned char*>(esi20 - 10) = tmp8_48;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esi20) + reinterpret_cast<int32_t>(ebp51)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi20) + reinterpret_cast<int32_t>(ebp52)) + reinterpret_cast<int32_t>(eax44) + cf50;
    edi53->f8 = reinterpret_cast<unsigned char>(edi54->f8 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<int32_t>(eax44));
    *ebx55 = reinterpret_cast<signed char>(*ebx56 + bl57);
    ecx58 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx40) + reinterpret_cast<unsigned char>(*eax44));
    *ecx58 = reinterpret_cast<unsigned char>(*ecx58 + bl59);
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *ecx58 = reinterpret_cast<unsigned char>(*ecx58 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    ebx60->f92 = reinterpret_cast<signed char>(ebx61->f92 + *reinterpret_cast<signed char*>(&ecx58));
    eax62 = eax44 - 1;
    ecx63 = reinterpret_cast<struct s377*>(ecx58 - 1);
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<uint32_t>(eax62));
    al64 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62))));
    tmp8_65 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al64)));
    *reinterpret_cast<void**>(&eax62) = tmp8_65;
    *reinterpret_cast<void**>(&eax62) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)) + reinterpret_cast<unsigned char>(*eax62)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_65) < reinterpret_cast<unsigned char>(al64)));
    ebx66 = *esp38;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx63) + 1) = reinterpret_cast<signed char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx63) + 1) << 1) + *reinterpret_cast<signed char*>(&ebx66));
    *reinterpret_cast<void**>(&ecx63) = reinterpret_cast<void*>(3);
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    tmp8_67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)) + 3);
    cf68 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_67) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *reinterpret_cast<void**>(&edx26) = tmp8_67;
    esp69 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp38 + 1) - 1 + 4 - 1 - 4);
    *esp69 = *esi20;
    ebx70 = *esp69;
    *reinterpret_cast<void**>(&eax62) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)) + reinterpret_cast<signed char>(ecx63->f0)) + cf68);
    __asm__("into ");
    esp71 = reinterpret_cast<void**>(esp69 + 4 - 4);
    *esp71 = *eax62;
    ecx72 = reinterpret_cast<struct s378*>(&ecx63->f1);
    tmp8_73 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    cf74 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_73) < reinterpret_cast<unsigned char>(*eax62));
    *eax62 = tmp8_73;
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<uint32_t>(eax62) + cf74);
    *reinterpret_cast<void**>(&eax62) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)) ^ 0xf6);
    *eax62 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<uint32_t>(eax62))));
    __asm__("in al, 0xff");
    ecx72->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx72->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    ecx72->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx72->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *eax62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx72) + 1)));
    ecx72->f0 = reinterpret_cast<void*>(~reinterpret_cast<unsigned char>(ecx72->f0));
    *reinterpret_cast<void**>(&eax62) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx70)));
    *(esp71 - 4) = *eax62;
    ecx75 = &ecx72->f1;
    tmp8_76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)));
    cf77 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_76) < reinterpret_cast<unsigned char>(*eax62));
    *eax62 = tmp8_76;
    tmp32_78 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax62) + reinterpret_cast<uint32_t>(eax62) + cf77);
    cf79 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_78) < reinterpret_cast<unsigned char>(*eax62));
    *eax62 = tmp32_78;
    cf80 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)) < reinterpret_cast<unsigned char>(10 - cf79));
    *reinterpret_cast<void**>(&eax62) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax62)) - reinterpret_cast<unsigned char>(10 - cf80));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<uint32_t>(eax62)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx26) + reinterpret_cast<uint32_t>(eax62)) + reinterpret_cast<uint32_t>(edx26) + cf80;
    *edx26 = reinterpret_cast<unsigned char>(*edx26 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *edx26 = reinterpret_cast<unsigned char>(*edx26 + reinterpret_cast<uint32_t>(eax62));
    *ebx70 = reinterpret_cast<signed char>(*ebx70 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx75) + 1));
    eax81 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax62) | 0x80026);
    *eax81 = *eax81 + reinterpret_cast<uint32_t>(eax81);
    *ecx75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx75) ^ *reinterpret_cast<unsigned char*>(&eax81));
    *ecx75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx75) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *edx26 = reinterpret_cast<unsigned char>(*edx26 + *reinterpret_cast<unsigned char*>(&eax81));
    *ecx75 = reinterpret_cast<void*>(~reinterpret_cast<unsigned char>(*ecx75));
    *edx26 = reinterpret_cast<unsigned char>(*edx26 + reinterpret_cast<uint32_t>(eax81));
    *ebx70 = reinterpret_cast<signed char>(*ebx70 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx75) + 1));
    eax82 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax81) | 0x80026);
    *eax82 = *eax82 + reinterpret_cast<uint32_t>(eax82);
    *ecx75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx75) ^ *reinterpret_cast<unsigned char*>(&eax82));
    *ecx75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx75) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *ecx75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx75) ^ *reinterpret_cast<unsigned char*>(&eax82));
    *ecx75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx75) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *(edx26 - 11) = reinterpret_cast<unsigned char>(*(edx26 - 11) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx26) + 1)));
    __asm__("hlt ");
}

struct s379 {
    void* f0;
    signed char[75] pad76;
    unsigned char f76;
    signed char[811293864] pad811293941;
    signed char f811293941;
};

struct s380 {
    signed char[1] pad1;
    void* f1;
};

struct s381 {
    signed char[1] pad1;
    unsigned char f1;
};

int32_t g40026;

struct s382 {
    signed char[8] pad8;
    signed char f8;
};

struct s383 {
    signed char[8] pad8;
    signed char f8;
};

struct s384 {
    signed char[8] pad8;
    signed char f8;
};

struct s385 {
    signed char[8] pad8;
    signed char f8;
};

struct s386 {
    signed char[1] pad1;
    uint32_t* f1;
};

void fun_10005f8d(unsigned char* ecx) {
    int32_t* ebx2;
    struct s379* eax3;
    signed char bl4;
    unsigned char* edx5;
    signed char* edx6;
    void* v7;
    void* ss8;
    struct s380* ecx9;
    void* al10;
    void* tmp8_11;
    signed char** esp12;
    signed char* ebx13;
    void** ecx14;
    void* tmp8_15;
    uint1_t cf16;
    struct s381* ecx17;
    void** esp18;
    unsigned char* ecx19;
    void* tmp8_20;
    uint1_t cf21;
    void* tmp32_22;
    uint1_t cf23;
    void* edx24;
    void* edx25;
    void* dh26;
    void* tmp8_27;
    uint1_t cf28;
    unsigned char* edx29;
    void* edx30;
    struct s382* edi31;
    struct s383* edi32;
    struct s384* edi33;
    struct s385* edi34;
    void* tmp8_35;
    uint1_t cf36;
    uint32_t** esp37;
    struct s386* esi38;
    void* tmp8_39;
    uint1_t cf40;

    eax3 = reinterpret_cast<struct s379*>(*ebx2());
    *ecx = reinterpret_cast<unsigned char>(*ecx + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *ecx = reinterpret_cast<unsigned char>(*ecx + bl4);
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *ecx = reinterpret_cast<unsigned char>(*ecx + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *edx5 = reinterpret_cast<unsigned char>(*edx6 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    v7 = ss8;
    ecx9 = reinterpret_cast<struct s380*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__return_address()) + 92) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__return_address()) + 92) + *reinterpret_cast<unsigned char*>(&ecx9));
    al10 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3))));
    tmp8_11 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al10)));
    *reinterpret_cast<void**>(&eax3) = tmp8_11;
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_11) < reinterpret_cast<unsigned char>(al10)));
    __asm__("out 0xff, al");
    esp12 = reinterpret_cast<signed char**>(reinterpret_cast<int16_t>(v7) + 4 + 4);
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) | *reinterpret_cast<unsigned char*>(&ecx9));
    ebx13 = *esp12;
    *reinterpret_cast<unsigned char*>(&ecx9) = 7;
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) + 76) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) + 76) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) - 0x5bffb30b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) - 0x5bffb30b) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx9) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) - 0x63ffb30b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) - 0x63ffb30b) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax3) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + 0x305b5cf5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + 0x305b5cf5) + *reinterpret_cast<signed char*>(&ebx13));
    ecx14 = &ecx9->f1;
    tmp8_15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    cf16 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_15) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    *reinterpret_cast<void**>(eax3) = tmp8_15;
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<signed char>(*ecx14)) + cf16);
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    ecx17 = reinterpret_cast<struct s381*>(reinterpret_cast<uint32_t>(ecx14) - g40026);
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<uint32_t>(eax3));
    esp18 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp12 + 1) - 1 - 1 - 4);
    *esp18 = *reinterpret_cast<void**>(eax3);
    ecx19 = &ecx17->f1;
    tmp8_20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    cf21 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_20) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    *reinterpret_cast<void**>(eax3) = tmp8_20;
    tmp32_22 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<uint32_t>(eax3) + cf21);
    cf23 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_22) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    *reinterpret_cast<void**>(eax3) = tmp32_22;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx24) + reinterpret_cast<uint32_t>(eax3)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx25) + reinterpret_cast<uint32_t>(eax3)) + reinterpret_cast<uint32_t>(eax3) + cf23;
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<signed char>(dh26));
    *reinterpret_cast<void**>(&eax3) = g41300100;
    tmp8_27 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    cf28 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_27) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    *reinterpret_cast<void**>(eax3) = tmp8_27;
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<uint32_t>(eax3) + cf28);
    edx29 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx30) - 1);
    edi31->f8 = reinterpret_cast<signed char>(edi32->f8 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx29) + 1));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    edi33->f8 = reinterpret_cast<signed char>(edi34->f8 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx29) + 1));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *ebx13 = reinterpret_cast<signed char>(*ebx13 + *reinterpret_cast<signed char*>(&ebx13));
    *ecx19 = reinterpret_cast<unsigned char>(*ecx19 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *ecx19 = reinterpret_cast<unsigned char>(*ecx19 + *reinterpret_cast<signed char*>(&ebx13));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *ecx19 = reinterpret_cast<unsigned char>(*ecx19 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *edx29 = reinterpret_cast<unsigned char>(*edx29 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    tmp8_35 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax3) + 1)));
    cf36 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_35) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(&eax3) = tmp8_35;
    esp37 = reinterpret_cast<uint32_t**>(esp18 + 4 - 1 - 4);
    *esp37 = esi38->f1;
    *reinterpret_cast<void**>(&eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3))) + cf36);
    __asm__("in al, 0xff");
    **esp37 = **esp37 & reinterpret_cast<uint32_t>(eax3);
    tmp8_39 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    cf40 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_39) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)));
    *reinterpret_cast<void**>(eax3) = tmp8_39;
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) - (reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax3) + cf40))));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<void**>(eax3) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax3)) + reinterpret_cast<uint32_t>(eax3));
}

void fun_10006037(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    signed char* eax10;
    int32_t ecx11;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 36) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 36) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)(__return_address()));
    ecx11 = ecx + *eax10;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&ecx11));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 82) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 82) + *reinterpret_cast<signed char*>(&ecx11));
}

void fun_10006051(int32_t* ecx) {
    uint32_t** eax2;
    signed char* edx3;
    signed char* edx4;
    signed char dl5;
    uint1_t cf6;
    uint32_t* v7;
    int32_t ecx8;
    uint32_t* tmp8_9;
    uint1_t cf10;
    void* edx11;
    void* edx12;
    int32_t edx13;
    signed char* edx14;
    signed char* edx15;
    signed char dl16;
    uint32_t tmp32_17;
    int32_t edx18;
    uint1_t cf19;
    void* dl20;
    signed char* edx21;
    signed char* edx22;
    signed char bl23;
    void** eax24;
    void* tmp8_25;
    uint1_t cf26;

    eax2 = reinterpret_cast<uint32_t**>(*ecx(__return_address()));
    *edx3 = reinterpret_cast<signed char>(*edx4 + dl5);
    *reinterpret_cast<void**>(&eax2) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)) + 2) + cf6) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    v7 = *eax2;
    ecx8 = reinterpret_cast<int32_t>(ecx) + 1;
    tmp8_9 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    cf10 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_9) < reinterpret_cast<unsigned char>(*eax2));
    *eax2 = tmp8_9;
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<uint32_t>(eax2) + cf10);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx11) + reinterpret_cast<uint32_t>(eax2)) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx12) + reinterpret_cast<uint32_t>(eax2)) + edx13);
    *edx14 = reinterpret_cast<signed char>(*edx15 + dl16);
    tmp32_17 = *reinterpret_cast<uint32_t*>(eax2 - 8) + edx18;
    cf19 = reinterpret_cast<uint1_t>(tmp32_17 < *reinterpret_cast<uint32_t*>(eax2 - 8));
    *reinterpret_cast<uint32_t*>(eax2 - 8) = tmp32_17;
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<uint32_t>(eax2) + cf19);
    *reinterpret_cast<void**>(&eax2) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)) ^ reinterpret_cast<unsigned char>(*eax2));
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<signed char>(dl20));
    *edx21 = reinterpret_cast<signed char>(*edx22 + bl23);
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    *eax2 = reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax2)));
    eax24 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax2) | 0xf355004c);
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) | *reinterpret_cast<unsigned char*>(&ecx8));
    *v7 = *v7 & reinterpret_cast<uint32_t>(eax24);
    tmp8_25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax24)));
    cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_25) < reinterpret_cast<unsigned char>(*eax24));
    *eax24 = tmp8_25;
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) - (reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax24) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax24) + cf26))));
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax24)));
    *eax24 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax24) + reinterpret_cast<uint32_t>(eax24));
}

void fun_10006095(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    signed char* eax10;
    int32_t ecx11;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 34) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 34) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)(__return_address()));
    ecx11 = ecx + *eax10;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&ecx11));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 58) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 58) + *reinterpret_cast<signed char*>(&ecx11));
}

struct s387 {
    signed char[8] pad8;
    signed char f8;
};

struct s388 {
    signed char[8] pad8;
    signed char f8;
};

struct s389 {
    signed char[4] pad4;
    int32_t f4;
};

struct s390 {
    int32_t f0;
    uint32_t* f4;
};

struct s391 {
    signed char[8] pad8;
    signed char f8;
};

struct s392 {
    signed char[8] pad8;
    signed char f8;
};

signed char g5c080808;

void fun_100060af(unsigned char* ecx) {
    void** eax2;
    struct s387* edi3;
    struct s388* edi4;
    signed char dh5;
    void** eax6;
    signed char dl7;
    signed char* edx8;
    signed char* edx9;
    signed char* ebx10;
    signed char* ebx11;
    signed char bl12;
    signed char* ecx13;
    int32_t* esp14;
    void** eax15;
    int32_t* ecx16;
    void* al17;
    void* tmp8_18;
    int32_t ebx19;
    struct s390* esp20;
    int32_t ebx21;
    void* edx22;
    void* edx23;
    int32_t edx24;
    signed char dh25;
    signed char* edx26;
    signed char* edx27;
    signed char dl28;
    signed char* edx29;
    void* edx30;
    struct s391* edi31;
    struct s392* edi32;
    unsigned char* eax33;
    signed char tmp8_34;
    unsigned char tmp8_35;
    uint1_t cf36;

    eax2 = reinterpret_cast<void**>(*ecx());
    *eax2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) | *reinterpret_cast<unsigned char*>(&ecx));
    *ecx = reinterpret_cast<unsigned char>(*ecx ^ *reinterpret_cast<unsigned char*>(&eax2));
    edi3->f8 = reinterpret_cast<signed char>(edi4->f8 + dh5);
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax6 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax2) + reinterpret_cast<unsigned char>(*eax2));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl7);
    *edx8 = reinterpret_cast<signed char>(*edx9 + *reinterpret_cast<signed char*>(&eax6));
    *ebx10 = reinterpret_cast<signed char>(*ebx11 + bl12);
    ecx13 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<uint32_t>(*eax6));
    *ecx13 = reinterpret_cast<signed char>(*ecx13 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx13) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax6) + reinterpret_cast<uint32_t>(eax6)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax6) + reinterpret_cast<uint32_t>(eax6)) + *reinterpret_cast<signed char*>(&eax6));
    *eax6 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(*eax6) + reinterpret_cast<uint32_t>(eax6));
    esp14 = &(*reinterpret_cast<struct s389**>(reinterpret_cast<int32_t>(__return_address()) + 4))->f4;
    eax15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax6) - 1);
    ecx16 = reinterpret_cast<int32_t*>(ecx13 - 1);
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<uint32_t>(eax15));
    al17 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15))));
    tmp8_18 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al17)));
    *reinterpret_cast<void**>(&eax15) = tmp8_18;
    *reinterpret_cast<void**>(&eax15) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)) + reinterpret_cast<unsigned char>(*eax15)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_18) < reinterpret_cast<unsigned char>(al17)));
    __asm__("out 0xf2, al");
    ebx19 = *esp14;
    esp20 = reinterpret_cast<struct s390*>(reinterpret_cast<int32_t>(esp14 + 1) - 1);
    ebx21 = esp20->f0;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx22) + reinterpret_cast<uint32_t>(eax15)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx23) + reinterpret_cast<uint32_t>(eax15)) + edx24 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx19) + dh25) < *reinterpret_cast<unsigned char*>(&ebx19));
    *edx26 = reinterpret_cast<signed char>(*edx27 + dl28);
    edx29 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx30) + reinterpret_cast<uint32_t>(ecx16));
    *ecx16 = ~*ecx16;
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx29) + 1)));
    edi31->f8 = reinterpret_cast<signed char>(edi32->f8 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx29) + 1)));
    *reinterpret_cast<void**>(&eax15) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx16) + 1)));
    eax33 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax15) + reinterpret_cast<unsigned char>(*eax15));
    *edx29 = reinterpret_cast<signed char>(*edx29 + *reinterpret_cast<signed char*>(&ebx21));
    *eax33 = reinterpret_cast<unsigned char>(*eax33 + *reinterpret_cast<signed char*>(&eax33));
    *eax33 = reinterpret_cast<unsigned char>(*eax33 + *reinterpret_cast<signed char*>(&eax33));
    tmp8_34 = reinterpret_cast<signed char>(g5c080808 + *reinterpret_cast<signed char*>(&ecx16));
    g5c080808 = tmp8_34;
    *esp20->f4 = *esp20->f4 & reinterpret_cast<uint32_t>(eax33);
    tmp8_35 = reinterpret_cast<unsigned char>(*eax33 + *reinterpret_cast<signed char*>(&eax33));
    cf36 = reinterpret_cast<uint1_t>(tmp8_35 < *eax33);
    *eax33 = tmp8_35;
    *eax33 = reinterpret_cast<unsigned char>(*eax33 - (reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint1_t>(*eax33 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax33) + cf36))));
    *eax33 = reinterpret_cast<unsigned char>(*eax33 + *reinterpret_cast<signed char*>(&eax33));
    *eax33 = reinterpret_cast<unsigned char>(*eax33 + reinterpret_cast<uint32_t>(eax33));
}

void fun_10006119(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    signed char* eax10;
    int32_t ecx11;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 32) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 32) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)(__return_address()));
    ecx11 = ecx + *eax10;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&ecx11));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 56) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 56) + *reinterpret_cast<signed char*>(&ecx11));
}

unsigned char g8120100;

struct s393 {
    signed char[8] pad8;
    signed char f8;
};

struct s394 {
    signed char[8] pad8;
    signed char f8;
};

signed char g4044;

void fun_10006133(void** ecx) {
    void** eax2;
    void* dl3;
    uint32_t tmp32_4;
    int32_t edi5;
    uint1_t cf6;
    void* tmp32_7;
    uint1_t cf8;
    signed char* edx9;
    void* edx10;
    unsigned char* eax11;
    signed char tmp8_12;
    int32_t ebx13;
    int32_t ebx14;
    int32_t ebx15;
    int32_t ebx16;
    unsigned char bl17;
    struct s393* edi18;
    struct s394* edi19;
    void** eax20;
    signed char tmp8_21;
    signed char* ebx22;
    signed char* ebx23;
    signed char bl24;
    void* bl25;
    void* bl26;
    void* tmp8_27;
    uint1_t cf28;
    void** eax29;
    void* tmp32_30;
    uint1_t cf31;
    unsigned char* edx32;
    signed char* esi33;
    signed char* esi34;
    int32_t* esi35;

    eax2 = reinterpret_cast<void**>(*ecx());
    *eax2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) ^ *reinterpret_cast<unsigned char*>(&eax2));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(dl3));
    tmp32_4 = *reinterpret_cast<uint32_t*>(eax2 - 6) + edi5;
    cf6 = reinterpret_cast<uint1_t>(tmp32_4 < *reinterpret_cast<uint32_t*>(eax2 - 6));
    *reinterpret_cast<uint32_t*>(eax2 - 6) = tmp32_4;
    tmp32_7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<uint32_t>(eax2) + cf6);
    cf8 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_7) < reinterpret_cast<unsigned char>(*eax2));
    *eax2 = tmp32_7;
    edx9 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx10) - 1);
    __asm__("sti ");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx9) + reinterpret_cast<uint32_t>(eax2)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx9) + reinterpret_cast<uint32_t>(eax2)) + reinterpret_cast<uint32_t>(eax2) + cf8;
    *eax2 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax2) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx9) + 1)));
    *reinterpret_cast<unsigned char*>(&eax2) = g8120100;
    eax11 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax2) & 0xc401115c);
    tmp8_12 = reinterpret_cast<signed char>(g8000803 + *reinterpret_cast<signed char*>(&edx9));
    g8000803 = tmp8_12;
    *reinterpret_cast<unsigned char*>(ebx13 + ebx14 * 2 - 73) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx15 + ebx16 * 2 - 73) | bl17);
    *eax11 = reinterpret_cast<unsigned char>(*eax11 | *reinterpret_cast<unsigned char*>(&eax11));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<unsigned char*>(&eax11));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<unsigned char*>(&eax11));
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) | *eax11);
    edi18->f8 = reinterpret_cast<signed char>(edi19->f8 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx9) + 1)));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<unsigned char*>(&eax11));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<unsigned char*>(&eax11));
    eax20 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax11) & 0xff004044);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(eax20 == 0))) {
        tmp8_21 = reinterpret_cast<signed char>(g4044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax20) + 1));
        g4044 = tmp8_21;
    }
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<uint32_t>(eax20));
    *ebx22 = reinterpret_cast<signed char>(*ebx23 + bl24);
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(bl25));
    *eax20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<signed char>(bl26));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    *edx9 = reinterpret_cast<signed char>(*edx9 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    *eax20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    *eax20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    tmp8_27 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax20)));
    cf28 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_27) < reinterpret_cast<unsigned char>(*eax20));
    *eax20 = tmp8_27;
    eax29 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax20) - (reinterpret_cast<unsigned char>(*eax20) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax20) < reinterpret_cast<unsigned char>(*eax20) + cf28)));
    tmp32_30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<uint32_t>(eax29));
    cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_30) < reinterpret_cast<unsigned char>(*eax29));
    *eax29 = tmp32_30;
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) - (reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax29) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax29) + cf31))));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<uint32_t>(eax29));
    edx32 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx9) + reinterpret_cast<unsigned char>(*eax29));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *edx32 = reinterpret_cast<unsigned char>(*edx32 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *esi33 = reinterpret_cast<signed char>(*esi34 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx32) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29) - 34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29) - 34) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4 + 4 - 4) = *esi35;
    *reinterpret_cast<void**>(&ecx) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) + reinterpret_cast<unsigned char>(*eax29))));
    goto *ecx;
}

struct s395 {
    unsigned char f0;
    signed char[13314] pad13315;
    signed char f13315;
    signed char[1023] pad14339;
    signed char* f14339;
};

struct s396 {
    signed char[1] pad1;
    unsigned char f1;
};

signed char g1004044;

struct s397 {
    signed char* f0;
    unsigned char f1;
    signed char[6] pad8;
    signed char f8;
};

struct s398 {
    signed char[1] pad1;
    signed char* f1;
};

unsigned char gff004044;

struct s399 {
    int32_t f0;
    void* f4;
};

unsigned char g200125c;

struct s402 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s401 {
    signed char[4] pad4;
    struct s402* f4;
};

struct s400 {
    int32_t f0;
    struct s401* f4;
};

unsigned char g51004044;

struct s403 {
    unsigned char f0;
    signed char[7] pad8;
    signed char f8;
};

struct s405 {
    signed char[4] pad4;
    int32_t f4;
};

struct s404 {
    int32_t f0;
    struct s405* f4;
};

unsigned char g200115c;

struct s406 {
    int32_t f0;
    uint32_t* f4;
};

unsigned char* fun_2a00639a();

unsigned char g5c080836;

void fun_100061c7(struct s395* ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t v8;
    void* ebx9;
    int32_t ebx10;
    struct s396* eax11;
    unsigned char* eax12;
    signed char tmp8_13;
    signed char dh14;
    unsigned char bl15;
    unsigned char* esi16;
    unsigned char* esi17;
    unsigned char dh18;
    int32_t esi19;
    int32_t esi20;
    int32_t edx21;
    int32_t edx22;
    unsigned char tmp8_23;
    uint1_t cf24;
    unsigned char tmp8_25;
    uint1_t cf26;
    struct s397* edi27;
    struct s398* edi28;
    int32_t* edx29;
    int32_t* edx30;
    unsigned char* eax31;
    signed char* v32;
    unsigned char tmp8_33;
    uint1_t cf34;
    signed char* ebx35;
    uint32_t eax36;
    unsigned char tmp8_37;
    uint1_t zf38;
    int1_t sf39;
    unsigned char dl40;
    signed char* edx41;
    signed char* edx42;
    signed char dl43;
    struct s399* esp44;
    int32_t* edx45;
    unsigned char* eax46;
    unsigned char tmp8_47;
    uint1_t zf48;
    int1_t sf49;
    unsigned char dl50;
    unsigned char* tmp32_51;
    unsigned char* eax52;
    void* esp53;
    unsigned char* eax54;
    struct s400* esp55;
    void** eax56;
    struct s402** esp57;
    struct s402* ebx58;
    void** esp59;
    void* ss60;
    void** ecx61;
    signed char** esi62;
    void* esi63;
    unsigned char al64;
    unsigned char tmp8_65;
    unsigned char** esp66;
    unsigned char* ebx67;
    void** eax68;
    signed char dh69;
    void** eax70;
    unsigned char tmp8_71;
    unsigned char tmp8_72;
    unsigned char tmp8_73;
    unsigned char tmp8_74;
    unsigned char tmp8_75;
    unsigned char tmp8_76;
    signed char tmp8_77;
    void** tmp32_78;
    void** eax79;
    void* dl80;
    signed char dh81;
    signed char** esp82;
    signed char* ebx83;
    struct s403* edi84;
    int32_t* esp85;
    int32_t* edx86;
    int32_t eax87;
    int32_t* esp88;
    int32_t* edx89;
    int32_t eax90;
    signed char dh91;
    int32_t* esp92;
    int32_t* edx93;
    int32_t eax94;
    int32_t* esp95;
    int32_t* edx96;
    int32_t* esp97;
    void** eax98;
    unsigned char tmp32_99;
    uint1_t cf100;
    int32_t* esp101;
    struct s404* esp102;
    int32_t* edx103;
    void** eax104;
    unsigned char tmp8_105;
    uint1_t zf106;
    int1_t sf107;
    signed char* edx108;
    signed char* edx109;
    signed char dl110;
    unsigned char tmp8_111;
    void* tmp8_112;
    void* dl113;
    uint1_t cf114;
    unsigned char al115;
    signed char* edx116;
    signed char* edx117;
    signed char dl118;
    int32_t edx119;
    signed char dh120;
    void** eax121;
    void* dl122;
    signed char* edx123;
    signed char* edx124;
    signed char* ecx125;
    int32_t* esp126;
    void** eax127;
    uint32_t ecx128;
    void* al129;
    void* tmp8_130;
    unsigned char* esi131;
    int32_t ebx132;
    unsigned char tmp8_133;
    uint1_t cf134;
    void* edx135;
    void* edx136;
    int32_t edx137;
    signed char* edx138;
    signed char* edx139;
    signed char dl140;
    uint32_t tmp32_141;
    int32_t* edx142;
    int1_t cf143;
    uint32_t* edx144;
    uint32_t* edx145;
    struct s406* esp146;
    unsigned char* eax147;
    unsigned char tmp8_148;
    uint1_t cf149;
    uint32_t* ebx150;
    unsigned char tmp8_151;
    uint1_t cf152;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<unsigned char*>(eax4 + eax5 - 42) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 42) + *reinterpret_cast<unsigned char*>(&ecx));
    v8 = reinterpret_cast<int32_t>("D@");
    eax11 = reinterpret_cast<struct s396*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx9) + ebx10 * 2 + 37)(__return_address()));
    eax12 = &eax11->f1;
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + reinterpret_cast<uint32_t>(eax12));
    tmp8_13 = reinterpret_cast<signed char>(g1004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1));
    g1004044 = tmp8_13;
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + ecx->f0);
    ecx->f13315 = reinterpret_cast<signed char>(ecx->f13315 + dh14);
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + bl15);
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&ecx));
    *esi16 = reinterpret_cast<unsigned char>(*esi17 | dh18);
    *reinterpret_cast<signed char*>(esi19 - 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi20 - 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax12) + 1));
    *reinterpret_cast<signed char*>(edx21 - 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx22 - 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<uint32_t>(eax12) + 0x6e) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<uint32_t>(eax12) + 0x6e) | *reinterpret_cast<unsigned char*>(&ecx));
    tmp8_23 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + *eax12)));
    cf24 = reinterpret_cast<uint1_t>(tmp8_23 < *reinterpret_cast<unsigned char*>(&eax12));
    *reinterpret_cast<unsigned char*>(&eax12) = tmp8_23;
    if (__intrinsic()) {
    }
    tmp8_25 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + *eax12) + cf24);
    cf26 = reinterpret_cast<uint1_t>(tmp8_25 < *reinterpret_cast<unsigned char*>(&eax12));
    *reinterpret_cast<unsigned char*>(&eax12) = tmp8_25;
    if (!*reinterpret_cast<unsigned char*>(&eax12)) {
    }
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + *eax12) + cf26);
    if (*reinterpret_cast<signed char*>(&eax12) < reinterpret_cast<signed char>(0)) {
    }
    edi27 = reinterpret_cast<struct s397*>(&edi28->f1);
    *edx29(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v8) + 3));
    eax31 = reinterpret_cast<unsigned char*>(*edx30(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v8) + 3)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax31) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax31) + 1) + *reinterpret_cast<unsigned char*>(&eax31));
    v32 = ecx->f14339;
    *eax31 = reinterpret_cast<unsigned char>(*eax31 + *reinterpret_cast<unsigned char*>(&eax31));
    tmp8_33 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<uint32_t>(eax31) - 64) + *reinterpret_cast<unsigned char*>(&ecx));
    cf34 = reinterpret_cast<uint1_t>(tmp8_33 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<uint32_t>(eax31) - 64));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<uint32_t>(eax31) - 64) = tmp8_33;
    *eax31 = reinterpret_cast<unsigned char>(*eax31 - 1);
    ebx35 = v32;
    *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *eax31) + cf34);
    eax36 = reinterpret_cast<uint32_t>(eax31) & 0x200115c;
    tmp8_37 = reinterpret_cast<unsigned char>(gff004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax36) + 1));
    gff004044 = tmp8_37;
    zf38 = reinterpret_cast<uint1_t>(gff004044 == 0);
    sf39 = reinterpret_cast<signed char>(gff004044) < reinterpret_cast<signed char>(0);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf39 != __intrinsic()) | zf38)) {
        ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + dl40);
    }
    *edx41 = reinterpret_cast<signed char>(*edx42 + dl43);
    esp44 = reinterpret_cast<struct s399*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 + 1 - 1 - 1 - 4 + 4 - 4 + 4 - 4 + 4 - 4 + 4 + reinterpret_cast<int32_t>(ebx35) - 4);
    esp44->f0 = 0x1000623d;
    eax46 = reinterpret_cast<unsigned char*>(*edx45());
    g200125c = 0xff;
    tmp8_47 = reinterpret_cast<unsigned char>(gff004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax46) + 1));
    gff004044 = tmp8_47;
    zf48 = reinterpret_cast<uint1_t>(gff004044 == 0);
    sf49 = reinterpret_cast<signed char>(gff004044) < reinterpret_cast<signed char>(0);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf49 != __intrinsic()) | zf48)) {
        ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + dl50);
    }
    *reinterpret_cast<signed char*>(&eax46) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax46) + 34);
    *ebx35 = reinterpret_cast<signed char>(*ebx35 + *reinterpret_cast<signed char*>(&ebx35));
    tmp32_51 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax46) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax46) + reinterpret_cast<uint32_t>(eax46))));
    eax52 = tmp32_51;
    *eax52 = reinterpret_cast<unsigned char>(*eax52 - (reinterpret_cast<uint32_t>(eax52) + reinterpret_cast<uint1_t>(*eax52 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax52) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_51) < reinterpret_cast<uint32_t>(eax46))))));
    *eax52 = reinterpret_cast<unsigned char>(*eax52 + *reinterpret_cast<signed char*>(&eax52));
    *eax52 = reinterpret_cast<unsigned char>(*eax52 + reinterpret_cast<uint32_t>(eax52));
    esp53 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp44->f4) + 4);
    eax54 = eax52 - 1;
    *reinterpret_cast<signed char*>(&eax54) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax54)));
    *eax54 = reinterpret_cast<unsigned char>(*eax54 + *reinterpret_cast<signed char*>(&eax54));
    *eax54 = reinterpret_cast<unsigned char>(*eax54 + reinterpret_cast<uint32_t>(eax54));
    *eax54 = reinterpret_cast<unsigned char>(*eax54 + *reinterpret_cast<signed char*>(&eax54));
    *eax54 = reinterpret_cast<unsigned char>(*eax54 + *reinterpret_cast<signed char*>(&eax54));
    __asm__("lodsb ");
    esp55 = reinterpret_cast<struct s400*>(reinterpret_cast<int32_t>(esp53) - 4);
    esp55->f0 = 0x1000626e;
    eax56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx35 - 1 + 8)());
    esp57 = &esp55->f4->f4;
    ebx58 = *esp57;
    esp59 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp57 + 1) - 2);
    *esp59 = ss60;
    ecx61 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx) - 1 + reinterpret_cast<unsigned char>(*eax56));
    ebx58->f92 = reinterpret_cast<unsigned char>(ebx58->f92 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx61)));
    esi62 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esi63) + 1 + 1);
    al64 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax56)));
    tmp8_65 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al64));
    *reinterpret_cast<unsigned char*>(&eax56) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_65 + reinterpret_cast<unsigned char>(*ecx61)) + reinterpret_cast<uint1_t>(tmp8_65 < al64));
    esp66 = reinterpret_cast<unsigned char**>(reinterpret_cast<int16_t>(*esp59) + 4 + 4);
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx61)));
    ebx67 = *esp66;
    *reinterpret_cast<void**>(&ecx61) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx61)) + reinterpret_cast<unsigned char>(*eax56))));
    eax68 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax56) & 0x5001115c);
    edi27->f8 = reinterpret_cast<signed char>(edi27->f8 + dh69);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx67) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx67) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx61) + 1));
    eax70 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax68) + reinterpret_cast<int32_t>(*eax68));
    tmp8_71 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g51004044 = tmp8_71;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    tmp8_72 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g51004044 = tmp8_72;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    tmp8_73 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g51004044 = tmp8_73;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    tmp8_74 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g51004044 = tmp8_74;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    tmp8_75 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g51004044 = tmp8_75;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    tmp8_76 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g51004044 = tmp8_76;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    tmp8_77 = reinterpret_cast<signed char>(g4044 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    g4044 = tmp8_77;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<uint32_t>(eax70));
    *ebx67 = reinterpret_cast<unsigned char>(*ebx67 + *reinterpret_cast<unsigned char*>(&ebx67));
    tmp32_78 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax70) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax70) + reinterpret_cast<uint32_t>(eax70))));
    eax79 = tmp32_78;
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) - (reinterpret_cast<uint32_t>(eax79) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax79) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax79) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_78) < reinterpret_cast<uint32_t>(eax70))))));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<uint32_t>(eax79));
    *(ebx67 - 79) = reinterpret_cast<unsigned char>(*(ebx67 - 79) | *reinterpret_cast<unsigned char*>(&ebx67));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<signed char>(dl80));
    *esi62 = reinterpret_cast<signed char*>(reinterpret_cast<signed char>(*esi62) + dh81);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax79) + reinterpret_cast<uint32_t>(eax79) - 96) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax79) + reinterpret_cast<uint32_t>(eax79) - 96) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx61)));
    esp82 = reinterpret_cast<signed char**>(esp66 + 1 - 1);
    *esp82 = *esi62;
    ebx83 = *esp82;
    edi27->f0 = *esi62;
    edi84 = reinterpret_cast<struct s403*>(&edi27->f1);
    esp85 = reinterpret_cast<int32_t*>(esp82 + 4 - 4);
    *esp85 = 0x100062f5;
    eax87 = reinterpret_cast<int32_t>(*edx86());
    *reinterpret_cast<signed char*>(eax87 - 0x53ffed01) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax87 - 0x53ffed01) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx61) + 1));
    esp88 = esp85 + 1 - 1;
    *esp88 = 0x100062fd;
    eax90 = reinterpret_cast<int32_t>(*edx89());
    *reinterpret_cast<signed char*>(eax90 - 0x4bffed01) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax90 - 0x4bffed01) + dh91);
    esp92 = esp88 + 1 - 1;
    *esp92 = 0x10006305;
    eax94 = reinterpret_cast<int32_t>(*edx93());
    *reinterpret_cast<signed char*>(eax94 - 0x43ffed01) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax94 - 0x43ffed01) + *reinterpret_cast<signed char*>(&ebx83 + 1));
    esp95 = esp92 + 1 - 1;
    *esp95 = 0x1000630d;
    *edx96();
    esp97 = esp95 + 1 - 1;
    *esp97 = 0x10006311;
    eax98 = reinterpret_cast<void**>(*ecx61());
    tmp32_99 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi84) + reinterpret_cast<int32_t>(edi84) * 8) + reinterpret_cast<int32_t>(eax98));
    cf100 = reinterpret_cast<uint1_t>(tmp32_99 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi84) + reinterpret_cast<int32_t>(edi84) * 8));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi84) + reinterpret_cast<int32_t>(edi84) * 8) = tmp32_99;
    *reinterpret_cast<void**>(&ecx61) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx61)) + reinterpret_cast<signed char>(*eax98)) + cf100);
    esp101 = esp97 + 1 - 1;
    *esp101 = 0x1000631d;
    *ecx61();
    esp102 = reinterpret_cast<struct s404*>(esp101 + 1 - 1);
    esp102->f0 = 0x10006321;
    eax104 = reinterpret_cast<void**>(*edx103());
    g200115c = 0xff;
    tmp8_105 = reinterpret_cast<unsigned char>(gff004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax104) + 1));
    gff004044 = tmp8_105;
    zf106 = reinterpret_cast<uint1_t>(gff004044 == 0);
    sf107 = reinterpret_cast<signed char>(gff004044) < reinterpret_cast<signed char>(0);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf107 != __intrinsic()) | zf106)) {
        *edx108 = reinterpret_cast<signed char>(*edx109 + dl110);
    }
    g200115c = 0xff;
    tmp8_111 = reinterpret_cast<unsigned char>(g51004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax104) + 1));
    g51004044 = tmp8_111;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<int32_t>(eax104));
    tmp8_112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<signed char>(dl113));
    cf114 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_112) < reinterpret_cast<unsigned char>(*ecx61));
    *ecx61 = tmp8_112;
    al115 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax104) + 2) + cf114);
    *edx116 = reinterpret_cast<signed char>(*edx117 + dl118);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi84) + reinterpret_cast<int32_t>(edi84) * 8 + 0x5c250812) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edi84) + reinterpret_cast<int32_t>(edi84) * 8 + 0x5c250812) + edx119;
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) ^ al115);
    edi84->f8 = reinterpret_cast<signed char>(edi84->f8 + dh120);
    *reinterpret_cast<unsigned char*>(&eax104) = reinterpret_cast<unsigned char>(al115 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx61) + 1));
    eax121 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax104) + reinterpret_cast<int32_t>(*eax104));
    *ecx61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx61) + reinterpret_cast<signed char>(dl122));
    *edx123 = reinterpret_cast<signed char>(*edx124 + *reinterpret_cast<signed char*>(&eax121));
    *ebx83 = reinterpret_cast<signed char>(*ebx83 + *reinterpret_cast<signed char*>(&ebx83));
    ecx125 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx61) + reinterpret_cast<int32_t>(*eax121));
    *ecx125 = reinterpret_cast<signed char>(*ecx125 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx125) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax121) + reinterpret_cast<int32_t>(eax121)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax121) + reinterpret_cast<int32_t>(eax121)) + *reinterpret_cast<signed char*>(&eax121));
    *eax121 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*eax121) + reinterpret_cast<int32_t>(eax121));
    esp126 = &esp102->f4->f4;
    eax127 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax121) - 1);
    ecx128 = reinterpret_cast<uint32_t>(ecx125 - 1);
    *eax127 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax127) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127)));
    *eax127 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax127) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127)));
    *eax127 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax127) + reinterpret_cast<int32_t>(eax127));
    al129 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127))));
    tmp8_130 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al129)));
    *reinterpret_cast<void**>(&eax127) = tmp8_130;
    *reinterpret_cast<void**>(&eax127) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127)) + reinterpret_cast<unsigned char>(*eax127)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_130) < reinterpret_cast<unsigned char>(al129)));
    esi131 = reinterpret_cast<unsigned char*>(esi62 + 1 - 1);
    ebx132 = *esp126;
    tmp8_133 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx132 - 16) + *reinterpret_cast<signed char*>(&ebx132));
    cf134 = reinterpret_cast<uint1_t>(tmp8_133 < *reinterpret_cast<unsigned char*>(ebx132 - 16));
    *reinterpret_cast<unsigned char*>(ebx132 - 16) = tmp8_133;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx135) + reinterpret_cast<int32_t>(eax127)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx136) + reinterpret_cast<int32_t>(eax127)) + edx137 + cf134;
    *edx138 = reinterpret_cast<signed char>(*edx139 + dl140);
    tmp32_141 = reinterpret_cast<uint32_t>(*edx142 + reinterpret_cast<int32_t>(esi131));
    cf143 = tmp32_141 < *edx144;
    *edx145 = tmp32_141;
    *eax127 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax127) + reinterpret_cast<int32_t>(eax127) + reinterpret_cast<uint1_t>(!cf143));
    *reinterpret_cast<void**>(&eax127) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127))));
    *eax127 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax127) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127)));
    *eax127 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax127) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax127)));
    esp146 = reinterpret_cast<struct s406*>(reinterpret_cast<int32_t>(esp126 + 1) - 1 + 4 - 4);
    esp146->f0 = 0x10006397;
    eax147 = fun_2a00639a();
    *eax147 = reinterpret_cast<unsigned char>(*eax147 + *reinterpret_cast<unsigned char*>(&eax147));
    *eax147 = reinterpret_cast<unsigned char>(*eax147 + *reinterpret_cast<signed char*>(&ecx128));
    tmp8_148 = reinterpret_cast<unsigned char>(g5c080836 + *reinterpret_cast<signed char*>(&ecx128));
    cf149 = reinterpret_cast<uint1_t>(tmp8_148 < g5c080836);
    g5c080836 = tmp8_148;
    ebx150 = esp146->f4;
    *reinterpret_cast<unsigned char*>(&eax147) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax147) + *eax147) + cf149);
    edi84->f0 = *esi131;
    *ebx150 = *ebx150 & reinterpret_cast<uint32_t>(eax147);
    tmp8_151 = reinterpret_cast<unsigned char>(*eax147 + *reinterpret_cast<unsigned char*>(&eax147));
    cf152 = reinterpret_cast<uint1_t>(tmp8_151 < *eax147);
    *eax147 = tmp8_151;
    *eax147 = reinterpret_cast<unsigned char>(*eax147 - (reinterpret_cast<uint32_t>(eax147) + reinterpret_cast<uint1_t>(*eax147 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax147) + cf152))));
    *eax147 = reinterpret_cast<unsigned char>(*eax147 + *reinterpret_cast<unsigned char*>(&eax147));
    *eax147 = reinterpret_cast<unsigned char>(*eax147 + reinterpret_cast<uint32_t>(eax147));
}

void fun_100063b5(int32_t ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    signed char* eax10;
    int32_t ecx11;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 36) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 36) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)(__return_address()));
    ecx11 = ecx + *eax10;
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&eax10));
    *eax10 = reinterpret_cast<signed char>(*eax10 + *reinterpret_cast<signed char*>(&ecx11));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 60) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) - 60) + *reinterpret_cast<signed char*>(&ecx11));
}

struct s407 {
    signed char[17] pad17;
    unsigned char f17;
};

struct s408 {
    signed char[17] pad17;
    unsigned char f17;
};

void fun_100063cf(unsigned char* ecx) {
    unsigned char* eax2;
    void** eax3;
    void* eax4;
    signed char dl5;
    signed char* edx6;
    signed char* edx7;
    signed char* ebx8;
    signed char* ebx9;
    signed char bl10;
    unsigned char* eax11;
    struct s407* ebx12;
    struct s408* ebx13;
    unsigned char bl14;
    signed char* ebx15;
    signed char* ebx16;
    signed char* edx17;
    signed char* edx18;
    signed char* esi19;
    signed char* esi20;
    unsigned char tmp8_21;
    uint1_t cf22;

    eax2 = reinterpret_cast<unsigned char*>(*ecx());
    *eax2 = reinterpret_cast<unsigned char>(*eax2 | *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *eax2)));
    eax3 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax2) & 0x8b75c);
    *eax3 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax3) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax3)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax4 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<signed char>(*eax3));
    *ecx = reinterpret_cast<unsigned char>(*ecx + dl5);
    *edx6 = reinterpret_cast<signed char>(*edx7 + *reinterpret_cast<signed char*>(&eax4));
    *ebx8 = reinterpret_cast<signed char>(*ebx9 + bl10);
    eax11 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax4) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax4) + reinterpret_cast<uint32_t>(eax4))));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 - reinterpret_cast<uint32_t>(eax11));
    *reinterpret_cast<signed char*>(&eax11) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax11)));
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + reinterpret_cast<uint32_t>(eax11));
    ebx12->f17 = reinterpret_cast<unsigned char>(ebx13->f17 | bl14);
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax11) + 1));
    *ebx15 = reinterpret_cast<signed char>(*ebx16 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<signed char*>(&eax11) = reinterpret_cast<signed char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax11) + 9) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *ecx = reinterpret_cast<unsigned char>(*ecx + 1);
    *edx17 = reinterpret_cast<signed char>(*edx18 + *reinterpret_cast<signed char*>(&eax11));
    *esi19 = reinterpret_cast<signed char>(*esi20 + *reinterpret_cast<signed char*>(&eax11));
    tmp8_21 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&eax11));
    cf22 = reinterpret_cast<uint1_t>(tmp8_21 < *ecx);
    *ecx = tmp8_21;
    *ecx = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&eax11)) + cf22);
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<signed char*>(&eax11));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax11) + reinterpret_cast<uint32_t>(eax11)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax11) + reinterpret_cast<uint32_t>(eax11)) + *reinterpret_cast<signed char*>(&eax11));
}

int32_t g6000601;

void fun_1000640b(unsigned char cl) {
    unsigned char* eax2;
    signed char* v3;
    int16_t es4;
    signed char* es5;
    uint1_t cf6;

    eax2 = reinterpret_cast<unsigned char*>(g6000601(__return_address()));
    *reinterpret_cast<int16_t*>(&v3 + 1) = es4;
    v3 = es5;
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) - reinterpret_cast<unsigned char>(*v3 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax2) < reinterpret_cast<unsigned char>(*v3 + cf6))));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 & *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 | cl);
    *eax2 = reinterpret_cast<unsigned char>(*eax2 | cl);
    __asm__("out dx, al");
}

signed char g41300001;

signed char g20000000;

struct s409 {
    signed char[27] pad27;
    unsigned char f27;
};

struct s410 {
    signed char[4] pad4;
    struct s409* f4;
};

signed char g4c001803;

struct s411 {
    signed char[92] pad92;
    signed char f92;
};

struct s413 {
    signed char[4] pad4;
    void* f4;
};

struct s412 {
    int32_t f0;
    struct s413* f4;
};

struct s414 {
    void* f0;
    signed char[32] pad33;
    int32_t f33;
};

unsigned char g2008000;

void fun_10006428(int32_t* ecx) {
    unsigned char* ebx2;
    int32_t edx3;
    int32_t eax4;
    int32_t edx5;
    int32_t eax6;
    int32_t eax7;
    uint1_t cf8;
    signed char* eax9;
    signed char* eax10;
    signed char dh11;
    uint32_t* eax12;
    uint32_t tmp32_13;
    uint1_t cf14;
    void** eax15;
    unsigned char dh16;
    signed char tmp8_17;
    signed char* edi18;
    signed char* edi19;
    void* tmp8_20;
    uint1_t cf21;
    unsigned char* edx22;
    signed char* edx23;
    void* eax24;
    void** eax25;
    unsigned char* ecx26;
    void* dh27;
    int32_t* edx28;
    int32_t* edx29;
    unsigned char tmp8_30;
    uint1_t cf31;
    struct s409** esp32;
    struct s410* v33;
    struct s409* ebx34;
    void* al35;
    int16_t* esp36;
    int16_t ds37;
    signed char tmp8_38;
    signed char dl39;
    int16_t* esp40;
    int16_t es41;
    int16_t* esp42;
    int16_t es43;
    struct s411* ebx44;
    signed char* edi45;
    signed char* edi46;
    signed char dl47;
    struct s412* esp48;
    void** eax49;
    void* ecx50;
    void** esp51;
    unsigned char al52;
    unsigned char tmp8_53;
    signed char* ecx54;
    void* ebx55;
    int16_t* esp56;
    int16_t es57;
    struct s414** esp58;
    struct s414* es59;
    unsigned char tmp8_60;
    struct s414* ebx61;
    int32_t* esp62;
    uint32_t eax63;
    void** eax64;
    void* esi65;
    int16_t* esp66;
    int16_t es67;
    uint1_t cf68;
    int32_t* eax69;
    signed char* eax70;
    signed char* edi71;
    signed char* edi72;
    signed char dl73;

    ebx2 = reinterpret_cast<unsigned char*>(__return_address());
    *reinterpret_cast<uint32_t*>(edx3 + eax4) = *reinterpret_cast<int32_t*>(edx5 + eax6) + eax7 + cf8;
    *eax9 = reinterpret_cast<signed char>(*eax10 + dh11);
    *reinterpret_cast<signed char*>(&eax12) = g41300001;
    tmp32_13 = *eax12 + reinterpret_cast<uint32_t>(eax12);
    cf14 = reinterpret_cast<uint1_t>(tmp32_13 < *eax12);
    *eax12 = tmp32_13;
    *eax12 = *eax12 + reinterpret_cast<uint32_t>(eax12) + cf14;
    *ebx2 = reinterpret_cast<unsigned char>(*ebx2 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax12) | 0xfff40006);
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<uint32_t>(eax15));
    *reinterpret_cast<void**>(&eax15) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)) + reinterpret_cast<unsigned char>(*eax15))));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) | dh16);
    *reinterpret_cast<void**>(&eax15) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)) + reinterpret_cast<unsigned char>(*eax15));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *ebx2 = reinterpret_cast<unsigned char>(*ebx2 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax15) + reinterpret_cast<uint32_t>(eax15)) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax15) + reinterpret_cast<uint32_t>(eax15))));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx)));
    tmp8_17 = reinterpret_cast<signed char>(static_cast<int32_t>(g20000000));
    g20000000 = tmp8_17;
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) | reinterpret_cast<uint32_t>(eax15));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx)));
    *edi18 = reinterpret_cast<signed char>(static_cast<int32_t>(*edi19));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *reinterpret_cast<void**>(&eax15) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15))));
    *eax15 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    __asm__("pushad ");
    tmp8_20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax15) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx)));
    cf21 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_20) < reinterpret_cast<unsigned char>(*eax15));
    *eax15 = tmp8_20;
    *edx22 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*edx23 + 8) + cf21);
    eax24 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax15) & 0xe00125c);
    *ebx2 = reinterpret_cast<unsigned char>(*ebx2 + *reinterpret_cast<signed char*>(&ebx2));
    eax25 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24))));
    *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25))));
    *ecx = *ecx + 1;
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx)));
    ecx26 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<unsigned char>(*eax25));
    *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<signed char>(dh27));
    *edx28 = *edx29 + 1;
    tmp8_30 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx26) + *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) - 100));
    cf31 = reinterpret_cast<uint1_t>(tmp8_30 < *reinterpret_cast<unsigned char*>(&ecx26));
    *reinterpret_cast<unsigned char*>(&ecx26) = tmp8_30;
    __asm__("out dx, eax");
    esp32 = &v33->f4;
    ebx34 = *esp32;
    al35 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(*eax25)) + cf31);
    *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al35) + 14);
    *reinterpret_cast<void**>(&eax25) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)) + reinterpret_cast<unsigned char>(*eax25)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(al35) < 0xf2));
    esp36 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp32 + 1) - 2);
    *esp36 = ds37;
    tmp8_38 = reinterpret_cast<signed char>(g4c001803 + dl39);
    g4c001803 = tmp8_38;
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax25) + 1)));
    esp40 = esp36 - 1;
    *esp40 = es41;
    esp42 = esp40 - 1;
    *esp42 = es43;
    ebx34->f27 = reinterpret_cast<unsigned char>(ebx34->f27 | *reinterpret_cast<unsigned char*>(&ebx34));
    ebx44 = reinterpret_cast<struct s411*>(reinterpret_cast<int32_t>(ebx34) + reinterpret_cast<unsigned char>(*eax25));
    *edi45 = reinterpret_cast<signed char>(*edi46 + dl47);
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *ecx26 = reinterpret_cast<unsigned char>(*ecx26 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) - 24) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) - 24) + *reinterpret_cast<unsigned char*>(&ecx26));
    esp48 = reinterpret_cast<struct s412*>(esp42 - 2);
    esp48->f0 = 0x100064c1;
    eax49 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx44) + reinterpret_cast<uint32_t>(ebx44) * 2 + 22)());
    ecx50 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx26) + reinterpret_cast<signed char>(*eax49));
    ebx44->f92 = reinterpret_cast<signed char>(ebx44->f92 + *reinterpret_cast<signed char*>(&ecx50));
    esp51 = &esp48->f4->f4;
    al52 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax49)));
    tmp8_53 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al52));
    *reinterpret_cast<unsigned char*>(&eax49) = tmp8_53;
    *reinterpret_cast<unsigned char*>(&eax49) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax49) + reinterpret_cast<signed char>(*eax49)) + reinterpret_cast<uint1_t>(tmp8_53 < al52));
    ecx54 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx50) - 1);
    if (ecx54) {
    }
    ebx55 = *esp51;
    esp56 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp51 + 1) - 2);
    *esp56 = es57;
    esp58 = reinterpret_cast<struct s414**>(esp56 - 1);
    *esp58 = es59;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx55) + reinterpret_cast<int32_t>(ebx55) * 2 + 18) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx55) + reinterpret_cast<int32_t>(ebx55) * 2 + 18) | *reinterpret_cast<unsigned char*>(&ebx55));
    *eax49 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax49) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx54)));
    tmp8_60 = reinterpret_cast<unsigned char>(g2008000 + *reinterpret_cast<unsigned char*>(&ebx55));
    g2008000 = tmp8_60;
    ebx61 = *esp58;
    esp62 = reinterpret_cast<int32_t*>(esp58 + 2 - 2);
    *esp62 = 0x100064eb;
    eax63 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(ebx61) + reinterpret_cast<int16_t>(ebx61) * 2 + 43)());
    eax64 = reinterpret_cast<void**>(eax63 | 0xfff00006);
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) + reinterpret_cast<uint32_t>(eax64));
    *reinterpret_cast<void**>(&eax64) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax64)) + reinterpret_cast<unsigned char>(*eax64))));
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) + (reinterpret_cast<int32_t>(esi65) + 1));
    esp66 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp62 + 1) - 2);
    *esp66 = es67;
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax64)));
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx54)));
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) | 0x80);
    cf68 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax64)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx61->f0)))));
    *reinterpret_cast<void**>(&eax64) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax64)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx61->f0)) + cf68)))) + cf68);
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax64)));
    *eax64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax64) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax64)));
    *reinterpret_cast<int32_t*>(esp66 - 2) = 0x10006515;
    eax69 = reinterpret_cast<int32_t*>(ebx61->f33());
    eax70 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax69) + *eax69);
    *edi71 = reinterpret_cast<signed char>(*edi72 + dl73);
    *eax70 = reinterpret_cast<signed char>(*eax70 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx54)));
    *ecx54 = reinterpret_cast<signed char>(*ecx54 + *reinterpret_cast<signed char*>(&eax70));
}

void fun_10006521(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    int32_t ebx8;
    int32_t ebx9;
    unsigned char* eax10;
    unsigned char* esi11;
    unsigned char* esi12;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 38) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 38) + cl);
    eax10 = reinterpret_cast<unsigned char*>(*reinterpret_cast<int32_t*>(ebx8 + ebx9 * 2 - 79)());
    *eax10 = reinterpret_cast<unsigned char>(*eax10 + *reinterpret_cast<unsigned char*>(&eax10));
    *eax10 = reinterpret_cast<unsigned char>(*eax10 + cl);
    *eax10 = reinterpret_cast<unsigned char>(*eax10 + cl);
    *esi11 = reinterpret_cast<unsigned char>(*esi12 | *reinterpret_cast<unsigned char*>(&eax10));
}

struct s415 {
    unsigned char f0;
    signed char[721420302] pad721420303;
    signed char f721420303;
};

struct s416 {
    signed char[4] pad4;
    void* f4;
};

struct s417 {
    signed char[92] pad92;
    signed char f92;
};

struct s418 {
    signed char[8] pad8;
    signed char f8;
};

struct s419 {
    signed char[8] pad8;
    signed char f8;
};

void fun_1000653b(int32_t* ecx) {
    struct s415* eax2;
    signed char dh3;
    int32_t ecx4;
    signed char dh5;
    unsigned char tmp8_6;
    uint1_t cf7;
    unsigned char tmp32_8;
    uint1_t cf9;
    unsigned char tmp8_10;
    struct s416* v11;
    struct s416* ebp12;
    uint48_t v13;
    struct s416* ebp14;
    struct s417* es15;
    struct s417* ebx16;
    uint32_t ecx17;
    void** esp18;
    unsigned char al19;
    unsigned char tmp8_20;
    unsigned char al21;
    void* ebx22;
    int16_t* esp23;
    int16_t es24;
    int16_t es25;
    signed char* edx26;
    signed char* edx27;
    signed char dl28;
    struct s418* edi29;
    struct s419* edi30;
    signed char dh31;
    unsigned char* eax32;
    unsigned char tmp8_33;

    eax2 = reinterpret_cast<struct s415*>(*ecx());
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + 2);
    eax2->f0 = reinterpret_cast<unsigned char>(eax2->f0 + dh3);
    ecx4 = reinterpret_cast<int32_t>(ecx) - 1;
    if (!(reinterpret_cast<uint1_t>(!!ecx4) & reinterpret_cast<uint1_t>(eax2->f0 == 0))) {
        eax2->f0 = reinterpret_cast<unsigned char>(eax2->f0 + dh5);
    }
    tmp8_6 = reinterpret_cast<unsigned char>(eax2->f0 + *reinterpret_cast<unsigned char*>(&eax2));
    cf7 = reinterpret_cast<uint1_t>(tmp8_6 < eax2->f0);
    eax2->f0 = tmp8_6;
    tmp32_8 = reinterpret_cast<unsigned char>(eax2->f0 + reinterpret_cast<uint32_t>(eax2) + cf7);
    cf9 = reinterpret_cast<uint1_t>(tmp32_8 < eax2->f0);
    eax2->f0 = tmp32_8;
    tmp8_10 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax2))) + cf9);
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(tmp8_10 - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(tmp8_10 < reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(tmp8_10 < *reinterpret_cast<unsigned char*>(&eax2))))));
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + eax2->f0);
    v11 = ebp12;
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + eax2->f0);
    eax2->f0 = reinterpret_cast<unsigned char>(eax2->f0 + reinterpret_cast<uint32_t>(eax2));
    *reinterpret_cast<struct s416**>(reinterpret_cast<int32_t>(&v13) + 2) = ebp14;
    eax2->f0 = reinterpret_cast<unsigned char>(eax2->f0 + *reinterpret_cast<unsigned char*>(&eax2));
    eax2->f0 = reinterpret_cast<unsigned char>(eax2->f0 + reinterpret_cast<uint32_t>(eax2));
    *reinterpret_cast<struct s417**>(&v13) = es15;
    ebx16 = *reinterpret_cast<struct s417**>(&v13);
    *reinterpret_cast<struct s416**>(reinterpret_cast<int32_t>(&v13) + 2) = v11;
    ecx17 = ecx4 + 1 + eax2->f0;
    ebx16->f92 = reinterpret_cast<signed char>(ebx16->f92 + *reinterpret_cast<signed char*>(&ecx17));
    esp18 = &(*reinterpret_cast<struct s416**>(reinterpret_cast<int32_t>(&v13) + 2))->f4;
    al19 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax2)));
    tmp8_20 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al19));
    *reinterpret_cast<unsigned char*>(&eax2) = tmp8_20;
    al21 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + eax2->f0) + reinterpret_cast<uint1_t>(tmp8_20 < al19));
    if (reinterpret_cast<uint1_t>(!!(ecx17 - 1)) & reinterpret_cast<uint1_t>(!!al21)) {
    }
    ebx22 = *esp18;
    esp23 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp18 + 1) - 2);
    *esp23 = es24;
    *(esp23 - 1) = es25;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx22) + reinterpret_cast<int32_t>(ebx22) * 2 + 17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx22) + reinterpret_cast<int32_t>(ebx22) * 2 + 17) | *reinterpret_cast<unsigned char*>(&ebx22));
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al21 + 2)));
    *edx26 = reinterpret_cast<signed char>(*edx27 + dl28);
    edi29->f8 = reinterpret_cast<signed char>(edi30->f8 + dh31);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax2) + 0x2b00000f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax2) + 0x2b00000f) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    eax32 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax2) | 0xfff40006);
    *eax32 = reinterpret_cast<unsigned char>(*eax32 + reinterpret_cast<uint32_t>(eax32));
    tmp8_33 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax32) + *eax32);
    *reinterpret_cast<unsigned char*>(&eax32) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(tmp8_33)) + reinterpret_cast<uint1_t>(tmp8_33 < *reinterpret_cast<unsigned char*>(&eax32)));
    *eax32 = reinterpret_cast<unsigned char>(*eax32 + *reinterpret_cast<unsigned char*>(&eax32));
    *eax32 = reinterpret_cast<unsigned char>(*eax32 + *reinterpret_cast<unsigned char*>(&eax32));
}

void fun_10006599(unsigned char* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    unsigned char* eax5;
    signed char al6;
    signed char al7;
    int32_t* edx8;
    int32_t* edx9;
    unsigned char tmp8_10;
    signed char* edx11;
    uint1_t cf12;
    unsigned char* edx13;
    unsigned char* edx14;
    signed char* eax15;
    unsigned char al16;
    signed char* edi17;
    signed char* edi18;
    signed char dl19;
    uint32_t* eax20;
    uint32_t tmp32_21;
    uint1_t cf22;
    signed char* eax23;
    unsigned char al24;
    signed char* edi25;
    signed char* edi26;
    signed char dl27;
    void** eax28;
    void* tmp8_29;
    uint1_t cf30;
    unsigned char* eax31;

    *ecx = reinterpret_cast<unsigned char>(*ecx + 1);
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 + al7);
    *edx8 = *edx9 + 1;
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    tmp8_10 = reinterpret_cast<unsigned char>(*edx11 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf12 = reinterpret_cast<uint1_t>(tmp8_10 < *edx13);
    *edx14 = tmp8_10;
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax5) < reinterpret_cast<unsigned char>(1 + cf12))));
    al16 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + *eax15);
    *ecx = reinterpret_cast<unsigned char>(*ecx + al16);
    *edi17 = reinterpret_cast<signed char>(*edi18 + dl19);
    *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al16));
    tmp32_21 = *eax20 + reinterpret_cast<int32_t>(eax20);
    cf22 = reinterpret_cast<uint1_t>(tmp32_21 < *eax20);
    *eax20 = tmp32_21;
    *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax20) < reinterpret_cast<unsigned char>(1 + cf22))));
    al24 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) + *eax23);
    *ecx = reinterpret_cast<unsigned char>(*ecx + al24);
    *edi25 = reinterpret_cast<signed char>(*edi26 + dl27);
    *reinterpret_cast<void**>(&eax28) = reinterpret_cast<void*>(static_cast<uint32_t>(al24));
    *eax28 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax28) + reinterpret_cast<int32_t>(eax28));
    *eax28 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax28) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)));
    tmp8_29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax28) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)));
    cf30 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_29) < reinterpret_cast<unsigned char>(*eax28));
    *eax28 = tmp8_29;
    *reinterpret_cast<void**>(&eax31) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)) + reinterpret_cast<unsigned char>(*eax28)) + cf30);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax31) + 1) = -2;
    *eax31 = reinterpret_cast<unsigned char>(*eax31 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax31)));
    *eax31 = reinterpret_cast<unsigned char>(*eax31 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax31)));
}

struct s420 {
    signed char[92] pad92;
    int32_t f92;
};

struct s421 {
    signed char[92] pad92;
    int32_t f92;
};

struct s422 {
    signed char[8] pad8;
    int32_t f8;
};

unsigned char gef34004c;

void fun_100065e5(unsigned char* ecx) {
    struct s420* esi2;
    struct s421* esi3;
    unsigned char tmp8_4;
    signed char* eax5;
    signed char al6;
    uint1_t cf7;
    uint1_t cf8;
    unsigned char* eax9;
    unsigned char* eax10;
    unsigned char* eax11;
    signed char* eax12;
    signed char al13;
    struct s422* ebx14;
    unsigned char* eax15;
    uint56_t v16;
    int16_t es17;
    int16_t es18;
    unsigned char* esi19;
    unsigned char* esi20;
    int32_t ebx21;
    int32_t ebx22;
    int32_t ebx23;
    int32_t ebx24;
    unsigned char bl25;
    unsigned char* edx26;
    signed char* edx27;
    signed char* ebx28;
    signed char* ebx29;
    signed char bl30;
    signed char bl31;
    unsigned char* edx32;
    signed char* edx33;
    unsigned char tmp8_34;
    uint1_t cf35;
    int32_t* esi36;
    unsigned char tmp8_37;
    signed char* edi38;
    signed char* edi39;
    unsigned char tmp8_40;
    void* edi41;
    int32_t edi42;
    signed char dl43;
    uint1_t cf44;
    void* edi45;
    int32_t edi46;
    void* edi47;
    int32_t edi48;
    unsigned char* eax49;
    unsigned char tmp8_50;
    uint1_t cf51;
    int32_t* esp52;
    void** eax53;
    void* tmp8_54;
    uint1_t cf55;
    int32_t ebx56;
    unsigned char* ecx57;
    unsigned char tmp8_58;
    uint1_t cf59;
    int32_t* esi60;
    signed char dl61;

    esi2->f92 = esi3->f92 + 1;
    tmp8_4 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax5 + al6) + cf7);
    cf8 = reinterpret_cast<uint1_t>(tmp8_4 < *eax9);
    *eax10 = tmp8_4;
    *eax11 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax12 + al13) + cf8);
    eax15 = reinterpret_cast<unsigned char*>(ebx14->f8());
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v16) + 5) = es17;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v16) + 3) = es18;
    *esi19 = reinterpret_cast<unsigned char>(*esi20 | *reinterpret_cast<unsigned char*>(&eax15));
    *reinterpret_cast<unsigned char*>(ebx21 + ebx22 * 2 - 73) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx23 + ebx24 * 2 - 73) | bl25);
    *eax15 = reinterpret_cast<unsigned char>(*eax15 | *reinterpret_cast<unsigned char*>(&eax15));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 + *reinterpret_cast<unsigned char*>(&eax15));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 + *reinterpret_cast<unsigned char*>(&eax15));
    *edx26 = reinterpret_cast<unsigned char>(*edx27 + *reinterpret_cast<unsigned char*>(&eax15));
    *ebx28 = reinterpret_cast<signed char>(*ebx29 + bl30);
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<unsigned char*>(&eax15));
    *ecx = reinterpret_cast<unsigned char>(*ecx + bl31);
    *eax15 = reinterpret_cast<unsigned char>(*eax15 + *reinterpret_cast<unsigned char*>(&eax15));
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<unsigned char*>(&eax15));
    *edx32 = reinterpret_cast<unsigned char>(*edx33 + *reinterpret_cast<unsigned char*>(&eax15));
    *reinterpret_cast<unsigned char*>(&ecx) = 3;
    *eax15 = reinterpret_cast<unsigned char>(*eax15 | *reinterpret_cast<unsigned char*>(&eax15));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 + *reinterpret_cast<unsigned char*>(&eax15));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 | *reinterpret_cast<unsigned char*>(&eax15));
    tmp8_34 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1));
    cf35 = reinterpret_cast<uint1_t>(tmp8_34 < *reinterpret_cast<unsigned char*>(&eax15));
    *reinterpret_cast<unsigned char*>(&eax15) = tmp8_34;
    *reinterpret_cast<int32_t*>(&v16) = *esi36;
    tmp8_37 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + *eax15) + cf35);
    __asm__("in al, 0xff");
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(tmp8_37 - reinterpret_cast<unsigned char>(*edi38 + reinterpret_cast<uint1_t>(tmp8_37 < reinterpret_cast<unsigned char>(*edi39 + reinterpret_cast<uint1_t>(tmp8_37 < *reinterpret_cast<unsigned char*>(&eax15))))));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 - *reinterpret_cast<unsigned char*>(&eax15));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 + *reinterpret_cast<unsigned char*>(&eax15));
    *eax15 = reinterpret_cast<unsigned char>(*eax15 + *reinterpret_cast<unsigned char*>(&eax15));
    gef34004c = reinterpret_cast<unsigned char>(gef34004c | 3);
    tmp8_40 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi41) + edi42 * 8 + 64) + dl43);
    cf44 = reinterpret_cast<uint1_t>(tmp8_40 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi45) + edi46 * 8 + 64));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi47) + edi48 * 8 + 64) = tmp8_40;
    eax49 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax15) - (**reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v16) + 3) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax15) < **reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(&v16) + 3) + cf44)));
    tmp8_50 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax49)));
    cf51 = reinterpret_cast<uint1_t>(tmp8_50 < *reinterpret_cast<unsigned char*>(&eax49));
    *reinterpret_cast<unsigned char*>(&eax49) = tmp8_50;
    *eax49 = reinterpret_cast<unsigned char>(*eax49 - (reinterpret_cast<uint32_t>(eax49) + reinterpret_cast<uint1_t>(*eax49 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax49) + cf51))));
    *eax49 = reinterpret_cast<unsigned char>(*eax49 + *reinterpret_cast<unsigned char*>(&eax49));
    *eax49 = reinterpret_cast<unsigned char>(*eax49 + reinterpret_cast<uint32_t>(eax49));
    esp52 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    eax53 = reinterpret_cast<void**>(eax49 - 1);
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53))));
    *eax53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax53) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    *eax53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax53) + reinterpret_cast<uint32_t>(eax53));
    *eax53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax53) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    tmp8_54 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax53) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    cf55 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_54) < reinterpret_cast<unsigned char>(*eax53));
    *eax53 = tmp8_54;
    *reinterpret_cast<void**>(&eax53) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)) + reinterpret_cast<unsigned char>(*eax53)) + cf55);
    ebx56 = *esp52;
    *reinterpret_cast<unsigned char*>(ebx56 + ebx56 * 2 - 79) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx56 + ebx56 * 2 - 79) | *reinterpret_cast<unsigned char*>(&ebx56));
    ecx57 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx - 1) + reinterpret_cast<unsigned char>(*eax53));
    *eax53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax53) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)));
    *eax53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax53) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx57)));
    tmp8_58 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53) + 28) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx57)));
    cf59 = reinterpret_cast<uint1_t>(tmp8_58 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53) + 28));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax53) + reinterpret_cast<uint32_t>(eax53) + 28) = tmp8_58;
    *(esp52 + 1 - 1) = *esi60;
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 ^ reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax53)) + reinterpret_cast<unsigned char>(*eax53)) + cf59));
    *ecx57 = reinterpret_cast<unsigned char>(*ecx57 + dl61);
}

unsigned char gd5004c08;

void fun_10006670(uint32_t* ecx) {
    uint32_t tmp32_2;
    int32_t eax3;
    uint1_t cf4;
    uint1_t cf5;
    int32_t edx6;
    int32_t eax7;
    int32_t edx8;
    int32_t eax9;
    int32_t edx10;
    signed char* edx11;
    signed char* edx12;
    signed char dl13;
    int32_t* edx14;
    int32_t* edx15;
    int32_t esi16;
    signed char* edx17;
    signed char* edx18;
    signed char bl19;
    signed char* eax20;
    signed char* eax21;
    signed char al22;
    signed char* eax23;
    signed char* eax24;
    signed char al25;

    tmp32_2 = *ecx + eax3 + cf4;
    cf5 = reinterpret_cast<uint1_t>(tmp32_2 < *ecx);
    *ecx = tmp32_2;
    __asm__("in al, 0xff");
    *reinterpret_cast<uint32_t*>(edx6 + eax7) = *reinterpret_cast<int32_t*>(edx8 + eax9) + edx10 + cf5;
    *edx11 = reinterpret_cast<signed char>(*edx12 + dl13);
    *edx14 = *edx15 + esi16;
    *edx17 = reinterpret_cast<signed char>(*edx18 + bl19);
    *eax20 = reinterpret_cast<signed char>(*eax21 + al22);
    *eax23 = reinterpret_cast<signed char>(*eax24 + al25);
    gd5004c08 = reinterpret_cast<unsigned char>(gd5004c08 | *reinterpret_cast<unsigned char*>(&ecx));
}

struct s425 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s424 {
    signed char[4] pad4;
    struct s425* f4;
};

struct s423 {
    int32_t f0;
    struct s424* f4;
};

struct s426 {
    signed char[4] pad4;
    void** f4;
};

struct s428 {
    signed char[4] pad4;
    int32_t f4;
};

struct s427 {
    int32_t f0;
    struct s428* f4;
};

void** fun_210066fe();

struct s429 {
    void* f0;
    signed char[1] pad2;
    unsigned char f2;
};

signed char g8120000;

void* g4110002;

struct s430 {
    signed char f0;
    signed char[621286137] pad621286138;
    uint32_t f621286138;
};

unsigned char g9400125c;

struct s431 {
    signed char[4] pad4;
    void** f4;
};

struct s433 {
    signed char[4] pad4;
    void** f4;
};

struct s432 {
    void* f0;
    struct s433* f2;
};

struct s436 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s435 {
    signed char[4] pad4;
    struct s436* f4;
};

struct s434 {
    void** f0;
    struct s435* f4;
};

struct s437 {
    struct s436* f0;
    void* f4;
};

struct s438 {
    signed char[92] pad92;
    signed char f92;
};

struct s439 {
    signed char[4] pad4;
    struct s438* f4;
};

struct s440 {
    signed char[4] pad4;
    signed char* f4;
};

struct s441 {
    signed char[92] pad92;
    signed char f92;
};

struct s442 {
    signed char[4] pad4;
    struct s441* f4;
};

void fun_1000668b(void* ecx, void* a2) {
    unsigned char* eax3;
    void* eax4;
    uint32_t eax5;
    uint1_t cf6;
    unsigned char tmp8_7;
    uint1_t cf8;
    unsigned char* eax9;
    struct s423* esp10;
    void** eax11;
    struct s425** esp12;
    struct s425* ebx13;
    void** esp14;
    void* ss15;
    signed char* ecx16;
    int32_t esi17;
    int32_t esi18;
    unsigned char al19;
    unsigned char tmp8_20;
    unsigned char** esp21;
    unsigned char* ebx22;
    unsigned char* eax23;
    unsigned char tmp8_24;
    uint1_t zf25;
    int1_t sf26;
    signed char dl27;
    signed char* edx28;
    signed char* edx29;
    unsigned char tmp8_30;
    uint1_t zf31;
    int1_t sf32;
    signed char dl33;
    unsigned char tmp8_34;
    uint1_t cf35;
    void* edx36;
    void* edx37;
    int32_t edx38;
    signed char* edx39;
    signed char* edx40;
    signed char dl41;
    struct s426** tmp32_42;
    int32_t edx43;
    int32_t edx44;
    unsigned char tmp32_45;
    struct s426** edx46;
    uint1_t cf47;
    void* edi48;
    void* edi49;
    struct s427* esp50;
    void** eax51;
    signed char* ecx52;
    int32_t* esp53;
    void** eax54;
    struct s429* ecx55;
    void* al56;
    void* tmp8_57;
    int32_t edi58;
    int32_t edi59;
    int32_t ebx60;
    void* tmp8_61;
    void* tmp8_62;
    void** edx63;
    struct s426* tmp32_64;
    uint1_t cf65;
    unsigned char* tmp32_66;
    unsigned char* eax67;
    void** eax68;
    unsigned char tmp8_69;
    uint1_t cf70;
    struct s430* eax71;
    unsigned char tmp8_72;
    uint1_t cf73;
    uint1_t zf74;
    int1_t sf75;
    void* tmp8_76;
    uint32_t tmp32_77;
    uint1_t cf78;
    void*** esp79;
    unsigned char tmp8_80;
    uint1_t cf81;
    unsigned char* eax82;
    unsigned char tmp8_83;
    uint1_t cf84;
    void* tmp32_85;
    uint1_t cf86;
    unsigned char tmp8_87;
    uint1_t cf88;
    void* eax89;
    void** ebx90;
    uint32_t* eax91;
    int32_t* esp92;
    void** eax93;
    void* tmp8_94;
    uint1_t cf95;
    void* tmp8_96;
    uint1_t cf97;
    uint1_t cf98;
    unsigned char* eax99;
    unsigned char tmp8_100;
    uint1_t cf101;
    void*** esp102;
    void** ebx103;
    void* esp104;
    void* eax105;
    uint32_t tmp32_106;
    uint1_t cf107;
    void** eax108;
    struct s432* esp109;
    void* ss110;
    void* ecx111;
    unsigned char tmp8_112;
    uint1_t cf113;
    struct s434* esp114;
    unsigned char* eax115;
    unsigned char tmp8_116;
    uint1_t cf117;
    struct s437* esp118;
    void** eax119;
    void* tmp8_120;
    uint1_t cf121;
    struct s436* ebx122;
    signed char* ecx123;
    int32_t esi124;
    void* al125;
    void* tmp8_126;
    signed char** esp127;
    signed char* ebx128;
    void** eax129;
    unsigned char* edx130;
    struct s438** esp131;
    struct s438* ebx132;
    void** esp133;
    void* ecx134;
    struct s440* esp135;
    void* tmp8_136;
    uint1_t cf137;
    signed char* ecx138;
    signed char** esp139;
    signed char* ebx140;
    void** eax141;
    signed char* edx142;
    struct s441** esp143;
    struct s441* ebx144;
    void** esp145;
    void* ecx146;
    struct s440* esp147;
    void* tmp8_148;
    uint1_t cf149;
    uint32_t ecx150;
    signed char* ebx151;
    void* eax152;

    eax3 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax4) - (*reinterpret_cast<int32_t*>(__return_address()) + reinterpret_cast<uint1_t>(eax5 < *reinterpret_cast<int32_t*>(__return_address()) + cf6)));
    tmp8_7 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax3)));
    cf8 = reinterpret_cast<uint1_t>(tmp8_7 < *reinterpret_cast<unsigned char*>(&eax3));
    *reinterpret_cast<unsigned char*>(&eax3) = tmp8_7;
    *eax3 = reinterpret_cast<unsigned char>(*eax3 - (reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint1_t>(*eax3 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax3) + cf8))));
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
    *eax3 = reinterpret_cast<unsigned char>(*eax3 + reinterpret_cast<uint32_t>(eax3));
    eax9 = eax3 - 1;
    *reinterpret_cast<signed char*>(&eax9) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax9)));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + *reinterpret_cast<signed char*>(&eax9));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + reinterpret_cast<uint32_t>(eax9));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + *reinterpret_cast<signed char*>(&eax9));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + *reinterpret_cast<signed char*>(&eax9));
    __asm__("salc ");
    esp10 = reinterpret_cast<struct s423*>(reinterpret_cast<int32_t>(a2) + 4 - 4);
    esp10->f0 = 0x100066aa;
    eax11 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) - 1 + 8)());
    esp12 = &esp10->f4->f4;
    ebx13 = *esp12;
    esp14 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp12 + 1) - 2);
    *esp14 = ss15;
    ecx16 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) - 1 + reinterpret_cast<unsigned char>(*eax11));
    ebx13->f92 = reinterpret_cast<unsigned char>(ebx13->f92 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    esi17 = esi18 + 1;
    al19 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax11)));
    tmp8_20 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al19));
    *reinterpret_cast<unsigned char*>(&eax11) = tmp8_20;
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax11) + reinterpret_cast<unsigned char>(*eax11)) + reinterpret_cast<uint1_t>(tmp8_20 < al19));
    esp21 = reinterpret_cast<unsigned char**>(reinterpret_cast<int16_t>(*esp14) + 4 + 4);
    *eax11 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax11) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    ebx22 = *esp21;
    *reinterpret_cast<void**>(&ecx16) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)) + reinterpret_cast<unsigned char>(*eax11))));
    eax23 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax11) & 0x200115c);
    tmp8_24 = reinterpret_cast<unsigned char>(gff004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax23) + 1));
    gff004044 = tmp8_24;
    zf25 = reinterpret_cast<uint1_t>(gff004044 == 0);
    sf26 = reinterpret_cast<signed char>(gff004044) < reinterpret_cast<signed char>(0);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf26 != __intrinsic()) | zf25)) {
        *ecx16 = reinterpret_cast<signed char>(*ecx16 + dl27);
    }
    *edx28 = reinterpret_cast<signed char>(*edx29 + *reinterpret_cast<signed char*>(&eax23));
    tmp8_30 = reinterpret_cast<unsigned char>(gff004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax23) + 1));
    gff004044 = tmp8_30;
    zf31 = reinterpret_cast<uint1_t>(gff004044 == 0);
    sf32 = reinterpret_cast<signed char>(gff004044) < reinterpret_cast<signed char>(0);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf32 != __intrinsic()) | zf31)) {
        *ecx16 = reinterpret_cast<signed char>(*ecx16 + dl33);
    }
    tmp8_34 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi17 - 14) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx22) + 1));
    cf35 = reinterpret_cast<uint1_t>(tmp8_34 < *reinterpret_cast<unsigned char*>(esi17 - 14));
    *reinterpret_cast<unsigned char*>(esi17 - 14) = tmp8_34;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx36) + reinterpret_cast<uint32_t>(eax23)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx37) + reinterpret_cast<uint32_t>(eax23)) + edx38 + cf35;
    *edx39 = reinterpret_cast<signed char>(*edx40 + dl41);
    tmp32_42 = reinterpret_cast<struct s426**>(edx43 + edx44);
    __asm__("int1 ");
    tmp32_45 = reinterpret_cast<unsigned char>(*eax23 + reinterpret_cast<uint32_t>(eax23) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_42) < reinterpret_cast<uint32_t>(edx46)));
    cf47 = reinterpret_cast<uint1_t>(tmp32_45 < *eax23);
    *eax23 = tmp32_45;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax23) + 1) = 0xf9;
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + reinterpret_cast<uint32_t>(ecx16) + cf47);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi48) + esi17 * 4 + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi49) + esi17 * 4 + 8) | *reinterpret_cast<unsigned char*>(&ebx22));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<signed char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<signed char*>(&eax23));
    esp50 = reinterpret_cast<struct s427*>(esp21 + 1 - 1);
    esp50->f0 = 0x100066fb;
    eax51 = fun_210066fe();
    *tmp32_42 = reinterpret_cast<struct s426*>(reinterpret_cast<unsigned char>(*tmp32_42) + *reinterpret_cast<signed char*>(&eax51));
    *ebx22 = reinterpret_cast<unsigned char>(*ebx22 + *reinterpret_cast<unsigned char*>(&ebx22));
    ecx52 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx16) + reinterpret_cast<int32_t>(*eax51));
    *ecx52 = reinterpret_cast<signed char>(*ecx52 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx52) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax51) + reinterpret_cast<int32_t>(eax51)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax51) + reinterpret_cast<int32_t>(eax51)) + *reinterpret_cast<signed char*>(&eax51));
    *eax51 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*eax51) + reinterpret_cast<int32_t>(eax51));
    esp53 = &esp50->f4->f4;
    eax54 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax51) - 1);
    ecx55 = reinterpret_cast<struct s429*>(ecx52 - 1);
    *eax54 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax54) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54)));
    *eax54 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax54) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54)));
    *eax54 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax54) + reinterpret_cast<int32_t>(eax54));
    al56 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54))));
    tmp8_57 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al56)));
    *reinterpret_cast<void**>(&eax54) = tmp8_57;
    *reinterpret_cast<void**>(&eax54) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54)) + reinterpret_cast<unsigned char>(*eax54)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_57) < reinterpret_cast<unsigned char>(al56)));
    edi58 = edi59 + 1;
    __asm__("in al, dx");
    ebx60 = *esp53;
    *reinterpret_cast<signed char*>(ebx60 + 0x14115bec) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx60 + 0x14115bec) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx60) + 1));
    tmp8_61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54)) + reinterpret_cast<unsigned char>(*eax54));
    tmp8_62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_61) + reinterpret_cast<unsigned char>(ecx55->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_61) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54))));
    *reinterpret_cast<void**>(&eax54) = tmp8_62;
    edx63 = eax54;
    __asm__("int1 ");
    tmp32_64 = reinterpret_cast<struct s426*>(reinterpret_cast<unsigned char>(*tmp32_42) + reinterpret_cast<uint32_t>(tmp32_42) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_62) < reinterpret_cast<unsigned char>(tmp8_61)));
    cf65 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_64) < reinterpret_cast<unsigned char>(*tmp32_42));
    *tmp32_42 = tmp32_64;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp53 + 1) - 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp53 + 1) - 1) + reinterpret_cast<uint32_t>(ecx55) + cf65);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<int32_t>(edx63) + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<int32_t>(edx63) + 8) | *reinterpret_cast<unsigned char*>(&ebx60));
    tmp32_66 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esp53 + 1) - 1) + 0x7e00115c);
    eax67 = tmp32_66;
    __asm__("in eax, dx");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<uint32_t>(eax67)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<uint32_t>(eax67)) + reinterpret_cast<uint32_t>(eax67) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_66) < reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(esp53 + 1) - 1));
    *eax67 = reinterpret_cast<unsigned char>(*eax67 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)));
    *reinterpret_cast<signed char*>(&eax67) = g8120000;
    eax68 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax67) & 0x204115c);
    *eax68 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax68) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)));
    *reinterpret_cast<void**>(&eax68) = g4110002;
    *reinterpret_cast<void**>(&eax68) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax68)) + reinterpret_cast<signed char>(*eax68));
    *reinterpret_cast<void**>(&ecx55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx55)) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax68) + 1));
    *reinterpret_cast<void**>(&eax68) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax68)) + reinterpret_cast<signed char>(*eax68));
    ecx55->f2 = reinterpret_cast<unsigned char>(ecx55->f2 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax68)));
    ecx55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx55->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx63)));
    tmp8_69 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi58 * 8 - 0x233ffef) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)));
    cf70 = reinterpret_cast<uint1_t>(tmp8_69 < *reinterpret_cast<unsigned char*>(edi58 * 8 - 0x233ffef));
    *reinterpret_cast<unsigned char*>(edi58 * 8 - 0x233ffef) = tmp8_69;
    *reinterpret_cast<void**>(&ecx55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx55)) + reinterpret_cast<signed char>(*eax68)) + cf70);
    eax71 = reinterpret_cast<struct s430*>(reinterpret_cast<uint32_t>(eax68) & 0x200115c);
    tmp8_72 = reinterpret_cast<unsigned char>(gff004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax71) + 1));
    cf73 = reinterpret_cast<uint1_t>(tmp8_72 < gff004044);
    gff004044 = tmp8_72;
    zf74 = reinterpret_cast<uint1_t>(gff004044 == 0);
    sf75 = reinterpret_cast<signed char>(gff004044) < reinterpret_cast<signed char>(0);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf75 != __intrinsic()) | zf74)) {
        tmp8_76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx55->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx63)));
        cf73 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_76) < reinterpret_cast<unsigned char>(ecx55->f0));
        ecx55->f0 = tmp8_76;
    }
    *reinterpret_cast<unsigned char*>(&eax71) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax71) + 2) + cf73);
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx63)));
    tmp32_77 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax71) + 0x250812fa) + reinterpret_cast<uint32_t>(tmp32_42);
    cf78 = reinterpret_cast<uint1_t>(tmp32_77 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax71) + 0x250812fa));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax71) + 0x250812fa) = tmp32_77;
    esp79 = &(*tmp32_42)->f4;
    tmp8_80 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax71) + eax71->f0) + cf78);
    cf81 = reinterpret_cast<uint1_t>(tmp8_80 < *reinterpret_cast<unsigned char*>(&eax71));
    *reinterpret_cast<unsigned char*>(&eax71) = tmp8_80;
    __asm__("in al, dx");
    *reinterpret_cast<unsigned char*>(&eax71) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax71) + eax71->f0) + cf81);
    eax82 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax71) - 1);
    __asm__("out dx, eax");
    *eax82 = reinterpret_cast<unsigned char>(*eax82 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax82)));
    *eax82 = reinterpret_cast<unsigned char>(*eax82 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax82)));
    ecx55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx55->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax82)));
    tmp8_83 = reinterpret_cast<unsigned char>(*eax82 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax82)));
    cf84 = reinterpret_cast<uint1_t>(tmp8_83 < *eax82);
    *eax82 = tmp8_83;
    tmp32_85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx55->f0) + reinterpret_cast<uint32_t>(eax82) + cf84);
    cf86 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_85) < reinterpret_cast<unsigned char>(ecx55->f0));
    ecx55->f0 = tmp32_85;
    tmp8_87 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax82 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax82))) + cf86);
    cf88 = reinterpret_cast<uint1_t>(tmp8_87 < *eax82);
    *eax82 = tmp8_87;
    eax89 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax82 + 0x4c002403) + cf88);
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)));
    __asm__("out dx, eax");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax89) + reinterpret_cast<uint32_t>(eax89) + 45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax89) + reinterpret_cast<uint32_t>(eax89) + 45) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx55)));
    __asm__("out dx, eax");
    ebx90 = *esp79;
    eax91 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax89) - (reinterpret_cast<uint32_t>(*ebx90) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax89) < reinterpret_cast<uint32_t>(*ebx90))));
    *reinterpret_cast<unsigned char*>(&eax91) = 0;
    *eax91 = *eax91 - reinterpret_cast<uint32_t>(eax91);
    *reinterpret_cast<unsigned char*>(&eax91) = 0;
    *eax91 = *eax91 + reinterpret_cast<uint32_t>(eax91);
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax91) + 1)));
    esp92 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp79 + 1) - 1 - 4);
    *esp92 = 0x100067b1;
    eax93 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx90) + reinterpret_cast<int32_t>(ebx90) * 2 + 18)());
    g9400125c = 0xff;
    __asm__("in al, dx");
    *reinterpret_cast<void**>(&eax93) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)) + reinterpret_cast<unsigned char>(*eax93))));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx90) + 1) = 8;
    *eax93 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax93) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)));
    *eax93 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax93) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)));
    ecx55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)));
    tmp8_94 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax93) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)));
    cf95 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_94) < reinterpret_cast<unsigned char>(*eax93));
    *eax93 = tmp8_94;
    *eax93 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax93) + reinterpret_cast<uint32_t>(eax93) + cf95);
    tmp8_96 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)) + reinterpret_cast<unsigned char>(*eax93));
    cf97 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_96) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax93)));
    *reinterpret_cast<void**>(&eax93) = tmp8_96;
    cf98 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax93) < reinterpret_cast<uint32_t>(*ebx90) + cf97);
    eax99 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax93) - (reinterpret_cast<uint32_t>(*ebx90) + cf98));
    *eax99 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax99 + *reinterpret_cast<unsigned char*>(&eax99)) + cf98);
    *eax99 = reinterpret_cast<unsigned char>(*eax99 - reinterpret_cast<uint32_t>(eax99));
    *reinterpret_cast<unsigned char*>(&eax99) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax99)));
    *eax99 = reinterpret_cast<unsigned char>(*eax99 + reinterpret_cast<uint32_t>(eax99));
    tmp8_100 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax99) + 1) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)));
    cf101 = reinterpret_cast<uint1_t>(tmp8_100 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax99) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax99) + 1) = tmp8_100;
    __asm__("out dx, al");
    esp102 = &(*reinterpret_cast<struct s431**>(reinterpret_cast<uint32_t>(esp92 + 1) - 1))->f4;
    ebx103 = *esp102;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<uint32_t>(eax99)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<uint32_t>(eax99)) + reinterpret_cast<int32_t>(edx63) + cf101;
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx63)));
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<uint32_t>(eax99));
    *ebx103 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*ebx103) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx103)));
    esp104 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp102 + 1) + *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax99) + reinterpret_cast<uint32_t>(eax99)));
    *eax99 = reinterpret_cast<unsigned char>(*eax99 - reinterpret_cast<uint32_t>(eax99));
    *reinterpret_cast<unsigned char*>(&eax99) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax99)));
    *eax99 = reinterpret_cast<unsigned char>(*eax99 + reinterpret_cast<uint32_t>(eax99));
    *reinterpret_cast<unsigned char*>(edi58 + edi58 * 8 + 0x8125b5c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi58 + edi58 * 8 + 0x8125b5c) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax99) + 1));
    eax105 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax99) & 0x214115c);
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx63)));
    tmp32_106 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax105) + reinterpret_cast<uint32_t>(eax105)) + edi58);
    cf107 = reinterpret_cast<uint1_t>(tmp32_106 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax105) + reinterpret_cast<uint32_t>(eax105)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax105) + reinterpret_cast<uint32_t>(eax105)) = tmp32_106;
    eax108 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax105) - (reinterpret_cast<signed char>(*ebx103) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax105) < reinterpret_cast<signed char>(*ebx103) + cf107)));
    *reinterpret_cast<signed char*>(&eax108) = reinterpret_cast<signed char>(static_cast<int32_t>(reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax108)))));
    ecx55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx55->f0) + 1);
    *eax108 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax108) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx55)));
    esp109 = reinterpret_cast<struct s432*>(reinterpret_cast<int32_t>(esp104) - 1 + 4);
    ss110 = esp109->f0;
    ecx111 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx55) + reinterpret_cast<unsigned char>(*eax108));
    *reinterpret_cast<signed char*>(&eax108) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax108) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx63) + 1)));
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + 1);
    tmp8_112 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx111) + *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax108) + reinterpret_cast<uint32_t>(eax108) + 32));
    cf113 = reinterpret_cast<uint1_t>(tmp8_112 < *reinterpret_cast<unsigned char*>(&ecx111));
    *reinterpret_cast<unsigned char*>(&ecx111) = tmp8_112;
    __asm__("in al, dx");
    esp114 = reinterpret_cast<struct s434*>(&esp109->f2->f4);
    eax115 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax108) - (reinterpret_cast<int32_t>(*esp114->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax108) < reinterpret_cast<int32_t>(*esp114->f0) + cf113)));
    tmp8_116 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax115)));
    cf117 = reinterpret_cast<uint1_t>(tmp8_116 < *reinterpret_cast<unsigned char*>(&eax115));
    *reinterpret_cast<unsigned char*>(&eax115) = tmp8_116;
    *eax115 = reinterpret_cast<unsigned char>(*eax115 - (reinterpret_cast<uint32_t>(eax115) + reinterpret_cast<uint1_t>(*eax115 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax115) + cf117))));
    *eax115 = reinterpret_cast<unsigned char>(*eax115 + *reinterpret_cast<unsigned char*>(&eax115));
    *eax115 = reinterpret_cast<unsigned char>(*eax115 + reinterpret_cast<uint32_t>(eax115));
    esp118 = reinterpret_cast<struct s437*>(&esp114->f4->f4);
    eax119 = reinterpret_cast<void**>(eax115 - 1);
    *reinterpret_cast<void**>(&eax119) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119))));
    *eax119 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119)));
    *eax119 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax119) + reinterpret_cast<uint32_t>(eax119));
    *eax119 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119)));
    tmp8_120 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119)));
    cf121 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_120) < reinterpret_cast<unsigned char>(*eax119));
    *eax119 = tmp8_120;
    *reinterpret_cast<void**>(&eax119) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119)) + reinterpret_cast<unsigned char>(*eax119)) + cf121);
    __asm__("fdivr st0, st7");
    ebx122 = esp118->f0;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx122) + reinterpret_cast<int32_t>(ebx122) * 2 + 22) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx122) + reinterpret_cast<int32_t>(ebx122) * 2 + 22) | *reinterpret_cast<unsigned char*>(&ebx122));
    ecx123 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx111) - 1 + reinterpret_cast<unsigned char>(*eax119));
    ebx122->f92 = reinterpret_cast<unsigned char>(ebx122->f92 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx123)));
    esi124 = esi17 + 1 + 1;
    al125 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119))));
    tmp8_126 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al125)));
    *reinterpret_cast<void**>(&eax119) = tmp8_126;
    *reinterpret_cast<void**>(&eax119) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax119)) + reinterpret_cast<unsigned char>(*eax119)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_126) < reinterpret_cast<unsigned char>(al125)));
    esp127 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp118->f4) + 4 + 4);
    *eax119 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax119) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx123)));
    ebx128 = *esp127;
    *reinterpret_cast<void**>(&ecx123) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx123)) + reinterpret_cast<unsigned char>(*eax119))));
    eax129 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax119) & 0x214115c);
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx63)));
    *edx63 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx63) + reinterpret_cast<int32_t>(edx63));
    *ebx128 = reinterpret_cast<signed char>(*ebx128 + *reinterpret_cast<signed char*>(&ebx128));
    edx130 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx63) + reinterpret_cast<unsigned char>(*eax129));
    *ecx123 = reinterpret_cast<signed char>(*ecx123 + *reinterpret_cast<signed char*>(&ebx128));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax129) + reinterpret_cast<uint32_t>(eax129)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax129) + reinterpret_cast<uint32_t>(eax129)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax129)));
    *eax129 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax129) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax129)));
    *reinterpret_cast<signed char*>(esi124 - 18) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi124 - 18) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax129) + 1));
    esp131 = &(*reinterpret_cast<struct s439**>(reinterpret_cast<int32_t>(esp127 + 1) - 1))->f4;
    ebx132 = *esp131;
    esp133 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp131 + 1) - 2);
    *esp133 = ss110;
    ecx134 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx123) + reinterpret_cast<unsigned char>(*eax129));
    ebx132->f92 = reinterpret_cast<signed char>(ebx132->f92 + *reinterpret_cast<signed char*>(&ecx134));
    esp135 = reinterpret_cast<struct s440*>(reinterpret_cast<int16_t>(*esp133) + 4);
    *eax129 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax129) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax129)));
    tmp8_136 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax129) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax129)));
    cf137 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_136) < reinterpret_cast<unsigned char>(*eax129));
    *eax129 = tmp8_136;
    *reinterpret_cast<void**>(&eax129) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax129)) + reinterpret_cast<unsigned char>(*eax129)) + cf137);
    ecx138 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx134) - 1);
    if (ecx138) {
    }
    esp139 = &esp135->f4;
    *eax129 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax129) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx138)));
    ebx140 = *esp139;
    *reinterpret_cast<void**>(&ecx138) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx138)) + reinterpret_cast<unsigned char>(*eax129))));
    eax141 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax129) & 0x4800125c);
    __asm__("out dx, al");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx130) + reinterpret_cast<uint32_t>(eax141)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx130) + reinterpret_cast<uint32_t>(eax141)) + reinterpret_cast<uint32_t>(edx130);
    *edx130 = reinterpret_cast<unsigned char>(*edx130 + *reinterpret_cast<signed char*>(&edx130));
    *edx130 = reinterpret_cast<unsigned char>(*edx130 + reinterpret_cast<uint32_t>(edx130));
    *ebx140 = reinterpret_cast<signed char>(*ebx140 + *reinterpret_cast<signed char*>(&ebx140));
    edx142 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx130) + reinterpret_cast<unsigned char>(*eax141));
    *ecx138 = reinterpret_cast<signed char>(*ecx138 + *reinterpret_cast<signed char*>(&ebx140));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax141) + reinterpret_cast<uint32_t>(eax141)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax141) + reinterpret_cast<uint32_t>(eax141)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax141)));
    *eax141 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax141) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax141)));
    *edx142 = reinterpret_cast<signed char>(*edx142 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx142) + 1));
    __asm__("out dx, al");
    esp143 = &(*reinterpret_cast<struct s442**>(reinterpret_cast<int32_t>(esp139 + 1) - 1))->f4;
    ebx144 = *esp143;
    esp145 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp143 + 1) - 2);
    *esp145 = ss110;
    ecx146 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx138) + reinterpret_cast<unsigned char>(*eax141));
    ebx144->f92 = reinterpret_cast<signed char>(ebx144->f92 + *reinterpret_cast<signed char*>(&ecx146));
    esp147 = reinterpret_cast<struct s440*>(reinterpret_cast<int16_t>(*esp145) + 4);
    *eax141 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax141) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax141)));
    tmp8_148 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax141) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax141)));
    cf149 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_148) < reinterpret_cast<unsigned char>(*eax141));
    *eax141 = tmp8_148;
    *reinterpret_cast<void**>(&eax141) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax141)) + reinterpret_cast<unsigned char>(*eax141)) + cf149);
    ecx150 = reinterpret_cast<uint32_t>(ecx146) - 1;
    if (ecx150) {
    }
    *eax141 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax141) | *reinterpret_cast<unsigned char*>(&ecx150));
    ebx151 = esp147->f4;
    eax152 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax141) & 0x1400115c);
    __asm__("out dx, al");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx142) + reinterpret_cast<uint32_t>(eax152)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edx142) + reinterpret_cast<uint32_t>(eax152)) + reinterpret_cast<uint32_t>(edx142);
    *edx142 = reinterpret_cast<signed char>(*edx142 + *reinterpret_cast<signed char*>(&edx142));
    *edx142 = reinterpret_cast<signed char>(*edx142 + *reinterpret_cast<signed char*>(&ebx151));
}

unsigned char g11004044;

struct s443 {
    signed char f0;
    signed char[17] pad18;
    signed char f18;
};

struct s444 {
    signed char[18] pad18;
    signed char f18;
};

struct s445 {
    signed char f0;
    signed char[16] pad17;
    signed char f17;
};

struct s446 {
    int32_t f0;
    void* f4;
};

unsigned char g2508125c;

void** fun_2c006c26();

struct s450 {
    signed char[4] pad4;
    int32_t f4;
};

struct s449 {
    signed char[4] pad4;
    struct s450* f4;
};

struct s448 {
    signed char[4] pad4;
    struct s449* f4;
};

struct s447 {
    int16_t f0;
    struct s448* f2;
};

struct s451 {
    signed char[92] pad92;
    int32_t f92;
};

void fun_10006a89(int16_t cx) {
    unsigned char* ecx1;
    int32_t* edx2;
    signed char* eax3;
    signed char* eax4;
    unsigned char* eax5;
    unsigned char tmp8_6;
    signed char* edx7;
    signed char* edx8;
    signed char dl9;
    unsigned char* edx10;
    signed char* edx11;
    signed char* ebx12;
    signed char* ebx13;
    signed char bl14;
    struct s443* ebx15;
    signed char bl16;
    struct s444* ebx17;
    unsigned char* edx18;
    signed char* edx19;
    unsigned char tmp8_20;
    unsigned char al21;
    signed char* edx22;
    signed char* edx23;
    signed char dl24;
    unsigned char* edx25;
    signed char* edx26;
    unsigned char tmp8_27;
    signed char* edx28;
    signed char* edx29;
    signed char dl30;
    unsigned char tmp8_31;
    unsigned char al32;
    signed char* edx33;
    signed char* edx34;
    signed char dl35;
    unsigned char* edx36;
    signed char* edx37;
    unsigned char tmp8_38;
    unsigned char al39;
    signed char* edx40;
    signed char* edx41;
    signed char dl42;
    unsigned char* edx43;
    signed char* edx44;
    unsigned char tmp8_45;
    unsigned char al46;
    signed char* edx47;
    signed char* edx48;
    signed char dl49;
    unsigned char* edx50;
    signed char* edx51;
    unsigned char tmp8_52;
    unsigned char al53;
    signed char* edx54;
    signed char* edx55;
    signed char dl56;
    unsigned char* edx57;
    signed char* edx58;
    unsigned char tmp8_59;
    signed char* edx60;
    signed char* edx61;
    signed char dl62;
    unsigned char tmp8_63;
    unsigned char al64;
    signed char dl65;
    unsigned char* edx66;
    signed char* edx67;
    unsigned char tmp8_68;
    signed char* edx69;
    signed char* edx70;
    signed char dl71;
    unsigned char* edx72;
    signed char* edx73;
    signed char dl74;
    struct s445* ebx75;
    unsigned char* edx76;
    signed char* edx77;
    unsigned char tmp8_78;
    signed char* edx79;
    signed char* edx80;
    signed char dl81;
    unsigned char tmp8_82;
    unsigned char al83;
    signed char* edx84;
    signed char* edx85;
    signed char dl86;
    unsigned char* edx87;
    signed char* edx88;
    unsigned char tmp8_89;
    unsigned char al90;
    signed char* edx91;
    signed char* edx92;
    signed char dl93;
    unsigned char* edx94;
    signed char* edx95;
    unsigned char tmp8_96;
    unsigned char al97;
    signed char* edx98;
    signed char* edx99;
    signed char dl100;
    unsigned char* edx101;
    signed char* edx102;
    unsigned char tmp8_103;
    signed char* edx104;
    signed char* edx105;
    signed char dl106;
    unsigned char tmp8_107;
    signed char dl108;
    void* esp109;
    unsigned char* eax110;
    unsigned char al111;
    signed char* edx112;
    signed char* edx113;
    signed char dl114;
    unsigned char* edx115;
    signed char* edx116;
    void** esp117;
    signed char* ebx118;
    void* esp119;
    void* edx120;
    void* edx121;
    int32_t edx122;
    signed char* edx123;
    signed char* edx124;
    signed char dl125;
    unsigned char* edx126;
    signed char* edx127;
    unsigned char tmp8_128;
    uint1_t cf129;
    void** esp130;
    void* esp131;
    void** eax132;
    unsigned char tmp8_133;
    uint1_t cf134;
    unsigned char* eax135;
    unsigned char tmp32_136;
    uint1_t cf137;
    uint32_t ecx138;
    int32_t* esp139;
    int32_t* esi140;
    struct s446* esp141;
    int32_t* edx142;
    unsigned char* eax143;
    void* esp144;
    void** esp145;
    void* ss146;
    void* esp147;
    void* edx148;
    void* edx149;
    int32_t edx150;
    signed char* edx151;
    signed char* edx152;
    signed char dl153;
    signed char dh154;
    int32_t* esp155;
    void** eax156;
    int32_t* edx157;
    int32_t* edx158;
    signed char* edi159;
    signed char* edi160;
    signed char dl161;
    int32_t* esp162;
    int32_t ebp163;
    int32_t* esp164;
    int32_t ebp165;
    void* tmp32_166;
    uint1_t cf167;
    int16_t* esp168;
    int16_t es169;
    int32_t* esp170;
    int32_t ebp171;
    int32_t* esp172;
    int32_t ebp173;
    void* tmp32_174;
    uint1_t cf175;
    int16_t* esp176;
    int16_t es177;
    void* tmp8_178;
    uint1_t cf179;
    int32_t* esp180;
    int32_t ebp181;
    void* tmp32_182;
    uint1_t cf183;
    int32_t* esp184;
    int32_t ebp185;
    void* tmp32_186;
    uint1_t cf187;
    int16_t* esp188;
    int16_t es189;
    void* tmp8_190;
    uint1_t cf191;
    int16_t* esp192;
    int16_t ebp193;
    void* tmp32_194;
    uint1_t cf195;
    int16_t ss196;
    int32_t* esp197;
    int32_t ebp198;
    int16_t* esp199;
    int16_t es200;
    int16_t ebx201;
    struct s447* esp202;
    int32_t ebx203;
    struct s450** esp204;
    void* al205;
    void* tmp8_206;
    void* al207;
    void** edi208;
    struct s451* esi209;
    void* esi210;
    void* tmp8_211;
    int32_t* esp212;
    void* tmp8_213;
    void* tmp8_214;

    *reinterpret_cast<int16_t*>(&ecx1) = cx;
    eax3 = reinterpret_cast<signed char*>(*edx2());
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) + reinterpret_cast<uint32_t>(eax3);
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    *eax3 = reinterpret_cast<signed char>(*eax3 + *reinterpret_cast<signed char*>(&eax3));
    eax4 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) | 0x2508125b);
    *reinterpret_cast<unsigned char*>(&ecx1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx1) + *eax4)));
    eax5 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax4) & 0x200115c);
    tmp8_6 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_6;
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + 1);
    *edx7 = reinterpret_cast<signed char>(*edx8 + dl9);
    *edx10 = reinterpret_cast<unsigned char>(*edx11 + *reinterpret_cast<unsigned char*>(&eax5));
    *ebx12 = reinterpret_cast<signed char>(*ebx13 + bl14);
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<unsigned char*>(&eax5));
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) + *reinterpret_cast<unsigned char*>(&ecx1));
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *reinterpret_cast<signed char*>(&ebx15) = reinterpret_cast<signed char>(bl16 + ebx17->f18);
    *edx18 = reinterpret_cast<unsigned char>(*edx19 + *reinterpret_cast<unsigned char*>(&eax5));
    tmp8_20 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_20;
    al21 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + 1);
    *edx22 = reinterpret_cast<signed char>(*edx23 + dl24);
    *edx25 = reinterpret_cast<unsigned char>(*edx26 + al21);
    tmp8_27 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_27;
    *edx28 = reinterpret_cast<signed char>(*edx29 + dl30);
    g200115c = 0xff;
    tmp8_31 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_31;
    al32 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al21 + 1) + 1);
    *edx33 = reinterpret_cast<signed char>(*edx34 + dl35);
    *edx36 = reinterpret_cast<unsigned char>(*edx37 + al32);
    tmp8_38 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_38;
    al39 = reinterpret_cast<unsigned char>(al32 + 1);
    *edx40 = reinterpret_cast<signed char>(*edx41 + dl42);
    *edx43 = reinterpret_cast<unsigned char>(*edx44 + al39);
    tmp8_45 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_45;
    al46 = reinterpret_cast<unsigned char>(al39 + 1);
    *edx47 = reinterpret_cast<signed char>(*edx48 + dl49);
    *edx50 = reinterpret_cast<unsigned char>(*edx51 + al46);
    tmp8_52 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_52;
    al53 = reinterpret_cast<unsigned char>(al46 + 1);
    *edx54 = reinterpret_cast<signed char>(*edx55 + dl56);
    *edx57 = reinterpret_cast<unsigned char>(*edx58 + al53);
    tmp8_59 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_59;
    *edx60 = reinterpret_cast<signed char>(*edx61 + dl62);
    g200125c = 0xff;
    tmp8_63 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_63;
    al64 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al53 + 1) + 1);
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + dl65);
    *edx66 = reinterpret_cast<unsigned char>(*edx67 + al64);
    tmp8_68 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_68;
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al64 + 1);
    *edx69 = reinterpret_cast<signed char>(*edx70 + dl71);
    *edx72 = reinterpret_cast<unsigned char>(*edx73 + *reinterpret_cast<unsigned char*>(&eax5));
    ebx15->f0 = reinterpret_cast<signed char>(ebx15->f0 + *reinterpret_cast<signed char*>(&ebx15));
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<unsigned char*>(&eax5));
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) + dl74);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *reinterpret_cast<signed char*>(&ebx75) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx15) + ebx15->f18);
    *edx76 = reinterpret_cast<unsigned char>(*edx77 + *reinterpret_cast<unsigned char*>(&eax5));
    tmp8_78 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_78;
    *edx79 = reinterpret_cast<signed char>(*edx80 + dl81);
    g200115c = 0xff;
    tmp8_82 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_82;
    al83 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + 1) + 1);
    *edx84 = reinterpret_cast<signed char>(*edx85 + dl86);
    *edx87 = reinterpret_cast<unsigned char>(*edx88 + al83);
    tmp8_89 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_89;
    al90 = reinterpret_cast<unsigned char>(al83 + 1);
    *edx91 = reinterpret_cast<signed char>(*edx92 + dl93);
    *edx94 = reinterpret_cast<unsigned char>(*edx95 + al90);
    tmp8_96 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_96;
    al97 = reinterpret_cast<unsigned char>(al90 + 1);
    *edx98 = reinterpret_cast<signed char>(*edx99 + dl100);
    *edx101 = reinterpret_cast<unsigned char>(*edx102 + al97);
    tmp8_103 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_103;
    *edx104 = reinterpret_cast<signed char>(*edx105 + dl106);
    g200115c = 0xff;
    tmp8_107 = reinterpret_cast<unsigned char>(g11004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax5) + 1));
    g11004044 = tmp8_107;
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + dl108);
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al97 + 1) + 1) | 8);
    esp109 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(__return_address()) + 4)) + 4);
    *reinterpret_cast<unsigned char*>(&ecx1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx1) + *eax5)));
    eax110 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) & 0x8600115c);
    __asm__("out 0x11, eax");
    al111 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax110) + 2)));
    *edx112 = reinterpret_cast<signed char>(*edx113 + dl114);
    *edx115 = reinterpret_cast<unsigned char>(*edx116 + al111);
    ebx75->f0 = reinterpret_cast<signed char>(ebx75->f0 + *reinterpret_cast<signed char*>(&ebx75));
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + al111);
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    esp117 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp109) - 4);
    *reinterpret_cast<void***>(esp117) = esp117;
    *reinterpret_cast<unsigned char*>(&eax110) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al111));
    *eax110 = reinterpret_cast<unsigned char>(*eax110 + *reinterpret_cast<unsigned char*>(&eax110));
    *reinterpret_cast<signed char*>(&ebx118) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx75) + ebx75->f17);
    *reinterpret_cast<unsigned char*>(&eax110) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax110) | 8);
    esp119 = reinterpret_cast<void*>(*reinterpret_cast<void***>(esp117) + 1);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx120) + reinterpret_cast<uint32_t>(eax110)) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx121) + reinterpret_cast<uint32_t>(eax110)) + edx122);
    *edx123 = reinterpret_cast<signed char>(*edx124 + dl125);
    *edx126 = reinterpret_cast<unsigned char>(*edx127 + *reinterpret_cast<unsigned char*>(&eax110));
    *ebx118 = reinterpret_cast<signed char>(*ebx118 + *reinterpret_cast<signed char*>(&ebx118));
    *ecx1 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<unsigned char*>(&eax110));
    tmp8_128 = reinterpret_cast<unsigned char>(*ecx1 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx1) + 1));
    cf129 = reinterpret_cast<uint1_t>(tmp8_128 < *ecx1);
    *ecx1 = tmp8_128;
    esp130 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp119) - 4);
    *reinterpret_cast<void***>(esp130) = esp130;
    *reinterpret_cast<unsigned char*>(&eax110) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax110))) + cf129);
    *eax110 = reinterpret_cast<unsigned char>(*eax110 + *reinterpret_cast<unsigned char*>(&eax110));
    *reinterpret_cast<unsigned char*>(&eax110) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax110) | 8);
    esp131 = reinterpret_cast<void*>(*reinterpret_cast<void***>(esp130) + 1);
    *reinterpret_cast<unsigned char*>(&ecx1) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx1) + *eax110)));
    eax132 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax110) & 0x8b75c);
    *eax132 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax132) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax132)));
    *eax132 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax132) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax132)));
    tmp8_133 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax132) + reinterpret_cast<uint32_t>(eax132)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax132)));
    cf134 = reinterpret_cast<uint1_t>(tmp8_133 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax132) + reinterpret_cast<uint32_t>(eax132)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax132) + reinterpret_cast<uint32_t>(eax132)) = tmp8_133;
    eax135 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax132) - (reinterpret_cast<signed char>(*eax132) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax132) < reinterpret_cast<signed char>(*eax132) + cf134)));
    tmp32_136 = reinterpret_cast<unsigned char>(*eax135 + reinterpret_cast<uint32_t>(eax135));
    cf137 = reinterpret_cast<uint1_t>(tmp32_136 < *eax135);
    *eax135 = tmp32_136;
    *eax135 = reinterpret_cast<unsigned char>(*eax135 - (reinterpret_cast<uint32_t>(eax135) + reinterpret_cast<uint1_t>(*eax135 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax135) + cf137))));
    *eax135 = reinterpret_cast<unsigned char>(*eax135 + *reinterpret_cast<signed char*>(&eax135));
    *eax135 = reinterpret_cast<unsigned char>(*eax135 + reinterpret_cast<uint32_t>(eax135));
    ecx138 = reinterpret_cast<int32_t>(ecx1) + *eax135;
    *eax135 = reinterpret_cast<unsigned char>(*eax135 + *reinterpret_cast<signed char*>(&eax135));
    *eax135 = reinterpret_cast<unsigned char>(*eax135 + *reinterpret_cast<signed char*>(&ecx138));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax135) + reinterpret_cast<uint32_t>(eax135) - 32) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax135) + reinterpret_cast<uint32_t>(eax135) - 32) + *reinterpret_cast<signed char*>(&ecx138));
    esp139 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp131) - 4);
    *esp139 = *esi140;
    __asm__("in al, 0xff");
    esp141 = reinterpret_cast<struct s446*>(esp139 + 1 - 1);
    esp141->f0 = 0x10006bfd;
    eax143 = reinterpret_cast<unsigned char*>(*edx142());
    g2508125c = 0xff;
    esp144 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp141->f4) + 4);
    *eax143 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax143 + reinterpret_cast<int32_t>(eax143))));
    esp145 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp144) - 2);
    *esp145 = ss146;
    __asm__("out 0x12, eax");
    g2508125c = 0xff;
    esp147 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp145) + 4);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx148) + reinterpret_cast<int32_t>(eax143)) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx149) + reinterpret_cast<int32_t>(eax143)) + edx150);
    *edx151 = reinterpret_cast<signed char>(*edx152 + dl153);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax143) + reinterpret_cast<int32_t>(eax143) + 0x8b7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax143) + reinterpret_cast<int32_t>(eax143) + 0x8b7) + dh154);
    *eax143 = reinterpret_cast<unsigned char>(*eax143 + *reinterpret_cast<signed char*>(&eax143));
    esp155 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp147) - 4);
    *esp155 = 0x10006c23;
    eax156 = fun_2c006c26();
    *edx157 = *edx158 + reinterpret_cast<int32_t>(eax156);
    *edi159 = reinterpret_cast<signed char>(*edi160 + dl161);
    esp162 = esp155 + 1 - 1;
    *esp162 = ebp163;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156));
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    esp164 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp162) + 2 - 4);
    *esp164 = ebp165;
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    tmp32_166 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    cf167 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_166) < reinterpret_cast<unsigned char>(*eax156));
    *eax156 = tmp32_166;
    esp168 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp164) - 2);
    *esp168 = es169;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) < reinterpret_cast<unsigned char>(1 + cf167))));
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156));
    esp170 = reinterpret_cast<int32_t*>(esp168 + 2 + 1 - 2);
    *esp170 = ebp171;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) | reinterpret_cast<unsigned char>(*eax156));
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    esp172 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp170) + 2 - 4);
    *esp172 = ebp173;
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    tmp32_174 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    cf175 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_174) < reinterpret_cast<unsigned char>(*eax156));
    *eax156 = tmp32_174;
    esp176 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp172) - 2);
    *esp176 = es177;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) < reinterpret_cast<unsigned char>(1 + cf175))));
    tmp8_178 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156));
    cf179 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_178) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    *reinterpret_cast<void**>(&eax156) = tmp8_178;
    esp180 = reinterpret_cast<int32_t*>(esp176 + 2 + 1 - 2);
    *esp180 = ebp181;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156)) + cf179);
    tmp32_182 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    cf183 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_182) < reinterpret_cast<unsigned char>(*eax156));
    *eax156 = tmp32_182;
    esp184 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp180) + 2 - 4);
    *esp184 = ebp185;
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156))) + cf183);
    tmp32_186 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    cf187 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_186) < reinterpret_cast<unsigned char>(*eax156));
    *eax156 = tmp32_186;
    esp188 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp184) - 2);
    *esp188 = es189;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) < reinterpret_cast<unsigned char>(1 + cf187))));
    tmp8_190 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156));
    cf191 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_190) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    *reinterpret_cast<void**>(&eax156) = tmp8_190;
    esp192 = esp188 + 2 + 1 - 2;
    *esp192 = ebp193;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax156) + cf191))));
    tmp32_194 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    cf195 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_194) < reinterpret_cast<unsigned char>(*eax156));
    *eax156 = tmp32_194;
    ss196 = *esp192;
    esp197 = reinterpret_cast<int32_t*>(esp192 + 1 - 2);
    *esp197 = ebp198;
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax156) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + cf195))));
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<int32_t>(eax156));
    esp199 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp197) - 2);
    *esp199 = es200;
    ebx201 = *esp199;
    esp202 = reinterpret_cast<struct s447*>(esp199 + 2 - 1);
    esp202->f0 = ss196;
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    ebx203 = ebx201 - 1;
    esp204 = &esp202->f2->f4->f4;
    al205 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156))));
    tmp8_206 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al205)));
    *reinterpret_cast<void**>(&eax156) = tmp8_206;
    al207 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_206) < reinterpret_cast<unsigned char>(al205)));
    *edi208 = al207;
    esi209 = reinterpret_cast<struct s451*>(reinterpret_cast<int32_t>(esi210) + 1 + 1);
    esi209->f92 = esi209->f92 + 1;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al207)))));
    tmp8_211 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156))));
    esp212 = &(*esp204)->f4;
    tmp8_213 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(tmp8_211))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_211) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156))));
    tmp8_214 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(tmp8_213))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_213) < reinterpret_cast<unsigned char>(tmp8_211)));
    *reinterpret_cast<void**>(&eax156) = tmp8_214;
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_214) < reinterpret_cast<unsigned char>(tmp8_213)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax156) + reinterpret_cast<int32_t>(eax156)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax156) + reinterpret_cast<int32_t>(eax156)) + *reinterpret_cast<signed char*>(&ebx203));
    goto *esp212;
}

struct s452 {
    signed char[8] pad8;
    int32_t f8;
};

signed char g31004ce5;

void fun_10006e8f() {
    struct s452* ebx1;
    unsigned char* eax2;
    int32_t* esp3;
    int32_t ebx4;
    signed char* ecx5;
    int16_t* esp6;
    int16_t ss7;
    signed char* esi8;
    signed char* esi9;
    signed char dh10;
    signed char tmp8_11;
    signed char dh12;
    unsigned char tmp8_13;
    void* edi14;
    int32_t edi15;
    uint1_t cf16;
    void* edi17;
    int32_t edi18;
    void* edi19;
    int32_t edi20;
    int32_t ebx21;
    signed char* eax22;
    int32_t esi23;
    int32_t esi24;

    eax2 = reinterpret_cast<unsigned char*>(ebx1->f8());
    esp3 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    ebx4 = *esp3;
    *reinterpret_cast<signed char*>(&ecx5) = 3;
    *eax2 = reinterpret_cast<unsigned char>(*eax2 - *reinterpret_cast<unsigned char*>(&eax2));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<unsigned char*>(&eax2));
    esp6 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp3 + 1) - 2);
    *esp6 = ss7;
    *esi8 = reinterpret_cast<signed char>(*esi9 + dh10);
    *ecx5 = reinterpret_cast<signed char>(*ecx5 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1));
    __asm__("in eax, 0x4c");
    tmp8_11 = reinterpret_cast<signed char>(g31004ce5 + dh12);
    g31004ce5 = tmp8_11;
    __asm__("in eax, 0x8");
    tmp8_13 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi14) + edi15 * 8 + 54) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx4) + 1));
    cf16 = reinterpret_cast<uint1_t>(tmp8_13 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi17) + edi18 * 8 + 54));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi19) + edi20 * 8 + 54) = tmp8_13;
    ebx21 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp6) - 1 - 1);
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + *eax2) + cf16);
    eax22 = reinterpret_cast<signed char*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax2)));
    __asm__("in eax, 0x12");
    *reinterpret_cast<signed char*>(esi23 + 0x321ff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi24 + 0x321ff) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx21) + 1));
    *ecx5 = reinterpret_cast<signed char>(*ecx5 + *reinterpret_cast<signed char*>(&ebx21));
    *eax22 = reinterpret_cast<signed char>(*eax22 + *reinterpret_cast<signed char*>(&eax22));
    *ecx5 = reinterpret_cast<signed char>(*ecx5 + *reinterpret_cast<signed char*>(&eax22));
}

struct s453 {
    void* f0;
    signed char[16] pad17;
    signed char f17;
};

struct s454 {
    void* f0;
    unsigned char f1;
};

struct s455 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s456 {
    signed char[92] pad92;
    signed char f92;
};

struct s457 {
    signed char[1] pad1;
    unsigned char f1;
};

unsigned char g10;

struct s458 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_10006ec5(void* ecx) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    void* ebx8;
    int32_t ebx9;
    struct s453* eax10;
    struct s454* ecx11;
    struct s455* ebx12;
    struct s456* ebx13;
    unsigned char* esi14;
    struct s457* esi15;
    void* al16;
    void* tmp8_17;
    void** esp18;
    void* ebx19;
    unsigned char tmp8_20;
    unsigned char* ecx21;
    signed char* edx22;
    signed char* edx23;
    signed char dl24;
    signed char* edi25;
    void* edi26;
    unsigned char* ebx27;
    unsigned char** esp28;
    void* ecx29;
    struct s458* ecx30;
    unsigned char* ecx31;
    int32_t ebx32;
    signed char* edx33;
    signed char* edx34;
    signed char dl35;

    *eax2 = *eax3 + 1;
    *reinterpret_cast<signed char*>(eax4 + eax5 - 54) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 - 54) + *reinterpret_cast<signed char*>(&ecx));
    eax10 = reinterpret_cast<struct s453*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx8) + ebx9 * 2 + 22)());
    ecx11 = reinterpret_cast<struct s454*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<unsigned char>(eax10->f0));
    ebx12->f92 = reinterpret_cast<unsigned char>(ebx13->f92 + *reinterpret_cast<unsigned char*>(&ecx11));
    esi14 = &esi15->f1;
    al16 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10))));
    tmp8_17 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al16)));
    *reinterpret_cast<void**>(&eax10) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_17) + reinterpret_cast<signed char>(ecx11->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_17) < reinterpret_cast<unsigned char>(al16)));
    __asm__("fdiv st7, st0");
    esp18 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__return_address()) + 4 + 4);
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) | *reinterpret_cast<unsigned char*>(&ecx11));
    ebx19 = *esp18;
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    ecx11->f0 = reinterpret_cast<void*>(reinterpret_cast<signed char>(ecx11->f0) + reinterpret_cast<int32_t>(eax10));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    tmp8_20 = reinterpret_cast<unsigned char>((&g10)[2] + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    (&g10)[2] = tmp8_20;
    ecx21 = &ecx11->f1;
    *esi14 = reinterpret_cast<unsigned char>(*esi14 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx21) + 1)));
    __asm__("outsd ");
    *esi14 = reinterpret_cast<unsigned char>(*esi14 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx21) + 1)));
    *edx22 = reinterpret_cast<signed char>(*edx23 + dl24);
    *ecx21 = reinterpret_cast<unsigned char>(*ecx21 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax10) + 1));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) + 58) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) + 58) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx21) + 1)));
    *ecx21 = reinterpret_cast<unsigned char>(*ecx21 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    *ecx21 = reinterpret_cast<unsigned char>(*ecx21 + *reinterpret_cast<signed char*>(&ecx21));
    edi25 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi26) - 1);
    *ecx21 = reinterpret_cast<unsigned char>(*ecx21 + *reinterpret_cast<signed char*>(&ecx21));
    ebx27 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx19) + 1 - 1);
    *ecx21 = reinterpret_cast<unsigned char>(*ecx21 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    esp28 = reinterpret_cast<unsigned char**>(esp18 + 1 - 1);
    *esp28 = ebx27;
    *ecx21 = reinterpret_cast<unsigned char>(*ecx21 + *reinterpret_cast<signed char*>(&ebx27));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) - reinterpret_cast<int32_t>(eax10));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx27) + 1));
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    ecx29 = reinterpret_cast<void*>(ecx21 + 1 - 1);
    *edi25 = reinterpret_cast<signed char>(*edi25 + *reinterpret_cast<signed char*>(&ecx29));
    ecx30 = reinterpret_cast<struct s458*>(reinterpret_cast<uint32_t>(ecx29) - 1);
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx27) + 1));
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + *reinterpret_cast<signed char*>(&ecx30));
    ecx31 = &ecx30->f1;
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx27) + 1));
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx27) + 1));
    *ebx27 = reinterpret_cast<unsigned char>(*ebx27 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx27) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) + 65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) + 65) + *reinterpret_cast<signed char*>(&ecx31));
    *ecx31 = reinterpret_cast<unsigned char>(*ecx31 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx31) + 1)));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx31) + 1)));
    *ecx31 = reinterpret_cast<unsigned char>(*ecx31 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    *ecx31 = reinterpret_cast<unsigned char>(*ecx31 + *reinterpret_cast<signed char*>(&ecx31));
    *ecx31 = reinterpret_cast<unsigned char>(*ecx31 + *reinterpret_cast<signed char*>(&ecx31));
    ebx32 = reinterpret_cast<int32_t>(ebx27 + 1 - 1);
    *edx33 = reinterpret_cast<signed char>(*edx34 + dl35);
    *reinterpret_cast<int32_t*>(esp28 - 1) = reinterpret_cast<int32_t>(edi25 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) + 41) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10) + 41) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    eax10->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax10->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax10)));
    eax10->f17 = reinterpret_cast<signed char>(eax10->f17 + *reinterpret_cast<signed char*>(&ebx32));
    __asm__("wait ");
    __asm__("cdq ");
}

struct s459 {
    signed char[11141172] pad11141172;
    uint32_t f11141172;
};

struct s460 {
    void* f0;
    signed char[79] pad80;
    void* f80;
    signed char[23] pad104;
    unsigned char f104;
    signed char[5] pad110;
    int32_t f110;
    int32_t f114;
    signed char[3] pad121;
    int32_t f121;
    signed char[33821571] pad33821696;
    unsigned char f33821696;
};

struct s461 {
    unsigned char* f0;
    signed char[2] pad4;
    struct s460* f4;
};

struct s462 {
    signed char[100] pad100;
    int32_t f100;
};

struct s463 {
    signed char[1] pad1;
    void* f1;
};

struct s464 {
    signed char f0;
    void* f1;
};

void* gda0000a3;

struct s465 {
    signed char[84] pad84;
    unsigned char f84;
};

struct s466 {
    signed char[84] pad84;
    signed char f84;
};

struct s467 {
    int32_t f0;
    signed char[101] pad105;
    unsigned char f105;
};

struct s460* fun_ca767650();

signed char g734c0000;

struct s460* fun_ca767606();

struct s468 {
    uint32_t f0;
    signed char[17044476] pad17044480;
    uint32_t f17044480;
};

struct s469 {
    unsigned char f0;
    signed char[117] pad118;
    unsigned char f118;
};

void fun_4e5ab8c7();

void fun_10006f7c(void* ecx) {
    uint1_t df2;
    int32_t ebp3;
    uint16_t es4;
    void* eax5;
    unsigned char al6;
    int32_t ebp7;
    void* eax8;
    struct s459* eax9;
    struct s460* edx10;
    uint32_t edx11;
    uint32_t edi12;
    struct s460* eax13;
    struct s461* esp14;
    unsigned char* ss15;
    unsigned char* ecx16;
    struct s460** esp17;
    signed char* ebx18;
    signed char* ebx19;
    signed char bl20;
    void* tmp8_21;
    uint1_t cf22;
    int1_t of23;
    uint1_t below_or_equal24;
    struct s460** esp25;
    struct s460* ebx26;
    struct s460** esp27;
    struct s460* ebx28;
    struct s462* esi29;
    void* esi30;
    unsigned char tmp8_31;
    uint1_t cf32;
    uint1_t zf33;
    uint1_t zf34;
    uint1_t below_or_equal35;
    struct s463* ebx36;
    struct s464* eax37;
    void* tmp8_38;
    uint1_t below_or_equal39;
    struct s460** esp40;
    struct s465* ebp41;
    struct s466* ebp42;
    struct s460* edi43;
    int32_t esi44;
    int32_t esi45;
    unsigned char tmp8_46;
    struct s467* ebp47;
    struct s460** esp48;
    struct s460* edi49;
    int1_t of50;
    unsigned char tmp8_51;
    uint1_t cf52;
    struct s460** esp53;
    struct s460** esp54;
    struct s460** esp55;
    void* edi56;
    unsigned char tmp8_57;
    uint1_t cf58;
    uint1_t zf59;
    signed char tmp8_60;
    struct s460** esp61;
    void* tmp8_62;
    uint1_t zf63;
    uint1_t below_or_equal64;
    struct s460** esp65;
    void* esp66;
    unsigned char tmp8_67;
    unsigned char tmp8_68;
    int1_t cf69;
    struct s460** esp70;
    uint1_t zf71;
    void* tmp8_72;
    uint1_t cf73;
    struct s460** esp74;
    struct s460** esp75;
    unsigned char tmp8_76;
    void* tmp32_77;
    unsigned char tmp8_78;
    int1_t cf79;
    void* tmp32_80;
    struct s460* ebx81;
    void* tmp32_82;
    void* edi83;
    void* esi84;
    void* tmp8_85;
    uint1_t cf86;
    int1_t zf87;
    struct s460** esp88;
    void* tmp32_89;
    struct s460** esp90;
    struct s460** esp91;
    void* tmp32_92;
    void* tmp32_93;
    struct s460* edi94;
    int16_t* esp95;
    int16_t cs96;
    void* tmp32_97;
    void* ebp98;
    void* tmp32_99;
    struct s468* edi100;
    void* tmp32_101;
    void* dl102;
    void* tmp32_103;
    void* tmp32_104;
    void* tmp32_105;
    void* tmp32_106;
    void* tmp32_107;
    void* edi108;
    void* tmp32_109;
    unsigned char* esi110;
    unsigned char* edi111;
    unsigned char* esi112;
    void* tmp8_113;
    uint1_t cf114;
    unsigned char* edi115;
    struct s469* esi116;
    signed char* ebp117;
    struct s460** esp118;
    signed char* eax119;
    void* tmp8_120;
    int1_t cf121;
    struct s460** esp122;
    struct s460** esp123;
    struct s460** esp124;
    struct s460* eflags125;
    int16_t es126;

    df2 = 0;
    *reinterpret_cast<uint32_t*>(ebp3 - 0x160d8648) = es4;
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(al6 | *reinterpret_cast<unsigned char*>(ebp7 - 0x22f953b5));
    __asm__("in al, dx");
    eax8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax5) + 1);
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx) - 63) = eax8;
    eax9 = reinterpret_cast<struct s459*>(reinterpret_cast<int32_t>(eax8) + 1);
    __asm__("insd ");
    if (!eax9) 
        goto 0x10006f65;
    eax9->f11141172 = eax9->f11141172 + reinterpret_cast<int32_t>(eax9) + 1;
    __asm__("pushad ");
    edx10 = reinterpret_cast<struct s460*>(edx11 | edi12);
    eax13 = reinterpret_cast<struct s460*>(reinterpret_cast<int32_t>(eax9) - 0x4db58cf9);
    esp14 = reinterpret_cast<struct s461*>(reinterpret_cast<int32_t>(ecx) + 4 - 2);
    esp14->f0 = ss15;
    ecx16 = esp14->f0;
    esp17 = &esp14->f4;
    if (__undefined()) {
        addr_10006fd7_3:
        eax13 = reinterpret_cast<struct s460*>(&eax13->f0);
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        *ebx18 = reinterpret_cast<signed char>(*ebx19 + bl20);
        tmp8_21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        cf22 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_21) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)));
        *reinterpret_cast<void**>(&eax13->f0) = tmp8_21;
        of23 = __intrinsic();
        below_or_equal24 = reinterpret_cast<uint1_t>(cf22 | reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax13->f0) == 0));
        esp25 = esp17 - 4;
        *esp25 = ebx26;
        esp17 = esp25 - 4;
        *esp17 = reinterpret_cast<struct s460*>(0x6f647475);
        if (!below_or_equal24) {
            addr_1000705d_4:
            __asm__("outsb ");
            esp27 = esp17 - 4;
            *esp27 = ebx28;
            esp17 = esp27 - 4;
            *esp17 = reinterpret_cast<struct s460*>(0x7453776f);
            goto addr_10007062_5;
        } else {
            esi29 = reinterpret_cast<struct s462*>(reinterpret_cast<int32_t>(esi30) + 1);
            of23 = __intrinsic();
            __asm__("insb ");
            if (reinterpret_cast<int32_t>(esi29) >= 0) {
                addr_10007062_5:
                __asm__("outsd ");
            } else {
                if (esi29) {
                    addr_10007069_8:
                    eax13 = reinterpret_cast<struct s460*>(&eax13->f0);
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
                    tmp8_31 = reinterpret_cast<unsigned char>(ebx28->f104 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
                    cf32 = reinterpret_cast<uint1_t>(tmp8_31 < ebx28->f104);
                    ebx28->f104 = tmp8_31;
                    zf33 = reinterpret_cast<uint1_t>(ebx28->f104 == 0);
                    if (!zf33) {
                        addr_100070ef_9:
                        goto addr_100070f0_10;
                    } else {
                        __asm__("outsd ");
                        if (!reinterpret_cast<uint1_t>(cf32 | zf33)) 
                            goto addr_100070ed_12;
                        esi29 = reinterpret_cast<struct s462*>(reinterpret_cast<int32_t>(esi29) + 1);
                        zf34 = reinterpret_cast<uint1_t>(esi29 == 0);
                        below_or_equal35 = reinterpret_cast<uint1_t>(cf32 | zf34);
                        __asm__("insb ");
                        if (reinterpret_cast<int32_t>(esi29) >= 0) 
                            goto addr_100070f2_14; else 
                            goto addr_10007083_15;
                    }
                } else {
                    ebx28 = reinterpret_cast<struct s460*>(&ebx36->f1);
                    __asm__("popad ");
                    goto addr_10006ff7_17;
                }
            }
        }
    } else {
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        --ecx16;
        if (reinterpret_cast<uint1_t>(!!ecx16) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax13->f0))) {
            addr_10006ff7_17:
            __asm__("outsb ");
            __asm__("arpl [ebp+0x6c], sp");
            __asm__("insb ");
            *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            eax37 = reinterpret_cast<struct s464*>(reinterpret_cast<unsigned char>(eax13) | reinterpret_cast<unsigned char>(g0));
            eax37->f0 = reinterpret_cast<signed char>(eax37->f0 + *reinterpret_cast<signed char*>(&eax37));
            eax13 = reinterpret_cast<struct s460*>(&eax37->f1);
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            tmp8_38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            cf32 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_38) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)));
            *reinterpret_cast<void**>(&eax13->f0) = tmp8_38;
            below_or_equal39 = reinterpret_cast<uint1_t>(cf32 | reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax13->f0) == 0));
            esp40 = esp17 - 4;
            *esp40 = ebx28;
            esp17 = esp40 - 4;
            *esp17 = reinterpret_cast<struct s460*>(0x6f647475);
            if (!below_or_equal39) {
                goto addr_10007085_20;
            }
        } else {
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<void**>(&eax13) = gda0000a3;
            __asm__("int 0x0");
            ebp41->f84 = reinterpret_cast<unsigned char>(ebp42->f84 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            esp17 = esp17 - 4;
            *esp17 = edi43;
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<unsigned char*>(esi44 + 0x2b88040e) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi45 + 0x2b88040e) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            eax13 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(eax13) + 0xb03bb8a);
            goto addr_10006fd7_3;
        }
    }
    ecx16 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(ecx16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)));
    goto addr_10007069_8;
    addr_100070f2_14:
    ebx28 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(ebx28) - 1);
    tmp8_46 = reinterpret_cast<unsigned char>(ebp47->f105 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    cf32 = reinterpret_cast<uint1_t>(tmp8_46 < ebp47->f105);
    ebp47->f105 = tmp8_46;
    zf34 = reinterpret_cast<uint1_t>(ebp47->f105 == 0);
    below_or_equal35 = reinterpret_cast<uint1_t>(cf32 | zf34);
    __asm__("arpl [edx+0x6f], si");
    goto addr_100070f9_23;
    addr_10007083_15:
    if (!zf34) {
        addr_100070f9_23:
        if (!cf32) {
            goto addr_1000716b_25;
        }
    } else {
        addr_10007085_20:
        ebx28 = reinterpret_cast<struct s460*>(&ebx28->pad80);
        zf33 = reinterpret_cast<uint1_t>(ebx28 == 0);
        if (cf32) {
            addr_100070ed_12:
            goto addr_100070ef_9;
        } else {
            __asm__("popad ");
            goto addr_10007089_27;
        }
    }
    if (zf34) {
        addr_1000712c_29:
        cf32 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx28->f80) + cf32));
        *reinterpret_cast<void**>(&edx10 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx28->f80) + cf32));
        goto addr_1000712e_30;
    } else {
        esp48 = esp17 - 4;
        *esp48 = edi49;
        ebp47 = reinterpret_cast<struct s467*>(esi29->f100 * 0x2e73776f);
        esp17 = esp48 + 1;
        of50 = __intrinsic();
        if (!__intrinsic()) {
            addr_10007175_32:
            tmp8_51 = reinterpret_cast<unsigned char>(*ecx16 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            cf52 = reinterpret_cast<uint1_t>(tmp8_51 < *ecx16);
            *ecx16 = tmp8_51;
            *reinterpret_cast<void**>(&edx10 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx28->f80) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(ebx28->f80) + cf52))));
            edi49 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(edi49) - 1);
            goto addr_1000717b_33;
        } else {
            if (!esp17) {
                addr_1000717b_33:
                __asm__("iretd ");
                *reinterpret_cast<struct s460**>(reinterpret_cast<unsigned char>(edx10) - 0x231f4cb9) = eax13;
                esp53 = esp17 - 4;
                *esp53 = reinterpret_cast<struct s460*>(0x10007187);
                eax13 = fun_ca767650();
                esp17 = esp53 + 4;
                *ecx16 = reinterpret_cast<unsigned char>(*ecx16 + reinterpret_cast<int32_t>(ebp47));
                goto addr_10007188_35;
            } else {
                addr_1000710c_36:
                if (of50) {
                    addr_1000713c_37:
                    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + 0x6d);
                    goto addr_1000713f_38;
                } else {
                    esp54 = esp17 - 4;
                    *esp54 = ebx28;
                    esp17 = esp54 - 4;
                    *esp17 = reinterpret_cast<struct s460*>(0x2e6c6c65);
                    goto addr_10007112_40;
                }
            }
        }
    }
    esi29 = reinterpret_cast<struct s462*>(reinterpret_cast<int32_t>(esi29) + 1);
    zf33 = reinterpret_cast<uint1_t>(esi29 == 0);
    of50 = __intrinsic();
    __asm__("insb ");
    if (reinterpret_cast<int32_t>(esi29) >= 0) {
        addr_10007089_27:
        if (zf33) {
            addr_100070f0_10:
            goto addr_100070f2_14;
        } else {
            ++ecx16;
            of50 = __intrinsic();
            __asm__("outsb ");
            esp55 = esp17 - 4;
            *esp55 = ebx28;
            esp17 = esp55 - 4;
            *esp17 = reinterpret_cast<struct s460*>(0x7453776f);
            goto addr_10007090_43;
        }
    } else {
        if (!zf33) {
            addr_10007090_43:
            goto addr_10007093_45;
        } else {
            edi49 = reinterpret_cast<struct s460*>(reinterpret_cast<int32_t>(edi56) - 1);
            of50 = __intrinsic();
            if (of50) {
                addr_10007093_45:
                __asm__("popad ");
                if (cf32) {
                    goto addr_1000710c_36;
                } else {
                    *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    eax13 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(eax13) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    goto addr_1000709f_49;
                }
            } else {
                ebp47 = reinterpret_cast<struct s467*>(edi49->f110 * 0x736f6843);
                __asm__("outsb ");
                tmp8_57 = reinterpret_cast<unsigned char>(ebx28->f104 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
                cf58 = reinterpret_cast<uint1_t>(tmp8_57 < ebx28->f104);
                ebx28->f104 = tmp8_57;
                zf59 = reinterpret_cast<uint1_t>(ebx28->f104 == 0);
                if (!zf59) {
                    addr_100070a1_51:
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    tmp8_60 = reinterpret_cast<signed char>(g734c0000 + *reinterpret_cast<signed char*>(&ebx28 + 1));
                    g734c0000 = tmp8_60;
                    __asm__("popad ");
                    edi49 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(edi49) - 1);
                    if (__intrinsic()) 
                        goto addr_10007112_40;
                } else {
                    __asm__("outsd ");
                    if (!reinterpret_cast<uint1_t>(cf58 | zf59)) {
                        addr_1000709f_49:
                        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                        goto addr_100070a1_51;
                    } else {
                        ebx28 = reinterpret_cast<struct s460*>(&ebx28->pad80);
                        esp61 = esp17 - 4;
                        *esp61 = reinterpret_cast<struct s460*>(0x6563696f);
                        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
                        ecx16 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(ecx16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)));
                        eax13 = reinterpret_cast<struct s460*>(&eax13->f0);
                        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                        *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
                        tmp8_62 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                        cf32 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_62) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)));
                        *reinterpret_cast<void**>(&eax13->f0) = tmp8_62;
                        zf63 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax13->f0) == 0);
                        below_or_equal64 = reinterpret_cast<uint1_t>(cf32 | zf63);
                        esp65 = esp61 - 4;
                        *esp65 = ebx28;
                        esp17 = esp65 - 4;
                        *esp17 = reinterpret_cast<struct s460*>(0x6f647475);
                        if (!below_or_equal64) 
                            goto addr_100070be_54;
                        esi29 = reinterpret_cast<struct s462*>(reinterpret_cast<int32_t>(esi29) + 1);
                        zf63 = reinterpret_cast<uint1_t>(esi29 == 0);
                        below_or_equal64 = reinterpret_cast<uint1_t>(cf32 | zf63);
                        __asm__("insb ");
                        if (reinterpret_cast<int32_t>(esi29) >= 0) 
                            goto addr_100070c3_56; else 
                            goto addr_10007054_57;
                    }
                }
            }
        }
    }
    __asm__("outsb ");
    esp66 = reinterpret_cast<void*>(esp17 - 1);
    __asm__("outsd ");
    __asm__("arpl [ecx+0x6c], sp");
    esp17 = reinterpret_cast<struct s460**>(reinterpret_cast<int32_t>(esp66) - 4);
    *esp17 = ebx28;
    if (reinterpret_cast<int32_t>(esp66) >= 0) {
        addr_10007129_59:
        tmp8_67 = reinterpret_cast<unsigned char>(*ecx16 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        cf32 = reinterpret_cast<uint1_t>(tmp8_67 < *ecx16);
        *ecx16 = tmp8_67;
        goto addr_1000712c_29;
    } else {
        if (!esp66) {
            addr_1000711d_61:
            goto addr_1000711e_62;
        } else {
            __asm__("insd ");
            *(esp17 - 4) = eax13;
            __asm__("outsd ");
            __asm__("insb ");
            esp17 = reinterpret_cast<struct s460**>(ebx28->f121 * 0x65764500);
            zf63 = __undefined();
            below_or_equal64 = reinterpret_cast<uint1_t>(__intrinsic() | zf63);
            goto addr_100070be_54;
        }
    }
    addr_100070c3_56:
    __asm__("outsb ");
    if (zf63) {
        addr_10007112_40:
        ++ecx16;
        if (ecx16) {
            addr_1000718b_64:
            *ecx16 = reinterpret_cast<unsigned char>(*ecx16 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
            tmp8_68 = reinterpret_cast<unsigned char>(**reinterpret_cast<unsigned char**>(&edi49) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
            cf69 = tmp8_68 < **reinterpret_cast<unsigned char**>(&edi49);
            **reinterpret_cast<unsigned char**>(&edi49) = tmp8_68;
        } else {
            esp17 = esp17 - 4;
            *esp17 = reinterpret_cast<struct s460*>(0x69746e65);
            __asm__("arpl [ecx+0x74], sp");
            goto addr_1000711d_61;
        }
    } else {
        if (below_or_equal64) {
            addr_1000712e_30:
            edi49 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(edi49) - 1);
            __asm__("iretd ");
            *reinterpret_cast<struct s460**>(reinterpret_cast<unsigned char>(edx10) - 0x231f4cb9) = eax13;
            esp70 = esp17 - 4;
            *esp70 = reinterpret_cast<struct s460*>(0x1000713d);
            eax13 = fun_ca767606();
            esp17 = esp70 + 4;
            goto addr_1000713c_37;
        } else {
            __asm__("insb ");
            goto addr_100070ca_68;
        }
    }
    *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13) + 0x6c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13) + 0x6c) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13)) + 0xbf);
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)));
    ++ecx16;
    *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    eax13 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) * 0x610076);
    zf71 = __undefined();
    goto addr_100071b1_71;
    addr_10007054_57:
    if (!zf63) {
        addr_100070ca_68:
        tmp8_72 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        cf73 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_72) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)));
        *reinterpret_cast<void**>(&edx10->f0) = tmp8_72;
        --ecx16;
        __asm__("outsb ");
        if (cf73 | reinterpret_cast<uint1_t>(ecx16 == 0)) {
            addr_1000713f_38:
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx28) - 0x12ee9073) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx28) - 0x12ee9073) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)));
            ebx28 = *esp17;
            __asm__("iretd ");
            __asm__("aad 0x9a");
            df2 = 1;
            *reinterpret_cast<void**>(&edx10) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)) - 0xbf);
            goto addr_1000714d_72;
        } else {
            esp17 = reinterpret_cast<struct s460**>(ebp47->f0 * 2 - 4);
            *esp17 = edx10;
            if (!__intrinsic()) {
                addr_1000714d_72:
                ebp47 = reinterpret_cast<struct s467*>(reinterpret_cast<int32_t>(ebp47) - 1);
                esp17 = reinterpret_cast<struct s460**>(ebx28->f114 * 0x666f736f);
                cf32 = __intrinsic();
                if (__undefined()) {
                    addr_10007188_35:
                    __asm__("insd ");
                    goto addr_1000718b_64;
                } else {
                    esp74 = esp17 - 4;
                    *esp74 = ebx28;
                    edi49 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(edi49) - 1 + 1 - 1);
                    esp75 = esp74 - 4;
                    *esp75 = ebx28;
                    esp17 = esp75 - 4;
                    *esp17 = ebx28;
                    ebx28 = reinterpret_cast<struct s460*>(&ebx28->pad80);
                    zf71 = reinterpret_cast<uint1_t>(ebx28 == 0);
                    below_or_equal35 = reinterpret_cast<uint1_t>(cf32 | zf71);
                    if (cf32) {
                        addr_100071ca_75:
                        tmp8_76 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&g0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)));
                        *reinterpret_cast<unsigned char*>(&g0) = tmp8_76;
                        goto addr_100071ce_76;
                    } else {
                        esp17 = esp17 - 4;
                        *esp17 = eax13;
                        if (cf32) {
                            addr_100071d8_78:
                            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                            esi29 = reinterpret_cast<struct s462*>(reinterpret_cast<int32_t>(esi29) + 1);
                            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                            goto addr_100071de_79;
                        } else {
                            if (below_or_equal35) {
                                addr_100071b1_71:
                            } else {
                                addr_1000716b_25:
                                if (cf32) {
                                    addr_100071ce_76:
                                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                                    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                                    goto addr_100071d8_78;
                                } else {
                                    __asm__("insd ");
                                    if (!below_or_equal35) {
                                        addr_100071e0_82:
                                        edi49->f33821696 = reinterpret_cast<unsigned char>(edi49->f33821696 >> 1);
                                        __asm__("iretd ");
                                        tmp32_77 = reinterpret_cast<void*>(4 - 8 * df2);
                                        goto label_83;
                                    } else {
                                        if (cf32) {
                                            addr_100071de_79:
                                            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                                            goto addr_100071e0_82;
                                        } else {
                                            *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
                                            goto addr_10007175_32;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                __asm__("insb ");
                if (__undefined()) {
                    addr_1000711e_62:
                    ebp47 = reinterpret_cast<struct s467*>(edi49->f110 * 0x7475412e);
                    esp17 = esp17 - 4;
                    *esp17 = reinterpret_cast<struct s460*>(0x13004955);
                    goto addr_10007129_59;
                } else {
                    __asm__("outsd ");
                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax13) - 0xefffbf2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax13) - 0xefffbf2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
                    ebx28 = reinterpret_cast<struct s460*>(&ebx28->pad80);
                    edx10 = *esp17;
                    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx16) + 1) = reinterpret_cast<void*>(0xbf);
                    esp17 = esp17 + 4 - 4;
                    *esp17 = ebx28;
                    goto addr_100070ed_12;
                }
            }
        }
    } else {
        ebx28 = reinterpret_cast<struct s460*>(&ebx28->pad80);
        zf63 = reinterpret_cast<uint1_t>(ebx28 == 0);
        below_or_equal64 = reinterpret_cast<uint1_t>(cf32 | zf63);
        if (cf32) {
            addr_100070be_54:
            goto addr_100070c1_89;
        } else {
            __asm__("popad ");
            if (zf63) {
                addr_100070c1_89:
                goto addr_100070c3_56;
            } else {
                ++ecx16;
                of23 = __intrinsic();
                goto addr_1000705d_4;
            }
        }
    }
    eax13 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) * 0x6c0062);
    *reinterpret_cast<void**>(&ebx28->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx28->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    __asm__("insb ");
    tmp8_78 = reinterpret_cast<unsigned char>(*ecx16 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    cf79 = tmp8_78 < *ecx16;
    *ecx16 = tmp8_78;
    --ecx16;
    *reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13))) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    goto addr_100071ca_75;
    label_83:
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("retf ");
    tmp32_80 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp17) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp17) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    ebx81 = reinterpret_cast<struct s460*>(reinterpret_cast<unsigned char>(ebx28) + reinterpret_cast<uint16_t>(ecx16));
    tmp32_82 = reinterpret_cast<void*>(4 - 8 * df2);
    edi83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi49) + reinterpret_cast<uint32_t>(tmp32_77) + reinterpret_cast<uint32_t>(tmp32_80) + reinterpret_cast<uint32_t>(tmp32_82));
    esi84 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi29) + reinterpret_cast<uint32_t>(tmp32_77) + reinterpret_cast<uint32_t>(tmp32_80) + reinterpret_cast<uint32_t>(tmp32_82));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("sti ");
    __asm__("popad ");
    *reinterpret_cast<void**>(&edx10->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + 2);
    __asm__("cli ");
    __asm__("popad ");
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    tmp8_85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    cf86 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_85) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)));
    *reinterpret_cast<void**>(&eax13->f0) = tmp8_85;
    zf87 = *reinterpret_cast<void**>(&eax13->f0) == 0;
    esp88 = esp17 - 4;
    *esp88 = edx10;
    if (zf87) {
        __asm__("popad ");
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
        *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
        __asm__("into ");
        tmp32_89 = reinterpret_cast<void*>(4 - 8 * df2);
        edi83 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi83) + reinterpret_cast<uint32_t>(tmp32_89));
        esi84 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi84) + reinterpret_cast<uint32_t>(tmp32_89));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
        goto addr_1000728b_107;
    }
    esp90 = esp88 + 1;
    __asm__("insb ");
    __asm__("insb ");
    esp91 = esp90 - 4;
    *esp91 = ebx81;
    esp88 = esp91 - 4;
    *esp88 = reinterpret_cast<struct s460*>(0x6f647475);
    if (!reinterpret_cast<uint1_t>(cf86 | reinterpret_cast<uint1_t>(esp90 == 0))) {
        addr_1000728c_109:
        *reinterpret_cast<void**>(&ecx16) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)) + 0xbf);
        tmp32_92 = reinterpret_cast<void*>(4 - 8 * df2);
    } else {
        --ecx16;
        __asm__("outsb ");
        esp88 = esp88 - 4;
        *esp88 = eax13;
        if (cf86) {
            addr_10007292_111:
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
            *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
            __asm__("xlatb ");
            tmp32_93 = reinterpret_cast<void*>(4 - 8 * df2);
            goto label_112;
        } else {
            if (cf86) {
                addr_1000728b_107:
                goto addr_1000728c_109;
            } else {
                if (cf86) {
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    edi94 = *esp88;
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10 + 1)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    edi94->f33821696 = reinterpret_cast<unsigned char>(edi94->f33821696 >> reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
                    *reinterpret_cast<void**>(&edi94->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edi94->f0)) >> 1);
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
                    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
                    esp95 = reinterpret_cast<int16_t*>(esp88 + 4 - 2);
                    *esp95 = cs96;
                    goto *esp95;
                }
            }
        }
    }
    edi83 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi83) + reinterpret_cast<uint32_t>(tmp32_92));
    esi84 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi84) + reinterpret_cast<uint32_t>(tmp32_92));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    goto addr_10007292_111;
    label_112:
    edi83 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi83) + reinterpret_cast<uint32_t>(tmp32_93));
    esi84 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi84) + reinterpret_cast<uint32_t>(tmp32_93));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    tmp32_97 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("int 0xaf");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    ebp98 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp47) + reinterpret_cast<uint16_t>(ecx16));
    tmp32_99 = reinterpret_cast<void*>(4 - 8 * df2);
    edi100 = reinterpret_cast<struct s468*>(reinterpret_cast<uint32_t>(edi83) + reinterpret_cast<unsigned char>(edx10) + reinterpret_cast<uint32_t>(tmp32_97) + reinterpret_cast<uint32_t>(tmp32_99));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    edi100->f17044480 = edi100->f17044480 >> reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16));
    edi100->f0 = edi100->f0 >> reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("salc ");
    tmp32_101 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    dl102 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)) + 0xbf);
    tmp32_103 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("fldcw word [edi+0x1041400]");
    __asm__("fldcw word [edi+0x0]");
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("iretd ");
    tmp32_104 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(dl102));
    tmp32_105 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("fisubr dword [edi+0x2041400]");
    __asm__("fldcw word [edi+0x0]");
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("aam 0xaf");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(dl102));
    tmp32_106 = reinterpret_cast<void*>(4 - 8 * df2);
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("fld tword [edi+0x41400]");
    __asm__("fld tword [edi+0x0]");
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    tmp32_107 = reinterpret_cast<void*>(4 - 8 * df2);
    edi108 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edi100) + reinterpret_cast<uint32_t>(tmp32_101) + reinterpret_cast<uint32_t>(tmp32_103) + reinterpret_cast<uint32_t>(tmp32_104) + reinterpret_cast<uint16_t>(ecx16) + reinterpret_cast<uint32_t>(tmp32_105) + reinterpret_cast<uint32_t>(tmp32_106) + reinterpret_cast<uint32_t>(tmp32_107));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(dl102) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81))));
    *reinterpret_cast<void**>(&ecx16) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81)));
    tmp32_109 = reinterpret_cast<void*>(4 - 8 * df2);
    esi110 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi84) + reinterpret_cast<uint32_t>(tmp32_97) + reinterpret_cast<uint32_t>(tmp32_99) + reinterpret_cast<uint32_t>(tmp32_101) + reinterpret_cast<uint32_t>(tmp32_103) + reinterpret_cast<uint32_t>(tmp32_104) + reinterpret_cast<uint32_t>(tmp32_105) + reinterpret_cast<uint32_t>(tmp32_106) + reinterpret_cast<uint32_t>(tmp32_107) + reinterpret_cast<uint32_t>(tmp32_109));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    *reinterpret_cast<int16_t*>(&edx10) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax13) % -65);
    *reinterpret_cast<int16_t*>(&eax13) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax13) / -65);
    *esi110 = reinterpret_cast<unsigned char>(*esi110 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + 2);
    __asm__("out dx, al");
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&edx10->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *esi110 = reinterpret_cast<unsigned char>(*esi110 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + 2);
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&edx10->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    __asm__("aad 0xaf");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp88) + reinterpret_cast<unsigned char>(eax13)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    __asm__("fsubr dword [edi+0x2041400]");
    __asm__("xlatb ");
    edi111 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi108) + reinterpret_cast<uint32_t>(tmp32_109) - 4 - 4);
    esi112 = esi110 - 4 - 4;
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    *esi112 = reinterpret_cast<unsigned char>(*esi112 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10)));
    *reinterpret_cast<void**>(&eax13) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)) + 1);
    __asm__("out dx, al");
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    tmp8_113 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    cf114 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_113) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)));
    *reinterpret_cast<void**>(&edx10->f0) = tmp8_113;
    *reinterpret_cast<void**>(&ebx81) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esp88[reinterpret_cast<unsigned char>(edx10) * 4]) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esp88[reinterpret_cast<unsigned char>(edx10) * 4]) + cf114))));
    __asm__("fstp dword [esi]");
    __asm__("rcr byte [eax-0x6a], 1");
    *edi111 = *esi112;
    edi115 = edi111 - 4;
    esi116 = reinterpret_cast<struct s469*>(esi112 - 4);
    ebp117 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp98) + reinterpret_cast<unsigned char>(edx10) + 1);
    esi116->f0 = reinterpret_cast<unsigned char>(esi116->f0 + 0xbf);
    __asm__("popad ");
    *reinterpret_cast<void**>(&edx10->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    __asm__("insb ");
    *ebp117 = reinterpret_cast<signed char>(*ebp117 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    *reinterpret_cast<void**>(&eax13->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13)));
    esp118 = esp88 - 4;
    *esp118 = edx10;
    *ebp117 = reinterpret_cast<signed char>(*ebp117 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    __asm__("insd ");
    *edi115 = reinterpret_cast<unsigned char>(*edi115 + 0xbf);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13) + 0x6f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax13) + reinterpret_cast<unsigned char>(eax13) + 0x6f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx16)));
    *reinterpret_cast<void**>(&ebx81->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax13 + 1)));
    eax119 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax13->f0)) * 83);
    tmp8_120 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax119) + 1)));
    cf121 = reinterpret_cast<unsigned char>(tmp8_120) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx81->f0));
    *reinterpret_cast<void**>(&ebx81->f0) = tmp8_120;
    *ebp117 = reinterpret_cast<signed char>(*ebp117 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax119) + 1)));
    __asm__("outsb ");
    *eax119 = reinterpret_cast<signed char>(*eax119 + *reinterpret_cast<signed char*>(&eax119));
    *eax119 = reinterpret_cast<signed char>(*eax119 + *reinterpret_cast<signed char*>(&eax119));
    *eax119 = reinterpret_cast<signed char>(*eax119 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax119) + 1)));
    esp122 = esp118 - 4;
    *esp122 = reinterpret_cast<struct s460*>(0xef);
    esp123 = esp122 - 4;
    *esp123 = reinterpret_cast<struct s460*>(0x100073d6);
    fun_4e5ab8c7();
    esp124 = esp123 + 4;
    eflags125 = *esp124;
    esi116->f118 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi116->f118 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx10))) + *reinterpret_cast<uint1_t*>(&eflags125));
    *reinterpret_cast<int16_t*>(esp124 + 4 - 2) = es126;
}

void fun_10007870() {
}

void fun_e08de(signed char cl);

struct s470 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s471 {
    signed char[1672713551] pad1672713551;
    unsigned char f1672713551;
};

struct s472 {
    unsigned char* f0;
    unsigned char f4;
};

struct s473 {
    unsigned char f0;
    unsigned char f1;
    signed char[108] pad110;
    unsigned char f110;
    signed char[1578718362] pad1578718473;
    void* f1578718473;
};

struct s474 {
    unsigned char f0;
    signed char[86] pad87;
    unsigned char f87;
    signed char[126949080] pad126949168;
    uint32_t f126949168;
};

struct s475 {
    signed char f0;
    signed char[104] pad105;
    unsigned char f105;
};

struct s476 {
    signed char[110] pad110;
    unsigned char f110;
    signed char[5] pad116;
    unsigned char f116;
};

unsigned char g3ea3bc58;

uint32_t ga3bc1035;

unsigned char g73d2de3f;

uint16_t g3b96d3df;

unsigned char* g3cfae53;

struct s477 {
    signed char[63] pad63;
    uint32_t f63;
};

unsigned char g73006800;

void fun_100078a9(int32_t ecx, int32_t a2, void* a3, int16_t a4) {
    uint56_t v4;
    int32_t ebp5;
    int32_t ebp6;
    uint1_t cf7;
    int32_t ecx8;
    uint64_t v9;
    unsigned char* edi10;
    struct s470* edi11;
    unsigned char* eax12;
    struct s471* eax13;
    unsigned char* esi14;
    void* esi15;
    signed char bl16;
    uint32_t eax17;
    struct s472* edi18;
    struct s473* edi19;
    void* esi20;
    uint16_t edx21;
    uint1_t cf22;
    struct s474* esi23;
    int16_t* esp24;
    struct s475* ebx25;
    struct s476* ecx26;
    int1_t zf27;
    int32_t ecx28;
    unsigned char tmp8_29;
    unsigned char tmp8_30;
    struct s475** eax31;
    uint1_t cf32;
    int1_t sf33;
    uint1_t cf34;
    uint16_t cs35;
    unsigned char edx36;
    struct s477* ecx37;
    unsigned char tmp8_38;
    struct s475* tmp32_39;
    unsigned char* tmp32_40;

    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v4) + 4) = a4;
    __asm__("in eax, 0x6f");
    *reinterpret_cast<unsigned char*>(ebp5 - 0x70) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp6 - 0x70) - 73) + cf7);
    __asm__("aam 0xe0");
    ecx8 = ecx - 1;
    if (ecx8) {
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v9) + 4) = 0x86fdd6dd;
        *reinterpret_cast<int32_t*>(&v9) = 0x1000784f;
        fun_e08de(-47);
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v9) + 3);
    }
    edi10 = &edi11->f4;
    eax12 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax13) + 0x63b3954f);
    __asm__("xlatb ");
    *edi10 = *reinterpret_cast<unsigned char*>(&eax12);
    esi14 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi15) + 4 + 1);
    *esi14 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*esi14 + bl16) + reinterpret_cast<uint1_t>(eax17 < 0x9c4c6ab1));
    edi18 = reinterpret_cast<struct s472*>(reinterpret_cast<int32_t>(edi10 + 1) - *reinterpret_cast<int32_t*>(ecx8 + 0x56ef1fc3));
    edi19 = reinterpret_cast<struct s473*>(&edi18->f4);
    esi20 = reinterpret_cast<void*>(esi14 + 4);
    __asm__("lodsb ");
    edx21 = reinterpret_cast<uint16_t>(0x7843a561);
    cf22 = reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esi20) < reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi19) + 0x5e195509)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edi18->f0) < reinterpret_cast<uint32_t>(eax12)));
    esi23 = reinterpret_cast<struct s474*>(reinterpret_cast<uint32_t>(esi20) - (reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi19) + 0x5e195509)) + cf22) - 1);
    __asm__("out dx, al");
    __asm__("aaa ");
    esp24 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 4 + 4 + 4);
    *reinterpret_cast<signed char*>(&ebx25) = 0x67;
    __asm__("lodsd ");
    ecx26 = reinterpret_cast<struct s476*>(reinterpret_cast<int32_t>(a3) - 1);
    zf27 = ecx26 == 0;
    __asm__("outsb ");
    __asm__("arpl [edi+0x6e], bp");
    if (cf22) 
        goto addr_100078e7_14;
    addr_10007950_15:
    *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
    esi23 = reinterpret_cast<struct s474*>(&esi23->pad87);
    ecx28 = reinterpret_cast<int32_t>(ecx26) - 1;
    if (reinterpret_cast<uint1_t>(!!ecx28) & reinterpret_cast<uint1_t>(!!esi23)) {
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax12)));
        *reinterpret_cast<unsigned char*>(edi19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi19) + *reinterpret_cast<unsigned char*>(&eax12));
        *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp24) + ecx28) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp24) + ecx28) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx21) + 1));
        *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + *eax12);
        *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
        eax12 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) ^ 0x600000c);
        *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
        esi23->f0 = reinterpret_cast<unsigned char>(esi23->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx21) + 1));
        *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax12)));
        tmp8_29 = reinterpret_cast<unsigned char>(g3ea3bc58 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx21) + 1));
        g3ea3bc58 = tmp8_29;
        ga3bc1035 = ga3bc1035 | 33;
        *reinterpret_cast<uint32_t*>(ecx28 + 0x3ce8b50f) = *reinterpret_cast<uint32_t*>(ecx28 + 0x3ce8b50f) + reinterpret_cast<uint32_t>(eax12);
    } else {
        __asm__("retf ");
        goto addr_10007957_19;
    }
    __asm__("fprem ");
    *reinterpret_cast<unsigned char*>(&eax12) = g73d2de3f;
    *reinterpret_cast<signed char*>(eax12 - 70) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax12 - 70) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx25) + 1));
    __asm__("fsub dword [esi-0x13]");
    __asm__("fnsave [ebx+ebx*4+0x49]");
    addr_100078e7_14:
    if (!cf22) {
        addr_1000795d_21:
        goto addr_10007961_22;
    } else {
        __asm__("outsb ");
        if (zf27) {
            addr_1000790d_24:
            *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx26) - 44) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx26) - 44) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1));
            *reinterpret_cast<unsigned char*>(&eax12) = 0x78;
            ecx26 = reinterpret_cast<struct s476*>(0xf6d8b7d7);
            tmp8_30 = esi23->f87;
            esi23->f87 = 0x78;
            *reinterpret_cast<unsigned char*>(&edx21) = tmp8_30;
            __asm__("iretd ");
            __asm__("out 0xf2, al");
            --esp24;
            eax31 = reinterpret_cast<struct s475**>(eax12 - 1);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi19) - 0x6b) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi19) - 0x6b) - *reinterpret_cast<signed char*>(&eax31));
            edx21 = reinterpret_cast<uint16_t>(edx21 - 1);
            __asm__("out dx, eax");
            esi23->f126949168 = esi23->f126949168 & 0xffffff81;
            cf32 = reinterpret_cast<uint1_t>(g3b96d3df < edx21);
            sf33 = reinterpret_cast<int16_t>(g3b96d3df) < reinterpret_cast<int16_t>(edx21);
            ebx25 = *eax31;
            if (!sf33) {
                eax12 = g3cfae53;
                *reinterpret_cast<unsigned char*>(a2 + 0x63b34ee3) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(a2 + 0x63b34ee3) + 46) + cf32);
                goto addr_1000797b_26;
            } else {
                *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax31) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax31) + 1) - ebx25->f0);
                cf34 = reinterpret_cast<uint1_t>(esi23->f0 < *reinterpret_cast<unsigned char*>(edi19));
                *reinterpret_cast<unsigned char*>(edi19) = esi23->f0;
                edi19 = reinterpret_cast<struct s473*>(reinterpret_cast<int32_t>(edi19) + 4);
                esi23 = reinterpret_cast<struct s474*>(reinterpret_cast<uint32_t>(esi23) + 4);
                eax12 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax31) - (55 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax31) < 55 + cf34)));
                *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
                *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
                __asm__("rol byte [eax], 0x0");
                goto addr_1000794e_31;
            }
        } else {
            if (!cf22) {
                addr_10007963_33:
                __asm__("in al, dx");
            } else {
                __asm__("popad ");
                if (zf27) {
                    addr_10007957_19:
                    __asm__("insb ");
                    goto addr_1000795d_21;
                } else {
                    ecx26->f116 = 0;
                    __asm__("popad ");
                    ebx25->f105 = 0;
                    if (__intrinsic()) {
                        addr_10007961_22:
                        __asm__("xlatb ");
                        goto addr_10007963_33;
                    } else {
                        ecx26->f110 = 0;
                        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi19) + 0x6e) = 0;
                        *reinterpret_cast<int16_t*>(&edi19) = *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v4) + 4);
                        ++esp24;
                        if (1) {
                            addr_1000797b_26:
                            __asm__("into ");
                            esp24 = esp24 - 2;
                            *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1) = 0xaf;
                            goto addr_10007982_37;
                        } else {
                            if (0) {
                                addr_10007982_37:
                                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v4) + 2) = 0xd1;
                                __asm__("cli ");
                                *reinterpret_cast<uint16_t*>(&v4) = cs35;
                                edx36 = reinterpret_cast<unsigned char>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx25) - 96) * -42);
                                ecx37 = reinterpret_cast<struct s477*>(reinterpret_cast<int32_t>(ecx26) + 1);
                            } else {
                                *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
                                tmp8_38 = reinterpret_cast<unsigned char>(g73006800 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax12) + 1));
                                g73006800 = tmp8_38;
                                goto addr_1000790d_24;
                            }
                        }
                    }
                }
            }
        }
    }
    *reinterpret_cast<unsigned char*>(edi19) = esi23->f0;
    esi23 = reinterpret_cast<struct s474*>(&esi23->pad87);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi23) + reinterpret_cast<uint32_t>(eax12) * 2) = edx36;
    __asm__("aam 0xf7");
    ecx37->f63 = ecx37->f63 | reinterpret_cast<uint32_t>(eax12);
    __asm__("lodsb ");
    __asm__("out dx, al");
    tmp32_39 = *reinterpret_cast<struct s475**>(reinterpret_cast<int32_t>(ecx37) - 0x4e7369da);
    *reinterpret_cast<struct s475**>(reinterpret_cast<int32_t>(ecx37) - 0x4e7369da) = ebx25;
    ebx25 = tmp32_39;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx37) + 1) = -84;
    ecx26 = reinterpret_cast<struct s476*>(reinterpret_cast<int32_t>(ecx37) - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esi23) - 0x2db638ab) = -40;
    edx21 = *reinterpret_cast<uint16_t*>(&v4);
    esp24 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp24 - 2 - 1 + 2) + 1);
    tmp32_40 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi19) + 1);
    edi19 = reinterpret_cast<struct s473*>(0x4fb88ac7);
    eax12 = tmp32_40;
    if (0) {
        addr_1000794e_31:
        *eax12 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<unsigned char*>(&eax12));
        goto addr_10007950_15;
    } else {
        if (!(reinterpret_cast<int32_t>(ecx26) - 1)) {
        }
    }
}

void fun_10007965(signed char cl) {
    int1_t cf2;
    int1_t of3;
    int32_t* eax4;
    int32_t* eax5;
    int32_t eax6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* ebx10;
    signed char* ebx11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* ebx16;
    signed char* ebx17;
    signed char dh18;
    int32_t* edi19;
    int32_t eax20;

    if (cf2) 
        goto 0x100079af;
    if (of3) {
        *eax4 = *eax5 + eax6;
        *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
        *ebx10 = reinterpret_cast<signed char>(*ebx11 + al12);
        *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
        *ebx16 = reinterpret_cast<signed char>(*ebx17 + dh18);
    } else {
        *edi19 = eax20;
        __asm__("outsb ");
    }
}

void fun_100079bd() {
    int1_t pf1;

    if (!pf1) 
        goto 0x100079ee;
}

struct s478 {
    unsigned char f0;
    signed char[3] pad4;
    struct s478* f4;
    signed char[91] pad99;
    int32_t f99;
};

struct s479 {
    signed char[1] pad1;
    unsigned char f1;
};

uint64_t gd5c90d9a;

struct s480 {
    signed char[4] pad4;
    void* f4;
};

struct s481 {
    int32_t f0;
    struct s478* f1;
};

struct s482 {
    unsigned char f0;
    signed char[109] pad110;
    unsigned char f110;
};

unsigned char g6400;

struct s483 {
    struct s483* f0;
    signed char[73] pad74;
    int32_t f74;
};

struct s484 {
    signed char[99] pad99;
    int32_t f99;
};

struct s485 {
    unsigned char f0;
    signed char[3] pad4;
    void* f4;
    signed char[108] pad116;
    int32_t f116;
};

struct s486 {
    unsigned char f0;
    signed char f1;
};

struct s487 {
    unsigned char f0;
    signed char f1;
};

struct s488 {
    void* f0;
    int32_t f1;
};

struct s489 {
    signed char f0;
    signed char f1;
};

struct s490 {
    signed char f0;
    signed char f1;
};

struct s491 {
    signed char f0;
    unsigned char f1;
};

struct s492 {
    unsigned char f0;
    int32_t f1;
};

struct s493 {
    struct s492* f0;
    int32_t f4;
};

struct s494 {
    struct s492* f0;
    int32_t f1;
};

struct s495 {
    unsigned char f0;
    signed char[3] pad4;
    void* f4;
};

struct s496 {
    int32_t f0;
    unsigned char f4;
};

struct s497 {
    int32_t f0;
    unsigned char f1;
    unsigned char f4;
};

struct s498 {
    unsigned char f0;
    signed char f1;
};

struct s499 {
    unsigned char f0;
    signed char[2045798677] pad2045798678;
    signed char f2045798678;
};

struct s500 {
    signed char f0;
    void* f1;
};

signed char g65003800;

unsigned char g2d006600;

unsigned char g32003200;

void fun_10007a15(unsigned char* ecx) {
    int1_t below_or_equal2;
    struct s478* ebx3;
    struct s479* ebx4;
    signed char dl5;
    signed char* ebp6;
    signed char* ebp7;
    signed char ah8;
    signed char* edi9;
    signed char* edi10;
    signed char* eax11;
    signed char* eax12;
    int1_t zf13;
    signed char* eax14;
    unsigned char tmp8_15;
    signed char* edi16;
    uint1_t cf17;
    unsigned char* edi18;
    unsigned char* edi19;
    signed char* edi20;
    unsigned char tmp8_21;
    signed char dl22;
    int1_t cf23;
    signed char* ebp24;
    signed char* ebp25;
    signed char ah26;
    signed char* eax27;
    signed char* eax28;
    signed char al29;
    signed char* eax30;
    signed char* eax31;
    signed char al32;
    signed char* eax33;
    signed char* eax34;
    signed char al35;
    signed char* eax36;
    signed char* eax37;
    signed char al38;
    signed char dl39;
    unsigned char tmp8_40;
    signed char* esi41;
    signed char ah42;
    uint1_t cf43;
    unsigned char* esi44;
    unsigned char* esi45;
    uint1_t zf46;
    signed char* esi47;
    signed char* edx48;
    signed char* edx49;
    signed char dh50;
    int32_t eax51;
    int32_t eax52;
    int32_t eax53;
    int32_t eax54;
    unsigned char tmp8_55;
    int1_t cf56;
    signed char dh57;
    signed char* esi58;
    signed char* esi59;
    signed char ah60;
    signed char* esi61;
    struct s480* esp62;
    signed char* edi63;
    signed char* edi64;
    signed char dl65;
    int32_t* eax66;
    int32_t* eax67;
    unsigned char tmp8_68;
    signed char* edi69;
    signed char dh70;
    int1_t cf71;
    unsigned char* edi72;
    unsigned char* edi73;
    void* esp74;
    unsigned char tmp8_75;
    int1_t cf76;
    signed char* esi77;
    signed char* esi78;
    signed char* esi79;
    void** esp80;
    void* esi81;
    unsigned char tmp8_82;
    signed char* ebp83;
    int1_t cf84;
    unsigned char* ebp85;
    unsigned char* ebp86;
    int32_t* eax87;
    void* esp88;
    int1_t zf89;
    struct s481* esp90;
    signed char dh91;
    signed char dh92;
    signed char* edi93;
    signed char* edi94;
    signed char* edi95;
    signed char* edi96;
    signed char* ebp97;
    signed char* ebp98;
    signed char dl99;
    struct s482* ecx100;
    unsigned char tmp8_101;
    signed char* ebp102;
    int1_t cf103;
    unsigned char* ebp104;
    unsigned char* ebp105;
    unsigned char* eax106;
    struct s478** esp107;
    unsigned char tmp8_108;
    unsigned char tmp8_109;
    signed char* ebp110;
    signed char dh111;
    int1_t cf112;
    unsigned char* ebp113;
    unsigned char* ebp114;
    signed char* edx115;
    signed char* edx116;
    signed char dh117;
    unsigned char* eax118;
    unsigned char tmp8_119;
    int1_t cf120;
    int1_t zf121;
    unsigned char tmp8_122;
    int1_t cf123;
    unsigned char tmp8_124;
    int1_t cf125;
    struct s478** esp126;
    struct s483* ebp127;
    struct s484* esi128;
    struct s485* esi129;
    int1_t cf130;
    int1_t zf131;
    struct s485** esp132;
    struct s483* tmp8_133;
    int1_t cf134;
    signed char dh135;
    struct s478** esp136;
    signed char* edi137;
    signed char* edi138;
    signed char dl139;
    unsigned char tmp8_140;
    signed char* edi141;
    signed char dh142;
    int1_t cf143;
    unsigned char* edi144;
    unsigned char* edi145;
    unsigned char tmp8_146;
    struct s485** esp147;
    struct s483* tmp8_148;
    int1_t cf149;
    void** eax150;
    void** esp151;
    unsigned char tmp8_152;
    signed char* edi153;
    int1_t cf154;
    unsigned char* edi155;
    unsigned char* edi156;
    signed char* edx157;
    signed char* edx158;
    signed char dh159;
    void* esp160;
    signed char dl161;
    int32_t* esp162;
    signed char* edi163;
    signed char* edi164;
    signed char dh165;
    signed char dl166;
    void** esp167;
    unsigned char* edi168;
    signed char* edi169;
    struct s478** esp170;
    int1_t zf171;
    unsigned char tmp8_172;
    signed char* edi173;
    uint1_t cf174;
    unsigned char* edi175;
    unsigned char* edi176;
    signed char* edi177;
    void* tmp8_178;
    void* dl179;
    int1_t cf180;
    signed char* eax181;
    unsigned char* edi182;
    void* edi183;
    signed char dh184;
    signed char* edx185;
    signed char* edx186;
    signed char dh187;
    struct s478** esp188;
    signed char dl189;
    signed char dl190;
    int32_t* esp191;
    signed char dh192;
    signed char dl193;
    signed char dl194;
    unsigned char* eax195;
    signed char* edx196;
    signed char* edx197;
    signed char dh198;
    unsigned char tmp8_199;
    uint1_t cf200;
    signed char* edx201;
    signed char* edx202;
    signed char dh203;
    signed char* edx204;
    signed char* eax205;
    unsigned char tmp8_206;
    signed char dh207;
    int1_t cf208;
    unsigned char* edx209;
    signed char* edx210;
    signed char* edx211;
    signed char* edx212;
    signed char dh213;
    struct s478** esp214;
    signed char dl215;
    signed char dl216;
    int32_t* esp217;
    signed char dh218;
    signed char dl219;
    signed char dl220;
    signed char* edx221;
    signed char* edx222;
    signed char dh223;
    struct s478** esp224;
    signed char dl225;
    signed char dl226;
    int32_t* esp227;
    signed char dh228;
    unsigned char tmp8_229;
    signed char dh230;
    int1_t cf231;
    signed char dl232;
    int1_t zf233;
    unsigned char tmp8_234;
    int1_t cf235;
    unsigned char* edx236;
    signed char* edx237;
    struct s486* ecx238;
    void** esp239;
    struct s483* tmp8_240;
    int1_t cf241;
    struct s478** esp242;
    signed char dl243;
    signed char dl244;
    int32_t* esp245;
    signed char dh246;
    unsigned char tmp8_247;
    signed char dh248;
    int1_t cf249;
    signed char dl250;
    struct s478** esp251;
    signed char dl252;
    signed char dl253;
    int32_t* esp254;
    signed char dh255;
    unsigned char tmp8_256;
    int1_t cf257;
    signed char dh258;
    signed char* eax259;
    signed char dh260;
    unsigned char tmp8_261;
    int1_t cf262;
    unsigned char tmp8_263;
    int1_t cf264;
    unsigned char* edx265;
    signed char* edx266;
    struct s487* ebx267;
    signed char dl268;
    unsigned char tmp8_269;
    uint1_t cf270;
    uint1_t zf271;
    signed char* edx272;
    signed char* edx273;
    signed char dh274;
    unsigned char tmp8_275;
    int1_t cf276;
    signed char dh277;
    void* esp278;
    signed char dl279;
    unsigned char* eax280;
    unsigned char tmp8_281;
    signed char dh282;
    int1_t cf283;
    unsigned char* esi284;
    signed char dl285;
    unsigned char tmp8_286;
    int1_t cf287;
    unsigned char** esp288;
    struct s483* tmp8_289;
    int1_t cf290;
    int32_t* eax291;
    void* esp292;
    signed char dl293;
    signed char* eax294;
    unsigned char tmp8_295;
    int1_t cf296;
    unsigned char* edx297;
    signed char* edx298;
    struct s487** esp299;
    int32_t* esp300;
    int32_t edx301;
    struct s483* tmp8_302;
    uint1_t cf303;
    signed char* eax304;
    int32_t* eax305;
    signed char* edx306;
    signed char* edx307;
    signed char* eax308;
    signed char* edx309;
    signed char* edx310;
    signed char dh311;
    void* dh312;
    signed char dl313;
    int32_t* esp314;
    signed char dh315;
    int32_t* esp316;
    signed char dh317;
    int32_t* esp318;
    int32_t edx319;
    signed char dh320;
    void** esp321;
    unsigned char* edi322;
    signed char dh323;
    signed char* eax324;
    void** esp325;
    int32_t* esp326;
    struct s488* edi327;
    signed char dh328;
    void** eax329;
    struct s489* ebx330;
    unsigned char* edx331;
    signed char* edx332;
    signed char* edx333;
    signed char* edx334;
    struct s489** esp335;
    int1_t zf336;
    void* tmp8_337;
    uint1_t cf338;
    signed char* edx339;
    signed char* edx340;
    signed char dl341;
    unsigned char tmp8_342;
    int1_t cf343;
    int32_t* esp344;
    int32_t edx345;
    signed char dh346;
    struct s490* ebx347;
    signed char dh348;
    unsigned char tmp8_349;
    int1_t cf350;
    signed char* eax351;
    void** esp352;
    struct s491* ebx353;
    int32_t* eax354;
    signed char dh355;
    signed char* eax356;
    signed char dl357;
    int32_t* esp358;
    void* dh359;
    unsigned char tmp8_360;
    int1_t cf361;
    signed char* eax362;
    void** eax363;
    struct s492* ebx364;
    unsigned char dh365;
    struct s493* esp366;
    int1_t zf367;
    void* tmp8_368;
    uint1_t cf369;
    void* dl370;
    signed char* edx371;
    signed char* edx372;
    signed char dh373;
    void* tmp8_374;
    uint1_t cf375;
    struct s492* esi376;
    int32_t* esp377;
    void** tmp32_378;
    struct s483* esp379;
    struct s494* esp380;
    int1_t zf381;
    void* tmp8_382;
    uint1_t cf383;
    unsigned char* edx384;
    struct s495* edi385;
    int1_t below_or_equal386;
    struct s496* edi387;
    struct s497* esi388;
    int1_t sf389;
    struct s498* edi390;
    struct s499* esi391;
    signed char tmp8_392;
    struct s500* edi393;
    uint32_t eax394;
    unsigned char tmp8_395;
    signed char* ecx396;
    signed char tmp8_397;
    unsigned char tmp8_398;
    uint32_t* eax399;
    unsigned char* eax400;
    unsigned char tmp8_401;
    signed char* eax402;
    signed char* ecx403;
    int32_t edx404;
    struct s483* tmp8_405;
    int1_t cf406;
    unsigned char* edi407;
    signed char* edi408;
    signed char* edi409;
    unsigned char* edi410;
    signed char* edi411;
    signed char dl412;
    struct s483** esp413;
    signed char dh414;
    unsigned char* edi415;
    signed char* edi416;
    signed char dh417;

    if (!below_or_equal2) 
        goto 0x100079cb;
    ebx3 = reinterpret_cast<struct s478*>(&ebx4->f1);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl5);
    __asm__("insb ");
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *ebp6 = reinterpret_cast<signed char>(*ebp7 + ah8);
    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(&gd5c90d9a) + 4) = reinterpret_cast<void**>(0xd5c90d9e);
    *edi9 = reinterpret_cast<signed char>(*edi10 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<struct s478**>(&gd5c90d9a) = ebx3;
    *eax11 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    zf13 = *eax14 == 0;
    tmp8_15 = reinterpret_cast<unsigned char>(*edi16 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf17 = reinterpret_cast<uint1_t>(tmp8_15 < *edi18);
    *edi19 = tmp8_15;
    __asm__("outsb ");
    tmp8_21 = reinterpret_cast<unsigned char>(ebx3->f0 + dl22);
    cf23 = tmp8_21 < ebx3->f0;
    ebx3->f0 = tmp8_21;
    __asm__("arpl [eax], ax");
    *ebp24 = reinterpret_cast<signed char>(*ebp25 + ah26);
    __asm__("outsb ");
    *eax27 = reinterpret_cast<signed char>(*eax28 + al29);
    *eax30 = reinterpret_cast<signed char>(*eax31 + al32);
    *eax33 = reinterpret_cast<signed char>(*eax34 + al35);
    *eax36 = reinterpret_cast<signed char>(*eax37 + al38);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl39);
    __asm__("outsd ");
    tmp8_40 = reinterpret_cast<unsigned char>(*esi41 + ah42);
    cf43 = reinterpret_cast<uint1_t>(tmp8_40 < *esi44);
    *esi45 = tmp8_40;
    zf46 = reinterpret_cast<uint1_t>(*esi47 == 0);
    __asm__("popad ");
    *edx48 = reinterpret_cast<signed char>(*edx49 + dh50);
    *reinterpret_cast<signed char*>(eax51 + eax52 + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax53 + eax54 + 77) + *reinterpret_cast<signed char*>(&ebx3));
    tmp8_55 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf56 = tmp8_55 < *ecx;
    *ecx = tmp8_55;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dh57);
    __asm__("outsd ");
    *esi58 = reinterpret_cast<signed char>(*esi59 + ah60);
    esp62 = *reinterpret_cast<struct s480**>(reinterpret_cast<int32_t>(&gd5c90d9a) + 1);
    *edi63 = reinterpret_cast<signed char>(*edi64 + dl65);
    eax66 = reinterpret_cast<int32_t*>(*eax67 * 0x64006e);
    __asm__("outsd ");
    tmp8_68 = reinterpret_cast<unsigned char>(*edi69 + dh70);
    cf71 = tmp8_68 < *edi72;
    *edi73 = tmp8_68;
    esp74 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp62->f4) + 4);
    tmp8_75 = reinterpret_cast<unsigned char>(ebx3->f0 + *reinterpret_cast<signed char*>(&eax66));
    cf76 = tmp8_75 < ebx3->f0;
    ebx3->f0 = tmp8_75;
    *esi77 = reinterpret_cast<signed char>(*esi78 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    esp80 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp74) - 4);
    *esp80 = esi81;
    tmp8_82 = reinterpret_cast<unsigned char>(*ebp83 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax66) + 1));
    cf84 = tmp8_82 < *ebp85;
    *ebp86 = tmp8_82;
    eax87 = reinterpret_cast<int32_t*>(*eax66 * 0x6e006f);
    esp88 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp80) + 4);
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&eax87));
    zf89 = *ecx == 0;
    esp90 = reinterpret_cast<struct s481*>(reinterpret_cast<int32_t>(esp88) - 4);
    esp90->f0 = 0x6e006500;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 0x69) + dh91);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax87) + 1));
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 0x69) + dh92);
    *edi93 = reinterpret_cast<signed char>(*edi94 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 76) + *reinterpret_cast<signed char*>(&ebx3));
    *edi95 = reinterpret_cast<signed char>(*edi96 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    **reinterpret_cast<unsigned char**>(&ebx3) = reinterpret_cast<unsigned char>(**reinterpret_cast<unsigned char**>(&ebx3) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("outsb ");
    *ebp97 = reinterpret_cast<signed char>(*ebp98 + dl99);
    ecx100 = reinterpret_cast<struct s482*>(ecx - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 83) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax87) + reinterpret_cast<int32_t>(eax87) + 83) + *reinterpret_cast<signed char*>(&ebx3));
    tmp8_101 = reinterpret_cast<unsigned char>(*ebp102 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax87) + 1));
    cf103 = tmp8_101 < *ebp104;
    *ebp105 = tmp8_101;
    eax106 = reinterpret_cast<unsigned char*>(*eax87 * 0x6e006f);
    esp107 = reinterpret_cast<struct s478**>(reinterpret_cast<int32_t>(esp90) + 1);
    ecx100->f0 = reinterpret_cast<unsigned char>(ecx100->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax106) + 1));
    __asm__("popad ");
    *eax106 = reinterpret_cast<unsigned char>(*eax106 + *reinterpret_cast<signed char*>(&eax106));
    *eax106 = reinterpret_cast<unsigned char>(*eax106 + *reinterpret_cast<signed char*>(&eax106));
    tmp8_108 = reinterpret_cast<unsigned char>(g6400 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax106) + 1));
    g6400 = tmp8_108;
    *eax106 = reinterpret_cast<unsigned char>(*eax106 + *reinterpret_cast<signed char*>(&eax106));
    tmp8_109 = reinterpret_cast<unsigned char>(*ebp110 + dh111);
    cf112 = tmp8_109 < *ebp113;
    *ebp114 = tmp8_109;
    *edx115 = reinterpret_cast<signed char>(*edx116 + dh117);
    eax118 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax106) ^ *eax106);
    *reinterpret_cast<unsigned char*>(&eax118) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax118) ^ *eax118);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    tmp8_119 = reinterpret_cast<unsigned char>(ecx100->f110 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    cf120 = tmp8_119 < ecx100->f110;
    ecx100->f110 = tmp8_119;
    zf121 = ecx100->f110 == 0;
    if (zf121) {
        addr_10007b75_24:
        tmp8_122 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
        cf123 = tmp8_122 < ecx100->f0;
        ecx100->f0 = tmp8_122;
    } else {
        if (cf120) {
            addr_10007b80_26:
            tmp8_124 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
            cf125 = tmp8_124 < ecx100->f0;
            ecx100->f0 = tmp8_124;
            __asm__("arpl [eax], ax");
            if (cf125) 
                goto addr_10007b8a_27; else 
                goto addr_10007b8a_27;
        } else {
            __asm__("popad ");
            __asm__("insb ");
            esp107 = &(*esp107)->f4;
            __asm__("outsd ");
            __asm__("outsb ");
            __asm__("arpl [gs:edi+0x72], bp");
            if (!zf121) {
                addr_10007b7f_29:
                goto addr_10007b80_26;
            } else {
                if (__intrinsic()) {
                    goto addr_10007b94_32;
                } else {
                    esp126 = esp107 - 1;
                    *esp126 = reinterpret_cast<struct s478*>(0x5c6c6c65);
                    ebp127 = reinterpret_cast<struct s483*>(esi128->f99 * 0x636f6c5c);
                    esi129 = reinterpret_cast<struct s485*>(ebx3->f99 * 0x72);
                    cf130 = __intrinsic();
                    zf131 = __undefined();
                    __asm__("outsb ");
                    __asm__("popad ");
                    if (__intrinsic()) {
                        addr_10007ba6_34:
                        if (!zf131) 
                            goto addr_10007baa_35; else 
                            goto addr_10007baa_35;
                    } else {
                        ebp127 = reinterpret_cast<struct s483*>(esi129->f116 * 0x706f7265);
                        esp132 = reinterpret_cast<struct s485**>(esp126 - 1);
                        *esp132 = reinterpret_cast<struct s485*>(0x73005500);
                        tmp8_133 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
                        cf134 = reinterpret_cast<unsigned char>(tmp8_133) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0));
                        *reinterpret_cast<struct s483**>(&ebp127->f0) = tmp8_133;
                        if (cf134) 
                            goto addr_10007b48_37; else 
                            goto addr_10007b48_37;
                    }
                }
            }
        }
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118) + 77) + *reinterpret_cast<signed char*>(&ebx3));
    goto addr_10007b7f_29;
    addr_10007b8a_27:
    __asm__("outsd ");
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dh135);
    __asm__("outsd ");
    esi129->f0 = reinterpret_cast<unsigned char>(esi129->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    addr_10007b94_32:
    esp136 = &(*esp107)->f4;
    *edi137 = reinterpret_cast<signed char>(*edi138 + dl139);
    eax118 = reinterpret_cast<unsigned char*>(*eax118 * 0x64006e);
    __asm__("outsd ");
    tmp8_140 = reinterpret_cast<unsigned char>(*edi141 + dh142);
    cf143 = tmp8_140 < *edi144;
    *edi145 = tmp8_140;
    esp126 = &(*esp136)->f4;
    tmp8_146 = reinterpret_cast<unsigned char>(ebx3->f0 + *reinterpret_cast<unsigned char*>(&eax118));
    cf130 = tmp8_146 < ebx3->f0;
    ebx3->f0 = tmp8_146;
    zf131 = ebx3->f0 == 0;
    goto addr_10007ba6_34;
    addr_10007baa_35:
    esi129->f0 = reinterpret_cast<unsigned char>(esi129->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    esp147 = reinterpret_cast<struct s485**>(esp126 - 1);
    *esp147 = esi129;
    tmp8_148 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    cf149 = reinterpret_cast<unsigned char>(tmp8_148) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = tmp8_148;
    eax150 = reinterpret_cast<void**>(*eax118 * 0x6e006f);
    esp151 = &(*esp147)->f4;
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax150)));
    __asm__("insb ");
    tmp8_152 = reinterpret_cast<unsigned char>(*edi153 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    cf154 = tmp8_152 < *edi155;
    *edi156 = tmp8_152;
    *edx157 = reinterpret_cast<signed char>(*edx158 + dh159);
    esp160 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp151) + 4);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl161);
    esp162 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp160) - 4);
    *esp162 = 0x74007500;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax150) + reinterpret_cast<uint32_t>(eax150) + 0x6f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax150) + reinterpret_cast<uint32_t>(eax150) + 0x6f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax150) + 1)));
    *edi163 = reinterpret_cast<signed char>(*edi164 + dh165);
    __asm__("outsb ");
    *eax150 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax150) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax150)));
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl166);
    __asm__("insb ");
    ecx100->f0 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax150) + 1)));
    esp167 = reinterpret_cast<void**>(esp162 - 1);
    *reinterpret_cast<void***>(esp167) = esp167;
    *edi168 = reinterpret_cast<unsigned char>(*edi169 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    esp170 = reinterpret_cast<struct s478**>(esp167 - 1);
    *esp170 = ebx3;
    *eax150 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax150) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    zf171 = *eax150 == 0;
    tmp8_172 = reinterpret_cast<unsigned char>(*edi173 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    cf174 = reinterpret_cast<uint1_t>(tmp8_172 < *edi175);
    *edi176 = tmp8_172;
    __asm__("outsb ");
    tmp8_178 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax150) + reinterpret_cast<signed char>(dl179));
    cf180 = reinterpret_cast<unsigned char>(tmp8_178) < reinterpret_cast<unsigned char>(*eax150);
    *eax150 = tmp8_178;
    eax181 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*eax150) * 0x61006d);
    edi182 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi183) - 1);
    esi129->f0 = reinterpret_cast<unsigned char>(esi129->f0 + dh184);
    *edx185 = reinterpret_cast<signed char>(*edx186 + dh187);
    __asm__("insb ");
    ecx100->f0 = reinterpret_cast<unsigned char>(ecx100->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax181) + 1));
    *eax181 = reinterpret_cast<signed char>(*eax181 + *reinterpret_cast<signed char*>(&eax181));
    esp188 = reinterpret_cast<struct s478**>(reinterpret_cast<int32_t>(esp170) + 1 - 4);
    *esp188 = ebx3;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x65) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax181) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x6f) + dl189);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl190);
    esp191 = reinterpret_cast<int32_t*>(esp188 - 1);
    *esp191 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax181) + reinterpret_cast<uint32_t>(eax181) + 0x6f) + *reinterpret_cast<signed char*>(&eax181));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh192);
    __asm__("outsb ");
    *eax181 = reinterpret_cast<signed char>(*eax181 + dl193);
    __asm__("popad ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax181) + 1));
    esi129->f0 = reinterpret_cast<unsigned char>(esi129->f0 + dl194);
    eax195 = reinterpret_cast<unsigned char*>(*eax181 * 0x770065);
    *edx196 = reinterpret_cast<signed char>(*edx197 + dh198);
    tmp8_199 = reinterpret_cast<unsigned char>(*eax195 + *reinterpret_cast<signed char*>(&eax195));
    cf200 = reinterpret_cast<uint1_t>(tmp8_199 < *eax195);
    *eax195 = tmp8_199;
    *edx201 = reinterpret_cast<signed char>(*edx202 + dh203);
    eax205 = reinterpret_cast<signed char*>(*eax195 * 0x610063);
    __asm__("insb ");
    tmp8_206 = reinterpret_cast<unsigned char>(ebx3->f0 + dh207);
    cf208 = tmp8_206 < ebx3->f0;
    ebx3->f0 = tmp8_206;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *edx209 = reinterpret_cast<unsigned char>(*edx210 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    __asm__("popad ");
    *edx211 = reinterpret_cast<signed char>(*edx212 + dh213);
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    esp214 = reinterpret_cast<struct s478**>(esp191 - 1);
    *esp214 = ebx3;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + dl215);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl216);
    esp217 = reinterpret_cast<int32_t*>(esp214 - 1);
    *esp217 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + *reinterpret_cast<signed char*>(&eax205));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh218);
    __asm__("outsb ");
    *eax205 = reinterpret_cast<signed char>(*eax205 + dl219);
    __asm__("popad ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *eax205 = reinterpret_cast<signed char>(*eax205 + dl220);
    __asm__("popad ");
    *edx221 = reinterpret_cast<signed char>(*edx222 + dh223);
    esi129->f0 = reinterpret_cast<unsigned char>(esi129->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    esp224 = reinterpret_cast<struct s478**>(esp217 - 1);
    *esp224 = ebx3;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + dl225);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl226);
    esp227 = reinterpret_cast<int32_t*>(esp224 - 1);
    *esp227 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + *reinterpret_cast<signed char*>(&eax205));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh228);
    __asm__("outsb ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx100)));
    tmp8_229 = reinterpret_cast<unsigned char>(ebx3->f0 + dh230);
    cf231 = tmp8_229 < ebx3->f0;
    ebx3->f0 = tmp8_229;
    __asm__("popad ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl232);
    zf233 = ebx3->f0 == 0;
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx3) + 1));
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    tmp8_234 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    cf235 = tmp8_234 < ecx100->f0;
    ecx100->f0 = tmp8_234;
    __asm__("popad ");
    *edx236 = reinterpret_cast<unsigned char>(*edx237 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    __asm__("insb ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    ecx238 = reinterpret_cast<struct s486*>(reinterpret_cast<int32_t>(ecx100) - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    esp239 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp227) + 1 - 4);
    *reinterpret_cast<void***>(esp239) = esp239;
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("insd ");
    tmp8_240 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    cf241 = reinterpret_cast<unsigned char>(tmp8_240) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = tmp8_240;
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    esp242 = reinterpret_cast<struct s478**>(esp239 - 1);
    *esp242 = ebx3;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + dl243);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl244);
    esp245 = reinterpret_cast<int32_t*>(esp242 - 1);
    *esp245 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + *reinterpret_cast<signed char*>(&eax205));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh246);
    __asm__("outsb ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx238)));
    tmp8_247 = reinterpret_cast<unsigned char>(ebx3->f0 + dh248);
    cf249 = tmp8_247 < ebx3->f0;
    ebx3->f0 = tmp8_247;
    __asm__("popad ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) + dl250);
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx3) + 1));
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    esp251 = reinterpret_cast<struct s478**>(esp245 - 1);
    *esp251 = ebx3;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax205) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + dl252);
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl253);
    esp254 = reinterpret_cast<int32_t*>(esp251 - 1);
    *esp254 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax205) + reinterpret_cast<uint32_t>(eax205) + 0x6f) + *reinterpret_cast<signed char*>(&eax205));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh255);
    __asm__("outsb ");
    tmp8_256 = reinterpret_cast<unsigned char>(ecx238->f0 + *reinterpret_cast<signed char*>(&eax205));
    cf257 = tmp8_256 < ecx238->f0;
    ecx238->f0 = tmp8_256;
    __asm__("outsd ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh258);
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    *eax205 = reinterpret_cast<signed char>(*eax205 + *reinterpret_cast<signed char*>(&eax205));
    eax259 = eax205 - 1;
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(*reinterpret_cast<unsigned char**>(&ebx3)) + *reinterpret_cast<int16_t*>(&esi129)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(*reinterpret_cast<unsigned char**>(&ebx3)) + *reinterpret_cast<int16_t*>(&esi129)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259) + 0x72) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259) + 0x72) + dh260);
    tmp8_261 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax259) + 1)));
    cf262 = tmp8_261 < ecx238->f0;
    ecx238->f0 = tmp8_261;
    *eax259 = reinterpret_cast<signed char>(*eax259 + *reinterpret_cast<signed char*>(&eax259));
    *eax259 = reinterpret_cast<signed char>(*eax259 + *reinterpret_cast<signed char*>(&eax259));
    tmp8_263 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf264 = tmp8_263 < ecx238->f0;
    ecx238->f0 = tmp8_263;
    __asm__("popad ");
    *edx265 = reinterpret_cast<unsigned char>(*edx266 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax259) + 1)));
    __asm__("insb ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax259) + 1)));
    ebx267 = reinterpret_cast<struct s487*>(reinterpret_cast<int32_t>(&ebx3->pad4) + 1);
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + *reinterpret_cast<signed char*>(&eax259));
    *eax259 = reinterpret_cast<signed char>(*eax259 + *reinterpret_cast<signed char*>(&eax259));
    *eax259 = reinterpret_cast<signed char>(*eax259 + *reinterpret_cast<signed char*>(&eax259));
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + dl268);
    __asm__("outsd ");
    tmp8_269 = reinterpret_cast<unsigned char>(esi129->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax259) + 1)));
    cf270 = reinterpret_cast<uint1_t>(tmp8_269 < esi129->f0);
    esi129->f0 = tmp8_269;
    zf271 = reinterpret_cast<uint1_t>(esi129->f0 == 0);
    __asm__("popad ");
    *edx272 = reinterpret_cast<signed char>(*edx273 + dh274);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259) + 77) + *reinterpret_cast<signed char*>(&ebx267));
    tmp8_275 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf276 = tmp8_275 < ecx238->f0;
    ecx238->f0 = tmp8_275;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + dh277);
    __asm__("outsd ");
    esi129->f0 = reinterpret_cast<unsigned char>(esi129->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax259) + 1)));
    esp278 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp254) + 1 + 1)) + 4);
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dl279);
    eax280 = reinterpret_cast<unsigned char*>(*eax259 * 0x64006e);
    __asm__("outsd ");
    tmp8_281 = reinterpret_cast<unsigned char>(*edi182 + dh282);
    cf283 = tmp8_281 < *edi182;
    *edi182 = tmp8_281;
    *eax280 = reinterpret_cast<unsigned char>(*eax280 & *reinterpret_cast<unsigned char*>(&eax280));
    esi284 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi129) - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax280) + reinterpret_cast<int32_t>(eax280) + 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax280) + reinterpret_cast<int32_t>(eax280) + 92) + dl285);
    tmp8_286 = reinterpret_cast<unsigned char>(ebx267->f0 + *reinterpret_cast<unsigned char*>(&eax280));
    cf287 = tmp8_286 < ebx267->f0;
    ebx267->f0 = tmp8_286;
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    esp288 = reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(esp278) - 4);
    *esp288 = esi284;
    tmp8_289 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax280) + 1)));
    cf290 = reinterpret_cast<unsigned char>(tmp8_289) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = tmp8_289;
    eax291 = reinterpret_cast<int32_t*>(*eax280 * 0x6e006f);
    esp292 = reinterpret_cast<void*>(*esp288 + 4);
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dl293);
    eax294 = reinterpret_cast<signed char*>(*eax291 * 0x6c006e);
    __asm__("outsd ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *eax294 = reinterpret_cast<signed char>(*eax294 + *reinterpret_cast<signed char*>(&eax294));
    tmp8_295 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf296 = tmp8_295 < ecx238->f0;
    ecx238->f0 = tmp8_295;
    __asm__("popad ");
    *edx297 = reinterpret_cast<unsigned char>(*edx298 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    __asm__("insb ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    esp299 = reinterpret_cast<struct s487**>(reinterpret_cast<int32_t>(esp292) + 1 - 4);
    *esp299 = ebx267;
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    __asm__("insb ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    esp300 = reinterpret_cast<int32_t*>(esp299 - 1);
    *esp300 = edx301;
    tmp8_302 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    cf303 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_302) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = tmp8_302;
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    __asm__("insb ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + *reinterpret_cast<signed char*>(&eax294));
    __asm__("outsb ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("insd ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax294) + 1)));
    eax304 = reinterpret_cast<signed char*>(*eax294 * 0x6e006f);
    *eax304 = reinterpret_cast<signed char>(*eax304 + *reinterpret_cast<signed char*>(&eax304));
    *eax304 = reinterpret_cast<signed char>(*eax304 + *reinterpret_cast<signed char*>(&eax304));
    eax305 = reinterpret_cast<int32_t*>(eax304 - 1);
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax305) + 1)));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    **reinterpret_cast<unsigned char**>(&ebx267) = reinterpret_cast<unsigned char>(**reinterpret_cast<unsigned char**>(&ebx267) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsb ");
    *edx306 = reinterpret_cast<signed char>(*edx307 + *reinterpret_cast<signed char*>(&eax305));
    __asm__("popad ");
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax305) + 1)));
    eax308 = reinterpret_cast<signed char*>(*eax305 * 0x67);
    *edx309 = reinterpret_cast<signed char>(*edx310 + dh311);
    __asm__("outsd ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(dh312));
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax308) + reinterpret_cast<int32_t>(eax308) + 73) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax308) + reinterpret_cast<int32_t>(eax308) + 73) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax308) + 1)));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("popad ");
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax308) + 1)));
    *eax308 = reinterpret_cast<signed char>(*eax308 + *reinterpret_cast<signed char*>(&eax308));
    *eax308 = reinterpret_cast<signed char>(*eax308 + *reinterpret_cast<signed char*>(&eax308));
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + dl313);
    esp314 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp300) - 1 - 4);
    *esp314 = 0x74007500;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax308) + reinterpret_cast<int32_t>(eax308) + 0x6f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax308) + reinterpret_cast<int32_t>(eax308) + 0x6f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax308) + 1)));
    *edi182 = reinterpret_cast<unsigned char>(*edi182 + dh315);
    __asm__("outsb ");
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + *reinterpret_cast<signed char*>(&eax308));
    esp316 = esp314 - 1;
    *esp316 = 0x69006f00;
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax308) + 1)));
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + dh317);
    *eax308 = reinterpret_cast<signed char>(*eax308 + *reinterpret_cast<signed char*>(&eax308));
    esp318 = esp316 - 1;
    *esp318 = edx319;
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax308) + 1)));
    __asm__("popad ");
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + dh320);
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    esp321 = reinterpret_cast<void**>(esp318 - 1);
    *reinterpret_cast<void***>(esp321) = esp321;
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax308) + 1)));
    *eax308 = reinterpret_cast<signed char>(*eax308 + *reinterpret_cast<signed char*>(&eax308));
    *eax308 = reinterpret_cast<signed char>(*eax308 + *reinterpret_cast<signed char*>(&eax308));
    edi322 = edi182 - 1;
    *eax308 = reinterpret_cast<signed char>(*eax308 + dh323);
    eax324 = reinterpret_cast<signed char*>(*eax308 * 0x6e006f);
    esp325 = esp321 - 1;
    *reinterpret_cast<void***>(esp325) = esp325;
    *edi322 = reinterpret_cast<unsigned char>(*edi322 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("arpl [eax], ax");
    esp326 = reinterpret_cast<int32_t*>(esp325 - 1);
    *esp326 = 0x65005300;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax324) + reinterpret_cast<int32_t>(eax324) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax324) + reinterpret_cast<int32_t>(eax324) + 0x65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    ebx267->f0 = reinterpret_cast<unsigned char>(ebx267->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax324) + 1));
    *eax324 = reinterpret_cast<signed char>(*eax324 + *reinterpret_cast<signed char*>(&eax324));
    edi327 = reinterpret_cast<struct s488*>(edi322 - 1);
    *eax324 = reinterpret_cast<signed char>(*eax324 + dh328);
    eax329 = reinterpret_cast<void**>(*eax324 * 0x6e006f);
    ebx330 = reinterpret_cast<struct s489*>(&ebx267->f1);
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("insd ");
    *edx331 = reinterpret_cast<unsigned char>(*edx332 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax329) + 1)));
    __asm__("outsd ");
    *edx333 = reinterpret_cast<signed char>(*edx334 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    __asm__("outsd ");
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx330) + 1)));
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    esp335 = reinterpret_cast<struct s489**>(esp326 - 1);
    *esp335 = ebx330;
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    zf336 = *eax329 == 0;
    tmp8_337 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf338 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_337) < reinterpret_cast<unsigned char>(edi327->f0));
    edi327->f0 = tmp8_337;
    __asm__("outsb ");
    *edx339 = reinterpret_cast<signed char>(*edx340 + dl341);
    tmp8_342 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax329) + 1)));
    cf343 = tmp8_342 < ecx238->f0;
    ecx238->f0 = tmp8_342;
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    esp344 = reinterpret_cast<int32_t*>(esp335 - 1);
    *esp344 = edx345;
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax329) + 1)));
    __asm__("popad ");
    ebx330->f0 = reinterpret_cast<signed char>(ebx330->f0 + dh346);
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    ebx347 = reinterpret_cast<struct s490*>(&ebx330->f1);
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax329) + reinterpret_cast<int32_t>(eax329) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax329) + reinterpret_cast<int32_t>(eax329) + 0x69) + dh348);
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    *eax329 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax329) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    ebx347->f0 = reinterpret_cast<signed char>(ebx347->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax329)));
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    tmp8_349 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf350 = tmp8_349 < ecx238->f0;
    ecx238->f0 = tmp8_349;
    __asm__("insd ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax329) + 1)));
    eax351 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*eax329) * 0x6e006f);
    esp352 = reinterpret_cast<void**>(esp344 - 1);
    *reinterpret_cast<void***>(esp352) = esp352;
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax351) + 1)));
    *eax351 = reinterpret_cast<signed char>(*eax351 + *reinterpret_cast<signed char*>(&eax351));
    *eax351 = reinterpret_cast<signed char>(*eax351 + *reinterpret_cast<signed char*>(&eax351));
    ebx353 = reinterpret_cast<struct s491*>(&ebx347->f1);
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsb ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax351) + 1)));
    eax354 = reinterpret_cast<int32_t*>(*eax351 * 0x6d0072);
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax354) + reinterpret_cast<int32_t>(eax354) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax354) + reinterpret_cast<int32_t>(eax354) + 0x69) + dh355);
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsb ");
    ebx353->f0 = reinterpret_cast<signed char>(ebx353->f0 + *reinterpret_cast<signed char*>(&eax354));
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    eax356 = reinterpret_cast<signed char*>(*eax354 * 0x75006e);
    *eax356 = reinterpret_cast<signed char>(*eax356 + *reinterpret_cast<signed char*>(&eax356));
    *eax356 = reinterpret_cast<signed char>(*eax356 + *reinterpret_cast<signed char*>(&eax356));
    ebx353->f0 = reinterpret_cast<signed char>(ebx353->f0 + dl357);
    esp358 = reinterpret_cast<int32_t*>(esp352 - 1);
    *esp358 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax356) + reinterpret_cast<int32_t>(eax356) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax356) + reinterpret_cast<int32_t>(eax356) + 0x6f) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax356) + 1));
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<signed char>(dh359));
    __asm__("outsb ");
    ebx353->f0 = reinterpret_cast<signed char>(ebx353->f0 + *reinterpret_cast<signed char*>(&eax356));
    __asm__("outsd ");
    *esi284 = reinterpret_cast<unsigned char>(*esi284 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    tmp8_360 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf361 = tmp8_360 < ecx238->f0;
    ecx238->f0 = tmp8_360;
    __asm__("insd ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax356) + 1));
    eax362 = reinterpret_cast<signed char*>(*eax356 * 0x6e006f);
    *eax362 = reinterpret_cast<signed char>(*eax362 + *reinterpret_cast<signed char*>(&eax362));
    *eax362 = reinterpret_cast<signed char>(*eax362 + *reinterpret_cast<signed char*>(&eax362));
    __asm__("insd ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax362) + 1));
    eax363 = reinterpret_cast<void**>(*eax362 * 0x6e);
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    ebx364 = reinterpret_cast<struct s492*>(&ebx353->f1);
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsd ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("arpl [eax], ax");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax363) + reinterpret_cast<uint32_t>(eax363) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax363) + reinterpret_cast<uint32_t>(eax363) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx238)));
    ebx364->f0 = reinterpret_cast<unsigned char>(ebx364->f0 + dh365);
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    esp366 = reinterpret_cast<struct s493*>(esp358 - 1);
    esp366->f0 = ebx364;
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    zf367 = *eax363 == 0;
    tmp8_368 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    cf369 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_368) < reinterpret_cast<unsigned char>(edi327->f0));
    edi327->f0 = tmp8_368;
    __asm__("outsb ");
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<signed char>(dl370));
    __asm__("popad ");
    *edx371 = reinterpret_cast<signed char>(*edx372 + dh373);
    __asm__("outsb ");
    ecx238->f0 = reinterpret_cast<unsigned char>(ecx238->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
    __asm__("outsb ");
    edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax363) + 1)));
    tmp8_374 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    cf375 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_374) < reinterpret_cast<unsigned char>(*eax363));
    *eax363 = tmp8_374;
    __asm__("das ");
    esi376 = esp366->f0;
    esp377 = &esp366->f4;
    __asm__("fdivr qword [edi+0x49b33402]");
    do {
        tmp32_378 = *reinterpret_cast<void***>(eax363 - 0x6f);
        *reinterpret_cast<void***>(eax363 - 0x6f) = eax363;
        __asm__("salc ");
        __asm__("fcomp qword [ebp-0x45]");
        eax363 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(tmp32_378 + 0x6c0053) + cf375) * 0x650064);
        esp379 = reinterpret_cast<struct s483*>(esp377 - 1);
        *reinterpret_cast<struct s483**>(&esp379->f0) = esp379;
        edi327->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
        esp380 = reinterpret_cast<struct s494*>(reinterpret_cast<unsigned char>(esp379) - 4);
        esp380->f0 = ebx364;
        *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
        zf381 = *eax363 == 0;
        esp377 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp380) + 1);
        tmp8_382 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi327->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx238) + 1)));
        cf383 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_382) < reinterpret_cast<unsigned char>(edi327->f0));
        edi327->f0 = tmp8_382;
        __asm__("outsb ");
        *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx238)));
        __asm__("outsd ");
        ebx364->f0 = reinterpret_cast<unsigned char>(ebx364->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
        *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
        if (!*eax363) 
            break;
        __asm__("retf 0xb5ab");
        edi385 = reinterpret_cast<struct s495*>(reinterpret_cast<int32_t>(edi327) - reinterpret_cast<int32_t>(edi327));
        --edx384;
        cf375 = reinterpret_cast<uint1_t>(esi376->f0 < edi385->f0);
        below_or_equal386 = esi376->f0 <= edi385->f0;
        edi385->f0 = esi376->f0;
        edi327 = reinterpret_cast<struct s488*>(&edi385->f4);
        esi376 = reinterpret_cast<struct s492*>(reinterpret_cast<int32_t>(esi376) + 4);
    } while (below_or_equal386);
    goto addr_1000803f_117;
    while (1) {
        --esp377;
        *esp377 = 77;
        edi327->f0 = *reinterpret_cast<void**>(&eax363);
        edi387 = reinterpret_cast<struct s496*>(&edi327->f1);
        esi388 = reinterpret_cast<struct s497*>(&esi376->f1);
        sf389 = esi388->f0 < edi387->f0;
        edi387->f0 = esi388->f0;
        edi390 = reinterpret_cast<struct s498*>(&edi387->f4);
        esi391 = reinterpret_cast<struct s499*>(&esi388->f1);
        if (sf389) 
            break;
        __asm__("rcr dword [edi+0x13], cl");
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx364) + 1) = reinterpret_cast<void*>(69);
        (ecx238 + reinterpret_cast<int32_t>(ecx238) * 2 - 4)->f0 = reinterpret_cast<unsigned char>((ecx238 + reinterpret_cast<int32_t>(ecx238) * 2 - 4)->f0 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx238)));
        tmp8_392 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi391) + 0x79f06916);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi391) + 0x79f06916) = *reinterpret_cast<signed char*>(&edx384);
        *reinterpret_cast<signed char*>(&edx384) = tmp8_392;
        __asm__("salc ");
        ebp127->f74 = ebp127->f74 - 97;
        ebx364 = reinterpret_cast<struct s492*>(reinterpret_cast<int32_t>(&ebx364->f1) + 1);
        __asm__("cdq ");
        esi391 = reinterpret_cast<struct s499*>(reinterpret_cast<int32_t>(esi391) - 1);
        if (!(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(esi391) < 0 != __intrinsic()) | reinterpret_cast<uint1_t>(esi391 == 0))) 
            goto addr_100080c0_126;
        edi390->f0 = *reinterpret_cast<unsigned char*>(esi391);
        edi393 = reinterpret_cast<struct s500*>(&edi390->f1);
        *reinterpret_cast<void**>(&eax363) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)) | 0x7d);
        __asm__("in al, dx");
        eax394 = reinterpret_cast<uint32_t>(eax363) | 0x4759bd63;
        edi393->f0 = *reinterpret_cast<signed char*>(&eax394);
        edi327 = reinterpret_cast<struct s488*>(&edi393->f1);
        esi376 = reinterpret_cast<struct s492*>(reinterpret_cast<int32_t>(esi391) + 1 + 1);
        __asm__("fs lodsd ");
        __asm__("out dx, eax");
        __asm__("xlatb ");
        eax363 = reinterpret_cast<void**>(eax394 | 0x5d1b9acf);
        ebp127 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(ebp127) - 1);
        --edx384;
        __asm__("wait ");
        tmp8_395 = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp377) + reinterpret_cast<uint32_t>(eax363) * 2 - 0x80);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp377) + reinterpret_cast<uint32_t>(eax363) * 2 - 0x80) = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1);
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1) = tmp8_395;
    }
    addr_100080ca_134:
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) ^ reinterpret_cast<uint32_t>(eax363));
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) ^ reinterpret_cast<uint32_t>(eax363));
    *reinterpret_cast<void**>(&eax363) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363))));
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) ^ reinterpret_cast<uint32_t>(eax363));
    *reinterpret_cast<void**>(&eax363) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363))));
    ecx396 = &ecx238->f1;
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx364) + 1)));
    tmp8_397 = reinterpret_cast<signed char>(g65003800 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx396) + 1));
    g65003800 = tmp8_397;
    tmp8_398 = reinterpret_cast<unsigned char>(g2d006600 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    g2d006600 = tmp8_398;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax363) + reinterpret_cast<uint32_t>(eax363)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax363) + reinterpret_cast<uint32_t>(eax363)) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    eax399 = reinterpret_cast<uint32_t*>(eax363 - 0x30006100);
    *ecx396 = reinterpret_cast<signed char>(*ecx396 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax399) + 1));
    eax400 = reinterpret_cast<unsigned char*>((reinterpret_cast<uint32_t>(eax399) ^ *eax399) - 0x35006600);
    tmp8_401 = reinterpret_cast<unsigned char>(g32003200 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    g32003200 = tmp8_401;
    *edx384 = reinterpret_cast<unsigned char>(*edx384 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    *edx384 = reinterpret_cast<unsigned char>(*edx384 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax400) + 1)));
    *eax400 = reinterpret_cast<unsigned char>(*eax400 ^ *reinterpret_cast<unsigned char*>(&eax400));
    *reinterpret_cast<unsigned char*>(esi391) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi391) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax400) + 1)));
    __asm__("aaa ");
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx364) + 1)));
    eax402 = reinterpret_cast<signed char*>(eax400 - 0x75006200);
    ebx364->f0 = reinterpret_cast<unsigned char>(ebx364->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    *eax402 = reinterpret_cast<signed char>(*eax402 + *reinterpret_cast<signed char*>(&eax402));
    ecx403 = ecx396 - 1;
    ebx364->f0 = reinterpret_cast<unsigned char>(ebx364->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx384) + 1));
    *reinterpret_cast<struct s483**>(esp377 - 1) = ebp127;
    *ecx403 = reinterpret_cast<signed char>(*ecx403 + *reinterpret_cast<signed char*>(&ecx403));
    edx404 = reinterpret_cast<int32_t>(edx384 + 1);
    tmp8_405 = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx404) + 1)));
    cf406 = reinterpret_cast<unsigned char>(tmp8_405) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = tmp8_405;
    *eax402 = reinterpret_cast<signed char>(*eax402 + *reinterpret_cast<signed char*>(&eax402));
    *eax402 = reinterpret_cast<signed char>(*eax402 + *reinterpret_cast<signed char*>(&eax402));
    addr_100080c0_126:
    *reinterpret_cast<void**>(&ecx238) = reinterpret_cast<void*>(62);
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    *eax363 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax363) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax363)));
    if (!__intrinsic()) 
        goto addr_100080ca_134; else 
        goto addr_100080ca_134;
    addr_1000803f_117:
    *reinterpret_cast<struct s483**>(esp377 - 1) = ebp127;
    goto esi376;
    addr_10007b48_37:
    ecx100->f0 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    __asm__("outsb ");
    *edi407 = reinterpret_cast<unsigned char>(*edi408 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    __asm__("popad ");
    *edi410 = reinterpret_cast<unsigned char>(*edi411 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    ecx100->f0 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx100)));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    ebx3->f0 = reinterpret_cast<unsigned char>(ebx3->f0 + dl412);
    __asm__("insb ");
    ecx100->f0 = reinterpret_cast<unsigned char>(ecx100->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *reinterpret_cast<struct s483**>(&ebp127->f0) = reinterpret_cast<struct s483*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s483**>(&ebp127->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax118) + 1)));
    esp413 = reinterpret_cast<struct s483**>(reinterpret_cast<int32_t>(esp132) - 1 + 1 - 4);
    *esp413 = ebp127;
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + dh414);
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    esp107 = reinterpret_cast<struct s478**>(esp413 - 4);
    *esp107 = ebx3;
    *edi415 = reinterpret_cast<unsigned char>(*edi416 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx100) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118) + 0x77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118) + 0x77) + dh417);
    goto addr_10007b75_24;
}

struct s501 {
    signed char[37] pad37;
    unsigned char f37;
};

struct s502 {
    unsigned char f0;
    unsigned char f1;
};

struct s503 {
    unsigned char f0;
    signed char[115880932] pad115880933;
    uint32_t f115880933;
};

struct s504 {
    unsigned char* f0;
    signed char[2003708409] pad2003708410;
    int16_t f2003708410;
};

struct s505 {
    unsigned char f0;
    signed char[24] pad25;
    unsigned char f25;
};

struct s507 {
    signed char[4] pad4;
    void* f4;
};

struct s506 {
    struct s506* f0;
    struct s507* f4;
};

void* g15e6730f;

unsigned char gcf3a4880;

void fun_10008144(int32_t ecx) {
    uint1_t df2;
    signed char tmp8_3;
    signed char* edx4;
    signed char* edx5;
    signed char bl6;
    void* ebx7;
    uint1_t zf8;
    int32_t edx9;
    int32_t ebp10;
    struct s501* edx11;
    struct s501* edi12;
    int32_t ecx13;
    unsigned char* eax14;
    struct s502* edx15;
    unsigned char* eax16;
    void* tmp32_17;
    unsigned char bh18;
    uint32_t eax19;
    int32_t eax20;
    int32_t esi21;
    signed char* edi22;
    signed char* esi23;
    unsigned char* edi24;
    void* edi25;
    struct s503* esi26;
    void* esi27;
    struct s504* edi28;
    void** ebx29;
    unsigned char* ecx30;
    int32_t* esp31;
    struct s505* edx32;
    int32_t ebp33;
    int16_t fpu_status_word34;
    signed char* esp35;
    signed char cs36;
    void** eax37;
    signed char* ebp38;
    signed char* ebp39;
    int32_t* esp40;
    int32_t* esp41;
    struct s506* esp42;
    unsigned char tmp8_43;
    int1_t cf44;
    signed char* eax45;
    signed char* ebp46;
    signed char* ebp47;
    unsigned char tmp8_48;
    signed char* ebp49;
    uint1_t cf50;
    unsigned char* ebp51;
    unsigned char* ebp52;
    signed char* ebp53;
    struct s507** esp54;
    signed char* ebp55;
    signed char* ebp56;
    int32_t* eax57;
    void** esp58;
    void** eax59;
    unsigned char* tmp8_60;
    int1_t cf61;
    void* esp62;
    void** esp63;
    void* tmp8_64;
    int1_t cf65;
    int32_t* esp66;
    unsigned char tmp8_67;
    int1_t cf68;
    unsigned char tmp8_69;
    uint1_t cf70;
    void* tmp8_71;
    uint1_t cf72;
    void** tmp32_73;
    uint1_t cf74;
    unsigned char* tmp32_75;

    df2 = 0;
    __asm__("in al, dx");
    __asm__("les ecx, [ecx]");
    tmp8_3 = *edx4;
    *edx5 = bl6;
    *reinterpret_cast<signed char*>(&ebx7) = tmp8_3;
    zf8 = reinterpret_cast<uint1_t>(edx9 - 1 == 0);
    *reinterpret_cast<signed char*>(ebp10 - 93) = *reinterpret_cast<signed char*>(&ecx);
    edx11 = edi12;
    ecx13 = ecx - 1;
    if (reinterpret_cast<uint1_t>(!!ecx13) & reinterpret_cast<uint1_t>(!zf8)) {
        addr_100081b2_2:
        *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
        *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
        *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
        edx15 = reinterpret_cast<struct s502*>(reinterpret_cast<int32_t>(edx11) - 1);
        __asm__("das ");
        eax16 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4) | 0xb04cd9c5);
        tmp32_17 = reinterpret_cast<void*>(1 - 2 * df2);
    } else {
        --ecx13;
        if (reinterpret_cast<uint1_t>(!!ecx13) & zf8) 
            goto 0x10008123;
        df2 = 1;
        edx11->f37 = reinterpret_cast<unsigned char>(edx11->f37 ^ bh18);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx11) + 1) = 6;
        eax19 = reinterpret_cast<uint32_t>(eax20 - *reinterpret_cast<int32_t*>(esi21 - 82));
        *edi22 = *esi23;
        edi24 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi25) - 1);
        esi26 = reinterpret_cast<struct s503*>(reinterpret_cast<int32_t>(esi27) - 1);
        __asm__("arpl di, si");
        eax14 = reinterpret_cast<unsigned char*>(eax19 | esi26->f115880933);
        if (!__intrinsic()) 
            goto addr_10008199_8; else 
            goto addr_10008168_9;
    }
    *edi24 = esi26->f0;
    edi28 = reinterpret_cast<struct s504*>(reinterpret_cast<int32_t>(edi24) + reinterpret_cast<uint32_t>(tmp32_17));
    *reinterpret_cast<signed char*>(&ebx29) = -38;
    *reinterpret_cast<unsigned char**>(edi28) = *reinterpret_cast<unsigned char**>(edi28) - 34;
    ecx30 = reinterpret_cast<unsigned char*>(&(edx15 + ecx13)->f0);
    __asm__("int 0xbf");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx15) + 1) = 6;
    esp31 = reinterpret_cast<int32_t*>(eax14 - 4);
    *esp31 = 0x2c79aa0d;
    edx32 = reinterpret_cast<struct s505*>(&edx15->f1);
    *reinterpret_cast<signed char*>(ebp33 - 46) = -38;
    *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) | reinterpret_cast<uint32_t>(edx32));
    *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax16) + 55)));
    __asm__("wait ");
    *reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(edi28) + 0x776e29fa) = fpu_status_word34;
    __asm__("cdq ");
    __asm__("rol dword [edx-0x73], 1");
    esp35 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp31) - 2);
    *esp35 = cs36;
    __asm__("retf 0x617e");
    __asm__("lodsd ");
    *eax16 = reinterpret_cast<unsigned char>(*eax16 + *reinterpret_cast<unsigned char*>(&eax16));
    *eax16 = reinterpret_cast<unsigned char>(*eax16 + *reinterpret_cast<unsigned char*>(&eax16));
    eax37 = reinterpret_cast<void**>(*eax16 * 0x65);
    edx32->f0 = reinterpret_cast<unsigned char>(edx32->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
    __asm__("outsb ");
    *ebp38 = reinterpret_cast<signed char>(*ebp39 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax37) + 1)));
    __asm__("insb ");
    *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
    edx32->f0 = reinterpret_cast<unsigned char>(edx32->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
    *esp35 = reinterpret_cast<signed char>(*esp35 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37) + 0x6c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37) + 0x6c) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax37) + 1)));
    *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37)) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37))) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax37) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax37)));
    *reinterpret_cast<unsigned char**>(edi28) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax37)));
    __asm__("insb ");
    *reinterpret_cast<unsigned char**>(edi28) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37) + 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37) + 92) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx32)));
    esp40 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi26) + reinterpret_cast<uint32_t>(tmp32_17) - 4);
    *esp40 = 0x6c006500;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37) + 67) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax37) + reinterpret_cast<uint32_t>(eax37) + 67) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    edx32->f0 = reinterpret_cast<unsigned char>(edx32->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
    *ecx30 = reinterpret_cast<unsigned char>(*ecx30 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax37) + 1)));
    *reinterpret_cast<unsigned char**>(edi28) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30)));
    esp41 = esp40 - 1;
    *esp41 = 0;
    *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax37) + 1)));
    esp42 = reinterpret_cast<struct s506*>(esp41 - 1);
    esp42->f0 = esp42;
    tmp8_43 = reinterpret_cast<unsigned char>(*ecx30 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax37) + 1)));
    cf44 = tmp8_43 < *ecx30;
    *ecx30 = tmp8_43;
    eax45 = reinterpret_cast<signed char*>(reinterpret_cast<signed char>(*eax37) * 82);
    *ebp46 = reinterpret_cast<signed char>(*ebp47 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(eax45) + 0x79) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(eax45) + 0x79) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    tmp8_48 = reinterpret_cast<unsigned char>(*ebp49 + *reinterpret_cast<signed char*>(&eax45));
    cf50 = reinterpret_cast<uint1_t>(tmp8_48 < *ebp51);
    *ebp52 = tmp8_48;
    *esp35 = reinterpret_cast<signed char>(*esp35 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    *eax45 = reinterpret_cast<signed char>(*eax45 + *reinterpret_cast<signed char*>(&eax45));
    *eax45 = reinterpret_cast<signed char>(*eax45 + *reinterpret_cast<signed char*>(&eax45));
    esp54 = &esp42->f0->f4;
    *ebp55 = reinterpret_cast<signed char>(*ebp56 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30)));
    eax57 = reinterpret_cast<int32_t*>(*eax45 * 0x720063);
    __asm__("outsd ");
    *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
    __asm__("outsd ");
    *esp35 = reinterpret_cast<signed char>(*esp35 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax57) + 1));
    esp58 = &(*esp54)->f4;
    *reinterpret_cast<unsigned char**>(edi28) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx32)));
    eax59 = reinterpret_cast<void**>(*eax57 * 0x64006e);
    __asm__("outsd ");
    tmp8_60 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
    cf61 = reinterpret_cast<unsigned char>(tmp8_60) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28));
    *reinterpret_cast<unsigned char**>(edi28) = tmp8_60;
    esp62 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp58) + 4);
    *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx32)));
    esp63 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp62) - 4);
    *reinterpret_cast<void***>(esp63) = reinterpret_cast<void**>(0x6c006500);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax59) + reinterpret_cast<int32_t>(eax59) + 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax59) + reinterpret_cast<int32_t>(eax59) + 92) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30 + 1)));
    tmp8_64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax59)));
    cf65 = reinterpret_cast<unsigned char>(tmp8_64) < reinterpret_cast<unsigned char>(*ebx29);
    *ebx29 = tmp8_64;
    *ecx30 = reinterpret_cast<unsigned char>(*ecx30 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax59) + 1)));
    *reinterpret_cast<unsigned char**>(edi28) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(edi28)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx30)));
    while (1) {
        esp66 = reinterpret_cast<int32_t*>(esp63 - 1);
        *esp66 = 0;
        *ebx29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ebx29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax59) + 1)));
        esp63 = reinterpret_cast<void**>(esp66 - 1);
        *reinterpret_cast<void***>(esp63) = esp63;
        tmp8_67 = reinterpret_cast<unsigned char>(*ecx30 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax59) + 1)));
        cf68 = tmp8_67 < *ecx30;
        *ecx30 = tmp8_67;
        eax59 = reinterpret_cast<void**>(0);
        do {
            tmp8_69 = reinterpret_cast<unsigned char>(edx32->f25 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx32)));
            cf70 = reinterpret_cast<uint1_t>(tmp8_69 < edx32->f25);
            edx32->f25 = tmp8_69;
            tmp8_71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)) + reinterpret_cast<signed char>(g15e6730f)) + cf70);
            cf72 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_71) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1)));
            *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1) = tmp8_71;
            --ecx30;
            if (reinterpret_cast<uint1_t>(!!ecx30) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx32) + 1))) 
                break;
            tmp32_73 = ebx29 + 1;
            ebx29 = eax59;
            eax59 = tmp32_73;
            cf74 = reinterpret_cast<uint1_t>(gcf3a4880 < reinterpret_cast<unsigned char>(0x72 + cf72));
            gcf3a4880 = reinterpret_cast<unsigned char>(gcf3a4880 - reinterpret_cast<unsigned char>(0x72 + cf74));
            __asm__("lahf ");
            tmp32_75 = *reinterpret_cast<unsigned char**>(edi28);
            *reinterpret_cast<unsigned char**>(edi28) = ecx30;
            ecx30 = tmp32_75;
            __asm__("in eax, 0xa4");
            esp63 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp63) - 1);
        } while (cf74);
        break;
    }
    addr_10008199_8:
    ebx29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx7) - 1);
    *reinterpret_cast<signed char*>(&ecx13) = 0x85;
    __asm__("sldt word [eax]");
    *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
    *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
    *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
    *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
    *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
    *eax14 = reinterpret_cast<unsigned char>(*eax14 + *reinterpret_cast<unsigned char*>(&eax14));
    goto addr_100081b2_2;
    addr_10008168_9:
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax14) & 95);
    __asm__("into ");
    __asm__("insd ");
    *eax14 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax14) >> -60);
    if (!__intrinsic()) 
        goto "e";
    *edi24 = *reinterpret_cast<unsigned char*>(&eax14);
    *reinterpret_cast<int32_t*>(edi24 - 1) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esi26) - 1);
    __asm__("in al, 0x19");
}

void fun_10008197(int32_t ecx) {
    __asm__("outsd ");
}

struct s508 {
    int32_t f0;
    int32_t f4;
};

struct s509 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_100082dd(unsigned char* ecx) {
    signed char* edi2;
    signed char* esi3;
    struct s508* edi4;
    struct s509* edi5;
    int32_t eax6;
    int32_t* eax7;
    signed char* eax8;
    unsigned char tmp8_9;
    int1_t cf10;
    signed char* edx11;
    signed char* edx12;
    signed char* ebp13;
    signed char* ebp14;
    signed char* eax15;
    signed char dl16;

    *edi2 = *esi3;
    edi4 = reinterpret_cast<struct s508*>(&edi5->f1);
    edi4->f0 = eax6;
    __asm__("das ");
    eax7 = &edi4->f4;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax7) + 1) = 0;
    __asm__("aas ");
    __asm__("aam 0xf");
    __asm__("outsb ");
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("insd ");
    *ecx = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*ecx));
    eax8 = reinterpret_cast<signed char*>(*eax7 * 0x6e006f);
    tmp8_9 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf10 = tmp8_9 < *ecx;
    *ecx = tmp8_9;
    __asm__("popad ");
    *edx11 = reinterpret_cast<signed char>(*edx12 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1));
    __asm__("insb ");
    *ebp13 = reinterpret_cast<signed char>(*ebp14 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax8) + 1));
    *eax8 = reinterpret_cast<signed char>(*eax8 + *reinterpret_cast<signed char*>(&eax8));
    *eax15 = reinterpret_cast<signed char>(*eax15 + dl16);
}

void fun_10008312() {
    int1_t cf1;
    signed char* ecx2;
    void** ebx3;
    void* ebx4;
    void* tmp32_5;
    void* eax6;
    void* eax7;
    int32_t edx8;
    signed char* eax9;
    signed char ch10;
    signed char ch11;
    signed char* edi12;
    signed char* edi13;
    signed char* esi14;
    signed char* esi15;
    signed char ch16;
    int1_t zf17;

    if (!cf1) {
        *reinterpret_cast<signed char*>(&ecx2) = -82;
    }
    ebx3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx4) - 1);
    tmp32_5 = *ebx3;
    *ebx3 = eax6;
    eax7 = tmp32_5;
    __asm__("fcmovbe st0, st1");
    *reinterpret_cast<signed char*>(&eax7) = *reinterpret_cast<signed char*>(edx8 - 0x7a89d84c);
    __asm__("repne out 0x41, eax");
    __asm__("cdq ");
    __asm__("insd ");
    eax9 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax7) - 0x290fdda);
    if (__intrinsic()) {
        __asm__("aad 0xd7");
        __asm__("daa ");
        *ecx2 = reinterpret_cast<signed char>(*ecx2 + ch10);
        __asm__("outsb ");
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax9) + reinterpret_cast<int32_t>(eax9) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax9) + reinterpret_cast<int32_t>(eax9) + 0x6f) + ch11);
        *edi12 = reinterpret_cast<signed char>(*edi13 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax9) + 1));
        __asm__("outsd ");
        *esi14 = reinterpret_cast<signed char>(*esi15 + ch16);
        *eax9 = reinterpret_cast<signed char>(*eax9 + *reinterpret_cast<signed char*>(&eax9));
        *eax9 = reinterpret_cast<signed char>(*eax9 + *reinterpret_cast<signed char*>(&eax9));
        zf17 = *eax9 == 0;
        __asm__("in al, dx");
        if (!zf17) 
            goto "e";
        __asm__("fisttp qword [edx+0x6630be6]");
        __asm__("das ");
        __asm__("lahf ");
    } else {
        goto reinterpret_cast<int32_t>(__zero_stack_offset()) - 1 - 4;
    }
}

struct s510 {
    signed char f0;
    signed char[91] pad92;
    struct s7* f92;
};

struct s511 {
    unsigned char f0;
    signed char[627146601] pad627146602;
    unsigned char f627146602;
};

struct s512 {
    signed char[32] pad32;
    unsigned char f32;
};

struct s513 {
    signed char[101] pad101;
    unsigned char f101;
};

struct s514 {
    signed char[101] pad101;
    signed char f101;
};

struct s515 {
    signed char[101] pad101;
    signed char f101;
};

struct s516 {
    signed char[1] pad1;
    signed char f1;
};

struct s517 {
    signed char[97] pad97;
    int16_t f97;
};

struct s518 {
    signed char[101] pad101;
    unsigned char f101;
};

struct s519 {
    signed char[101] pad101;
    signed char f101;
};

struct s520 {
    signed char[101] pad101;
    signed char f101;
};

struct s521 {
    signed char[4] pad4;
    signed char f4;
};

signed char gecd3b447;

signed char g2710;

struct s522 {
    void* f0;
    signed char[2] pad4;
    struct s7* f4;
};

struct s523 {
    int32_t f0;
    void* f4;
};

struct s524 {
    unsigned char f0;
    signed char[335] pad336;
    int32_t f336;
};

struct s525 {
    signed char[101] pad101;
    signed char f101;
};

struct s526 {
    signed char[100] pad100;
    int32_t f100;
};

struct s527 {
    signed char[97] pad97;
    int16_t f97;
};

void fun_1000838b(struct s510* ecx) {
    int32_t* esp2;
    struct s511* eax3;
    struct s512* edi4;
    signed char* ebx5;
    signed char* ebx6;
    signed char* ebp7;
    signed char* ebp8;
    signed char* edi9;
    signed char* edi10;
    signed char dh11;
    signed char* edi12;
    signed char* ebp13;
    signed char* ebp14;
    signed char* ebp15;
    signed char* ebp16;
    struct s513* edi17;
    struct s514* edi18;
    int1_t zf19;
    struct s515* edi20;
    signed char* edi21;
    signed char* edi22;
    signed char* bx23;
    signed char* bx24;
    signed char* ebp25;
    signed char* ebp26;
    signed char dl27;
    unsigned char* edx28;
    signed char* edx29;
    signed char* esi30;
    signed char dl31;
    signed char dl32;
    unsigned char tmp8_33;
    signed char* edi34;
    int1_t cf35;
    unsigned char* edi36;
    unsigned char* edi37;
    int1_t zf38;
    signed char* edi39;
    signed char* edx40;
    struct s516* edx41;
    signed char* ebp42;
    signed char* ebp43;
    void* esi44;
    struct s517* ebx45;
    struct s518* edi46;
    struct s519* edi47;
    struct s520* edi48;
    signed char* ebx49;
    unsigned char tmp8_50;
    int1_t cf51;
    signed char* ebp52;
    signed char* ebp53;
    signed char* ebp54;
    signed char* ebp55;
    unsigned char tmp8_56;
    int1_t cf57;
    struct s7* ebp58;
    struct s7** ebp59;
    signed char* edi60;
    struct s521* edi61;
    void** esp62;
    struct s6* eax63;
    struct s7* eax64;
    struct s7* esp65;
    struct s7** esp66;
    struct s7** esp67;
    struct s7** esp68;
    struct s7** esp69;
    struct s7* esp70;
    int16_t* esp71;
    int16_t es72;
    struct s7* eax73;
    struct s522* esp74;
    void* ss75;
    void* ecx76;
    unsigned char* eax77;
    unsigned char tmp8_78;
    uint1_t cf79;
    signed char** esp80;
    signed char** esp81;
    signed char** esp82;
    void* esp83;
    struct s7** esp84;
    struct s7** esp85;
    struct s7* tmp32_86;
    struct s7* eax87;
    struct s523* esp88;
    struct s524* eax89;
    void** esp90;
    void** esp91;
    struct s7** esp92;
    struct s525* edi93;
    int32_t edi94;
    struct s526* ebp95;
    int32_t ebp96;
    struct s527* ebx97;

    esp2 = reinterpret_cast<int32_t*>(__zero_stack_offset());
    eax3 = reinterpret_cast<struct s511*>(&edi4->f32);
    *ebx5 = reinterpret_cast<signed char>(*ebx6 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
    __asm__("outsd ");
    *ebp7 = reinterpret_cast<signed char>(*ebp8 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 0x6c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 0x6c) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *edi9 = reinterpret_cast<signed char>(*edi10 + dh11);
    __asm__("popad ");
    *ebp13 = reinterpret_cast<signed char>(*ebp14 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 0x6c) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 0x6c) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
    edi17->f101 = reinterpret_cast<unsigned char>(edi18->f101 + *reinterpret_cast<unsigned char*>(&eax3));
    zf19 = edi20->f101 == 0;
    if (zf19) {
        addr_10008405_6:
        *edi21 = reinterpret_cast<signed char>(*edi22 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        *bx23 = reinterpret_cast<signed char>(*bx24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        __asm__("outsb ");
        *ebp25 = reinterpret_cast<signed char>(*ebp26 + dl27);
        ecx = reinterpret_cast<struct s510*>(reinterpret_cast<int32_t>(ecx) - 1);
        *edx28 = reinterpret_cast<unsigned char>(*edx29 + *reinterpret_cast<unsigned char*>(&eax3));
        ++esi30;
        eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 83) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 83) + dl31);
        *esi30 = reinterpret_cast<signed char>(*esi30 + dl32);
        eax3 = reinterpret_cast<struct s511*>(reinterpret_cast<uint32_t>(eax3) - 1);
        tmp8_33 = reinterpret_cast<unsigned char>(*edi34 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        cf35 = tmp8_33 < *edi36;
        *edi37 = tmp8_33;
        zf38 = *edi39 == 0;
    } else {
        if (!zf19) 
            goto addr_1000843a_8;
        __asm__("outsd ");
        --esp2;
        if (__intrinsic()) 
            goto addr_1000842e_10; else 
            goto addr_100083ca_11;
    }
    addr_10008424_12:
    edx40 = &edx41->f1;
    *ebp42 = reinterpret_cast<signed char>(*ebp43 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
    --esp2;
    *esp2 = 0x76006100;
    addr_1000842e_10:
    ecx->f0 = reinterpret_cast<signed char>(ecx->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    goto addr_10008432_14;
    addr_100083ca_11:
    __asm__("popad ");
    if (zf19) {
        addr_10008432_14:
        __asm__("outsd ");
        *edx40 = reinterpret_cast<signed char>(*edx40 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx40) + 1));
        eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
    } else {
        esi30 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi44) - 1);
        __asm__("outsd ");
        if (!esi30) 
            goto addr_1000843a_8;
        *reinterpret_cast<int16_t*>(&esp2) = reinterpret_cast<int16_t>(ebx45->f97 * 0x6974);
        __asm__("outsd ");
        __asm__("outsb ");
        eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
        edi46->f101 = reinterpret_cast<unsigned char>(edi47->f101 + *reinterpret_cast<unsigned char*>(&eax3));
        zf38 = edi48->f101 == 0;
        if (zf38) 
            goto addr_10008424_12; else 
            goto addr_100083e0_17;
    }
    do {
        ++ebx49;
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3) + 0x69) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        addr_1000843a_8:
        *ebx49 = reinterpret_cast<signed char>(*ebx49 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
        eax3 = reinterpret_cast<struct s511*>(eax3->f0 * 84);
        do {
            tmp8_50 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
            cf51 = tmp8_50 < eax3->f0;
            eax3->f0 = tmp8_50;
            __asm__("outsd ");
            *ebp52 = reinterpret_cast<signed char>(*ebp53 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx40) + 1));
            *reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebx49) + *reinterpret_cast<int16_t*>(&esi30)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebx49) + *reinterpret_cast<int16_t*>(&esi30)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
            ++edx40;
            *ebp54 = reinterpret_cast<signed char>(*ebp55 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
            --esp2;
            *esp2 = 0x76006100;
            addr_10008456_21:
            addr_10008457_22:
            ecx->f0 = reinterpret_cast<signed char>(ecx->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
            addr_1000845b_23:
            __asm__("outsd ");
            *edx40 = reinterpret_cast<signed char>(*edx40 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx40) + 1));
            eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            addr_10008463_24:
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) - 0x64d1dcf6) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) - 0x64d1dcf6) >> 1;
            if (!*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) - 0x64d1dcf6)) 
                break;
            *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax3) + 0x25617f6a) = *reinterpret_cast<unsigned char*>(&eax3);
            __asm__("fmul st3, st0");
            *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax3)));
            eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            __asm__("rol byte [eax], 0x0");
            eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            tmp8_56 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
            cf57 = tmp8_56 < eax3->f0;
            eax3->f0 = tmp8_56;
            ++esi30;
        } while (cf57);
        break;
    } while (0);
    goto addr_100084b1_27;
    __asm__("retf ");
    addr_100084b1_27:
    __asm__("aam 0xad");
    ebp58 = *ebp59;
    __asm__("rcr dword [es:edi-0x2e], 1");
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) + 71);
    __asm__("int 0x4f");
    edi60 = &edi61->f4;
    esp62 = reinterpret_cast<void**>(ebp59 + 4 - 4);
    *esp62 = reinterpret_cast<void*>(esi30 + 4);
    eax63 = reinterpret_cast<struct s6*>(reinterpret_cast<uint32_t>(eax3) ^ 0x94be9322);
    if (!eax63) {
        addr_10008510_32:
        eax63->f0 = reinterpret_cast<signed char>(eax63->f0 + *reinterpret_cast<signed char*>(&eax63));
        eax63->f0 = reinterpret_cast<signed char>(eax63->f0 + *reinterpret_cast<signed char*>(&edx40));
        eax64 = reinterpret_cast<struct s7*>(&eax63->f1);
        esp65 = reinterpret_cast<struct s7*>(esp62 - 1);
        *reinterpret_cast<struct s7**>(&esp65->f0) = ebp58;
        esp66 = &(esp65 - 2)->f0;
        *esp66 = ebp58;
        esp67 = esp66 - 4;
        *esp67 = ebp58;
        esp68 = esp67 - 4;
        *esp68 = ebp58;
        esp69 = esp68 - 4;
        *esp69 = ebp58;
        ++edi60;
        goto addr_1000851f_33;
    } else {
        *reinterpret_cast<signed char*>(&edx40) = -4;
        esp70 = reinterpret_cast<struct s7*>(esp62 - 1);
        *reinterpret_cast<struct s7**>(&esp70->f0) = esp70;
        gecd3b447 = *reinterpret_cast<signed char*>(&eax63);
        __asm__("retf ");
        __asm__("out 0x75, eax");
        __asm__("cdq ");
        g2710 = *reinterpret_cast<signed char*>(&eax63);
        esp71 = reinterpret_cast<int16_t*>(&(esp70 - 1)->f0);
        *esp71 = es72;
        __asm__("fucomp st4");
        eax73 = reinterpret_cast<struct s7*>(&eax63->f1);
        ecx->f92 = eax73;
        eax64 = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(eax73) - 0x4db58cf9);
        esp74 = reinterpret_cast<struct s522*>(esp71 - 1);
        esp74->f0 = ss75;
        ecx76 = esp74->f0;
        esp69 = &esp74->f4;
        if (__undefined()) {
            addr_1000851f_33:
            eax77 = &eax64->f1;
            *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<signed char*>(&eax77));
            *eax77 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<signed char*>(&eax77));
            tmp8_78 = reinterpret_cast<unsigned char>(*eax77 + *reinterpret_cast<signed char*>(&eax77));
            cf79 = reinterpret_cast<uint1_t>(tmp8_78 < *eax77);
            *eax77 = tmp8_78;
            esp80 = reinterpret_cast<signed char**>(esp69 + 4 - 4);
            *esp80 = edx40;
            esp81 = esp80 - 1;
            *esp81 = ebx49;
            esp82 = reinterpret_cast<signed char**>(reinterpret_cast<uint32_t>(esp81) + 1 - 4);
            *esp82 = ebx49;
            *reinterpret_cast<uint32_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx49) + *reinterpret_cast<int16_t*>(&edi60)) + 17) = *reinterpret_cast<int32_t*>(reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&ebx49) + *reinterpret_cast<int16_t*>(&edi60)) + 17) + reinterpret_cast<int32_t>(ebx49) + cf79;
            __asm__("daa ");
            esp83 = reinterpret_cast<void*>(esp82 + 1);
            if (__intrinsic()) 
                goto 0x10008593;
        } else {
            esp84 = esp69 - 4;
            *esp84 = ebp58;
            esp85 = esp84 - 4;
            *esp85 = ebp58;
            tmp32_86 = ebp58;
            ebp58 = eax64;
            eax87 = tmp32_86;
            __asm__("aas ");
            *reinterpret_cast<struct s7**>(&eax87->f0) = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s7**>(&eax87->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax87)));
            *reinterpret_cast<struct s7**>(&eax87->f0) = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s7**>(&eax87->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax87)));
            *reinterpret_cast<struct s7**>(&eax87->f0) = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s7**>(&eax87->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax87)));
            *edi60 = reinterpret_cast<signed char>(*edi60 >> 1);
            *reinterpret_cast<struct s7**>(&eax87->f0) = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s7**>(&eax87->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax87)));
            *reinterpret_cast<struct s7**>(&eax87->f0) = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s7**>(&eax87->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax87)));
            *reinterpret_cast<struct s7**>(&eax87->f0) = reinterpret_cast<struct s7*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s7**>(&eax87->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax87)));
            esp88 = reinterpret_cast<struct s523*>(esp85 - 4);
            esp88->f0 = 0x10008513;
            eax63 = fun_10008552(ecx76);
            esp62 = &esp88->f4;
            goto addr_10008510_32;
        }
    }
    eax89 = reinterpret_cast<struct s524*>(eax77 + 1 + 1);
    eax89->f336 = eax89->f336;
    __asm__("popad ");
    if (eax89->f336) {
        esp90 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp83) - 4);
        *reinterpret_cast<void***>(esp90) = esp90;
        *reinterpret_cast<unsigned char*>(&eax89) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax89) & 88);
        eax89->f0 = reinterpret_cast<unsigned char>(eax89->f0 + *reinterpret_cast<unsigned char*>(&eax89));
        eax89->f0 = reinterpret_cast<unsigned char>(eax89->f0 + *reinterpret_cast<unsigned char*>(&eax89));
    } else {
        esp91 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp83) - 4);
        *reinterpret_cast<void***>(esp91) = reinterpret_cast<void**>(0x702e6975);
        eax89->f0 = reinterpret_cast<unsigned char>(eax89->f0 + *reinterpret_cast<unsigned char*>(&eax89));
        esp92 = reinterpret_cast<struct s7**>(esp91 - 1);
        *esp92 = ebp58;
        *reinterpret_cast<struct s524**>(esp92 - 4) = eax89;
        eax89->f0 = reinterpret_cast<unsigned char>(eax89->f0 + *reinterpret_cast<signed char*>(&edx40));
    }
    addr_100083e0_17:
    __asm__("popad ");
    if (edi93->f101 >= 0) 
        goto addr_10008456_21;
    --esp2;
    *esp2 = edi94;
    __asm__("popad ");
    esi30 = reinterpret_cast<signed char*>(ebp95->f100 * 0x41726f46);
    if (!__undefined()) 
        goto addr_10008463_24;
    __asm__("outsd ");
    --esp2;
    *esp2 = ebp96;
    if (__intrinsic()) 
        goto addr_10008457_22;
    __asm__("popad ");
    if (__undefined()) 
        goto addr_1000845b_23;
    --esi30;
    __asm__("outsd ");
    if (!esi30) 
        goto addr_10008463_24;
    *reinterpret_cast<int16_t*>(&esp2) = reinterpret_cast<int16_t>(ebx97->f97 * 0x6974);
    __asm__("outsd ");
    __asm__("outsb ");
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
    esp2 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp2) - 1);
    goto addr_10008405_6;
}

int32_t fun_b5e2f366(int32_t a1, int32_t a2);

void fun_10008488(int32_t ecx) {
    int32_t eax2;
    signed char* edi3;
    signed char* edi4;

    __asm__("aaa ");
    __asm__("rol dword [edi+ecx*2+0x3afb3785], 1");
    eax2 = fun_b5e2f366(ecx, __return_address());
    *edi3 = reinterpret_cast<signed char>(*edi4 - *reinterpret_cast<signed char*>(&eax2));
}

void fun_1001efcb() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t eax6;
    int32_t eax7;
    signed char dh8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<signed char*>(eax6 + 0xffffff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax7 + 0xffffff) + dh8);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
}

signed char g1000;

void fun_1001efdb() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<signed char*>(&eax6) = g1000;
    *eax6 = reinterpret_cast<signed char>(*eax6 + *reinterpret_cast<signed char*>(&eax6));
}

void fun_1001eff0() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001effc() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f008() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f014() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f020() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f02c() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f038() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f044() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f04b() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f053() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f05b() {
    int32_t* ebx1;

    goto *ebx1;
}

void fun_1001f06b(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f073() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

struct s528 {
    signed char[1] pad1;
    signed char f1;
};

void fun_1001f07b() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t edx6;
    int32_t edx7;
    signed char dl8;
    signed char* eax9;
    signed char* eax10;
    signed char dl11;
    signed char* eax12;
    struct s528* eax13;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<signed char*>(edx6 - 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx7 - 92) + dl8);
    *eax9 = reinterpret_cast<signed char>(*eax10 + dl11);
    eax12 = &eax13->f1;
    *eax12 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    *eax12 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    *eax12 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    *eax12 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    *eax12 = reinterpret_cast<signed char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
}

void fun_1001f097() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f09f(signed char* ecx) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    signed char al19;
    signed char* eax20;
    signed char* eax21;
    signed char al22;
    signed char al23;
    signed char* eax24;
    signed char* eax25;
    signed char al26;
    unsigned char tmp8_27;
    int32_t eax28;
    int32_t esi29;
    signed char al30;
    uint1_t cf31;
    int32_t eax32;
    int32_t esi33;
    int32_t eax34;
    int32_t esi35;
    signed char* eax36;
    signed char* ebx37;
    uint32_t* edx38;
    int32_t* edx39;
    uint32_t* edx40;
    int32_t esi41;
    int32_t esi42;
    signed char dl43;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *ecx = reinterpret_cast<signed char>(*ecx + al19);
    *eax20 = reinterpret_cast<signed char>(*eax21 + al22);
    *ecx = reinterpret_cast<signed char>(*ecx + al23);
    *eax24 = reinterpret_cast<signed char>(*eax25 + al26);
    tmp8_27 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(eax28 + esi29 * 8 + 0x5221001) + al30);
    cf31 = reinterpret_cast<uint1_t>(tmp8_27 < *reinterpret_cast<unsigned char*>(eax32 + esi33 * 8 + 0x5221001));
    *reinterpret_cast<unsigned char*>(eax34 + esi35 * 8 + 0x5221001) = tmp8_27;
    eax36 = ebx37;
    *edx38 = *edx39 - (reinterpret_cast<int32_t>(eax36) + reinterpret_cast<uint1_t>(*edx40 < reinterpret_cast<int32_t>(eax36) + cf31));
    *eax36 = reinterpret_cast<signed char>(*eax36 + *reinterpret_cast<signed char*>(&eax36));
    (eax36 + esi41 * 8)[0x11001] = reinterpret_cast<signed char>((eax36 + esi42 * 8)[0x11001] + dl43);
    *eax36 = reinterpret_cast<signed char>(*eax36 + *reinterpret_cast<signed char*>(&eax36));
}

void fun_1001f0cc() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;
    int32_t* eax19;
    int32_t* eax20;
    int32_t eax21;
    signed char* eax22;
    signed char* eax23;
    signed char al24;
    signed char* eax25;
    signed char* eax26;
    signed char al27;
    signed char* eax28;
    signed char* eax29;
    signed char al30;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    *eax19 = *eax20 + eax21;
    *eax22 = reinterpret_cast<signed char>(*eax23 + al24);
    *eax25 = reinterpret_cast<signed char>(*eax26 + al27);
    *eax28 = reinterpret_cast<signed char>(*eax29 + al30);
}

void fun_1001f0e3() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f0eb() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

int32_t g1b1000b7;

void fun_1001f0f3() {
    unsigned char* eax1;
    signed char* eax2;
    signed char al3;
    uint1_t cf4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;

    ++g1b1000b7;
    *eax1 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*eax2 + al3) + cf4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
}

void fun_1001f103() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f10b() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f113() {
    int32_t eax1;
    signed char* eax2;
    signed char dl3;

    eax2 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(eax1 - 69)(__return_address()));
    *eax2 = reinterpret_cast<signed char>(*eax2 + dl3);
}

void fun_1001f11c() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f123() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f12b() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f133() {
    signed char* eax1;
    signed char* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;

    *eax1 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax2));
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
    __asm__("in al, 0xff");
}

void fun_1001f143() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    int32_t eax6;
    int32_t eax7;
    signed char ah8;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *reinterpret_cast<signed char*>(eax6 - 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax7 - 1) + ah8);
}

void fun_1001f14b() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f153() {
    int32_t eax1;

    goto eax1;
}

void fun_1001f16b() {
    int32_t* ebx1;
    signed char* eax2;
    signed char dl3;

    eax2 = reinterpret_cast<signed char*>(*ebx1(__return_address()));
    *eax2 = reinterpret_cast<signed char>(*eax2 + dl3);
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
    *eax2 = reinterpret_cast<signed char>(*eax2 + *reinterpret_cast<signed char*>(&eax2));
}

void fun_1001f17b() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f183() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f18b() {
    return;
}

void fun_1001f194() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f19b(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f1a3() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f1ab() {
    int32_t ebx1;

    goto ebx1;
}

void fun_1001f1b4() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f1bb(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f1c3() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f1cb() {
    int32_t* edi1;
    signed char* eax2;
    signed char dl3;

    eax2 = reinterpret_cast<signed char*>(*edi1(__return_address()));
    *eax2 = reinterpret_cast<signed char>(*eax2 + dl3);
}

void fun_1001f1d7() {
    int32_t edx1;

    goto edx1;
}

void fun_1001f1e3(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax2 = *eax3 + 1;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_1001f1eb() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
}

void fun_1001f1f3() {
    int32_t eax1;
    signed char* eax2;
    signed char dl3;

    eax2 = reinterpret_cast<signed char*>(*reinterpret_cast<int32_t*>(eax1 - 61)(__return_address()));
    *eax2 = reinterpret_cast<signed char>(*eax2 + dl3);
}

void fun_1001f1fc() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

struct s529 {
    unsigned char f0;
    signed char f1;
};

struct s530 {
    unsigned char f0;
    signed char[1610613238] pad1610613239;
    signed char f1610613239;
};

signed char gc8000284;

struct s531 {
    signed char f0;
    signed char[49] pad50;
    signed char f50;
};

signed char g83f00284;

struct s532 {
    signed char[1] pad1;
    void* f1;
};

struct s533 {
    unsigned char f0;
    unsigned char f1;
    signed char[47] pad49;
    signed char f49;
};

struct s534 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s535 {
    void* f0;
    unsigned char f1;
};

void* g232;

unsigned char g25f;

void fun_1001f208(struct s529* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;
    signed char* eax11;
    signed char* eax12;
    signed char al13;
    int32_t* eax14;
    int32_t* eax15;
    int32_t eax16;
    signed char* eax17;
    signed char* eax18;
    signed char al19;
    signed char* eax20;
    signed char al21;
    int32_t* eax22;
    unsigned char* eax23;
    unsigned char* edx24;
    signed char* eax25;
    struct s530* eax26;
    unsigned char* edx27;
    signed char dl28;
    signed char tmp8_29;
    signed char tmp8_30;
    signed char tmp8_31;
    signed char tmp8_32;
    signed char tmp8_33;
    signed char tmp8_34;
    signed char dh35;
    struct s531* eax36;
    signed char tmp8_37;
    void* edi38;
    int32_t esi39;
    void* edi40;
    int32_t esi41;
    signed char bh42;
    signed char bh43;
    signed char* eax44;
    signed char* edi45;
    signed char* esi46;
    void** edi47;
    struct s532* edi48;
    struct s533* esi49;
    struct s534* esi50;
    signed char dh51;
    signed char* eax52;
    unsigned char tmp8_53;
    uint1_t cf54;
    struct s535* eax55;
    void* tmp8_56;
    void* tmp8_57;
    void* tmp8_58;
    void* tmp8_59;
    unsigned char tmp8_60;
    void* tmp8_61;
    uint1_t cf62;
    uint32_t* edx63;
    uint32_t* edx64;
    signed char bh65;
    uint32_t* edx66;
    uint32_t* edx67;
    signed char* ecx68;
    int32_t edx69;
    int32_t edx70;
    signed char bh71;
    int32_t edx72;
    int32_t edx73;
    void* tmp8_74;
    void* dh75;
    unsigned char* edx76;
    signed char bl77;
    void* tmp32_78;
    uint1_t cf79;
    int1_t less80;
    void* bh81;
    signed char bh82;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    *eax11 = reinterpret_cast<signed char>(*eax12 + al13);
    *eax14 = *eax15 + eax16;
    *eax17 = reinterpret_cast<signed char>(*eax18 + al19);
    *reinterpret_cast<signed char*>(&eax20) = reinterpret_cast<signed char>(static_cast<int32_t>(al21));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(eax20) * 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + reinterpret_cast<int32_t>(eax20) * 2) + *reinterpret_cast<signed char*>(&eax20));
    *reinterpret_cast<signed char*>(&eax22) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax20) + *eax20);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax22) - 0xceffffe) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax22) - 0xceffffe) + *reinterpret_cast<signed char*>(&eax22));
    *eax22 = *eax22 + reinterpret_cast<int32_t>(eax22);
    eax23 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax22) - 1);
    *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) ^ *edx24);
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<unsigned char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<unsigned char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<unsigned char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<unsigned char*>(&eax23));
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + *reinterpret_cast<unsigned char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<unsigned char*>(&eax23));
    *eax23 = reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<unsigned char*>(&eax23));
    eax25 = reinterpret_cast<signed char*>(eax23 - 0x44080000);
    *reinterpret_cast<signed char*>(&eax25) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax25) + *eax25);
    eax26 = reinterpret_cast<struct s530*>(static_cast<int32_t>(*reinterpret_cast<int16_t*>(&eax25)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax26) + 0x600001f7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax26) + 0x600001f7) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<unsigned char*>(&eax26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax26) ^ *edx27);
    eax26->f0 = reinterpret_cast<unsigned char>(eax26->f0 + *reinterpret_cast<unsigned char*>(&eax26));
    eax26->f0 = reinterpret_cast<unsigned char>(eax26->f0 + *reinterpret_cast<unsigned char*>(&eax26));
    eax26->f0 = reinterpret_cast<unsigned char>(eax26->f0 + *reinterpret_cast<unsigned char*>(&eax26));
    eax26->f0 = reinterpret_cast<unsigned char>(eax26->f0 + *reinterpret_cast<unsigned char*>(&eax26));
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + *reinterpret_cast<unsigned char*>(&eax26));
    eax26->f0 = reinterpret_cast<unsigned char>(eax26->f0 + *reinterpret_cast<unsigned char*>(&eax26));
    eax26->f0 = reinterpret_cast<unsigned char>(eax26->f0 + dl28);
    tmp8_29 = reinterpret_cast<signed char>(gc8000284 - 0x7c);
    gc8000284 = tmp8_29;
    tmp8_30 = reinterpret_cast<signed char>(gc8000284 - 0x7c);
    gc8000284 = tmp8_30;
    tmp8_31 = reinterpret_cast<signed char>(gc8000284 - 0x7c);
    gc8000284 = tmp8_31;
    tmp8_32 = reinterpret_cast<signed char>(gc8000284 - 0x7c);
    gc8000284 = tmp8_32;
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 - 0x7c);
    tmp8_33 = reinterpret_cast<signed char>(gc8000284 - 0x7c);
    gc8000284 = tmp8_33;
    tmp8_34 = reinterpret_cast<signed char>(gc8000284 + dh35);
    gc8000284 = tmp8_34;
    eax36 = reinterpret_cast<struct s531*>(0x83f00284);
    tmp8_37 = reinterpret_cast<signed char>(0x7c - g83f00284);
    *reinterpret_cast<signed char*>(&eax36) = tmp8_37;
    __asm__("insb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi38) + esi39 * 8 + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi40) + esi41 * 8 + 1) + bh42);
    eax36->f50 = reinterpret_cast<signed char>(eax36->f50 + bh43);
    *reinterpret_cast<signed char*>(&eax36) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax36) + eax36->f0);
    eax36->f0 = reinterpret_cast<signed char>(eax36->f0 + *reinterpret_cast<signed char*>(&eax36));
    eax36->f0 = reinterpret_cast<signed char>(eax36->f0 + *reinterpret_cast<signed char*>(&eax36));
    eax36->f0 = reinterpret_cast<signed char>(eax36->f0 + *reinterpret_cast<signed char*>(&eax36));
    eax36->f0 = reinterpret_cast<signed char>(eax36->f0 + *reinterpret_cast<signed char*>(&eax36));
    eax36->f0 = reinterpret_cast<signed char>(eax36->f0 + reinterpret_cast<int32_t>(eax36));
    eax36->f0 = reinterpret_cast<signed char>(eax36->f0 + *reinterpret_cast<signed char*>(&eax36));
    eax44 = reinterpret_cast<signed char*>(&eax36->pad50 - 0x11050000);
    *reinterpret_cast<signed char*>(&eax44) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax44) + *eax44);
    *edi45 = *esi46;
    edi47 = &edi48->f1;
    esi49 = reinterpret_cast<struct s533*>(&esi50->f1);
    *reinterpret_cast<signed char*>(edi47 + reinterpret_cast<int32_t>(esi49) * 8 + 0x32a40001) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi47 + reinterpret_cast<int32_t>(esi49) * 8 + 0x32a40001) + dh51);
    *reinterpret_cast<signed char*>(&eax44) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax44) + *eax44);
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + reinterpret_cast<int32_t>(eax44));
    *eax44 = reinterpret_cast<signed char>(*eax44 + *reinterpret_cast<signed char*>(&eax44));
    eax52 = eax44 - 0x44180000;
    tmp8_53 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax52) + *eax52);
    cf54 = reinterpret_cast<uint1_t>(tmp8_53 < *reinterpret_cast<unsigned char*>(&eax52));
    *reinterpret_cast<unsigned char*>(&eax52) = tmp8_53;
    *reinterpret_cast<unsigned char*>(eax52 - 0xcd7fffe) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax52 - 0xcd7fffe) - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax52) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax52 - 0xcd7fffe) < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax52) + cf54))));
    *eax52 = reinterpret_cast<signed char>(*eax52 + reinterpret_cast<int32_t>(eax52));
    eax55 = reinterpret_cast<struct s535*>(0x232);
    tmp8_56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g232) + 50);
    g232 = tmp8_56;
    tmp8_57 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g232) + 50);
    g232 = tmp8_57;
    tmp8_58 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g232) + 50);
    g232 = tmp8_58;
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + 50);
    tmp8_59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g232) + 50);
    g232 = tmp8_59;
    tmp8_60 = reinterpret_cast<unsigned char>(g25f + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax55) + 1));
    g25f = tmp8_60;
    tmp8_61 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g232) + 50);
    cf62 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_61) < reinterpret_cast<unsigned char>(g232));
    g232 = tmp8_61;
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(50 - reinterpret_cast<unsigned char>(68 + reinterpret_cast<uint1_t>(50 < reinterpret_cast<unsigned char>(68 + cf62))));
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0)) ^ 0x84);
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    ecx->f1 = reinterpret_cast<signed char>(ecx->f1 + *reinterpret_cast<signed char*>(&ecx));
    *reinterpret_cast<unsigned char*>(&(eax55 + 0xc00000a4)->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&(eax55 + 0xc00000a4)->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    ecx->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(ecx->f0));
    esi49->f1 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(esi49->f1));
    eax55->f1 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax55->f1))));
    eax55->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax55->f0)));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *edx63 = *edx64 ^ reinterpret_cast<uint32_t>(eax55);
    esi49->f49 = reinterpret_cast<signed char>(esi49->f49 + bh65);
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
    *edx66 = *edx67 ^ reinterpret_cast<uint32_t>(eax55);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(esi49)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(esi49)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
    ecx68 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) - 1);
    if (reinterpret_cast<uint1_t>(!!ecx68) & reinterpret_cast<uint1_t>(!!*reinterpret_cast<void**>(&eax55))) {
        *reinterpret_cast<signed char*>(edx69 - 0x27fffe07) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx70 - 0x27fffe07) + bh71);
        eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
        __asm__("cli ");
        eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
        edx72 = edx73 + 1;
        __asm__("cli ");
        eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
        *reinterpret_cast<signed char*>(edx72 - 0x43fffe06) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx72 - 0x43fffe06) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx72) + 1));
    } else {
        *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
        tmp8_74 = eax55->f0;
        eax55->f0 = dh75;
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx76) + 1) = tmp8_74;
        *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
        *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
        *edx76 = reinterpret_cast<unsigned char>(*edx76 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
        esi49->f0 = reinterpret_cast<unsigned char>(esi49->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx68)));
        *edx76 = reinterpret_cast<unsigned char>(*edx76 ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax55) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax55) + 1) + bl77);
        __asm__("das ");
        *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
        *edi47 = *reinterpret_cast<void**>(&eax55);
        __asm__("das ");
        *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(eax55->f0));
        if (!__intrinsic()) 
            goto addr_1001f356_10;
    }
    __asm__("cli ");
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    __asm__("in al, dx");
    __asm__("cli ");
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    __asm__("pushad ");
    __asm__("sti ");
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    __asm__("sti ");
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    __asm__("enter 0x1fb, 0x0");
    __asm__("repne sti ");
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) ^ 0xfc);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    __asm__("fdivr st0, st4");
    tmp32_78 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    cf79 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_78) < reinterpret_cast<unsigned char>(eax55->f0));
    eax55->f0 = tmp32_78;
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) - reinterpret_cast<unsigned char>(3 - reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) < reinterpret_cast<unsigned char>(3 - cf79))));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    less80 = reinterpret_cast<signed char>(eax55->f0) < reinterpret_cast<signed char>(0) != __intrinsic();
    do {
    } while (less80);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) ^ 0xfe);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    *ecx68 = reinterpret_cast<signed char>(*ecx68 + 1);
    *reinterpret_cast<unsigned char*>(&(eax55 + 0xd10000ff)->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&(eax55 + 0xd10000ff)->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *ecx68 = reinterpret_cast<signed char>(*ecx68 + 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax55) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax55) + 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *ecx68 = reinterpret_cast<signed char>(*ecx68 + 1);
    *ecx68 = reinterpret_cast<signed char>(*ecx68 + 1);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx68)));
    *ecx68 = reinterpret_cast<signed char>(*ecx68 + 1);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<unsigned char>(bh81));
    *ecx68 = reinterpret_cast<signed char>(*ecx68 + 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax55) + 0xffffffff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax55) + 0xffffffff) + bh82);
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax55) + 1) = 0xff;
    eax55->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax55->f0) + reinterpret_cast<uint32_t>(eax55));
    __asm__("hlt ");
    addr_1001f356_10:
}

void fun_ac002189(signed char cl, int32_t a2);

void fun_1001f359(signed char cl) {
    uint32_t tmp32_2;
    int32_t* eax3;
    int32_t eax4;
    int1_t cf5;
    uint32_t* eax6;
    uint32_t* eax7;
    int32_t* eax8;
    int32_t* eax9;
    int32_t eax10;
    int32_t* eax11;
    int32_t* eax12;
    int32_t eax13;
    signed char bh14;

    tmp32_2 = reinterpret_cast<uint32_t>(*eax3 + eax4);
    cf5 = tmp32_2 < *eax6;
    *eax7 = tmp32_2;
    if (cf5) 
        goto 0x1001f357;
    *eax8 = *eax9 + eax10;
    *eax11 = *eax12 + eax13;
    fun_ac002189(bh14, __return_address());
}

struct s536 {
    signed char f0;
    signed char[41] pad42;
    signed char f42;
};

void fun_1001f6d9(int16_t cx) {
    int32_t* edx2;
    int32_t* edx3;
    int32_t eax4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    struct s536* eax8;
    signed char al9;
    signed char* edx10;
    signed char dl11;
    int32_t eax12;
    int32_t edx13;
    int32_t ebx14;
    int32_t ebp15;
    int32_t ebx16;
    int32_t ebp17;
    int32_t edx18;
    int32_t ebx19;
    int32_t ebp20;
    int32_t ebx21;
    int32_t ebp22;
    int32_t edi23;
    int32_t ebp24;
    int32_t edi25;
    int32_t ebp26;
    int32_t edi27;
    int32_t ebp28;
    int32_t edi29;
    int32_t ebp30;

    *edx2 = *edx3 - eax4;
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *reinterpret_cast<signed char*>(&eax8) = reinterpret_cast<signed char>(al9 - *edx10);
    eax8->f42 = reinterpret_cast<signed char>(eax8->f42 + dl11);
    *reinterpret_cast<signed char*>(&eax12) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax8) + eax8->f0);
    edx13 = eax12;
    *reinterpret_cast<signed char*>(&edx13) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&edx13) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1));
    *reinterpret_cast<signed char*>(ebx14 + ebp15) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx16 + ebp17) + *reinterpret_cast<signed char*>(&cx));
    edx18 = edx13 - 1;
    *reinterpret_cast<signed char*>(ebx19 + ebp20 + 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx21 + ebp22 + 2) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1));
    *reinterpret_cast<signed char*>(edx18 - 0x45fffdd5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx18 - 0x45fffdd5) + *reinterpret_cast<signed char*>(&edx18));
    *reinterpret_cast<signed char*>(edi23 + ebp24 + 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi25 + ebp26 + 2) + *reinterpret_cast<signed char*>(&cx));
    *reinterpret_cast<signed char*>(edi27 + ebp28) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi29 + ebp30) + *reinterpret_cast<signed char*>(&edx18));
}

unsigned char g8e0001f8;

void fun_1001f785(signed char cl) {
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t* eax5;
    int32_t* eax6;
    int32_t eax7;
    unsigned char* eax8;
    unsigned char tmp32_9;
    int1_t cf10;

    *eax2 = *eax3 + eax4;
    *eax5 = *eax6 + eax7;
    *reinterpret_cast<unsigned char*>(&eax8) = g8e0001f8;
    do {
        tmp32_9 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
        cf10 = tmp32_9 < *eax8;
        *eax8 = tmp32_9;
    } while (cf10);
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + *reinterpret_cast<unsigned char*>(&eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + *reinterpret_cast<unsigned char*>(&eax8));
    eax8[0x80000079] = reinterpret_cast<unsigned char>(eax8[0x80000079] + *reinterpret_cast<unsigned char*>(&eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + *reinterpret_cast<unsigned char*>(&eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + *reinterpret_cast<unsigned char*>(&eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
    *eax8 = reinterpret_cast<unsigned char>(*eax8 + reinterpret_cast<uint32_t>(eax8));
}

struct s537 {
    signed char[1] pad1;
    void** f1;
};

struct s538 {
    signed char[1] pad1;
    void** f1;
};

struct s539 {
    signed char[1] pad1;
    void** f1;
};

struct s540 {
    signed char[103] pad103;
    int32_t f103;
};

struct s541 {
    signed char[72] pad72;
    int32_t f72;
    signed char[7] pad83;
    int32_t f83;
};

void** fun_10027066();

struct s542 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s543 {
    void** f0;
    signed char[1] pad2;
    void** f2;
};

int32_t g74654775;

struct s544 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void fun_100223d8(void** ecx) {
    void** esp2;
    int1_t zf3;
    uint1_t zf4;
    void** esp5;
    void** ebp6;
    void** eax7;
    uint1_t cf8;
    uint1_t zf9;
    uint1_t below_or_equal10;
    void** edx11;
    void** eax12;
    uint1_t zf13;
    uint1_t below_or_equal14;
    uint1_t below_or_equal15;
    void** edi16;
    void** esi17;
    struct s537* esi18;
    struct s538* edx19;
    void** esp20;
    void** esp21;
    void** esp22;
    struct s539* eax23;
    struct s540* esi24;
    void** tmp8_25;
    int1_t cf26;
    void** esp27;
    unsigned char* ebx28;
    signed char* ebx29;
    void** esp30;
    void** esp31;
    int1_t zf32;
    void** esp33;
    void** esp34;
    void** esp35;
    void** esp36;
    void** ss37;
    void* bh38;
    void** edx39;
    void** esp40;
    void** esp41;
    void** eax42;
    int1_t zf43;
    void** esp44;
    void** esp45;
    void** esp46;
    uint1_t zf47;
    void** esp48;
    int1_t sf49;
    int1_t of50;
    void** esp51;
    uint1_t zf52;
    uint1_t cf53;
    void** eax54;
    void** esp55;
    void** esp56;
    void** esp57;
    void** ebx58;
    void** esp59;
    void** esp60;
    void** esp61;
    void** esp62;
    int1_t zf63;
    void** esp64;
    void** esp65;
    int1_t zf66;
    int1_t sf67;
    void** esp68;
    void** esp69;
    void** tmp32_70;
    void** esp71;
    uint1_t zf72;
    int1_t of73;
    uint1_t below_or_equal74;
    void** tmp32_75;
    void** esp76;
    void** tmp8_77;
    void** esp78;
    void** esp79;
    void** esp80;
    void** esp81;
    void** tmp8_82;
    void** esp83;
    void** cs84;
    void** esp85;
    void** esp86;
    int1_t zf87;
    int32_t v88;
    void** esp89;
    void** esp90;
    uint1_t zf91;
    void** esp92;
    void** esp93;
    void** esp94;
    void** esp95;
    void** esp96;
    void** esp97;
    void** eax98;
    void** esp99;
    void** esp100;
    void** eax101;
    unsigned char tmp8_102;
    void** esp103;
    void** ebx104;
    void** esp105;
    void** esp106;
    void** esp107;
    void** esp108;
    int1_t of109;
    unsigned char tmp8_110;
    int1_t zf111;
    void* tmp8_112;
    uint1_t zf113;
    uint1_t below_or_equal114;
    void** esp115;
    void** esp116;
    void** esp117;
    void** esp118;
    void** tmp8_119;
    int1_t zf120;
    void** esp121;
    void** esp122;
    unsigned char tmp8_123;
    int1_t zf124;
    int1_t of125;
    void** esp126;
    int1_t zf127;
    int1_t sf128;
    int1_t of129;
    void** esp130;
    void** esp131;
    void** esp132;
    void** edi133;
    void** esp134;
    void** esp135;
    void** esp136;
    void** esp137;
    unsigned char tmp8_138;
    void** eax139;
    void** esp140;
    void** esp141;
    void** esp142;
    void** esp143;
    void** edi144;
    void** esp145;
    void** eax146;
    void** esp147;
    void** edx148;
    void** tmp8_149;
    void** esp150;
    int1_t zf151;
    void** esp152;
    void** esp153;
    void** esp154;
    uint1_t zf155;
    int1_t sf156;
    void** esp157;
    void** esp158;
    uint1_t below_or_equal159;
    int1_t zf160;
    void** esp161;
    void** eax162;
    void** esp163;
    void** eax164;
    void** eax165;
    void** esp166;
    void** esp167;
    void** esp168;
    void** eax169;
    void** esp170;
    unsigned char tmp8_171;
    uint1_t cf172;
    void** esi173;
    uint1_t zf174;
    uint1_t below_or_equal175;
    void** esp176;
    void** tmp8_177;
    void** esp178;
    void** esp179;
    unsigned char tmp8_180;
    void** esp181;
    void** esp182;
    void** edi183;
    int1_t zf184;
    void** tmp8_185;
    int1_t of186;
    void** esp187;
    void** esp188;
    void** tmp32_189;
    uint1_t zf190;
    void** esp191;
    void** esp192;
    void** esp193;
    void** esp194;
    void** esp195;
    void** eax196;
    void** esp197;
    void** esp198;
    void** esp199;
    void** eax200;
    int1_t zf201;
    void** esp202;
    void** eax203;
    void** esp204;
    void** esp205;
    void** esp206;
    void** esp207;
    unsigned char tmp8_208;
    void** esp209;
    void** esp210;
    void** esp211;
    uint1_t zf212;
    void** esp213;
    void** esp214;
    void** eax215;
    void** esp216;
    unsigned char tmp8_217;
    void** esp218;
    void** esp219;
    void** ebx220;
    int1_t sf221;
    void** esp222;
    void** esp223;
    void** esp224;
    void** ebx225;
    unsigned char tmp8_226;
    signed char bh227;
    int1_t zf228;
    void** ebx229;
    void** esp230;
    struct s542* esp231;
    struct s543* esp232;
    void** tmp8_233;
    void* bh234;
    void** es235;
    void* edi236;
    void** esp237;
    void** ebp238;
    void** eax239;
    void** esp240;
    void** esp241;
    void** esp242;
    void** esp243;
    void** esp244;
    void** esp245;
    void** ebx246;
    void* ebx247;
    void** esp248;
    void** edi249;
    void** esp250;
    void** esp251;
    void** eax252;
    void** esp253;
    void** esp254;
    int1_t zf255;
    void** esp256;
    void** esp257;
    int1_t zf258;
    void** esp259;
    void* tmp8_260;
    unsigned char tmp8_261;
    int1_t sf262;
    void** esp263;
    void** esp264;
    void** esp265;
    void** esp266;
    int1_t zf267;
    void** esp268;
    void** esp269;
    void** esp270;
    void** esp271;
    void** eax272;
    void** eax273;
    void** esp274;
    void** esp275;
    void** esp276;
    void** eax277;
    void** tmp32_278;
    int32_t v279;
    void** esp280;
    void** esp281;
    void** esp282;
    void** eax283;
    void** esp284;
    void** esp285;
    void** esp286;
    void** tmp8_287;
    void** esp288;
    void** esp289;
    void** esp290;
    void** esp291;
    void** esp292;
    void** esp293;
    void** tmp8_294;
    void** tmp32_295;
    void** esp296;
    void** esp297;
    void** esp298;
    void** eax299;
    void** esp300;
    void** esp301;
    void** esp302;
    void** esp303;
    void** esp304;
    void** esp305;
    void** esp306;
    void** esp307;
    int1_t zf308;
    void** tmp32_309;
    void** esp310;
    void** esp311;
    void** esp312;
    void** esp313;
    void** tmp8_314;
    int1_t zf315;
    void** esp316;
    void** esp317;
    void** esp318;
    void* esi319;
    void** esp320;
    void** esp321;
    void** esp322;
    unsigned char tmp8_323;
    void** tmp8_324;
    void** esp325;
    void** eax326;
    void** esp327;
    void** eax328;
    void** tmp32_329;
    void** esp330;
    void** esp331;
    void** esp332;
    void** esp333;
    void** esp334;
    unsigned char tmp8_335;
    void** esp336;
    void** esp337;
    void** tmp8_338;
    int1_t zf339;
    void** esp340;
    void** esp341;
    void* tmp8_342;
    void** esp343;
    void** cs344;
    void** esp345;
    void** tmp8_346;
    uint1_t zf347;
    void** esp348;
    struct s544* esp349;
    void** esp350;
    void** esp351;
    void** esp352;
    void** tmp8_353;
    void** tmp8_354;

    esp2 = reinterpret_cast<void**>(__zero_stack_offset());
    __asm__("aas ");
    if (zf3) {
        addr_1002243c_2:
        __asm__("outsb ");
        if (zf4) {
            addr_10022490_3:
            esp5 = esp2 - 4;
            *reinterpret_cast<void***>(esp5) = ebp6;
            eax7 = *reinterpret_cast<void***>(esp5);
            *reinterpret_cast<void***>(eax7) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax7)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
            __asm__("cli ");
        } else {
            addr_10022440_4:
            if (cf8) {
                addr_100224b1_5:
                __asm__("outsb ");
                if (zf4) {
                    addr_10022506_6:
                    ++ebp6;
                    zf9 = reinterpret_cast<uint1_t>(ebp6 == 0);
                    below_or_equal10 = reinterpret_cast<uint1_t>(cf8 | zf9);
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (zf9) {
                        goto addr_10022564_8;
                    }
                } else {
                    if (cf8) {
                        addr_10022527_10:
                        --edx11;
                        --eax12;
                        esp2 = esp2 - 4;
                        *reinterpret_cast<void***>(esp2) = eax12;
                        ++ecx;
                        zf13 = reinterpret_cast<uint1_t>(ecx == 0);
                        below_or_equal14 = reinterpret_cast<uint1_t>(cf8 | zf13);
                        goto addr_1002252b_11;
                    } else {
                        if (below_or_equal15) {
                            addr_10022523_13:
                            ++eax12;
                            esp2 = esp2 - 4;
                            *reinterpret_cast<void***>(esp2) = ebp6;
                            ++ecx;
                            ++edi16;
                            goto addr_10022527_10;
                        } else {
                            addr_100224ba_14:
                            if (cf8) {
                                goto addr_100224ff_16;
                            } else {
                                addr_100224be_17:
                                ++esp2;
                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                cf8 = __intrinsic();
                                eax12 = eax12 + 1 + 1;
                                goto addr_100224c8_18;
                            }
                        }
                    }
                }
            } else {
                if (below_or_equal15) {
                    goto addr_100224ae_21;
                } else {
                    if (cf8) {
                        addr_10022488_23:
                        ++esp2;
                        goto addr_1002248e_24;
                    } else {
                        addr_10022448_25:
                        ++esp2;
                        esi18 = reinterpret_cast<struct s537*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_1002244f_26;
                    }
                }
            }
        }
    } else {
        edx11 = reinterpret_cast<void**>(&edx19->f1);
        __asm__("outsd ");
        if (edx11) {
            addr_1002244f_26:
            eax12 = eax12 + 1 + 1;
            esp20 = esp2 - 4;
            *reinterpret_cast<void***>(esp20) = ebp6;
            ++edi16;
            --edx11;
            esp21 = esp20 - 4;
            *reinterpret_cast<void***>(esp21) = eax12;
            esp22 = esp21 - 4;
            *reinterpret_cast<void***>(esp22) = eax12;
            ecx = ecx + 1 + 1 + 1;
            esp2 = esp22 - 4;
            *reinterpret_cast<void***>(esp2) = ebp6;
            if (!ecx) 
                goto addr_100224be_17; else 
                goto addr_1002245d_28;
        } else {
            cf8 = __intrinsic();
            __asm__("popad ");
            __asm__("outsb ");
            __asm__("a16 insb ");
            eax12 = reinterpret_cast<void**>(&eax23->f1);
            ebp6 = reinterpret_cast<void**>(esi24->f103 * 0x74636552 + 1);
            zf4 = reinterpret_cast<uint1_t>(ebp6 == 0);
            below_or_equal15 = reinterpret_cast<uint1_t>(cf8 | zf4);
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (zf4) 
                goto addr_10022447_34; else 
                goto addr_100223f7_35;
        }
    }
    if (cf8) {
        addr_10022583_37:
        eax12 = eax12 + 1 + 1;
        edx11 = *reinterpret_cast<void***>(esp2);
        esp2 = esp2 + 4;
        tmp8_25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
        cf26 = reinterpret_cast<unsigned char>(tmp8_25) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12));
        *reinterpret_cast<void***>(eax12) = tmp8_25;
    } else {
        if (below_or_equal10) {
            addr_1002257f_39:
            esp27 = esp2 - 4;
            *reinterpret_cast<void***>(esp27) = edx11;
            ecx = *reinterpret_cast<void***>(esp27);
            esp2 = esp27 + 4;
            ++eax12;
            goto addr_10022583_37;
        } else {
            if (cf8) {
                addr_1002255a_41:
                if (zf9) {
                    addr_100225ac_42:
                    edx11 = *reinterpret_cast<void***>(esp2);
                    esp2 = esp2 + 4;
                    *ebx28 = reinterpret_cast<unsigned char>(*ebx29 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
                    goto addr_100225ae_43;
                } else {
                    if (cf8) {
                        addr_100225cd_45:
                        eax12 = *reinterpret_cast<void***>(esp2);
                        esp30 = esp2 + 4;
                        edx11 = *reinterpret_cast<void***>(esp30);
                        esp31 = esp30 + 4;
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<uint16_t>(*reinterpret_cast<void**>(&edi16)));
                        __asm__("aas ");
                        *reinterpret_cast<unsigned char*>(ecx + 0x75) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x75) ^ reinterpret_cast<unsigned char>(eax12));
                        zf32 = *reinterpret_cast<unsigned char*>(ecx + 0x75) == 0;
                        goto addr_100225d9_46;
                    } else {
                        if (below_or_equal10) {
                            addr_100225c9_48:
                            ecx = ecx - 1 + 1;
                            ++ebp6;
                            goto addr_100225cd_45;
                        } else {
                            if (cf8) {
                                addr_100225a4_50:
                                esp33 = esp2 - 4;
                                *reinterpret_cast<void***>(esp33) = ecx;
                                ++ecx;
                                ++ebp6;
                                eax12 = *reinterpret_cast<void***>(esp33);
                                esp2 = esp33 + 4;
                                goto addr_100225ac_42;
                            } else {
                                addr_10022564_8:
                                ++esp2;
                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                goto addr_10022566_51;
                            }
                        }
                    }
                }
            } else {
                ++esp2;
                goto addr_1002251b_53;
            }
        }
    }
    __asm__("aas ");
    __asm__("aas ");
    *reinterpret_cast<unsigned char*>(ebp6 + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp6 + 0x6c) ^ reinterpret_cast<unsigned char>(eax12));
    cf8 = 0;
    zf13 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebp6 + 0x6c) == 0);
    below_or_equal14 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf13));
    goto addr_1002258f_55;
    addr_1002252b_11:
    esp2 = esp2 - 4;
    *reinterpret_cast<void***>(esp2) = ebp6;
    if (zf13) {
        addr_1002258f_55:
        __asm__("insd ");
        __asm__("outsb ");
        if (zf13) {
            addr_100225e5_56:
            esp34 = esp2 - 4;
            *reinterpret_cast<void***>(esp34) = ecx;
            ++ecx;
            ++ebp6;
            eax12 = *reinterpret_cast<void***>(esp34);
            esp35 = esp34 + 4;
            edx11 = *reinterpret_cast<void***>(esp35);
            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
            esp36 = esp35 + 4 - 2;
            *reinterpret_cast<void***>(esp36) = ss37;
            *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<unsigned char>(bh38));
            __asm__("aas ");
            *reinterpret_cast<unsigned char*>(ecx + 0x75) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x75) ^ reinterpret_cast<unsigned char>(eax12));
            if (!*reinterpret_cast<unsigned char*>(ecx + 0x75)) {
                addr_1002266a_57:
                ++ebp6;
                edx39 = edx11 - 1;
                esp40 = esp36 - 4;
                *reinterpret_cast<void***>(esp40) = eax12;
                ecx = ecx + 1 + 1;
                esp41 = esp40 - 4;
                *reinterpret_cast<void***>(esp41) = esi17;
                *reinterpret_cast<void***>(edx39) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx39)) ^ reinterpret_cast<unsigned char>(esi17));
                eax42 = eax12 + 1 + 1;
                edx11 = *reinterpret_cast<void***>(esp41);
                *reinterpret_cast<signed char*>(edx11 + 0x6e493f09) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edx11 + 0x6e493f09) + *reinterpret_cast<signed char*>(&eax42));
                esi17 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx + reinterpret_cast<unsigned char>(ebp6) * 2) + 97) * 0x657a696c);
                cf8 = __intrinsic();
                eax12 = eax42 + 1;
                zf43 = eax12 == 0;
                esp2 = esp41 + 4 - 4;
                *reinterpret_cast<void***>(esp2) = esp2;
                __asm__("outsd ");
                if (!zf43) {
                    addr_100226eb_58:
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (zf43) {
                        addr_10022732_59:
                        __asm__("popad ");
                        if (zf43) {
                            if (zf43) {
                                addr_1002277c_62:
                                esp44 = esp2 - 4;
                                *reinterpret_cast<void***>(esp44) = ebp6;
                                ++ebp6;
                                eax12 = *reinterpret_cast<void***>(esp44);
                                esp45 = esp44 + 4 - 4;
                                *reinterpret_cast<void***>(esp45) = eax12;
                                esp46 = esp45 - 4;
                                *reinterpret_cast<void***>(esp46) = ebp6;
                                ecx = ecx + 1 + 1 - 1;
                                zf47 = reinterpret_cast<uint1_t>(ecx == 0);
                                __asm__("outsb ");
                                if (__intrinsic()) {
                                    addr_100227ff_63:
                                    eax12 = *reinterpret_cast<void***>(esp46);
                                    esp48 = esp46 + 4;
                                    edx11 = *reinterpret_cast<void***>(esp48);
                                    *reinterpret_cast<void***>(esi17) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)));
                                    cf8 = 0;
                                    edi16 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edi16) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16))) - 1);
                                    sf49 = reinterpret_cast<signed char>(edi16) < reinterpret_cast<signed char>(0);
                                    of50 = __intrinsic();
                                    __asm__("outsb ");
                                    esp2 = esp48 + 4 - 4;
                                    *reinterpret_cast<void***>(esp2) = eax12;
                                    if (0) {
                                        addr_10022879_64:
                                        esp51 = esp2 - 4;
                                        *reinterpret_cast<void***>(esp51) = eax12;
                                        ++ecx;
                                        esp2 = esp51 - 4;
                                        *reinterpret_cast<void***>(esp2) = ebp6;
                                        ++ebp6;
                                        zf52 = reinterpret_cast<uint1_t>(ebp6 == 0);
                                        if (cf8 | zf52) {
                                            addr_100228e4_65:
                                            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                            cf53 = __intrinsic();
                                            eax54 = eax12 + 1 + 1;
                                            esp55 = esp2 - 4;
                                            *reinterpret_cast<void***>(esp55) = ebp6;
                                            ++ebp6;
                                            __asm__("aas ");
                                            ecx = ecx + 1 + 1;
                                            esp56 = esp55 - 4;
                                            *reinterpret_cast<void***>(esp56) = ebp6;
                                            if (!ecx) {
                                                addr_10022956_66:
                                                *reinterpret_cast<void***>(eax54) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax54)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax54)));
                                                goto label_67;
                                            } else {
                                                esp57 = esp56 - 4;
                                                *reinterpret_cast<void***>(esp57) = ebx58;
                                                edx11 = *reinterpret_cast<void***>(esp57);
                                                ++ebp6;
                                                eax12 = eax54 + 1 + 1 - 1 - 1;
                                                esp59 = esp57 + 4 - 4;
                                                *reinterpret_cast<void***>(esp59) = eax12;
                                                ecx = ecx - 1 + 1;
                                                esp60 = esp59 - 4;
                                                *reinterpret_cast<void***>(esp60) = esi17;
                                                esp2 = esp60 - 4;
                                                *reinterpret_cast<void***>(esp2) = ebx58;
                                                if (ecx) {
                                                    addr_10022976_69:
                                                    esp61 = esp2 - 4;
                                                    *reinterpret_cast<void***>(esp61) = ebp6;
                                                    eax12 = *reinterpret_cast<void***>(esp61);
                                                    esp62 = esp61 + 4 - 4;
                                                    *reinterpret_cast<void***>(esp62) = eax12;
                                                    ecx = ecx + 1 + 1;
                                                    esp56 = esp62 - 4;
                                                    *reinterpret_cast<void***>(esp56) = esi17;
                                                    ebp6 = ebp6 + 1 + 1;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    if (!ebp6) {
                                                        addr_100229c9_70:
                                                        ++edi16;
                                                        zf63 = edi16 == 0;
                                                        if (zf63) {
                                                            addr_10022a13_71:
                                                            __asm__("outsd ");
                                                            if (!zf63) {
                                                                addr_10022a79_72:
                                                                esp64 = esp56 - 4;
                                                                *reinterpret_cast<void***>(esp64) = ebp6;
                                                                ++ebp6;
                                                                eax12 = *reinterpret_cast<void***>(esp64);
                                                                esp65 = esp64 + 4 - 4;
                                                                *reinterpret_cast<void***>(esp65) = eax12;
                                                                ecx = ecx + 1 - 1 + 1;
                                                                esp56 = esp65 - 4;
                                                                *reinterpret_cast<void***>(esp56) = ebp6;
                                                                if (!ecx) {
                                                                    addr_10022ae8_73:
                                                                    esp56 = esp56 + 4;
                                                                    *reinterpret_cast<unsigned char*>(edi16 + 0x65473f08) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi16 + 0x65473f08) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)));
                                                                    zf66 = *reinterpret_cast<unsigned char*>(edi16 + 0x65473f08) == 0;
                                                                    sf67 = *reinterpret_cast<signed char*>(edi16 + 0x65473f08) < reinterpret_cast<signed char>(0);
                                                                    goto addr_10022aef_74;
                                                                } else {
                                                                    esp68 = esp56 - 4;
                                                                    *reinterpret_cast<void***>(esp68) = eax12;
                                                                    --edi16;
                                                                    --ecx;
                                                                    --esi17;
                                                                    esp69 = esp68 - 4;
                                                                    *reinterpret_cast<void***>(esp69) = esp69;
                                                                    eax12 = eax12 + 1 + 1 + 1;
                                                                    edx11 = *reinterpret_cast<void***>(esp69);
                                                                    esp56 = esp69 + 4;
                                                                    *reinterpret_cast<unsigned char*>(ebx58 + 0x65473f08) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx58 + 0x65473f08) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
                                                                    zf66 = *reinterpret_cast<unsigned char*>(ebx58 + 0x65473f08) == 0;
                                                                    sf67 = *reinterpret_cast<signed char*>(ebx58 + 0x65473f08) < reinterpret_cast<signed char>(0);
                                                                    if (zf66) {
                                                                        addr_10022aef_74:
                                                                        if (zf66) {
                                                                            addr_10022b45_76:
                                                                            eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                                                                            edx11 = *reinterpret_cast<void***>(esp56);
                                                                            *reinterpret_cast<void**>(&ebx58 + 1) = reinterpret_cast<void*>(0xff + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
                                                                            tmp32_70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)));
                                                                            cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_70) < reinterpret_cast<unsigned char>(edi16));
                                                                            edi16 = tmp32_70;
                                                                            ++ecx;
                                                                            esp71 = esp56 + 4 - 4;
                                                                            *reinterpret_cast<void***>(esp71) = edx11;
                                                                            *reinterpret_cast<int16_t*>(&eax12) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax12) + 1);
                                                                            zf72 = reinterpret_cast<uint1_t>(*reinterpret_cast<int16_t*>(&eax12) == 0);
                                                                            of73 = __intrinsic();
                                                                            below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
                                                                            esp56 = esp71 - 4;
                                                                            *reinterpret_cast<void***>(esp56) = esi17;
                                                                            __asm__("popad ");
                                                                            __asm__("insb ");
                                                                            if (!zf72) {
                                                                                addr_10022bbe_77:
                                                                                if (zf72) {
                                                                                    addr_10022c0d_78:
                                                                                    esp56 = esp56 - 4;
                                                                                    *reinterpret_cast<void***>(esp56) = ebx58;
                                                                                    if (zf72) {
                                                                                        addr_10022c5a_79:
                                                                                        tmp32_75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                                                        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_75) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                                                                                        *reinterpret_cast<void***>(eax12) = tmp32_75;
                                                                                        ++ecx;
                                                                                        esp76 = esp56 - 1;
                                                                                        __asm__("popad ");
                                                                                        if (reinterpret_cast<signed char>(esp76) >= reinterpret_cast<signed char>(0)) {
                                                                                            addr_10022cc8_80:
                                                                                            esp76 = esp76 - 4;
                                                                                            *reinterpret_cast<void***>(esp76) = eax12;
                                                                                            goto addr_10022cca_81;
                                                                                        } else {
                                                                                            if (cf53) {
                                                                                                addr_10022cca_81:
                                                                                                esp56 = esp76 - 4;
                                                                                                *reinterpret_cast<void***>(esp56) = ebp6;
                                                                                                --eax12;
                                                                                                ecx = ecx + 1 - 1;
                                                                                                --esi17;
                                                                                                goto addr_10022ccf_83;
                                                                                            } else {
                                                                                                esp56 = esp76 - 4;
                                                                                                *reinterpret_cast<void***>(esp56) = edx11;
                                                                                                tmp8_77 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                                                                                                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_77) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)));
                                                                                                *reinterpret_cast<void***>(esi17) = tmp8_77;
                                                                                                goto addr_10022c69_85;
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        addr_10022c12_86:
                                                                                        __asm__("popad ");
                                                                                        if (cf53) 
                                                                                            goto addr_10022c79_87; else 
                                                                                            goto addr_10022c15_88;
                                                                                    }
                                                                                } else {
                                                                                    addr_10022bc1_89:
                                                                                    __asm__("outsd ");
                                                                                    __asm__("arpl [ecx+0x74], sp");
                                                                                    ebp6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16 + 0x6e)) * 0x656c4540);
                                                                                    cf53 = __intrinsic();
                                                                                    of73 = __intrinsic();
                                                                                    zf72 = __undefined();
                                                                                    below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
                                                                                    goto addr_10022bca_90;
                                                                                }
                                                                            } else {
                                                                                addr_10022b59_91:
                                                                                ++esp56;
                                                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                                                goto addr_10022b5f_92;
                                                                            }
                                                                        } else {
                                                                            if (!sf67) {
                                                                                addr_10022b63_94:
                                                                                esp78 = esp56 - 4;
                                                                                *reinterpret_cast<void***>(esp78) = ecx;
                                                                                ++ecx;
                                                                                esp79 = esp78 + 4;
                                                                                eax12 = *reinterpret_cast<void***>(esp79);
                                                                                esp80 = esp79 + 4;
                                                                                edx11 = *reinterpret_cast<void***>(esp80);
                                                                                esp81 = esp80 + 4;
                                                                                tmp8_82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                                                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_82) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                                                                                *reinterpret_cast<void***>(eax12) = tmp8_82;
                                                                                zf72 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax12) == 0);
                                                                                of73 = __intrinsic();
                                                                                below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
                                                                                ebp6 = *reinterpret_cast<void***>(esp81);
                                                                                esp83 = esp81 + 4 - 2;
                                                                                *reinterpret_cast<void***>(esp83) = cs84;
                                                                                __asm__("aas ");
                                                                                esp56 = esp83 - 4;
                                                                                *reinterpret_cast<void***>(esp56) = ebx58;
                                                                                if (zf72) {
                                                                                    addr_10022bca_90:
                                                                                    __asm__("insd ");
                                                                                    __asm__("outsb ");
                                                                                    if (zf72) {
                                                                                        goto addr_10022c12_86;
                                                                                    } else {
                                                                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                                                        eax12 = eax12 + 1 + 1;
                                                                                        esp85 = esp56 + 1 - 4;
                                                                                        *reinterpret_cast<void***>(esp85) = ecx;
                                                                                        ++ecx;
                                                                                        ++ebp6;
                                                                                        esp86 = esp85 - 4;
                                                                                        *reinterpret_cast<void***>(esp86) = eax12;
                                                                                        ++edx11;
                                                                                        zf87 = edx11 == 0;
                                                                                        esp56 = esp86 - 4;
                                                                                        *reinterpret_cast<void***>(esp56) = ebp6;
                                                                                        goto addr_10022be1_97;
                                                                                    }
                                                                                } else {
                                                                                    esp56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp56 + reinterpret_cast<unsigned char>(esi17) * 2) + 0x68) * 0x656c4540);
                                                                                    __asm__("insd ");
                                                                                    __asm__("outsb ");
                                                                                    if (__undefined()) {
                                                                                        goto addr_10022bc1_89;
                                                                                    } else {
                                                                                        ++esp56;
                                                                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                                                        ++eax12;
                                                                                        goto addr_10022b89_101;
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                ++eax12;
                                                                                esp56 = esp56 - 4;
                                                                                *reinterpret_cast<void***>(esp56) = esi17;
                                                                                __asm__("popad ");
                                                                                __asm__("insb ");
                                                                                if (eax12) {
                                                                                    addr_10022b5f_92:
                                                                                    goto addr_10022b61_103;
                                                                                } else {
                                                                                    ++esp56;
                                                                                    esi17 = reinterpret_cast<void**>(v88 * 0x49557463);
                                                                                    goto addr_10022b02_105;
                                                                                }
                                                                            }
                                                                        }
                                                                    } else {
                                                                        __asm__("popad ");
                                                                        __asm__("insb ");
                                                                        if (!zf66) {
                                                                            addr_10022b02_105:
                                                                            esp89 = esp56 - 4;
                                                                            *reinterpret_cast<void***>(esp89) = ecx;
                                                                            ++ebp6;
                                                                            eax12 = *reinterpret_cast<void***>(esp89);
                                                                            esp90 = esp89 + 4;
                                                                            edx11 = *reinterpret_cast<void***>(esp90);
                                                                            esp56 = esp90 + 4;
                                                                            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 63) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 63) + reinterpret_cast<unsigned char>(eax12));
                                                                            ++edi16;
                                                                            zf91 = reinterpret_cast<uint1_t>(edi16 == 0);
                                                                            if (zf91) {
                                                                                goto addr_10022b59_91;
                                                                            }
                                                                        } else {
                                                                            ++eax12;
                                                                            ++ebp6;
                                                                            __asm__("insb ");
                                                                            __asm__("insd ");
                                                                            __asm__("outsb ");
                                                                            if (!ebp6) {
                                                                                addr_10022ae6_109:
                                                                                goto addr_10022ae8_73;
                                                                            } else {
                                                                                addr_10022aa6_110:
                                                                                ++esp56;
                                                                                goto addr_10022aa7_111;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            } else {
                                                                esp92 = esp56 - 4;
                                                                *reinterpret_cast<void***>(esp92) = reinterpret_cast<void**>(0x74747542);
                                                                __asm__("outsd ");
                                                                __asm__("outsb ");
                                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                                esp93 = esp92 + 1 - 4;
                                                                *reinterpret_cast<void***>(esp93) = ebp6;
                                                                ++ebp6;
                                                                eax12 = *reinterpret_cast<void***>(esp93);
                                                                esp56 = esp93 + 4;
                                                                ecx = ecx + 1 - 1 - 1;
                                                                goto addr_10022a2e_113;
                                                            }
                                                        } else {
                                                            addr_100229cd_114:
                                                            __asm__("outsd ");
                                                            if (cf53) {
                                                                addr_10022a35_115:
                                                                __asm__("arpl [ebp+0x40], sp");
                                                                *reinterpret_cast<void***>(edx11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ reinterpret_cast<unsigned char>(esi17));
                                                                ++eax12;
                                                                esp94 = esp56 - 4;
                                                                *reinterpret_cast<void***>(esp94) = eax12;
                                                                ++ecx;
                                                                zf63 = ecx == 0;
                                                                esp56 = esp94 - 4;
                                                                *reinterpret_cast<void***>(esp56) = ebp6;
                                                                goto addr_10022a42_116;
                                                            } else {
                                                                if (cf53) {
                                                                    addr_10022a42_116:
                                                                    if (zf63) {
                                                                        goto addr_10022aa6_110;
                                                                    }
                                                                } else {
                                                                    if (!zf63) {
                                                                        goto addr_10022a44_121;
                                                                    } else {
                                                                        addr_100229d5_122:
                                                                        ++ebx58;
                                                                        __asm__("outsd ");
                                                                        __asm__("insb ");
                                                                        __asm__("outsd ");
                                                                        if (cf53) {
                                                                            addr_10022a2e_113:
                                                                            *reinterpret_cast<void***>(esp56 - 4) = edi16;
                                                                            eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ 67);
                                                                            __asm__("insb ");
                                                                            esp56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx58 + 0x6b) * 0x69766544);
                                                                            goto addr_10022a35_115;
                                                                        } else {
                                                                            *reinterpret_cast<int16_t*>(&eax12) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax12) + 1);
                                                                            esp95 = esp56 - 4;
                                                                            *reinterpret_cast<void***>(esp95) = esp95;
                                                                            __asm__("outsd ");
                                                                            if (*reinterpret_cast<int16_t*>(&eax12)) {
                                                                                addr_10022a46_124:
                                                                                --edi16;
                                                                                --ecx;
                                                                                --esi17;
                                                                                esp96 = esp95 - 4;
                                                                                *reinterpret_cast<void***>(esp96) = esp96;
                                                                                eax12 = eax12 + 1 + 1 + 1;
                                                                                edx11 = *reinterpret_cast<void***>(esp96);
                                                                                esp2 = esp96 + 4;
                                                                                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                                                __asm__("fadd qword [0x7269463f]");
                                                                                goto addr_10022a52_125;
                                                                            } else {
                                                                                esp97 = esp95 - 4;
                                                                                *reinterpret_cast<void***>(esp97) = reinterpret_cast<void**>(0x74747542);
                                                                                __asm__("outsd ");
                                                                                __asm__("outsb ");
                                                                                eax98 = eax12 + 1 + 1 + 1;
                                                                                esp99 = esp97 + 1 - 4;
                                                                                *reinterpret_cast<void***>(esp99) = ebp6;
                                                                                ++ebp6;
                                                                                esp100 = esp99 - 4;
                                                                                *reinterpret_cast<void***>(esp100) = eax98;
                                                                                ecx = ecx + 1 + 1;
                                                                                --ebx58;
                                                                                eax101 = eax98 + 1;
                                                                                edx11 = *reinterpret_cast<void***>(esp100);
                                                                                esp2 = esp100 + 4;
                                                                                *reinterpret_cast<void***>(eax101) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax101)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax101)));
                                                                                __asm__("aad 0x5");
                                                                                goto addr_10022a01_127;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                                                        edx11 = *reinterpret_cast<void***>(esp56);
                                                        esp2 = esp56 + 4;
                                                        goto addr_1002298d_129;
                                                    }
                                                } else {
                                                    __asm__("popa ");
                                                    __asm__("arpl [ebp+0x40], sp");
                                                    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                                                    edx11 = *reinterpret_cast<void***>(esp2);
                                                    esp2 = esp2 + 4;
                                                    tmp8_102 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 0x7465473f) + reinterpret_cast<unsigned char>(eax12));
                                                    cf53 = reinterpret_cast<uint1_t>(tmp8_102 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 0x7465473f));
                                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 0x7465473f) = tmp8_102;
                                                    goto addr_10022912_131;
                                                }
                                            }
                                        } else {
                                            addr_1002287f_132:
                                            __asm__("outsb ");
                                            if (zf52) {
                                                addr_100228c2_133:
                                                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ 64);
                                                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 90));
                                                goto addr_100228c6_134;
                                            } else {
                                                addr_10022882_135:
                                                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                                                edx11 = *reinterpret_cast<void***>(esp2);
                                                esp2 = esp2 + 4;
                                                goto addr_10022886_136;
                                            }
                                        }
                                    } else {
                                        addr_1002280a_137:
                                        if (of50) {
                                            addr_10022871_138:
                                            esp103 = esp2 - 4;
                                            *reinterpret_cast<void***>(esp103) = ebp6;
                                            ++ecx;
                                            ++ebp6;
                                            eax12 = *reinterpret_cast<void***>(esp103);
                                            esp2 = esp103 + 4;
                                            goto addr_10022879_64;
                                        } else {
                                            if (cf8) 
                                                goto addr_10022882_135;
                                            if (!sf49) 
                                                goto addr_10022853_141; else 
                                                goto addr_10022810_142;
                                        }
                                    }
                                } else {
                                    if (zf47) 
                                        goto addr_100227d1_144;
                                    if (cf8 | zf47) 
                                        goto addr_100227f3_146; else 
                                        goto addr_1002278e_147;
                                }
                            } else {
                                __asm__("arpl [ecx+ebp*2+0x6f], si");
                                __asm__("outsb ");
                                ++eax12;
                                esp2 = esp2 - 4;
                                *reinterpret_cast<void***>(esp2) = esp2;
                                __asm__("outsd ");
                                if (eax12) {
                                    addr_100227a8_149:
                                    goto addr_100227a9_150;
                                } else {
                                    esp2 = esp2 - 4;
                                    *reinterpret_cast<void***>(esp2) = reinterpret_cast<void**>(0x74747542);
                                    __asm__("outsd ");
                                    __asm__("outsb ");
                                    goto addr_1002274c_152;
                                }
                            }
                        }
                    } else {
                        ++esp2;
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_100226fa_154;
                    }
                } else {
                    esp2 = esp2 - 4;
                    *reinterpret_cast<void***>(esp2) = reinterpret_cast<void**>(0x74747542);
                    goto addr_1002268a_156;
                }
            } else {
                __asm__("outsd ");
                __asm__("arpl [ebx+0x40], bp");
                esp2 = esp36 - 1 + 1;
                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                goto addr_10022602_158;
            }
        } else {
            if (cf8) {
                addr_10022606_160:
                eax12 = eax12 + 1 + 1;
                esp2 = esp2 - 4;
                *reinterpret_cast<void***>(esp2) = ecx;
                goto addr_1002260b_161;
            } else {
                if (below_or_equal14) {
                    addr_10022602_158:
                    goto addr_10022606_160;
                } else {
                    if (cf8) {
                        addr_100225dd_164:
                        __asm__("arpl [ebx+0x40], bp");
                        ++esp2;
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_100225e5_56;
                    } else {
                        ++esp2;
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_1002259f_166;
                    }
                }
            }
        }
    } else {
        addr_1002252e_167:
        esp2 = esp2 - 4;
        *reinterpret_cast<void***>(esp2) = ebx104;
        goto addr_10022531_168;
    }
    esp2 = esp2 - 4;
    *reinterpret_cast<void***>(esp2) = reinterpret_cast<void**>(0x74747542);
    goto addr_100227a8_149;
    label_67:
    *reinterpret_cast<void***>(edi16) = *reinterpret_cast<void***>(esi17);
    esi17 = esi17 + 4;
    *reinterpret_cast<void**>(&ebx58 + 1) = reinterpret_cast<void*>(0xff);
    cf53 = 0;
    edi16 = edi16 + 4 - 1;
    __asm__("outsb ");
    eax12 = eax54 - 1;
    __asm__("outsd ");
    if (1) 
        goto addr_100229d5_122;
    ++eax12;
    zf63 = eax12 == 0;
    esp56 = esp56 - 4;
    *reinterpret_cast<void***>(esp56) = esp56;
    __asm__("outsd ");
    if (!zf63) {
        goto addr_100229cd_114;
    } else {
        esp105 = esp56 - 4;
        *reinterpret_cast<void***>(esp105) = reinterpret_cast<void**>(0x74747542);
        __asm__("outsd ");
        __asm__("outsb ");
        esp2 = esp105 + 1;
        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
        cf53 = __intrinsic();
        goto addr_10022975_175;
    }
    addr_10022ccf_83:
    esp106 = esp56 - 4;
    *reinterpret_cast<void***>(esp106) = ebx58;
    esp107 = esp106 - 4;
    *reinterpret_cast<void***>(esp107) = esp107;
    ++ecx;
    --esi17;
    ++ebx58;
    ++ebp6;
    esp108 = esp107 + 4;
    edi16 = *reinterpret_cast<void***>(esp108);
    esp56 = esp108 + 4;
    ++eax12;
    goto addr_10022cd8_176;
    addr_10022c15_88:
    if (!below_or_equal74) 
        goto addr_10022c78_177;
    if (cf53) {
        addr_10022c7e_179:
        goto addr_10022c83_180;
    } else {
        ++esp56;
        zf72 = reinterpret_cast<uint1_t>(esp56 == 0);
        of73 = __intrinsic();
        below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
        if (below_or_equal74) {
            __asm__("outsb ");
            if (!cf53) {
                addr_10022cf2_183:
                ++esp56;
                goto addr_10022cf4_184;
            } else {
                if (zf72) {
                    addr_10022cf4_184:
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    eax12 = eax12 + 1 + 1;
                    goto addr_10022cfd_186;
                } else {
                    __asm__("outsd ");
                    __asm__("outsb ");
                    esp56 = esp56 - 4;
                    *reinterpret_cast<void***>(esp56) = esi17;
                    esi17 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebx58 + 0x75) * 0x72506c61);
                    cf53 = __intrinsic();
                    of109 = __intrinsic();
                    goto addr_10022c95_188;
                }
            }
        } else {
            __asm__("arpl [ebp+0x55], sp");
            if (!cf53) {
                addr_10022c83_180:
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = esp56;
                if (cf53) {
                    goto addr_10022ce8_191;
                }
            } else {
                tmp8_110 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebx58) + *reinterpret_cast<int16_t*>(&esi17)) + reinterpret_cast<unsigned char>(eax12));
                cf53 = reinterpret_cast<uint1_t>(tmp8_110 < *reinterpret_cast<unsigned char*>(*reinterpret_cast<int16_t*>(&ebx58) + *reinterpret_cast<int16_t*>(&esi17)));
                *reinterpret_cast<unsigned char*>(*reinterpret_cast<int16_t*>(&ebx58) + *reinterpret_cast<int16_t*>(&esi17)) = tmp8_110;
                zf111 = *reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebx58) + *reinterpret_cast<int16_t*>(&esi17)) == 0;
            }
        }
        esp56 = esp56 - 4;
        *reinterpret_cast<void***>(esp56) = ebx58;
        if (zf111) 
            goto addr_10022c73_194;
        __asm__("popad ");
        if (zf111) {
            addr_10022c78_177:
            goto addr_10022c79_87;
        } else {
            __asm__("insb ");
            __asm__("popad ");
            *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
            tmp8_112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx58 + 0x72)) + reinterpret_cast<unsigned char>(eax12));
            cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_112) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx58 + 0x72)));
            *reinterpret_cast<void**>(ebx58 + 0x72) = tmp8_112;
            zf113 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(ebx58 + 0x72) == 0);
            of109 = __intrinsic();
            below_or_equal114 = reinterpret_cast<uint1_t>(cf53 | zf113);
            __asm__("popad ");
            if (zf113) {
                addr_10022ca5_198:
                if (zf113) {
                    addr_10022d0c_199:
                    --ebp6;
                    ++ecx;
                    goto addr_10022d0e_200;
                } else {
                    addr_10022ca7_201:
                    esp56 = esp56 - 4;
                    *reinterpret_cast<void***>(esp56) = ebx58;
                    if (zf113) {
                        addr_10022d1c_202:
                        if (zf113) {
                            addr_10022d77_203:
                            ++ebp6;
                            esp115 = esp56 - 4;
                            *reinterpret_cast<void***>(esp115) = eax12;
                            ++ecx;
                            esp116 = esp115 - 4;
                            *reinterpret_cast<void***>(esp116) = ebp6;
                            if (!ecx) {
                                addr_10022ddf_204:
                                esp117 = esp116 - 4;
                                *reinterpret_cast<void***>(esp117) = ecx;
                                ++ecx;
                                ++ebp6;
                                edi16 = *reinterpret_cast<void***>(esp117);
                                esp118 = esp117 + 4;
                                --esi17;
                                eax12 = eax12 + 1 + 1 + 1;
                                edx11 = *reinterpret_cast<void***>(esp118);
                                esp56 = esp118 + 4;
                                tmp8_119 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_119) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                                *reinterpret_cast<void***>(eax12) = tmp8_119;
                                zf120 = *reinterpret_cast<void***>(eax12) == 0;
                                goto addr_10022df2_205;
                            } else {
                                esp121 = esp116 - 4;
                                *reinterpret_cast<void***>(esp121) = edx11 - 1;
                                ++ebp6;
                                esp122 = esp121 - 4;
                                *reinterpret_cast<void***>(esp122) = esp122;
                                eax12 = eax12 + 1 + 1 + 1;
                                edx11 = *reinterpret_cast<void***>(esp122);
                                esp56 = esp122 + 4;
                                tmp8_123 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x69754410) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
                                cf53 = reinterpret_cast<uint1_t>(tmp8_123 < *reinterpret_cast<unsigned char*>(ecx + 0x69754410));
                                *reinterpret_cast<unsigned char*>(ecx + 0x69754410) = tmp8_123;
                                ebx58 = ebx58 + 1 + 1;
                                zf113 = reinterpret_cast<uint1_t>(ebx58 == 0);
                                goto addr_10022d8e_207;
                            }
                        } else {
                            __asm__("outsd ");
                            if (of109) {
                                addr_10022d72_209:
                                goto addr_10022d73_210;
                            } else {
                                if (below_or_equal114) {
                                    addr_10022d8e_207:
                                    if (cf53) {
                                        ++edx11;
                                        __asm__("outsd ");
                                        goto addr_10022df7_213;
                                    } else {
                                        __asm__("popad ");
                                        if (zf113) {
                                            addr_10022df8_215:
                                            __asm__("insb ");
                                            ++eax12;
                                            esp56 = esp56 - 4;
                                            *reinterpret_cast<void***>(esp56) = esi17;
                                            __asm__("popad ");
                                            __asm__("insb ");
                                            if (eax12) {
                                                addr_10022e64_216:
                                                ++ebp6;
                                                zf124 = ebp6 == 0;
                                                of125 = __intrinsic();
                                                __asm__("insb ");
                                                __asm__("insd ");
                                                __asm__("outsb ");
                                                if (zf124) {
                                                    addr_10022eac_217:
                                                    if (cf53) {
                                                        addr_10022f17_218:
                                                        goto addr_10022f18_219;
                                                    } else {
                                                        if (cf53) {
                                                            addr_10022f18_219:
                                                            if (zf124) 
                                                                goto addr_10022f8b_221;
                                                        } else {
                                                            ++ecx;
                                                            __asm__("outsb ");
                                                            ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974);
                                                            cf53 = __intrinsic();
                                                            ++ebx58;
                                                            __asm__("outsd ");
                                                            __asm__("insd ");
                                                            if (__intrinsic()) {
                                                                addr_10022f2e_223:
                                                                eax12 = eax12 + 1 + 1;
                                                                esp126 = esp56 - 4;
                                                                *reinterpret_cast<void***>(esp126) = ebx58;
                                                                ++edi16;
                                                                esp56 = esp126 - 4;
                                                                *reinterpret_cast<void***>(esp56) = eax12;
                                                                ++edx11;
                                                                zf127 = edx11 == 0;
                                                                sf128 = reinterpret_cast<signed char>(edx11) < reinterpret_cast<signed char>(0);
                                                                of129 = __intrinsic();
                                                                goto addr_10022f38_224;
                                                            } else {
                                                                if (!ebx58) 
                                                                    goto addr_10022f2a_226;
                                                                ++eax12;
                                                                esp130 = esp56 - 4;
                                                                *reinterpret_cast<void***>(esp130) = eax12;
                                                                esp131 = esp130 - 4;
                                                                *reinterpret_cast<void***>(esp131) = esi17;
                                                                esp56 = esp131 - 1;
                                                                ++ecx;
                                                                __asm__("outsb ");
                                                                ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974);
                                                                goto addr_10022ece_228;
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    ++esp56;
                                                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                    goto addr_10022e72_230;
                                                }
                                            } else {
                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                eax12 = eax12 + 1 + 1 + 1;
                                                esp132 = esp56 + 1 - 4;
                                                *reinterpret_cast<void***>(esp132) = ebx58;
                                                esp56 = esp132 - 4;
                                                *reinterpret_cast<void***>(esp56) = eax12;
                                                ++ecx;
                                                goto addr_10022e0e_232;
                                            }
                                        } else {
                                            edi133 = edi16 - 1;
                                            __asm__("arpl [eax+eax-0x45], si");
                                            *reinterpret_cast<void***>(edi133) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi133)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                                            cf53 = 0;
                                            edi16 = edi133 + 1;
                                            if (!edi16) {
                                                addr_10022df7_213:
                                                __asm__("outsd ");
                                                goto addr_10022df8_215;
                                            } else {
                                                esi17 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx58 + 0x69) * 0x40656c62);
                                                cf53 = __intrinsic();
                                                goto addr_10022da3_235;
                                            }
                                        }
                                    }
                                } else {
                                    __asm__("insb ");
                                    ++eax12;
                                    ++ebp6;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (!ebp6) {
                                        addr_10022d73_210:
                                        eax12 = eax12 + 1 + 1;
                                        esp56 = esp56 - 4;
                                        *reinterpret_cast<void***>(esp56) = ecx;
                                        ++ecx;
                                        goto addr_10022d77_203;
                                    } else {
                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                        esp134 = esp56 + 1 - 4;
                                        *reinterpret_cast<void***>(esp134) = ecx;
                                        ++ebp6;
                                        esp135 = esp134 - 4;
                                        *reinterpret_cast<void***>(esp135) = eax12 + 1 + 1;
                                        ecx = ecx + 1 + 1;
                                        esp136 = esp135 - 4;
                                        *reinterpret_cast<void***>(esp136) = esi17;
                                        *reinterpret_cast<void***>(edx11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ reinterpret_cast<unsigned char>(esi17));
                                        eax12 = *reinterpret_cast<void***>(esp136);
                                        esp137 = esp136 + 4;
                                        edx11 = *reinterpret_cast<void***>(esp137);
                                        esp56 = esp137 + 4;
                                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                        goto addr_10022d49_238;
                                    }
                                }
                            }
                        }
                    } else {
                        ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi17 + 0x67) * 0x6c615640);
                        if (!__undefined()) {
                            addr_10022d18_240:
                            ++eax12;
                            edx11 = *reinterpret_cast<void***>(esp56);
                            esp56 = esp56 + 4;
                            tmp8_138 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi17 + 0x65473f08) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)));
                            cf53 = reinterpret_cast<uint1_t>(tmp8_138 < *reinterpret_cast<unsigned char*>(esi17 + 0x65473f08));
                            *reinterpret_cast<unsigned char*>(esi17 + 0x65473f08) = tmp8_138;
                            zf113 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi17 + 0x65473f08) == 0);
                            of109 = __intrinsic();
                            below_or_equal114 = reinterpret_cast<uint1_t>(cf53 | zf113);
                            goto addr_10022d1c_202;
                        } else {
                            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                            eax139 = eax12 + 1 + 1 + 1;
                            esp140 = esp56 + 1 - 4;
                            *reinterpret_cast<void***>(esp140) = ebx58;
                            esp141 = esp140 - 4;
                            *reinterpret_cast<void***>(esp141) = eax139;
                            ++ecx;
                            esp142 = esp141 - 4;
                            *reinterpret_cast<void***>(esp142) = esi17;
                            *reinterpret_cast<void***>(edx11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ reinterpret_cast<unsigned char>(esi17));
                            eax12 = eax139 + 1;
                            esp76 = esp142 - 4;
                            *reinterpret_cast<void***>(esp76) = eax12;
                            goto addr_10022cc8_80;
                        }
                    }
                }
            } else {
                ++ecx;
                __asm__("arpl [ecx+ebp*2+0x6f], si");
                goto addr_10022c44_243;
            }
        }
    }
    __asm__("insd ");
    esp56 = esp56 - 4;
    *reinterpret_cast<void***>(esp56) = eax12;
    if (cf53) {
        addr_10022f8f_245:
        __asm__("insb ");
        __asm__("insb ");
        *reinterpret_cast<void***>(esp56 - 4) = esi17;
        esp143 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 0x77) * 0x44407265);
        goto addr_10022f95_246;
    } else {
        if (of125) {
            addr_10022f62_248:
            goto addr_10022f66_249;
        } else {
            ++ebp6;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp6) {
                addr_10022f6a_251:
                edi144 = *reinterpret_cast<void***>(esp56);
                esp145 = esp56 + 4;
                --esi17;
                eax146 = *reinterpret_cast<void***>(esp145);
                esp147 = esp145 + 4;
                edx148 = *reinterpret_cast<void***>(esp147);
                tmp8_149 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax146)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax146)));
                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_149) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax146)));
                *reinterpret_cast<void***>(eax146) = tmp8_149;
                edx11 = eax146;
                eax12 = edx148;
                esp150 = esp147 + 4 + 2;
                __asm__("aas ");
                edi16 = edi144 + 1;
                zf151 = edi16 == 0;
                if (zf151) {
                    addr_10022fc0_252:
                    __asm__("insb ");
                    goto addr_10022fc1_253;
                } else {
                    __asm__("outsb ");
                    if (zf151) {
                        addr_10022fdf_255:
                        esp56 = esp150 - 4;
                        *reinterpret_cast<void***>(esp56) = ebx58;
                        if (zf151) {
                            addr_1002303b_256:
                            eax12 = *reinterpret_cast<void***>(esp56);
                            esp152 = esp56 + 4;
                            edx11 = *reinterpret_cast<void***>(esp152);
                            esp56 = esp152 + 4;
                            *reinterpret_cast<void**>(&eax12 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                            *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                            __asm__("aas ");
                            *reinterpret_cast<void**>(edx11 + 0x65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11)));
                            cf53 = 0;
                            __asm__("o16 arpl [edi+0x75], bp");
                            __asm__("outsb ");
                            if (*reinterpret_cast<void**>(edx11 + 0x65)) {
                                __asm__("popad ");
                                goto addr_1002304d_259;
                            }
                        } else {
                            --edi16;
                            if (!cf53) {
                                addr_1002304d_259:
                                if (!cf53) {
                                    addr_100230b4_261:
                                    --eax12;
                                    esp153 = esp56 - 4;
                                    *reinterpret_cast<void***>(esp153) = eax12;
                                    ++edi16;
                                    esp154 = esp153 - 4;
                                    *reinterpret_cast<void***>(esp154) = eax12;
                                    ++ecx;
                                    zf155 = reinterpret_cast<uint1_t>(ecx == 0);
                                    sf156 = reinterpret_cast<signed char>(ecx) < reinterpret_cast<signed char>(0);
                                    esp157 = esp154 - 4;
                                    *reinterpret_cast<void***>(esp157) = esi17;
                                    esp56 = esp157 - 4;
                                    *reinterpret_cast<void***>(esp56) = eax12;
                                    if (cf53) {
                                        goto addr_1002312e_263;
                                    }
                                } else {
                                    ++esp56;
                                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                    goto addr_10023053_265;
                                }
                            } else {
                                if (!edi16) {
                                    addr_1002302a_267:
                                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                    esp56 = esp56 - 4;
                                    *reinterpret_cast<void***>(esp56) = ecx;
                                    ++ecx;
                                    ++ebp6;
                                    goto addr_1002303b_256;
                                } else {
                                    ++edx11;
                                    __asm__("popad ");
                                    if (!cf53) {
                                        addr_10023053_265:
                                        esp56 = esp56 - 4;
                                        *reinterpret_cast<void***>(esp56) = ecx;
                                        ++ecx;
                                        goto addr_1002305c_269;
                                    } else {
                                        addr_10022fee_270:
                                        esp158 = esp56 - 4;
                                        *reinterpret_cast<void***>(esp158) = ebx58;
                                        __asm__("arpl [edx+0x6f], si");
                                        __asm__("insb ");
                                        __asm__("insb ");
                                        *reinterpret_cast<void***>(esp158 - 4) = esi17;
                                        esp56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 0x77) * 0x44407265);
                                        goto addr_10022ff8_271;
                                    }
                                }
                            }
                        }
                    } else {
                        if (cf53) {
                            addr_10022fdd_273:
                            goto addr_10022fdf_255;
                        } else {
                            __asm__("arpl [ecx+ebp*2+0x6f], si");
                            __asm__("outsb ");
                            --ebp6;
                            __asm__("outsd ");
                            ++eax12;
                            esp56 = esp150 - 4;
                            *reinterpret_cast<void***>(esp56) = esp56;
                            __asm__("outsd ");
                            if (eax12) {
                                goto addr_10022fee_270;
                            } else {
                                esp56 = esp56 - 4;
                                *reinterpret_cast<void***>(esp56) = reinterpret_cast<void**>(0x6f726353);
                                goto addr_10022f8b_221;
                            }
                        }
                    }
                }
            } else {
                addr_10022f2a_226:
                ++esp56;
                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                cf53 = __intrinsic();
                goto addr_10022f2e_223;
            }
        }
    }
    esp56 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(ebp6 + 65) * 0x72);
    cf53 = __intrinsic();
    if (!cf53) 
        goto addr_100230d6_278;
    ++ebp6;
    zf155 = reinterpret_cast<uint1_t>(ebp6 == 0);
    sf156 = reinterpret_cast<signed char>(ebp6) < reinterpret_cast<signed char>(0);
    below_or_equal159 = reinterpret_cast<uint1_t>(cf53 | zf155);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (zf155) {
        addr_100230ee_280:
        esp56 = esp56 - 4;
        *reinterpret_cast<void***>(esp56) = eax12;
        if (cf53) {
            addr_10023160_281:
            esp56 = esp56 - 4;
            *reinterpret_cast<void***>(esp56) = edx11;
            __asm__("o16 arpl [gs:edi+0x75], bp");
            __asm__("outsb ");
            if (zf155) {
                addr_100231ab_282:
                if (cf53) 
                    goto addr_100231ff_283;
            } else {
                __asm__("popad ");
                if (!cf53) {
                    addr_100231d1_285:
                    *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<unsigned char>(eax12));
                    *reinterpret_cast<void**>(edx11 + 0x65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) + reinterpret_cast<unsigned char>(eax12));
                    ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(&(*reinterpret_cast<struct s541**>(&ebp6))->f83) * 0x49776f68);
                    __asm__("outsb ");
                    if (__intrinsic()) {
                        addr_10023256_286:
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        goto addr_10023269_287;
                    } else {
                        if (__undefined()) {
                            addr_10023233_289:
                            *reinterpret_cast<void**>(edi16 + 0x65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi16 + 0x65)) + reinterpret_cast<unsigned char>(eax12));
                            zf160 = *reinterpret_cast<void**>(edi16 + 0x65) == 0;
                            if (zf160) {
                                addr_10023283_290:
                                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                goto addr_10023284_291;
                            } else {
                                __asm__("popad ");
                                if (zf160) {
                                    addr_10023294_293:
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void**>(&ecx + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                                    esp161 = esp56 - 4;
                                    *reinterpret_cast<void***>(esp161) = reinterpret_cast<void**>(0x1002371a);
                                    eax162 = fun_10027066();
                                    *eax162 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax162) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax162)));
                                    esp163 = esp161 + 4 - 4;
                                    *reinterpret_cast<void***>(esp163) = esi17;
                                    __asm__("aaa ");
                                    *reinterpret_cast<void**>(&eax162) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax162)) + reinterpret_cast<signed char>(*eax162));
                                    *eax162 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax162) + reinterpret_cast<int32_t>(eax162));
                                    *eax162 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax162) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax162)));
                                    eax164 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax162) + reinterpret_cast<signed char>(*eax162));
                                    *eax164 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax164) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax164)));
                                    eax165 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax164) + reinterpret_cast<unsigned char>(*eax164));
                                    *reinterpret_cast<void***>(eax165) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)));
                                    *reinterpret_cast<void**>(&eax165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)));
                                    __asm__("aaa ");
                                    *reinterpret_cast<void**>(&eax165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)));
                                    esp166 = esp163 + 1 - 4;
                                    *reinterpret_cast<void***>(esp166) = eax165;
                                    __asm__("aaa ");
                                    *reinterpret_cast<void**>(&eax165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)));
                                    __asm__("rcl byte [edx+0xd8b00000], 1");
                                    *reinterpret_cast<void***>(eax165) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)));
                                    __asm__("ror byte [ebx+0x37610000], 0x2");
                                    *reinterpret_cast<unsigned char*>(ecx + 55) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 55) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
                                    *reinterpret_cast<void**>(&eax165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)));
                                    *reinterpret_cast<void***>(edi16) = esi17;
                                    *reinterpret_cast<void**>(&eax165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)));
                                    *reinterpret_cast<void***>(eax165) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)));
                                    *reinterpret_cast<void***>(eax165) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)) + reinterpret_cast<unsigned char>(eax165));
                                    *reinterpret_cast<void**>(&eax165) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax165)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax165)));
                                    esp167 = esp166 - 4;
                                    *reinterpret_cast<void***>(esp167) = ebp6;
                                    esp168 = esp167 - 4;
                                    *reinterpret_cast<void***>(esp168) = esp168;
                                    eax169 = eax165 - 1;
                                    esp170 = esp168 - 4;
                                    *reinterpret_cast<void***>(esp170) = ebp6;
                                    __asm__("insb ");
                                    __asm__("insb ");
                                    tmp8_171 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp170 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                                    cf172 = reinterpret_cast<uint1_t>(tmp8_171 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp170 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x6c));
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esp170 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x6c) = tmp8_171;
                                    __asm__("popad ");
                                    __asm__("outsb ");
                                    *reinterpret_cast<void***>(esp170 - 4) = ebp6;
                                    __asm__("outsb ");
                                    __asm__("insb ");
                                    __asm__("outsd ");
                                    __asm__("popad ");
                                    esi173 = esi17 - 1;
                                    __asm__("outsd ");
                                    if (!reinterpret_cast<uint1_t>(cf172 | reinterpret_cast<uint1_t>(esi173 == 0))) 
                                        goto addr_10023771_294; else 
                                        goto addr_10023771_294;
                                } else {
                                    __asm__("arpl [gs:eax+eax+0x0], si");
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                    goto addr_10023251_296;
                                }
                            }
                        } else {
                            __asm__("popad ");
                            __asm__("outsb ");
                            ++ecx;
                            __asm__("outsb ");
                            ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974);
                            *reinterpret_cast<void***>(esi17) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) + reinterpret_cast<unsigned char>(eax12));
                            *reinterpret_cast<void**>(edx11 + 0x65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) + reinterpret_cast<unsigned char>(eax12));
                            goto addr_100231f2_298;
                        }
                    }
                } else {
                    addr_1002316c_299:
                    ++esp56;
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    goto addr_10023170_300;
                }
            }
        } else {
            if (below_or_equal159) {
                addr_1002315c_302:
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = edx11;
                *reinterpret_cast<int16_t*>(&eax12) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax12) + 1);
                zf155 = reinterpret_cast<uint1_t>(*reinterpret_cast<int16_t*>(&eax12) == 0);
                sf156 = *reinterpret_cast<int16_t*>(&eax12) < 0;
                goto addr_1002315f_303;
            } else {
                if (cf53) {
                    addr_10023137_305:
                    esp56 = esp56 - 4;
                    *reinterpret_cast<void***>(esp56) = edx11;
                    __asm__("o16 arpl [gs:edi+0x75], bp");
                    goto addr_1002313a_306;
                } else {
                    ++ebp6;
                    zf174 = reinterpret_cast<uint1_t>(ebp6 == 0);
                    below_or_equal175 = reinterpret_cast<uint1_t>(cf53 | zf174);
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (zf174) {
                        addr_1002314f_308:
                        ++ecx;
                        ++ebp6;
                        eax12 = *reinterpret_cast<void***>(esp56);
                        esp176 = esp56 + 4;
                        edx11 = *reinterpret_cast<void***>(esp176);
                        esp56 = esp176 + 4;
                        tmp8_177 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_177) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                        *reinterpret_cast<void***>(eax12) = tmp8_177;
                        *reinterpret_cast<void***>(ebx58) = reinterpret_cast<void**>(0x6464413f);
                        goto addr_1002315a_309;
                    } else {
                        addr_100230ff_310:
                        if (cf53) {
                            addr_10023170_300:
                            esp178 = esp56 - 4;
                            *reinterpret_cast<void***>(esp178) = ecx;
                            ++ecx;
                            ++ebp6;
                            eax12 = *reinterpret_cast<void***>(esp178);
                            esp179 = esp178 + 4;
                            edx11 = *reinterpret_cast<void***>(esp179);
                            esp56 = esp179 + 4;
                            tmp8_180 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax12 + 0x303f3f00) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                            cf53 = reinterpret_cast<uint1_t>(tmp8_180 < *reinterpret_cast<unsigned char*>(eax12 + 0x303f3f00));
                            *reinterpret_cast<unsigned char*>(eax12 + 0x303f3f00) = tmp8_180;
                            goto addr_10023182_311;
                        } else {
                            if (below_or_equal175) 
                                goto addr_1002316c_299;
                            if (cf53) 
                                goto addr_10023147_314; else 
                                goto addr_10023107_315;
                        }
                    }
                }
            }
        }
    } else {
        if (cf53) {
            addr_1002310f_317:
            esp56 = esp56 - 4;
            *reinterpret_cast<void***>(esp56) = ecx;
            ++ecx;
            ++ebp6;
            goto addr_10023114_318;
        } else {
            if (below_or_equal159) {
                addr_1002310b_320:
                goto addr_1002310f_317;
            } else {
                if (cf53) {
                    goto addr_100230e7_323;
                } else {
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    cf53 = __intrinsic();
                    eax12 = eax12 + 1 + 1;
                    esp56 = esp56 + 1 - 4;
                    *reinterpret_cast<void***>(esp56) = ecx;
                    ++ecx;
                    goto addr_100230b2_325;
                }
            }
        }
    }
    if (cf53) {
        addr_10023220_327:
        *reinterpret_cast<unsigned char*>(ebx58 + 0x74655300) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx58 + 0x74655300) + reinterpret_cast<unsigned char>(eax12));
        ++edi16;
        zf155 = reinterpret_cast<uint1_t>(edi16 == 0);
        goto addr_1002322c_328;
    } else {
        if (sf156) {
            addr_1002322c_328:
            __asm__("popad ");
            if (zf155) {
                addr_10023284_291:
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                goto addr_1002328c_330;
            } else {
                __asm__("arpl [gs:eax+eax+0x4c], si");
                goto addr_10023233_289;
            }
        } else {
            esp181 = esp56 + 1;
            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
            eax12 = *reinterpret_cast<void***>(esp181);
            esp182 = esp181 + 4 - 4;
            *reinterpret_cast<void***>(esp182) = eax12;
            ecx = ecx + 1 + 1;
            esp56 = esp182 - 4;
            *reinterpret_cast<void***>(esp56) = esi17;
            ebp6 = ebp6 - 1 + 1 + 1;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp6) {
                addr_1002320d_333:
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
                *reinterpret_cast<void**>(ebp6 + 0x6e) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebp6 + 0x6e)) + reinterpret_cast<unsigned char>(eax12));
                --ecx;
                __asm__("outsb ");
                if (__intrinsic()) {
                    addr_1002328c_330:
                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                    goto addr_10023294_293;
                } else {
                    if (!ecx) {
                        addr_10023269_287:
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        goto addr_10023274_335;
                    } else {
                        __asm__("popad ");
                        __asm__("outsb ");
                        ++ecx;
                        __asm__("outsb ");
                        ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974);
                        goto addr_10023220_327;
                    }
                }
            } else {
                addr_100231cd_337:
                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                edx11 = *reinterpret_cast<void***>(esp56);
                esp56 = esp56 + 4;
                goto addr_100231d1_285;
            }
        }
    }
    addr_10023771_294:
    __asm__("insb ");
    __asm__("insb ");
    edi183 = edi16 + 1;
    zf184 = edi183 == 0;
    if (!zf184) {
        __asm__("arpl [ecx+ebp*2+0x76], si");
        __asm__("popad ");
        if (zf184) {
            addr_100237e8_339:
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
            *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
        } else {
            __asm__("outsd ");
            __asm__("outsb ");
            __asm__("popad ");
            __asm__("arpl [edi+ebp*2+0x72], si");
            __asm__("insb ");
            __asm__("insb ");
            if (!(edi183 + 1)) {
                addr_100237d3_342:
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                goto addr_100237e8_339;
            } else {
                __asm__("insb ");
                __asm__("popad ");
                if (cf172) {
                    __asm__("arpl [eax+eax+0x0], si");
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
                }
            }
        }
    }
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    *reinterpret_cast<void***>(eax169) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax169)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax169)));
    goto addr_100237d3_342;
    addr_10023147_314:
    esp56 = esp56 - 4;
    *reinterpret_cast<void***>(esp56) = ecx;
    goto addr_1002314f_308;
    addr_10023107_315:
    ++esp56;
    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
    goto addr_1002310b_320;
    if (cf53 | zf155) {
        addr_10023129_348:
        edx11 = *reinterpret_cast<void***>(esp56);
        esp56 = esp56 + 4;
        tmp8_185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_185) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
        *reinterpret_cast<void***>(eax12) = tmp8_185;
        zf155 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax12) == 0);
        sf156 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax12)) < reinterpret_cast<signed char>(0);
        if (__intrinsic()) {
            addr_1002313a_306:
            __asm__("outsb ");
            if (zf155) {
                addr_10023182_311:
                --ecx;
                zf155 = reinterpret_cast<uint1_t>(ecx == 0);
                of186 = __intrinsic();
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = eax12;
                if (cf53) {
                    addr_100231f6_349:
                    __asm__("outsb ");
                    if (of186) {
                        addr_10023274_335:
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        goto addr_10023283_290;
                    } else {
                        addr_100231ff_283:
                        if (zf155) {
                            addr_10023251_296:
                            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                            goto addr_10023256_286;
                        } else {
                            __asm__("popad ");
                            __asm__("outsb ");
                            ++ecx;
                            __asm__("outsb ");
                            ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974);
                            goto addr_1002320d_333;
                        }
                    }
                } else {
                    if (cf53 | zf155) {
                        addr_100231f2_298:
                        ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(&(*reinterpret_cast<struct s541**>(&ebp6))->f72) * 0x49656469);
                        of186 = __intrinsic();
                        zf155 = __undefined();
                        goto addr_100231f6_349;
                    } else {
                        if (cf53) 
                            goto addr_100231cd_337;
                    }
                }
            } else {
                __asm__("popad ");
                goto addr_10023141_354;
            }
        } else {
            addr_1002312e_263:
            __asm__("aas ");
            esp56 = esp56 - 4;
            *reinterpret_cast<void***>(esp56) = edx11;
            __asm__("insb ");
            __asm__("popad ");
            if (!cf53) {
                addr_1002319b_355:
                eax12 = *reinterpret_cast<void***>(esp56);
                esp187 = esp56 + 4;
                edx11 = *reinterpret_cast<void***>(esp187);
                esp56 = esp187 + 4;
                *reinterpret_cast<void***>(edx11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) | reinterpret_cast<unsigned char>(edi16));
                --ecx;
                __asm__("outsb ");
                esi17 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax12 + reinterpret_cast<unsigned char>(eax12) * 2) + 80) * 0x69766f72);
                cf53 = __intrinsic();
                sf156 = __undefined();
                zf155 = __undefined();
                goto addr_100231a8_356;
            } else {
                addr_10023136_357:
                ++eax12;
                zf155 = reinterpret_cast<uint1_t>(eax12 == 0);
                sf156 = reinterpret_cast<signed char>(eax12) < reinterpret_cast<signed char>(0);
                goto addr_10023137_305;
            }
        }
    } else {
        if (cf53) {
            addr_10023114_318:
            eax12 = *reinterpret_cast<void***>(esp56);
            esp56 = esp56 + 4 - 4;
            *reinterpret_cast<void***>(esp56) = edi16;
            goto addr_10023116_359;
        } else {
            if (cf53) {
                goto addr_10023136_357;
            }
            if (sf156) 
                goto addr_10023141_354; else 
                goto addr_100230c8_363;
        }
    }
    addr_1002318d_364:
    ++esp56;
    goto addr_1002318f_365;
    addr_10023141_354:
    if (!cf53) {
        addr_100231a8_356:
        goto addr_100231ab_282;
    } else {
        ++esp56;
        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
        goto addr_10023147_314;
    }
    addr_100230c8_363:
    ++eax12;
    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 80));
    ++ecx;
    esp56 = esp56 - 4;
    *reinterpret_cast<void***>(esp56) = esi17;
    ++ebp6;
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (!ebp6) {
        addr_10023116_359:
        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ 80);
        __asm__("popad ");
        if (!eax12) {
            addr_1002318f_365:
            esp56 = esp56 - 4;
            *reinterpret_cast<void***>(esp56) = ecx;
            ++ecx;
            ++ebp6;
            goto addr_1002319b_355;
        } else {
            if (0) {
                goto addr_1002318d_364;
            } else {
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = ebx58;
                __asm__("arpl [eax+0x65], bp");
                __asm__("insd ");
                __asm__("popad ");
                eax12 = eax12 + 1 + 1;
                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                goto addr_10023129_348;
            }
        }
    } else {
        addr_100230d6_278:
        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
        goto addr_100230d8_370;
    }
    if (reinterpret_cast<signed char>(edi16) < reinterpret_cast<signed char>(0)) {
        addr_10022b89_101:
        esp188 = esp56 - 4;
        *reinterpret_cast<void***>(esp188) = ecx;
        ++ecx;
        ++ebp6;
        eax12 = eax12 + 1 - 1 + 1;
        edx11 = *reinterpret_cast<void***>(esp188);
        esp56 = esp188 + 4;
        *reinterpret_cast<unsigned char*>(ebx58 + 0x65533f0d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx58 + 0x65533f0d) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11)));
        zf87 = *reinterpret_cast<unsigned char*>(ebx58 + 0x65533f0d) == 0;
        goto addr_10022b94_372;
    } else {
        __asm__("outsb ");
        goto addr_10022b16_374;
    }
    addr_10022a44_121:
    esp95 = esp56 - 4;
    *reinterpret_cast<void***>(esp95) = eax12;
    goto addr_10022a46_124;
    addr_10022853_141:
    tmp32_189 = ecx;
    ecx = eax12;
    eax12 = tmp32_189;
    *reinterpret_cast<void**>(&ebx58 + 1) = reinterpret_cast<void*>(0xff);
    --edi16;
    __asm__("outsb ");
    ++ebp6;
    zf190 = reinterpret_cast<uint1_t>(ebp6 == 0);
    if (zf190) {
        addr_100228c1_375:
        esp2 = esp2 - 4;
        *reinterpret_cast<void***>(esp2) = ebp6;
        goto addr_100228c2_133;
    } else {
        __asm__("outsb ");
        if (zf190) {
            addr_1002289f_377:
            esp2 = esp2 - 4;
            *reinterpret_cast<void***>(esp2) = ebp6;
            ++ecx;
            goto addr_100228a6_378;
        } else {
            addr_1002285f_379:
            esp2 = esp2 - 4;
            *reinterpret_cast<void***>(esp2) = esp2;
            __asm__("outsd ");
            goto addr_10022861_380;
        }
    }
    addr_10022810_142:
    esp191 = esp2 - 4;
    *reinterpret_cast<void***>(esp191) = reinterpret_cast<void**>(0x65676e61);
    ++eax12;
    zf52 = reinterpret_cast<uint1_t>(eax12 == 0);
    esp2 = esp191 - 4;
    *reinterpret_cast<void***>(esp2) = esp2;
    __asm__("outsd ");
    if (!zf52) {
        goto addr_1002287f_132;
    }
    esp192 = esp2 - 4;
    *reinterpret_cast<void***>(esp192) = reinterpret_cast<void**>(0x74747542);
    __asm__("outsd ");
    __asm__("outsb ");
    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
    esp193 = esp192 + 1 - 4;
    *reinterpret_cast<void***>(esp193) = ebp6;
    ++ecx;
    ++ebp6;
    eax12 = *reinterpret_cast<void***>(esp193);
    esp194 = esp193 + 4 - 4;
    *reinterpret_cast<void***>(esp194) = eax12;
    ++edx11;
    esp195 = esp194 - 4;
    *reinterpret_cast<void***>(esp195) = ebp6;
    esp2 = esp195 - 4;
    *reinterpret_cast<void***>(esp2) = eax12;
    if (__intrinsic()) {
        addr_100228a6_378:
        ++ebp6;
        eax196 = *reinterpret_cast<void***>(esp2);
        esp197 = esp2 + 4 - 4;
        *reinterpret_cast<void***>(esp197) = eax196;
        ++ecx;
        esp198 = esp197 - 4;
        *reinterpret_cast<void***>(esp198) = ebp6;
        eax12 = eax196 - 1;
        ++ebx58;
        esp2 = esp198 + 1 + 4;
        goto addr_100228af_383;
    } else {
        if (__intrinsic()) {
            addr_1002289e_385:
            goto addr_1002289f_377;
        } else {
            if (__intrinsic()) {
                addr_100228af_383:
                edi16 = *reinterpret_cast<void***>(esp2);
                esp199 = esp2 + 4;
                eax200 = eax12 + 1;
                goto addr_100228b1_387;
            } else {
                if (reinterpret_cast<signed char>(edx11) >= reinterpret_cast<signed char>(0)) {
                    addr_10022886_136:
                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                    *reinterpret_cast<void***>(ebx58) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx58)) | 0x6961503f);
                    cf53 = 0;
                    zf201 = *reinterpret_cast<void***>(ebx58) == 0;
                    __asm__("outsb ");
                    if (zf201) {
                        addr_100228d1_389:
                        if (zf201) {
                            addr_10022938_390:
                            __asm__("outsb ");
                            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                            esp202 = esp2 + 1 - 4;
                            *reinterpret_cast<void***>(esp202) = ebp6;
                            ++ebp6;
                            eax203 = *reinterpret_cast<void***>(esp202);
                            esp204 = esp202 + 4 - 4;
                            *reinterpret_cast<void***>(esp204) = eax203;
                            ecx = ecx + 1 + 1;
                            esp205 = esp204 - 4;
                            *reinterpret_cast<void***>(esp205) = ebp6;
                            if (!ecx) {
                                addr_100229ae_391:
                                esp206 = esp205 - 4;
                                *reinterpret_cast<void***>(esp206) = ebp6;
                                eax12 = *reinterpret_cast<void***>(esp206);
                                esp207 = esp206 + 4 - 4;
                                *reinterpret_cast<void***>(esp207) = eax12;
                                ecx = ecx + 1 + 1;
                                esp2 = esp207 - 4;
                                *reinterpret_cast<void***>(esp2) = esi17;
                                ebp6 = ebp6 + 1 + 1;
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                if (!ebp6) {
                                    addr_10022a01_127:
                                    __asm__("aas ");
                                    goto addr_10022a03_392;
                                } else {
                                    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                                    edx11 = *reinterpret_cast<void***>(esp2);
                                    esp56 = esp2 + 4;
                                    tmp8_208 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 63) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)));
                                    cf53 = reinterpret_cast<uint1_t>(tmp8_208 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 63));
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi16) + reinterpret_cast<unsigned char>(eax12) + 63) = tmp8_208;
                                    goto addr_100229c9_70;
                                }
                            } else {
                                esp209 = esp205 - 4;
                                *reinterpret_cast<void***>(esp209) = edx11;
                                ++ebp6;
                                ++ebx58;
                                esp210 = esp209 - 4;
                                *reinterpret_cast<void***>(esp210) = esp210;
                                eax54 = eax203 + 1 + 1 + 1;
                                edx11 = *reinterpret_cast<void***>(esp210);
                                esp56 = esp210 + 4;
                                goto addr_10022956_66;
                            }
                        } else {
                            __asm__("outsb ");
                            if (zf201) {
                                goto addr_1002292b_397;
                            } else {
                                edi16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x63695240);
                                esp211 = esp2 - 4;
                                *reinterpret_cast<void***>(esp211) = reinterpret_cast<void**>(0x74786554);
                                ++eax12;
                                esp2 = esp211 + 1;
                                goto addr_100228e4_65;
                            }
                        }
                    } else {
                        *reinterpret_cast<void***>(esp2 - 4) = edx11;
                        esp2 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx58 + 0x68) * 0x74786554 + 1);
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_1002289e_385;
                    }
                } else {
                    addr_1002283d_400:
                    __asm__("outsb ");
                    __asm__("outsw ");
                    goto addr_1002283f_401;
                }
            }
        }
    }
    addr_100227f3_146:
    esp46 = esp46 - 4;
    *reinterpret_cast<void***>(esp46) = ebp6;
    ++ecx;
    ++ebp6;
    goto addr_100227ff_63;
    addr_1002278e_147:
    __asm__("outsb ");
    if (zf47) {
        addr_100227d1_144:
        esp2 = esp46 - 4;
        *reinterpret_cast<void***>(esp2) = ecx;
        ++ecx;
        ++ebp6;
        goto addr_100227dc_402;
    } else {
        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
        edx11 = *reinterpret_cast<void***>(esp46);
        *reinterpret_cast<unsigned char*>(edx11 + 12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx11 + 12) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)));
        __asm__("aas ");
        esp2 = esp46 + 4 - 4;
        *reinterpret_cast<void***>(esp2) = edx11;
        esi17 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(reinterpret_cast<int16_t>(*reinterpret_cast<struct s541**>(&ebp6)) + reinterpret_cast<uint16_t>(*reinterpret_cast<void**>(&edi16))) + 0x74) * 0x54407265);
        cf8 = __intrinsic();
        of50 = __intrinsic();
        sf49 = __undefined();
        __asm__("outsd ");
        if (!__undefined()) {
            goto addr_1002280a_137;
        }
    }
    addr_100224ff_16:
    ++ebp6;
    zf212 = reinterpret_cast<uint1_t>(ebp6 == 0);
    if (cf8 | zf212) {
        addr_10022567_406:
        esp213 = esp2 - 4;
        *reinterpret_cast<void***>(esp213) = ebp6;
        ++edi16;
        --edx11;
        eax12 = eax12 + 1 + 1 - 1;
        esp214 = esp213 - 4;
        *reinterpret_cast<void***>(esp214) = eax12;
        ecx = ecx + 1 + 1;
        zf32 = ecx == 0;
        esp31 = esp214 - 4;
        *reinterpret_cast<void***>(esp31) = ebp6;
        if (zf32) {
            addr_100225d9_46:
            if (zf32) {
                addr_1002264a_407:
                ++ecx;
                eax215 = *reinterpret_cast<void***>(esp31);
                esp216 = esp31 + 4;
                edx11 = *reinterpret_cast<void***>(esp216);
                esp2 = esp216 + 4;
                tmp8_217 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx58) + reinterpret_cast<unsigned char>(eax215) + 0x6464413f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                cf8 = reinterpret_cast<uint1_t>(tmp8_217 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx58) + reinterpret_cast<unsigned char>(eax215) + 0x6464413f));
                *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebx58) + reinterpret_cast<unsigned char>(eax215) + 0x6464413f) = tmp8_217;
                eax12 = eax215 + 1;
                ebp6 = ebp6 + 1 + 1;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp6) {
                    addr_1002269f_408:
                    esp218 = esp2 - 4;
                    *reinterpret_cast<void***>(esp218) = eax12;
                    ++ecx;
                    esp2 = esp218 - 4;
                    *reinterpret_cast<void***>(esp2) = esi17;
                    ++ebp6;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp6) {
                        addr_100226ea_409:
                        ++ebp6;
                        zf43 = ebp6 == 0;
                        goto addr_100226eb_58;
                    } else {
                        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 80));
                        goto addr_100226ab_411;
                    }
                } else {
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    eax12 = eax12 + 1 + 1;
                    esp36 = esp2 + 1 - 4;
                    *reinterpret_cast<void***>(esp36) = ecx;
                    goto addr_1002266a_57;
                }
            } else {
                esp2 = esp31 - 1;
                __asm__("outsd ");
                goto addr_100225dd_164;
            }
        } else {
            esp219 = esp31 - 4;
            *reinterpret_cast<void***>(esp219) = ebx220;
            ++esi17;
            ++ebp6;
            esp2 = esp219 - 4;
            *reinterpret_cast<void***>(esp2) = edx11;
            goto addr_1002257f_39;
        }
    } else {
        __asm__("outsb ");
        if (!zf212) {
            ++eax12;
            goto addr_10022506_6;
        }
    }
    addr_10022547_418:
    ++ebp6;
    zf13 = reinterpret_cast<uint1_t>(ebp6 == 0);
    sf221 = reinterpret_cast<signed char>(ebp6) < reinterpret_cast<signed char>(0);
    below_or_equal14 = reinterpret_cast<uint1_t>(cf8 | zf13);
    goto addr_10022548_419;
    addr_100224c8_18:
    esp222 = esp2 - 4;
    *reinterpret_cast<void***>(esp222) = ebp6;
    ++edi16;
    --edx11;
    esp223 = esp222 - 4;
    *reinterpret_cast<void***>(esp223) = eax12;
    esp2 = esp223 - 4;
    *reinterpret_cast<void***>(esp2) = eax12;
    ecx = ecx + 1 + 1 + 1;
    goto addr_100224d0_420;
    addr_1002248e_24:
    goto addr_10022490_3;
    addr_1002245d_28:
    esp224 = esp2 - 4;
    *reinterpret_cast<void***>(esp224) = ebx225;
    esi17 = reinterpret_cast<void**>(&esi18->f1);
    ++ebp6;
    esp2 = esp224 - 4;
    *reinterpret_cast<void***>(esp2) = edx11;
    goto addr_10022464_421;
    addr_10022447_34:
    goto addr_10022448_25;
    addr_100223f7_35:
    if (cf8) {
        addr_10022468_422:
        eax12 = eax12 + 1 + 1;
        edx11 = *reinterpret_cast<void***>(esp2);
        tmp8_226 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax12 + 13) + bh227);
        cf8 = reinterpret_cast<uint1_t>(tmp8_226 < *reinterpret_cast<unsigned char*>(eax12 + 13));
        *reinterpret_cast<unsigned char*>(eax12 + 13) = tmp8_226;
        zf228 = *reinterpret_cast<unsigned char*>(eax12 + 13) == 0;
        __asm__("aas ");
        esp2 = esp2 + 4 - 4;
        *reinterpret_cast<void***>(esp2) = ebx229;
        if (zf228) {
            goto addr_100224ba_14;
        }
    } else {
        if (below_or_equal15) {
            addr_10022464_421:
            esp230 = esp2 - 4;
            *reinterpret_cast<void***>(esp230) = edx11;
            ecx = *reinterpret_cast<void***>(esp230);
            esp2 = esp230 + 4;
            ++eax12;
            goto addr_10022468_422;
        } else {
            if (cf8) {
                goto addr_10022440_4;
            }
            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
            ecx = ecx + 1 + 1;
            esp231 = reinterpret_cast<struct s542*>(*reinterpret_cast<int32_t*>(ecx + 82) * 0x40746365);
            eax12 = eax12 + 1 + 1 + 1 + 1;
            edx11 = esp231->f0;
            esp232 = reinterpret_cast<struct s543*>(&esp231->f4);
            tmp8_233 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(bh234));
            cf8 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_233) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
            *reinterpret_cast<void***>(eax12) = tmp8_233;
            es235 = esp232->f0;
            esp2 = reinterpret_cast<void**>(&esp232->f2);
            __asm__("aas ");
            edi16 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edi236) + 1 + 1);
            if (!edi16) 
                goto addr_10022468_422; else 
                goto addr_10022423_432;
        }
    }
    __asm__("outsd ");
    __asm__("arpl [ebp+0x73], si");
    ++eax12;
    ++ebp6;
    zf13 = reinterpret_cast<uint1_t>(ebp6 == 0);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (zf13) {
        addr_100224d0_420:
        esp237 = esp2 - 4;
        *reinterpret_cast<void***>(esp237) = ebp6;
        --ecx;
        zf13 = reinterpret_cast<uint1_t>(ecx == 0);
        sf221 = reinterpret_cast<signed char>(ecx) < reinterpret_cast<signed char>(0);
        below_or_equal14 = reinterpret_cast<uint1_t>(cf8 | zf13);
        esp2 = esp237 - 4;
        *reinterpret_cast<void***>(esp2) = edx11;
        __asm__("popad ");
        if (!below_or_equal14) {
            addr_1002251b_53:
            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
            cf8 = __intrinsic();
            ++eax12;
            goto addr_10022523_13;
        } else {
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (zf13) {
                goto addr_1002252e_167;
            }
            if (!cf8) 
                goto addr_100224df_437;
        }
    } else {
        if (cf8) 
            goto addr_100224f1_439;
        if (cf8 | zf13) 
            goto addr_100224ed_441;
        if (cf8) 
            goto addr_100224c8_18; else 
            goto addr_10022488_23;
    }
    addr_1002254e_443:
    __asm__("outsd ");
    if (below_or_equal14) {
        addr_100225b7_444:
        __asm__("outsb ");
        if (zf13) {
            addr_1002260b_161:
            ebp238 = ebp6 + 1;
            eax239 = eax12 + 1;
            esp240 = esp2 - 4;
            *reinterpret_cast<void***>(esp240) = eax239;
            esp241 = esp240 - 4;
            *reinterpret_cast<void***>(esp241) = ebp238;
            esp242 = esp241 + 4 - 4;
            *reinterpret_cast<void***>(esp242) = edx11;
            esp243 = esp242 - 4;
            *reinterpret_cast<void***>(esp243) = esp243;
            esp244 = esp243 - 1 + 4 - 4;
            *reinterpret_cast<void***>(esp244) = edx11;
            esp245 = esp244 - 4;
            *reinterpret_cast<void***>(esp245) = esp245;
            ebx246 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx247) + 1 + 1);
            esp248 = esp245 - 1;
            edi249 = *reinterpret_cast<void***>(esp248);
            esp250 = esp248 + 4 - 4;
            *reinterpret_cast<void***>(esp250) = ebx246;
            ebp6 = ebp238 + 1;
            ebx58 = ebx246 + 1;
            esp251 = esp250 - 4;
            *reinterpret_cast<void***>(esp251) = esp251;
            ecx = ecx + 1 + 1 - 1 - 1 + 1 - 1;
            edi16 = edi249 - 1;
            --esi17;
            eax12 = eax239 + 1 + 1 + 1;
            edx11 = *reinterpret_cast<void***>(esp251);
            esp2 = esp251 + 4;
            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
            goto addr_1002262c_445;
        } else {
            if (cf8) {
                addr_1002262c_445:
                __asm__("fadd qword [eax]");
                __asm__("aas ");
                __asm__("aas ");
                *reinterpret_cast<void**>(eax12 + 0x72) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(eax12 + 0x72)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11)));
                cf8 = 0;
                sf221 = __intrinsic();
                __asm__("outsd ");
                if (!*reinterpret_cast<void**>(eax12 + 0x72)) 
                    goto addr_1002269f_408;
            } else {
                if (sf221) {
                    goto addr_1002263a_449;
                } else {
                    ++esp2;
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    goto addr_100225c9_48;
                }
            }
        }
    } else {
        ++eax12;
        ++ebp6;
        zf9 = reinterpret_cast<uint1_t>(ebp6 == 0);
        below_or_equal10 = reinterpret_cast<uint1_t>(cf8 | zf9);
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        goto addr_1002255a_41;
    }
    if (0) {
        addr_1002268a_156:
        __asm__("outsd ");
        __asm__("outsb ");
        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
        cf8 = __intrinsic();
        eax12 = eax12 + 1 + 1 + 1;
        esp2 = esp2 + 1 - 4;
        *reinterpret_cast<void***>(esp2) = ecx;
        ++ebp6;
        --edx11;
        ecx = ecx + 1 - 1;
        goto addr_1002269f_408;
    } else {
        addr_1002263a_449:
        if (cf8) {
            addr_100226ab_411:
            ++ecx;
            --ebx58;
            ++eax12;
            edx11 = *reinterpret_cast<void***>(esp2);
            *reinterpret_cast<void**>(&ecx) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)));
            eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) | 63);
            cf8 = 0;
            esp2 = esp2 + 4 - 4;
            *reinterpret_cast<void***>(esp2) = ebx58;
            if (0) {
                addr_100226fa_154:
                eax252 = eax12 + 1 + 1;
                esp253 = esp2 - 4;
                *reinterpret_cast<void***>(esp253) = ecx;
                ++ecx;
                ++ebp6;
                esp254 = esp253 - 4;
                *reinterpret_cast<void***>(esp254) = eax252;
                ++edi16;
                eax12 = eax252 + 1;
                edx11 = *reinterpret_cast<void***>(esp254);
                esp2 = esp254 + 4;
                *reinterpret_cast<void**>(&ebx58) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)));
                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) | 63);
                cf8 = 0;
                zf255 = 0;
                goto addr_10022708_453;
            } else {
                addr_100226b9_454:
                __asm__("arpl [ebx+0x4e], sp");
                __asm__("popad ");
                __asm__("insd ");
                ++eax12;
                ++ebp6;
                zf255 = ebp6 == 0;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (zf255) {
                    addr_10022708_453:
                    esp2 = esp2 - 4;
                    *reinterpret_cast<void***>(esp2) = ebx58;
                    if (zf255) {
                        addr_1002274e_455:
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        esp256 = esp2 - 4;
                        *reinterpret_cast<void***>(esp256) = ebp6;
                        ++ecx;
                        ++ebp6;
                        esp257 = esp256 + 4;
                        edx11 = *reinterpret_cast<void***>(esp257);
                        esp2 = esp257 + 4;
                        goto addr_1002275d_456;
                    } else {
                        __asm__("arpl [ebx+0x53], sp");
                        if (zf255) {
                            addr_10022773_458:
                            __asm__("outsb ");
                            ++esp2;
                            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                            cf8 = __intrinsic();
                            goto addr_10022779_459;
                        } else {
                            if (zf255) {
                                addr_10022779_459:
                                goto addr_1002277c_62;
                            } else {
                                ++eax12;
                                ++ebp6;
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                if (!ebp6) {
                                    addr_1002275d_456:
                                    *reinterpret_cast<unsigned char*>(esi17 + 0x6e4f3f0a) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi17 + 0x6e4f3f0a) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                                    --ecx;
                                    zf258 = ecx == 0;
                                    __asm__("outsb ");
                                    if (__intrinsic()) {
                                        addr_100227dc_402:
                                        eax12 = *reinterpret_cast<void***>(esp2);
                                        esp259 = esp2 + 4;
                                        edx11 = *reinterpret_cast<void***>(esp259);
                                        esp2 = esp259 + 4;
                                        *reinterpret_cast<void**>(&eax12 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
                                        *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<unsigned char>(edi16));
                                        __asm__("aas ");
                                        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi16 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x75) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi16 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x75) ^ reinterpret_cast<unsigned char>(edx11);
                                        zf190 = reinterpret_cast<uint1_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi16 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x75) == 0);
                                        __asm__("arpl [eax+0x42], bp");
                                        if (!zf190) {
                                            addr_10022861_380:
                                            if (!zf190) {
                                                addr_100228c6_134:
                                                tmp8_260 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)) + 0xff);
                                                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_260) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                                                *reinterpret_cast<void**>(&ecx + 1) = tmp8_260;
                                                esp2 = esp2 - 2;
                                                *reinterpret_cast<void***>(esp2) = es235;
                                                __asm__("aas ");
                                                ++edi16;
                                                zf201 = edi16 == 0;
                                                if (zf201) {
                                                    addr_10022912_131:
                                                    --ecx;
                                                    __asm__("insd ");
                                                    __asm__("insd ");
                                                    if (cf53) {
                                                        addr_1002298d_129:
                                                        tmp8_261 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax12 + 11) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax12 + 1)));
                                                        cf53 = reinterpret_cast<uint1_t>(tmp8_261 < *reinterpret_cast<unsigned char*>(eax12 + 11));
                                                        *reinterpret_cast<unsigned char*>(eax12 + 11) = tmp8_261;
                                                        goto addr_10022990_462;
                                                    } else {
                                                        addr_1002291a_463:
                                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(esi17 + 0x65)) * 0x75636f46);
                                                        cf53 = __intrinsic();
                                                        zf201 = __undefined();
                                                        if (!cf53) {
                                                            addr_10022975_175:
                                                            goto addr_10022976_69;
                                                        } else {
                                                            __asm__("arpl [gs:edi+ecx*2+0x66], si");
                                                            if (!cf53) {
                                                                addr_10022990_462:
                                                                __asm__("aas ");
                                                                --edi16;
                                                                __asm__("outsb ");
                                                                esp2 = esp2 - 4;
                                                                *reinterpret_cast<void***>(esp2) = ebp6;
                                                                __asm__("outsb ");
                                                                goto addr_10022995_465;
                                                            } else {
                                                                addr_1002292b_397:
                                                                if (zf201) 
                                                                    goto addr_100229a0_466;
                                                            }
                                                            ++eax12;
                                                            esp2 = esp2 - 4;
                                                            *reinterpret_cast<void***>(esp2) = esp2;
                                                            __asm__("outsd ");
                                                            if (eax12) {
                                                                addr_10022995_465:
                                                                --eax12;
                                                                zf63 = eax12 == 0;
                                                                __asm__("outsd ");
                                                                if (!cf53) {
                                                                    addr_10022a0d_468:
                                                                    __asm__("outsb ");
                                                                    if (zf63) {
                                                                        addr_10022a52_125:
                                                                        *reinterpret_cast<void***>(esp2 - 4) = edx11;
                                                                        esp56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edi16 + 0x68) * 0x696c4374);
                                                                        cf53 = __intrinsic();
                                                                        sf262 = __undefined();
                                                                        zf91 = __undefined();
                                                                        __asm__("arpl [ebx+0x45], bp");
                                                                        if (cf53 | zf91) 
                                                                            goto addr_10022ac9_469;
                                                                    } else {
                                                                        esp56 = esp2 - 4;
                                                                        *reinterpret_cast<void***>(esp56) = esp56;
                                                                        goto addr_10022a13_71;
                                                                    }
                                                                } else {
                                                                    ++eax12;
                                                                    esp2 = esp2 - 4;
                                                                    *reinterpret_cast<void***>(esp2) = esp2;
                                                                    __asm__("outsd ");
                                                                    if (eax12) {
                                                                        addr_10022a03_392:
                                                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x63696c43);
                                                                        eax12 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 0x76) * 0x65);
                                                                        zf63 = __undefined();
                                                                        goto addr_10022a0d_468;
                                                                    } else {
                                                                        addr_100229a0_466:
                                                                        esp263 = esp2 - 4;
                                                                        *reinterpret_cast<void***>(esp263) = reinterpret_cast<void**>(0x74747542);
                                                                        __asm__("outsd ");
                                                                        __asm__("outsb ");
                                                                        esp205 = esp263 + 1;
                                                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                                        goto addr_100229ae_391;
                                                                    }
                                                                }
                                                            } else {
                                                                esp2 = esp2 - 4;
                                                                *reinterpret_cast<void***>(esp2) = reinterpret_cast<void**>(0x74747542);
                                                                __asm__("outsd ");
                                                                goto addr_10022938_390;
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    __asm__("outsd ");
                                                    __asm__("outsb ");
                                                    goto addr_100228d1_389;
                                                }
                                            } else {
                                                esp264 = esp2 - 4;
                                                *reinterpret_cast<void***>(esp264) = reinterpret_cast<void**>(0x74747542);
                                                __asm__("outsd ");
                                                __asm__("outsb ");
                                                esp2 = esp264 + 1;
                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                cf8 = __intrinsic();
                                                goto addr_10022871_138;
                                            }
                                        } else {
                                            if (zf190) {
                                                goto addr_1002285f_379;
                                            } else {
                                                __asm__("outsb ");
                                                esp46 = esp2 + 1;
                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                goto addr_100227f3_146;
                                            }
                                        }
                                    } else {
                                        if (zf258) {
                                            addr_100227a9_150:
                                            __asm__("outsd ");
                                            __asm__("outsb ");
                                            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                            esp265 = esp2 + 1 - 4;
                                            *reinterpret_cast<void***>(esp265) = ebx58;
                                            ++edi16;
                                            eax12 = *reinterpret_cast<void***>(esp265);
                                            esp266 = esp265 + 4;
                                            edx11 = *reinterpret_cast<void***>(esp266);
                                            esp2 = esp266 + 4;
                                            *reinterpret_cast<void***>(esi17) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
                                            *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) + reinterpret_cast<unsigned char>(edi16));
                                            __asm__("aas ");
                                            *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi16 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x75) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi16 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x75) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11)));
                                            zf267 = *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi16 + reinterpret_cast<unsigned char>(ebp6) * 2) + 0x75) == 0;
                                            __asm__("arpl [eax+0x42], bp");
                                            if (!zf267) {
                                                addr_1002283f_401:
                                                eax200 = eax12 + 1;
                                                *reinterpret_cast<unsigned char*>(&eax200) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax200) ^ *reinterpret_cast<unsigned char*>(eax200 + 72));
                                                esp268 = esp2 - 4;
                                                *reinterpret_cast<void***>(esp268) = eax200;
                                                ++ecx;
                                                esp269 = esp268 - 4;
                                                *reinterpret_cast<void***>(esp269) = esi17;
                                                esp199 = esp269 - 4;
                                                *reinterpret_cast<void***>(esp199) = esi17;
                                                __asm__("popad ");
                                                __asm__("insb ");
                                                if (ecx) {
                                                    addr_100228b1_387:
                                                    eax12 = eax200 + 1;
                                                    esp270 = esp199 - 4;
                                                    *reinterpret_cast<void***>(esp270) = eax12;
                                                    ++edx11;
                                                    esp2 = esp270 - 4;
                                                    *reinterpret_cast<void***>(esp2) = ebp6;
                                                    if (!edx11) {
                                                        goto addr_1002291a_463;
                                                    } else {
                                                        esp271 = esp2 - 4;
                                                        *reinterpret_cast<void***>(esp271) = edx11;
                                                        ++ebp6;
                                                        ++ebx58;
                                                        esp2 = esp271 - 4;
                                                        *reinterpret_cast<void***>(esp2) = esp2;
                                                        eax12 = eax12 + 1 + 1;
                                                        *reinterpret_cast<uint32_t*>(eax12 + 65) = *reinterpret_cast<uint32_t*>(eax12 + 65) ^ reinterpret_cast<unsigned char>(edx11);
                                                        goto addr_100228c1_375;
                                                    }
                                                } else {
                                                    eax272 = eax200 + 1;
                                                    *reinterpret_cast<unsigned char*>(&eax272) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax272) ^ *reinterpret_cast<unsigned char*>(eax272 + 49));
                                                    eax12 = eax272 + 1;
                                                    edx11 = *reinterpret_cast<void***>(esp199);
                                                    esp2 = esp199 + 4;
                                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                    goto addr_10022853_141;
                                                }
                                            } else {
                                                if (zf267) {
                                                    goto addr_1002283d_400;
                                                } else {
                                                    __asm__("outsb ");
                                                    esp46 = esp2 + 1;
                                                    goto addr_100227d0_485;
                                                }
                                            }
                                        } else {
                                            esp46 = esp2 - 4;
                                            *reinterpret_cast<void***>(esp46) = esp46;
                                            __asm__("outsd ");
                                            if (!zf258) {
                                                addr_100227d0_485:
                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                goto addr_100227d1_144;
                                            } else {
                                                esp2 = esp46 - 4;
                                                *reinterpret_cast<void***>(esp2) = reinterpret_cast<void**>(0x74747542);
                                                __asm__("outsd ");
                                                goto addr_10022773_458;
                                            }
                                        }
                                    }
                                } else {
                                    ++esp2;
                                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                    goto addr_10022724_489;
                                }
                            }
                        }
                    }
                } else {
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    eax273 = eax12 + 1 + 1;
                    esp274 = esp2 + 1 - 4;
                    *reinterpret_cast<void***>(esp274) = ecx;
                    ++ecx;
                    ++ebp6;
                    esp275 = esp274 - 4;
                    *reinterpret_cast<void***>(esp275) = eax273;
                    ++edi16;
                    eax12 = eax273 + 1;
                    edx11 = *reinterpret_cast<void***>(esp275);
                    *reinterpret_cast<void**>(&ecx + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)));
                    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) | 63);
                    cf8 = 0;
                    esp2 = esp275 + 4 - 4;
                    *reinterpret_cast<void***>(esp2) = ebx58;
                    if (0) {
                        addr_10022724_489:
                        esp276 = esp2 - 4;
                        *reinterpret_cast<void***>(esp276) = ecx;
                        ++ebp6;
                        eax277 = eax12 + 1 + 1 - 1 + 1;
                        edx11 = *reinterpret_cast<void***>(esp276);
                        esp2 = esp276 + 4;
                        *reinterpret_cast<void***>(eax277) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax277)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
                        ecx = ecx + 1 + 1;
                        tmp32_278 = eax277 + 0x6665443f;
                        cf8 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_278) < reinterpret_cast<unsigned char>(eax277));
                        eax12 = tmp32_278;
                        zf43 = eax12 == 0;
                        goto addr_10022732_59;
                    } else {
                        __asm__("arpl [ebx+0x44], sp");
                        if (1) {
                            addr_1002274c_152:
                            ++esp2;
                            goto addr_1002274e_455;
                        } else {
                            ++eax12;
                            goto addr_100226ea_409;
                        }
                    }
                }
            }
        } else {
            if (sf221) {
                goto addr_100226b9_454;
            } else {
                esp31 = esp2 + 1;
                esi17 = reinterpret_cast<void**>(v279 * 0x49557463);
                --ecx;
                goto addr_1002264a_407;
            }
        }
    }
    __asm__("outsb ");
    if (zf91) {
        addr_10022aa7_111:
        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
        eax12 = eax12 + 1 + 1;
        esp280 = esp56 - 4;
        *reinterpret_cast<void***>(esp280) = ecx;
        ++ebp6;
        esp281 = esp280 - 4;
        *reinterpret_cast<void***>(esp281) = eax12;
        ecx = ecx + 1 + 1;
        esp282 = esp281 - 4;
        *reinterpret_cast<void***>(esp282) = esi17;
        esp56 = esp282 - 4;
        *reinterpret_cast<void***>(esp56) = esi17;
        __asm__("popad ");
        __asm__("insb ");
        if (ecx) {
            goto addr_10022b21_498;
        }
    } else {
        esp56 = esp56 - 4;
        *reinterpret_cast<void***>(esp56) = esp56;
        __asm__("outsd ");
        if (!zf91) {
            addr_10022ace_500:
            __asm__("outsw ");
            eax283 = eax12 + 1;
            *reinterpret_cast<unsigned char*>(&eax283) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax283) ^ *reinterpret_cast<unsigned char*>(eax283 + 88));
            eax12 = eax283 - 1;
            esp284 = esp56 + 4 - 4;
            *reinterpret_cast<void***>(esp284) = eax12;
            ++ecx;
            zf91 = reinterpret_cast<uint1_t>(ecx == 0);
            esp285 = esp284 - 4;
            *reinterpret_cast<void***>(esp285) = ebp6;
            esp56 = esp285 - 4;
            *reinterpret_cast<void***>(esp56) = ebp6;
            if (__intrinsic()) {
                addr_10022b40_501:
                __asm__("popad ");
                __asm__("insb ");
                if (!zf91) {
                    addr_10022ba9_502:
                    esp286 = esp56 - 4;
                    *reinterpret_cast<void***>(esp286) = ecx;
                    ++ecx;
                    ++ebp6;
                    eax12 = eax12 + 1 + 1 - 1 + 1;
                    esp56 = esp286 + 4;
                    tmp8_287 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                    cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_287) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                    *reinterpret_cast<void***>(eax12) = tmp8_287;
                    zf72 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax12) == 0);
                    of73 = __intrinsic();
                    below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
                    edx11 = reinterpret_cast<void**>(0x65473f07);
                    goto addr_10022bbe_77;
                } else {
                    addr_10022b44_503:
                    ++eax12;
                    goto addr_10022b45_76;
                }
            } else {
                __asm__("popad ");
                if (zf91) 
                    goto addr_10022b44_503;
                ++ebx58;
                __asm__("popad ");
                __asm__("arpl [eax+0x65], bp");
                ++eax12;
                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
                goto addr_10022ae6_109;
            }
        } else {
            esp288 = esp56 - 4;
            *reinterpret_cast<void***>(esp288) = reinterpret_cast<void**>(0x74747542);
            __asm__("outsd ");
            __asm__("outsb ");
            esp56 = esp288 + 1;
            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
            goto addr_10022a79_72;
        }
    }
    ++eax12;
    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 80));
    cf53 = 0;
    ++edi16;
    esp289 = esp56 - 4;
    *reinterpret_cast<void***>(esp289) = eax12;
    ++edx11;
    zf91 = reinterpret_cast<uint1_t>(edx11 == 0);
    sf262 = reinterpret_cast<signed char>(edx11) < reinterpret_cast<signed char>(0);
    esp290 = esp289 - 4;
    *reinterpret_cast<void***>(esp290) = ebp6;
    esp56 = esp290 - 4;
    *reinterpret_cast<void***>(esp56) = eax12;
    if (0) {
        addr_10022b36_508:
        ++ebp6;
        eax12 = eax12 + 1 + 1;
        esp291 = esp56 + 4 - 4;
        *reinterpret_cast<void***>(esp291) = eax12;
        esp292 = esp291 - 4;
        *reinterpret_cast<void***>(esp292) = eax12;
        ecx = ecx + 1 + 1;
        zf91 = reinterpret_cast<uint1_t>(ecx == 0);
        esp56 = esp292 - 4;
        *reinterpret_cast<void***>(esp56) = esi17;
        goto addr_10022b3f_509;
    } else {
        if (__intrinsic()) {
            addr_10022b2e_511:
            esp293 = esp56 - 4;
            *reinterpret_cast<void***>(esp293) = eax12;
            ++edx11;
            zf87 = edx11 == 0;
            esp56 = esp293 - 4;
            *reinterpret_cast<void***>(esp56) = ebp6;
            if (zf87) {
                addr_10022b94_372:
                if (zf87) {
                    addr_10022be1_97:
                    if (zf87) {
                        addr_10022c44_243:
                        __asm__("outsb ");
                        tmp8_294 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_294) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                        *reinterpret_cast<void***>(eax12) = tmp8_294;
                        zf113 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax12) == 0);
                        of109 = __intrinsic();
                        below_or_equal114 = reinterpret_cast<uint1_t>(cf53 | zf113);
                        tmp32_295 = *reinterpret_cast<void***>(eax12);
                        *reinterpret_cast<void***>(eax12) = eax12;
                        eax12 = tmp32_295;
                        esp56 = esp56 - 4;
                        *reinterpret_cast<void***>(esp56) = ebx58;
                        if (zf113) {
                            addr_10022c95_188:
                            __asm__("outsd ");
                            if (of109) {
                                addr_10022cfd_186:
                                esp296 = esp56 - 4;
                                *reinterpret_cast<void***>(esp296) = ebx58;
                                esp297 = esp296 - 4;
                                *reinterpret_cast<void***>(esp297) = eax12;
                                esp298 = esp297 - 4;
                                *reinterpret_cast<void***>(esp298) = esi17;
                                *reinterpret_cast<void***>(edx11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ reinterpret_cast<unsigned char>(esi17));
                                eax299 = eax12 + 1;
                                esp300 = esp298 - 4;
                                *reinterpret_cast<void***>(esp300) = eax299;
                                ecx = ecx + 1 + 1;
                                esp56 = esp300 - 4;
                                *reinterpret_cast<void***>(esp56) = ebp6;
                                eax12 = eax299 - 1;
                                goto addr_10022d09_512;
                            } else {
                                if (cf53) {
                                    addr_10022d0e_200:
                                    esp301 = esp56 - 4;
                                    *reinterpret_cast<void***>(esp301) = eax12;
                                    esp302 = esp301 + 4 + 4;
                                    eax12 = eax12 + 1 + 1;
                                    ++ebp6;
                                    --ecx;
                                    edi16 = *reinterpret_cast<void***>(esp302);
                                    esp56 = esp302 + 4;
                                    --esi17;
                                    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ reinterpret_cast<unsigned char>(esi17));
                                    goto addr_10022d18_240;
                                } else {
                                    esp56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 0x73) * 0x3f052200);
                                    cf53 = __intrinsic();
                                    ++ebx58;
                                    zf113 = reinterpret_cast<uint1_t>(ebx58 == 0);
                                    of109 = __intrinsic();
                                    below_or_equal114 = reinterpret_cast<uint1_t>(cf53 | zf113);
                                    if (cf53) {
                                        addr_10022d09_512:
                                        --ecx;
                                        esp56 = esp56 - 4;
                                        *reinterpret_cast<void***>(esp56) = esp56;
                                        goto addr_10022d0c_199;
                                    } else {
                                        __asm__("popad ");
                                        goto addr_10022ca5_198;
                                    }
                                }
                            }
                        } else {
                            __asm__("popad ");
                            if (zf113) 
                                goto addr_10022ca7_201;
                            if (zf113) 
                                goto addr_10022ccf_83;
                        }
                    } else {
                        esp303 = esp56 - 4;
                        *reinterpret_cast<void***>(esp303) = eax12;
                        --edi16;
                        --ecx;
                        goto addr_10022be7_519;
                    }
                } else {
                    esp303 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edi16 + 0x68) * 0x6c454074);
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (__undefined()) {
                        addr_10022be7_519:
                        --esi17;
                        esp304 = esp303 - 4;
                        *reinterpret_cast<void***>(esp304) = esp304;
                        eax12 = eax12 + 1 + 1;
                        esp305 = esp304 - 4;
                        *reinterpret_cast<void***>(esp305) = eax12;
                        esp306 = esp305 - 4;
                        *reinterpret_cast<void***>(esp306) = eax12;
                        ecx = ecx + 1 + 1;
                        esp307 = esp306 - 4;
                        *reinterpret_cast<void***>(esp307) = esi17;
                        esp56 = esp307 - 4;
                        *reinterpret_cast<void***>(esp56) = esi17;
                        __asm__("popad ");
                        __asm__("insb ");
                        if (ecx) 
                            goto addr_10022c5a_79; else 
                            goto addr_10022bf5_521;
                    } else {
                        esp56 = esp303 + 1;
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_10022ba9_502;
                    }
                }
            } else {
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = ebx58;
                --ecx;
                goto addr_10022b36_508;
            }
        } else {
            addr_10022ac9_469:
            if (cf53) {
                addr_10022b3f_509:
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = esi17;
                goto addr_10022b40_501;
            } else {
                if (!sf262) {
                    addr_10022b16_374:
                    if (zf91) 
                        goto addr_10022b59_91; else 
                        goto addr_10022b19_525;
                } else {
                    __asm__("outsb ");
                    goto addr_10022ace_500;
                }
            }
        }
    }
    __asm__("insb ");
    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
    goto addr_10022c5a_79;
    addr_10022bf5_521:
    ++eax12;
    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 64));
    edx11 = *reinterpret_cast<void***>(esp56);
    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
    cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) < reinterpret_cast<unsigned char>(eax12));
    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) - reinterpret_cast<unsigned char>(eax12));
    esp56 = esp56 + 4 + 1;
    __asm__("insb ");
    if (!esp56) {
        addr_10022c69_85:
        esp56 = esp56 - 4;
        *reinterpret_cast<void***>(esp56) = edx11;
        __asm__("insb ");
        __asm__("popad ");
        if (!cf53) {
            addr_10022cd8_176:
            eax12 = eax12 + 1 + 1;
            edx11 = *reinterpret_cast<void***>(esp56);
            esp56 = esp56 + 4;
            *reinterpret_cast<void***>(ebx58) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx58)) + reinterpret_cast<unsigned char>(eax12));
            goto addr_10022cdc_528;
        } else {
            addr_10022c73_194:
            --esp56;
            zf308 = esp56 == 0;
            __asm__("popad ");
            if (reinterpret_cast<signed char>(esp56) >= reinterpret_cast<signed char>(0)) {
                addr_10022cdc_528:
                tmp32_309 = eax12 + 0x6572433f;
                cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_309) < reinterpret_cast<unsigned char>(eax12));
                eax12 = tmp32_309;
                zf308 = eax12 == 0;
                goto addr_10022cde_529;
            } else {
                if (cf53) {
                    addr_10022cde_529:
                    __asm__("popad ");
                    if (zf308) {
                        addr_10022d4a_531:
                        ++ecx;
                        *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                        cf53 = 0;
                        ++edi16;
                        zf72 = reinterpret_cast<uint1_t>(edi16 == 0);
                        below_or_equal74 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf72));
                        if (zf72) 
                            goto addr_10022da3_235;
                    } else {
                        ++edi16;
                        zf72 = reinterpret_cast<uint1_t>(edi16 == 0);
                        of73 = __intrinsic();
                        below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
                        if (cf53) {
                            addr_10022d49_238:
                            goto addr_10022d4a_531;
                        } else {
                            addr_10022ce8_191:
                            if (of73) {
                                addr_10022d52_533:
                                __asm__("outsd ");
                                if (zf72) {
                                    addr_10022da7_534:
                                    ++ebp6;
                                    zf120 = ebp6 == 0;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    goto addr_10022dab_535;
                                } else {
                                    __asm__("insb ");
                                    __asm__("popad ");
                                    if (zf72) {
                                        addr_10022dc3_537:
                                        __asm__("aas ");
                                        esp56 = esp56 - 4;
                                        *reinterpret_cast<void***>(esp56) = ebx58;
                                        if (zf72) {
                                            addr_10022e0e_232:
                                            esp310 = esp56 - 4;
                                            *reinterpret_cast<void***>(esp310) = esi17;
                                            *reinterpret_cast<void***>(edx11) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx11)) ^ reinterpret_cast<unsigned char>(esi17));
                                            edi16 = *reinterpret_cast<void***>(esp310);
                                            --esi17;
                                            eax12 = eax12 + 1 + 1;
                                            esp56 = esp310 + 4 + 4;
                                            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                            goto addr_10022e18_538;
                                        } else {
                                            __asm__("outsb ");
                                            __asm__("popad ");
                                            goto addr_10022dce_540;
                                        }
                                    } else {
                                        if (below_or_equal74) {
                                            addr_10022dc1_542:
                                            *reinterpret_cast<unsigned char*>(esi17 + 13) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi17 + 13) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                                            zf72 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi17 + 13) == 0);
                                            goto addr_10022dc3_537;
                                        } else {
                                            ++edx11;
                                            __asm__("outsd ");
                                            if (edx11) {
                                                addr_10022dce_540:
                                                ++eax12;
                                                ++ebp6;
                                                __asm__("insb ");
                                                __asm__("insd ");
                                                __asm__("outsb ");
                                                if (!ebp6) {
                                                    addr_10022e18_538:
                                                    edx11 = reinterpret_cast<void**>(0x74654710);
                                                    esp311 = esp56 - 4;
                                                    *reinterpret_cast<void***>(esp311) = ebx58;
                                                    __asm__("arpl [ecx+0x6c], sp");
                                                    ++esi17;
                                                    __asm__("popad ");
                                                    __asm__("arpl [edi+ebp*2+0x72], si");
                                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                    eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) | 63);
                                                    esp56 = esp311 - 4;
                                                    *reinterpret_cast<void***>(esp56) = ebx58;
                                                    if (0) {
                                                        addr_10022e72_230:
                                                        esp312 = esp56 - 4;
                                                        *reinterpret_cast<void***>(esp312) = ecx;
                                                        ++ecx;
                                                        ++ebp6;
                                                        eax12 = *reinterpret_cast<void***>(esp312);
                                                        esp313 = esp312 + 4;
                                                        edx11 = *reinterpret_cast<void***>(esp313);
                                                        esp56 = esp313 + 4;
                                                        tmp8_314 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_314) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                                                        *reinterpret_cast<void***>(eax12) = tmp8_314;
                                                        *reinterpret_cast<void**>(&ecx) = reinterpret_cast<void*>(7);
                                                        __asm__("aas ");
                                                        ++edi16;
                                                        zf315 = edi16 == 0;
                                                        sf128 = reinterpret_cast<signed char>(edi16) < reinterpret_cast<signed char>(0);
                                                        goto addr_10022e82_544;
                                                    } else {
                                                        __asm__("outsb ");
                                                        cf53 = __intrinsic();
                                                        ++eax12;
                                                        ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974 + 1);
                                                        zf315 = ebp6 == 0;
                                                        sf128 = reinterpret_cast<signed char>(ebp6) < reinterpret_cast<signed char>(0);
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (zf315) {
                                                            addr_10022e82_544:
                                                            if (zf315) {
                                                                addr_10022ed1_546:
                                                                ++esp56;
                                                                esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                                goto addr_10022ed6_547;
                                                            } else {
                                                                __asm__("popad ");
                                                                if (!sf128) {
                                                                    goto addr_10022ef8_550;
                                                                }
                                                                if (!zf315) 
                                                                    goto addr_10022efe_552; else 
                                                                    goto addr_10022e8a_553;
                                                            }
                                                        } else {
                                                            esi17 = reinterpret_cast<void**>(g74654775 * 0x49557463);
                                                            esp316 = esp56 + 1 - 4;
                                                            *reinterpret_cast<void***>(esp316) = ecx;
                                                            ++ecx;
                                                            ++ebp6;
                                                            eax12 = eax12 + 1 + 1 - 1 + 1;
                                                            edx11 = *reinterpret_cast<void***>(esp316);
                                                            *reinterpret_cast<void***>(esi17) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)));
                                                            esp56 = esp316 + 4 - 2;
                                                            *reinterpret_cast<void***>(esp56) = es235;
                                                            __asm__("aas ");
                                                            goto addr_10022e57_555;
                                                        }
                                                    }
                                                } else {
                                                    esp116 = esp56 + 1;
                                                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                    goto addr_10022ddf_204;
                                                }
                                            } else {
                                                if (!cf53) {
                                                    addr_10022da3_235:
                                                    goto addr_10022da7_534;
                                                } else {
                                                    ++ebp6;
                                                    zf120 = ebp6 == 0;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    if (zf120) {
                                                        addr_10022dab_535:
                                                        __asm__("outsb ");
                                                        if (zf120) {
                                                            if (cf53) {
                                                                addr_10022e57_555:
                                                                ++edi16;
                                                                if (!edi16) {
                                                                    addr_10022e9c_560:
                                                                    esp317 = esp56 - 4;
                                                                    *reinterpret_cast<void***>(esp317) = ecx;
                                                                    ++ecx;
                                                                    ++ebp6;
                                                                    eax12 = *reinterpret_cast<void***>(esp317);
                                                                    esp318 = esp317 + 4;
                                                                    edx11 = *reinterpret_cast<void***>(esp318);
                                                                    *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                                                                    cf53 = 0;
                                                                    zf124 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) & 63) == 0;
                                                                    of125 = 0;
                                                                    esp56 = esp318 + 4 - 4;
                                                                    *reinterpret_cast<void***>(esp56) = esp56;
                                                                    goto addr_10022eac_217;
                                                                } else {
                                                                    addr_10022e5b_561:
                                                                    __asm__("outsb ");
                                                                    ebp6 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 97) * 0x6e6f6974);
                                                                    cf53 = __intrinsic();
                                                                    ++eax12;
                                                                    goto addr_10022e64_216;
                                                                }
                                                            } else {
                                                                addr_10022df2_205:
                                                                __asm__("popad ");
                                                                if (zf120) {
                                                                    goto addr_10022e5b_561;
                                                                }
                                                            }
                                                        } else {
                                                            esi319 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                            esp320 = esp56 + 1 - 4;
                                                            *reinterpret_cast<void***>(esp320) = ecx;
                                                            ++ecx;
                                                            ++ebp6;
                                                            edi16 = *reinterpret_cast<void***>(esp320);
                                                            esp321 = esp320 + 4;
                                                            esi17 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esi319) - 1);
                                                            eax12 = *reinterpret_cast<void***>(esp321);
                                                            esp322 = esp321 + 4;
                                                            edx11 = *reinterpret_cast<void***>(esp322);
                                                            esp56 = esp322 + 4;
                                                            goto addr_10022dc1_542;
                                                        }
                                                    } else {
                                                        ++esp56;
                                                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                                                        goto addr_10022d72_209;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            } else {
                                esp56 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebx58 + 64) * 0x756c6156);
                                ++eax12;
                                goto addr_10022cf2_183;
                            }
                        }
                    }
                } else {
                    addr_10022c79_87:
                    esp56 = esp56 - 4;
                    *reinterpret_cast<void***>(esp56) = edx11;
                    tmp8_323 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx58 + 0x74655300) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
                    cf53 = reinterpret_cast<uint1_t>(tmp8_323 < *reinterpret_cast<unsigned char*>(ebx58 + 0x74655300));
                    *reinterpret_cast<unsigned char*>(ebx58 + 0x74655300) = tmp8_323;
                    zf72 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx58 + 0x74655300) == 0);
                    of73 = __intrinsic();
                    below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
                    goto addr_10022c7e_179;
                }
            }
        }
    } else {
        --eax12;
        __asm__("popad ");
        __asm__("outsb ");
        __asm__("insb ");
        tmp8_324 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_324) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
        *reinterpret_cast<void***>(eax12) = tmp8_324;
        zf72 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax12) == 0);
        of73 = __intrinsic();
        below_or_equal74 = reinterpret_cast<uint1_t>(cf53 | zf72);
        *reinterpret_cast<void***>(eax12) = eax12;
        goto addr_10022c0d_78;
    }
    __asm__("outsd ");
    goto addr_10022d52_533;
    addr_10022efe_552:
    if (zf315) 
        goto addr_10022f40_568;
    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
    esp325 = esp56 + 1 - 4;
    *reinterpret_cast<void***>(esp325) = ecx;
    ++ebp6;
    eax326 = *reinterpret_cast<void***>(esp325);
    esp327 = esp325 + 4 - 4;
    *reinterpret_cast<void***>(esp327) = eax326;
    ecx = ecx + 1 + 1;
    --ebx58;
    eax328 = eax326 + 1;
    edx11 = *reinterpret_cast<void***>(esp327);
    esp56 = esp327 + 4;
    *reinterpret_cast<void***>(ebx58) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx58)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx11 + 1)));
    tmp32_329 = eax328 + 0x7375433f;
    cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_329) < reinterpret_cast<unsigned char>(eax328));
    eax12 = tmp32_329;
    zf124 = eax12 == 0;
    of125 = __intrinsic();
    goto addr_10022f17_218;
    addr_10022e8a_553:
    esp56 = esp56 - 4;
    *reinterpret_cast<void***>(esp56) = eax12;
    __asm__("outsd ");
    if (!cf53) {
        addr_10022ece_228:
        goto addr_10022ed1_546;
    } else {
        ++ebp6;
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        if (!ebp6) {
            addr_10022ed6_547:
            esp330 = esp56 - 4;
            *reinterpret_cast<void***>(esp330) = ebx58;
            ++edi16;
            __asm__("aas ");
            esp331 = esp330 - 4;
            *reinterpret_cast<void***>(esp331) = esi17;
            esp332 = esp331 - 4;
            *reinterpret_cast<void***>(esp332) = ebp6;
            ecx = ecx + 1 - 1;
            esp333 = esp332 + 1;
            eax12 = *reinterpret_cast<void***>(esp333);
            esp334 = esp333 + 4;
            edx11 = *reinterpret_cast<void***>(esp334);
            esp56 = esp334 + 4;
            tmp8_335 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp6 + 0x74533f0e) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58)));
            cf53 = reinterpret_cast<uint1_t>(tmp8_335 < *reinterpret_cast<unsigned char*>(ebp6 + 0x74533f0e));
            *reinterpret_cast<unsigned char*>(ebp6 + 0x74533f0e) = tmp8_335;
            __asm__("popad ");
            if (cf53) {
                addr_10022f66_249:
                esp56 = esp56 - 4;
                *reinterpret_cast<void***>(esp56) = ecx;
                ++ecx;
                ++ebp6;
                goto addr_10022f6a_251;
            } else {
                ++esp56;
                zf127 = esp56 == 0;
                sf128 = reinterpret_cast<signed char>(esp56) < reinterpret_cast<signed char>(0);
                of129 = __intrinsic();
                if (cf53) {
                    addr_10022f38_224:
                    esp336 = esp56 - 4;
                    *reinterpret_cast<void***>(esp336) = ebp6;
                    esp56 = esp336 - 4;
                    *reinterpret_cast<void***>(esp56) = eax12;
                    if (cf53) {
                        goto addr_10022fac_573;
                    }
                } else {
                    addr_10022ef8_550:
                    ++ebp6;
                    zf315 = ebp6 == 0;
                    sf128 = reinterpret_cast<signed char>(ebp6) < reinterpret_cast<signed char>(0);
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    goto addr_10022efe_552;
                }
            }
        } else {
            ++esp56;
            esi17 = reinterpret_cast<void**>(g74654775 * 0x49557463);
            goto addr_10022e9c_560;
        }
    }
    if (of129) {
        addr_10022fa3_576:
        ++ecx;
        ++ebp6;
        eax12 = *reinterpret_cast<void***>(esp56);
        esp337 = esp56 + 4;
        edx11 = *reinterpret_cast<void***>(esp337);
        esp56 = esp337 + 4;
        tmp8_338 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_338) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
        *reinterpret_cast<void***>(eax12) = tmp8_338;
        zf127 = *reinterpret_cast<void***>(eax12) == 0;
        if (!__intrinsic()) {
            addr_10022fba_577:
            if (!cf53) {
                addr_10023021_578:
                __asm__("arpl [edx+0x6f], si");
                __asm__("insb ");
                __asm__("insb ");
                *reinterpret_cast<void***>(esp56 - 4) = esi17;
                esp56 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp6 + 0x77) * 0x44407265);
                goto addr_1002302a_267;
            } else {
                esp150 = esp56 - 4;
                *reinterpret_cast<void***>(esp150) = ebx58;
                __asm__("arpl [edx+0x6f], si");
                goto addr_10022fc0_252;
            }
        } else {
            addr_10022fac_573:
            __asm__("aas ");
            esp56 = esp56 - 4;
            *reinterpret_cast<void***>(esp56) = ebx58;
            if (zf127) {
                addr_1002300a_580:
                ++eax12;
                edx11 = *reinterpret_cast<void***>(esp56);
                esp56 = esp56 + 4;
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                __asm__("retf ");
                *reinterpret_cast<void***>(edi16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi16)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx58 + 1)));
                cf53 = 0;
                ++edi16;
                zf339 = edi16 == 0;
                if (zf339) {
                    addr_1002306d_581:
                    __asm__("outsb ");
                    if (zf339) {
                        addr_100230b2_325:
                        ++ebp6;
                        --edx11;
                        goto addr_100230b4_261;
                    } else {
                        __asm__("popad ");
                        if (1) {
                            addr_100230d8_370:
                            esp340 = esp56 + 4 - 4;
                            *reinterpret_cast<void***>(esp340) = eax12;
                            ++ecx;
                            esp341 = esp340 + 1;
                            ++eax12;
                            edx11 = *reinterpret_cast<void***>(esp341);
                            tmp8_342 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                            cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_342) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                            *reinterpret_cast<void**>(&ecx + 1) = tmp8_342;
                            zf155 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&ecx + 1) == 0);
                            sf156 = reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx + 1)) < reinterpret_cast<signed char>(0);
                            below_or_equal159 = reinterpret_cast<uint1_t>(cf53 | zf155);
                            esp343 = esp341 + 4 - 2;
                            *reinterpret_cast<void***>(esp343) = cs344;
                            __asm__("aas ");
                            esp56 = esp343 - 4;
                            *reinterpret_cast<void***>(esp56) = esp56;
                            __asm__("outsd ");
                            if (!cf53) {
                                addr_1002315a_309:
                                goto addr_1002315c_302;
                            } else {
                                addr_100230e7_323:
                                esp56 = esp56 - 4;
                                *reinterpret_cast<void***>(esp56) = eax12;
                                __asm__("popad ");
                                if (zf155) {
                                    addr_1002315f_303:
                                    goto addr_10023160_281;
                                } else {
                                    if (cf53) 
                                        goto addr_1002315c_302; else 
                                        goto addr_100230ee_280;
                                }
                            }
                        } else {
                            esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                            esp56 = esp56 + 1 - 4;
                            *reinterpret_cast<void***>(esp56) = ebp6;
                            goto addr_1002307f_585;
                        }
                    }
                } else {
                    --edi16;
                    if (1) {
                        addr_1002307f_585:
                        ++ecx;
                        ++ebp6;
                        eax12 = *reinterpret_cast<void***>(esp56);
                        esp345 = esp56 + 4;
                        edx11 = *reinterpret_cast<void***>(esp345);
                        esp56 = esp345 + 4;
                        tmp8_346 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        cf53 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_346) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                        *reinterpret_cast<void***>(eax12) = tmp8_346;
                        zf347 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax12) == 0);
                        below_or_equal175 = reinterpret_cast<uint1_t>(cf53 | zf347);
                        goto addr_10023085_587;
                    } else {
                        if (!edi16) {
                            addr_1002305c_269:
                            ++ebp6;
                            eax12 = *reinterpret_cast<void***>(esp56);
                            esp348 = esp56 + 4;
                            edx11 = *reinterpret_cast<void***>(esp348);
                            esp56 = esp348 + 4;
                            *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                            *reinterpret_cast<void**>(&eax12 + 1) = reinterpret_cast<void*>(1);
                            __asm__("aas ");
                            __asm__("aas ");
                            *reinterpret_cast<void**>(edx11 + 0x65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) ^ reinterpret_cast<unsigned char>(edx11));
                            cf53 = 0;
                            zf339 = *reinterpret_cast<void**>(edx11 + 0x65) == 0;
                            __asm__("o16 arpl [edi+0x75], bp");
                            goto addr_1002306d_581;
                        } else {
                            addr_1002301c_589:
                            ++edx11;
                            zf347 = reinterpret_cast<uint1_t>(edx11 == 0);
                            below_or_equal175 = reinterpret_cast<uint1_t>(cf53 | zf347);
                            __asm__("popad ");
                            if (!cf53) {
                                addr_10023085_587:
                                if (!zf347) {
                                    __asm__("aas ");
                                    ++esp56;
                                    __asm__("outsd ");
                                    --ecx;
                                    below_or_equal175 = reinterpret_cast<uint1_t>(cf53 | reinterpret_cast<uint1_t>(ecx == 0));
                                    __asm__("outsb ");
                                }
                            } else {
                                esp56 = esp56 - 4;
                                *reinterpret_cast<void***>(esp56) = ebx58;
                                goto addr_10023021_578;
                            }
                        }
                    }
                }
            } else {
                --edi16;
                zf127 = edi16 == 0;
                if (!cf53) {
                    goto addr_1002301c_589;
                }
            }
        }
    } else {
        if (cf53) {
            goto addr_10022fb6_596;
        } else {
            addr_10022f40_568:
            if (!sf128) {
                addr_10022f8b_221:
                goto addr_10022f8f_245;
            } else {
                __asm__("outsb ");
                __asm__("outsw ");
                ++eax12;
                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) ^ *reinterpret_cast<unsigned char*>(eax12 + 88));
                edx11 = *reinterpret_cast<void***>(esp56);
                esp143 = esp56 + 4;
                *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)));
                __asm__("aas ");
                ++edi16;
                if (!edi16) {
                    addr_10022f95_246:
                    esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                    esp56 = esp143 - 4;
                    *reinterpret_cast<void***>(esp56) = ecx;
                    goto addr_10022fa3_576;
                } else {
                    __asm__("outsd ");
                    __asm__("outsd ");
                    __asm__("insb ");
                    ++eax12;
                    esp150 = esp143 - 4;
                    *reinterpret_cast<void***>(esp150) = esi17;
                    __asm__("popad ");
                    __asm__("insb ");
                    if (eax12) {
                        addr_10022fc1_253:
                        __asm__("insb ");
                        *reinterpret_cast<void***>(esp150 - 4) = esi17;
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        esp349 = reinterpret_cast<struct s544*>(*reinterpret_cast<int32_t*>(ebp6 + 0x77) * 0x44407265 - 4);
                        esp349->f0 = ecx;
                        ++ebp6;
                        eax12 = eax12 + 1 + 1 - 1 + 1;
                        edx11 = esp349->f0;
                        esp150 = reinterpret_cast<void**>(&esp349->f4);
                        *reinterpret_cast<void***>(eax12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                        ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi17)) * 63);
                        cf53 = __intrinsic();
                        zf151 = __undefined();
                        goto addr_10022fdd_273;
                    } else {
                        esp56 = esp150 + 1;
                        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
                        goto addr_10022f62_248;
                    }
                }
            }
        }
    }
    if (below_or_equal175) {
        goto addr_100230ff_310;
    }
    addr_10022fb6_596:
    if (zf127) {
        addr_10022ff8_271:
        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
        esp56 = esp56 - 4;
        *reinterpret_cast<void***>(esp56) = ecx;
        ++ecx;
        ++ebp6;
        eax12 = eax12 + 1 + 1 - 1;
        goto addr_1002300a_580;
    } else {
        ++edx11;
        __asm__("popad ");
        goto addr_10022fba_577;
    }
    addr_10022b19_525:
    ++ebp6;
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (!ebp6) {
        addr_10022b61_103:
        goto addr_10022b63_94;
    } else {
        addr_10022b21_498:
        esi17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx11 + 0x65)) * 0x49557463);
        eax12 = eax12 + 1 + 1;
        esp56 = esp56 + 1 - 4;
        *reinterpret_cast<void***>(esp56) = ecx;
        ++ecx;
        ++ebp6;
        goto addr_10022b2e_511;
    }
    addr_100224df_437:
    if (below_or_equal14) 
        goto addr_1002254a_603;
    if (cf8) 
        goto addr_1002252b_11;
    if (cf8) {
        addr_10022548_419:
        if (below_or_equal14) {
            addr_100225af_606:
            __asm__("aas ");
            __asm__("aas ");
            *reinterpret_cast<unsigned char*>(ebp6 + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp6 + 0x6c) ^ reinterpret_cast<unsigned char>(eax12));
            cf8 = 0;
            zf13 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebp6 + 0x6c) == 0);
            sf221 = __intrinsic();
            __asm__("insd ");
            goto addr_100225b7_444;
        } else {
            addr_1002254a_603:
            __asm__("outsb ");
            if (zf13) {
                addr_1002259f_166:
                goto addr_100225a4_50;
            } else {
                __asm__("insd ");
                goto addr_1002254e_443;
            }
        }
    } else {
        __asm__("a16 insd ");
        __asm__("outsb ");
        if (zf13) {
            addr_1002253f_609:
            __asm__("aas ");
            ++ecx;
            if (cf8 | reinterpret_cast<uint1_t>(ecx == 0)) {
                addr_100225ae_43:
                goto addr_100225af_606;
            } else {
                if (!cf8) 
                    goto addr_100225ac_42; else 
                    goto addr_10022547_418;
            }
        } else {
            addr_100224ed_441:
            __asm__("outsd ");
            goto addr_100224ee_611;
        }
    }
    addr_10022423_432:
    __asm__("insd ");
    ++esi17;
    zf13 = reinterpret_cast<uint1_t>(esi17 == 0);
    if (cf8) 
        goto addr_1002248e_24;
    __asm__("a16 insd ");
    __asm__("outsb ");
    if (zf13) {
        goto addr_10022488_23;
    }
    __asm__("outsd ");
    __asm__("outsd ");
    if (zf13) {
        __asm__("outsd ");
        __asm__("outsd ");
        if (zf13) {
            addr_100224ee_611:
            __asm__("outsd ");
            if (zf13) {
                addr_10022531_168:
                ++esi17;
                ++ebp6;
                esp350 = esp2 - 4;
                *reinterpret_cast<void***>(esp350) = edx11;
                esp351 = esp350 - 4;
                *reinterpret_cast<void***>(esp351) = edx11;
                ecx = *reinterpret_cast<void***>(esp351);
                esp352 = esp351 + 4;
                eax12 = eax12 + 1 + 1 + 1;
                edx11 = *reinterpret_cast<void***>(esp352);
                esp2 = esp352 + 4;
                tmp8_353 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                cf8 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_353) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                *reinterpret_cast<void***>(eax12) = tmp8_353;
                __asm__("fild word [ebx]");
                goto addr_1002253f_609;
            } else {
                addr_100224f1_439:
                eax12 = eax12 + 1 + 1;
                edx11 = *reinterpret_cast<void***>(esp2);
                esp2 = esp2 + 4;
                tmp8_354 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)) + reinterpret_cast<unsigned char>(eax12));
                cf8 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_354) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12)));
                *reinterpret_cast<void***>(eax12) = tmp8_354;
                __asm__("fld qword [ebx]");
                __asm__("aas ");
                ++ecx;
                if (cf8 | reinterpret_cast<uint1_t>(ecx == 0)) {
                    addr_10022566_51:
                    goto addr_10022567_406;
                } else {
                    if (!cf8) 
                        goto addr_10022564_8; else 
                        goto addr_100224ff_16;
                }
            }
        } else {
            addr_100224ae_21:
            ++ebp6;
            zf4 = reinterpret_cast<uint1_t>(ebp6 == 0);
            below_or_equal15 = reinterpret_cast<uint1_t>(cf8 | zf4);
            __asm__("insb ");
            __asm__("insd ");
            goto addr_100224b1_5;
        }
    } else {
        ++eax12;
        ++ebp6;
        zf4 = reinterpret_cast<uint1_t>(ebp6 == 0);
        below_or_equal15 = reinterpret_cast<uint1_t>(cf8 | zf4);
        __asm__("insb ");
        __asm__("insd ");
        goto addr_1002243c_2;
    }
}

void fun_1002249c() {
    int1_t zf1;
    int1_t cf2;
    int32_t esi3;

    __asm__("aas ");
    if (zf1) 
        goto "ventAdded@ElementProvider@DirectUI@@UAGJHPAUtagSAFEARRAY@@@Z";
    if (cf2) 
        goto "dded@ElementProvider@DirectUI@@UAGJHPAUtagSAFEARRAY@@@Z";
    __asm__("a16 insd ");
    __asm__("outsb ");
    if (esi3 + 1) 
        goto "???";
}

struct s545 {
    signed char f0;
    signed char[246] pad247;
    signed char f247;
};

struct s546 {
    signed char f0;
    signed char[247] pad248;
    signed char f248;
};

struct s547 {
    signed char f0;
    void* f1;
    signed char[4] pad6;
    signed char f6;
    signed char[248] pad255;
    signed char f255;
    signed char[6] pad262;
    signed char f262;
};

struct s548 {
    void* f0;
    signed char[6] pad7;
    unsigned char f7;
    signed char[15] pad23;
    unsigned char f23;
    signed char[13] pad37;
    unsigned char f37;
    signed char[9] pad47;
    unsigned char f47;
    signed char[223] pad271;
    unsigned char f271;
    signed char[31] pad303;
    unsigned char f303;
};

struct s549 {
    unsigned char f0;
    signed char[373] pad374;
    unsigned char f374;
    signed char[4] pad379;
    unsigned char f379;
    signed char f380;
    signed char[7] pad388;
    signed char f388;
    signed char[32] pad421;
    signed char f421;
    signed char[2] pad424;
    unsigned char f424;
    signed char[3] pad428;
    unsigned char f428;
    signed char[1] pad430;
    unsigned char f430;
    signed char[10] pad441;
    unsigned char f441;
};

unsigned char g50000001;

struct s550 {
    uint32_t f0;
    unsigned char f1;
    signed char[306] pad311;
    signed char f311;
};

struct s551 {
    unsigned char f0;
    unsigned char f1;
    signed char[57] pad59;
    signed char f59;
    signed char[3] pad63;
    signed char f63;
    signed char f64;
    signed char[32] pad97;
    signed char f97;
    signed char f98;
    signed char[224] pad323;
    signed char f323;
};

signed char g139;

struct s552 {
    signed char[1] pad1;
    signed char f1;
};

struct s553 {
    signed char[1] pad1;
    signed char f1;
};

struct s549* g174;

struct s554 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s555 {
    signed char[1] pad1;
    unsigned char f1;
};

unsigned char* fun_500019a1();

struct s549* fun_200019b1();

struct s556 {
    signed char[1] pad1;
    unsigned char f1;
    signed char[120] pad122;
    unsigned char f122;
};

struct s557 {
    signed char[121] pad121;
    unsigned char f121;
};

struct s558 {
    signed char[1] pad1;
    signed char f1;
};

struct s559 {
    signed char[1] pad1;
    signed char f1;
};

struct s560 {
    struct s549* f0;
    unsigned char f1;
};

void fun_100026b9(unsigned char cl) {
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char dh7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;
    signed char* eax11;
    signed char al12;
    signed char al13;
    struct s545* eax14;
    signed char ah15;
    struct s546* eax16;
    void** ecx17;
    unsigned char bh18;
    signed char dh19;
    struct s547* eax20;
    signed char ah21;
    signed char ah22;
    void* dl23;
    signed char dh24;
    signed char dl25;
    struct s548* eax26;
    void* tmp8_27;
    void* dh28;
    uint1_t cf29;
    void* tmp8_30;
    uint1_t cf31;
    void* tmp8_32;
    uint1_t cf33;
    struct s549** ecx34;
    void* tmp8_35;
    uint1_t cf36;
    unsigned char* eax37;
    unsigned char tmp8_38;
    uint1_t cf39;
    void* eax40;
    void* tmp32_41;
    void* dl42;
    void* tmp8_43;
    uint1_t cf44;
    void* tmp8_45;
    uint1_t cf46;
    signed char dh47;
    unsigned char* edi48;
    unsigned char* edi49;
    void* dl50;
    unsigned char* ebx51;
    unsigned char* ebx52;
    unsigned char dh53;
    unsigned char dh54;
    struct s550* eax55;
    signed char dl56;
    struct s551* eax57;
    unsigned char* ebx58;
    unsigned char* ebx59;
    unsigned char bh60;
    signed char dh61;
    signed char dl62;
    struct s551* v63;
    signed char dh64;
    signed char dh65;
    struct s552* esi66;
    struct s553* esi67;
    unsigned char tmp8_68;
    uint1_t cf69;
    signed char dh70;
    signed char dl71;
    struct s549* eax72;
    struct s549* tmp8_73;
    unsigned char* dh74;
    int1_t cf75;
    struct s554* esi76;
    struct s555* esi77;
    unsigned char dh78;
    int32_t edi79;
    int32_t edi80;
    struct s549* tmp32_81;
    struct s549* eax82;
    int32_t edi83;
    int32_t edi84;
    unsigned char* eax85;
    unsigned char tmp8_86;
    uint1_t cf87;
    int32_t edx88;
    int32_t edx89;
    int32_t edx90;
    unsigned char tmp8_91;
    uint1_t cf92;
    uint1_t below_or_equal93;
    struct s557* dh94;
    int1_t pf95;
    struct s558* ebx96;
    struct s559* ebx97;
    signed char bh98;
    unsigned char bl99;
    struct s551* eflags100;
    signed char dl101;
    signed char dh102;
    int32_t ebp103;
    int32_t ebp104;
    uint32_t tmp32_105;
    int32_t* edi106;
    int32_t* esi107;
    struct s560* edi108;
    void* edi109;
    uint32_t esi110;
    int32_t esi111;
    uint32_t tmp32_112;
    struct s549** edi113;
    uint32_t tmp32_114;
    int32_t ebp115;
    int32_t ebp116;
    uint32_t tmp32_117;
    signed char dh118;
    unsigned char tmp8_119;
    signed char dh120;
    uint1_t cf121;
    signed char dh122;
    struct s549* v123;
    signed char dh124;
    signed char dl125;
    signed char dl126;
    signed char dl127;
    struct s549* tmp8_128;

    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + dh7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    *reinterpret_cast<signed char*>(&eax11) = reinterpret_cast<signed char>(al12 + al13);
    *eax11 = reinterpret_cast<signed char>(*eax11 + *reinterpret_cast<signed char*>(&eax11));
    *reinterpret_cast<signed char*>(&eax14) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax11) + ah15);
    eax14->f0 = reinterpret_cast<signed char>(eax14->f0 + *reinterpret_cast<signed char*>(&eax14));
    eax14->f247 = reinterpret_cast<signed char>(eax14->f247 + *reinterpret_cast<signed char*>(&eax14));
    *reinterpret_cast<signed char*>(&eax16) = -9;
    eax16->f0 = reinterpret_cast<signed char>(eax16->f0 - 9);
    eax16->f0 = reinterpret_cast<signed char>(eax16->f0 - 9);
    eax16->f0 = reinterpret_cast<signed char>(eax16->f0 - 9);
    eax16->f248 = reinterpret_cast<signed char>(eax16->f248 - 9);
    *reinterpret_cast<unsigned char*>(&ecx17) = reinterpret_cast<unsigned char>(cl & bh18);
    eax16->f0 = reinterpret_cast<signed char>(eax16->f0 - 9);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax16) - 7) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax16) - 7) + dh19);
    eax16->f0 = reinterpret_cast<signed char>(eax16->f0 - 9);
    *reinterpret_cast<signed char*>(&eax20) = reinterpret_cast<signed char>(9 - ah21);
    __asm__("cli ");
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + *reinterpret_cast<signed char*>(&eax20));
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + *reinterpret_cast<signed char*>(&eax20));
    __asm__("sti ");
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + *reinterpret_cast<signed char*>(&eax20));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax20) - 2) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax20) - 2) + *reinterpret_cast<signed char*>(&eax20));
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + *reinterpret_cast<signed char*>(&eax20));
    eax20->f255 = reinterpret_cast<signed char>(eax20->f255 + ah22);
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + *reinterpret_cast<signed char*>(&eax20));
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + reinterpret_cast<int32_t>(eax20));
    eax20->f1 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax20->f1) + reinterpret_cast<signed char>(dl23));
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + reinterpret_cast<int32_t>(eax20));
    eax20->f6 = reinterpret_cast<signed char>(eax20->f6 + *reinterpret_cast<signed char*>(&eax20));
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + reinterpret_cast<int32_t>(eax20));
    eax20->f6 = reinterpret_cast<signed char>(eax20->f6 + dh24);
    eax20->f0 = reinterpret_cast<signed char>(eax20->f0 + reinterpret_cast<int32_t>(eax20));
    eax20->f262 = reinterpret_cast<signed char>(eax20->f262 + dl25);
    eax26 = reinterpret_cast<struct s548*>(&eax20->f1);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f7 = reinterpret_cast<unsigned char>(eax26->f7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    *reinterpret_cast<void**>(&eax26) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1))) | 1);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    if (!__intrinsic()) {
        eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
        eax26->f271 = reinterpret_cast<unsigned char>(eax26->f271 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1)));
        __asm__("ror byte [edi], 1");
        eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
        tmp8_27 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<signed char>(dh28));
        cf29 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_27) < reinterpret_cast<unsigned char>(eax26->f0));
        eax26->f0 = tmp8_27;
        *ecx17 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx17) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26))) + cf29);
    }
    tmp8_30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_30) < reinterpret_cast<unsigned char>(eax26->f0));
    eax26->f0 = tmp8_30;
    *ecx17 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx17) + reinterpret_cast<uint32_t>(eax26) + cf31);
    tmp8_32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    cf33 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_32) < reinterpret_cast<unsigned char>(eax26->f0));
    eax26->f0 = tmp8_32;
    __asm__("pushad ");
    *reinterpret_cast<void**>(&eax26) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<unsigned char>(*ecx17)) + cf33);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    ecx34 = reinterpret_cast<struct s549**>(ecx17 - 1);
    if (!(reinterpret_cast<uint1_t>(!!ecx34) & reinterpret_cast<uint1_t>(!!eax26->f0))) {
        eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
        tmp8_35 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
        cf36 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_35) < reinterpret_cast<unsigned char>(eax26->f0));
        eax26->f0 = tmp8_35;
        eax37 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax26) + reinterpret_cast<unsigned char>(*ecx34) + cf36);
        tmp8_38 = reinterpret_cast<unsigned char>(*eax37 + *reinterpret_cast<signed char*>(&eax37));
        cf39 = reinterpret_cast<uint1_t>(tmp8_38 < *eax37);
        *eax37 = tmp8_38;
        eax40 = reinterpret_cast<void*>(eax37 + 1);
        tmp32_41 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax40) + 0xa0000001 + cf39);
        eax26 = reinterpret_cast<struct s548*>(reinterpret_cast<uint32_t>(tmp32_41) + 0xb0000001 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_41) < reinterpret_cast<uint32_t>(eax40)));
    }
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    *reinterpret_cast<void**>(&eax26) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<unsigned char>(dl42));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f23 = reinterpret_cast<unsigned char>(eax26->f23 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    *reinterpret_cast<void**>(&eax26) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    *reinterpret_cast<void**>(&eax26) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    tmp8_43 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    cf44 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_43) < reinterpret_cast<unsigned char>(eax26->f0));
    eax26->f0 = tmp8_43;
    *ecx34 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(*ecx34) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*ecx34) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + cf44))));
    tmp8_45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    cf46 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_45) < reinterpret_cast<unsigned char>(eax26->f0));
    eax26->f0 = tmp8_45;
    *ecx34 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(*ecx34) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*ecx34) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) + cf46))));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    *ecx34 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(*ecx34) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f37 = reinterpret_cast<unsigned char>(eax26->f37 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    __asm__("das ");
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f47 = reinterpret_cast<unsigned char>(eax26->f47 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f47 = reinterpret_cast<unsigned char>(eax26->f47 + dh47);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f303 = reinterpret_cast<unsigned char>(eax26->f303 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax26) + 1)));
    *edi48 = reinterpret_cast<unsigned char>(*edi49 >> 1);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<signed char>(dl50));
    *ecx34 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(*ecx34) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) ^ 1);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    *ebx51 = reinterpret_cast<unsigned char>(*ebx52 ^ dh53);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<uint32_t>(eax26));
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    *reinterpret_cast<void**>(&eax26) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)) ^ 1);
    eax26->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax26->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax26)));
    g50000001 = reinterpret_cast<unsigned char>(g50000001 & dh54);
    eax55 = reinterpret_cast<struct s550*>(reinterpret_cast<uint32_t>(eax26) ^ 0xd0000001 ^ 0xf0000001 ^ 0x70000001);
    __asm__("aaa ");
    eax55->f0 = eax55->f0 + reinterpret_cast<uint32_t>(eax55);
    eax55->f311 = reinterpret_cast<signed char>(eax55->f311 + dl56);
    eax57 = reinterpret_cast<struct s551*>(reinterpret_cast<uint32_t>(eax55) + 1);
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + *reinterpret_cast<signed char*>(&eax57));
    *reinterpret_cast<signed char*>(&eax57) = g139;
    *ebx58 = reinterpret_cast<unsigned char>(*ebx59 ^ bh60);
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    eax57->f59 = reinterpret_cast<signed char>(eax57->f59 + dh61);
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    *reinterpret_cast<signed char*>(&eax57) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax57) + dl62);
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + *reinterpret_cast<signed char*>(&eax57));
    v63 = eax57;
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + *reinterpret_cast<signed char*>(&eax57));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    *reinterpret_cast<signed char*>(&eax57) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax57) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax57) + 1));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    eax57->f63 = reinterpret_cast<signed char>(eax57->f63 + dh64);
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    eax57->f64 = reinterpret_cast<signed char>(eax57->f64 + *reinterpret_cast<signed char*>(&eax57));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    eax57->f323 = reinterpret_cast<signed char>(eax57->f323 + dh65);
    esi66->f1 = reinterpret_cast<signed char>(esi67->f1 + *reinterpret_cast<signed char*>(&eax57));
    tmp8_68 = reinterpret_cast<unsigned char>(eax57->f0 + *reinterpret_cast<signed char*>(&eax57));
    cf69 = reinterpret_cast<uint1_t>(tmp8_68 < eax57->f0);
    eax57->f0 = tmp8_68;
    eax57->f1 = reinterpret_cast<unsigned char>(eax57->f1 - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(eax57->f1 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf69))))));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + dh70);
    __asm__("pushad ");
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    eax57->f97 = reinterpret_cast<signed char>(eax57->f97 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax57) + 1));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    eax57->f98 = reinterpret_cast<signed char>(eax57->f98 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax57) + 1));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + reinterpret_cast<uint32_t>(eax57));
    *reinterpret_cast<signed char*>(&eax57) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax57) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax57) + 1));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + *reinterpret_cast<int16_t*>(&eax57));
    eax57->f0 = reinterpret_cast<unsigned char>(eax57->f0 + dl71);
    eax72 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(*ecx34) * 0x6b700000);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    tmp8_73 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(eax72) + reinterpret_cast<unsigned char>(dh74));
    cf75 = reinterpret_cast<unsigned char>(tmp8_73) < reinterpret_cast<unsigned char>(eax72);
    eax72 = tmp8_73;
    if (cf75) {
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    }
    eax72 = g174;
    esi76->f1 = reinterpret_cast<unsigned char>(esi77->f1 & dh78);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    if (__intrinsic()) {
        addr_100028c4_8:
        *reinterpret_cast<unsigned char*>(edi79 + 0x20000001) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edi80 + 0x20000001) + reinterpret_cast<unsigned char>(eax72));
        tmp32_81 = *ecx34;
        *ecx34 = eax72;
        eax82 = tmp32_81;
        *reinterpret_cast<unsigned char*>(&eax82->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax82->f0) + *reinterpret_cast<unsigned char*>(&eax82));
        *reinterpret_cast<unsigned char*>(edi83 - 0xfffffff) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi84 - 0xfffffff) ^ *reinterpret_cast<unsigned char*>(&eax82));
        __asm__("cdq ");
        *reinterpret_cast<unsigned char*>(&eax82->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax82->f0) + reinterpret_cast<unsigned char>(eax82));
        *reinterpret_cast<unsigned char*>(&eax82->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax82->f0) + *reinterpret_cast<signed char*>(&eax82 + 1));
        eax85 = fun_500019a1();
        tmp8_86 = reinterpret_cast<unsigned char>(*eax85 + *reinterpret_cast<signed char*>(&eax85));
        cf87 = reinterpret_cast<uint1_t>(tmp8_86 < *eax85);
        *eax85 = tmp8_86;
        *reinterpret_cast<unsigned char*>(edx88 - 0x3fffffff) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx89 - 0x3fffffff) - reinterpret_cast<unsigned char>(0x66 - reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edx90 - 0x3fffffff) < reinterpret_cast<unsigned char>(0x66 - cf87))));
        *eax85 = reinterpret_cast<unsigned char>(*eax85 + reinterpret_cast<int32_t>(eax85));
        eax72 = fun_200019b1();
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    } else {
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        tmp8_91 = reinterpret_cast<unsigned char>(eax72->f374 + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
        cf92 = reinterpret_cast<uint1_t>(tmp8_91 < eax72->f374);
        eax72->f374 = tmp8_91;
        below_or_equal93 = reinterpret_cast<uint1_t>(cf92 | reinterpret_cast<uint1_t>(eax72->f374 == 0));
        if (below_or_equal93) {
            *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        }
        eax72 = reinterpret_cast<struct s549*>(0x79);
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        eax72 = reinterpret_cast<struct s549*>(&dh94->f121);
        if (reinterpret_cast<signed char>(eax72) < reinterpret_cast<signed char>(0)) {
            *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        }
        eax72 = reinterpret_cast<struct s549*>(0x7a);
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        eax72 = reinterpret_cast<struct s549*>(&(*reinterpret_cast<struct s556**>(&eax72 + 1))->f122);
        pf95 = __intrinsic();
        if (!pf95) {
            *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
            pf95 = __intrinsic();
        }
        if (!pf95) {
            *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        }
        ebx96->f1 = reinterpret_cast<signed char>(ebx97->f1 + bh98);
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        if (!__intrinsic()) 
            goto addr_1000287b_18;
    }
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx34) + reinterpret_cast<unsigned char>(eax72) - 0x63700000) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx34) + reinterpret_cast<unsigned char>(eax72) - 0x63700000) & bl99);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(eax72) + reinterpret_cast<unsigned char>(eax72));
    eflags100 = v63;
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff9e) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff9e) + dl101);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72->f421 = reinterpret_cast<signed char>(eax72->f421 + dh102);
    *reinterpret_cast<signed char*>(ebp103 - 0xfffffff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp104 - 0xfffffff) << 1);
    tmp32_105 = 4 - 8 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags100) + 1);
    *edi106 = *esi107;
    edi108 = reinterpret_cast<struct s560*>(reinterpret_cast<int32_t>(edi109) + tmp32_105);
    esi110 = esi111 + tmp32_105;
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72->f424 = reinterpret_cast<unsigned char>(eax72->f424 + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
    do {
        eax72 = reinterpret_cast<struct s549*>(&eax72->pad374);
        tmp32_112 = 1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags100) + 1);
        edi108->f0 = eax72;
        edi113 = reinterpret_cast<struct s549**>(reinterpret_cast<uint32_t>(edi108) + tmp32_112);
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        eax72 = reinterpret_cast<struct s549*>(reinterpret_cast<unsigned char>(eax72) + reinterpret_cast<unsigned char>(eax72));
        tmp32_114 = 1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags100) + 1);
        *edi113 = eax72;
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffab) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffab) + reinterpret_cast<unsigned char>(eax72));
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffac) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffac) + reinterpret_cast<unsigned char>(eax72));
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        eax72->f428 = reinterpret_cast<unsigned char>(eax72->f428 + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
        *reinterpret_cast<signed char*>(ebp115 + 0x20000001) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp116 + 0x20000001) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx34) + 1));
        tmp32_117 = 1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags100) + 1);
        edi108 = reinterpret_cast<struct s560*>(reinterpret_cast<uint32_t>(edi113) + tmp32_114 + tmp32_117);
        esi110 = esi110 + tmp32_112 + tmp32_114 + tmp32_117;
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffae) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffae) + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffae) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffae) + dh118);
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
        tmp8_119 = reinterpret_cast<unsigned char>(eax72->f430 + dh120);
        cf121 = reinterpret_cast<uint1_t>(tmp8_119 < eax72->f430);
        eax72->f430 = tmp8_119;
        edi108->f1 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi108->f1 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx34) + 1)) + cf121);
        eax72 = reinterpret_cast<struct s549*>(1);
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + 1);
    } while (__intrinsic());
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffb4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffb4) + dh122);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72 = reinterpret_cast<struct s549*>(&(*reinterpret_cast<struct s556**>(&eax72 + 1))->f1);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    v123 = eax72;
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<signed char*>(esi110 - 0x2fffffff) = 0;
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72->f441 = reinterpret_cast<unsigned char>(eax72->f441 + reinterpret_cast<unsigned char>(eax72));
    eax72 = reinterpret_cast<struct s549*>(0xb9);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffba) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffffba) + 0xb9);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + 1);
    goto v123;
    addr_1000287b_18:
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72->f379 = reinterpret_cast<unsigned char>(eax72->f379 + reinterpret_cast<unsigned char>(eax72));
    if (__intrinsic()) {
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    }
    eax72 = reinterpret_cast<struct s549*>(0x7b);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72->f380 = reinterpret_cast<signed char>(eax72->f380 + dh124);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx34) + reinterpret_cast<unsigned char>(eax72)) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx34) + reinterpret_cast<unsigned char>(eax72))));
    __asm__("pushad ");
    if (__undefined() != __intrinsic()) {
        *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + 0x7b);
    }
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff80) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff80) + 0x7b);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + dl125);
    *ecx34 = reinterpret_cast<struct s549*>(&(*ecx34)->f0);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff82) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff82) + 0x7b);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff83) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff83) + dl126);
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff83) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax72) + 0xffffff83) + reinterpret_cast<unsigned char>(*reinterpret_cast<struct s556**>(&eax72 + 1)));
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    eax72->f388 = reinterpret_cast<signed char>(eax72->f388 + dl127);
    __asm__("pushad ");
    tmp8_128 = *ecx34;
    *ecx34 = reinterpret_cast<struct s549*>(0x7b);
    eax72 = tmp8_128;
    *reinterpret_cast<unsigned char*>(&eax72->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax72->f0) + reinterpret_cast<unsigned char>(eax72));
    goto addr_100028c4_8;
}

struct s561 {
    signed char[4] pad4;
    void* f4;
};

struct s562 {
    unsigned char f0;
    void* f1;
    signed char[469] pad471;
    unsigned char f471;
    signed char[14] pad486;
    signed char f486;
};

struct s563 {
    unsigned char f0;
    unsigned char f1;
};

struct s564 {
    void* f0;
    signed char[82] pad83;
    signed char f83;
    signed char[404] pad488;
    unsigned char f488;
    signed char[2] pad491;
    unsigned char f491;
    signed char[1] pad493;
    unsigned char f493;
    unsigned char f494;
    unsigned char f495;
};

struct s565 {
    unsigned char f0;
    unsigned char f1;
};

struct s566 {
    void* f0;
    signed char[97] pad98;
    int32_t f98;
    signed char[8] pad110;
    unsigned char f110;
};

struct s567 {
    unsigned char f0;
    void** f1;
};

struct s569 {
    struct s569* f0;
    signed char[3] pad4;
    struct s569* f4;
    signed char[75] pad80;
    signed char f80;
    signed char[20] pad101;
    unsigned char f101;
};

struct s568 {
    unsigned char f0;
    struct s569* f1;
};

struct s571 {
    signed char[4] pad4;
    void* f4;
};

struct s570 {
    signed char[4] pad4;
    struct s571* f4;
};

struct s572 {
    void** f0;
    unsigned char f1;
    signed char[118] pad120;
    unsigned char f120;
};

struct s573 {
    struct s573* f0;
    signed char[77] pad78;
    signed char f78;
};

unsigned char gd5d1d7d7;

struct s574 {
    signed char[1664544898] pad1664544898;
    void* f1664544898;
};

struct s574* g48b281b0;

unsigned char gd8a4721;

struct s574* g4f3ea430;

unsigned char g79007300;

unsigned char g2d003200;

struct s575 {
    unsigned char f0;
    void** f1;
};

struct s576 {
    int32_t f0;
    int32_t f4;
};

unsigned char g29006400;

unsigned char g29007800;

unsigned char g38003000;

struct s577 {
    int32_t f0;
    struct s569* f4;
};

struct s578 {
    struct s569* f0;
    signed char[3] pad4;
    struct s569* f4;
};

signed char g3a006400;

unsigned char g3a007000;

void fun_100029a2() {
    struct s561* v1;
    int32_t* eax2;
    int32_t* eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    signed char dh7;
    int32_t* eax8;
    int32_t* eax9;
    int32_t eax10;
    int32_t eax11;
    int32_t eax12;
    signed char al13;
    int32_t* eax14;
    int32_t* eax15;
    int32_t eax16;
    int32_t eax17;
    int32_t eax18;
    signed char al19;
    int32_t* eax20;
    int32_t* eax21;
    int32_t eax22;
    signed char* eax23;
    signed char* eax24;
    signed char al25;
    int32_t* eax26;
    int32_t* eax27;
    int32_t eax28;
    signed char* eax29;
    signed char* eax30;
    signed char dh31;
    int32_t* eax32;
    int32_t* eax33;
    int32_t eax34;
    struct s562* eax35;
    signed char dl36;
    unsigned char tmp8_37;
    uint1_t cf38;
    unsigned char* ecx39;
    signed char dl40;
    unsigned char tmp8_41;
    uint1_t cf42;
    struct s563* edx43;
    signed char dh44;
    struct s564* eax45;
    void* tmp8_46;
    uint1_t cf47;
    unsigned char tmp8_48;
    uint1_t cf49;
    struct s565* ebx50;
    void* bh51;
    signed char bl52;
    void* ah53;
    void* bl54;
    void* bl55;
    unsigned char tmp8_56;
    signed char* esi57;
    uint1_t cf58;
    unsigned char* esi59;
    unsigned char* esi60;
    uint1_t zf61;
    signed char* esi62;
    signed char bl63;
    unsigned char tmp8_64;
    int1_t cf65;
    unsigned char* esi66;
    signed char* esi67;
    signed char* esi68;
    unsigned char* edi69;
    signed char* edi70;
    int32_t* eax71;
    unsigned char tmp8_72;
    signed char* edi73;
    int1_t cf74;
    unsigned char* edi75;
    unsigned char* edi76;
    void* esp77;
    unsigned char tmp8_78;
    int1_t cf79;
    signed char* esi80;
    signed char* esi81;
    signed char* esi82;
    void** esp83;
    void* esi84;
    unsigned char tmp8_85;
    signed char* ebp86;
    int1_t cf87;
    unsigned char* ebp88;
    unsigned char* ebp89;
    void** eax90;
    void* esp91;
    int1_t zf92;
    int32_t* esp93;
    signed char* edi94;
    signed char* edi95;
    signed char bl96;
    signed char* edi97;
    signed char* edi98;
    unsigned char* ebp99;
    signed char* ebp100;
    struct s566* ecx101;
    signed char bl102;
    unsigned char* edi103;
    signed char* edi104;
    unsigned char* ebp105;
    signed char* ebp106;
    unsigned char* ebp107;
    signed char* ebp108;
    struct s567* ebx109;
    struct s568* edx110;
    struct s570** esp111;
    struct s570* ebp112;
    unsigned char tmp8_113;
    int1_t cf114;
    unsigned char* ebp115;
    signed char* ebp116;
    struct s571** esp117;
    unsigned char tmp8_118;
    int1_t cf119;
    unsigned char* esi120;
    signed char* esi121;
    signed char* esi122;
    struct s572* ebx123;
    unsigned char* edi124;
    signed char* edi125;
    unsigned char* edi126;
    signed char* edi127;
    unsigned char tmp8_128;
    signed char* esi129;
    int1_t cf130;
    unsigned char* esi131;
    unsigned char* esi132;
    signed char* esi133;
    signed char* ebp134;
    signed char* ebp135;
    void** eax136;
    struct s573* esi137;
    void* esi138;
    struct s573* tmp8_139;
    uint1_t cf140;
    uint1_t zf141;
    void* tmp8_142;
    int1_t cf143;
    void** esp144;
    unsigned char* edi145;
    signed char* edi146;
    int32_t* eax147;
    unsigned char tmp8_148;
    signed char* edi149;
    int1_t cf150;
    unsigned char* edi151;
    unsigned char* edi152;
    void* esp153;
    void** tmp8_154;
    int1_t cf155;
    struct s573** esp156;
    unsigned char tmp8_157;
    signed char* ebp158;
    int1_t cf159;
    unsigned char* ebp160;
    unsigned char* ebp161;
    void** eax162;
    void* esp163;
    signed char* edi164;
    signed char* edi165;
    struct s572* edi166;
    void* edi167;
    void* tmp8_168;
    int1_t cf169;
    struct s569* edx170;
    unsigned char tmp8_171;
    struct s572* ebp172;
    int16_t* esp173;
    int16_t ss174;
    struct s574* eax175;
    struct s569* esi176;
    int16_t* esp177;
    int16_t ss178;
    int1_t sf179;
    struct s572** esp180;
    unsigned char tmp8_181;
    uint1_t cf182;
    uint1_t zf183;
    struct s569* esp184;
    int1_t cf185;
    unsigned char tmp8_186;
    struct s569* esp187;
    struct s573* esp188;
    unsigned char tmp8_189;
    int1_t cf190;
    unsigned char tmp8_191;
    struct s575* ebx192;
    struct s569* esi193;
    struct s576* esp194;
    void* esp195;
    unsigned char tmp8_196;
    int1_t cf197;
    unsigned char tmp8_198;
    int1_t cf199;
    unsigned char tmp8_200;
    unsigned char tmp8_201;
    unsigned char tmp8_202;
    signed char* eax203;
    void** tmp8_204;
    int1_t cf205;
    signed char* eax206;
    unsigned char tmp8_207;
    void** eax208;
    struct s572* ebx209;
    int32_t ebx210;
    struct s577* esp211;
    unsigned char tmp8_212;
    int32_t ebx213;
    struct s578* esp214;
    unsigned char tmp8_215;
    unsigned char tmp8_216;
    struct s569* ebx217;
    struct s569** esp218;
    unsigned char tmp8_219;
    void* tmp8_220;
    uint1_t cf221;
    unsigned char tmp8_222;
    int1_t cf223;
    unsigned char tmp8_224;
    uint1_t cf225;
    signed char tmp8_226;
    signed char tmp8_227;
    void* tmp8_228;
    uint1_t cf229;
    uint1_t zf230;
    void* tmp8_231;
    void** tmp8_232;
    struct s569** esp233;
    struct s569* tmp8_234;
    int1_t cf235;
    struct s569** esp236;
    void** tmp8_237;
    int1_t cf238;
    signed char* eax239;
    struct s569** esp240;
    int1_t zf241;
    struct s569** esp242;
    int32_t ecx243;
    unsigned char tmp8_244;
    int1_t cf245;
    signed char* eax246;
    void** eax247;
    unsigned char tmp8_248;
    void* tmp8_249;
    int1_t cf250;
    unsigned char tmp8_251;
    unsigned char tmp8_252;
    void** tmp8_253;
    void** esp254;

    v1 = reinterpret_cast<struct s561*>(__return_address());
    *eax2 = *eax3 + eax4;
    *reinterpret_cast<signed char*>(eax5 - 59) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 - 59) + dh7);
    *eax8 = *eax9 + eax10;
    *reinterpret_cast<signed char*>(eax11 - 51) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax12 - 51) + al13);
    *eax14 = *eax15 + eax16;
    *reinterpret_cast<signed char*>(eax17 - 48) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax18 - 48) + al19);
    *eax20 = *eax21 + eax22;
    *eax23 = reinterpret_cast<signed char>(*eax24 + al25);
    __asm__("salc ");
    *eax26 = *eax27 + eax28;
    *eax29 = reinterpret_cast<signed char>(*eax30 + dh31);
    __asm__("salc ");
    *eax32 = *eax33 + eax34;
    while (1) {
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax35) - 42) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax35) - 42) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
        eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
        eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
        __asm__("xlatb ");
        eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax35) - 41) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax35) - 41) + dl36);
        eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
        eax35->f471 = reinterpret_cast<unsigned char>(eax35->f471 + *reinterpret_cast<unsigned char*>(&eax35));
        eax35 = reinterpret_cast<struct s562*>(&eax35->f1);
        __asm__("fadd dword [ecx]");
        eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
        __asm__("pushad ");
        __asm__("fadd dword [ecx]");
        do {
            tmp8_37 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
            cf38 = reinterpret_cast<uint1_t>(tmp8_37 < eax35->f0);
            eax35->f0 = tmp8_37;
            *reinterpret_cast<unsigned char*>(&eax35) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax35) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax35) < reinterpret_cast<unsigned char>(1 + cf38))));
            eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
            if (__intrinsic()) 
                break;
            eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
            *reinterpret_cast<unsigned char*>(&eax35) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax35) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
            __asm__("fld dword [ecx]");
            eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
            --ecx39;
            if (!(reinterpret_cast<uint1_t>(!!ecx39) & reinterpret_cast<uint1_t>(eax35->f0 == 0))) {
                eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
            }
            *reinterpret_cast<signed char*>(&ecx39) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx39) << 1);
            eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
        } while (__intrinsic());
        break;
    }
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax35) - 29) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax35) - 29) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
    __asm__("in al, 0x1");
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
    *reinterpret_cast<unsigned char*>(&eax35) = 0xe5;
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
    *reinterpret_cast<unsigned char*>(&eax35) = reinterpret_cast<unsigned char>(0xe5 + dl40);
    __asm__("in eax, 0x1");
    tmp8_41 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
    cf42 = reinterpret_cast<uint1_t>(tmp8_41 < eax35->f0);
    eax35->f0 = tmp8_41;
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax35) - 26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax35) - 26) + *reinterpret_cast<unsigned char*>(&eax35));
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax35) - 26) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax35) - 26) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + reinterpret_cast<int32_t>(eax35));
    eax35->f486 = reinterpret_cast<signed char>(eax35->f486 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(dh44 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax35) + 1)) + cf42) << 1);
    eax35->f0 = reinterpret_cast<unsigned char>(eax35->f0 + *reinterpret_cast<unsigned char*>(&eax35));
    eax45 = reinterpret_cast<struct s564*>(&eax35->f1);
    __asm__("out 0x1, eax");
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(0xe7);
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(0xce);
    __asm__("out 0x1, eax");
    tmp8_46 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + 0xce);
    cf47 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_46) < reinterpret_cast<unsigned char>(eax45->f0));
    eax45->f0 = tmp8_46;
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(0xce + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1))) + cf47);
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 24) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    eax45->f488 = reinterpret_cast<unsigned char>(eax45->f488 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    do {
        *reinterpret_cast<void**>(&edx43) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)) >> 1);
        eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
        eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
        eax45->f491 = reinterpret_cast<unsigned char>(eax45->f491 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
        --ecx39;
    } while (reinterpret_cast<uint1_t>(!!ecx39) & reinterpret_cast<uint1_t>(!!eax45->f491));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    do {
        eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
        __asm__("in eax, dx");
        eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 19) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1)));
        eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
        eax45->f493 = reinterpret_cast<unsigned char>(eax45->f493 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
        --ecx39;
    } while (reinterpret_cast<uint1_t>(!!ecx39) & reinterpret_cast<uint1_t>(!!eax45->f493));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    tmp8_48 = reinterpret_cast<unsigned char>(eax45->f494 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    cf49 = reinterpret_cast<uint1_t>(tmp8_48 < eax45->f494);
    eax45->f494 = tmp8_48;
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx50) + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(bh51) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1))) + cf49);
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 17) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 17) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 17) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<int32_t>(eax45));
    eax45->f495 = reinterpret_cast<unsigned char>(eax45->f495 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    __asm__("enter 0x250, 0x0");
    eax45->f83 = reinterpret_cast<signed char>(eax45->f83 + bl52);
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + reinterpret_cast<unsigned char>(eax45->f0));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 0x80) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) - 0x80) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx50) + 1)));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + reinterpret_cast<unsigned char>(eax45->f0));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(eax45) * 4 - 0x5ffffffe) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(eax45) * 4 - 0x5ffffffe) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    edx43->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx43->f0));
    edx43->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx43->f0));
    ah53 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1)) + reinterpret_cast<signed char>(bl54));
    edx43->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx43->f0));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + reinterpret_cast<signed char>(bl55)) + reinterpret_cast<unsigned char>(ah53));
    edx43->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx43->f0));
    edx43->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx43->f0));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ah53) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1))) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx50) + 1)));
    edx43->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(edx43->f0));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    ebx50->f0 = reinterpret_cast<unsigned char>(ebx50->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    __asm__("outsd ");
    tmp8_56 = reinterpret_cast<unsigned char>(*esi57 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1)));
    cf58 = reinterpret_cast<uint1_t>(tmp8_56 < *esi59);
    *esi60 = tmp8_56;
    zf61 = reinterpret_cast<uint1_t>(*esi62 == 0);
    __asm__("popad ");
    edx43->f0 = reinterpret_cast<unsigned char>(edx43->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(eax45) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(eax45) + 77) + bl63);
    tmp8_64 = reinterpret_cast<unsigned char>(*ecx39 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1)));
    cf65 = tmp8_64 < *ecx39;
    *ecx39 = tmp8_64;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    ebx50->f0 = reinterpret_cast<unsigned char>(ebx50->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    __asm__("outsd ");
    *esi66 = reinterpret_cast<unsigned char>(*esi67 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1)));
    *edi69 = reinterpret_cast<unsigned char>(*edi70 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    eax71 = reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(eax45->f0) * 0x64006e);
    __asm__("outsd ");
    tmp8_72 = reinterpret_cast<unsigned char>(*edi73 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    cf74 = tmp8_72 < *edi75;
    *edi76 = tmp8_72;
    esp77 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(v1->f4) + 4);
    tmp8_78 = reinterpret_cast<unsigned char>(ebx50->f0 + *reinterpret_cast<signed char*>(&eax71));
    cf79 = tmp8_78 < ebx50->f0;
    ebx50->f0 = tmp8_78;
    *esi80 = reinterpret_cast<signed char>(*esi81 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1)));
    esp83 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp77) - 4);
    *esp83 = esi84;
    tmp8_85 = reinterpret_cast<unsigned char>(*ebp86 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax71) + 1));
    cf87 = tmp8_85 < *ebp88;
    *ebp89 = tmp8_85;
    eax90 = reinterpret_cast<void**>(*eax71 * 0x6e006f);
    esp91 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp83) + 4);
    *ecx39 = reinterpret_cast<unsigned char>(*ecx39 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    zf92 = *ecx39 == 0;
    esp93 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp91) - 4);
    *esp93 = 0x6e006500;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    ebx50->f0 = reinterpret_cast<unsigned char>(ebx50->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax90) + 1)));
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    *edi94 = reinterpret_cast<signed char>(*edi95 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 76) + bl96);
    *edi97 = reinterpret_cast<signed char>(*edi98 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1)));
    **reinterpret_cast<unsigned char**>(&ebx50) = reinterpret_cast<unsigned char>(**reinterpret_cast<unsigned char**>(&ebx50) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx39) + 1)));
    __asm__("outsb ");
    *ebp99 = reinterpret_cast<unsigned char>(*ebp100 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    ecx101 = reinterpret_cast<struct s566*>(ecx39 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 76) + bl102);
    *edi103 = reinterpret_cast<unsigned char>(*edi104 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    **reinterpret_cast<unsigned char**>(&ebx50) = reinterpret_cast<unsigned char>(**reinterpret_cast<unsigned char**>(&ebx50) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    __asm__("outsb ");
    ebx50->f0 = reinterpret_cast<unsigned char>(ebx50->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    __asm__("outsd ");
    *ebp105 = reinterpret_cast<unsigned char>(*ebp106 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 80) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 80) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax90) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 97) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 97) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx50) + 1)));
    *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90)) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90))) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax90) + 1)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    ebx50->f0 = reinterpret_cast<unsigned char>(ebx50->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx43)));
    __asm__("outsd ");
    *ebp107 = reinterpret_cast<unsigned char>(*ebp108 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx43) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 80) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 80) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax90) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 97) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 97) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx50) + 1)));
    *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90)) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90))) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax90) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 58) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 58) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    ebx109 = reinterpret_cast<struct s567*>(&ebx50->f1);
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *reinterpret_cast<void**>(&eax90) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)) ^ reinterpret_cast<unsigned char>(*eax90));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) ^ reinterpret_cast<uint32_t>(eax90));
    edx110 = reinterpret_cast<struct s568*>(&edx43->f1);
    ebx109->f0 = reinterpret_cast<unsigned char>(ebx109->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx109) + 1));
    ebx109->f0 = reinterpret_cast<unsigned char>(ebx109->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx109) + 1));
    ebx109->f0 = reinterpret_cast<unsigned char>(ebx109->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx109) + 1));
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    esp111 = reinterpret_cast<struct s570**>(esp93 - 1);
    *esp111 = ebp112;
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    *eax90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax90) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    tmp8_113 = reinterpret_cast<unsigned char>(ebx109->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx110)));
    cf114 = tmp8_113 < ebx109->f0;
    ebx109->f0 = tmp8_113;
    *ebp115 = reinterpret_cast<unsigned char>(*ebp116 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    esp117 = &(*esp111)->f4;
    tmp8_118 = reinterpret_cast<unsigned char>(ebx109->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    cf119 = tmp8_118 < ebx109->f0;
    ebx109->f0 = tmp8_118;
    *esi120 = reinterpret_cast<unsigned char>(*esi121 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    ebx123 = reinterpret_cast<struct s572*>(&ebx109->f1);
    *edi124 = reinterpret_cast<unsigned char>(*edi125 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 0x72) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 0x72) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx110) + 1)));
    *edi126 = reinterpret_cast<unsigned char>(*edi127 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    __asm__("insb ");
    ebx123->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx123->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx110)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 92) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx110) + 1)));
    ebx123->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx123->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax90)));
    __asm__("outsd ");
    tmp8_128 = reinterpret_cast<unsigned char>(*esi129 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    cf130 = tmp8_128 < *esi131;
    *esi132 = tmp8_128;
    __asm__("outsd ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 92) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<uint32_t>(eax90) + 92) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    *ebp134 = reinterpret_cast<signed char>(*ebp135 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
    eax136 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*eax90) * 0x69006e);
    esi137 = reinterpret_cast<struct s573*>(reinterpret_cast<int32_t>(esi138) - 1);
    *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136)) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136))) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx110)));
    ebx123->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx123->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx110)));
    __asm__("outsd ");
    tmp8_139 = reinterpret_cast<struct s573*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s573**>(&esi137->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax136) + 1)));
    cf140 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_139) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s573**>(&esi137->f0)));
    *reinterpret_cast<struct s573**>(&esi137->f0) = tmp8_139;
    zf141 = reinterpret_cast<uint1_t>(*reinterpret_cast<struct s573**>(&esi137->f0) == 0);
    __asm__("popad ");
    edx110->f0 = reinterpret_cast<unsigned char>(edx110->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx110) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax136) + reinterpret_cast<uint32_t>(eax136) + 77) + *reinterpret_cast<signed char*>(&ebx123));
    tmp8_142 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    cf143 = reinterpret_cast<unsigned char>(tmp8_142) < reinterpret_cast<unsigned char>(ecx101->f0);
    ecx101->f0 = tmp8_142;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    ebx123->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx123->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx110) + 1)));
    __asm__("outsd ");
    *reinterpret_cast<struct s573**>(&esi137->f0) = reinterpret_cast<struct s573*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s573**>(&esi137->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax136) + 1)));
    esp144 = &(*esp117)->f4;
    *edi145 = reinterpret_cast<unsigned char>(*edi146 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx110)));
    eax147 = reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(*eax136) * 0x64006e);
    __asm__("outsd ");
    tmp8_148 = reinterpret_cast<unsigned char>(*edi149 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx110) + 1)));
    cf150 = tmp8_148 < *edi151;
    *edi152 = tmp8_148;
    esp153 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp144) + 4);
    tmp8_154 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx123->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax147)));
    cf155 = reinterpret_cast<unsigned char>(tmp8_154) < reinterpret_cast<unsigned char>(ebx123->f0);
    ebx123->f0 = tmp8_154;
    *reinterpret_cast<struct s573**>(&esi137->f0) = reinterpret_cast<struct s573*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s573**>(&esi137->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    esp156 = reinterpret_cast<struct s573**>(reinterpret_cast<int32_t>(esp153) - 4);
    *esp156 = esi137;
    tmp8_157 = reinterpret_cast<unsigned char>(*ebp158 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax147) + 1));
    cf159 = tmp8_157 < *ebp160;
    *ebp161 = tmp8_157;
    eax162 = reinterpret_cast<void**>(*eax147 * 0x6e006f);
    esp163 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*esp156) + 4);
    *edi164 = reinterpret_cast<signed char>(*edi165 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
    edi166 = reinterpret_cast<struct s572*>(reinterpret_cast<int32_t>(edi167) - 1);
    edx110->f0 = reinterpret_cast<unsigned char>(edx110->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 70) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 70) + *reinterpret_cast<signed char*>(&ebx123));
    tmp8_168 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    cf169 = reinterpret_cast<unsigned char>(tmp8_168) < reinterpret_cast<unsigned char>(ecx101->f0);
    ecx101->f0 = tmp8_168;
    edx170 = reinterpret_cast<struct s569*>(&edx110->f1);
    edi166->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    do {
        __asm__("outsd ");
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        tmp8_171 = reinterpret_cast<unsigned char>(gd5d1d7d7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
        gd5d1d7d7 = tmp8_171;
        esi137->f78 = reinterpret_cast<signed char>(esi137->f78 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx170)));
        ebp172 = *reinterpret_cast<struct s572**>(reinterpret_cast<uint32_t>(ebx123) - 0x12063f06);
        __asm__("into ");
        __asm__("popad ");
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx101) * 2 + 0x2eabca92) = reinterpret_cast<unsigned char>(esi137) - 1;
        __asm__("into ");
        esp173 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp163) - 2);
        *esp173 = ss174;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebp172) - 1) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ebp172) - 1) + reinterpret_cast<uint32_t>(ebp172);
        __asm__("lock out dx, eax");
        eax175 = reinterpret_cast<struct s574*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp172) - 90)) - 0x3d1953dd);
        __asm__("int 0x23");
        g48b281b0 = eax175;
        *reinterpret_cast<unsigned char*>(&eax175) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax175) | 0xb7);
        ecx101 = reinterpret_cast<struct s566*>(reinterpret_cast<int32_t>(ecx101) - 1);
        gd8a4721 = *reinterpret_cast<unsigned char*>(&eax175);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx123) + 1) = -89;
        g4f3ea430 = eax175;
        __asm__("lodsb ");
        esi176 = *reinterpret_cast<struct s569**>(&edx170->f0);
        __asm__("fsub qword [ecx]");
        eax162 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax175) + 0x6336f082);
        esp177 = esp173 - 1;
        *esp177 = ss178;
        if (__intrinsic()) 
            break;
        __asm__("sti ");
        esp163 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp177) - 1);
        esi137 = reinterpret_cast<struct s573*>(reinterpret_cast<unsigned char>(esi176) - 4);
        *reinterpret_cast<void**>(&eax162) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)) - reinterpret_cast<unsigned char>(37 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)) < reinterpret_cast<unsigned char>(37 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edi166->f0) < reinterpret_cast<unsigned char>(eax162))))));
        __asm__("fisttp dword [ebx]");
        edi166 = reinterpret_cast<struct s572*>(reinterpret_cast<uint32_t>(edi166) - 4 | *reinterpret_cast<uint32_t*>(reinterpret_cast<unsigned char>(esi137) - 0x2d44e2cb));
        __asm__("arpl [edx+0x9a41b8e3], bx");
    } while (!reinterpret_cast<int1_t>(eax162 == 0x6706dd52));
    goto addr_10002ce4_54;
    addr_10002cfb_55:
    __asm__("insb ");
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    sf179 = reinterpret_cast<signed char>(*eax162) < reinterpret_cast<signed char>(0);
    esp180 = reinterpret_cast<struct s572**>(esp177 - 2);
    *esp180 = ebp172;
    if (!sf179) {
        --esp180;
        *esp180 = reinterpret_cast<struct s572*>(0x2e656d65);
        __asm__("insb ");
        __asm__("insb ");
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        tmp8_181 = reinterpret_cast<unsigned char>(ebp172->f120 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
        cf182 = reinterpret_cast<uint1_t>(tmp8_181 < ebp172->f120);
        ebp172->f120 = tmp8_181;
        zf183 = reinterpret_cast<uint1_t>(ebp172->f120 == 0);
        if (zf183) {
            addr_10002d41_57:
            ecx101 = reinterpret_cast<struct s566*>(reinterpret_cast<int32_t>(ecx101) - 1);
            esi176 = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(esi176) - 1);
            --esp180;
            *esp180 = ebx123;
            goto addr_10002d44_58;
        } else {
            __asm__("insd ");
            if (!cf182) {
                addr_10002d44_58:
                esp184 = reinterpret_cast<struct s569*>(esp180 - 1);
                *reinterpret_cast<struct s569**>(&esp184->f0) = esp184;
                __asm__("insb ");
                __asm__("insb ");
                *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                esp180 = reinterpret_cast<struct s572**>(&esp184->pad4 - 1);
                *esp180 = ebp172;
                ecx101 = reinterpret_cast<struct s566*>(reinterpret_cast<int32_t>(&ecx101->pad98) - 1);
                __asm__("aaa ");
                *reinterpret_cast<struct s569**>(&esi176->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi176->f0)) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
                __asm__("insb ");
            } else {
                if (!reinterpret_cast<uint1_t>(cf182 | zf183)) {
                    addr_10002d82_61:
                    eax162 = eax162 - 0x6f006300;
                    goto addr_10002d87_62;
                } else {
                    __asm__("outsb ");
                    cf185 = reinterpret_cast<unsigned char>(eax162) < reinterpret_cast<unsigned char>(0x63616975);
                    eax162 = eax162 - 0x63616975;
                    __asm__("outsd ");
                    if (cf185) {
                        addr_10002d87_62:
                        *reinterpret_cast<struct s569**>(&edx170->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&edx170->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
                        tmp8_186 = reinterpret_cast<unsigned char>(g79007300 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
                        g79007300 = tmp8_186;
                        *reinterpret_cast<struct s569**>(&esi176->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi176->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
                        goto addr_10002d94_64;
                    } else {
                        eax162 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax162 - 0x312d316c) - 0x6c642e31);
                        __asm__("insb ");
                        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                        edx170->f80 = reinterpret_cast<signed char>(edx170->f80 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx170)));
                        ebx123 = reinterpret_cast<struct s572*>(&ebx123->f1);
                        esp187 = reinterpret_cast<struct s569*>(esp180 - 1);
                        *reinterpret_cast<struct s569**>(&esp187->f0) = edx170;
                        esp188 = reinterpret_cast<struct s573*>(reinterpret_cast<unsigned char>(esp187) - 4);
                        *reinterpret_cast<struct s573**>(&esp188->f0) = esp188;
                        *reinterpret_cast<void**>(&eax162) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)) ^ 46);
                        __asm__("insb ");
                        __asm__("insb ");
                        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
                        esp180 = reinterpret_cast<struct s572**>(reinterpret_cast<unsigned char>(esp188) - 4);
                        *esp180 = edi166;
                        goto addr_10002d41_57;
                    }
                }
            }
        }
    }
    __asm__("insb ");
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    tmp8_189 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ebp172) + reinterpret_cast<unsigned char>(edx170) * 2 + 0x73) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    cf190 = tmp8_189 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebp172) + reinterpret_cast<unsigned char>(edx170) * 2 + 0x73);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ebp172) + reinterpret_cast<unsigned char>(edx170) * 2 + 0x73) = tmp8_189;
    if (cf190) {
        addr_10002d94_64:
        __asm__("arpl [eax], ax");
        *reinterpret_cast<struct s569**>(esp180 - 1) = reinterpret_cast<struct s569*>(0x6c002d00);
        ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
        tmp8_191 = reinterpret_cast<unsigned char>(g2d003200 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
        g2d003200 = tmp8_191;
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
        *reinterpret_cast<struct s569**>(&esi176->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi176->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        ecx101->f110 = reinterpret_cast<unsigned char>(ecx101->f110 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
        ebx192 = reinterpret_cast<struct s575*>(&ebx123->f1);
        __asm__("outsd ");
        __asm__("outsb ");
        esi193 = reinterpret_cast<struct s569*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx101) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x6f) * 0x7261566e);
        esp194 = reinterpret_cast<struct s576*>(ecx101->f98 * 0x5300656c);
        __asm__("insb ");
        if (!__intrinsic()) {
            __asm__("outsd ");
            __asm__("outsb ");
            esp195 = reinterpret_cast<void*>(ecx101->f98 * 0x5343656c);
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
            *reinterpret_cast<struct s572**>(reinterpret_cast<int32_t>(esp195) - 4) = edi166;
            __asm__("popad ");
            __asm__("insb ");
            ebx192 = reinterpret_cast<struct s575*>(&ebx192->f1);
            __asm__("outsd ");
            __asm__("outsb ");
            esi193 = reinterpret_cast<struct s569*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx101) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x6f) * 0x7261566e);
            esp194 = reinterpret_cast<struct s576*>(ecx101->f98 * 0x656c);
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
            __asm__("outsb ");
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 100) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 100) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
            *reinterpret_cast<struct s569**>(&esi193->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi193->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
        }
    } else {
        __asm__("insb ");
        __asm__("insb ");
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
        if (__intrinsic()) 
            goto addr_10002d74_69; else 
            goto addr_10002d74_69;
    }
    tmp8_196 = reinterpret_cast<unsigned char>(ebp172->f120 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    cf197 = tmp8_196 < ebp172->f120;
    ebp172->f120 = tmp8_196;
    __asm__("arpl [ebp+0x70], sp");
    if (!ebp172->f120) {
        addr_10002e8c_71:
    } else {
        __asm__("outsd ");
        __asm__("outsb ");
        *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
        tmp8_198 = reinterpret_cast<unsigned char>(edx170->f101 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx170)));
        cf199 = tmp8_198 < edx170->f101;
        edx170->f101 = tmp8_198;
        if (!edx170->f101) {
            addr_10002ea1_73:
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
            tmp8_200 = reinterpret_cast<unsigned char>(g29006400 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            g29006400 = tmp8_200;
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 40) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 40) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            tmp8_201 = reinterpret_cast<unsigned char>(g29007800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            g29007800 = tmp8_201;
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            tmp8_202 = reinterpret_cast<unsigned char>(g38003000 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
            g38003000 = tmp8_202;
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx192)));
            *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
            eax203 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) & 0x73007700);
            *eax203 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax203));
            *eax203 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax203));
            *eax203 = reinterpret_cast<signed char>(*eax203 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax203) + 1));
            *eax203 = reinterpret_cast<signed char>(*eax203 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax203) + 1));
            *eax203 = reinterpret_cast<signed char>(*eax203 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax203) + 1));
            *eax203 = reinterpret_cast<signed char>(*eax203 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax203) + 1));
            *eax203 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax203));
            *eax203 = reinterpret_cast<signed char>(static_cast<int32_t>(*eax203));
            tmp8_204 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
            cf205 = reinterpret_cast<unsigned char>(tmp8_204) < reinterpret_cast<unsigned char>(ebp172->f0);
            ebp172->f0 = tmp8_204;
            if (!cf205) 
                goto addr_10002ee0_74; else 
                goto addr_10002ee0_74;
        } else {
            if (cf199) {
                addr_10002e9c_76:
                goto addr_10002ea1_73;
            } else {
                eax206 = reinterpret_cast<signed char*>(eax162 - 1);
                if (cf199) 
                    goto addr_10002e31_78; else 
                    goto addr_10002e31_78;
            }
        }
    }
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    eax162 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax162) & 0x29007000);
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    *eax162 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax162)));
    tmp8_207 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    g73006800 = tmp8_207;
    goto addr_10002e9c_76;
    addr_10002ee0_74:
    *reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebp172) + *reinterpret_cast<int16_t*>(&esi193)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(*reinterpret_cast<int16_t*>(&ebp172) + *reinterpret_cast<int16_t*>(&esi193)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx192) + 1));
    ebx192->f0 = reinterpret_cast<unsigned char>(ebx192->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx192)));
    eax208 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax203) & 0x73007700);
    ebp172->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx192)));
    *eax208 = reinterpret_cast<void*>(0);
    *eax208 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax208)));
    *eax208 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax208)));
    ebx209 = reinterpret_cast<struct s572*>(&ebx192->f1);
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    __asm__("insb ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 67) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    edi166->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 0x65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 0x65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx209) + 1)));
    ebx210 = esp194->f0;
    esp211 = reinterpret_cast<struct s577*>(&esp194->f4);
    tmp8_212 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    g73006800 = tmp8_212;
    ebp172->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx210)));
    *eax208 = reinterpret_cast<void*>(0);
    *eax208 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax208)));
    *eax208 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax208)));
    ebx213 = esp211->f0;
    esp214 = reinterpret_cast<struct s578*>(&esp211->f4);
    tmp8_215 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    g73006800 = tmp8_215;
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    tmp8_216 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    g73006800 = tmp8_216;
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    ebp172->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx213)));
    *reinterpret_cast<void**>(&eax208) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax208)));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    ebx217 = esp214->f0;
    esp218 = &esp214->f4;
    tmp8_219 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    g73006800 = tmp8_219;
    ebp172->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx217)));
    *reinterpret_cast<void**>(&eax208) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)) | reinterpret_cast<unsigned char>(*eax208));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    *reinterpret_cast<void**>(&eax208) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)) | reinterpret_cast<unsigned char>(*eax208));
    tmp8_220 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    cf221 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_220) < reinterpret_cast<unsigned char>(*eax208));
    *eax208 = tmp8_220;
    if (!reinterpret_cast<uint1_t>(cf221 | reinterpret_cast<uint1_t>(*eax208 == 0))) {
        addr_10002fb3_81:
        goto addr_10002fb5_82;
    } else {
        __asm__("insb ");
        tmp8_222 = reinterpret_cast<unsigned char>(ecx101->f110 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
        cf223 = tmp8_222 < ecx101->f110;
        ecx101->f110 = tmp8_222;
        if (!ecx101->f110) 
            goto addr_10002fb5_82;
        if (!cf223) 
            goto addr_10002f52_85;
    }
    addr_10002fc0_86:
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    goto addr_10002fc8_87;
    addr_10002f52_85:
    __asm__("popad ");
    __asm__("insb ");
    esp218 = &(*esp218)->f4;
    if (!cf223) {
        addr_10002fbb_88:
        tmp8_224 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
        g73006800 = tmp8_224;
        goto addr_10002fc0_86;
    } else {
        ebx217 = reinterpret_cast<struct s569*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx101) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x6e) * 99);
        cf225 = __intrinsic();
        esp218 = &(*esp218)->f4;
        if (!reinterpret_cast<uint1_t>(cf225 | __undefined())) {
            addr_10002fc8_87:
            *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            *reinterpret_cast<void**>(&eax208) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            esi193 = reinterpret_cast<struct s569*>(&esi193->pad4);
            *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
            esp218 = esp218 - 4;
            *esp218 = ebx217;
            edi166->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
            goto addr_10002fda_90;
        } else {
            __asm__("insb ");
            esp218 = &(*esp218)->f4 - 4;
            *esp218 = edx170;
            if (!cf225) {
                addr_10002fda_90:
                *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 0x77) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 0x77) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
                goto addr_10002fdf_92;
            } else {
                __asm__("insb ");
                if (__undefined()) {
                    addr_10002fb5_82:
                    tmp8_226 = reinterpret_cast<signed char>(g3a006400 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
                    g3a006400 = tmp8_226;
                    goto addr_10002fbb_88;
                } else {
                    __asm__("popad ");
                    __asm__("arpl [edx+0x6f], si");
                    if (!cf225) {
                        addr_10002f9c_95:
                        *reinterpret_cast<struct s569**>(&ebx217->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&ebx217->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
                        __asm__("popad ");
                        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 92) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 92) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
                        *reinterpret_cast<struct s569**>(&ebx217->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&ebx217->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx170)));
                        ebp172 = reinterpret_cast<struct s572*>(reinterpret_cast<uint32_t>(ebp172) - 1);
                        *eax208 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax208) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
                        *reinterpret_cast<struct s569**>(&edx170->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&edx170->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx217 + 1)));
                        tmp8_227 = reinterpret_cast<signed char>(g3a006400 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
                        g3a006400 = tmp8_227;
                        goto addr_10002fb3_81;
                    } else {
                        esp218 = esp218 - 4;
                        *esp218 = reinterpret_cast<struct s569*>(0x746e6900);
                        if (cf225) {
                            addr_10002fe4_97:
                        } else {
                            __asm__("popad ");
                            __asm__("insb ");
                            esp218 = &(*esp218)->f4;
                            if (!cf225) {
                                addr_10002fdf_92:
                                tmp8_228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
                                cf225 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_228) < reinterpret_cast<unsigned char>(ecx101->f0));
                                ecx101->f0 = tmp8_228;
                                goto addr_10002fe4_97;
                            } else {
                                ebx217 = reinterpret_cast<struct s569*>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx101) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x6e) * 99);
                                cf229 = __intrinsic();
                                zf230 = __undefined();
                                esp218 = &(*esp218)->f4;
                                if (!reinterpret_cast<uint1_t>(cf229 | zf230)) {
                                    addr_10002fec_100:
                                    __asm__("arpl [eax], ax");
                                    if (cf229) 
                                        goto addr_10002ff2_101; else 
                                        goto addr_10002ff2_101;
                                } else {
                                    __asm__("insb ");
                                    esp218 = &(*esp218)->f4 - 4;
                                    *esp218 = edx170;
                                    if (!cf229) 
                                        goto addr_10002ff8_103;
                                    if (!zf230) 
                                        goto addr_10002ffd_105; else 
                                        goto addr_10002f8b_106;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 77) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx217)));
    tmp8_231 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    cf229 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_231) < reinterpret_cast<unsigned char>(ecx101->f0));
    ecx101->f0 = tmp8_231;
    goto addr_10002fec_100;
    addr_10002ff2_101:
    __asm__("outsd ");
    *reinterpret_cast<struct s569**>(&ebx217->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&ebx217->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
    __asm__("outsd ");
    *reinterpret_cast<struct s569**>(&esi193->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi193->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    zf230 = reinterpret_cast<uint1_t>(*reinterpret_cast<struct s569**>(&esi193->f0) == 0);
    goto addr_10002ff8_103;
    addr_10002ffd_105:
    edi166->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx170)));
    eax208 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*eax208) * 0x64006e);
    __asm__("outsd ");
    tmp8_232 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
    cf229 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_232) < reinterpret_cast<unsigned char>(edi166->f0));
    edi166->f0 = tmp8_232;
    goto addr_10003008_108;
    addr_10002f8b_106:
    __asm__("arpl [ebp+0x2e], sp");
    esp218 = esp218 - 4;
    *esp218 = reinterpret_cast<struct s569*>(0x6c695700);
    ebp172 = reinterpret_cast<struct s572*>(&ebp172->f1);
    zf230 = reinterpret_cast<uint1_t>(ebp172 == 0);
    if (cf229) {
        addr_10003008_108:
    } else {
        __asm__("outsd ");
        if (cf229) {
            addr_10002ff8_103:
            if (zf230) 
                goto addr_10002ffc_110; else 
                goto addr_10002ffc_110;
        } else {
            ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax208) + reinterpret_cast<uint32_t>(eax208) + 0x6f) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
            goto addr_10002f9c_95;
        }
    }
    esp233 = &(*esp218)->f4;
    tmp8_234 = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&ebx217->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax208)));
    cf235 = reinterpret_cast<unsigned char>(tmp8_234) < reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&ebx217->f0));
    *reinterpret_cast<struct s569**>(&ebx217->f0) = tmp8_234;
    *reinterpret_cast<struct s569**>(&esi193->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi193->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    esp236 = esp233 - 4;
    *esp236 = esi193;
    tmp8_237 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax208) + 1)));
    cf238 = reinterpret_cast<unsigned char>(tmp8_237) < reinterpret_cast<unsigned char>(ebp172->f0);
    ebp172->f0 = tmp8_237;
    eax239 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*eax208) * 0x6e006f);
    esp240 = &(*esp236)->f4;
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax239)));
    zf241 = ecx101->f0 == 0;
    esp242 = esp240 - 4;
    *esp242 = reinterpret_cast<struct s569*>(0x6e006500);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
    *reinterpret_cast<struct s569**>(&ebx217->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&ebx217->f0)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax239) + 1)));
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239) + 0x69) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx170 + 1)));
    edi166->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239) + 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239) + 76) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx217)));
    edi166->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    **reinterpret_cast<unsigned char**>(&ebx217) = reinterpret_cast<unsigned char>(**reinterpret_cast<unsigned char**>(&ebx217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    __asm__("outsb ");
    ebp172->f0 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx170)));
    ecx243 = reinterpret_cast<int32_t>(ecx101) - 1;
    *eax239 = reinterpret_cast<signed char>(*eax239 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax239)));
    *eax239 = reinterpret_cast<signed char>(*eax239 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax239)));
    *reinterpret_cast<signed char*>(ecx243 - 0x6a13a138) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ecx243 - 0x6a13a138) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx243) + 1));
    goto *esp242;
    addr_10002ffc_110:
    esp218 = &(*esp218)->f4;
    goto addr_10002ffd_105;
    addr_10002e31_78:
    *eax206 = reinterpret_cast<signed char>(*eax206 + *reinterpret_cast<signed char*>(&eax206));
    tmp8_244 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi166) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x67) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx101)));
    cf245 = tmp8_244 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi166) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x67);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi166) + reinterpret_cast<uint32_t>(ebp172) * 2 + 0x67) = tmp8_244;
    eax246 = eax206 - 1;
    *eax246 = reinterpret_cast<signed char>(*eax246 + *reinterpret_cast<signed char*>(&eax246));
    esi193 = reinterpret_cast<struct s569*>(&esi193->pad4);
    __asm__("popad ");
    ebp172 = reinterpret_cast<struct s572*>(*reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(esi193) + reinterpret_cast<uint32_t>(eax246) * 2 + 97) * 0x7473);
    *eax246 = reinterpret_cast<signed char>(*eax246 + *reinterpret_cast<signed char*>(&eax246));
    eax247 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax246) & 0x73006800);
    *eax247 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax247) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    tmp8_248 = reinterpret_cast<unsigned char>(g29006400 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax247) + 1));
    g29006400 = tmp8_248;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax247) + reinterpret_cast<uint32_t>(eax247) + 37) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax247) + reinterpret_cast<uint32_t>(eax247) + 37) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx192)));
    tmp8_249 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax247) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    cf250 = reinterpret_cast<unsigned char>(tmp8_249) < reinterpret_cast<unsigned char>(*eax247);
    *eax247 = tmp8_249;
    *eax247 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax247) & reinterpret_cast<uint32_t>(eax247));
    eax162 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax247) & 0x3a007000);
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    *eax162 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax162)));
    *eax162 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax162)));
    tmp8_251 = reinterpret_cast<unsigned char>(g73006800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    g73006800 = tmp8_251;
    ecx101->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx101->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    tmp8_252 = reinterpret_cast<unsigned char>(g3a007000 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    g3a007000 = tmp8_252;
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    *eax162 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax162)));
    *eax162 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    ebx192->f0 = reinterpret_cast<unsigned char>(ebx192->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax162) + reinterpret_cast<unsigned char>(eax162) + 0x6c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    tmp8_253 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp172->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162 + 1)));
    cf197 = reinterpret_cast<unsigned char>(tmp8_253) < reinterpret_cast<unsigned char>(ebp172->f0);
    ebp172->f0 = tmp8_253;
    goto addr_10002e8c_71;
    addr_10002d74_69:
    eax162 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*eax162) * 0x6d002d - 0x69007700);
    *reinterpret_cast<struct s569**>(&esi176->f0) = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&esi176->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx101) + 1)));
    goto addr_10002d82_61;
    addr_10002ce4_54:
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    *eax162 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax162) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax162)));
    edi166 = reinterpret_cast<struct s572*>(reinterpret_cast<uint32_t>(edi166) - 1);
    ebp172 = reinterpret_cast<struct s572*>(reinterpret_cast<uint32_t>(ebp172) - 1);
    ebx123 = reinterpret_cast<struct s572*>(&ebx123->f1 + 1);
    esp254 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp163) - 4);
    *reinterpret_cast<void***>(esp254) = esp254;
    esp177 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp254) - 1);
    esi176 = reinterpret_cast<struct s569*>(reinterpret_cast<unsigned char>(esi137) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<struct s569**>(&edx170->f0)));
    __asm__("insb ");
    goto addr_10002cfb_55;
}

struct s579 {
    signed char[1] pad1;
    signed char f1;
};

struct s580 {
    signed char[4] pad4;
    void* f4;
};

struct s581 {
    signed char[4] pad4;
    void* f4;
};

signed char g827f427d;

struct s583 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s582 {
    signed char[4] pad4;
    unsigned char f4;
    signed char[31] pad36;
    struct s583* f36;
};

struct s584 {
    signed char f0;
    unsigned char f1;
    signed char[16718171] pad16718173;
    int32_t f16718173;
};

struct s586 {
    signed char[4] pad4;
    void* f4;
};

struct s585 {
    void* f0;
    signed char[3] pad4;
    struct s586* f4;
    signed char[113] pad121;
    int32_t f121;
};

struct s587 {
    unsigned char f0;
    signed char[3] pad4;
    unsigned char f4;
    signed char[298392806] pad298392811;
    void* f298392811;
};

struct s588 {
    unsigned char f0;
    unsigned char f1;
};

struct s589 {
    unsigned char f0;
    unsigned char f1;
};

struct s590 {
    void* f0;
    void* f1;
    signed char[85] pad87;
    unsigned char f87;
};

struct s591 {
    void* f0;
    signed char[66311] pad66312;
    unsigned char f66312;
};

struct s592 {
    unsigned char f0;
    unsigned char f1;
};

struct s593 {
    int32_t f0;
    int32_t f4;
};

void* fun_202b3386();

struct s594 {
    void* f0;
    unsigned char f1;
};

struct s595 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s596 {
    unsigned char f0;
    signed char[4] pad5;
    unsigned char f5;
    unsigned char f6;
    signed char[201355257] pad201355264;
    signed char f201355264;
};

unsigned char g4004800;

signed char g40047ff;

unsigned char g360063ff;

struct s597 {
    void* f0;
    unsigned char f1;
};

struct s599 {
    unsigned char f0;
    signed char[4] pad5;
    unsigned char f5;
};

struct s598 {
    signed char[1] pad1;
    struct s599* f1;
};

struct s600 {
    void* f0;
    unsigned char f1;
};

struct s601 {
    void* f0;
    unsigned char f1;
};

struct s602 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s603 {
    signed char[5] pad5;
    unsigned char f5;
};

struct s604 {
    void* f0;
    void* f1;
};

struct s605 {
    void* f0;
    unsigned char f1;
};

struct s606 {
    void* f0;
    signed char[66311] pad66312;
    unsigned char f66312;
};

struct s607 {
    void* f0;
    void* f1;
};

struct s608 {
    void* f0;
    signed char f1;
};

void* g100070;

unsigned char g30001400;

struct s609 {
    signed char[66312] pad66312;
    unsigned char f66312;
};

struct s610 {
    unsigned char f0;
    signed char[262487] pad262488;
    unsigned char f262488;
};

struct s611 {
    void* f0;
    void* f1;
};

struct s612 {
    void* f0;
    signed char[4] pad5;
    unsigned char f5;
};

struct s613 {
    unsigned char f0;
    void* f1;
};

struct s615 {
    void* f0;
    signed char[10] pad11;
    unsigned char f11;
    signed char[201355263] pad201355275;
    signed char f201355275;
};

struct s614 {
    struct s614* f0;
    struct s615* f2;
};

struct s616 {
    void* f0;
    signed char[5] pad6;
    unsigned char f6;
    unsigned char f7;
};

struct s617 {
    void* f0;
    void* f1;
};

unsigned char g14015800;

struct s618 {
    void* f0;
    unsigned char f1;
};

unsigned char g4010b0b;

struct s619 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s620 {
    unsigned char f0;
    void* f1;
};

unsigned char g30000c00;

struct s621 {
    signed char[58982404] pad58982404;
    void* f58982404;
};

unsigned char g4010b07;

struct s622 {
    void* f0;
    unsigned char f1;
};

unsigned char g4010b0d;

struct s624 {
    signed char[4] pad4;
    int16_t f4;
};

struct s623 {
    unsigned char* f0;
    struct s624* f2;
};

struct s625 {
    void* f0;
    unsigned char f1;
};

struct s626 {
    signed char[4] pad4;
    unsigned char f4;
};

struct s627 {
    unsigned char f0;
    signed char[6] pad7;
    signed char f7;
};

struct s628 {
    void* f0;
    unsigned char f1;
};

struct s629 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s630 {
    unsigned char f0;
    unsigned char f1;
};

unsigned char g4010b0e;

struct s631 {
    void* f0;
    unsigned char f1;
};

struct s632 {
    struct s632* f0;
    void* f1;
    signed char[2] pad4;
    void* f4;
    signed char[2] pad10;
    signed char f10;
};

struct s633 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

unsigned char g4010b0a;

struct s634 {
    void* f0;
    signed char f1;
    signed char[8] pad10;
    unsigned char f10;
};

struct s635 {
    signed char f0;
    signed char[65535] pad65536;
    void* f65536;
};

struct s636 {
    void* f0;
    void* f1;
};

struct s637 {
    void* f0;
    void* f1;
};

void* g4000b04;

unsigned char g8001608;

struct s638 {
    unsigned char f0;
    signed char[4] pad5;
    unsigned char f5;
};

void* g4000b0c;

struct s639 {
    void* f0;
    unsigned char f1;
};

struct s640 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

unsigned char g4010b0c;

unsigned char g4010b11;

struct s641 {
    signed char[1] pad1;
    void* f1;
    signed char[3] pad5;
    unsigned char f5;
};

struct s642 {
    void* f0;
    signed char[10] pad11;
    unsigned char f11;
    signed char[65524] pad65536;
    unsigned char f65536;
};

struct s643 {
    void* f0;
    unsigned char f1;
    signed char[3] pad5;
    unsigned char f5;
    signed char[5] pad11;
    signed char f11;
};

struct s644 {
    void* f0;
    unsigned char f1;
};

struct s645 {
    unsigned char f0;
    signed char[65535] pad65536;
    void* f65536;
};

struct s646 {
    void* f0;
    void* f1;
};

struct s647 {
    void* f0;
    unsigned char f1;
};

signed char g31001000;

struct s648 {
    unsigned char f0;
    signed char[4] pad5;
    unsigned char f5;
};

struct s649 {
    signed char f0;
    signed char[67127306] pad67127307;
    unsigned char f67127307;
};

unsigned char g8201300;

struct s650 {
    unsigned char f0;
    unsigned char f1;
};

struct s651 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s652 {
    unsigned char f0;
    signed char[201355274] pad201355275;
    unsigned char f201355275;
};

void fun_10003062(unsigned char* ecx) {
    unsigned char tmp8_2;
    signed char al3;
    uint1_t cf4;
    void** eax5;
    unsigned char al6;
    int32_t edx7;
    signed char* ebp8;
    struct s579* ebp9;
    void* eax10;
    signed char* edi11;
    signed char* edi12;
    signed char* bx13;
    signed char* bx14;
    int32_t ecx15;
    signed char* ebx16;
    signed char* ebx17;
    int32_t* esp18;
    signed char* ebx19;
    signed char* ebx20;
    int32_t* esp21;
    signed char* edi22;
    signed char* edi23;
    signed char dh24;
    void* tmp8_25;
    void* dl26;
    int1_t cf27;
    signed char* eax28;
    signed char* ebp29;
    signed char* ebp30;
    signed char* di31;
    signed char* di32;
    uint40_t v33;
    int32_t ebp34;
    signed char* ebx35;
    signed char* ebx36;
    signed char dh37;
    signed char* edx38;
    signed char* edx39;
    signed char dh40;
    signed char* edi41;
    signed char* edi42;
    signed char* ebx43;
    signed char* ebx44;
    signed char dl45;
    unsigned char tmp8_46;
    signed char* esi47;
    uint1_t cf48;
    unsigned char* esi49;
    unsigned char* esi50;
    uint1_t zf51;
    signed char* esi52;
    signed char* edx53;
    signed char* edx54;
    signed char dh55;
    signed char bl56;
    unsigned char tmp8_57;
    int1_t cf58;
    signed char* ebx59;
    signed char* ebx60;
    signed char dh61;
    signed char* esi62;
    signed char* esi63;
    signed char* esi64;
    signed char* edi65;
    signed char* edi66;
    signed char dl67;
    int32_t* eax68;
    unsigned char tmp8_69;
    signed char* edi70;
    signed char dh71;
    int1_t cf72;
    unsigned char* edi73;
    unsigned char* edi74;
    void* esp75;
    unsigned char tmp8_76;
    signed char* ebx77;
    int1_t cf78;
    unsigned char* ebx79;
    unsigned char* ebx80;
    signed char* ebx81;
    signed char* esi82;
    signed char* esi83;
    signed char* esi84;
    struct s581** esp85;
    struct s581* esi86;
    unsigned char tmp8_87;
    signed char* ebp88;
    int1_t cf89;
    unsigned char* ebp90;
    unsigned char* ebp91;
    signed char* eax92;
    void** esp93;
    signed char* ebp94;
    signed char* ebp95;
    signed char* ebp96;
    unsigned char tmp8_97;
    signed char* edi98;
    int1_t cf99;
    unsigned char* edi100;
    unsigned char* edi101;
    signed char* edx102;
    signed char* edx103;
    signed char dh104;
    void* esp105;
    signed char* edx106;
    signed char* edx107;
    signed char* edi108;
    signed char* edi109;
    signed char* edi110;
    int16_t* esp111;
    signed char* edi112;
    signed char* edi113;
    signed char tmp8_114;
    unsigned char* eax115;
    struct s582* esi116;
    void* esi117;
    struct s584* edx118;
    void* edx119;
    struct s583* ecx120;
    void* edi121;
    int16_t es122;
    int32_t* esp123;
    signed char** edi124;
    int16_t* esp125;
    int32_t* eax126;
    signed char* ebp127;
    signed char* ebp128;
    int32_t* eax129;
    signed char* ebx130;
    signed char* ebx131;
    struct s585* eax132;
    struct s587* edx133;
    signed char* ebx134;
    signed char* ebx135;
    uint16_t cs136;
    unsigned char* ecx137;
    struct s585* ebx138;
    signed char* eax139;
    signed char* ebx140;
    void* edi141;
    struct s588* esi142;
    struct s589* edi143;
    struct s585** esp144;
    signed char* ebp145;
    signed char* ebp146;
    signed char* ebp147;
    signed char* ebp148;
    signed char* ebp149;
    struct s585** esp150;
    int32_t* esp151;
    int32_t ebp152;
    int32_t* esp153;
    signed char* eax154;
    struct s585** esp155;
    unsigned char tmp8_156;
    int1_t cf157;
    int32_t* eax158;
    struct s586** esp159;
    signed char* ebp160;
    signed char* ebp161;
    int32_t* eax162;
    void** esp163;
    int32_t* eax164;
    unsigned char tmp8_165;
    int1_t cf166;
    void* esp167;
    void** eax168;
    unsigned char tmp8_169;
    int1_t cf170;
    int32_t* esp171;
    int32_t ebp172;
    signed char* ebp173;
    signed char* ebp174;
    struct s585** esp175;
    int32_t* esp176;
    struct s590* eax177;
    void* tmp8_178;
    int1_t cf179;
    signed char* ebp180;
    signed char* ebp181;
    int32_t* esp182;
    signed char* ebp183;
    signed char* ebp184;
    void*** ecx185;
    signed char* ebp186;
    signed char* ebp187;
    void** esp188;
    struct s585** esp189;
    int1_t zf190;
    unsigned char tmp8_191;
    uint1_t cf192;
    unsigned char tmp8_193;
    int1_t cf194;
    signed char* ebp195;
    signed char* ebp196;
    int32_t* esp197;
    int32_t* esp198;
    unsigned char* ebp199;
    signed char* ebp200;
    void* tmp8_201;
    int1_t cf202;
    void* ebp203;
    void* ebp204;
    struct s591* eax205;
    struct s592* eax206;
    uint16_t* esp207;
    void* esp208;
    void* tmp8_209;
    int1_t cf210;
    int1_t zf211;
    void* esp212;
    struct s593* esp213;
    void* eax214;
    struct s594* eax215;
    unsigned char* eax216;
    struct s595* eax217;
    void** esp218;
    unsigned char tmp8_219;
    uint1_t cf220;
    struct s596* esi221;
    unsigned char* eax222;
    unsigned char* eax223;
    unsigned char tmp8_224;
    unsigned char tmp32_225;
    unsigned char tmp8_226;
    unsigned char tmp8_227;
    signed char tmp8_228;
    signed char tmp8_229;
    unsigned char tmp8_230;
    unsigned char tmp8_231;
    unsigned char tmp8_232;
    unsigned char tmp8_233;
    struct s597* eax234;
    void* tmp8_235;
    uint1_t cf236;
    struct s598* esp237;
    unsigned char* eax238;
    struct s600* eax239;
    void* tmp32_240;
    uint1_t cf241;
    unsigned char* eax242;
    unsigned char* eax243;
    struct s601* eax244;
    struct s602* eax245;
    struct s603* esi246;
    unsigned char* eax247;
    void* eax248;
    struct s604* eax249;
    struct s605* eax250;
    struct s599** esp251;
    unsigned char* eax252;
    struct s599* esi253;
    struct s606* eax254;
    int32_t* esp255;
    unsigned char* eax256;
    void* esp257;
    struct s607* eax258;
    unsigned char tmp8_259;
    uint1_t cf260;
    struct s608* eax261;
    void* tmp8_262;
    unsigned char tmp8_263;
    signed char* eax264;
    struct s609* eax265;
    struct s610* eax266;
    int16_t* esp267;
    unsigned char* eax268;
    void* esp269;
    struct s611* eax270;
    void** eax271;
    struct s612* esi272;
    struct s613* edi273;
    void*** esp274;
    struct s614* esp275;
    uint32_t eflags276;
    void** eax277;
    void* tmp8_278;
    uint1_t cf279;
    struct s616* edi280;
    struct s614* es281;
    struct s615** esp282;
    void* tmp8_283;
    uint1_t cf284;
    void** eax285;
    unsigned char tmp8_286;
    uint1_t cf287;
    struct s615* edx288;
    struct s614** esp289;
    void* esp290;
    struct s614** esp291;
    void* eax292;
    struct s617* eax293;
    unsigned char tmp8_294;
    void* tmp8_295;
    uint1_t cf296;
    void** eax297;
    struct s618* eax298;
    void* tmp8_299;
    uint1_t cf300;
    void* tmp32_301;
    uint1_t cf302;
    unsigned char* eax303;
    unsigned char tmp8_304;
    struct s614** esp305;
    void* eax306;
    void** eax307;
    void** ecx308;
    struct s619* eax309;
    void* tmp8_310;
    uint1_t cf311;
    struct s614** esp312;
    void* esp313;
    void* ecx314;
    unsigned char* ecx315;
    unsigned char* eax316;
    unsigned char* eax317;
    int16_t* esp318;
    int16_t ss319;
    unsigned char tmp8_320;
    uint1_t cf321;
    unsigned char tmp8_322;
    unsigned char* eax323;
    struct s620* eax324;
    unsigned char tmp8_325;
    void** eax326;
    struct s621* ecx327;
    unsigned char tmp8_328;
    uint1_t cf329;
    void** eax330;
    unsigned char tmp8_331;
    uint32_t* ecx332;
    struct s622* eax333;
    void* ecx334;
    void** ecx335;
    unsigned char* eax336;
    unsigned char tmp8_337;
    struct s623* esp338;
    void* eax339;
    struct s625* eax340;
    int16_t* esp341;
    int16_t es342;
    unsigned char* eax343;
    struct s626* ebp344;
    struct s627* eax345;
    void* eax346;
    struct s628* eax347;
    struct s629* eax348;
    unsigned char* eax349;
    unsigned char cl350;
    struct s630* eax351;
    unsigned char dh352;
    unsigned char tmp8_353;
    uint1_t cf354;
    unsigned char* eax355;
    unsigned char tmp8_356;
    struct s631* eax357;
    struct s632* esp358;
    unsigned char tmp8_359;
    struct s633* eax360;
    unsigned char* eax361;
    struct s632* eax362;
    unsigned char cl363;
    void* esp364;
    unsigned char tmp8_365;
    struct s634* eax366;
    int32_t* esp367;
    unsigned char tmp8_368;
    uint1_t cf369;
    void* esp370;
    uint1_t cf371;
    void* tmp8_372;
    uint1_t cf373;
    struct s635* eax374;
    struct s636* eax375;
    void** eax376;
    void*** esp377;
    void* al378;
    void* tmp8_379;
    uint1_t cf380;
    struct s637* esp381;
    struct s637* eax382;
    void* tmp8_383;
    uint32_t* esp384;
    int16_t* esp385;
    int16_t* esp386;
    int16_t* esp387;
    void* tmp8_388;
    uint1_t cf389;
    uint32_t* ecx390;
    void** eax391;
    void** eax392;
    void* tmp8_393;
    void* tmp8_394;
    unsigned char tmp8_395;
    uint1_t cf396;
    void* tmp8_397;
    void* tmp8_398;
    unsigned char tmp8_399;
    struct s638* edi400;
    void* tmp32_401;
    void* tmp32_402;
    void* tmp8_403;
    void* tmp8_404;
    void* eax405;
    struct s639* eax406;
    unsigned char dh407;
    unsigned char tmp8_408;
    struct s640* eax409;
    unsigned char* eax410;
    uint16_t* esp411;
    void** ecx412;
    void** eax413;
    unsigned char dh414;
    unsigned char tmp8_415;
    unsigned char tmp8_416;
    void* tmp8_417;
    uint1_t cf418;
    void* eax419;
    void** eax420;
    void** eax421;
    uint32_t ecx422;
    unsigned char* eax423;
    void** eax424;
    unsigned char tmp8_425;
    struct s641* esi426;
    void* eax427;
    signed char* ecx428;
    void** eax429;
    struct s642* eax430;
    unsigned char tmp8_431;
    uint1_t cf432;
    struct s643* esi433;
    void* ecx434;
    unsigned char* eax435;
    struct s643** esp436;
    uint32_t ecx437;
    struct s644* eax438;
    struct s645* eax439;
    struct s646* eax440;
    struct s643* esi441;
    void** ecx442;
    void** eax443;
    struct s647* eax444;
    unsigned char tmp8_445;
    uint1_t cf446;
    unsigned char* eax447;
    void** eax448;
    void* eax449;
    uint32_t tmp32_450;
    uint1_t cf451;
    void* tmp8_452;
    signed char tmp8_453;
    struct s648* edi454;
    unsigned char* eax455;
    struct s643* eax456;
    struct s649* esi457;
    unsigned char* eax458;
    unsigned char* eax459;
    unsigned char tmp8_460;
    struct s650* eax461;
    struct s651* eax462;
    unsigned char* eax463;
    void* eax464;
    struct s652* eax465;
    void** eax466;

    tmp8_2 = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al3 + 67) + cf4);
    *reinterpret_cast<unsigned char*>(&eax5) = tmp8_2;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(tmp8_2 < al6) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax5) == 0))) {
        __asm__("xlatb ");
        *eax5 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax5) + reinterpret_cast<int32_t>(eax5));
        edx7 = 0x662bfd0a;
        ebp8 = &ebp9->f1;
        __asm__("sti ");
        eax10 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
        *edi11 = reinterpret_cast<signed char>(*edi12 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        *bx13 = reinterpret_cast<signed char>(*bx14 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
        __asm__("outsb ");
        *ebp8 = reinterpret_cast<signed char>(*ebp8 + 10);
        ecx15 = reinterpret_cast<int32_t>(ecx - 1);
        *ebx16 = reinterpret_cast<signed char>(*ebx17 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax10)));
        esp18 = reinterpret_cast<int32_t*>(eax5 - 1 - 1 - 4);
        *esp18 = 0x63006500;
        *ebx19 = reinterpret_cast<signed char>(*ebx20 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx15) + 1));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax10) + reinterpret_cast<int32_t>(eax10)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax10) + 1)));
        *reinterpret_cast<signed char*>(&edx7) = reinterpret_cast<signed char>(10 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx15) + 1));
        esp21 = esp18 - 1;
        *esp21 = edx7;
        goto *esp21;
    }
    *edi22 = reinterpret_cast<signed char>(*edi23 + dh24);
    __asm__("outsb ");
    tmp8_25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax5) + reinterpret_cast<signed char>(dl26));
    cf27 = reinterpret_cast<unsigned char>(tmp8_25) < reinterpret_cast<unsigned char>(*eax5);
    *eax5 = tmp8_25;
    eax28 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*eax5) * 0x690076);
    __asm__("insb ");
    *ebp29 = reinterpret_cast<signed char>(*ebp30 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax28) + 1));
    *di31 = reinterpret_cast<signed char>(*di32 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax28) + 1));
    *eax28 = reinterpret_cast<signed char>(*eax28 + *reinterpret_cast<signed char*>(&eax28));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v33) + 1) = ebp34;
    *ebx35 = reinterpret_cast<signed char>(*ebx36 + dh37);
    *edx38 = reinterpret_cast<signed char>(*edx39 + dh40);
    *edi41 = reinterpret_cast<signed char>(*edi42 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("arpl [eax], ax");
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28) + 0x65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28) + 0x65) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *eax28 = reinterpret_cast<signed char>(*eax28 + *reinterpret_cast<signed char*>(&eax28));
    *eax28 = reinterpret_cast<signed char>(*eax28 + *reinterpret_cast<signed char*>(&eax28));
    *eax28 = reinterpret_cast<signed char>(*eax28 + *reinterpret_cast<signed char*>(&eax28));
    *eax28 = reinterpret_cast<signed char>(*eax28 + *reinterpret_cast<signed char*>(&eax28));
    *ebx43 = reinterpret_cast<signed char>(*ebx44 + dl45);
    __asm__("outsd ");
    tmp8_46 = reinterpret_cast<unsigned char>(*esi47 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax28) + 1));
    cf48 = reinterpret_cast<uint1_t>(tmp8_46 < *esi49);
    *esi50 = tmp8_46;
    zf51 = reinterpret_cast<uint1_t>(*esi52 == 0);
    __asm__("popad ");
    *edx53 = reinterpret_cast<signed char>(*edx54 + dh55);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28) + 77) + bl56);
    tmp8_57 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf58 = tmp8_57 < *ecx;
    *ecx = tmp8_57;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    *ebx59 = reinterpret_cast<signed char>(*ebx60 + dh61);
    __asm__("outsd ");
    *esi62 = reinterpret_cast<signed char>(*esi63 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax28) + 1));
    *edi65 = reinterpret_cast<signed char>(*edi66 + dl67);
    eax68 = reinterpret_cast<int32_t*>(*eax28 * 0x64006e);
    __asm__("outsd ");
    tmp8_69 = reinterpret_cast<unsigned char>(*edi70 + dh71);
    cf72 = tmp8_69 < *edi73;
    *edi74 = tmp8_69;
    esp75 = reinterpret_cast<void*>(reinterpret_cast<int32_t>((*reinterpret_cast<struct s580**>(&v33))->f4) + 4);
    tmp8_76 = reinterpret_cast<unsigned char>(*ebx77 + *reinterpret_cast<signed char*>(&eax68));
    cf78 = tmp8_76 < *ebx79;
    *ebx80 = tmp8_76;
    *esi82 = reinterpret_cast<signed char>(*esi83 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    esp85 = reinterpret_cast<struct s581**>(reinterpret_cast<int32_t>(esp75) - 4);
    *esp85 = esi86;
    tmp8_87 = reinterpret_cast<unsigned char>(*ebp88 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax68) + 1));
    cf89 = tmp8_87 < *ebp90;
    *ebp91 = tmp8_87;
    eax92 = reinterpret_cast<signed char*>(*eax68 * 0x6e006f);
    esp93 = &(*esp85)->f4;
    *ebp94 = reinterpret_cast<signed char>(*ebp95 + *reinterpret_cast<signed char*>(&eax92));
    __asm__("insb ");
    tmp8_97 = reinterpret_cast<unsigned char>(*edi98 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf99 = tmp8_97 < *edi100;
    *edi101 = tmp8_97;
    *edx102 = reinterpret_cast<signed char>(*edx103 + dh104);
    esp105 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp93) + 4);
    *edx106 = reinterpret_cast<signed char>(*edx107 + *reinterpret_cast<signed char*>(&eax92));
    __asm__("outsd ");
    *edi108 = reinterpret_cast<signed char>(*edi109 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    esp111 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp105) - 1);
    *edi112 = reinterpret_cast<signed char>(*edi113 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("arpl [eax], ax");
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax92) + reinterpret_cast<int32_t>(eax92) + 0x65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax92) + reinterpret_cast<int32_t>(eax92) + 0x65) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *eax92 = reinterpret_cast<signed char>(*eax92 + *reinterpret_cast<signed char*>(&eax92));
    *eax92 = reinterpret_cast<signed char>(*eax92 + *reinterpret_cast<signed char*>(&eax92));
    *eax92 = reinterpret_cast<signed char>(*eax92 + *reinterpret_cast<signed char*>(&eax92));
    tmp8_114 = reinterpret_cast<signed char>(g827f427d + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax92) + 1));
    g827f427d = tmp8_114;
    eax115 = ecx;
    esi116 = reinterpret_cast<struct s582*>(reinterpret_cast<int32_t>(esi117) + 1);
    edx118 = reinterpret_cast<struct s584*>(reinterpret_cast<int32_t>(edx119) - 1);
    ecx120 = esi116->f36;
    edx118->f16718173 = edx118->f16718173 << 1;
    edi121 = reinterpret_cast<void*>(eax115 - 0x7b);
    es122 = *esp111;
    esp123 = reinterpret_cast<int32_t*>(esp111 + 1 - 2);
    *esp123 = 0x10b811d0;
    *reinterpret_cast<signed char*>(&eax115) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax115) + *reinterpret_cast<signed char*>(&eax115));
    edi124 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(edi121) - 1);
    __asm__("xlatb ");
    esp125 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp123) - 2);
    *esp125 = es122;
    __asm__("in al, dx");
    __asm__("insb ");
    *edi124 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*edi124) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx120) + 1)));
    __asm__("arpl [eax], ax");
    eax126 = reinterpret_cast<int32_t*>(*eax115 * 0x66);
    edx118->f0 = reinterpret_cast<signed char>(edx118->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx118) + 1)));
    __asm__("popad ");
    *ebp127 = reinterpret_cast<signed char>(*ebp128 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx120) + 1)));
    *edi124 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*edi124) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx118) + 1)));
    __asm__("outsd ");
    edx118->f0 = reinterpret_cast<signed char>(edx118->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx118) + 1)));
    eax129 = reinterpret_cast<int32_t*>(*eax126 * 46);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax129) + reinterpret_cast<int32_t>(eax129) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax129) + reinterpret_cast<int32_t>(eax129) + 0x6f) + *reinterpret_cast<signed char*>(&ecx120));
    *ebx130 = reinterpret_cast<signed char>(*ebx131 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax129) + 1));
    eax132 = reinterpret_cast<struct s585*>(*eax129 * 65);
    eax132->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax132->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx118) + 1)));
    edx133 = reinterpret_cast<struct s587*>(&edx118->f1);
    *reinterpret_cast<unsigned char*>(edx133) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx133) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    __asm__("outsd ");
    *ebx134 = reinterpret_cast<signed char>(*ebx135 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx120) + 1)));
    *reinterpret_cast<unsigned char*>(edx133) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx133) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax132->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax132->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax132)));
    cs136 = static_cast<uint16_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx120) - 57));
    __asm__("iretd ");
    __asm__("fcom dword [ebx+0x80aea949]");
    ecx137 = &ecx120->f1;
    ebx138 = eax132;
    eax139 = ebx140;
    edi141 = reinterpret_cast<void*>(edi124 + 4);
    esi142 = reinterpret_cast<struct s588*>(&esi116->f4);
    edi143 = reinterpret_cast<struct s589*>(reinterpret_cast<uint32_t>(edi141) - (reinterpret_cast<int32_t>(edx133) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(edi141) < reinterpret_cast<int32_t>(edx133) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*edi124) < reinterpret_cast<unsigned char>(eax139)))));
    esp144 = reinterpret_cast<struct s585**>(esp125 - 2);
    *esp144 = ebx138;
    *ebp145 = reinterpret_cast<signed char>(*ebp146 + *reinterpret_cast<signed char*>(&eax139 + 1));
    __asm__("insb ");
    *ebp147 = reinterpret_cast<signed char>(*ebp148 + *reinterpret_cast<signed char*>(&eax139 + 1));
    __asm__("arpl [eax], ax");
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax139) + reinterpret_cast<unsigned char>(eax139) + 85) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax139) + reinterpret_cast<unsigned char>(eax139) + 85) + *reinterpret_cast<signed char*>(&eax139 + 1));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    *reinterpret_cast<unsigned char*>(edx133) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx133) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    esp150 = esp144 - 1;
    *esp150 = ebx138;
    *ecx137 = reinterpret_cast<unsigned char>(*ecx137 + *reinterpret_cast<signed char*>(&ecx137));
    *eax139 = reinterpret_cast<signed char>(*eax139 + *reinterpret_cast<signed char*>(&eax139));
    esi142->f0 = reinterpret_cast<unsigned char>(esi142->f0 + *reinterpret_cast<signed char*>(&ecx137));
    __asm__("outsd ");
    *ecx137 = reinterpret_cast<unsigned char>(*ecx137 + *reinterpret_cast<signed char*>(&eax139));
    esp151 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp150) + 1 - 4);
    *esp151 = ebp152;
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    esp153 = esp151 - 1;
    *esp153 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax139) + reinterpret_cast<unsigned char>(eax139) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax139) + reinterpret_cast<unsigned char>(eax139) + 0x6f) + *reinterpret_cast<signed char*>(&eax139 + 1));
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    __asm__("outsb ");
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + *reinterpret_cast<signed char*>(&ecx137));
    eax154 = reinterpret_cast<signed char*>(*eax139 * 0x6e006f);
    *eax154 = reinterpret_cast<signed char>(*eax154 + *reinterpret_cast<signed char*>(&eax154));
    *eax154 = reinterpret_cast<signed char>(*eax154 + *reinterpret_cast<signed char*>(&eax154));
    esp155 = reinterpret_cast<struct s585**>(esp153 - 1);
    *esp155 = ebx138;
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx137) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax154) + reinterpret_cast<int32_t>(eax154) + 0x77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax154) + reinterpret_cast<int32_t>(eax154) + 0x77) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    tmp8_156 = reinterpret_cast<unsigned char>(*ecx137 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax154) + 1));
    cf157 = tmp8_156 < *ecx137;
    *ecx137 = tmp8_156;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax154) + reinterpret_cast<int32_t>(eax154) + 80) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax154) + reinterpret_cast<int32_t>(eax154) + 80) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx137) + 1));
    __asm__("insb ");
    *ecx137 = reinterpret_cast<unsigned char>(*ecx137 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx137) + 1));
    __asm__("arpl [eax], ax");
    eax158 = reinterpret_cast<int32_t*>(*eax154 * 0x730065);
    esp159 = &(*esp155)->f4;
    *ebp160 = reinterpret_cast<signed char>(*ebp161 + *reinterpret_cast<signed char*>(&ecx137));
    eax162 = reinterpret_cast<int32_t*>(*eax158 * 0x720063);
    __asm__("outsd ");
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    __asm__("outsd ");
    esi142->f0 = reinterpret_cast<unsigned char>(esi142->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax162) + 1));
    esp163 = &(*esp159)->f4;
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    eax164 = reinterpret_cast<int32_t*>(*eax162 * 0x64006e);
    __asm__("outsd ");
    tmp8_165 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    cf166 = tmp8_165 < edi143->f0;
    edi143->f0 = tmp8_165;
    esp167 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp163) + 4);
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    eax168 = reinterpret_cast<void**>(*eax164 * 0x64006e);
    __asm__("outsd ");
    tmp8_169 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    cf170 = tmp8_169 < edi143->f0;
    edi143->f0 = tmp8_169;
    esp171 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp167) - 4);
    *esp171 = ebp172;
    *eax168 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax168) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    *ecx137 = reinterpret_cast<unsigned char>(*ecx137 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax168) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 65) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    *ebp173 = reinterpret_cast<signed char>(*ebp174 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    *eax168 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax168) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax168)));
    *eax168 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax168) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax168)));
    esp175 = reinterpret_cast<struct s585**>(esp171 - 1);
    *esp175 = ebx138;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x69) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx137) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x65) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax168) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x6f) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    esp176 = reinterpret_cast<int32_t*>(esp175 - 1);
    *esp176 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x6f) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax168)));
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    __asm__("outsb ");
    *eax168 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax168) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    __asm__("popad ");
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax168) + 1)));
    *eax168 = reinterpret_cast<void*>(reinterpret_cast<signed char>(*eax168) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax168)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax168) + reinterpret_cast<int32_t>(eax168) + 0x6f) + *reinterpret_cast<signed char*>(&ecx137));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax168) + 1)));
    eax177 = reinterpret_cast<struct s590*>(reinterpret_cast<signed char>(*eax168) * 83);
    tmp8_178 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax177) + 1)));
    cf179 = reinterpret_cast<unsigned char>(tmp8_178) < reinterpret_cast<unsigned char>(ebx138->f0);
    ebx138->f0 = tmp8_178;
    *ebp180 = reinterpret_cast<signed char>(*ebp181 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax177) + 1)));
    __asm__("outsb ");
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    esp182 = esp176 - 1;
    *esp182 = 0x74007500;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax177) + reinterpret_cast<int32_t>(eax177) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax177) + reinterpret_cast<int32_t>(eax177) + 0x6f) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax177) + 1)));
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    __asm__("outsb ");
    *ebp183 = reinterpret_cast<signed char>(*ebp184 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    ecx185 = reinterpret_cast<void***>(ecx137 - 1);
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    __asm__("insb ");
    *ecx185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    *ebp186 = reinterpret_cast<signed char>(*ebp187 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax177) + 1)));
    esp188 = reinterpret_cast<void**>(esp182 - 1);
    *reinterpret_cast<void***>(esp188) = esp188;
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    esp189 = reinterpret_cast<struct s585**>(esp188 - 1);
    *esp189 = ebx138;
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    zf190 = eax177->f0 == 0;
    tmp8_191 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    cf192 = reinterpret_cast<uint1_t>(tmp8_191 < edi143->f0);
    edi143->f0 = tmp8_191;
    __asm__("outsb ");
    tmp8_193 = reinterpret_cast<unsigned char>(esi142->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    cf194 = tmp8_193 < esi142->f0;
    esi142->f0 = tmp8_193;
    __asm__("popad ");
    *ebp195 = reinterpret_cast<signed char>(*ebp196 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    esp197 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp189) + 1 - 4);
    *esp197 = 0x69006f00;
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax177) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax177) + reinterpret_cast<int32_t>(eax177) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax177) + reinterpret_cast<int32_t>(eax177) + 0x69) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax177) + reinterpret_cast<int32_t>(eax177) + 0x65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax177) + reinterpret_cast<int32_t>(eax177) + 0x65) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    esp198 = esp197 - 1;
    *esp198 = 0x69006f00;
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax177) + 1)));
    *ebp199 = reinterpret_cast<unsigned char>(*ebp200 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    esi142->f0 = reinterpret_cast<unsigned char>(esi142->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    tmp8_201 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    cf202 = reinterpret_cast<unsigned char>(tmp8_201) < reinterpret_cast<unsigned char>(eax177->f0);
    eax177->f0 = tmp8_201;
    ebp203 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp204) + 1);
    if (cf202) {
        addr_100033b5_41:
        *reinterpret_cast<void**>(&ecx185) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)) + reinterpret_cast<unsigned char>(eax177->f0));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<int32_t>(eax177));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<int32_t>(eax177));
        esi142->f0 = reinterpret_cast<unsigned char>(esi142->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
        *reinterpret_cast<void**>(&eax177) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177))));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        *ecx185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
        eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
        eax205 = reinterpret_cast<struct s591*>(&eax177->f1);
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax205)));
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax205)));
        *reinterpret_cast<void**>(&eax205) = reinterpret_cast<void*>(0);
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        *reinterpret_cast<void**>(&ecx185) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)) + reinterpret_cast<unsigned char>(eax205->f0));
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<int32_t>(eax205));
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        *reinterpret_cast<unsigned char*>(edx133) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx133) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
        *reinterpret_cast<void**>(&eax205) = reinterpret_cast<void*>(0);
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        *reinterpret_cast<unsigned char*>(edx133) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edx133)));
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        eax205->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax205->f0)));
        eax205->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax205->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
        *reinterpret_cast<void**>(&eax205) = reinterpret_cast<void*>(0);
        eax206 = reinterpret_cast<struct s592*>(&eax205->f66312);
        eax206->f0 = reinterpret_cast<unsigned char>(eax206->f0 + *reinterpret_cast<unsigned char*>(&eax206));
        eax206->f0 = reinterpret_cast<unsigned char>(eax206->f0 + *reinterpret_cast<unsigned char*>(&eax206));
        eax206->f0 = reinterpret_cast<unsigned char>(eax206->f0 | *reinterpret_cast<unsigned char*>(&eax206));
        eax206->f0 = reinterpret_cast<unsigned char>(eax206->f0 + *reinterpret_cast<unsigned char*>(&eax206));
        esp207 = reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(esp198) + 1 + 1 - 2);
        *esp207 = cs136;
        eax206->f1 = reinterpret_cast<unsigned char>(eax206->f1 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
        *reinterpret_cast<unsigned char*>(&eax206) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax206)));
        eax206->f0 = reinterpret_cast<unsigned char>(eax206->f0 | *reinterpret_cast<unsigned char*>(&eax206));
        esp208 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp207) + reinterpret_cast<unsigned char>(*ecx185));
        eax206->f0 = reinterpret_cast<unsigned char>(eax206->f0 | *reinterpret_cast<unsigned char*>(&eax206));
    } else {
        __asm__("outsd ");
        tmp8_209 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
        cf210 = reinterpret_cast<unsigned char>(tmp8_209) < reinterpret_cast<unsigned char>(eax177->f0);
        eax177->f0 = tmp8_209;
        esp198 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp198) - 1);
        zf211 = esp198 == 0;
        if (!cf210) {
            addr_100033ac_44:
            --ecx185;
            if (reinterpret_cast<uint1_t>(!!ecx185) & reinterpret_cast<uint1_t>(!zf211)) 
                goto addr_100033af_45; else 
                goto addr_100033af_45;
        } else {
            edi143 = reinterpret_cast<struct s589*>(reinterpret_cast<uint32_t>(edi143) - 1);
            if (__intrinsic()) {
                addr_100033b3_47:
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                goto addr_100033b5_41;
            } else {
                __asm__("outsb ");
                *reinterpret_cast<struct s590**>(esp198 - 1) = eax177;
                __asm__("outsd ");
                __asm__("insb ");
                esp212 = reinterpret_cast<void*>(ebx138->f121 * 0x44000000);
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f87 = reinterpret_cast<unsigned char>(eax177->f87 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
                *reinterpret_cast<void**>(&eax177) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)) ^ 18) ^ 18);
                __asm__("int 0xab");
                __asm__("out dx, eax");
                *ecx185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                ebx138->f0 = ebp203;
                *reinterpret_cast<void**>(reinterpret_cast<int32_t>(edx133) + 0x11c91ceb) = *reinterpret_cast<void**>(&ecx185);
                __asm__("lahf ");
                esp213 = reinterpret_cast<struct s593*>(reinterpret_cast<int32_t>(esp212) - 4);
                esp213->f0 = 0x1000337e;
                eax214 = fun_202b3386();
                esp198 = &esp213->f4;
                eax177 = reinterpret_cast<struct s590*>(reinterpret_cast<int32_t>(eax214) - 1);
                __asm__("pushad ");
                *reinterpret_cast<void**>(&eax177) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)) + reinterpret_cast<unsigned char>(eax177->f0));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
                eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
                zf211 = eax177->f0 == 0;
                goto addr_100033ac_44;
            }
        }
    }
    eax215 = reinterpret_cast<struct s594*>(reinterpret_cast<int32_t>(eax206) - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax215) + reinterpret_cast<int32_t>(eax215)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax215) + reinterpret_cast<int32_t>(eax215)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax215->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax215->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax215)));
    eax215->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax215->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax215)))));
    eax215->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax215->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax215)));
    eax215->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax215->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax215->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax215->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax215)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax215)));
    eax215->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax215->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    eax215->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax215->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax216 = &eax215->f1;
    *eax216 = reinterpret_cast<unsigned char>(*eax216 + *reinterpret_cast<unsigned char*>(&eax216));
    *eax216 = reinterpret_cast<unsigned char>(*eax216 + *reinterpret_cast<unsigned char*>(&eax216));
    *reinterpret_cast<unsigned char*>(&eax216) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax216)));
    *eax216 = reinterpret_cast<unsigned char>(*eax216 | *reinterpret_cast<unsigned char*>(&eax216));
    *reinterpret_cast<unsigned char*>(&eax216) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax216) + 8);
    eax217 = reinterpret_cast<struct s595*>(reinterpret_cast<int32_t>(eax216) + reinterpret_cast<unsigned char>(*ecx185));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217) + 0x40048) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217) + 0x40048) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    esp218 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp208) + reinterpret_cast<unsigned char>(eax217->f0));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    eax217->f0 = *reinterpret_cast<void**>(&eax217);
    *reinterpret_cast<void**>(&eax217) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217))));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    tmp8_219 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    cf220 = reinterpret_cast<uint1_t>(tmp8_219 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)) = tmp8_219;
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217))) + cf220);
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax217->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax217->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    esi221 = reinterpret_cast<struct s596*>(&esi142->f1);
    *reinterpret_cast<void**>(&eax217) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)) + 8);
    eax222 = &eax217->f65536;
    *eax222 = reinterpret_cast<unsigned char>(*eax222 + *reinterpret_cast<unsigned char*>(&eax222));
    *eax222 = reinterpret_cast<unsigned char>(*eax222 | *reinterpret_cast<unsigned char*>(&eax222));
    *eax222 = reinterpret_cast<unsigned char>(*eax222 + *reinterpret_cast<unsigned char*>(&eax222));
    eax223 = reinterpret_cast<unsigned char*>(0x4004800);
    tmp8_224 = reinterpret_cast<unsigned char>(g4004800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    g4004800 = tmp8_224;
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    tmp32_225 = reinterpret_cast<unsigned char>(g4004800 + reinterpret_cast<int32_t>(ecx185));
    g4004800 = tmp32_225;
    esi221->f201355264 = reinterpret_cast<signed char>(esi221->f201355264 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax223) + 1));
    tmp8_226 = reinterpret_cast<unsigned char>(g4004800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    g4004800 = tmp8_226;
    tmp8_227 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(g4004800));
    g4004800 = tmp8_227;
    tmp8_228 = reinterpret_cast<signed char>(g40047ff - 1);
    g40047ff = tmp8_228;
    tmp8_229 = reinterpret_cast<signed char>(g40047ff - 1);
    g40047ff = tmp8_229;
    tmp8_230 = reinterpret_cast<unsigned char>(g360063ff + 0xff);
    g360063ff = tmp8_230;
    tmp8_231 = reinterpret_cast<unsigned char>(g360063ff + 0xff);
    g360063ff = tmp8_231;
    tmp8_232 = reinterpret_cast<unsigned char>(g360063ff + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    g360063ff = tmp8_232;
    esi221->f6 = reinterpret_cast<unsigned char>(esi221->f6 + 0xff);
    g10000 = 0xff;
    tmp8_233 = reinterpret_cast<unsigned char>(g360063ff + 0xff);
    g360063ff = tmp8_233;
    eax234 = reinterpret_cast<struct s597*>(0x360063ff | reinterpret_cast<unsigned char>(*ecx185));
    *reinterpret_cast<void**>(&eax234) = reinterpret_cast<void*>(0xff);
    __asm__("salc ");
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax234->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) + reinterpret_cast<int32_t>(ecx185));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) + reinterpret_cast<int32_t>(ecx185);
    __asm__("salc ");
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax234->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) + reinterpret_cast<int32_t>(edx133));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) + reinterpret_cast<int32_t>(edx133);
    __asm__("salc ");
    tmp8_235 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    cf236 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_235) < reinterpret_cast<unsigned char>(eax234->f0));
    eax234->f0 = tmp8_235;
    eax234->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) - reinterpret_cast<unsigned char>(0xff + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax234->f0) < reinterpret_cast<unsigned char>(0xff + cf236))));
    eax234->f0 = reinterpret_cast<void*>(0xff);
    eax234->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax234->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) + 0xff);
    esi221->f0 = reinterpret_cast<unsigned char>(esi221->f0 + 0xff);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx133)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax234) + reinterpret_cast<uint32_t>(eax234)) ^ reinterpret_cast<uint32_t>(eax234);
    eax234->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax234->f0) + 0xff);
    esp237 = reinterpret_cast<struct s598*>(reinterpret_cast<int32_t>(*esp218) + 4);
    *reinterpret_cast<void**>(&eax234) = reinterpret_cast<void*>(0xff & reinterpret_cast<unsigned char>(eax234->f0));
    eax238 = &eax234->f1;
    esi221->f5 = reinterpret_cast<unsigned char>(esi221->f5 + *reinterpret_cast<unsigned char*>(&eax238));
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax238));
    *eax238 = reinterpret_cast<unsigned char>(*eax238 + *reinterpret_cast<unsigned char*>(&eax238));
    *reinterpret_cast<unsigned char*>(&eax238) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax238) | *eax238);
    *eax238 = reinterpret_cast<unsigned char>(*eax238 + *reinterpret_cast<unsigned char*>(&eax238));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax238) + reinterpret_cast<uint32_t>(eax238)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax238) + reinterpret_cast<uint32_t>(eax238)) + reinterpret_cast<uint32_t>(eax238);
    *reinterpret_cast<void**>(&edx133) = reinterpret_cast<void*>(1);
    eax239 = reinterpret_cast<struct s600*>(eax238 - 1);
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + 1);
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax239) + reinterpret_cast<uint32_t>(eax239)) + reinterpret_cast<int32_t>(ecx185);
    __asm__("in al, dx");
    tmp32_240 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<int32_t>(esi221));
    cf241 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_240) < reinterpret_cast<unsigned char>(eax239->f0));
    eax239->f0 = tmp32_240;
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax239))) + cf241);
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax239)));
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax239)));
    edi143->f0 = reinterpret_cast<unsigned char>(edi143->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax239)));
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + 1);
    eax239->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax239->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax242 = &eax239->f1;
    *eax242 = reinterpret_cast<unsigned char>(*eax242 + *reinterpret_cast<unsigned char*>(&eax242));
    *eax242 = reinterpret_cast<unsigned char>(*eax242 + *reinterpret_cast<unsigned char*>(&eax242));
    *reinterpret_cast<unsigned char*>(&eax242) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax242) - *eax242);
    *eax242 = reinterpret_cast<unsigned char>(*eax242 | *reinterpret_cast<unsigned char*>(&eax242));
    *reinterpret_cast<unsigned char*>(&eax242) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax242) + 8);
    eax243 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax242) + reinterpret_cast<unsigned char>(*ecx185));
    *eax243 = reinterpret_cast<unsigned char>(*eax243 + *reinterpret_cast<signed char*>(&eax243));
    *eax243 = reinterpret_cast<unsigned char>(*eax243 + *reinterpret_cast<signed char*>(&eax243));
    *eax243 = reinterpret_cast<unsigned char>(*eax243 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax243 = reinterpret_cast<unsigned char>(*eax243 + *reinterpret_cast<signed char*>(&eax243));
    *reinterpret_cast<signed char*>(&eax243) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax243) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    *eax243 = reinterpret_cast<unsigned char>(*eax243 + reinterpret_cast<int32_t>(ecx185));
    *reinterpret_cast<signed char*>(&eax243) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax243)));
    eax244 = reinterpret_cast<struct s601*>(reinterpret_cast<uint32_t>(eax243) | 0x8201300);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax244) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax244) + 1) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) + reinterpret_cast<int32_t>(esi221));
    *reinterpret_cast<void**>(&eax244) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax244))));
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax244)));
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax244)));
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) + 1);
    eax244->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax244->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax245 = reinterpret_cast<struct s602*>(&eax244->f1);
    eax245->f0 = reinterpret_cast<unsigned char>(eax245->f0 + *reinterpret_cast<unsigned char*>(&eax245));
    eax245->f0 = reinterpret_cast<unsigned char>(eax245->f0 + *reinterpret_cast<unsigned char*>(&eax245));
    *reinterpret_cast<unsigned char*>(&eax245) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax245) - eax245->f0);
    eax245->f0 = reinterpret_cast<unsigned char>(eax245->f0 | *reinterpret_cast<unsigned char*>(&eax245));
    esi246 = reinterpret_cast<struct s603*>(&esi221->pad5);
    *reinterpret_cast<unsigned char*>(&eax245) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax245) + 8);
    eax247 = &eax245->f65536;
    *eax247 = reinterpret_cast<unsigned char>(*eax247 + *reinterpret_cast<unsigned char*>(&eax247));
    *eax247 = reinterpret_cast<unsigned char>(*eax247 | *reinterpret_cast<unsigned char*>(&eax247));
    *eax247 = reinterpret_cast<unsigned char>(*eax247 + *reinterpret_cast<unsigned char*>(&eax247));
    eax248 = reinterpret_cast<void*>(eax247 - 1);
    *reinterpret_cast<signed char*>(&eax248) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax248) + 72);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax248) + reinterpret_cast<uint32_t>(eax248)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax248) + reinterpret_cast<uint32_t>(eax248)) + *reinterpret_cast<signed char*>(&eax248));
    eax249 = reinterpret_cast<struct s604*>(reinterpret_cast<uint32_t>(eax248) | 0x8000b00);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esp237) + reinterpret_cast<uint32_t>(eax249) + 0x70) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp237) + reinterpret_cast<uint32_t>(eax249) + 0x70) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax249) + reinterpret_cast<uint32_t>(eax249)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax249) + reinterpret_cast<uint32_t>(eax249)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax249->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax249->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax249)));
    eax249->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax249->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax249->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax249->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax249)));
    *ecx185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax249->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax249->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax249->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax249->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax250 = reinterpret_cast<struct s605*>(&eax249->f1);
    eax250->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax250->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax250)));
    eax250->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax250->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax250)));
    *reinterpret_cast<void**>(&eax250) = reinterpret_cast<void*>(0);
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    esp251 = &esp237->f1;
    *reinterpret_cast<void**>(&ecx185) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)) + reinterpret_cast<unsigned char>(eax250->f0));
    eax250->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax250->f0) + reinterpret_cast<uint32_t>(eax250));
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    eax250->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax250->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx133) + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx133) + 4) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    *reinterpret_cast<void**>(&eax250) = reinterpret_cast<void*>(0);
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    eax250->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax250->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    *reinterpret_cast<unsigned char*>(edx133) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx133) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax250) + reinterpret_cast<uint32_t>(eax250)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax250) + reinterpret_cast<uint32_t>(eax250)) + 1);
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    eax250->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax250->f0)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax250) + reinterpret_cast<uint32_t>(eax250)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax250) + reinterpret_cast<uint32_t>(eax250)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax252 = &eax250->f1;
    esi246->f5 = reinterpret_cast<unsigned char>(esi246->f5 + *reinterpret_cast<unsigned char*>(&eax252));
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax252));
    *eax252 = reinterpret_cast<unsigned char>(*eax252 + *reinterpret_cast<unsigned char*>(&eax252));
    *eax252 = reinterpret_cast<unsigned char>(*eax252 | *reinterpret_cast<unsigned char*>(&eax252));
    *eax252 = reinterpret_cast<unsigned char>(*eax252 + *reinterpret_cast<unsigned char*>(&eax252));
    esi253 = *esp251;
    *reinterpret_cast<unsigned char*>(&eax252) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax252) + 11);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax252) + reinterpret_cast<uint32_t>(eax252)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax252) + reinterpret_cast<uint32_t>(eax252)) + reinterpret_cast<uint32_t>(eax252);
    eax254 = reinterpret_cast<struct s606*>(eax252 - 1);
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) + reinterpret_cast<int32_t>(ecx185));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)));
    *ecx185 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)))));
    *reinterpret_cast<void**>(&eax254) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254))));
    esp255 = reinterpret_cast<int32_t*>(esp251 + 1 - 1);
    *esp255 = 4;
    eax254->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax254->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)))));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax254) + reinterpret_cast<uint32_t>(eax254)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax254) + reinterpret_cast<uint32_t>(eax254)) + 1);
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax254)));
    eax254->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax254->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<void**>(&eax254) = reinterpret_cast<void*>(0);
    eax256 = &eax254->f66312;
    *eax256 = reinterpret_cast<unsigned char>(*eax256 + *reinterpret_cast<unsigned char*>(&eax256));
    *eax256 = reinterpret_cast<unsigned char>(*eax256 + *reinterpret_cast<unsigned char*>(&eax256));
    *eax256 = reinterpret_cast<unsigned char>(*eax256 | *reinterpret_cast<unsigned char*>(&eax256));
    *eax256 = reinterpret_cast<unsigned char>(*eax256 + *reinterpret_cast<unsigned char*>(&eax256));
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(&eax256) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax256) + 88);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax256) + reinterpret_cast<uint32_t>(eax256)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax256) + reinterpret_cast<uint32_t>(eax256)) + reinterpret_cast<uint32_t>(eax256);
    *eax256 = reinterpret_cast<unsigned char>(*eax256 | *reinterpret_cast<unsigned char*>(&eax256));
    esp257 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp255) + reinterpret_cast<unsigned char>(*ecx185));
    *eax256 = reinterpret_cast<unsigned char>(*eax256 | *reinterpret_cast<unsigned char*>(&eax256));
    *reinterpret_cast<unsigned char*>(&eax256) = 4;
    eax258 = reinterpret_cast<struct s607*>(eax256 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax258->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)));
    eax258->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax258->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)))));
    eax258->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)));
    eax258->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax258->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)));
    tmp8_259 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    cf260 = reinterpret_cast<uint1_t>(tmp8_259 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)) = tmp8_259;
    *reinterpret_cast<void**>(&eax258) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)))) + cf260);
    eax258->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)));
    eax258->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax258->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax258)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax258) + reinterpret_cast<uint32_t>(eax258)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax261 = reinterpret_cast<struct s608*>(&eax258->f1);
    esi253->f5 = reinterpret_cast<unsigned char>(esi253->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    __asm__("les eax, [ebx+ecx]");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax261) + reinterpret_cast<uint32_t>(eax261)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax261) + reinterpret_cast<uint32_t>(eax261)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    __asm__("enter 0x4804, 0x0");
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    *ecx185 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)))));
    tmp8_262 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)))) + reinterpret_cast<unsigned char>(g100070));
    *reinterpret_cast<void**>(&eax261) = tmp8_262;
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax261->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax261->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax261)));
    tmp8_263 = reinterpret_cast<unsigned char>(g30001400 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    g30001400 = tmp8_263;
    eax264 = &eax261->f1;
    *eax264 = reinterpret_cast<signed char>(*eax264 + *reinterpret_cast<signed char*>(&eax264));
    *eax264 = reinterpret_cast<signed char>(*eax264 + *reinterpret_cast<signed char*>(&eax264));
    eax265 = reinterpret_cast<struct s609*>(eax264 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax265) + reinterpret_cast<uint32_t>(eax265)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax265) + reinterpret_cast<uint32_t>(eax265)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax265) + 1));
    eax266 = reinterpret_cast<struct s610*>(&eax265->f66312);
    eax266->f0 = reinterpret_cast<unsigned char>(eax266->f0 + *reinterpret_cast<unsigned char*>(&eax266));
    eax266->f0 = reinterpret_cast<unsigned char>(eax266->f0 + *reinterpret_cast<unsigned char*>(&eax266));
    eax266->f0 = reinterpret_cast<unsigned char>(eax266->f0 | *reinterpret_cast<unsigned char*>(&eax266));
    eax266->f0 = reinterpret_cast<unsigned char>(eax266->f0 + *reinterpret_cast<unsigned char*>(&eax266));
    esp267 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp257) - 2);
    *esp267 = es122;
    eax268 = &eax266->f262488;
    *eax268 = reinterpret_cast<unsigned char>(*eax268 | *reinterpret_cast<unsigned char*>(&eax268));
    esp269 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp267) + reinterpret_cast<unsigned char>(*ecx185));
    *eax268 = reinterpret_cast<unsigned char>(*eax268 | *reinterpret_cast<unsigned char*>(&eax268));
    eax270 = reinterpret_cast<struct s611*>(eax268 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax270) + reinterpret_cast<uint32_t>(eax270)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax270) + reinterpret_cast<uint32_t>(eax270)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax270->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax270->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax270)));
    eax270->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax270->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax270)))));
    eax270->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax270->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax270)));
    eax270->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax270->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax270->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax270->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax270)));
    esi253->f0 = reinterpret_cast<unsigned char>(esi253->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax270->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax270->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax270) + 1)));
    eax270->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax270->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    eax271 = &eax270->f1;
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax271)));
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax271)));
    esi272 = reinterpret_cast<struct s612*>(reinterpret_cast<int32_t>(esi253) - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax271) + reinterpret_cast<uint32_t>(eax271)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax271) + reinterpret_cast<uint32_t>(eax271)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax271) + 1));
    edi273 = reinterpret_cast<struct s613*>(&edi143->f1);
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) + reinterpret_cast<uint32_t>(eax271));
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) + reinterpret_cast<uint32_t>(eax271));
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax271)));
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax271)));
    *eax271 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax271) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax271)));
    esp274 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp269) + 2 - 4);
    *esp274 = eax271;
    esp275 = reinterpret_cast<struct s614*>(esp274 - 1);
    *reinterpret_cast<struct s614**>(&esp275->f0) = esp275;
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags276) + 1) = 0;
    eax277 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax271 + 0x40088 + 0x8010b + 0x140048) | 0x18015800);
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    tmp8_278 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx133) + 1)));
    cf279 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_278) < reinterpret_cast<unsigned char>(*eax277));
    *eax277 = tmp8_278;
    *reinterpret_cast<void**>(&eax277) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf279))))));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
    edi273->f0 = reinterpret_cast<unsigned char>(edi273->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax277) + reinterpret_cast<uint32_t>(eax277)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax277) + reinterpret_cast<uint32_t>(eax277)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
    esi272->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi272->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
    *reinterpret_cast<void**>(&eax277) = reinterpret_cast<void*>(0);
    edi280 = reinterpret_cast<struct s616*>(&edi273->f1);
    es281 = *reinterpret_cast<struct s614**>(&esp275->f0);
    esp282 = &esp275->f2;
    edi280->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(edi280->f0)));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<uint32_t>(eax277));
    *eax277 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax277) + reinterpret_cast<uint32_t>(eax277));
    *eax277 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax277)));
    *eax277 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax277)));
    tmp8_283 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax277)));
    cf284 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_283) < reinterpret_cast<unsigned char>(*eax277));
    *eax277 = tmp8_283;
    *reinterpret_cast<void**>(&eax277) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(esi272->f0))) + cf284);
    eax285 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax277) | reinterpret_cast<unsigned char>(*ecx185));
    tmp8_286 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax285)));
    cf287 = reinterpret_cast<uint1_t>(tmp8_286 < *reinterpret_cast<unsigned char*>(&eax285));
    *reinterpret_cast<unsigned char*>(&eax285) = tmp8_286;
    edx288 = *esp282;
    esp289 = reinterpret_cast<struct s614**>(reinterpret_cast<uint32_t>(esp282 + 1) - 2);
    *esp289 = es281;
    esp290 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp289) + reinterpret_cast<unsigned char>(*eax285) + cf287);
    *eax285 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax285) | *reinterpret_cast<unsigned char*>(&eax285));
    __asm__("insb ");
    esp291 = reinterpret_cast<struct s614**>(reinterpret_cast<uint32_t>(esp290) - 2);
    *esp291 = es281;
    eax292 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax285) - (reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax285) < reinterpret_cast<unsigned char>(*ecx185))));
    *reinterpret_cast<unsigned char*>(&eax292) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax292)));
    eax293 = reinterpret_cast<struct s617*>(reinterpret_cast<uint32_t>(eax292) - 1);
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    tmp8_294 = reinterpret_cast<unsigned char>(g14015800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    g14015800 = tmp8_294;
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    tmp8_295 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    cf296 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_295) < reinterpret_cast<unsigned char>(eax293->f0));
    eax293->f0 = tmp8_295;
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax293)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax293->f0) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax293)) + cf296))));
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax293)));
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax293)));
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax293) + reinterpret_cast<uint32_t>(eax293)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax293) + reinterpret_cast<uint32_t>(eax293)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax293)));
    eax293->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax293->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax293)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax293) + reinterpret_cast<uint32_t>(eax293)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax293) + reinterpret_cast<uint32_t>(eax293)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax297 = &eax293->f1;
    esi272->f5 = reinterpret_cast<unsigned char>(esi272->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    *ecx185 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)))));
    *reinterpret_cast<void**>(&eax297) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297))));
    __asm__("retf 0x7006");
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax297) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax297)));
    eax298 = reinterpret_cast<struct s618*>(eax297 - 1);
    eax298->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax298->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax298)));
    tmp8_299 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax298->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax298)));
    cf300 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_299) < reinterpret_cast<unsigned char>(eax298->f0));
    eax298->f0 = tmp8_299;
    tmp32_301 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax298->f0) + reinterpret_cast<uint32_t>(eax298) + cf300);
    cf302 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_301) < reinterpret_cast<unsigned char>(eax298->f0));
    eax298->f0 = tmp32_301;
    *reinterpret_cast<void**>(&eax298) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax298)))) + cf302);
    eax298->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax298->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax298)));
    eax298->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax298->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax298)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax298) + reinterpret_cast<uint32_t>(eax298)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax298) + reinterpret_cast<uint32_t>(eax298)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx185) + 1)));
    eax303 = &eax298->f1;
    tmp8_304 = reinterpret_cast<unsigned char>(g4010b0b + *reinterpret_cast<unsigned char*>(&eax303));
    g4010b0b = tmp8_304;
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax303));
    *eax303 = reinterpret_cast<unsigned char>(*eax303 + *reinterpret_cast<unsigned char*>(&eax303));
    *eax303 = reinterpret_cast<unsigned char>(*eax303 | *reinterpret_cast<unsigned char*>(&eax303));
    *eax303 = reinterpret_cast<unsigned char>(*eax303 + *reinterpret_cast<unsigned char*>(&eax303));
    __asm__("into ");
    esp305 = esp291 - 1;
    *esp305 = es281;
    eax306 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax303) | reinterpret_cast<unsigned char>(*ecx185));
    *reinterpret_cast<signed char*>(&eax306) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax306)));
    eax307 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax306) - 1);
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) + reinterpret_cast<int32_t>(ecx185));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    *ecx185 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx185) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)))));
    *reinterpret_cast<void**>(&eax307) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307))));
    __asm__("fiadd dword [esi]");
    *eax307 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax307) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)))));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax307) + reinterpret_cast<uint32_t>(eax307)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax307) + reinterpret_cast<uint32_t>(eax307)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx185)));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax307) + reinterpret_cast<uint32_t>(eax307)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax307) + reinterpret_cast<uint32_t>(eax307)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax307) + 1));
    *eax307 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax307) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax307)));
    ecx308 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx185) + reinterpret_cast<unsigned char>(*eax307));
    eax309 = reinterpret_cast<struct s619*>(reinterpret_cast<uint32_t>(eax307) + reinterpret_cast<int32_t>(*ecx308));
    eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
    eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
    eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx308)));
    eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
    tmp8_310 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    cf311 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_310) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1) = tmp8_310;
    esp312 = esp305 - 1;
    *esp312 = es281;
    esp313 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp312) + reinterpret_cast<unsigned char>(eax309->f0) + cf311);
    *reinterpret_cast<void**>(&eax309) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309))));
    ecx314 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx308) - 1);
    if (ecx314) {
        addr_100037de_57:
        eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx314)));
        eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
        ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax309) + reinterpret_cast<uint32_t>(eax309)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax309) + reinterpret_cast<uint32_t>(eax309)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx314)));
        eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
        eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax309) + reinterpret_cast<uint32_t>(eax309)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax309) + reinterpret_cast<uint32_t>(eax309)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax309) + 1));
        eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
        ecx315 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx314) + reinterpret_cast<unsigned char>(eax309->f0));
        eax316 = &eax309->f65536;
        *eax316 = reinterpret_cast<unsigned char>(*eax316 + *reinterpret_cast<unsigned char*>(&eax316));
        *eax316 = reinterpret_cast<unsigned char>(*eax316 | *reinterpret_cast<unsigned char*>(&eax316));
        *eax316 = reinterpret_cast<unsigned char>(*eax316 + *reinterpret_cast<unsigned char*>(&eax316));
        *reinterpret_cast<unsigned char*>(&eax316) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax316) & 7);
        eax317 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax316) | *ecx315);
        *reinterpret_cast<unsigned char*>(&eax317) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax317)));
        esp318 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp313) - 2);
        *esp318 = ss319;
    } else {
        if (__intrinsic()) 
            goto addr_100037da_59; else 
            goto addr_100037da_59;
    }
    *eax317 = reinterpret_cast<unsigned char>(*eax317 | *reinterpret_cast<unsigned char*>(&eax317));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 | *reinterpret_cast<unsigned char*>(&eax317));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<signed char*>(&ecx315));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<unsigned char*>(&eax317));
    tmp8_320 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax317) + reinterpret_cast<uint32_t>(eax317)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    cf321 = reinterpret_cast<uint1_t>(tmp8_320 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax317) + reinterpret_cast<uint32_t>(eax317)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax317) + reinterpret_cast<uint32_t>(eax317)) = tmp8_320;
    *eax317 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<unsigned char*>(&eax317)) + cf321);
    *eax317 = reinterpret_cast<unsigned char>(*eax317 ^ *reinterpret_cast<unsigned char*>(&eax317));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<unsigned char*>(&eax317));
    *ecx315 = reinterpret_cast<unsigned char>(*ecx315 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx315) + 1));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<signed char*>(&ecx315));
    tmp8_322 = reinterpret_cast<unsigned char>(g4010b0b + *reinterpret_cast<unsigned char*>(&eax317));
    g4010b0b = tmp8_322;
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax317));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<unsigned char*>(&eax317));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 | *reinterpret_cast<unsigned char*>(&eax317));
    *eax317 = reinterpret_cast<unsigned char>(*eax317 + *reinterpret_cast<unsigned char*>(&eax317));
    *reinterpret_cast<unsigned char*>(&eax317) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax317) - 7);
    eax323 = eax317 - 1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax323) + reinterpret_cast<uint32_t>(eax323)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax323) + reinterpret_cast<uint32_t>(eax323)) + *reinterpret_cast<unsigned char*>(&eax323));
    *reinterpret_cast<unsigned char*>(&eax323) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax323) + *eax323);
    eax324 = reinterpret_cast<struct s620*>(reinterpret_cast<uint32_t>(eax323) | *eax323);
    eax324->f0 = reinterpret_cast<unsigned char>(eax324->f0 | *reinterpret_cast<unsigned char*>(&eax324));
    edi280->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi280->f0) ^ *reinterpret_cast<unsigned char*>(&eax324));
    *reinterpret_cast<unsigned char*>(&eax324) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax324)));
    eax324->f0 = reinterpret_cast<unsigned char>(eax324->f0 | *reinterpret_cast<unsigned char*>(&eax324));
    eax324->f0 = reinterpret_cast<unsigned char>(eax324->f0 + *reinterpret_cast<signed char*>(&ecx315));
    eax324->f0 = reinterpret_cast<unsigned char>(eax324->f0 + *reinterpret_cast<unsigned char*>(&eax324));
    tmp8_325 = reinterpret_cast<unsigned char>(g30000c00 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    g30000c00 = tmp8_325;
    eax326 = &eax324->f1;
    *eax326 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax326) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax326)));
    *eax326 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax326) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax326)));
    *reinterpret_cast<void**>(&eax326) = reinterpret_cast<void*>(0);
    *eax326 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax326)));
    ecx327 = reinterpret_cast<struct s621*>(reinterpret_cast<uint32_t>(ecx315) + reinterpret_cast<unsigned char>(*eax326));
    *eax326 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax326) + reinterpret_cast<uint32_t>(eax326));
    *eax326 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax326)));
    *eax326 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax326)));
    *eax326 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax326) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx327)));
    *eax326 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax326)));
    tmp8_328 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax326)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    cf329 = reinterpret_cast<uint1_t>(tmp8_328 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax326)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax326)) = tmp8_328;
    eax330 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax326) + reinterpret_cast<int32_t>(ecx327->f58982404) + cf329);
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx327)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    tmp8_331 = reinterpret_cast<unsigned char>(g4010b07 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    g4010b07 = tmp8_331;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax330) + reinterpret_cast<uint32_t>(eax330)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax330) + reinterpret_cast<uint32_t>(eax330)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx327)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax330) + reinterpret_cast<uint32_t>(eax330)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax330) + reinterpret_cast<uint32_t>(eax330)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax330) + 1));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    ecx332 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(ecx327) + reinterpret_cast<unsigned char>(*eax330));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<uint32_t>(eax330));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx332)));
    *eax330 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax330) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax330)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax330)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax330)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    eax333 = reinterpret_cast<struct s622*>(reinterpret_cast<uint32_t>(eax330) | *ecx332);
    *reinterpret_cast<void**>(&eax333) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax333))));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax333)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax333)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx332)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax333)));
    edi280->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi280->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx332)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax333)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax333)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax333) + 1));
    *reinterpret_cast<void**>(&eax333) = reinterpret_cast<void*>(0);
    ecx334 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx332) + reinterpret_cast<unsigned char>(eax333->f0));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<uint32_t>(eax333));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx334)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax333) + 80) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax333) + 80)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) & reinterpret_cast<uint32_t>(eax333);
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx334)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx334)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx334) + 1));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    ecx335 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx334) + reinterpret_cast<unsigned char>(eax333->f0));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<uint32_t>(eax333));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax333) + 72) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax333) + 72) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333))));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax333->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    *ecx335 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx335) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    eax333->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax333->f0)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax333) + reinterpret_cast<uint32_t>(eax333)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx335) + 1));
    eax336 = &eax333->f1;
    tmp8_337 = reinterpret_cast<unsigned char>(g4010b0d + *reinterpret_cast<unsigned char*>(&eax336));
    g4010b0d = tmp8_337;
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax336));
    *eax336 = reinterpret_cast<unsigned char>(*eax336 + *reinterpret_cast<unsigned char*>(&eax336));
    *eax336 = reinterpret_cast<unsigned char>(*eax336 | *reinterpret_cast<unsigned char*>(&eax336));
    *eax336 = reinterpret_cast<unsigned char>(*eax336 + *reinterpret_cast<unsigned char*>(&eax336));
    esp338 = reinterpret_cast<struct s623*>(reinterpret_cast<uint32_t>(esp318 + 1) + 1 + 1 - 4);
    esp338->f0 = eax336;
    eax339 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax336) | reinterpret_cast<unsigned char>(*ecx335));
    *reinterpret_cast<signed char*>(&eax339) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax339)));
    eax340 = reinterpret_cast<struct s625*>(reinterpret_cast<uint32_t>(eax339) - 1);
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) + reinterpret_cast<uint32_t>(ecx335));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340)));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340)));
    *ecx335 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx335) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340)))));
    *reinterpret_cast<void**>(&eax340) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340))));
    esp341 = &(*reinterpret_cast<struct s624**>(reinterpret_cast<uint32_t>(esp338) + 2))->f4;
    es342 = *esp341;
    eax340->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax340->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340)))));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340)));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax340)));
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax340->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax340->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax343 = &eax340->f1;
    *eax343 = reinterpret_cast<unsigned char>(*eax343 + *reinterpret_cast<unsigned char*>(&eax343));
    *eax343 = reinterpret_cast<unsigned char>(*eax343 + *reinterpret_cast<unsigned char*>(&eax343));
    *reinterpret_cast<unsigned char*>(&eax343) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax343) - *eax343);
    *eax343 = reinterpret_cast<unsigned char>(*eax343 | *reinterpret_cast<unsigned char*>(&eax343));
    ebp344 = reinterpret_cast<struct s626*>(reinterpret_cast<unsigned char>(ebp203) + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
    *reinterpret_cast<unsigned char*>(&eax343) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax343) + 8);
    eax345 = reinterpret_cast<struct s627*>(reinterpret_cast<uint32_t>(eax343) + reinterpret_cast<unsigned char>(*ecx335));
    eax345->f0 = reinterpret_cast<unsigned char>(eax345->f0 + *reinterpret_cast<signed char*>(&eax345));
    eax345->f0 = reinterpret_cast<unsigned char>(eax345->f0 + *reinterpret_cast<signed char*>(&eax345));
    eax345->f0 = reinterpret_cast<unsigned char>(eax345->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax345->f0 = reinterpret_cast<unsigned char>(eax345->f0 + *reinterpret_cast<signed char*>(&eax345));
    eax345->f7 = reinterpret_cast<signed char>(eax345->f7 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax345) + 1));
    eax346 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax345) - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax346) + reinterpret_cast<uint32_t>(eax346)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax346) + reinterpret_cast<uint32_t>(eax346)) + *reinterpret_cast<signed char*>(&eax346));
    eax347 = reinterpret_cast<struct s628*>(reinterpret_cast<uint32_t>(eax346) | 0x8201300);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax347) + 0x70) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edi280) + reinterpret_cast<uint32_t>(eax347) + 0x70) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax347) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax347) + reinterpret_cast<uint32_t>(eax347)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax347) + reinterpret_cast<uint32_t>(eax347)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax347->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax347->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax347)));
    eax347->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax347->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax347->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax347->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax347)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    eax347->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax347->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax347->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax347->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax348 = reinterpret_cast<struct s629*>(&eax347->f1);
    eax348->f0 = reinterpret_cast<unsigned char>(eax348->f0 + *reinterpret_cast<unsigned char*>(&eax348));
    eax348->f0 = reinterpret_cast<unsigned char>(eax348->f0 + *reinterpret_cast<unsigned char*>(&eax348));
    *reinterpret_cast<unsigned char*>(&eax348) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax348) - eax348->f0);
    eax348->f0 = reinterpret_cast<unsigned char>(eax348->f0 | *reinterpret_cast<unsigned char*>(&eax348));
    *reinterpret_cast<unsigned char*>(&eax348) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax348) + 8);
    eax349 = &eax348->f65536;
    *eax349 = reinterpret_cast<unsigned char>(*eax349 + *reinterpret_cast<unsigned char*>(&eax349));
    *eax349 = reinterpret_cast<unsigned char>(*eax349 | *reinterpret_cast<unsigned char*>(&eax349));
    *eax349 = reinterpret_cast<unsigned char>(*eax349 + *reinterpret_cast<unsigned char*>(&eax349));
    cl350 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)) | *eax349);
    *reinterpret_cast<unsigned char*>(&eax349) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax349)));
    eax351 = reinterpret_cast<struct s630*>(reinterpret_cast<uint32_t>(eax349) | 0x8000b00);
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    dh352 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)) | eax351->f0);
    *reinterpret_cast<unsigned char*>(&eax351) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax351)));
    eax351->f0 = reinterpret_cast<unsigned char>(eax351->f0 | *reinterpret_cast<unsigned char*>(&eax351));
    eax351->f0 = reinterpret_cast<unsigned char>(eax351->f0 + cl350);
    eax351->f0 = reinterpret_cast<unsigned char>(eax351->f0 + *reinterpret_cast<unsigned char*>(&eax351));
    tmp8_353 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax351) + reinterpret_cast<uint32_t>(eax351)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    cf354 = reinterpret_cast<uint1_t>(tmp8_353 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax351) + reinterpret_cast<uint32_t>(eax351)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax351) + reinterpret_cast<uint32_t>(eax351)) = tmp8_353;
    *reinterpret_cast<unsigned char*>(&eax351) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax351))) + cf354);
    eax351->f0 = reinterpret_cast<unsigned char>(eax351->f0 ^ *reinterpret_cast<unsigned char*>(&eax351));
    eax351->f0 = reinterpret_cast<unsigned char>(eax351->f0 + *reinterpret_cast<unsigned char*>(&eax351));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax351) + reinterpret_cast<uint32_t>(eax351)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax351) + reinterpret_cast<uint32_t>(eax351)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx335) + 1));
    eax355 = &eax351->f1;
    tmp8_356 = reinterpret_cast<unsigned char>(g4010b0e + *reinterpret_cast<unsigned char*>(&eax355));
    g4010b0e = tmp8_356;
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax355));
    *eax355 = reinterpret_cast<unsigned char>(*eax355 + *reinterpret_cast<unsigned char*>(&eax355));
    *eax355 = reinterpret_cast<unsigned char>(*eax355 | *reinterpret_cast<unsigned char*>(&eax355));
    *eax355 = reinterpret_cast<unsigned char>(*eax355 + *reinterpret_cast<unsigned char*>(&eax355));
    eax357 = reinterpret_cast<struct s631*>(eax355 - 1);
    *reinterpret_cast<void**>(&ecx335) = reinterpret_cast<void*>(cl350 | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax357) + reinterpret_cast<uint32_t>(eax357)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax357) + reinterpret_cast<uint32_t>(eax357)) + reinterpret_cast<uint32_t>(eax357);
    __asm__("salc ");
    eax357->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax357->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax357->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax357->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357)));
    eax357->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax357->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357)));
    *ecx335 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx335) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357)))));
    *reinterpret_cast<void**>(&eax357) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357))));
    esp358 = reinterpret_cast<struct s632*>(esp341 + 1 - 2);
    *reinterpret_cast<struct s632**>(&esp358->f0) = esp358;
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1) = reinterpret_cast<void*>(dh352 | reinterpret_cast<unsigned char>(eax357->f0));
    eax357->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax357->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357)))));
    eax357->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax357->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357)));
    eax357->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax357->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax357->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax357->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax357)));
    tmp8_359 = reinterpret_cast<unsigned char>(g30001000 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    g30001000 = tmp8_359;
    eax360 = reinterpret_cast<struct s633*>(&eax357->f1);
    eax360->f0 = reinterpret_cast<unsigned char>(eax360->f0 + *reinterpret_cast<unsigned char*>(&eax360));
    eax360->f0 = reinterpret_cast<unsigned char>(eax360->f0 + *reinterpret_cast<unsigned char*>(&eax360));
    *reinterpret_cast<unsigned char*>(&eax360) = 0;
    eax360->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax360->f0));
    *reinterpret_cast<unsigned char*>(&eax360) = 8;
    eax361 = &eax360->f65536;
    *eax361 = reinterpret_cast<unsigned char>(*eax361 + *reinterpret_cast<unsigned char*>(&eax361));
    *eax361 = reinterpret_cast<unsigned char>(*eax361 | *reinterpret_cast<unsigned char*>(&eax361));
    *eax361 = reinterpret_cast<unsigned char>(*eax361 + *reinterpret_cast<unsigned char*>(&eax361));
    eax362 = *reinterpret_cast<struct s632**>(&esp358->f0);
    cl363 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)) | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax362) + reinterpret_cast<unsigned char>(eax362)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax362) + reinterpret_cast<unsigned char>(eax362)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax362)));
    esp364 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp358->f4) + 4);
    *reinterpret_cast<void**>(&ecx335) = reinterpret_cast<void*>(cl363 | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<struct s632**>(&eax362->f0) = reinterpret_cast<struct s632*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s632**>(&eax362->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    eax362->f10 = reinterpret_cast<signed char>(eax362->f10 + *reinterpret_cast<signed char*>(&eax362 + 1));
    *reinterpret_cast<void**>(&eax362) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax362))));
    *reinterpret_cast<struct s632**>(&eax362->f0) = reinterpret_cast<struct s632*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s632**>(&eax362->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax362)));
    *reinterpret_cast<struct s632**>(&eax362->f0) = reinterpret_cast<struct s632*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s632**>(&eax362->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
    *reinterpret_cast<struct s632**>(&eax362->f0) = reinterpret_cast<struct s632*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s632**>(&eax362->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax362)));
    tmp8_365 = reinterpret_cast<unsigned char>(g4010b0a + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    g4010b0a = tmp8_365;
    *reinterpret_cast<struct s632**>(&eax362->f0) = reinterpret_cast<struct s632*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s632**>(&eax362->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    *reinterpret_cast<struct s632**>(&eax362->f0) = reinterpret_cast<struct s632*>(reinterpret_cast<unsigned char>(*reinterpret_cast<struct s632**>(&eax362->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax366 = reinterpret_cast<struct s634*>(&eax362->f1);
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    __asm__("pushad ");
    edi280->f6 = reinterpret_cast<unsigned char>(edi280->f6 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    edi280->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi280->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<uint32_t>(eax366));
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<uint32_t>(eax366));
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    *reinterpret_cast<void**>(&ebx138) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)) | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax366) + reinterpret_cast<uint32_t>(eax366)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax366) + reinterpret_cast<uint32_t>(eax366)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
    esp367 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp364) - 4);
    *esp367 = 0x8001a0a;
    tmp8_368 = reinterpret_cast<unsigned char>(eax366->f10 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    cf369 = reinterpret_cast<uint1_t>(tmp8_368 < eax366->f10);
    eax366->f10 = tmp8_368;
    esp370 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp367) - (reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(esp367) < reinterpret_cast<unsigned char>(eax366->f0) + cf369)));
    *reinterpret_cast<void**>(&eax366) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366))));
    if (!*reinterpret_cast<void**>(&eax366)) {
        addr_10003a5e_69:
        eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
        eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
        eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)));
        goto addr_10003a64_70;
    } else {
        cf371 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax366->f0))));
        *reinterpret_cast<void**>(&eax366) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax366->f0) + cf371));
        tmp8_372 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366))) + cf371);
        cf373 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_372) < reinterpret_cast<unsigned char>(eax366->f0));
        eax366->f0 = tmp8_372;
        if (reinterpret_cast<signed char>(eax366->f0) < reinterpret_cast<signed char>(0) != __intrinsic()) {
            addr_10003a64_70:
            edi280->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi280->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
            eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
            eax366->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax366->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
            eax374 = reinterpret_cast<struct s635*>(&eax366->f1);
            eax374->f0 = reinterpret_cast<signed char>(eax374->f0 + *reinterpret_cast<signed char*>(&eax374));
            eax374->f0 = reinterpret_cast<signed char>(eax374->f0 + *reinterpret_cast<signed char*>(&eax374));
            *reinterpret_cast<signed char*>(&eax374) = 8;
            eax375 = reinterpret_cast<struct s636*>(&eax374->f65536);
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax375)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax375)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax375)));
            edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) | 11);
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax375) + reinterpret_cast<uint32_t>(eax375)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax375) + reinterpret_cast<uint32_t>(eax375)) + reinterpret_cast<uint32_t>(eax375);
            __asm__("salc ");
            edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) & reinterpret_cast<uint32_t>(ecx335));
            edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
            *reinterpret_cast<void**>(&eax375) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax375))));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax375)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax375)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax375) + 1)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
            eax375->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax375->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
            eax376 = &eax375->f1;
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            esp377 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp370) - 4);
            *esp377 = eax376;
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            ebp344->f4 = reinterpret_cast<unsigned char>(ebp344->f4 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<uint32_t>(eax376));
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            edx288->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(cs136));
            al378 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)) | reinterpret_cast<unsigned char>(*ecx335));
            tmp8_379 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al378)));
            *reinterpret_cast<void**>(&eax376) = tmp8_379;
            cf380 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax376) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_379) < reinterpret_cast<unsigned char>(al378))));
            *reinterpret_cast<void**>(&eax376) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax376) + cf380));
            esp381 = reinterpret_cast<struct s637*>(reinterpret_cast<uint32_t>(esp377) + reinterpret_cast<unsigned char>(*eax376) + cf380);
            *eax376 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax376) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax376)));
            eax382 = esp381;
            *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)) | reinterpret_cast<unsigned char>(eax382->f0));
            *reinterpret_cast<void**>(&eax382) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382))));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            *ecx335 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx335) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax382) + 1)));
            *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax382) + reinterpret_cast<uint32_t>(eax382)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax382) + reinterpret_cast<uint32_t>(eax382)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
            edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax382) + 1)));
            edi280->f7 = reinterpret_cast<unsigned char>(edi280->f7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            edi280->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi280->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<uint32_t>(eax382));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<uint32_t>(eax382));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            tmp8_383 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            *reinterpret_cast<int1_t*>(&eflags276) = reinterpret_cast<unsigned char>(tmp8_383) < reinterpret_cast<unsigned char>(eax382->f0);
            eax382->f0 = tmp8_383;
            *reinterpret_cast<int1_t*>(&eflags276) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags276) = eax382->f0 == 0;
            *reinterpret_cast<int1_t*>(&eflags276) = reinterpret_cast<signed char>(eax382->f0) < reinterpret_cast<signed char>(0);
            *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags276) + 1) = __intrinsic();
            *reinterpret_cast<int1_t*>(&eflags276) = __intrinsic();
            esp384 = reinterpret_cast<uint32_t*>(eax376 - 4);
            *esp384 = eflags276 & 0xfcffff;
            *reinterpret_cast<void**>(&ecx335) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)) | reinterpret_cast<unsigned char>(ebx138->f0));
            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax382) + reinterpret_cast<uint32_t>(eax382)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax382) + reinterpret_cast<uint32_t>(eax382)) + reinterpret_cast<uint32_t>(eax382);
            __asm__("salc ");
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            esp385 = reinterpret_cast<int16_t*>(reinterpret_cast<uint32_t>(esp384) - 2);
            *esp385 = es342;
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            *reinterpret_cast<void**>(&eax382) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382))));
            esp386 = esp385 - 1;
            *esp386 = es342;
            ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx288) + reinterpret_cast<uint32_t>(ecx335) + 0x142150) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx288) + reinterpret_cast<uint32_t>(ecx335) + 0x142150) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax382) + 1)));
            esp387 = esp386 - 1;
            *esp387 = es342;
            tmp8_388 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
            cf389 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_388) < reinterpret_cast<unsigned char>(eax382->f0));
            eax382->f0 = tmp8_388;
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax382->f0) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)) + cf389))));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
            edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax382) + 1)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx335)));
            eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
            ecx390 = reinterpret_cast<uint32_t*>(ecx335 - 1);
        } else {
            if (__intrinsic()) 
                goto addr_10003a5c_73; else 
                goto addr_10003a5c_73;
        }
    }
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
    *reinterpret_cast<void**>(&ecx390) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx390)) + reinterpret_cast<unsigned char>(eax382->f0));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<uint32_t>(eax382));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<uint32_t>(eax382));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx288) + reinterpret_cast<uint32_t>(ecx390) + 0x40070) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx288) + reinterpret_cast<uint32_t>(ecx390) + 0x40070) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx390)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax382)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax382) + 1)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax382->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax382->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax391 = &eax382->f1;
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax391)));
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax391)));
    *reinterpret_cast<void**>(&eax391) = reinterpret_cast<void*>(0);
    *eax391 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax391)));
    *reinterpret_cast<void**>(&eax391) = reinterpret_cast<void*>(8);
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) + reinterpret_cast<uint32_t>(eax391));
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) + reinterpret_cast<uint32_t>(eax391));
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) + 8);
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) | 8);
    *eax391 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax391) + 8);
    eax392 = reinterpret_cast<void**>(0x4000b0a);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx288) + reinterpret_cast<uint32_t>(ecx390) + 0x82113) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx288) + reinterpret_cast<uint32_t>(ecx390) + 0x82113) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    g4000b04 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b04) | 4);
    tmp8_393 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b04) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx390)));
    g4000b04 = tmp8_393;
    tmp8_394 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b04) + 4);
    g4000b04 = tmp8_394;
    tmp8_395 = reinterpret_cast<unsigned char>(g8001608 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax392) + 1));
    cf396 = reinterpret_cast<uint1_t>(tmp8_395 < g8001608);
    g8001608 = tmp8_395;
    tmp8_397 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g4000b04) + 4) + cf396);
    g4000b04 = tmp8_397;
    g4000b04 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b04) ^ 4);
    tmp8_398 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b04) + 4);
    g4000b04 = tmp8_398;
    tmp8_399 = reinterpret_cast<unsigned char>(g8001608 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax392) + 1));
    g8001608 = tmp8_399;
    g4000b04 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b04) | 4);
    edi400 = reinterpret_cast<struct s638*>(reinterpret_cast<uint32_t>(&edi280->pad6) + 1);
    tmp32_401 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b0c) + 0x4000b0c);
    g4000b0c = tmp32_401;
    tmp32_402 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b0c) + 0x4000b0c);
    g4000b0c = tmp32_402;
    tmp8_403 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b0c) + 12);
    g4000b0c = tmp8_403;
    g4000b0c = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b0c) | 12);
    tmp8_404 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(g4000b0c) + 12);
    g4000b0c = tmp8_404;
    __asm__("les ecx, [edx]");
    eax405 = reinterpret_cast<void*>(0x4000b0c | *ecx390);
    *reinterpret_cast<signed char*>(&eax405) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax405)));
    eax406 = reinterpret_cast<struct s639*>(reinterpret_cast<uint32_t>(eax405) - 1);
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<int32_t>(edx288));
    eax406->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax406->f0) & reinterpret_cast<uint32_t>(ecx390));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax406) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax406) + 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    dh407 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)) | reinterpret_cast<unsigned char>(eax406->f0));
    *reinterpret_cast<void**>(&eax406) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax406))));
    eax406->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax406->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax406)));
    eax406->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax406->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx390)));
    eax406->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax406->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax406)));
    tmp8_408 = reinterpret_cast<unsigned char>(g30001000 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax406) + 1));
    g30001000 = tmp8_408;
    eax409 = reinterpret_cast<struct s640*>(&eax406->f1);
    eax409->f0 = reinterpret_cast<unsigned char>(eax409->f0 + *reinterpret_cast<unsigned char*>(&eax409));
    eax409->f0 = reinterpret_cast<unsigned char>(eax409->f0 + *reinterpret_cast<unsigned char*>(&eax409));
    *reinterpret_cast<unsigned char*>(&eax409) = 0;
    eax409->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax409->f0));
    *reinterpret_cast<unsigned char*>(&eax409) = 8;
    eax410 = &eax409->f65536;
    *eax410 = reinterpret_cast<unsigned char>(*eax410 + *reinterpret_cast<unsigned char*>(&eax410));
    *eax410 = reinterpret_cast<unsigned char>(*eax410 | *reinterpret_cast<unsigned char*>(&eax410));
    *eax410 = reinterpret_cast<unsigned char>(*eax410 + *reinterpret_cast<unsigned char*>(&eax410));
    esp411 = reinterpret_cast<uint16_t*>(reinterpret_cast<uint32_t>(esp387) + 1 + 2 + 2 - 2);
    *esp411 = cs136;
    ecx412 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx390) | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax410) + reinterpret_cast<uint32_t>(eax410)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax410) + reinterpret_cast<uint32_t>(eax410)) + reinterpret_cast<uint32_t>(eax410);
    eax413 = reinterpret_cast<void**>(eax410 - 1);
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<uint32_t>(ecx412));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<uint32_t>(ecx412));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax413) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax413) + 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    dh414 = reinterpret_cast<unsigned char>(dh407 | reinterpret_cast<unsigned char>(*eax413));
    *reinterpret_cast<void**>(&eax413) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413))));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx412)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    tmp8_415 = reinterpret_cast<unsigned char>(g4010b0c + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax413) + 1));
    g4010b0c = tmp8_415;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax413) + reinterpret_cast<uint32_t>(eax413)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax413) + reinterpret_cast<uint32_t>(eax413)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    *ecx412 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx412) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx412) + 1)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx412)));
    tmp8_416 = reinterpret_cast<unsigned char>(g4010b11 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    g4010b11 = tmp8_416;
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    *eax413 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    tmp8_417 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax413) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax413)));
    cf418 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_417) < reinterpret_cast<unsigned char>(*eax413));
    *eax413 = tmp8_417;
    *reinterpret_cast<void**>(&ecx412) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx412)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx412)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx138->f0) + cf418))));
    eax419 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax413) | reinterpret_cast<unsigned char>(*ecx412));
    *reinterpret_cast<signed char*>(&eax419) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax419)));
    eax420 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax419) - 1);
    *eax420 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax420) + reinterpret_cast<uint32_t>(ecx412));
    *eax420 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax420) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax420)));
    *reinterpret_cast<void**>(&eax420) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax420)) + reinterpret_cast<unsigned char>(*eax420));
    eax421 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax420) | reinterpret_cast<unsigned char>(*ecx412));
    *reinterpret_cast<void**>(&eax421) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421))));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1) = reinterpret_cast<void*>(dh414 | reinterpret_cast<unsigned char>(*eax421));
    *eax421 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)))));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx412)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    edi400->f0 = reinterpret_cast<unsigned char>(edi400->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax421) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax421) + reinterpret_cast<uint32_t>(eax421)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax421) + reinterpret_cast<uint32_t>(eax421)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx412) + 1)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx412)));
    edi400->f5 = reinterpret_cast<unsigned char>(edi400->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    edi400->f0 = reinterpret_cast<unsigned char>(edi400->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<uint32_t>(eax421));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<uint32_t>(eax421));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    *eax421 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax421) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax421)));
    ecx422 = reinterpret_cast<uint32_t>(ecx412) | reinterpret_cast<unsigned char>(ebx138->f0);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax421) + reinterpret_cast<uint32_t>(eax421)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax421) + reinterpret_cast<uint32_t>(eax421)) + reinterpret_cast<uint32_t>(eax421);
    eax423 = reinterpret_cast<unsigned char*>(eax421 - 1);
    *eax423 = reinterpret_cast<unsigned char>(*eax423 + ecx422);
    *eax423 = reinterpret_cast<unsigned char>(*eax423 | *reinterpret_cast<unsigned char*>(&eax423));
    eax424 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax423) | 0xc201300);
    tmp8_425 = reinterpret_cast<unsigned char>(g4010b0c + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx422) + 1)));
    g4010b0c = tmp8_425;
    esi426 = reinterpret_cast<struct s641*>(0x4010b0c | reinterpret_cast<unsigned char>(*eax424));
    *eax424 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)))));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx422)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx422) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax424) + reinterpret_cast<uint32_t>(eax424)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax424) + reinterpret_cast<uint32_t>(eax424)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx422) + 1)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx422)));
    esi426->f5 = reinterpret_cast<unsigned char>(esi426->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    *eax424 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax424) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax424)));
    eax427 = reinterpret_cast<void*>(eax424 + 1);
    ecx428 = reinterpret_cast<signed char*>(ecx422 | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax427) + reinterpret_cast<uint32_t>(eax427)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax427) + reinterpret_cast<uint32_t>(eax427)) + reinterpret_cast<uint32_t>(eax427);
    eax429 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax427) - 1);
    *eax429 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax429) + reinterpret_cast<uint32_t>(ecx428));
    *eax429 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax429) | *reinterpret_cast<unsigned char*>(&eax429));
    eax430 = reinterpret_cast<struct s642*>(reinterpret_cast<uint32_t>(eax429) | 0xc000b00);
    tmp8_431 = reinterpret_cast<unsigned char>(eax430->f11 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx428)));
    cf432 = reinterpret_cast<uint1_t>(tmp8_431 < eax430->f11);
    eax430->f11 = tmp8_431;
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax430->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax430))) + cf432);
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax430->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax430)));
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax430->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx428)));
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax430->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax430)));
    *ecx428 = reinterpret_cast<signed char>(*ecx428 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx428) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax430) + reinterpret_cast<uint32_t>(eax430)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax430) + reinterpret_cast<uint32_t>(eax430)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx428)));
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax430->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax430)));
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax430->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax430)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax430) + reinterpret_cast<uint32_t>(eax430)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax430) + reinterpret_cast<uint32_t>(eax430)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax430) + 1));
    eax430->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax430->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax430)));
    esi433 = reinterpret_cast<struct s643*>(&esi426->f1);
    ecx434 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx428) + reinterpret_cast<unsigned char>(eax430->f0));
    eax435 = &eax430->f65536;
    *eax435 = reinterpret_cast<unsigned char>(*eax435 + *reinterpret_cast<unsigned char*>(&eax435));
    *eax435 = reinterpret_cast<unsigned char>(*eax435 | *reinterpret_cast<unsigned char*>(&eax435));
    *eax435 = reinterpret_cast<unsigned char>(*eax435 + *reinterpret_cast<unsigned char*>(&eax435));
    esp436 = reinterpret_cast<struct s643**>(esp411 - 2);
    *esp436 = esi433;
    ecx437 = reinterpret_cast<uint32_t>(ecx434) | reinterpret_cast<unsigned char>(ebx138->f0);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax435) + reinterpret_cast<uint32_t>(eax435)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax435) + reinterpret_cast<uint32_t>(eax435)) + reinterpret_cast<uint32_t>(eax435);
    eax438 = reinterpret_cast<struct s644*>(eax435 - 1);
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) + reinterpret_cast<uint32_t>(esi433));
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax438)));
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax438)));
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx437)));
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax438)));
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx437) + 1)));
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax438->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax438->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax439 = reinterpret_cast<struct s645*>(&eax438->f1);
    eax439->f0 = reinterpret_cast<unsigned char>(eax439->f0 + *reinterpret_cast<unsigned char*>(&eax439));
    eax439->f0 = reinterpret_cast<unsigned char>(eax439->f0 + *reinterpret_cast<unsigned char*>(&eax439));
    *reinterpret_cast<unsigned char*>(&eax439) = 0;
    eax439->f0 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(eax439->f0));
    *reinterpret_cast<unsigned char*>(&eax439) = 8;
    eax440 = reinterpret_cast<struct s646*>(&eax439->f65536);
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax440)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax440)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax440)));
    esi441 = *esp436;
    ecx442 = reinterpret_cast<void**>(ecx437 | reinterpret_cast<unsigned char>(ebx138->f0));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax440) + reinterpret_cast<uint32_t>(eax440)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax440) + reinterpret_cast<uint32_t>(eax440)) + reinterpret_cast<uint32_t>(eax440);
    __asm__("salc ");
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    esi441->f11 = reinterpret_cast<signed char>(esi441->f11 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax440) + 1));
    *reinterpret_cast<void**>(&eax440) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax440))));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax440)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax440)));
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx442) + 1)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax440->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax440->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax443 = &eax440->f1;
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
    *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(0);
    *eax443 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax443)));
    *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(8);
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) + reinterpret_cast<uint32_t>(eax443));
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) + reinterpret_cast<uint32_t>(eax443));
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) + 8);
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) | 8);
    *eax443 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax443) + 8);
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp436 + 1) + 2 - 4) = 11;
    eax444 = reinterpret_cast<struct s647*>(reinterpret_cast<uint32_t>(eax443) | reinterpret_cast<uint32_t>(*ecx442));
    *reinterpret_cast<void**>(&eax444) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444))));
    __asm__("salc ");
    ebx138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebx138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    eax444->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax444->f0) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    edx288->f11 = reinterpret_cast<unsigned char>(edx288->f11 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    *reinterpret_cast<void**>(&eax444) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444))));
    eax444->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax444->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444)));
    eax444->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax444->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    eax444->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax444->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444)));
    tmp8_445 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax444) + reinterpret_cast<uint32_t>(eax444)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx442) + 1)));
    cf446 = reinterpret_cast<uint1_t>(tmp8_445 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax444) + reinterpret_cast<uint32_t>(eax444)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax444) + reinterpret_cast<uint32_t>(eax444)) = tmp8_445;
    *reinterpret_cast<void**>(&eax444) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444)))) + cf446);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax444) + reinterpret_cast<uint32_t>(eax444)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax444) + reinterpret_cast<uint32_t>(eax444)) ^ reinterpret_cast<uint32_t>(eax444);
    eax444->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax444->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444)));
    eax444->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax444->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax444)));
    eax447 = &eax444->f1;
    esi441->f5 = reinterpret_cast<unsigned char>(esi441->f5 + *reinterpret_cast<unsigned char*>(&eax447));
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax447));
    *eax447 = reinterpret_cast<unsigned char>(*eax447 + *reinterpret_cast<unsigned char*>(&eax447));
    eax448 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax447) | *eax447);
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    if (!__intrinsic()) {
        eax449 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax448) | reinterpret_cast<uint32_t>(*ecx442));
        *reinterpret_cast<signed char*>(&eax449) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax449)));
        *reinterpret_cast<void**>(&edx288) = reinterpret_cast<void*>(1);
        eax448 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax449) - 1);
        *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
        *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    }
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    tmp32_450 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax448) + reinterpret_cast<uint32_t>(eax448)) + reinterpret_cast<uint32_t>(ecx442);
    cf451 = reinterpret_cast<uint1_t>(tmp32_450 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax448) + reinterpret_cast<uint32_t>(eax448)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax448) + reinterpret_cast<uint32_t>(eax448)) = tmp32_450;
    tmp8_452 = ebx138->f0;
    ebx138->f0 = *reinterpret_cast<void**>(&ecx442);
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448))) + cf451);
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(tmp8_452));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    tmp8_453 = reinterpret_cast<signed char>(g31001000 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx442) + 1)));
    g31001000 = tmp8_453;
    *reinterpret_cast<void**>(&eax448) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448))));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    edi454 = reinterpret_cast<struct s648*>(reinterpret_cast<uint32_t>(&edi400->pad5) + 1);
    *reinterpret_cast<void**>(&eax448) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)) + 8);
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<uint32_t>(eax448));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<uint32_t>(eax448));
    *eax448 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax448) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax448)));
    eax455 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax448) | reinterpret_cast<unsigned char>(*eax448));
    *eax455 = reinterpret_cast<unsigned char>(*eax455 + *reinterpret_cast<unsigned char*>(&eax455));
    *reinterpret_cast<void**>(&ecx442) = ebx138->f0;
    *reinterpret_cast<unsigned char*>(&eax455) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax455)));
    *eax455 = reinterpret_cast<unsigned char>(*eax455 | *reinterpret_cast<unsigned char*>(&eax455));
    eax456 = esi441;
    esi457 = reinterpret_cast<struct s649*>(reinterpret_cast<uint32_t>(eax455) | reinterpret_cast<unsigned char>(eax456->f0));
    *reinterpret_cast<void**>(&eax456) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax456))));
    eax456->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax456->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax456)));
    eax456->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax456->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    eax456->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax456->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax456)));
    esi457->f0 = reinterpret_cast<signed char>(esi457->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx442) + 1)));
    eax456->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax456->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax456->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax456->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax458 = &eax456->f1;
    *eax458 = reinterpret_cast<unsigned char>(*eax458 + *reinterpret_cast<unsigned char*>(&eax458));
    *eax458 = reinterpret_cast<unsigned char>(*eax458 + *reinterpret_cast<unsigned char*>(&eax458));
    *reinterpret_cast<unsigned char*>(&eax458) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax458) - *eax458);
    *eax458 = reinterpret_cast<unsigned char>(*eax458 | *reinterpret_cast<unsigned char*>(&eax458));
    *reinterpret_cast<unsigned char*>(&eax458) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax458) + 8);
    eax459 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax458) + reinterpret_cast<uint32_t>(*ecx442));
    *eax459 = reinterpret_cast<unsigned char>(*eax459 + *reinterpret_cast<signed char*>(&eax459));
    *eax459 = reinterpret_cast<unsigned char>(*eax459 + *reinterpret_cast<signed char*>(&eax459));
    *eax459 = reinterpret_cast<unsigned char>(*eax459 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    *eax459 = reinterpret_cast<unsigned char>(*eax459 + *reinterpret_cast<signed char*>(&eax459));
    esi457->f67127307 = reinterpret_cast<unsigned char>(esi457->f67127307 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx138)));
    tmp8_460 = reinterpret_cast<unsigned char>(g8201300 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    g8201300 = tmp8_460;
    edx288->f201355275 = reinterpret_cast<signed char>(edx288->f201355275 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax459) + 1));
    *eax459 = reinterpret_cast<unsigned char>(*eax459 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    *eax459 = reinterpret_cast<unsigned char>(*eax459 + *reinterpret_cast<signed char*>(&eax459));
    eax461 = reinterpret_cast<struct s650*>(eax459 - 1);
    eax461->f0 = reinterpret_cast<unsigned char>(eax461->f0 + *reinterpret_cast<signed char*>(&eax461));
    eax461->f0 = reinterpret_cast<unsigned char>(eax461->f0 + *reinterpret_cast<signed char*>(&eax461));
    __asm__("das ");
    eax461->f0 = reinterpret_cast<unsigned char>(eax461->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx288)));
    eax461->f0 = reinterpret_cast<unsigned char>(eax461->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx288) + 1)));
    eax462 = reinterpret_cast<struct s651*>(&eax461->f1);
    eax462->f0 = reinterpret_cast<unsigned char>(eax462->f0 + *reinterpret_cast<unsigned char*>(&eax462));
    eax462->f0 = reinterpret_cast<unsigned char>(eax462->f0 + *reinterpret_cast<unsigned char*>(&eax462));
    *reinterpret_cast<unsigned char*>(&eax462) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax462) - eax462->f0);
    eax462->f0 = reinterpret_cast<unsigned char>(eax462->f0 | *reinterpret_cast<unsigned char*>(&eax462));
    *reinterpret_cast<unsigned char*>(&eax462) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax462) + 8);
    eax463 = &eax462->f65536;
    *eax463 = reinterpret_cast<unsigned char>(*eax463 + *reinterpret_cast<unsigned char*>(&eax463));
    *eax463 = reinterpret_cast<unsigned char>(*eax463 | *reinterpret_cast<unsigned char*>(&eax463));
    *eax463 = reinterpret_cast<unsigned char>(*eax463 + *reinterpret_cast<unsigned char*>(&eax463));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax463) + 1) = 11;
    eax464 = reinterpret_cast<void*>(eax463 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax464) + reinterpret_cast<uint32_t>(eax464)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax464) + reinterpret_cast<uint32_t>(eax464)) + *reinterpret_cast<signed char*>(&eax464));
    eax465 = reinterpret_cast<struct s652*>(reinterpret_cast<uint32_t>(eax464) | 0x8000b00);
    eax465->f201355275 = reinterpret_cast<unsigned char>(eax465->f201355275 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    eax465->f0 = reinterpret_cast<unsigned char>(eax465->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    eax465->f0 = reinterpret_cast<unsigned char>(eax465->f0 + *reinterpret_cast<signed char*>(&eax465));
    eax466 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax465) - 1);
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *reinterpret_cast<void**>(&eax466) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466))))));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    edx288->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx288->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx442) + 1)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx442)));
    edi454->f5 = reinterpret_cast<unsigned char>(edi454->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    edi454->f0 = reinterpret_cast<unsigned char>(edi454->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<uint32_t>(eax466));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<uint32_t>(eax466));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    *eax466 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax466) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax466)));
    addr_10003a5c_73:
    *reinterpret_cast<void**>(&eax366) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax366)))) + cf373);
    goto addr_10003a5e_69;
    addr_100037da_59:
    eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
    eax309->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax309->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax309)));
    goto addr_100037de_57;
    addr_100033af_45:
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax177)));
    eax177->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax177->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx138) + 1)));
    goto addr_100033b3_47;
}

void fun_100030a0(int32_t ecx) {
    uint64_t v2;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 1) = reinterpret_cast<int32_t>(__return_address());
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 4);
}

struct s654 {
    void* f0;
    signed char[1308623871] pad1308623872;
    unsigned char f1308623872;
};

struct s653 {
    unsigned char* f0;
    struct s654* f1;
};

struct s655 {
    signed char[5] pad5;
    unsigned char f5;
};

struct s656 {
    signed char[5] pad5;
    signed char f5;
};

struct s658 {
    unsigned char f0;
    signed char[5] pad6;
    unsigned char f6;
};

struct s657 {
    struct s658* f0;
    void* f4;
};

struct s659 {
    void* f0;
    void* f1;
};

struct s660 {
    void* f0;
    signed char f1;
};

struct s661 {
    signed char f0;
    unsigned char f1;
};

struct s662 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

signed char g31001800;

struct s663 {
    unsigned char f0;
    unsigned char* f1;
};

struct s664 {
    void* f0;
    signed char[67335] pad67336;
    void* f67336;
};

struct s665 {
    unsigned char f0;
    signed char[1287] pad1288;
    void* f1288;
};

struct s666 {
    void* f0;
    signed char[67335] pad67336;
    void* f67336;
};

struct s667 {
    unsigned char f0;
    signed char[1287] pad1288;
    void* f1288;
};

struct s668 {
    void* f0;
    signed char[67335] pad67336;
    void* f67336;
};

struct s669 {
    void* f0;
    void* f1;
};

struct s671 {
    unsigned char f0;
    unsigned char f1;
    signed char[1] pad3;
    unsigned char f3;
};

struct s670 {
    signed char[4] pad4;
    struct s671* f4;
};

struct s672 {
    struct s671* f0;
    int16_t f4;
};

struct s673 {
    signed char[16] pad16;
    unsigned char f16;
};

struct s678 {
    signed char[4] pad4;
    void* f4;
};

struct s677 {
    signed char[4] pad4;
    struct s678* f4;
};

struct s676 {
    signed char[4] pad4;
    struct s677* f4;
};

struct s675 {
    signed char[4] pad4;
    struct s676* f4;
};

struct s674 {
    int16_t f0;
    struct s675* f2;
};

struct s679 {
    unsigned char f0;
    unsigned char f1;
};

unsigned char g18015800;

struct s680 {
    void* f0;
    signed char[4] pad5;
    unsigned char f5;
    signed char[1] pad7;
    unsigned char f7;
};

struct s681 {
    void* f0;
    unsigned char f1;
};

struct s682 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s683 {
    unsigned char f0;
    signed char[18] pad19;
    signed char f19;
};

struct s684 {
    void* f0;
    void* f1;
};

struct s685 {
    unsigned char f0;
    signed char[17] pad18;
    unsigned char f18;
};

struct s686 {
    int16_t f0;
    void* f2;
};

struct s687 {
    signed char[6] pad6;
    unsigned char f6;
};

struct s688 {
    signed char[4] pad4;
    void* f4;
};

struct s689 {
    void* f0;
    unsigned char f1;
};

unsigned char g4010b13;

unsigned char g4010b18;

struct s690 {
    void* f0;
    unsigned char f1;
};

unsigned char g4010b17;

struct s691 {
    void* f0;
    void* f1;
};

unsigned char g4010b27;

struct s692 {
    signed char f0;
    unsigned char f1;
};

struct s693 {
    void* f0;
    signed char[6] pad7;
    unsigned char f7;
};

struct s694 {
    struct s687* f0;
    signed char[2] pad4;
    void* f4;
};

void fun_10003fd5(struct s653* ecx) {
    uint80_t v2;
    uint32_t eflags3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    void** eax7;
    void* eax8;
    signed char* edx9;
    signed char* edx10;
    struct s655* edi11;
    struct s656* edi12;
    unsigned char* edi13;
    unsigned char* edi14;
    signed char* esi15;
    signed char* esi16;
    signed char bh17;
    uint32_t eax18;
    void** eax19;
    void* bh20;
    signed char* esi21;
    signed char* esi22;
    signed char dl23;
    unsigned char* eax24;
    signed char* edx25;
    void* esp26;
    struct s657* esp27;
    void** eax28;
    void* tmp8_29;
    uint1_t cf30;
    struct s659* eax31;
    signed char bl32;
    signed char bh33;
    void** eax34;
    struct s658* esi35;
    void** esp36;
    void* es37;
    unsigned char* eax38;
    uint1_t cf39;
    unsigned char* eax40;
    void* eax41;
    void** eax42;
    void* tmp8_43;
    uint1_t cf44;
    struct s660* eax45;
    signed char* ebx46;
    signed char* ebx47;
    signed char bh48;
    void* bl49;
    struct s661* eax50;
    unsigned char* eax51;
    int16_t* esp52;
    int16_t cs53;
    uint32_t eax54;
    unsigned char* eax55;
    struct s662* eax56;
    unsigned char* tmp8_57;
    uint1_t cf58;
    void* tmp8_59;
    uint1_t cf60;
    void** esp61;
    void* cs62;
    unsigned char tmp8_63;
    signed char bh64;
    uint1_t cf65;
    void* esp66;
    unsigned char* eax67;
    unsigned char* eax68;
    unsigned char* edx69;
    int16_t* esp70;
    int16_t cs71;
    void* eax72;
    signed char* esi73;
    void** esp74;
    void* cs75;
    void** eax76;
    signed char tmp8_77;
    signed char bh78;
    void* tmp8_79;
    uint1_t cf80;
    void* esp81;
    struct s663* edi82;
    void* edi83;
    void** esp84;
    signed char* eax85;
    void* eax86;
    void* cl87;
    struct s664* eax88;
    void** tmp32_89;
    signed char bh90;
    void* esp91;
    unsigned char** edi92;
    void** eax93;
    unsigned char* eax94;
    void** eax95;
    void** esp96;
    struct s665* eax97;
    void* esp98;
    void** eax99;
    unsigned char* eax100;
    unsigned char* tmp8_101;
    struct s666* eax102;
    void** esp103;
    void* cs104;
    void* tmp8_105;
    uint1_t cf106;
    void* esp107;
    void** eax108;
    unsigned char* eax109;
    unsigned char tmp8_110;
    uint1_t cf111;
    void** eax112;
    void* tmp8_113;
    uint1_t cf114;
    int16_t* esp115;
    int16_t ss116;
    void** esp117;
    struct s667* eax118;
    struct s654** ecx119;
    unsigned char tmp8_120;
    uint1_t cf121;
    void* esp122;
    void** eax123;
    void** eax124;
    void* tmp8_125;
    uint1_t cf126;
    void** esp127;
    void* ds128;
    unsigned char* ebx129;
    signed char* ebx130;
    uint32_t tmp32_131;
    uint1_t cf132;
    struct s668* eax133;
    unsigned char tmp8_134;
    uint1_t cf135;
    void* esp136;
    void** eax137;
    struct s669* eax138;
    void* tmp8_139;
    uint1_t cf140;
    unsigned char* ebx141;
    signed char* ebx142;
    uint32_t tmp32_143;
    uint1_t cf144;
    struct s670** esp145;
    void* tmp8_146;
    uint1_t cf147;
    unsigned char* ebx148;
    signed char* ebx149;
    struct s672* esp150;
    struct s673* esi151;
    void* cl152;
    unsigned char* ebx153;
    signed char* ebx154;
    struct s654* eax155;
    struct s671* esi156;
    struct s674* esp157;
    int16_t es158;
    struct s675** esp159;
    void* tmp8_160;
    uint1_t cf161;
    struct s679* edx162;
    unsigned char tmp8_163;
    uint1_t cf164;
    unsigned char* ebx165;
    signed char* ebx166;
    signed char bl167;
    uint1_t cf168;
    unsigned char tmp8_169;
    void* tmp8_170;
    uint1_t cf171;
    void** eax172;
    unsigned char tmp8_173;
    unsigned char* ebp174;
    uint1_t cf175;
    unsigned char* ebp176;
    unsigned char* ebp177;
    struct s676** esp178;
    struct s680* edi179;
    struct s681* eax180;
    unsigned char* ebx181;
    signed char* ebx182;
    void* tmp8_183;
    unsigned char tmp8_184;
    uint1_t cf185;
    unsigned char* ebx186;
    signed char* ebx187;
    unsigned char tmp8_188;
    uint1_t cf189;
    struct s677** esp190;
    unsigned char* eax191;
    struct s682* eax192;
    void* tmp8_193;
    uint1_t cf194;
    void* tmp8_195;
    void* tmp8_196;
    uint1_t cf197;
    struct s683* esi198;
    unsigned char* eax199;
    unsigned char* eax200;
    struct s684* eax201;
    void** eax202;
    void* bl203;
    unsigned char tmp8_204;
    signed char bh205;
    uint1_t cf206;
    struct s654* tmp8_207;
    uint1_t cf208;
    void* tmp8_209;
    uint1_t cf210;
    struct s685* edx211;
    void* cl212;
    void** ebx213;
    uint32_t tmp32_214;
    uint1_t cf215;
    struct s678** esp216;
    void** eax217;
    unsigned char tmp8_218;
    uint1_t cf219;
    unsigned char tmp8_220;
    uint1_t cf221;
    void* tmp8_222;
    uint1_t cf223;
    int16_t* ebx224;
    uint32_t tmp32_225;
    uint1_t cf226;
    void** esp227;
    void** eax228;
    unsigned char* ebx229;
    signed char* ebx230;
    void* tmp8_231;
    uint1_t cf232;
    void* esp233;
    struct s686* esp234;
    void** eax235;
    void* tmp8_236;
    uint1_t cf237;
    void* ecx238;
    void** ebx239;
    void* tmp8_240;
    uint1_t cf241;
    unsigned char** ecx242;
    void** eax243;
    void* tmp8_244;
    uint1_t cf245;
    int16_t es246;
    void** esp247;
    unsigned char* eax248;
    unsigned char tmp8_249;
    uint1_t cf250;
    void* edx251;
    int16_t* esp252;
    void* esp253;
    uint32_t eax254;
    struct s687** esp255;
    void** eax256;
    void* tmp8_257;
    uint1_t cf258;
    void** eax259;
    signed char bl260;
    unsigned char* ebp261;
    signed char* ebp262;
    struct s687* es263;
    void** ecx264;
    void** ebx265;
    unsigned char tmp8_266;
    signed char bh267;
    uint1_t cf268;
    void** edx269;
    void** ebx270;
    struct s688** esp271;
    struct s688* ds272;
    signed char bh273;
    void** eax274;
    void* tmp8_275;
    uint1_t cf276;
    struct s689* eax277;
    unsigned char tmp8_278;
    uint1_t cf279;
    void** esp280;
    unsigned char* eax281;
    unsigned char tmp8_282;
    unsigned char tmp8_283;
    uint1_t cf284;
    unsigned char* eax285;
    struct s690* eax286;
    void* esp287;
    unsigned char* eax288;
    unsigned char tmp8_289;
    struct s691* eax290;
    unsigned char* ebx291;
    signed char* ebx292;
    unsigned char tmp8_293;
    uint1_t cf294;
    unsigned char tmp8_295;
    void** eax296;
    void** ecx297;
    void* tmp8_298;
    struct s692* eax299;
    void*** esp300;
    signed char bl301;
    unsigned char* eax302;
    struct s687** esp303;
    unsigned char* eax304;
    unsigned char tmp8_305;
    uint1_t cf306;
    void*** esp307;
    signed char* ebx308;
    signed char* ebx309;
    uint16_t ss310;
    void** eax311;
    uint1_t cf312;
    void* tmp8_313;
    uint1_t cf314;
    void* tmp8_315;
    uint1_t cf316;
    void* esp317;
    struct s693* edi318;
    struct s694* esp319;
    void** eax320;
    void* tmp8_321;
    uint1_t cf322;
    struct s687* esi323;
    void** esp324;
    uint32_t tmp32_325;
    uint1_t cf326;
    void** tmp32_327;
    void* tmp8_328;
    uint1_t cf329;
    unsigned char tmp8_330;
    signed char* ebx331;
    uint1_t cf332;
    unsigned char* ebx333;
    unsigned char* ebx334;
    void** esp335;
    void** eax336;
    void* tmp8_337;
    uint1_t cf338;
    uint16_t ss339;
    void* esp340;
    void** eax341;
    unsigned char tmp8_342;
    void* ebx343;
    void* ebx344;
    void* ebx345;
    void* al346;
    int32_t edx347;
    void* tmp8_348;
    void* bl349;
    void** eax350;
    int32_t ebp351;
    void** ecx352;
    unsigned char* eax353;
    signed char* ebx354;
    signed char* ebx355;
    unsigned char tmp8_356;
    unsigned char tmp8_357;
    signed char* ebx358;
    uint1_t cf359;
    unsigned char* ebx360;
    unsigned char* ebx361;

    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v2) + 4) = reinterpret_cast<int32_t>(__return_address());
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    eax7 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax8) - 1);
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *reinterpret_cast<void**>(&eax7) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax7) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7))));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *edx9 = reinterpret_cast<signed char>(*edx10 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    edi11->f5 = reinterpret_cast<unsigned char>(edi12->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *edi13 = reinterpret_cast<unsigned char>(*edi14 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<uint32_t>(eax7));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<uint32_t>(eax7));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *eax7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    __asm__("out dx, al");
    *reinterpret_cast<void**>(&eax7) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)) | 72);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax7) + reinterpret_cast<uint32_t>(eax7)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax7) + reinterpret_cast<uint32_t>(eax7)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax7)));
    *esi15 = reinterpret_cast<signed char>(*esi16 + bh17);
    eax18 = reinterpret_cast<uint32_t>(eax7) | 0x8010b00 | 0xc2013;
    *reinterpret_cast<uint32_t*>(&v2) = eax18;
    eax19 = reinterpret_cast<void**>(eax18 | 0x100070);
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    ecx->f0 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ecx->f0) + reinterpret_cast<signed char>(bh20));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax19) + reinterpret_cast<uint32_t>(eax19)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax19) + reinterpret_cast<uint32_t>(eax19)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax19) + 1));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *esi21 = reinterpret_cast<signed char>(*esi22 + dl23);
    *reinterpret_cast<void**>(&eax19) = reinterpret_cast<void*>(0);
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<uint32_t>(ecx));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<uint32_t>(eax19));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<uint32_t>(eax19));
    *eax19 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax19)));
    *eax19 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax19)));
    *eax19 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax19)));
    eax24 = reinterpret_cast<unsigned char*>(*reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&v2) + 2) | 0x4010b);
    edx25 = *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(&v2) + 6);
    esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 2 + 4 + 4 - 2 + *eax24);
    *eax24 = 0xff;
    __asm__("pushad ");
    *reinterpret_cast<int1_t*>(&eflags3) = 0;
    *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags3) = 0;
    *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
    *reinterpret_cast<int1_t*>(&eflags3) = __undefined();
    esp27 = reinterpret_cast<struct s657*>(reinterpret_cast<uint32_t>(esp26) - 4);
    esp27->f0 = reinterpret_cast<struct s658*>(eflags3 & 0xfcffff);
    eax28 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax24) | 0xc011b | 0x100048 | 0x14015800);
    *eax28 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax28) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    tmp8_29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax28) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    cf30 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_29) < reinterpret_cast<unsigned char>(*eax28));
    *eax28 = tmp8_29;
    *eax28 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax28) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax28) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax28)) + cf30))));
    *eax28 = reinterpret_cast<void*>(0xff);
    eax31 = reinterpret_cast<struct s659*>(eax28 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<uint32_t>(eax31)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax31) + reinterpret_cast<uint32_t>(eax31)) + bl32);
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax31)));
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax31)));
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax31)));
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax31)));
    *edx25 = reinterpret_cast<signed char>(*edx25 + bh33);
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    eax31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax31->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx25) + 1)));
    eax34 = &eax31->f1;
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax34)));
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax34)));
    esi35 = esp27->f0;
    esp36 = &esp27->f4;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax34) + reinterpret_cast<uint32_t>(eax34)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax34) + reinterpret_cast<uint32_t>(eax34)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax34) + 1));
    *reinterpret_cast<unsigned char**>(&ecx) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)) | reinterpret_cast<unsigned char>(*eax34));
    es37 = *esp36;
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) + reinterpret_cast<uint32_t>(eax34));
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) + reinterpret_cast<uint32_t>(eax34));
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax34)));
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax34)));
    *eax34 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax34)));
    *reinterpret_cast<signed char*>(&edx25) = 13;
    *eax34 = *reinterpret_cast<void**>(&eax34);
    *reinterpret_cast<void**>(&eax34) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax34))));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx25) + 1) = reinterpret_cast<void*>(13);
    eax38 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax34) | reinterpret_cast<unsigned char>(ecx->f0));
    *eax38 = reinterpret_cast<unsigned char>(*eax38 | *reinterpret_cast<unsigned char*>(&eax38));
    __asm__("les ecx, [0xc2013]");
    __asm__("out 0xd, al");
    cf39 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax38) < reinterpret_cast<unsigned char>(ecx->f0));
    eax40 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax38) - (reinterpret_cast<unsigned char>(ecx->f0) + cf39));
    *eax40 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax40 + *reinterpret_cast<signed char*>(&eax40)) + cf39);
    esi35->f0 = reinterpret_cast<unsigned char>(esi35->f0 & reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax41 = reinterpret_cast<void*>(eax40 - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax41) + reinterpret_cast<uint32_t>(eax41)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax41) + reinterpret_cast<uint32_t>(eax41)) + 13);
    eax42 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax41) | 0x18015800);
    *eax42 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax42) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    tmp8_43 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax42) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    cf44 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_43) < reinterpret_cast<unsigned char>(*eax42));
    *eax42 = tmp8_43;
    *reinterpret_cast<unsigned char*>(&eax42) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax42) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf44))))));
    *eax42 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax42) | *reinterpret_cast<unsigned char*>(&eax42));
    eax45 = reinterpret_cast<struct s660*>(eax42 - 1);
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax45) + 1)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + 13);
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(0);
    eax45->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax45->f0)));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax45->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax45->f0)));
    *ebx46 = reinterpret_cast<signed char>(*ebx47 + bh48);
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + reinterpret_cast<signed char>(bl49));
    eax45->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax45->f0) + 13);
    eax50 = reinterpret_cast<struct s661*>(&eax45->f1);
    eax50->f0 = reinterpret_cast<signed char>(eax50->f0 + *reinterpret_cast<signed char*>(&eax50));
    eax50->f0 = reinterpret_cast<signed char>(eax50->f0 + *reinterpret_cast<signed char*>(&eax50));
    *reinterpret_cast<signed char*>(&eax50) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax50)));
    eax51 = &eax50->f1;
    esi35->f6 = reinterpret_cast<unsigned char>(esi35->f6 + *reinterpret_cast<unsigned char*>(&eax51));
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax51));
    *eax51 = reinterpret_cast<unsigned char>(*eax51 + *reinterpret_cast<unsigned char*>(&eax51));
    *eax51 = reinterpret_cast<unsigned char>(*eax51 | *reinterpret_cast<unsigned char*>(&eax51));
    *eax51 = reinterpret_cast<unsigned char>(*eax51 + *reinterpret_cast<unsigned char*>(&eax51));
    esp52 = reinterpret_cast<int16_t*>(esp36 + 1 - 1);
    *esp52 = cs53;
    eax54 = reinterpret_cast<uint32_t>(eax51) | *eax51;
    *reinterpret_cast<signed char*>(&eax54) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax54)));
    eax55 = reinterpret_cast<unsigned char*>(eax54 | reinterpret_cast<unsigned char>(ecx->f0));
    *eax55 = reinterpret_cast<unsigned char>(*eax55 | *reinterpret_cast<unsigned char*>(&eax55));
    *reinterpret_cast<unsigned char**>(&ecx) = ecx->f0;
    eax56 = reinterpret_cast<struct s662*>(eax55 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)));
    tmp8_57 = reinterpret_cast<unsigned char*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)))));
    cf58 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_57) < reinterpret_cast<unsigned char>(ecx->f0));
    ecx->f0 = tmp8_57;
    tmp8_59 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax56->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56))) + cf58);
    cf60 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_59) < reinterpret_cast<unsigned char>(eax56->f0));
    eax56->f0 = tmp8_59;
    esp61 = reinterpret_cast<void**>(esp52 - 1);
    *esp61 = cs62;
    *reinterpret_cast<void**>(&eax56) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)))) + cf60);
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)));
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)));
    tmp8_63 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) + bh64);
    cf65 = reinterpret_cast<uint1_t>(tmp8_63 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) = tmp8_63;
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax56->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56))) + cf65);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) ^ reinterpret_cast<uint32_t>(eax56);
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)));
    esp66 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp61) + 4);
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)));
    eax56->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax56->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)));
    *reinterpret_cast<void**>(&eax56) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax56)) + 8);
    eax67 = &eax56->f65536;
    *eax67 = reinterpret_cast<unsigned char>(*eax67 + *reinterpret_cast<signed char*>(&eax67));
    eax68 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax67) | *eax67);
    *eax68 = reinterpret_cast<unsigned char>(*eax68 + *reinterpret_cast<signed char*>(&eax68));
    edx69 = reinterpret_cast<unsigned char*>(edx25 - 1);
    esp70 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp66) - 2);
    *esp70 = cs71;
    eax72 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax68) | *eax68);
    *reinterpret_cast<signed char*>(&eax72) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax72)));
    esi73 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(&esi35->pad6) + 1 - 1);
    esp74 = reinterpret_cast<void**>(esp70 - 1);
    *esp74 = cs75;
    eax76 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax72) - 1);
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx69) + 1)));
    *reinterpret_cast<void**>(&eax76) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76))));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76)));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76)));
    tmp8_77 = reinterpret_cast<signed char>(g31001800 + bh78);
    g31001800 = tmp8_77;
    *reinterpret_cast<void**>(&eax76) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76))));
    tmp8_79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76)));
    cf80 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_79) < reinterpret_cast<unsigned char>(*eax76));
    *eax76 = tmp8_79;
    esp81 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp74) + 4);
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76))) + cf80);
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76)));
    edi82 = reinterpret_cast<struct s663*>(reinterpret_cast<int32_t>(edi83) + 1 + 1 + 1);
    esp84 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp81) - 2);
    *esp84 = es37;
    edi82->f0 = reinterpret_cast<unsigned char>(edi82->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76)));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<uint32_t>(eax76));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<uint32_t>(eax76));
    *eax76 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax76) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax76)));
    eax85 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax76) | reinterpret_cast<unsigned char>(*eax76));
    *eax85 = reinterpret_cast<signed char>(*eax85 + *reinterpret_cast<signed char*>(&eax85));
    *reinterpret_cast<unsigned char**>(&ecx) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)) & edi82->f0);
    eax86 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax85) | reinterpret_cast<unsigned char>(ecx->f0));
    *reinterpret_cast<signed char*>(&eax86) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax86)));
    cl87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)) - edi82->f0);
    eax88 = reinterpret_cast<struct s664*>(reinterpret_cast<uint32_t>(eax86) - 1);
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(cl87));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(cl87));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(cl87));
    *reinterpret_cast<void**>(&eax88) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88))));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88)));
    tmp32_89 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp84) + reinterpret_cast<unsigned char>(eax88->f0));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88))) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_89) < reinterpret_cast<uint32_t>(esp84)));
    *reinterpret_cast<unsigned char**>(&ecx) = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(cl87) ^ edi82->f0);
    *reinterpret_cast<void**>(&eax88) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88))))));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88)));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88)));
    *esi73 = reinterpret_cast<signed char>(*esi73 + bh90);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax88) + reinterpret_cast<uint32_t>(eax88)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax88) + reinterpret_cast<uint32_t>(eax88)) + *reinterpret_cast<unsigned char*>(&edx69));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax88) + reinterpret_cast<uint32_t>(eax88)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax88) + reinterpret_cast<uint32_t>(eax88)) ^ reinterpret_cast<uint32_t>(eax88);
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88)));
    esp91 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*tmp32_89) + 4);
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88)));
    eax88->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax88->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax88)));
    edi92 = &edi82->f1;
    eax93 = &eax88->f67336;
    *eax93 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax93) + reinterpret_cast<uint32_t>(eax93));
    *eax93 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax93) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax93)));
    eax94 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax93) | reinterpret_cast<unsigned char>(*eax93));
    *eax94 = reinterpret_cast<unsigned char>(*eax94 + *reinterpret_cast<signed char*>(&eax94));
    eax95 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax94) | *eax94);
    *reinterpret_cast<void**>(&eax95) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax95))));
    if (reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax95)) < reinterpret_cast<signed char>(0)) {
        eax95 = *reinterpret_cast<void***>(eax95);
    }
    *reinterpret_cast<void***>(eax95) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax95)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax95)));
    *reinterpret_cast<void***>(eax95) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax95)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax95)));
    esp96 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp91) + reinterpret_cast<unsigned char>(ecx->f0));
    *reinterpret_cast<void**>(&eax95) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax95))));
    __asm__("outsb ");
    __asm__("pshufw mm0, [eax], 0x10");
    *reinterpret_cast<void***>(eax95) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax95)) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    *reinterpret_cast<void***>(eax95) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax95)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax95)));
    eax97 = reinterpret_cast<struct s665*>(eax95 - 1);
    eax97->f0 = reinterpret_cast<unsigned char>(eax97->f0 + *reinterpret_cast<unsigned char*>(&eax97));
    eax97->f0 = reinterpret_cast<unsigned char>(eax97->f0 + *reinterpret_cast<unsigned char*>(&eax97));
    __asm__("aas ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax97) + reinterpret_cast<uint32_t>(eax97)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax97) + reinterpret_cast<uint32_t>(eax97)) + *reinterpret_cast<unsigned char*>(&edx69));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax97) + reinterpret_cast<uint32_t>(eax97)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax97) + reinterpret_cast<uint32_t>(eax97)) ^ reinterpret_cast<uint32_t>(eax97);
    eax97->f0 = reinterpret_cast<unsigned char>(eax97->f0 + *reinterpret_cast<unsigned char*>(&eax97));
    esp98 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp96) + 4);
    eax97->f0 = reinterpret_cast<unsigned char>(eax97->f0 | *reinterpret_cast<unsigned char*>(&eax97));
    eax97->f0 = reinterpret_cast<unsigned char>(eax97->f0 | *reinterpret_cast<unsigned char*>(&eax97));
    eax99 = &eax97->f1288;
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<uint32_t>(eax99));
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax99)));
    eax100 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax99) | reinterpret_cast<unsigned char>(*eax99));
    *eax100 = reinterpret_cast<unsigned char>(*eax100 + *reinterpret_cast<signed char*>(&eax100));
    *edi92 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*edi92) | 11);
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax100) + reinterpret_cast<uint32_t>(eax100)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax100) + reinterpret_cast<uint32_t>(eax100)) + *reinterpret_cast<signed char*>(&eax100));
    tmp8_101 = *edi92;
    *edi92 = *reinterpret_cast<unsigned char**>(&ecx);
    *reinterpret_cast<unsigned char**>(&ecx) = tmp8_101;
    eax102 = reinterpret_cast<struct s666*>(reinterpret_cast<uint32_t>(eax100) | *eax100);
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    esp103 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp98) - 2);
    *esp103 = cs104;
    eax102->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)))));
    *reinterpret_cast<void**>(&eax102) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102))));
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    eax102->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)))));
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    tmp8_105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    cf106 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_105) < reinterpret_cast<unsigned char>(eax102->f0));
    eax102->f0 = tmp8_105;
    *reinterpret_cast<void**>(&eax102) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)))) + cf106);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax102) + reinterpret_cast<uint32_t>(eax102)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax102) + reinterpret_cast<uint32_t>(eax102)) ^ reinterpret_cast<uint32_t>(eax102);
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    esp107 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp103) + 4);
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    eax102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax102->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax102)));
    eax108 = &eax102->f67336;
    *eax108 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax108) + reinterpret_cast<uint32_t>(eax108));
    *eax108 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax108) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax108)));
    eax109 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax108) | reinterpret_cast<unsigned char>(*eax108));
    tmp8_110 = reinterpret_cast<unsigned char>(*eax109 + *reinterpret_cast<signed char*>(&eax109));
    cf111 = reinterpret_cast<uint1_t>(tmp8_110 < *eax109);
    *eax109 = tmp8_110;
    *reinterpret_cast<unsigned char*>(&edx69) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx69) + *eax109) + cf111);
    eax112 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax109) | *eax109);
    tmp8_113 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112))));
    cf114 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_113) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)));
    *reinterpret_cast<void**>(&eax112) = tmp8_113;
    esp115 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp107) - 2);
    *esp115 = ss116;
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax112) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx))) + cf114);
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)));
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)));
    esp117 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp115) + reinterpret_cast<unsigned char>(ecx->f0));
    *reinterpret_cast<void**>(&eax112) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112))));
    __asm__("outsb ");
    __asm__("pshufw mm0, [eax], 0x10");
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) + reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char**>(&ecx)));
    *eax112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax112) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax112)));
    eax118 = reinterpret_cast<struct s667*>(eax112 - 1);
    eax118->f0 = reinterpret_cast<unsigned char>(eax118->f0 + *reinterpret_cast<unsigned char*>(&eax118));
    eax118->f0 = reinterpret_cast<unsigned char>(eax118->f0 + *reinterpret_cast<unsigned char*>(&eax118));
    ecx119 = &ecx->f1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118)) + *reinterpret_cast<unsigned char*>(&edx69));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax118) + reinterpret_cast<uint32_t>(eax118)) ^ reinterpret_cast<uint32_t>(eax118);
    tmp8_120 = reinterpret_cast<unsigned char>(eax118->f0 + *reinterpret_cast<unsigned char*>(&eax118));
    cf121 = reinterpret_cast<uint1_t>(tmp8_120 < eax118->f0);
    eax118->f0 = tmp8_120;
    esp122 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp117) + 4);
    eax118->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax118->f0 + *reinterpret_cast<unsigned char*>(&eax118)) + cf121);
    eax118->f0 = reinterpret_cast<unsigned char>(eax118->f0 | *reinterpret_cast<unsigned char*>(&eax118));
    eax123 = &eax118->f1288;
    *eax123 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax123) + reinterpret_cast<uint32_t>(eax123));
    *eax123 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax123) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax123)));
    eax124 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax123) | reinterpret_cast<unsigned char>(*eax123));
    tmp8_125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax124) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax124)));
    cf126 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_125) < reinterpret_cast<unsigned char>(*eax124));
    *eax124 = tmp8_125;
    esp127 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp122) - 2);
    *esp127 = ds128;
    *ebx129 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebx130 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + cf126);
    tmp32_131 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124)) + reinterpret_cast<uint32_t>(eax124);
    cf132 = reinterpret_cast<uint1_t>(tmp32_131 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124)) = tmp32_131;
    *eax124 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax124) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + cf132);
    *eax124 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax124) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax124)));
    *eax124 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax124) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax124)));
    eax133 = reinterpret_cast<struct s668*>(eax124 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax133) + reinterpret_cast<uint32_t>(eax133)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax133) + reinterpret_cast<uint32_t>(eax133)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    eax133->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax133->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)))));
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    tmp8_134 = reinterpret_cast<unsigned char>(*edx69 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    cf135 = reinterpret_cast<uint1_t>(tmp8_134 < *edx69);
    *edx69 = tmp8_134;
    *reinterpret_cast<void**>(&eax133) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)))) + cf135);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax133) + reinterpret_cast<uint32_t>(eax133)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax133) + reinterpret_cast<uint32_t>(eax133)) ^ reinterpret_cast<uint32_t>(eax133);
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    esp136 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp127) + 4);
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    eax133->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax133->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax133)));
    eax137 = &eax133->f67336;
    *eax137 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax137) + reinterpret_cast<uint32_t>(eax137));
    *eax137 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax137) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax137)));
    eax138 = reinterpret_cast<struct s669*>(reinterpret_cast<uint32_t>(eax137) | reinterpret_cast<unsigned char>(*eax137));
    tmp8_139 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    cf140 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_139) < reinterpret_cast<unsigned char>(eax138->f0));
    eax138->f0 = tmp8_139;
    *ebx141 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebx142 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + cf140);
    tmp32_143 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138)) + reinterpret_cast<uint32_t>(eax138);
    cf144 = reinterpret_cast<uint1_t>(tmp32_143 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138)) = tmp32_143;
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + cf144);
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    esp145 = reinterpret_cast<struct s670**>(reinterpret_cast<int32_t>(esp136) + reinterpret_cast<unsigned char>(eax138->f0));
    *reinterpret_cast<void**>(&eax138) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138))));
    tmp8_146 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx69) + 1)))));
    cf147 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_146) < reinterpret_cast<unsigned char>(eax138->f0));
    eax138->f0 = tmp8_146;
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138))) + cf147);
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    *ebx148 = reinterpret_cast<unsigned char>(*ebx149 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138)) ^ reinterpret_cast<uint32_t>(eax138);
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    esp150 = reinterpret_cast<struct s672*>(&(*esp145)->f4);
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    esi151 = reinterpret_cast<struct s673*>(esi73 + 1 + 1 + 1);
    cl152 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)) + reinterpret_cast<unsigned char>(eax138->f0));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<uint32_t>(eax138));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    *ebx153 = reinterpret_cast<unsigned char>(*ebx154 + reinterpret_cast<unsigned char>(cl152));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    esi151->f16 = reinterpret_cast<unsigned char>(esi151->f16 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    *reinterpret_cast<void**>(&eax138) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138))));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(cl152));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138) + 40) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax138) + reinterpret_cast<uint32_t>(eax138) + 40) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax138)));
    eax138->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax138->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx69) + 1)));
    eax155 = reinterpret_cast<struct s654*>(&eax138->f1);
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)));
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)));
    esi156 = esp150->f0;
    esp157 = reinterpret_cast<struct s674*>(&esp150->f4);
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<unsigned char>(eax155)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<unsigned char>(eax155)) + *reinterpret_cast<signed char*>(&eax155 + 1));
    *reinterpret_cast<void**>(&ecx119) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(cl152) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)));
    es158 = esp157->f0;
    esp159 = &esp157->f2;
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(eax155));
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(eax155));
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)));
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)));
    tmp8_160 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)));
    cf161 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_160) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)));
    *reinterpret_cast<void**>(&eax155->f0) = tmp8_160;
    edx162 = reinterpret_cast<struct s679*>(edx69 - 1);
    tmp8_163 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax155) + 0x4e000400) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + cf161);
    cf164 = reinterpret_cast<uint1_t>(tmp8_163 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax155) + 0x4e000400));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax155) + 0x4e000400) = tmp8_163;
    *ebx165 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebx166 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + cf164);
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<uint32_t>(ecx119));
    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<int32_t>(edx162) + 19) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<int32_t>(edx162) + 19) + bl167);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<unsigned char>(eax155)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<unsigned char>(eax155)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    if (!(reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax155) + reinterpret_cast<unsigned char>(eax155)) == 0))) {
        cf168 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax155) < reinterpret_cast<unsigned char>(&(*ecx119)->f0));
        eax155 = reinterpret_cast<struct s654*>(reinterpret_cast<unsigned char>(eax155) - (reinterpret_cast<unsigned char>(*ecx119) + cf168));
        *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155))) + cf168);
        esp159 = reinterpret_cast<struct s675**>(0x14004810);
        tmp8_169 = reinterpret_cast<unsigned char>(g18015800 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
        g18015800 = tmp8_169;
        *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    }
    tmp8_170 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    cf171 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_170) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)));
    *reinterpret_cast<void**>(&eax155->f0) = tmp8_170;
    *reinterpret_cast<void**>(&eax155) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf171))))));
    *reinterpret_cast<void**>(&eax155->f0) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155->f0)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax155)));
    eax172 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax155) - 1);
    *eax172 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax172) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax172) + 1)));
    *eax172 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax172) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    *eax172 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax172) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx162) + 1)));
    *reinterpret_cast<void**>(&eax172) = reinterpret_cast<void*>(0);
    *eax172 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax172)));
    *eax172 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax172) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    *eax172 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax172)));
    tmp8_173 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*ebp174));
    cf175 = reinterpret_cast<uint1_t>(tmp8_173 < *ebp176);
    *ebp177 = tmp8_173;
    *eax172 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax172))) + cf175);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax172) + reinterpret_cast<uint32_t>(eax172)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax172) + reinterpret_cast<uint32_t>(eax172)) ^ reinterpret_cast<uint32_t>(eax172);
    *eax172 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax172)));
    esp178 = &(*esp159)->f4;
    *eax172 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax172)));
    *eax172 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax172)));
    edi179 = reinterpret_cast<struct s680*>(edi92 + 1 + 1 + 1 + 1);
    *reinterpret_cast<void**>(&eax172) = reinterpret_cast<void*>(8);
    eax180 = reinterpret_cast<struct s681*>(reinterpret_cast<uint32_t>(eax172) + reinterpret_cast<unsigned char>(*ecx119));
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    *ebx181 = reinterpret_cast<unsigned char>(*ebx182 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    tmp8_183 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx162)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx162)));
    tmp8_184 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&(eax180 - 0x14fffe00)->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_183) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx162))));
    cf185 = reinterpret_cast<uint1_t>(tmp8_184 < *reinterpret_cast<unsigned char*>(&(eax180 - 0x14fffe00)->f0));
    *reinterpret_cast<unsigned char*>(&(eax180 - 0x14fffe00)->f0) = tmp8_184;
    *ebx186 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ebx187 + reinterpret_cast<unsigned char>(tmp8_183)) + cf185);
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<uint32_t>(ecx119));
    tmp8_188 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax180) + 1) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax180) + 1));
    cf189 = reinterpret_cast<uint1_t>(tmp8_188 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax180) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax180) + 1) = tmp8_188;
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx162) + 1))) + cf189);
    *reinterpret_cast<void**>(&eax180) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180))));
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    esi156->f0 = reinterpret_cast<unsigned char>(esi156->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    *reinterpret_cast<void**>(&eax180) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax180) + reinterpret_cast<uint32_t>(eax180)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax180) + reinterpret_cast<uint32_t>(eax180)) ^ reinterpret_cast<uint32_t>(eax180);
    *ecx119 = reinterpret_cast<struct s654*>(reinterpret_cast<unsigned char>(*ecx119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    esp190 = &(*esp178)->f4;
    eax180->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax180->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax180)));
    eax191 = &eax180->f1;
    esi156->f3 = reinterpret_cast<unsigned char>(esi156->f3 + *reinterpret_cast<unsigned char*>(&eax191));
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax191));
    *eax191 = reinterpret_cast<unsigned char>(*eax191 + *reinterpret_cast<unsigned char*>(&eax191));
    eax192 = reinterpret_cast<struct s682*>(reinterpret_cast<uint32_t>(eax191) | reinterpret_cast<unsigned char>(*ecx119));
    tmp8_193 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    cf194 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_193) < reinterpret_cast<unsigned char>(eax192->f0));
    eax192->f0 = tmp8_193;
    tmp8_195 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_183) + reinterpret_cast<unsigned char>(*ecx119)) + cf194);
    *reinterpret_cast<void**>(&edx162) = tmp8_195;
    *ecx119 = reinterpret_cast<struct s654*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*ecx119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_195) < reinterpret_cast<unsigned char>(tmp8_183)));
    *reinterpret_cast<void**>(&eax192) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)))) - 17);
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    tmp8_196 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi179->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    cf197 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_196) < reinterpret_cast<unsigned char>(edi179->f0));
    edi179->f0 = tmp8_196;
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax192->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192))) + cf197);
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    *ecx119 = reinterpret_cast<struct s654*>(reinterpret_cast<unsigned char>(*ecx119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax192) + reinterpret_cast<uint32_t>(eax192)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax192) + reinterpret_cast<uint32_t>(eax192)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx119) + 1)));
    eax192->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax192->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)));
    esi198 = reinterpret_cast<struct s683*>(&esi156->f1);
    *reinterpret_cast<void**>(&eax192) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax192)) + 8);
    eax199 = &eax192->f65536;
    *eax199 = reinterpret_cast<unsigned char>(*eax199 + *reinterpret_cast<unsigned char*>(&eax199));
    *eax199 = reinterpret_cast<unsigned char>(*eax199 | *reinterpret_cast<unsigned char*>(&eax199));
    *eax199 = reinterpret_cast<unsigned char>(*eax199 + *reinterpret_cast<unsigned char*>(&eax199));
    *ecx119 = reinterpret_cast<struct s654*>(reinterpret_cast<unsigned char>(*ecx119) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx162)));
    eax200 = eax199 - 1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax200) + reinterpret_cast<uint32_t>(eax200)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax200) + reinterpret_cast<uint32_t>(eax200)) + *reinterpret_cast<unsigned char*>(&eax200));
    *eax200 = reinterpret_cast<unsigned char>(*eax200 | *reinterpret_cast<unsigned char*>(&eax200));
    eax201 = reinterpret_cast<struct s684*>(reinterpret_cast<uint32_t>(eax200) | reinterpret_cast<unsigned char>(*ecx119));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201)));
    edx162->f0 = reinterpret_cast<unsigned char>(edx162->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx162)));
    *reinterpret_cast<void**>(&eax201) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201))));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201)));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201)));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201)));
    *reinterpret_cast<void**>(&eax201) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201)) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax201) + 1));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax201)));
    eax201->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax201->f0) + reinterpret_cast<uint32_t>(eax201));
    eax202 = &eax201->f1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx162) + reinterpret_cast<uint32_t>(eax202) + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx162) + reinterpret_cast<uint32_t>(eax202) + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<uint32_t>(eax202));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<signed char>(bl203));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<uint32_t>(eax202));
    tmp8_204 = reinterpret_cast<unsigned char>(esi198->f0 + bh205);
    cf206 = reinterpret_cast<uint1_t>(tmp8_204 < esi198->f0);
    esi198->f0 = tmp8_204;
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx162) + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx162) + 1)) + reinterpret_cast<unsigned char>(*eax202)) + cf206);
    *reinterpret_cast<void**>(&eax202) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202))));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    tmp8_207 = reinterpret_cast<struct s654*>(reinterpret_cast<unsigned char>(*ecx119) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    cf208 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_207) < reinterpret_cast<unsigned char>(*ecx119));
    *ecx119 = tmp8_207;
    *reinterpret_cast<void**>(&eax202) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)))) + cf208);
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    edx162->f0 = reinterpret_cast<unsigned char>(edx162->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx119) + 1)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    edi179->f5 = reinterpret_cast<unsigned char>(edi179->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    edi179->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi179->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<uint32_t>(eax202));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<uint32_t>(eax202));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    tmp8_209 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    cf210 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_209) < reinterpret_cast<unsigned char>(*eax202));
    *eax202 = tmp8_209;
    edx211 = reinterpret_cast<struct s685*>(&edx162->f1);
    cl212 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)) + reinterpret_cast<signed char>(*ebx213)) + cf210);
    tmp32_214 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax202) + reinterpret_cast<uint32_t>(eax202)) + reinterpret_cast<uint32_t>(eax202);
    cf215 = reinterpret_cast<uint1_t>(tmp32_214 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax202) + reinterpret_cast<uint32_t>(eax202)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax202) + reinterpret_cast<uint32_t>(eax202)) = tmp32_214;
    esp216 = &(*esp190)->f4;
    *reinterpret_cast<void**>(&ecx119) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(cl212) + reinterpret_cast<unsigned char>(*eax202)) + cf215);
    *eax202 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax202) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax202)));
    eax217 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax202) | 0xc201300);
    tmp8_218 = reinterpret_cast<unsigned char>(edx211->f18 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1)));
    cf219 = reinterpret_cast<uint1_t>(tmp8_218 < edx211->f18);
    edx211->f18 = tmp8_218;
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217))) + cf219);
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    tmp8_220 = reinterpret_cast<unsigned char>(edx211->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    cf221 = reinterpret_cast<uint1_t>(tmp8_220 < edx211->f0);
    edx211->f0 = tmp8_220;
    *reinterpret_cast<void**>(&eax217) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf221))))));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    edi179->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi179->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx119) + 1)));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    edi179->f7 = reinterpret_cast<unsigned char>(edi179->f7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    edi179->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi179->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<uint32_t>(eax217));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<uint32_t>(eax217));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    tmp8_222 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    cf223 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_222) < reinterpret_cast<unsigned char>(*eax217));
    *eax217 = tmp8_222;
    *reinterpret_cast<uint16_t*>(&ecx119) = reinterpret_cast<uint16_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx119) + *ebx224) + cf223);
    tmp32_225 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)) + reinterpret_cast<uint32_t>(eax217);
    cf226 = reinterpret_cast<uint1_t>(tmp32_225 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax217) + reinterpret_cast<uint32_t>(eax217)) = tmp32_225;
    esp227 = &(*esp216)->f4;
    *reinterpret_cast<void**>(&ecx119) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)) + reinterpret_cast<unsigned char>(*eax217)) + cf226);
    *eax217 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax217) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax217)));
    esi198->f19 = reinterpret_cast<signed char>(esi198->f19 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx119) + 1)));
    eax228 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(eax217) | 0xc000b00) - 1);
    *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)));
    edx211->f0 = reinterpret_cast<unsigned char>(edx211->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
    *ebx229 = reinterpret_cast<unsigned char>(*ebx230 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax228) + reinterpret_cast<uint32_t>(eax228)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax228) + reinterpret_cast<uint32_t>(eax228)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)));
    if (0) {
        addr_10004481_15:
        tmp8_231 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
        cf232 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_231) < reinterpret_cast<unsigned char>(*eax228));
        *eax228 = tmp8_231;
        esp233 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp227) + 4);
        *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax228) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228))) + cf232);
        *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
        esp234 = reinterpret_cast<struct s686*>(reinterpret_cast<int32_t>(esp233) - 2);
        esp234->f0 = es158;
        g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
        *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
        eax235 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax228) | reinterpret_cast<unsigned char>(*eax228));
        *eax235 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax235) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax235)));
        tmp8_236 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax235)));
        cf237 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_236) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1)));
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1) = tmp8_236;
        ecx238 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ecx119) + reinterpret_cast<int32_t>(*ebx239) + cf237);
        *eax235 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax235) + reinterpret_cast<uint32_t>(ecx238));
        tmp8_240 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)));
        cf241 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_240) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)));
        *reinterpret_cast<void**>(&edx211) = tmp8_240;
        ecx242 = reinterpret_cast<unsigned char**>(reinterpret_cast<uint32_t>(ecx238) + reinterpret_cast<unsigned char>(*eax235) + cf241);
        *reinterpret_cast<void**>(&eax235) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax235))));
        *eax235 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax235) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax235)));
        eax243 = eax235 - 1;
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx211)));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
        tmp8_244 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1)));
        cf245 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_244) < reinterpret_cast<unsigned char>(*eax243));
        *eax243 = tmp8_244;
        *reinterpret_cast<void**>(&eax243) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax243)))) + cf245);
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax243)));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax243)));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax243) + reinterpret_cast<uint32_t>(eax243) + 36) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax243) + reinterpret_cast<uint32_t>(eax243) + 36) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
        edx211->f0 = reinterpret_cast<unsigned char>(edx211->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1)));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax243)));
        edx211->f0 = reinterpret_cast<unsigned char>(edx211->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx211) + 1)));
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax243) + reinterpret_cast<uint32_t>(eax243)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax243) + reinterpret_cast<uint32_t>(eax243)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax243) + 1));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
        es246 = esp234->f0;
        esp247 = &esp234->f2;
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<uint32_t>(eax243));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<uint32_t>(eax243));
        *eax243 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax243) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax243)));
        eax248 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax243) | reinterpret_cast<uint32_t>(*ecx242));
        tmp8_249 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax248)));
        cf250 = reinterpret_cast<uint1_t>(tmp8_249 < *reinterpret_cast<unsigned char*>(&eax248));
        *reinterpret_cast<unsigned char*>(&eax248) = tmp8_249;
        edx251 = *esp247;
        esp252 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp247 + 1) - 2);
        *esp252 = es246;
        esp253 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp252) + *eax248 + cf250);
        *eax248 = reinterpret_cast<unsigned char>(*eax248 | *reinterpret_cast<unsigned char*>(&eax248));
        __asm__("ficom word [ebx]");
        eax254 = reinterpret_cast<uint32_t>(eax248) - (reinterpret_cast<uint32_t>(*ecx242) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax248) < reinterpret_cast<uint32_t>(*ecx242)));
        *reinterpret_cast<unsigned char*>(&eax254) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax254)));
        *reinterpret_cast<int1_t*>(&eflags3) = 0;
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        *reinterpret_cast<int1_t*>(&eflags3) = *reinterpret_cast<unsigned char*>(&eax254) == 0;
        *reinterpret_cast<int1_t*>(&eflags3) = __intrinsic();
        *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1) = 0;
        *reinterpret_cast<int1_t*>(&eflags3) = __undefined();
        esp255 = reinterpret_cast<struct s687**>(reinterpret_cast<uint32_t>(esp253) - 4);
        *esp255 = reinterpret_cast<struct s687*>(eflags3 & 0xfcffff);
        eax256 = reinterpret_cast<void**>(eax254 | 0x100048 | 0x14015800);
        *eax256 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax256) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
        tmp8_257 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax256) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
        cf258 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_257) < reinterpret_cast<unsigned char>(*eax256));
        *eax256 = tmp8_257;
        *eax256 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax256) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax256)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax256) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax256)) + cf258))));
        *eax256 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax256) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax256)));
        eax259 = eax256 - 1;
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259)) + bl260);
        *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)));
    } else {
        if (0) 
            goto addr_10004470_17; else 
            goto addr_10004470_17;
    }
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)));
    *ebp261 = reinterpret_cast<unsigned char>(*ebp262 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx242)));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) - reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)));
    *reinterpret_cast<void**>(&eax259) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)) ^ reinterpret_cast<unsigned char>(*eax259));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax259)));
    *reinterpret_cast<void**>(&eax259) = reinterpret_cast<void*>(0);
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) | reinterpret_cast<uint32_t>(ecx242));
    es263 = *esp255;
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<uint32_t>(eax259));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<uint32_t>(eax259));
    *eax259 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax259)));
    *eax259 = reinterpret_cast<void*>(0);
    *reinterpret_cast<void**>(&eax259) = reinterpret_cast<void*>(0);
    __asm__("out dx, al");
    ecx264 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx242) + reinterpret_cast<int32_t>(*ebx265));
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<uint32_t>(ecx264));
    tmp8_266 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax259) + 1) + bh267);
    cf268 = reinterpret_cast<uint1_t>(tmp8_266 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax259) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax259) + 1) = tmp8_266;
    edx269 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edx251) + reinterpret_cast<int32_t>(*ebx270) + cf268);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(eax259)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    esp271 = reinterpret_cast<struct s688**>(esp255 + 1 - 1);
    *esp271 = ds272;
    *reinterpret_cast<void**>(&eax259) = reinterpret_cast<void*>(27);
    *eax259 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax259) + reinterpret_cast<uint32_t>(edx269));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(edx269) + 0x140048) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax259) + reinterpret_cast<uint32_t>(edx269) + 0x140048) + bh273);
    eax274 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax259) | 0x18015800);
    *eax274 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax274) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    tmp8_275 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax274) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    cf276 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_275) < reinterpret_cast<unsigned char>(*eax274));
    *eax274 = tmp8_275;
    *reinterpret_cast<unsigned char*>(&eax274) = reinterpret_cast<unsigned char>(27 - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(27 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf276))))));
    *eax274 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax274) | *reinterpret_cast<unsigned char*>(&eax274));
    eax277 = reinterpret_cast<struct s689*>(eax274 - 1);
    eax277->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax277->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax277) + 1)));
    eax277->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax277->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    eax277->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax277->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx269) + 1)));
    *reinterpret_cast<void**>(&eax277) = reinterpret_cast<void*>(0);
    eax277->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax277->f0)));
    eax277->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax277->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    eax277->f0 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(eax277->f0)));
    tmp8_278 = reinterpret_cast<unsigned char>(g4010b13 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    cf279 = reinterpret_cast<uint1_t>(tmp8_278 < g4010b13);
    g4010b13 = tmp8_278;
    *reinterpret_cast<void**>(&eax277) = reinterpret_cast<void*>(static_cast<uint32_t>(cf279));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax277) + reinterpret_cast<uint32_t>(eax277)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax277) + reinterpret_cast<uint32_t>(eax277)) ^ reinterpret_cast<uint32_t>(eax277);
    eax277->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax277->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)));
    esp280 = &(*esp271)->f4;
    *reinterpret_cast<void**>(&eax277) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax277)) & reinterpret_cast<unsigned char>(eax277->f0));
    eax281 = &eax277->f1;
    tmp8_282 = reinterpret_cast<unsigned char>(g4010b18 + *reinterpret_cast<unsigned char*>(&eax281));
    g4010b18 = tmp8_282;
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax281));
    *eax281 = reinterpret_cast<unsigned char>(*eax281 + *reinterpret_cast<unsigned char*>(&eax281));
    *reinterpret_cast<unsigned char*>(&eax281) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax281) | *eax281);
    tmp8_283 = reinterpret_cast<unsigned char>(*eax281 + *reinterpret_cast<unsigned char*>(&eax281));
    cf284 = reinterpret_cast<uint1_t>(tmp8_283 < *eax281);
    *eax281 = tmp8_283;
    *reinterpret_cast<unsigned char*>(&eax281) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax281) + 11) + cf284);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax281) + reinterpret_cast<uint32_t>(eax281)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax281) + reinterpret_cast<uint32_t>(eax281)) + reinterpret_cast<uint32_t>(eax281);
    *reinterpret_cast<void**>(&edx269) = reinterpret_cast<void*>(1);
    eax285 = eax281 - 1;
    *eax285 = reinterpret_cast<unsigned char>(*eax285 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    *eax285 = reinterpret_cast<unsigned char>(*eax285 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    *eax285 = reinterpret_cast<unsigned char>(*eax285 + 1);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax285) + reinterpret_cast<uint32_t>(eax285)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax285) + reinterpret_cast<uint32_t>(eax285)) + reinterpret_cast<uint32_t>(ecx264);
    *eax285 = reinterpret_cast<unsigned char>(*eax285 + 1);
    *eax285 = reinterpret_cast<unsigned char>(*eax285 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    *eax285 = reinterpret_cast<unsigned char>(*eax285 + *reinterpret_cast<signed char*>(&eax285));
    eax286 = reinterpret_cast<struct s690*>(eax285 - 1);
    eax286->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax286->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax286)));
    eax286->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax286->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax286)));
    eax286->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax286->f0) + 1);
    *ecx264 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx264) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx269) + 1)));
    *reinterpret_cast<void**>(&eax286) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax286)) + 4);
    *edx269 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx269) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax286)));
    esp287 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp280) + 4);
    eax286->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax286->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax286)));
    eax288 = &eax286->f1;
    tmp8_289 = reinterpret_cast<unsigned char>(g4010b17 + *reinterpret_cast<unsigned char*>(&eax288));
    g4010b17 = tmp8_289;
    *ecx264 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx264) | *reinterpret_cast<unsigned char*>(&eax288));
    *eax288 = reinterpret_cast<unsigned char>(*eax288 + *reinterpret_cast<unsigned char*>(&eax288));
    *eax288 = reinterpret_cast<unsigned char>(*eax288 + *reinterpret_cast<unsigned char*>(&eax288));
    *eax288 = reinterpret_cast<unsigned char>(*eax288 + *reinterpret_cast<unsigned char*>(&eax288));
    eax290 = reinterpret_cast<struct s691*>(eax288 - 1);
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)));
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    *ebx291 = reinterpret_cast<unsigned char>(*ebx292 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    tmp8_293 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax290) + reinterpret_cast<uint32_t>(eax290)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)));
    cf294 = reinterpret_cast<uint1_t>(tmp8_293 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax290) + reinterpret_cast<uint32_t>(eax290)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax290) + reinterpret_cast<uint32_t>(eax290)) = tmp8_293;
    *reinterpret_cast<void**>(&eax290) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)) + 16) + cf294);
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) + reinterpret_cast<uint32_t>(ecx264));
    tmp8_295 = reinterpret_cast<unsigned char>(g4010b27 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)));
    g4010b27 = tmp8_295;
    *reinterpret_cast<void**>(&eax290) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290))));
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)));
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx264)));
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)));
    eax290->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax290->f0) + 1);
    *reinterpret_cast<void**>(&eax290) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)))) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax290) + 1))));
    *reinterpret_cast<void**>(&eax290) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax290)) + reinterpret_cast<unsigned char>(eax290->f0));
    eax296 = &eax290->f1;
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)));
    ecx297 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx264) + reinterpret_cast<unsigned char>(*eax296));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<uint32_t>(eax296));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)));
    *ecx297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx297) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*ecx297) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)))))));
    tmp8_298 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296))));
    *reinterpret_cast<void**>(&eax296) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_298) + 0x70) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_298) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296))));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax296 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax296) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax296)));
    eax299 = reinterpret_cast<struct s692*>(eax296 - 1);
    eax299->f0 = reinterpret_cast<signed char>(eax299->f0 + *reinterpret_cast<signed char*>(&eax299));
    eax299->f0 = reinterpret_cast<signed char>(eax299->f0 + *reinterpret_cast<signed char*>(&eax299));
    esp300 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp287) + 1 - 4);
    *esp300 = ecx297;
    eax299->f0 = reinterpret_cast<signed char>(eax299->f0 + bl301);
    eax299->f0 = reinterpret_cast<signed char>(eax299->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx269) + 1)));
    eax302 = &eax299->f1;
    *reinterpret_cast<unsigned char*>(&eax302) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax302)));
    *reinterpret_cast<unsigned char*>(&eax302) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax302) + *eax302)));
    *eax302 = reinterpret_cast<unsigned char>(*eax302 | *reinterpret_cast<unsigned char*>(&eax302));
    esp303 = reinterpret_cast<struct s687**>(reinterpret_cast<int32_t>(esp300) - 2);
    *esp303 = es263;
    g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax302));
    *eax302 = reinterpret_cast<unsigned char>(*eax302 + *reinterpret_cast<unsigned char*>(&eax302));
    eax304 = eax302 - 1;
    *eax304 = reinterpret_cast<unsigned char>(*eax304 + *reinterpret_cast<unsigned char*>(&eax304));
    *eax304 = reinterpret_cast<unsigned char>(*eax304 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax304 = reinterpret_cast<unsigned char>(*eax304 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    tmp8_305 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax304) + reinterpret_cast<uint32_t>(eax304)) + *reinterpret_cast<unsigned char*>(&eax304));
    cf306 = reinterpret_cast<uint1_t>(tmp8_305 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax304) + reinterpret_cast<uint32_t>(eax304)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax304) + reinterpret_cast<uint32_t>(eax304)) = tmp8_305;
    esp307 = reinterpret_cast<void***>(esp303 - 2);
    *esp307 = edx269;
    *reinterpret_cast<unsigned char*>(&eax304) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax304) + 72) + cf306);
    *eax304 = reinterpret_cast<unsigned char>(*eax304 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax304 = reinterpret_cast<unsigned char>(*eax304 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *ebx308 = reinterpret_cast<signed char>(*ebx309 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax304) + reinterpret_cast<uint32_t>(eax304)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax304) + reinterpret_cast<uint32_t>(eax304)) + reinterpret_cast<uint32_t>(ecx297);
    *ecx297 = reinterpret_cast<void*>(static_cast<uint32_t>(ss310));
    eax311 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax304) | reinterpret_cast<unsigned char>(*ecx297));
    *eax311 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)))));
    cf312 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*edx269) < 1);
    *edx269 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx269) - 1);
    *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)))) + cf312);
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    tmp8_313 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edx269) + 1);
    cf314 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_313) < reinterpret_cast<unsigned char>(*edx269));
    *edx269 = tmp8_313;
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax311) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) + cf314))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax311) + reinterpret_cast<uint32_t>(eax311)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax311) + reinterpret_cast<uint32_t>(eax311)) ^ reinterpret_cast<uint32_t>(eax311);
    tmp8_315 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_315) < reinterpret_cast<unsigned char>(*eax311));
    *eax311 = tmp8_315;
    esp317 = reinterpret_cast<void*>(*esp307 + 4);
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311))) + cf316);
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    edi318 = reinterpret_cast<struct s693*>(reinterpret_cast<int32_t>(&edi179->pad5) + 1 - 1 + 1);
    esp319 = reinterpret_cast<struct s694*>(reinterpret_cast<uint32_t>(esp317) - 2);
    esp319->f0 = es263;
    edi318->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi318->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<uint32_t>(eax311));
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<uint32_t>(eax311));
    *eax311 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax311) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    eax320 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax311) | reinterpret_cast<unsigned char>(*eax311));
    tmp8_321 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    cf322 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_321) < reinterpret_cast<unsigned char>(*eax320));
    *eax320 = tmp8_321;
    esi323 = esp319->f0;
    esp324 = &esp319->f4;
    *reinterpret_cast<void**>(&eax320) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)) + 11) + cf322);
    tmp32_325 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)) + reinterpret_cast<uint32_t>(eax320);
    cf326 = reinterpret_cast<uint1_t>(tmp32_325 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)) = tmp32_325;
    *reinterpret_cast<void**>(&eax320) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)) + 72) + cf326);
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *reinterpret_cast<void**>(&eax320) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320))));
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    tmp32_327 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp324) + reinterpret_cast<unsigned char>(*eax320));
    tmp8_328 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320))) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_327) < reinterpret_cast<uint32_t>(esp324)));
    cf329 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_328) < reinterpret_cast<unsigned char>(*eax320));
    *eax320 = tmp8_328;
    __asm__("outsb ");
    *reinterpret_cast<void**>(&eax320) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)) + 0x70) + cf329);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)) + 1);
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    tmp8_330 = reinterpret_cast<unsigned char>(*ebx331 + 1);
    cf332 = reinterpret_cast<uint1_t>(tmp8_330 < *ebx333);
    *ebx334 = tmp8_330;
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax320) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)) + cf332))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax320) + reinterpret_cast<uint32_t>(eax320)) ^ reinterpret_cast<uint32_t>(eax320);
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    esp335 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(*tmp32_327) + 4 - 1);
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    esi323->f6 = reinterpret_cast<unsigned char>(esi323->f6 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    g10000 = reinterpret_cast<unsigned char>(g10000 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    *eax320 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax320) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax320)));
    eax336 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax320) | reinterpret_cast<unsigned char>(*eax320));
    tmp8_337 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
    cf338 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_337) < reinterpret_cast<unsigned char>(*eax336));
    *eax336 = tmp8_337;
    if (cf338 | reinterpret_cast<uint1_t>(*eax336 == 0)) {
        addr_100046b2_21:
        *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336))) + cf338);
        eax336[reinterpret_cast<uint16_t>(esi323) * 2] = reinterpret_cast<void*>(static_cast<uint32_t>(ss339));
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax336) + reinterpret_cast<uint32_t>(eax336)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax336) + reinterpret_cast<uint32_t>(eax336)) + 1);
        goto addr_100046b8_22;
    } else {
        eax336 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax336) | reinterpret_cast<unsigned char>(*eax336));
        *reinterpret_cast<void**>(&eax336) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336))));
        if (__intrinsic()) {
            addr_100046b8_22:
            *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
            *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
            goto addr_100046be_24;
        } else {
            *reinterpret_cast<void**>(&eax336) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)) | reinterpret_cast<unsigned char>(*eax336));
            *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
            if (reinterpret_cast<uint1_t>(__intrinsic()) | reinterpret_cast<uint1_t>(*eax336 == 0)) {
                addr_100046be_24:
                *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
                *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax336) + reinterpret_cast<uint32_t>(eax336) + 28) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax336) + reinterpret_cast<uint32_t>(eax336) + 28) + 1);
                *ecx297 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx297) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx269) + 1)));
                *reinterpret_cast<void**>(&eax336) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336))));
                *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
                esp340 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp335) + 4 - 1);
                *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
                edi318->f7 = reinterpret_cast<unsigned char>(edi318->f7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
                edi318->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi318->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
                *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<uint32_t>(eax336));
                *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<uint32_t>(eax336));
                *eax336 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax336) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
                eax341 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax336) | reinterpret_cast<unsigned char>(*eax336));
                *eax341 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax341) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341)));
            } else {
                *eax336 = *reinterpret_cast<void**>(&eax336);
                *reinterpret_cast<void**>(&eax336) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336))));
                tmp8_342 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx343) + reinterpret_cast<uint32_t>(ecx297))))));
                cf338 = reinterpret_cast<uint1_t>(tmp8_342 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx344) + reinterpret_cast<uint32_t>(ecx297)));
                *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx345) + reinterpret_cast<uint32_t>(ecx297)) = tmp8_342;
                goto addr_100046b2_21;
            }
        }
    }
    *reinterpret_cast<void**>(&eax341) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341)) + 11) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edi318->f0) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341))));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax341) + reinterpret_cast<uint32_t>(eax341)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax341) + reinterpret_cast<uint32_t>(eax341)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341)));
    *reinterpret_cast<void**>(&eax341) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341)) | reinterpret_cast<unsigned char>(*eax341));
    *eax341 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax341) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341)));
    *eax341 = *reinterpret_cast<void**>(&eax341);
    al346 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341))));
    edx347 = 0x10010b14;
    tmp8_348 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al346) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *reinterpret_cast<void**>(&eax341) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_348) + 19) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_348) < reinterpret_cast<unsigned char>(al346)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax341) + reinterpret_cast<uint32_t>(eax341)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax341) + reinterpret_cast<uint32_t>(eax341)) & 20);
    __asm__("fcom dword [eax+esi*2]");
    *eax341 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax341) + reinterpret_cast<signed char>(bl349));
    *eax341 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax341) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *eax341 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax341) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax341)));
    eax350 = eax341 - 1;
    *eax350 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax350) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax350)));
    *eax350 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax350) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax350)));
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp340) - 4) = ebp351;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax350) + reinterpret_cast<uint32_t>(eax350)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax350) + reinterpret_cast<uint32_t>(eax350)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx297)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax350) + reinterpret_cast<uint32_t>(eax350)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax350) + reinterpret_cast<uint32_t>(eax350)) ^ reinterpret_cast<uint32_t>(eax350);
    *eax350 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax350) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax350)));
    *eax350 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax350) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax350)));
    *eax350 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax350) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax350)));
    ecx352 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx297) + reinterpret_cast<unsigned char>(*eax350));
    eax353 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax350) + reinterpret_cast<int32_t>(*ecx352));
    *eax353 = reinterpret_cast<unsigned char>(*eax353 + *reinterpret_cast<unsigned char*>(&eax353));
    *eax353 = reinterpret_cast<unsigned char>(*eax353 + *reinterpret_cast<unsigned char*>(&eax353));
    *ebx354 = reinterpret_cast<signed char>(*ebx355 + *reinterpret_cast<signed char*>(&ecx352));
    *eax353 = reinterpret_cast<unsigned char>(*eax353 + *reinterpret_cast<unsigned char*>(&eax353));
    tmp8_356 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax353) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx347) + 1));
    *reinterpret_cast<unsigned char*>(&eax353) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_356 + 19) + reinterpret_cast<uint1_t>(tmp8_356 < *reinterpret_cast<unsigned char*>(&eax353)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax353) + reinterpret_cast<uint32_t>(eax353)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax353) + reinterpret_cast<uint32_t>(eax353)) & *reinterpret_cast<unsigned char*>(&eax353));
    __asm__("hlt ");
    addr_10004470_17:
    *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax228) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)))))));
    *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
    *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)));
    tmp8_357 = reinterpret_cast<unsigned char>(*ebx358 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx119)));
    cf359 = reinterpret_cast<uint1_t>(tmp8_357 < *ebx360);
    *ebx361 = tmp8_357;
    *eax228 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax228) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax228) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax228)) + cf359))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax228) + reinterpret_cast<uint32_t>(eax228)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax228) + reinterpret_cast<uint32_t>(eax228)) ^ reinterpret_cast<uint32_t>(eax228);
    goto addr_10004481_15;
}

struct s695 {
    unsigned char f0;
    signed char f1;
    signed char[2] pad4;
    unsigned char f4;
    unsigned char f5;
};

struct s696 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s697 {
    signed char[21] pad21;
    signed char f21;
};

struct s698 {
    signed char[21] pad21;
    unsigned char f21;
};

struct s699 {
    signed char[21] pad21;
    unsigned char f21;
};

struct s700 {
    signed char[4] pad4;
    void** f4;
};

struct s701 {
    void** f0;
    void* f4;
};

struct s702 {
    signed char f0;
    signed char[3] pad4;
    unsigned char f4;
};

struct s703 {
    signed char[4] pad4;
    void* f4;
};

struct s704 {
    void* f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

signed char g4010a16;

struct s705 {
    signed char[4] pad4;
    int16_t f4;
};

struct s706 {
    int16_t f0;
    void* f2;
};

void fun_1000472d(void* ecx) {
    unsigned char* eax2;
    signed char al3;
    uint1_t cf4;
    unsigned char* eax5;
    struct s695* edi6;
    struct s696* edi7;
    void** ecx8;
    unsigned char* eax9;
    signed char* ebx10;
    signed char* ebx11;
    unsigned char tmp8_12;
    struct s697* edx13;
    uint1_t cf14;
    struct s698* edx15;
    struct s699* edx16;
    struct s700** esp17;
    int32_t esi18;
    unsigned char tmp8_19;
    uint1_t cf20;
    void** eax21;
    unsigned char tmp8_22;
    signed char dl23;
    uint1_t cf24;
    struct s701* esp25;
    void** ecx26;
    unsigned char* ebx27;
    unsigned char* ebx28;
    void** eax29;
    void** eax30;
    void* dl31;
    void* dh32;
    void** esp33;
    unsigned char* ebx34;
    unsigned char* ebx35;
    unsigned char* eax36;
    unsigned char* edx37;
    signed char* edx38;
    signed char* ebx39;
    signed char* ebx40;
    signed char dl41;
    void* tmp8_42;
    struct s702* edi43;
    void** eax44;
    int32_t edx45;
    void* tmp8_46;
    void* bl47;
    uint1_t cf48;
    struct s703** esp49;
    unsigned char* ebx50;
    unsigned char* ebx51;
    void** eax52;
    unsigned char* edx53;
    int32_t* ebx54;
    void* tmp8_55;
    uint1_t cf56;
    struct s704* eax57;
    unsigned char tmp8_58;
    signed char bl59;
    uint1_t cf60;
    void** esp61;
    unsigned char* eax62;
    unsigned char* eax63;
    unsigned char tmp8_64;
    uint1_t cf65;
    unsigned char* eax66;
    void** eax67;
    unsigned char tmp8_68;
    signed char* ebx69;
    signed char bl70;
    uint1_t cf71;
    unsigned char* ebx72;
    unsigned char* ebx73;
    void* esp74;
    signed char* eax75;
    unsigned char* ebx76;
    signed char* ebx77;
    void* tmp8_78;
    void** eax79;
    struct s705** esp80;
    signed char bl81;
    struct s706* esp82;
    int16_t es83;
    void** esp84;
    unsigned char* eax85;
    uint32_t ecx86;
    unsigned char tmp8_87;
    uint1_t cf88;
    void** tmp32_89;
    uint1_t cf90;
    unsigned char* eax91;
    unsigned char tmp8_92;
    signed char* ebp93;
    signed char bl94;
    uint1_t cf95;
    unsigned char* ebp96;
    unsigned char* ebp97;
    unsigned char tmp8_98;
    uint1_t cf99;
    void* esp100;
    signed char* eax101;
    unsigned char* eax102;
    signed char* eax103;
    signed char* ebx104;
    signed char* ebx105;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al3 + 0x70) + cf4);
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<signed char*>(&ecx));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<signed char*>(&ecx));
    *eax2 = reinterpret_cast<unsigned char>(*eax2 + *reinterpret_cast<unsigned char*>(&eax2));
    eax5 = eax2 - 1;
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) + *reinterpret_cast<signed char*>(&ecx));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<uint32_t>(eax5)) ^ reinterpret_cast<uint32_t>(eax5);
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *eax5 = reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5));
    *eax5 = reinterpret_cast<unsigned char>(*eax5 | *reinterpret_cast<unsigned char*>(&eax5));
    edi6 = reinterpret_cast<struct s695*>(&edi7->f1);
    ecx8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx) + *eax5);
    eax9 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax5) + reinterpret_cast<int32_t>(*ecx8));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + *reinterpret_cast<unsigned char*>(&eax9));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + *reinterpret_cast<unsigned char*>(&eax9));
    *ebx10 = reinterpret_cast<signed char>(*ebx11 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx8)));
    *eax9 = reinterpret_cast<unsigned char>(*eax9 + *reinterpret_cast<unsigned char*>(&eax9));
    tmp8_12 = reinterpret_cast<unsigned char>(edx13->f21 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx8)));
    cf14 = reinterpret_cast<uint1_t>(tmp8_12 < edx15->f21);
    edx16->f21 = tmp8_12;
    esp17 = reinterpret_cast<struct s700**>(esi18 + 4 + *eax9 + cf14);
    tmp8_19 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax9)));
    cf20 = reinterpret_cast<uint1_t>(tmp8_19 < *reinterpret_cast<unsigned char*>(&eax9));
    *reinterpret_cast<unsigned char*>(&eax9) = tmp8_19;
    eax21 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax9 + 0x80070) + cf20);
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx8)));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    tmp8_22 = reinterpret_cast<unsigned char>(edi6->f0 + dl23);
    cf24 = reinterpret_cast<uint1_t>(tmp8_22 < edi6->f0);
    edi6->f0 = tmp8_22;
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)))) + cf24);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax21) + reinterpret_cast<uint32_t>(eax21)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax21) + reinterpret_cast<uint32_t>(eax21)) ^ reinterpret_cast<uint32_t>(eax21);
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    esp25 = reinterpret_cast<struct s701*>(&(*esp17)->f4);
    ecx26 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx8) - 1);
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    edi6->f5 = reinterpret_cast<unsigned char>(edi6->f5 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *ebx27 = reinterpret_cast<unsigned char>(*ebx28 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<uint32_t>(eax21));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    eax29 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax21) | reinterpret_cast<unsigned char>(*eax21));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    if (__intrinsic()) {
        addr_1000479d_2:
        *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
        --eax29;
        *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
        goto addr_100047a3_3;
    } else {
        *reinterpret_cast<void**>(&eax29) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)) | reinterpret_cast<unsigned char>(*eax29))));
        if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax29)) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax29) == 0)) {
            addr_100047a3_3:
            *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
            eax30 = esp25->f0;
            *eax30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax30) + reinterpret_cast<signed char>(dl31));
            *ecx26 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx26) + reinterpret_cast<signed char>(dh32));
            *reinterpret_cast<void**>(&eax30) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax30))));
            *eax30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax30) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax30)));
            esp33 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp25->f4) + 4 + 1);
            *eax30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax30) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
            edi6->f4 = reinterpret_cast<unsigned char>(edi6->f4 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax30)));
            *ebx34 = reinterpret_cast<unsigned char>(*ebx35 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax30)));
            *eax30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax30) + reinterpret_cast<uint32_t>(eax30));
            *eax30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax30) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax30)));
            *eax30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax30) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax30)));
            eax36 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax30) | reinterpret_cast<unsigned char>(*eax30));
            *eax36 = reinterpret_cast<unsigned char>(*eax36 + *reinterpret_cast<unsigned char*>(&eax36));
        } else {
            --eax29;
            *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
            *edx37 = reinterpret_cast<unsigned char>(*edx38 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
            *ebx39 = reinterpret_cast<signed char>(*ebx40 + dl41);
            *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
            tmp8_42 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(g100070) + 8)));
            g100070 = tmp8_42;
            goto addr_1000479d_2;
        }
    }
    edi43 = reinterpret_cast<struct s702*>(&edi6->f1);
    eax44 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax36 + 0x4010a) + reinterpret_cast<uint1_t>(edi6->f0 < *reinterpret_cast<unsigned char*>(&eax36)));
    __asm__("enter 0x1303, 0x20");
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx45) + 1) = 21;
    *reinterpret_cast<void**>(&eax44) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44))));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    tmp8_46 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx26) + reinterpret_cast<signed char>(bl47));
    cf48 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_46) < reinterpret_cast<unsigned char>(*ecx26));
    *ecx26 = tmp8_46;
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44))) + cf48);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint32_t>(eax44)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax44) + reinterpret_cast<uint32_t>(eax44)) ^ reinterpret_cast<uint32_t>(eax44);
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    esp49 = reinterpret_cast<struct s703**>(reinterpret_cast<int32_t>(*esp33) + 4 + 1);
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    edi43->f4 = reinterpret_cast<unsigned char>(edi43->f4 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *ebx50 = reinterpret_cast<unsigned char>(*ebx51 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<uint32_t>(eax44));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    *eax44 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax44) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax44)));
    eax52 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax44) | reinterpret_cast<unsigned char>(*eax44));
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    *reinterpret_cast<void**>(&eax52) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    edx53 = reinterpret_cast<unsigned char*>(edx45 + *ebx54);
    *eax52 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax52) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    tmp8_55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx53) + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax52)));
    cf56 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_55) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx53) + 1)));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx53) + 1) = tmp8_55;
    eax57 = reinterpret_cast<struct s704*>(reinterpret_cast<uint32_t>(eax52 + 0xc0070) + cf56);
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax57->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax57->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax57->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    tmp8_58 = reinterpret_cast<unsigned char>(*edx53 + bl59);
    cf60 = reinterpret_cast<uint1_t>(tmp8_58 < *edx53);
    *edx53 = tmp8_58;
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax57->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57))) + cf60);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax57) + reinterpret_cast<uint32_t>(eax57)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax57) + reinterpret_cast<uint32_t>(eax57)) ^ reinterpret_cast<uint32_t>(eax57);
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax57->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    esp61 = &(*esp49)->f4;
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax57->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    eax57->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax57->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)));
    *reinterpret_cast<void**>(&eax57) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax57)) + 8);
    eax62 = &eax57->f65536;
    *eax62 = reinterpret_cast<unsigned char>(*eax62 + *reinterpret_cast<signed char*>(&eax62));
    eax63 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax62) | *eax62);
    tmp8_64 = reinterpret_cast<unsigned char>(*eax63 + *reinterpret_cast<signed char*>(&eax63));
    cf65 = reinterpret_cast<uint1_t>(tmp8_64 < *eax63);
    *eax63 = tmp8_64;
    __asm__("into ");
    eax66 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax63 + 0x40048) + cf65);
    *eax66 = reinterpret_cast<unsigned char>(*eax66 | *reinterpret_cast<unsigned char*>(&eax66));
    eax67 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax66) | reinterpret_cast<unsigned char>(*ecx26));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    edi43->f0 = g4010a16;
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx53) + 1)));
    *reinterpret_cast<void**>(&eax67) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67))));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    tmp8_68 = reinterpret_cast<unsigned char>(*ebx69 + bl70);
    cf71 = reinterpret_cast<uint1_t>(tmp8_68 < *ebx72);
    *ebx73 = tmp8_68;
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67))) + cf71);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax67) + reinterpret_cast<uint32_t>(eax67)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax67) + reinterpret_cast<uint32_t>(eax67)) ^ reinterpret_cast<uint32_t>(eax67);
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    esp74 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp61) + 4);
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    *reinterpret_cast<void**>(&eax67) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)) + 8);
    eax75 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax67) + reinterpret_cast<unsigned char>(*ecx26));
    *eax75 = reinterpret_cast<signed char>(*eax75 + *reinterpret_cast<signed char*>(&eax75));
    *eax75 = reinterpret_cast<signed char>(*eax75 + *reinterpret_cast<signed char*>(&eax75));
    *ebx76 = reinterpret_cast<unsigned char>(*ebx77 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    *eax75 = reinterpret_cast<signed char>(*eax75 + *reinterpret_cast<signed char*>(&eax75));
    tmp8_78 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx53) + 1)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&edx53)));
    eax79 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax75 + 0x40048) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_78) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx53) + 1))));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    esp80 = reinterpret_cast<struct s705**>(reinterpret_cast<int32_t>(esp74) + reinterpret_cast<unsigned char>(*eax79));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    __asm__("ficom dword [0xc0070]");
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax79) + reinterpret_cast<uint32_t>(eax79) + 32) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax79) + reinterpret_cast<uint32_t>(eax79) + 32) + bl81);
    *ecx26 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx26) + reinterpret_cast<unsigned char>(tmp8_78));
    *reinterpret_cast<void**>(&eax79) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79))));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    esp82 = reinterpret_cast<struct s706*>(&(*esp80)->f4);
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx26)));
    es83 = esp82->f0;
    esp84 = &esp82->f2;
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<uint32_t>(eax79));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<uint32_t>(eax79));
    *eax79 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax79) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax79)));
    eax85 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax79) | reinterpret_cast<unsigned char>(*eax79));
    *eax85 = reinterpret_cast<unsigned char>(*eax85 + *reinterpret_cast<unsigned char*>(&eax85));
    ecx86 = reinterpret_cast<uint32_t>(ecx26 - 1);
    if (ecx86) {
        tmp8_87 = reinterpret_cast<unsigned char>(*eax85 + *reinterpret_cast<signed char*>(&ecx86));
        cf88 = reinterpret_cast<uint1_t>(tmp8_87 < *eax85);
        *eax85 = tmp8_87;
        *reinterpret_cast<unsigned char*>(&eax85) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax85))) + cf88);
        *eax85 = reinterpret_cast<unsigned char>(*eax85 | *reinterpret_cast<unsigned char*>(&eax85));
        tmp32_89 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp84) + *eax85);
        cf90 = reinterpret_cast<uint1_t>(*eax85 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax85) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_89) < reinterpret_cast<uint32_t>(esp84))));
        *eax85 = reinterpret_cast<unsigned char>(*eax85 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax85) + cf90));
        eax91 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax85 + 0x1c0070) + cf90);
        *eax91 = reinterpret_cast<unsigned char>(*eax91 | *reinterpret_cast<unsigned char*>(&eax91));
        *eax91 = reinterpret_cast<unsigned char>(*eax91 + *reinterpret_cast<signed char*>(&ecx86));
        *eax91 = reinterpret_cast<unsigned char>(*eax91 + *reinterpret_cast<unsigned char*>(&eax91));
        tmp8_92 = reinterpret_cast<unsigned char>(*ebp93 + bl94);
        cf95 = reinterpret_cast<uint1_t>(tmp8_92 < *ebp96);
        *ebp97 = tmp8_92;
        *eax91 = reinterpret_cast<unsigned char>(*eax91 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax91) + reinterpret_cast<uint1_t>(*eax91 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax91) + cf95))));
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax91) + reinterpret_cast<uint32_t>(eax91)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax91) + reinterpret_cast<uint32_t>(eax91)) ^ reinterpret_cast<uint32_t>(eax91);
        tmp8_98 = reinterpret_cast<unsigned char>(*eax91 + *reinterpret_cast<unsigned char*>(&eax91));
        cf99 = reinterpret_cast<uint1_t>(tmp8_98 < *eax91);
        *eax91 = tmp8_98;
        esp100 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*tmp32_89) + 4);
        *eax91 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax91 + *reinterpret_cast<unsigned char*>(&eax91)) + cf99);
        *eax91 = reinterpret_cast<unsigned char>(*eax91 | *reinterpret_cast<unsigned char*>(&eax91));
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp100) - 2) = es83;
        g10000 = reinterpret_cast<unsigned char>(g10000 | *reinterpret_cast<unsigned char*>(&eax91));
        *eax91 = reinterpret_cast<unsigned char>(*eax91 + *reinterpret_cast<unsigned char*>(&eax91));
        eax101 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax91) | *eax91);
        *eax101 = reinterpret_cast<signed char>(*eax101 + *reinterpret_cast<signed char*>(&eax101));
        __asm__("cli ");
    } else {
        eax102 = eax85 - 1;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax102) + reinterpret_cast<uint32_t>(eax102)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax102) + reinterpret_cast<uint32_t>(eax102)) + *reinterpret_cast<unsigned char*>(&eax102));
        *eax102 = reinterpret_cast<unsigned char>(*eax102 | *reinterpret_cast<unsigned char*>(&eax102));
        eax103 = reinterpret_cast<signed char*>(eax102 - 1);
        *eax103 = reinterpret_cast<signed char>(*eax103 + *reinterpret_cast<signed char*>(&ecx86));
        *eax103 = reinterpret_cast<signed char>(*eax103 + *reinterpret_cast<signed char*>(&ecx86));
        *ebx104 = reinterpret_cast<signed char>(*ebx105 + *reinterpret_cast<signed char*>(&ecx86));
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax103) + reinterpret_cast<uint32_t>(eax103)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax103) + reinterpret_cast<uint32_t>(eax103)) + ecx86;
        goto 0x1000c815;
    }
}

struct s707 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

void fun_100049ff(uint32_t* ecx) {
    signed char* eax2;
    signed char* eax3;
    signed char bl4;
    unsigned char* eax5;
    signed char* eax6;
    unsigned char tmp8_7;
    signed char* eax8;
    signed char dh9;
    uint1_t cf10;
    unsigned char* eax11;
    unsigned char* eax12;
    struct s707* eax13;
    signed char al14;
    unsigned char al15;
    signed char* edx16;
    signed char* edx17;
    signed char ah18;
    unsigned char* eax19;
    signed char* eax20;
    void* eax21;
    unsigned char* eax22;
    unsigned char* ebx23;
    signed char* ebx24;
    unsigned char* eax25;

    *eax2 = reinterpret_cast<signed char>(*eax3 + bl4);
    *eax5 = reinterpret_cast<unsigned char>(*eax6 + *reinterpret_cast<unsigned char*>(&ecx));
    tmp8_7 = reinterpret_cast<unsigned char>(*eax8 + dh9);
    cf10 = reinterpret_cast<uint1_t>(tmp8_7 < *eax11);
    *eax12 = tmp8_7;
    *reinterpret_cast<unsigned char*>(&eax13) = reinterpret_cast<unsigned char>(al14 - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(al15 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf10))))));
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 | *reinterpret_cast<unsigned char*>(&eax13));
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 + *reinterpret_cast<unsigned char*>(&ecx));
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 + *reinterpret_cast<unsigned char*>(&eax13));
    *edx16 = reinterpret_cast<signed char>(*edx17 + ah18);
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 & *reinterpret_cast<unsigned char*>(&eax13));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax13) + reinterpret_cast<uint32_t>(eax13)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax13) + reinterpret_cast<uint32_t>(eax13)) ^ reinterpret_cast<uint32_t>(eax13);
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 + *reinterpret_cast<unsigned char*>(&eax13));
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 | *reinterpret_cast<unsigned char*>(&eax13));
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 | *reinterpret_cast<unsigned char*>(&eax13));
    eax13->f0 = reinterpret_cast<unsigned char>(eax13->f0 | *reinterpret_cast<unsigned char*>(&ecx));
    eax19 = &eax13->f65536;
    *eax19 = reinterpret_cast<unsigned char>(*eax19 + *reinterpret_cast<signed char*>(&eax19));
    eax20 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax19) | *eax19);
    *eax20 = reinterpret_cast<signed char>(*eax20 + *reinterpret_cast<signed char*>(&eax20));
    __asm__("into ");
    eax21 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax20) | *ecx);
    *reinterpret_cast<signed char*>(&eax21) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax21)));
    __asm__("salc ");
    eax22 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax21) - 1);
    *eax22 = reinterpret_cast<unsigned char>(*eax22 + *reinterpret_cast<unsigned char*>(&ecx));
    *eax22 = reinterpret_cast<unsigned char>(*eax22 + *reinterpret_cast<unsigned char*>(&ecx));
    *ebx23 = reinterpret_cast<unsigned char>(*ebx24 + *reinterpret_cast<unsigned char*>(&ecx));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<uint32_t>(eax22)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<uint32_t>(eax22)) + *reinterpret_cast<unsigned char*>(&ecx));
    __asm__("ficom word [edi]");
    eax25 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax22) | *eax22);
    *eax25 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax25 + *reinterpret_cast<signed char*>(&eax25))));
}

struct s708 {
    void* f0;
    signed char[65535] pad65536;
    signed char f65536;
};

struct s710 {
    signed char[4] pad4;
    signed char* f4;
};

struct s709 {
    unsigned char f0;
    signed char[3] pad4;
    struct s710* f4;
};

struct s711 {
    signed char f0;
    signed char f1;
};

struct s712 {
    unsigned char f0;
    signed char[9] pad10;
    unsigned char f10;
};

struct s713 {
    signed char[1] pad1;
    unsigned char f1;
};

signed char g5c007300;

signed char g7300;

void fun_10004ffb(void* cl) {
    unsigned char* eax2;
    signed char* eax3;
    unsigned char* eax4;
    signed char* eax5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    struct s708* eax9;
    void* eax10;
    void* tmp32_11;
    uint1_t cf12;
    void* tmp8_13;
    uint1_t cf14;
    void* esi15;
    void* esi16;
    signed char* eax17;
    unsigned char* eax18;
    void** eax19;
    uint32_t ecx20;
    unsigned char* edx21;
    signed char* edx22;
    signed char dl23;
    unsigned char* eax24;
    void** eax25;
    struct s709* edx26;
    void* dl27;
    signed char* ebx28;
    unsigned char dl29;
    unsigned char* ebx30;
    uint1_t cf31;
    void* esi32;
    unsigned char* ebx33;
    signed char* ebx34;
    void* ecx35;
    unsigned char* ebx36;
    signed char* ebx37;
    void** edi38;
    unsigned char* ebp39;
    signed char* ebp40;
    struct s711* esi41;
    unsigned char* ecx42;
    unsigned char tmp8_43;
    int1_t cf44;
    signed char* ebp45;
    signed char* ebp46;
    signed char dh47;
    void* tmp8_48;
    int1_t cf49;
    unsigned char tmp8_50;
    signed char* ebx51;
    int1_t cf52;
    unsigned char* ebx53;
    unsigned char* ebx54;
    signed char* ebx55;
    void** eax56;
    signed char dh57;
    signed char* ecx58;
    struct s712* ebp59;
    struct s713* ebp60;
    void* bl61;
    signed char* ebx62;
    signed char* ebx63;
    void* bl64;
    void* dh65;
    signed char* esi66;
    int32_t* eax67;
    signed char* ebx68;
    signed char* ebx69;
    signed char dh70;
    signed char** esp71;
    signed char* eax72;
    void* tmp8_73;
    void* dh74;
    int1_t cf75;
    void* esp76;
    unsigned char tmp8_77;
    signed char* ebx78;
    int1_t cf79;
    unsigned char* ebx80;
    unsigned char* ebx81;
    signed char* ebx82;
    unsigned char tmp8_83;
    int1_t cf84;
    void* esp85;
    unsigned char tmp8_86;
    signed char* ebx87;
    int1_t cf88;
    unsigned char* ebx89;
    unsigned char* ebx90;
    signed char* ebx91;
    signed char* ebx92;
    signed char** esp93;
    signed char dh94;
    signed char dh95;
    signed char* ebx96;
    signed char* ebx97;
    signed char* ebx98;
    signed char* ebx99;
    signed char* ebx100;
    signed char dh101;
    signed char dh102;
    signed char tmp8_103;
    signed char tmp8_104;
    signed char tmp8_105;
    signed char tmp8_106;
    unsigned char tmp8_107;
    int32_t ebx108;

    *eax2 = reinterpret_cast<unsigned char>(*eax3 + reinterpret_cast<unsigned char>(cl));
    *eax4 = reinterpret_cast<unsigned char>(*eax5 + reinterpret_cast<unsigned char>(cl));
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
    eax9 = reinterpret_cast<struct s708*>(reinterpret_cast<int32_t>(eax10) - 1);
    eax9->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    eax9->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    tmp32_11 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f0) + reinterpret_cast<int32_t>(eax9));
    cf12 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_11) < reinterpret_cast<unsigned char>(eax9->f0));
    eax9->f0 = tmp32_11;
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)))) + cf12);
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) ^ reinterpret_cast<unsigned char>(eax9->f0));
    tmp8_13 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    cf14 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_13) < reinterpret_cast<unsigned char>(eax9->f0));
    eax9->f0 = tmp8_13;
    eax9->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax9->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9))) + cf14);
    eax9->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax9->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)));
    esi15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi16) + 1);
    *reinterpret_cast<void**>(&eax9) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax9)) + 8);
    eax17 = &eax9->f65536;
    *eax17 = reinterpret_cast<signed char>(*eax17 + *reinterpret_cast<signed char*>(&eax17));
    eax18 = reinterpret_cast<unsigned char*>(eax17 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint32_t>(eax18)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint32_t>(eax18)) + *reinterpret_cast<unsigned char*>(&eax18));
    *eax18 = reinterpret_cast<unsigned char>(*eax18 | *reinterpret_cast<unsigned char*>(&eax18));
    eax19 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax18) | *eax18);
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    __asm__("salc ");
    *reinterpret_cast<void**>(&ecx20) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(cl) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(cl) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax19))))));
    *reinterpret_cast<void**>(&eax19) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19))));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)))));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx20)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *edx21 = reinterpret_cast<unsigned char>(*edx22 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax19) + reinterpret_cast<uint32_t>(eax19)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax19) + reinterpret_cast<uint32_t>(eax19)) + dl23);
    *reinterpret_cast<void**>(&eax19) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)) ^ reinterpret_cast<unsigned char>(*eax19));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *reinterpret_cast<void**>(&eax19) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)) + 8);
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<uint32_t>(eax19));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<uint32_t>(eax19));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    eax24 = reinterpret_cast<unsigned char*>(eax19 - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax24) + reinterpret_cast<uint32_t>(eax24)) + *reinterpret_cast<unsigned char*>(&eax24));
    *eax24 = reinterpret_cast<unsigned char>(*eax24 | *reinterpret_cast<unsigned char*>(&eax24));
    eax25 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax24) | *eax24);
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *reinterpret_cast<void**>(&edx26) = reinterpret_cast<void*>(reinterpret_cast<signed char>(dl27) - reinterpret_cast<unsigned char>(*ebx28 + reinterpret_cast<uint1_t>(dl29 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*ebx30)))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25)) & ecx20;
    cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(esi15) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax25))));
    esi32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi15) - (reinterpret_cast<unsigned char>(*eax25) + cf31));
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25))) + cf31);
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *ebx33 = reinterpret_cast<unsigned char>(*ebx34 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    ecx35 = reinterpret_cast<void*>(ecx20 + 1);
    edx26->f0 = reinterpret_cast<unsigned char>(edx26->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *ebx36 = reinterpret_cast<unsigned char>(*ebx37 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    edi38 = eax25;
    *ebp39 = reinterpret_cast<unsigned char>(*ebp40 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    esi41 = reinterpret_cast<struct s711*>(reinterpret_cast<uint32_t>(esi32) - 1);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) + 80) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) + 80) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *edi38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edi38) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx35)));
    ecx42 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(ecx35) - 1);
    esi41->f0 = reinterpret_cast<signed char>(esi41->f0 + *reinterpret_cast<signed char*>(&ecx42));
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) + 0x73) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25) + 0x73) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx42) + 1));
    tmp8_43 = reinterpret_cast<unsigned char>(*ecx42 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax25) + 1));
    cf44 = tmp8_43 < *ecx42;
    *ecx42 = tmp8_43;
    __asm__("arpl [eax], ax");
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    *eax25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    __asm__("popad ");
    *ebp45 = reinterpret_cast<signed char>(*ebp46 + dh47);
    *ecx42 = reinterpret_cast<unsigned char>(*ecx42 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx42) + 1));
    tmp8_48 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax25) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax25)));
    cf49 = reinterpret_cast<unsigned char>(tmp8_48) < reinterpret_cast<unsigned char>(*eax25);
    *eax25 = tmp8_48;
    tmp8_50 = reinterpret_cast<unsigned char>(*ebx51 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax25) + 1));
    cf52 = tmp8_50 < *ebx53;
    *ebx54 = tmp8_50;
    eax56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*eax25) * 0x790074);
    esi41->f0 = reinterpret_cast<signed char>(esi41->f0 + dh57);
    esi41->f0 = reinterpret_cast<signed char>(esi41->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx42) + 1));
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax56)));
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    ecx58 = reinterpret_cast<signed char*>(ecx42 - 1);
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    ebp59 = reinterpret_cast<struct s712*>(&ebp60->f1);
    *reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56)) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56))) + reinterpret_cast<signed char>(bl61));
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax56)));
    esi41->f0 = reinterpret_cast<signed char>(esi41->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx58) + 1));
    __asm__("arpl [eax], ax");
    __asm__("popad ");
    *ebx62 = reinterpret_cast<signed char>(*ebx63 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax56) + 1));
    __asm__("outsb ");
    *edi38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edi38) + reinterpret_cast<signed char>(bl64));
    __asm__("outsb ");
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<signed char>(dh65));
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax56)));
    *eax56 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax56) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax56)));
    *edi38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edi38) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx58)));
    esi66 = &esi41->f1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56) + 87) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax56) + reinterpret_cast<uint32_t>(eax56) + 87) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    *ecx58 = reinterpret_cast<signed char>(*ecx58 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax56)));
    ebp59->f0 = reinterpret_cast<unsigned char>(ebp59->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax56)));
    ebp59->f0 = reinterpret_cast<unsigned char>(ebp59->f0 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx58)));
    eax67 = reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(*eax56) * 0x720063);
    __asm__("outsd ");
    *ebx68 = reinterpret_cast<signed char>(*ebx69 + dh70);
    __asm__("outsd ");
    *esi66 = reinterpret_cast<signed char>(*esi66 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax67) + 1));
    esp71 = &edx26->f4->f4;
    *edi38 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edi38) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
    eax72 = reinterpret_cast<signed char*>(*eax67 * 0x64006e);
    while (1) {
        __asm__("outsd ");
        tmp8_73 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*edi38) + reinterpret_cast<signed char>(dh74));
        cf75 = reinterpret_cast<unsigned char>(tmp8_73) < reinterpret_cast<unsigned char>(*edi38);
        *edi38 = tmp8_73;
        esp76 = reinterpret_cast<void*>(*esp71 + 4);
        tmp8_77 = reinterpret_cast<unsigned char>(*ebx78 + *reinterpret_cast<signed char*>(&eax72));
        cf79 = tmp8_77 < *ebx80;
        *ebx81 = tmp8_77;
        *esi66 = reinterpret_cast<signed char>(*esi66 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx58) + 1));
        esp71 = reinterpret_cast<signed char**>(reinterpret_cast<uint32_t>(esp76) - 4);
        *esp71 = esi66;
        tmp8_83 = reinterpret_cast<unsigned char>(ebp59->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
        cf84 = tmp8_83 < ebp59->f0;
        ebp59->f0 = tmp8_83;
        while (1) {
            eax72 = reinterpret_cast<signed char*>(*eax72 * 0x6e006f);
            esp85 = reinterpret_cast<void*>(*esp71 + 4);
            tmp8_86 = reinterpret_cast<unsigned char>(*ebx87 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx26)));
            cf88 = tmp8_86 < *ebx89;
            *ebx90 = tmp8_86;
            ebp59->f0 = reinterpret_cast<unsigned char>(ebp59->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx58) + 1));
            esp93 = reinterpret_cast<signed char**>(reinterpret_cast<uint32_t>(esp85) - 4);
            *esp93 = eax72;
            edx26->f0 = reinterpret_cast<unsigned char>(edx26->f0 + dh94);
            __asm__("outsd ");
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax72) + reinterpret_cast<uint32_t>(eax72) + 0x65) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax72) + reinterpret_cast<uint32_t>(eax72) + 0x65) + dh95);
            *ebx96 = reinterpret_cast<signed char>(*ebx97 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax72) + reinterpret_cast<uint32_t>(eax72) + 85) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax72) + reinterpret_cast<uint32_t>(eax72) + 85) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            *ebx99 = reinterpret_cast<signed char>(*ebx100 + dh101);
            edx26->f0 = reinterpret_cast<unsigned char>(edx26->f0 + dh102);
            esp71 = reinterpret_cast<signed char**>(reinterpret_cast<uint32_t>(esp93) + 1);
            *ecx58 = reinterpret_cast<signed char>(*ecx58 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            __asm__("popad ");
            *eax72 = reinterpret_cast<signed char>(*eax72 + *reinterpret_cast<signed char*>(&eax72));
            tmp8_103 = reinterpret_cast<signed char>(g5c007300 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            g5c007300 = tmp8_103;
            tmp8_104 = reinterpret_cast<signed char>(g5c007300 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            g5c007300 = tmp8_104;
            tmp8_105 = reinterpret_cast<signed char>(g5c007300 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            g5c007300 = tmp8_105;
            tmp8_106 = reinterpret_cast<signed char>(g7300 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax72) + 1));
            g7300 = tmp8_106;
            *eax72 = reinterpret_cast<signed char>(*eax72 + *reinterpret_cast<signed char*>(&eax72));
            *eax72 = reinterpret_cast<signed char>(*eax72 + *reinterpret_cast<signed char*>(&eax72));
            tmp8_107 = reinterpret_cast<unsigned char>(ebp59->f10 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx58) + 1));
            cf84 = tmp8_107 < ebp59->f10;
            ebp59->f10 = tmp8_107;
            if (__intrinsic()) 
                break;
            *reinterpret_cast<struct s709**>(ebx108 - 0x53e264b3) = edx26;
        }
    }
}

void fun_10005195() {
    __asm__("hlt ");
}

void fun_100052ca(signed char cl) {
    unsigned char tmp8_2;
    unsigned char tmp8_3;
    unsigned char tmp8_4;
    unsigned char tmp8_5;

    __asm__("fst qword [edx+0xf015a79d]");
    if (reinterpret_cast<int32_t>(__zero_stack_offset()) - 1 < 0 == __intrinsic()) 
        goto 0x10005314;
    tmp8_2 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&g0)));
    *reinterpret_cast<unsigned char*>(&g0) = tmp8_2;
    tmp8_3 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&g0)));
    *reinterpret_cast<unsigned char*>(&g0) = tmp8_3;
    tmp8_4 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&g0)));
    *reinterpret_cast<unsigned char*>(&g0) = tmp8_4;
    tmp8_5 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&gc) + 3) + 15);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&gc) + 3) = tmp8_5;
}

void fun_10005cf1(unsigned char cl) {
    signed char* eax2;
    unsigned char al3;
    unsigned char tmp8_4;
    unsigned char* eax5;
    void* esp6;
    unsigned char tmp8_7;
    uint1_t cf8;
    unsigned char tmp8_9;
    uint1_t cf10;
    void* eax11;
    unsigned char* eax12;
    int16_t* esp13;
    int16_t es14;
    unsigned char* esi15;
    unsigned char* esi16;
    int16_t es17;
    int32_t ebx18;
    int32_t ebx19;
    unsigned char bl20;
    signed char* eax21;

    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(al3))));
    tmp8_4 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax2) + *eax2)));
    *reinterpret_cast<unsigned char*>(&eax5) = tmp8_4;
    __asm__("retf 0x46ff");
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(__return_address()) + 4)) + 4);
    tmp8_7 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5)) + reinterpret_cast<uint1_t>(tmp8_4 < *reinterpret_cast<unsigned char*>(&eax2)));
    cf8 = reinterpret_cast<uint1_t>(tmp8_7 < *eax5);
    *eax5 = tmp8_7;
    tmp8_9 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax5 + *reinterpret_cast<unsigned char*>(&eax5)) + cf8);
    cf10 = reinterpret_cast<uint1_t>(tmp8_9 < *eax5);
    *eax5 = tmp8_9;
    *reinterpret_cast<unsigned char*>(&eax11) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + *eax5) + cf10);
    eax12 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax11) - 1);
    *reinterpret_cast<unsigned char*>(&eax12) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax12) + *eax12)));
    __asm__("enter 0x5bff, 0x6");
    esp13 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp6) - 2);
    *esp13 = es14;
    *esi15 = reinterpret_cast<unsigned char>(*esi16 | *reinterpret_cast<unsigned char*>(&eax12));
    *(esp13 - 1) = es17;
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | cl);
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | cl);
    *eax12 = reinterpret_cast<unsigned char>(*eax12 | cl);
    *reinterpret_cast<unsigned char*>(ebx18 - 79) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx19 - 79) | bl20);
    eax21 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax12) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax12) + reinterpret_cast<int32_t>(eax12))));
    *eax21 = reinterpret_cast<signed char>(*eax21 + *reinterpret_cast<signed char*>(&eax21));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax21) + reinterpret_cast<int32_t>(eax21) - 70) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax21) + reinterpret_cast<int32_t>(eax21) - 70) + cl);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax21) + reinterpret_cast<int32_t>(eax21) + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax21) + reinterpret_cast<int32_t>(eax21) + 8) - 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax21) + reinterpret_cast<int32_t>(eax21) - 6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax21) + reinterpret_cast<int32_t>(eax21) - 6) - 1);
}

struct s714 {
    unsigned char f0;
    uint32_t f1;
};

struct s715 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s716 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_10005e6b(struct s714* ecx) {
    unsigned char al2;
    signed char dl3;
    unsigned char tmp8_4;
    int32_t esi5;
    signed char ah6;
    uint1_t cf7;
    int32_t esi8;
    int32_t esi9;
    int32_t edx10;
    int32_t eax11;
    int32_t edx12;
    int32_t eax13;
    int32_t edx14;
    signed char* edx15;
    signed char* edx16;
    signed char dl17;
    void* tmp32_18;
    signed char* eax19;
    signed char* eax20;
    uint32_t eax21;
    signed char dh22;
    uint32_t eax23;
    signed char* edx24;
    signed char* edx25;
    signed char dl26;
    unsigned char tmp8_27;
    int32_t edx28;
    uint1_t cf29;
    int32_t edx30;
    int32_t edx31;
    unsigned char* edx32;
    signed char dl33;
    void* edx34;
    signed char bh35;
    unsigned char tmp8_36;
    uint1_t cf37;
    signed char* ebx38;
    signed char* ebx39;
    unsigned char* eax40;
    void** esp41;
    struct s715* edx42;
    uint32_t* ecx43;
    unsigned char tmp8_44;
    uint1_t cf45;
    struct s716* ecx46;
    unsigned char* edx47;
    unsigned char* ecx48;
    unsigned char tmp8_49;
    uint1_t cf50;
    unsigned char* ebx51;
    signed char* ebx52;
    uint32_t* eax53;
    int32_t eax54;

    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 ^ al2);
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 + dl3);
    tmp8_4 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi5 - 11) + ah6);
    cf7 = reinterpret_cast<uint1_t>(tmp8_4 < *reinterpret_cast<unsigned char*>(esi8 - 11));
    *reinterpret_cast<unsigned char*>(esi9 - 11) = tmp8_4;
    *reinterpret_cast<uint32_t*>(edx10 + eax11) = *reinterpret_cast<int32_t*>(edx12 + eax13) + edx14 + cf7;
    *edx15 = reinterpret_cast<signed char>(*edx16 + dl17);
    tmp32_18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(__zero_stack_offset()) + reinterpret_cast<uint32_t>(__zero_stack_offset()));
    *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *eax19) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_18) < reinterpret_cast<uint32_t>(__zero_stack_offset())));
    eax20 = reinterpret_cast<signed char*>(eax21 & 0x3200115c);
    ecx->f0 = reinterpret_cast<unsigned char>(~ecx->f0);
    *reinterpret_cast<signed char*>(&eax20) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax20) + 2);
    *eax20 = reinterpret_cast<signed char>(*eax20 + dh22);
    *reinterpret_cast<signed char*>(&eax20) = g8120000;
    eax23 = reinterpret_cast<uint32_t>(eax20) & 0x214115c;
    *edx24 = reinterpret_cast<signed char>(*edx25 + dl26);
    tmp8_27 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(edx28 - 11) + *reinterpret_cast<unsigned char*>(&eax23));
    cf29 = reinterpret_cast<uint1_t>(tmp8_27 < *reinterpret_cast<unsigned char*>(edx30 - 11));
    *reinterpret_cast<unsigned char*>(edx31 - 11) = tmp8_27;
    *reinterpret_cast<unsigned char*>(&edx32) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(dl33 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx34) + eax23)) + cf29);
    *edx32 = reinterpret_cast<unsigned char>(*edx32 + *reinterpret_cast<unsigned char*>(&edx32));
    *edx32 = reinterpret_cast<unsigned char>(*edx32 + bh35);
    ecx->f0 = reinterpret_cast<unsigned char>(ecx->f0 ^ *reinterpret_cast<unsigned char*>(&eax23));
    tmp8_36 = reinterpret_cast<unsigned char>(ecx->f0 + *reinterpret_cast<unsigned char*>(&edx32));
    cf37 = reinterpret_cast<uint1_t>(tmp8_36 < ecx->f0);
    ecx->f0 = tmp8_36;
    *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) + 2) + cf37);
    *edx32 = reinterpret_cast<unsigned char>(*edx32 + *reinterpret_cast<unsigned char*>(&edx32));
    *edx32 = reinterpret_cast<unsigned char>(*edx32 + eax23);
    *ebx38 = reinterpret_cast<signed char>(*ebx39 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    eax40 = reinterpret_cast<unsigned char*>(eax23 | 0x40026);
    *eax40 = reinterpret_cast<unsigned char>(*eax40 + reinterpret_cast<uint32_t>(eax40));
    esp41 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(tmp32_18) - 4);
    *reinterpret_cast<void***>(esp41) = esp41;
    *reinterpret_cast<uint16_t*>(&edx42) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax40) % static_cast<int16_t>(reinterpret_cast<signed char>(*eax40)));
    *reinterpret_cast<uint16_t*>(&eax40) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax40) / static_cast<int16_t>(reinterpret_cast<signed char>(*eax40)));
    ecx43 = &ecx->f1;
    tmp8_44 = reinterpret_cast<unsigned char>(*eax40 + *reinterpret_cast<unsigned char*>(&eax40));
    cf45 = reinterpret_cast<uint1_t>(tmp8_44 < *eax40);
    *eax40 = tmp8_44;
    *ecx43 = *ecx43 + reinterpret_cast<uint32_t>(eax40) + cf45;
    *reinterpret_cast<unsigned char*>(&eax40) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax40) + *eax40);
    ecx46 = reinterpret_cast<struct s716*>(reinterpret_cast<int32_t>(ecx43) - g40026);
    *eax40 = reinterpret_cast<unsigned char>(*eax40 + reinterpret_cast<uint32_t>(eax40));
    edx47 = &edx42->f1;
    *reinterpret_cast<uint16_t*>(&edx47) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax40) % static_cast<int16_t>(reinterpret_cast<signed char>(*eax40)));
    *reinterpret_cast<uint16_t*>(&eax40) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax40) / static_cast<int16_t>(reinterpret_cast<signed char>(*eax40)));
    ecx48 = &ecx46->f1;
    tmp8_49 = reinterpret_cast<unsigned char>(*eax40 + *reinterpret_cast<unsigned char*>(&eax40));
    cf50 = reinterpret_cast<uint1_t>(tmp8_49 < *eax40);
    *eax40 = tmp8_49;
    *eax40 = reinterpret_cast<unsigned char>(*eax40 + reinterpret_cast<uint32_t>(eax40) + cf50);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx47) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx47) + 1) | *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx48) + 1));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<uint32_t>(eax40)) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx47) + reinterpret_cast<uint32_t>(eax40)) + reinterpret_cast<int32_t>(edx47));
    *edx47 = reinterpret_cast<unsigned char>(*edx47 + *reinterpret_cast<signed char*>(&edx47));
    *edx47 = reinterpret_cast<unsigned char>(*edx47 + reinterpret_cast<uint32_t>(eax40));
    *ebx51 = reinterpret_cast<unsigned char>(*ebx52 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx48) + 1));
    eax53 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax40) | 0x80026);
    *eax53 = *eax53 + reinterpret_cast<uint32_t>(eax53);
    eax54 = *reinterpret_cast<int16_t*>(&eax53);
    __asm__("sti ");
    *ecx48 = reinterpret_cast<unsigned char>(*ecx48 ^ *reinterpret_cast<unsigned char*>(&eax54));
    *ecx48 = reinterpret_cast<unsigned char>(*ecx48 + *reinterpret_cast<signed char*>(&edx47));
    __asm__("hlt ");
}

unsigned char g400115c;

void fun_100068c1(signed char cl) {
    unsigned char ah2;
    int32_t edx3;
    int32_t eax4;
    int32_t edx5;
    int32_t eax6;
    int32_t edx7;
    signed char* edx8;
    signed char* edx9;
    signed char dl10;
    signed char* edx11;
    signed char* edx12;

    g400115c = reinterpret_cast<unsigned char>(g400115c | ah2);
    __asm__("out dx, al");
    *reinterpret_cast<uint32_t*>(edx3 + eax4) = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(edx5 + eax6) + edx7);
    *edx8 = reinterpret_cast<signed char>(*edx9 + dl10);
    *edx11 = reinterpret_cast<signed char>(*edx12 + cl);
}

unsigned char g4004044;

struct s717 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s719 {
    signed char[28] pad28;
    unsigned char f28;
};

struct s718 {
    signed char[4] pad4;
    struct s719* f4;
};

struct s720 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s721 {
    unsigned char f0;
    unsigned char f1;
    signed char[90] pad92;
    int32_t f92;
};

struct s722 {
    unsigned char f0;
    signed char[5] pad6;
    int32_t f6;
    signed char[82] pad92;
    unsigned char f92;
};

struct s723 {
    unsigned char f0;
    signed char[291190526] pad291190527;
    signed char f291190527;
};

struct s724 {
    unsigned char f0;
    signed char[91] pad92;
    int32_t f92;
};

struct s725 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s726 {
    int32_t f0;
    int32_t f4;
};

void fun_100068ea(void** ecx) {
    uint32_t eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    uint1_t cf6;
    void* tmp8_7;
    void* dl8;
    signed char* edx9;
    signed char* edx10;
    signed char dl11;
    void* tmp32_12;
    int32_t edi13;
    void* ebx14;
    uint1_t cf15;
    int32_t edi16;
    int32_t edi17;
    void** eax18;
    unsigned char tmp8_19;
    signed char* edx20;
    signed char* edx21;
    signed char dl22;
    unsigned char* edx23;
    signed char* edx24;
    signed char* ebx25;
    signed char* ebx26;
    signed char bl27;
    signed char* ebx28;
    void* bl29;
    int32_t ebx30;
    signed char* edx31;
    signed char* edx32;
    signed char dl33;
    unsigned char tmp8_34;
    signed char* edx35;
    signed char* edx36;
    signed char dl37;
    unsigned char* edx38;
    signed char* edx39;
    signed char dl40;
    signed char* ebx41;
    signed char* edx42;
    signed char* edx43;
    signed char dl44;
    void** eax45;
    void* tmp8_46;
    uint1_t cf47;
    struct s717* esi48;
    void* esi49;
    void** eax50;
    void* tmp32_51;
    uint1_t cf52;
    struct s718* v53;
    struct s718* ebp54;
    uint48_t v55;
    struct s718* ebp56;
    void* es57;
    void* ebx58;
    struct s720* ebx59;
    struct s721* esi60;
    struct s719** esp61;
    void* al62;
    void* tmp8_63;
    void* al64;
    void* tmp8_65;
    uint1_t cf66;
    void* tmp8_67;
    uint1_t cf68;
    void* tmp8_69;
    uint1_t cf70;
    struct s719* ebx71;
    int16_t* esp72;
    int16_t es73;
    int16_t* esp74;
    int16_t es75;
    int16_t* esp76;
    int16_t es77;
    int32_t* edx78;
    int32_t* edx79;
    signed char* edi80;
    signed char* edi81;
    signed char dl82;
    int32_t* esp83;
    int32_t ebp84;
    int32_t* esp85;
    int32_t ebp86;
    void* tmp32_87;
    uint1_t cf88;
    int16_t* esp89;
    int16_t es90;
    void** esp91;
    void* ebp92;
    void* ss93;
    int32_t* esp94;
    int32_t ebp95;
    struct s722** esp96;
    struct s722* es97;
    struct s722* ebx98;
    void** esp99;
    struct s723* edx100;
    void* edx101;
    struct s724* esi102;
    void* esp103;
    int32_t* esp104;
    void** eax105;
    int16_t* esp106;
    int16_t es107;
    int16_t* esp108;
    int16_t es109;
    void* tmp8_110;
    uint1_t cf111;
    struct s725* ebx112;
    unsigned char tmp8_113;
    uint1_t cf114;
    void** eax115;
    signed char* ecx116;
    signed char* eax117;
    unsigned char al118;
    unsigned char tmp8_119;
    uint32_t esi120;
    struct s726* esp121;
    unsigned char* eax122;
    int32_t* esp123;
    signed char* ebx124;
    void** eax125;
    void* tmp8_126;
    uint1_t cf127;

    *reinterpret_cast<signed char*>(&eax2) = reinterpret_cast<signed char>(al3 + *eax4);
    eax5 = reinterpret_cast<signed char*>(eax2 & 0xff004044);
    cf6 = 0;
    if (reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(__intrinsic())))) {
        tmp8_7 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(dl8));
        cf6 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_7) < reinterpret_cast<unsigned char>(*ecx));
        *ecx = tmp8_7;
    }
    *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax5) + 2) + cf6);
    *edx9 = reinterpret_cast<signed char>(*edx10 + dl11);
    tmp32_12 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ecx[edi13 * 8]) + reinterpret_cast<int32_t>(ebx14));
    cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_12) < reinterpret_cast<unsigned char>(ecx[edi16 * 8]));
    ecx[edi17 * 8] = tmp32_12;
    *reinterpret_cast<unsigned char*>(&ecx) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx) + *eax5) + cf15);
    eax18 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax5) & 0x200125c);
    tmp8_19 = reinterpret_cast<unsigned char>(g4004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax18) + 1));
    g4004044 = tmp8_19;
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<uint32_t>(eax18));
    *edx20 = reinterpret_cast<signed char>(*edx21 + dl22);
    *edx23 = reinterpret_cast<unsigned char>(*edx24 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *ebx25 = reinterpret_cast<signed char>(*ebx26 + bl27);
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint32_t>(eax18)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint32_t>(eax18)) + *reinterpret_cast<unsigned char*>(&ecx));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *reinterpret_cast<void**>(&ebx28) = reinterpret_cast<void*>(reinterpret_cast<signed char>(bl29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(ebx30 - 73)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *reinterpret_cast<void**>(&eax18) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18))));
    *edx31 = reinterpret_cast<signed char>(*edx32 + dl33);
    g200125c = 0xff;
    tmp8_34 = reinterpret_cast<unsigned char>(g4004044 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax18) + 1));
    g4004044 = tmp8_34;
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<uint32_t>(eax18));
    *edx35 = reinterpret_cast<signed char>(*edx36 + dl37);
    *edx38 = reinterpret_cast<unsigned char>(*edx39 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *ebx28 = reinterpret_cast<signed char>(*ebx28 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx28)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint32_t>(eax18)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax18) + reinterpret_cast<uint32_t>(eax18)) + dl40);
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *reinterpret_cast<void**>(&ebx41) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx28)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(ebx28 - 73)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *reinterpret_cast<void**>(&eax18) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18))));
    *edx42 = reinterpret_cast<signed char>(*edx43 + dl44);
    g200115c = 0xff;
    *ebx41 = reinterpret_cast<signed char>(*ebx41 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    eax45 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax18) | 0x40026);
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + reinterpret_cast<uint32_t>(eax45));
    tmp8_46 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + reinterpret_cast<unsigned char>(*eax45));
    cf47 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_46) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    *reinterpret_cast<void**>(&eax45) = tmp8_46;
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax45) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + cf47))));
    esi48 = reinterpret_cast<struct s717*>(reinterpret_cast<int32_t>(esi49) + reinterpret_cast<unsigned char>(*eax45));
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45))));
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + reinterpret_cast<uint32_t>(eax45));
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + 2);
    *eax45 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax45) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)));
    *reinterpret_cast<void**>(&eax45) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax45)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx41)));
    eax50 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<uint32_t>(eax45))());
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    tmp32_51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    cf52 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_51) < reinterpret_cast<unsigned char>(*eax50));
    *eax50 = tmp32_51;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) < reinterpret_cast<unsigned char>(1 + cf52))));
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    v53 = ebp54;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) | reinterpret_cast<unsigned char>(*eax50));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    *reinterpret_cast<struct s718**>(reinterpret_cast<int32_t>(&v55) + 2) = ebp56;
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    *reinterpret_cast<void**>(&v55) = es57;
    ebx58 = *reinterpret_cast<void**>(&v55);
    *reinterpret_cast<struct s718**>(reinterpret_cast<int32_t>(&v55) + 2) = v53;
    ebx59 = reinterpret_cast<struct s720*>(reinterpret_cast<int16_t>(ebx58) + reinterpret_cast<unsigned char>(*eax50));
    ebx59->f92 = reinterpret_cast<unsigned char>(ebx59->f92 + *reinterpret_cast<unsigned char*>(&ecx));
    esi60 = reinterpret_cast<struct s721*>(&esi48->f1);
    esp61 = &(*reinterpret_cast<struct s718**>(reinterpret_cast<int32_t>(&v55) + 2))->f4;
    al62 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50))));
    tmp8_63 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al62)));
    *reinterpret_cast<void**>(&eax50) = tmp8_63;
    al64 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_63) < reinterpret_cast<unsigned char>(al62)));
    __asm__("into ");
    esi60->f92 = esi60->f92 + 1;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al64)))));
    tmp8_65 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50))));
    cf66 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_65) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *reinterpret_cast<void**>(&eax50) = tmp8_65;
    __asm__("salc ");
    esi60->f92 = esi60->f92 + 1;
    tmp8_67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50))) + cf66);
    cf68 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_67) < reinterpret_cast<unsigned char>(*eax50));
    *eax50 = tmp8_67;
    tmp8_69 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50))) + cf68);
    cf70 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_69) < reinterpret_cast<unsigned char>(*eax50));
    *eax50 = tmp8_69;
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50) + cf70);
    __asm__("into ");
    __asm__("cli ");
    ebx71 = *esp61;
    esp72 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp61 + 1) - 2);
    *esp72 = es73;
    esp74 = esp72 - 1;
    *esp74 = es75;
    esi60->f0 = reinterpret_cast<unsigned char>(esi60->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    esp76 = esp74 - 1;
    *esp76 = es77;
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) | *reinterpret_cast<unsigned char*>(&ecx));
    ebx71->f28 = reinterpret_cast<unsigned char>(ebx71->f28 | *reinterpret_cast<unsigned char*>(&ebx71));
    *edx78 = *edx79 + reinterpret_cast<int32_t>(eax50);
    *edi80 = reinterpret_cast<signed char>(*edi81 + dl82);
    esp83 = reinterpret_cast<int32_t*>(esp76 - 2);
    *esp83 = ebp84;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    esp85 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp83) + 2 - 4);
    *esp85 = ebp86;
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    tmp32_87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    cf88 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_87) < reinterpret_cast<unsigned char>(*eax50));
    *eax50 = tmp32_87;
    esp89 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp85) - 2);
    *esp89 = es90;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) - reinterpret_cast<unsigned char>(1 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) < reinterpret_cast<unsigned char>(1 + cf88))));
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    esp91 = reinterpret_cast<void**>(esp89 + 2 + 1 - 2);
    *esp91 = ebp92;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) | reinterpret_cast<unsigned char>(*eax50));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    ss93 = *esp91;
    esp94 = reinterpret_cast<int32_t*>(esp91 + 1 - 2);
    *esp94 = ebp95;
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax50) + reinterpret_cast<int32_t>(eax50));
    esp96 = reinterpret_cast<struct s722**>(reinterpret_cast<int32_t>(esp94) - 2);
    *esp96 = es97;
    ebx98 = *esp96;
    esp99 = reinterpret_cast<void**>(esp96 + 2 - 1);
    *esp99 = ss93;
    edx100 = reinterpret_cast<struct s723*>(reinterpret_cast<int32_t>(edx101) + reinterpret_cast<unsigned char>(*eax50));
    ebx98->f92 = reinterpret_cast<unsigned char>(ebx98->f92 + *reinterpret_cast<unsigned char*>(&ecx));
    esi102 = reinterpret_cast<struct s724*>(&esi60->f1);
    esp103 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp99) + 4);
    __asm__("into ");
    esi102->f92 = esi102->f92 + 1;
    __asm__("salc ");
    esp104 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp103) - 4);
    *esp104 = 0x10006a0c;
    eax105 = reinterpret_cast<void**>(ebx98->f6());
    esp106 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp104 + 1) - 2);
    *esp106 = es107;
    esi102->f0 = reinterpret_cast<unsigned char>(esi102->f0 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    esp108 = esp106 - 1;
    *esp108 = es109;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(ebx98) - 73) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(ebx98) - 73) | *reinterpret_cast<unsigned char*>(&ebx98));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    tmp8_110 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    cf111 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_110) < reinterpret_cast<unsigned char>(*eax105));
    *eax105 = tmp8_110;
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105))) + cf111);
    *reinterpret_cast<unsigned char*>(&ebx98->f0) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx98->f0) + *reinterpret_cast<unsigned char*>(&ebx98));
    ebx112 = reinterpret_cast<struct s725*>(reinterpret_cast<int16_t>(ebx98) + reinterpret_cast<unsigned char>(*eax105));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ebx112)));
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    tmp8_113 = reinterpret_cast<unsigned char>(ebx112->f92 + *reinterpret_cast<unsigned char*>(&ecx));
    cf114 = reinterpret_cast<uint1_t>(tmp8_113 < ebx112->f92);
    ebx112->f92 = tmp8_113;
    eax115 = eax105 - 1;
    ecx116 = reinterpret_cast<signed char*>(ecx - 1);
    *eax115 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax115) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax115)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax115) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax115)) + cf114))));
    *eax115 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax115) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax115)));
    eax117 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax115) + reinterpret_cast<unsigned char>(*eax115));
    al118 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax117)));
    tmp8_119 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al118));
    *reinterpret_cast<unsigned char*>(&eax117) = tmp8_119;
    *reinterpret_cast<unsigned char*>(&eax117) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax117) + *eax117) + reinterpret_cast<uint1_t>(tmp8_119 < al118));
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax117) + reinterpret_cast<uint32_t>(eax117)) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax117) + reinterpret_cast<uint32_t>(eax117)) - 1;
    *reinterpret_cast<unsigned char*>(&eax117) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax117)));
    *reinterpret_cast<unsigned char*>(&eax117) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax117) + *eax117)));
    esi120 = reinterpret_cast<uint32_t>(esi102) - 1;
    esp121 = reinterpret_cast<struct s726*>(reinterpret_cast<int32_t>(esp108) + 1 - 4);
    esp121->f0 = 0x10006a41;
    eax122 = reinterpret_cast<unsigned char*>(*eax117());
    esp123 = &esp121->f4;
    *eax122 = reinterpret_cast<unsigned char>(*eax122 + *reinterpret_cast<signed char*>(&edx100));
    *ecx116 = reinterpret_cast<signed char>(*ecx116 + *reinterpret_cast<signed char*>(&edx100));
    *reinterpret_cast<signed char*>(eax122 - 6) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax122 - 6) + *reinterpret_cast<signed char*>(&ecx116));
    *reinterpret_cast<signed char*>(*esp123 - 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(*esp123 - 1) + *reinterpret_cast<signed char*>(&edx100));
    ebx124 = *reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp123 + 1) - 1);
    *eax122 = reinterpret_cast<unsigned char>(*eax122 | *reinterpret_cast<unsigned char*>(&eax122));
    *eax122 = reinterpret_cast<unsigned char>(*eax122 + *reinterpret_cast<unsigned char*>(&eax122));
    *eax122 = reinterpret_cast<unsigned char>(*eax122 | *reinterpret_cast<unsigned char*>(&eax122));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx100) + 0x115b36ff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx100) + 0x115b36ff) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx124) + 1));
    *reinterpret_cast<signed char*>(esi120 + 0x21411ff) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(esi120 + 0x21411ff) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx124) + 1));
    *reinterpret_cast<unsigned char*>(edx100) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx100) + *reinterpret_cast<signed char*>(&edx100));
    *reinterpret_cast<unsigned char*>(edx100) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx100) + reinterpret_cast<uint32_t>(eax122));
    *ebx124 = reinterpret_cast<signed char>(*ebx124 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx116) + 1));
    eax125 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax122) | 0x40026);
    *eax125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<uint32_t>(eax125));
    *reinterpret_cast<void**>(&eax125) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)) + reinterpret_cast<unsigned char>(*eax125))));
    *eax125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)));
    tmp8_126 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)));
    cf127 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_126) < reinterpret_cast<unsigned char>(*eax125));
    *eax125 = tmp8_126;
    *eax125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125))) + cf127);
    *eax125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<uint32_t>(eax125));
    *eax125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)));
    *reinterpret_cast<void**>(&eax125) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)) | reinterpret_cast<unsigned char>(*eax125));
    *reinterpret_cast<void**>(&eax125) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)) + reinterpret_cast<unsigned char>(*eax125));
    *eax125 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax125) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax125)));
}

signed char* fun_14038808();

struct s727 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s728 {
    signed char[92] pad92;
    signed char f92;
};

struct s729 {
    signed char[8] pad8;
    signed char f8;
};

struct s730 {
    signed char[8] pad8;
    int32_t f8;
};

struct s731 {
    signed char f0;
    signed char[91] pad92;
    signed char f92;
};

signed char* g4c5be6;

struct s735 {
    signed char[4] pad4;
    struct s733* f4;
};

struct s734 {
    signed char[4] pad4;
    struct s735* f4;
};

struct s733 {
    signed char[4] pad4;
    struct s734* f4;
};

struct s732 {
    int32_t f0;
    struct s733* f4;
};

unsigned char g2508115c;

unsigned char ga00115c;

unsigned char g80c115c;

struct s736 {
    signed char[92] pad92;
    unsigned char f92;
};

struct s738 {
    signed char[4] pad4;
    void** f4;
};

struct s737 {
    void** f0;
    struct s738* f4;
};

struct s739 {
    signed char[22] pad22;
    signed char f22;
    signed char[69] pad92;
    unsigned char f92;
};

unsigned char g4115beb;

struct s740 {
    signed char[76] pad76;
    signed char f76;
};

struct s741 {
    signed char[76] pad76;
    signed char f76;
};

struct s742 {
    signed char[76] pad76;
    signed char f76;
};

struct s743 {
    signed char[76] pad76;
    signed char f76;
};

void fun_10006c99(signed char* ecx) {
    unsigned char* esi2;
    unsigned char* esi3;
    unsigned char al4;
    unsigned char* esi5;
    unsigned char* esi6;
    unsigned char al7;
    void* v8;
    int16_t es9;
    unsigned char* esi10;
    unsigned char* esi11;
    unsigned char al12;
    int16_t es13;
    int32_t eax14;
    int32_t eax15;
    int32_t eax16;
    int32_t eax17;
    signed char* eax18;
    signed char bl19;
    struct s727* ebx20;
    struct s728* ebx21;
    signed char* eax22;
    int32_t ecx23;
    signed char* edi24;
    signed char* esi25;
    struct s729* edi26;
    void* edi27;
    struct s730* ebx28;
    unsigned char* eax29;
    struct s731** esp30;
    unsigned char tmp8_31;
    uint1_t cf32;
    struct s731* ebx33;
    unsigned char* eax34;
    signed char dh35;
    signed char* ecx36;
    void** eax37;
    int32_t* ecx38;
    void* al39;
    void* tmp8_40;
    int32_t* edx41;
    signed char dl42;
    signed char** esp43;
    signed char* ebx44;
    struct s732* esp45;
    unsigned char* eax46;
    struct s733** esp47;
    struct s734** esp48;
    uint32_t* eax49;
    struct s735** esp50;
    unsigned char tmp32_51;
    uint1_t cf52;
    unsigned char tmp32_53;
    uint1_t cf54;
    signed char* eax55;
    signed char* eax56;
    signed char* eax57;
    signed char* eax58;
    signed char* eax59;
    struct s735** esp60;
    signed char* eax61;
    struct s733** esp62;
    unsigned char cl63;
    signed char* eax64;
    unsigned char* eax65;
    struct s735** esp66;
    unsigned char* tmp32_67;
    unsigned char* eax68;
    struct s733** esp69;
    void** eax70;
    void* tmp8_71;
    uint1_t cf72;
    struct s736** esp73;
    int32_t ebp74;
    int32_t ebp75;
    struct s736* ebx76;
    void** esp77;
    void* ss78;
    uint32_t ecx79;
    void* al80;
    void* tmp8_81;
    struct s737* esp82;
    void* tmp8_83;
    uint1_t cf84;
    void** eax85;
    void*** esp86;
    void** eax87;
    uint32_t ecx88;
    void* al89;
    void* tmp8_90;
    unsigned char ch91;
    void** ebx92;
    unsigned char tmp8_93;
    void* tmp8_94;
    uint1_t cf95;
    uint32_t* eax96;
    struct s739* ebx97;
    void* esp98;
    void** eax99;
    void* tmp8_100;
    uint1_t cf101;
    unsigned char tmp8_102;
    void* tmp8_103;
    uint1_t cf104;
    void** eax105;
    void* tmp32_106;
    uint1_t cf107;
    uint32_t ecx108;
    void* al109;
    void* tmp8_110;
    int32_t* esp111;
    int32_t ebx112;
    struct s740* ebp113;
    struct s741* ebp114;
    struct s742* ebp115;
    struct s743* ebp116;
    signed char dh117;
    void* tmp8_118;
    uint1_t cf119;
    void** eax120;
    unsigned char tmp8_121;
    uint1_t cf122;
    unsigned char* eax123;

    *esi2 = reinterpret_cast<unsigned char>(*esi3 | al4);
    *esi5 = reinterpret_cast<unsigned char>(*esi6 | al7);
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v8) + 2) = es9;
    *esi10 = reinterpret_cast<unsigned char>(*esi11 | al12);
    *reinterpret_cast<int16_t*>(&v8) = es13;
    *reinterpret_cast<unsigned char*>(eax14 + eax15 - 69) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax16 + eax17 - 69) | *reinterpret_cast<unsigned char*>(&ecx));
    eax18 = fun_14038808();
    *ecx = reinterpret_cast<signed char>(*ecx + bl19);
    *eax18 = reinterpret_cast<signed char>(*eax18 + *reinterpret_cast<signed char*>(&eax18));
    *ecx = reinterpret_cast<signed char>(*ecx + *reinterpret_cast<signed char*>(&eax18));
    ebx20->f92 = reinterpret_cast<unsigned char>(ebx21->f92 + *reinterpret_cast<unsigned char*>(&ecx));
    eax22 = eax18 - 1;
    ecx23 = reinterpret_cast<int32_t>(ecx - 1);
    *reinterpret_cast<signed char*>(&eax22) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax22)));
    *eax22 = reinterpret_cast<signed char>(*eax22 + *reinterpret_cast<signed char*>(&eax22));
    *eax22 = reinterpret_cast<signed char>(*eax22 + reinterpret_cast<int32_t>(eax22));
    *eax22 = reinterpret_cast<signed char>(*eax22 + *reinterpret_cast<signed char*>(&eax22));
    *eax22 = reinterpret_cast<signed char>(*eax22 + *reinterpret_cast<signed char*>(&eax22));
    *edi24 = *esi25;
    edi26 = reinterpret_cast<struct s729*>(reinterpret_cast<int32_t>(edi27) + 1);
    eax29 = reinterpret_cast<unsigned char*>(ebx28->f8());
    *eax29 = reinterpret_cast<unsigned char>(*eax29 | *reinterpret_cast<unsigned char*>(&eax29));
    *eax29 = reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<unsigned char*>(&eax29));
    *eax29 = reinterpret_cast<unsigned char>(*eax29 | *reinterpret_cast<unsigned char*>(&eax29));
    esp30 = reinterpret_cast<struct s731**>(reinterpret_cast<int32_t>(v8) + 4 + 4 - 1);
    tmp8_31 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi26) + reinterpret_cast<int32_t>(edi26) * 8 + 54) + *reinterpret_cast<unsigned char*>(&eax29));
    cf32 = reinterpret_cast<uint1_t>(tmp8_31 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi26) + reinterpret_cast<int32_t>(edi26) * 8 + 54));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edi26) + reinterpret_cast<int32_t>(edi26) * 8 + 54) = tmp8_31;
    ebx33 = *esp30;
    *reinterpret_cast<unsigned char*>(&eax29) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax29) + *eax29) + cf32);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx33) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx33) + 1) >> 1);
    *reinterpret_cast<unsigned char*>(&ecx23) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(3 + *eax29) + __intrinsic());
    eax34 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax29) & 0x2e00115c);
    edi26->f8 = reinterpret_cast<signed char>(edi26->f8 + dh35);
    *eax34 = reinterpret_cast<unsigned char>(*eax34 + *reinterpret_cast<signed char*>(&eax34));
    *eax34 = reinterpret_cast<unsigned char>(*eax34 + reinterpret_cast<uint32_t>(eax34));
    ebx33->f0 = reinterpret_cast<signed char>(ebx33->f0 + *reinterpret_cast<signed char*>(&ebx33));
    ecx36 = reinterpret_cast<signed char*>(ecx23 + *eax34);
    *ecx36 = reinterpret_cast<signed char>(*ecx36 + *reinterpret_cast<signed char*>(&ebx33));
    *eax34 = reinterpret_cast<unsigned char>(*eax34 + *reinterpret_cast<signed char*>(&eax34));
    *ecx36 = reinterpret_cast<signed char>(*ecx36 + *reinterpret_cast<signed char*>(&eax34));
    ebx33->f92 = reinterpret_cast<signed char>(ebx33->f92 + *reinterpret_cast<signed char*>(&ecx36));
    eax37 = reinterpret_cast<void**>(eax34 - 1);
    ecx38 = reinterpret_cast<int32_t*>(ecx36 - 1);
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax37) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax37) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax37) + reinterpret_cast<uint32_t>(eax37));
    al39 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37))));
    tmp8_40 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al39)));
    *reinterpret_cast<void**>(&eax37) = tmp8_40;
    *reinterpret_cast<void**>(&eax37) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)) + reinterpret_cast<unsigned char>(*eax37)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_40) < reinterpret_cast<unsigned char>(al39)));
    __asm__("retf ");
    __asm__("out 0x5b, al");
    *reinterpret_cast<unsigned char*>(&ecx38) = 3;
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax37) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax37) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *eax37 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax37) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax37)));
    *reinterpret_cast<unsigned char*>(&edx41) = reinterpret_cast<unsigned char>(dl42 + 3);
    esp43 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(esp30 + 1) - 1 - 4);
    *esp43 = g4c5be6;
    ebx44 = *esp43;
    __asm__("into ");
    esp45 = reinterpret_cast<struct s732*>(esp43 + 1 - 1);
    esp45->f0 = 0x10006d23;
    eax46 = reinterpret_cast<unsigned char*>(*edx41());
    esp47 = &esp45->f4;
    do {
        g2508115c = 0xff;
        esp48 = &(*esp47)->f4;
        *eax46 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax46 + reinterpret_cast<uint32_t>(ecx38))));
        eax49 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax46) & 0x2508115c);
        esp50 = &(*esp48)->f4;
        *eax49 = *eax49 + reinterpret_cast<uint32_t>(ecx38);
        eax46 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax49) & 0x2508125c);
        esp47 = &(*esp50)->f4;
        tmp32_51 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax46 + reinterpret_cast<uint32_t>(eax46))));
        cf52 = reinterpret_cast<uint1_t>(tmp32_51 < *eax46);
        *eax46 = tmp32_51;
        ecx38 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx38) - 1);
    } while (reinterpret_cast<uint1_t>(!!ecx38) & reinterpret_cast<uint1_t>(!!*eax46));
    tmp32_53 = reinterpret_cast<unsigned char>(*eax46 + reinterpret_cast<uint32_t>(eax46) + cf52);
    cf54 = reinterpret_cast<uint1_t>(tmp32_53 < *eax46);
    *eax46 = tmp32_53;
    __asm__("fsubr st5, st0");
    eax55 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax46) & 0xb08115c);
    eax56 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax55) & 0x80c115c);
    eax57 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax56) & 0x80c115c);
    eax58 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax57) & 0x2508125c);
    eax59 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax58) & 0x80c115c);
    esp60 = &(*esp47)->f4->f4->f4->f4->f4;
    *reinterpret_cast<unsigned char*>(&ecx38) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx38) + *eax46) + cf54) + *eax55))) + *eax56))) + *eax57))) + *eax58))) + *eax59)));
    eax61 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax59) & 0x1e00125c);
    *ecx38 = ~*ecx38;
    *reinterpret_cast<unsigned char*>(&eax61) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax61) | 8);
    esp62 = &(*esp60)->f4;
    cl63 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx38) + *eax61)));
    eax64 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax61) & 0x1200115c);
    *edx41 = ~*edx41;
    ga00115c = 0xff;
    *edx41 = ~*edx41;
    g200115c = 0xff;
    *edx41 = ~*edx41;
    g80c115c = 0xff;
    *reinterpret_cast<unsigned char*>(&ecx38) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(cl63 + *eax64)));
    eax65 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax64) & 0x2508125c);
    esp66 = &(*esp62)->f4->f4;
    *esp66 = reinterpret_cast<struct s735*>(reinterpret_cast<uint32_t>(*esp66) + reinterpret_cast<uint32_t>(eax65));
    *ebx44 = reinterpret_cast<signed char>(*ebx44 + *reinterpret_cast<signed char*>(&ebx44));
    tmp32_67 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(eax65))));
    eax68 = tmp32_67;
    *eax68 = reinterpret_cast<unsigned char>(*eax68 - (reinterpret_cast<uint32_t>(eax68) + reinterpret_cast<uint1_t>(*eax68 < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax68) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_67) < reinterpret_cast<uint32_t>(eax65))))));
    *eax68 = reinterpret_cast<unsigned char>(*eax68 + *reinterpret_cast<signed char*>(&eax68));
    *eax68 = reinterpret_cast<unsigned char>(*eax68 + reinterpret_cast<uint32_t>(eax68));
    esp69 = &(*esp66)->f4;
    eax70 = reinterpret_cast<void**>(eax68 - 1);
    *reinterpret_cast<void**>(&eax70) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70))));
    *eax70 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax70) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)));
    *eax70 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax70) + reinterpret_cast<uint32_t>(eax70));
    *eax70 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax70) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)));
    tmp8_71 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax70) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)));
    cf72 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_71) < reinterpret_cast<unsigned char>(*eax70));
    *eax70 = tmp8_71;
    *reinterpret_cast<void**>(&eax70) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)) + reinterpret_cast<unsigned char>(*eax70)) + cf72);
    esp73 = reinterpret_cast<struct s736**>(reinterpret_cast<uint32_t>(esp69 + 1) - 1);
    *reinterpret_cast<signed char*>(ebp74 - 21) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp75 - 21) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax70) + 1));
    ebx76 = *esp73;
    esp77 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp73 + 1) - 2);
    *esp77 = ss78;
    ecx79 = reinterpret_cast<uint32_t>(ecx38) - 1 + reinterpret_cast<unsigned char>(*eax70);
    ebx76->f92 = reinterpret_cast<unsigned char>(ebx76->f92 + *reinterpret_cast<unsigned char*>(&ecx79));
    al80 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70))));
    tmp8_81 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al80)));
    *reinterpret_cast<void**>(&eax70) = tmp8_81;
    *reinterpret_cast<void**>(&eax70) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)) + reinterpret_cast<unsigned char>(*eax70)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_81) < reinterpret_cast<unsigned char>(al80)));
    esp82 = reinterpret_cast<struct s737*>(reinterpret_cast<int16_t>(*esp77) + 4 + 4);
    *eax70 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax70) | *reinterpret_cast<unsigned char*>(&ecx79));
    *reinterpret_cast<void**>(&eax70) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)) + reinterpret_cast<unsigned char>(*eax70))));
    tmp8_83 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)) + reinterpret_cast<unsigned char>(*eax70));
    cf84 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_83) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax70)));
    *reinterpret_cast<void**>(&eax70) = tmp8_83;
    eax85 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax70) - (reinterpret_cast<int32_t>(*esp82->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax70) < reinterpret_cast<int32_t>(*esp82->f0) + cf84)));
    *eax85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax85) | *reinterpret_cast<unsigned char*>(&eax85));
    *eax85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax85) - reinterpret_cast<uint32_t>(eax85));
    *reinterpret_cast<unsigned char*>(&eax85) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax85)));
    *eax85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax85) + reinterpret_cast<uint32_t>(eax85));
    esp86 = &esp82->f4->f4;
    eax87 = eax85 - 1;
    ecx88 = ecx79 - 1;
    *eax87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax87) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87)));
    *eax87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax87) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87)));
    *eax87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax87) + reinterpret_cast<uint32_t>(eax87));
    al89 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87))));
    tmp8_90 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al89)));
    *reinterpret_cast<void**>(&eax87) = tmp8_90;
    *reinterpret_cast<void**>(&eax87) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87)) + reinterpret_cast<unsigned char>(*eax87)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_90) < reinterpret_cast<unsigned char>(al89)));
    ch91 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx88) + 1) << 1);
    ebx92 = *esp86;
    tmp8_93 = reinterpret_cast<unsigned char>(ch91 + *reinterpret_cast<signed char*>(&ebx92));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx88) + 1) = tmp8_93;
    __asm__("in eax, 0x5b");
    *reinterpret_cast<void**>(&eax87) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87)) + reinterpret_cast<unsigned char>(*eax87)) + reinterpret_cast<uint1_t>(tmp8_93 < ch91));
    tmp8_94 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87)) + reinterpret_cast<unsigned char>(*eax87));
    cf95 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_94) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax87)));
    *reinterpret_cast<void**>(&eax87) = tmp8_94;
    eax96 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax87) - (reinterpret_cast<int32_t>(*ebx92) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax87) < reinterpret_cast<int32_t>(*ebx92) + cf95)));
    *reinterpret_cast<signed char*>(&eax96) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax96)));
    *eax96 = *eax96 - reinterpret_cast<uint32_t>(eax96);
    *reinterpret_cast<signed char*>(&eax96) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax96)));
    *eax96 = *eax96 + reinterpret_cast<uint32_t>(eax96);
    ebx97 = reinterpret_cast<struct s739*>(reinterpret_cast<int32_t>(ebx92) - 1);
    esp98 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp86 + 1) - 1)) + 4);
    eax99 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax96) - 1);
    *reinterpret_cast<void**>(&eax99) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99))));
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)));
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<uint32_t>(eax99));
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)));
    tmp8_100 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)));
    cf101 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_100) < reinterpret_cast<unsigned char>(*eax99));
    *eax99 = tmp8_100;
    *reinterpret_cast<void**>(&eax99) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)) + reinterpret_cast<unsigned char>(*eax99)) + cf101);
    __asm__("out 0x5b, al");
    tmp8_102 = reinterpret_cast<unsigned char>(g4115beb + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)));
    g4115beb = tmp8_102;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx97) + 1) = 8;
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<uint32_t>(eax99));
    *eax99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)));
    tmp8_103 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax99)));
    cf104 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_103) < reinterpret_cast<unsigned char>(*eax99));
    *eax99 = tmp8_103;
    eax105 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax99) - (reinterpret_cast<unsigned char>(*eax99) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax99) < reinterpret_cast<unsigned char>(*eax99) + cf104)));
    tmp32_106 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<uint32_t>(eax105));
    cf107 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_106) < reinterpret_cast<unsigned char>(*eax105));
    *eax105 = tmp32_106;
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) - (reinterpret_cast<uint32_t>(eax105) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax105) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax105) + cf107))));
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<uint32_t>(eax105));
    *reinterpret_cast<signed char*>(&ebx97) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx97) + ebx97->f22);
    ecx108 = ecx88 - 1 + reinterpret_cast<unsigned char>(*eax105);
    ebx97->f92 = reinterpret_cast<unsigned char>(ebx97->f92 + *reinterpret_cast<unsigned char*>(&ecx108));
    al109 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105))));
    tmp8_110 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al109)));
    *reinterpret_cast<void**>(&eax105) = tmp8_110;
    *reinterpret_cast<void**>(&eax105) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)) + reinterpret_cast<unsigned char>(*eax105)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_110) < reinterpret_cast<unsigned char>(al109)));
    __asm__("out 0xff, al");
    esp111 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp98) - 1)) + 4 + 4);
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) | *reinterpret_cast<unsigned char*>(&ecx108));
    ebx112 = *esp111;
    *reinterpret_cast<void**>(&eax105) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105))));
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    *eax105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
    ebp113->f76 = reinterpret_cast<signed char>(ebp114->f76 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx112) + 1)));
    *reinterpret_cast<signed char*>(eax105 - 27) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax105 - 27) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx112) + 1)));
    ebp115->f76 = reinterpret_cast<signed char>(ebp116->f76 + dh117);
    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax105) + reinterpret_cast<uint32_t>(eax105) + 60) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax105) + reinterpret_cast<uint32_t>(eax105) + 60) - 1;
    __asm__("in eax, 0x4c");
    tmp8_118 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax105) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ebx112) + 1)));
    cf119 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_118) < reinterpret_cast<unsigned char>(*eax105));
    *eax105 = tmp8_118;
    __asm__("in eax, 0x8");
    eax120 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax105) - (reinterpret_cast<int32_t>(**reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp111 + 1) - 1 - 1)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax105) < reinterpret_cast<int32_t>(**reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp111 + 1) - 1 - 1)) + cf119)));
    tmp8_121 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax120)));
    cf122 = reinterpret_cast<uint1_t>(tmp8_121 < *reinterpret_cast<unsigned char*>(&eax120));
    *reinterpret_cast<unsigned char*>(&eax120) = tmp8_121;
    *eax120 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax120) - (reinterpret_cast<uint32_t>(eax120) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*eax120) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax120) + cf122))));
    *eax120 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax120) & *reinterpret_cast<unsigned char*>(&eax120));
    *eax120 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax120) + reinterpret_cast<uint32_t>(eax120));
    eax123 = reinterpret_cast<unsigned char*>(eax120 - 1);
    *reinterpret_cast<signed char*>(&eax123) = reinterpret_cast<signed char>(static_cast<int32_t>(*reinterpret_cast<signed char*>(&eax123)));
    *eax123 = reinterpret_cast<unsigned char>(*eax123 + *reinterpret_cast<signed char*>(&eax123));
    *eax123 = reinterpret_cast<unsigned char>(*eax123 + reinterpret_cast<uint32_t>(eax123));
    *eax123 = reinterpret_cast<unsigned char>(*eax123 + *reinterpret_cast<signed char*>(&eax123));
    *eax123 = reinterpret_cast<unsigned char>(*eax123 + *reinterpret_cast<signed char*>(&eax123));
}

struct s744 {
    uint32_t f0;
    signed char[17044476] pad17044480;
    uint32_t f17044480;
};

struct s745 {
    signed char[4] pad4;
    uint32_t f4;
};

struct s746 {
    signed char[4] pad4;
    signed char f4;
};

void fun_1000724c(signed char cl) {
    uint32_t ebp2;
    uint32_t ebp3;
    int32_t ebp4;
    signed char* eax5;
    void* eax6;
    int32_t* edi7;
    int32_t* esi8;
    struct s744* edi9;
    struct s745* edi10;
    signed char* esi11;
    struct s746* esi12;
    signed char* edx13;
    signed char* eax14;

    ebp2 = ebp3 & *reinterpret_cast<uint32_t*>(ebp4 - 0x246cb221);
    eax5 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax6) - 0x3814201);
    *edi7 = *esi8;
    edi9 = reinterpret_cast<struct s744*>(&edi10->f4);
    esi11 = &esi12->f4;
    edi9->f17044480 = edi9->f17044480 >> 1;
    edi9->f0 = edi9->f0 >> 1;
    *eax5 = reinterpret_cast<signed char>(*eax5 + *reinterpret_cast<signed char*>(&eax5));
    *eax5 = reinterpret_cast<signed char>(*eax5 + cl);
    edx13 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax5) % reinterpret_cast<int32_t>(ebp2));
    eax14 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax5) / reinterpret_cast<int32_t>(ebp2));
    *esi11 = reinterpret_cast<signed char>(*esi11 + *reinterpret_cast<signed char*>(&edx13));
    *reinterpret_cast<signed char*>(&eax14) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax14) + 1);
    *eax14 = reinterpret_cast<signed char>(*eax14 + *reinterpret_cast<signed char*>(&eax14));
    *eax14 = reinterpret_cast<signed char>(*eax14 + *reinterpret_cast<signed char*>(&eax14));
    *eax14 = reinterpret_cast<signed char>(*eax14 + *reinterpret_cast<signed char*>(&eax14));
    *edx13 = reinterpret_cast<signed char>(*edx13 + *reinterpret_cast<signed char*>(&eax14));
    __asm__("cli ");
    __asm__("popad ");
    *edx13 = reinterpret_cast<signed char>(*edx13 + *reinterpret_cast<signed char*>(&edx13));
    __asm__("cli ");
}

struct s748 {
    signed char[4] pad4;
    void* f4;
};

struct s747 {
    unsigned char f0;
    signed char[3] pad4;
    struct s748* f4;
};

struct s749 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s750 {
    unsigned char f0;
    unsigned char f1;
    signed char[2] pad4;
    void* f4;
};

struct s751 {
    signed char[4] pad4;
    void* f4;
};

struct s752 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s753 {
    unsigned char f0;
    unsigned char f1;
};

signed char g2d003100;

unsigned char g38002d00;

signed char g36003200;

unsigned char g39003400;

unsigned char g37003700;

signed char g39003100;

unsigned char g32003600;

unsigned char g39003000;

unsigned char g31003400;

signed char g33003100;

unsigned char g28002900;

struct s754 {
    struct s750* f0;
    unsigned char* f4;
};

struct s755 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_100073e7(unsigned char* ecx) {
    int1_t less2;
    unsigned char tmp8_3;
    signed char bh4;
    int1_t cf5;
    signed char* ebp6;
    signed char* ebp7;
    signed char* eax8;
    signed char* eax9;
    signed char dl10;
    signed char* edi11;
    signed char* edi12;
    unsigned char tmp8_13;
    signed char* edi14;
    int1_t cf15;
    unsigned char* edi16;
    unsigned char* edi17;
    void** eax18;
    int32_t* eax19;
    signed char dh20;
    signed char* edi21;
    signed char* edi22;
    signed char* di23;
    signed char* di24;
    struct s747* edx25;
    struct s749* edx26;
    unsigned char* ebp27;
    signed char* ebp28;
    int1_t zf29;
    signed char* ebp30;
    signed char* esi31;
    signed char* esi32;
    uint48_t v33;
    void* ebx34;
    signed char* ebp35;
    signed char* ebp36;
    signed char* ebp37;
    unsigned char* edi38;
    unsigned char* edi39;
    struct s750* ebx40;
    signed char bl41;
    signed char tmp8_42;
    signed char bh43;
    int32_t esi44;
    int32_t* eax45;
    unsigned char bh46;
    int32_t esi47;
    signed char* ebp48;
    signed char* ebp49;
    int1_t zf50;
    unsigned char tmp8_51;
    int1_t cf52;
    signed char* esi53;
    signed char* esi54;
    signed char* esi55;
    struct s751** esp56;
    struct s751* esi57;
    unsigned char tmp8_58;
    signed char* ebp59;
    int1_t cf60;
    unsigned char* ebp61;
    unsigned char* ebp62;
    unsigned char* eax63;
    void** esp64;
    signed char* eax65;
    void* esp66;
    unsigned char tmp8_67;
    int1_t cf68;
    signed char* ebp69;
    signed char* ebp70;
    struct s750** esp71;
    signed char* edi72;
    signed char* edi73;
    unsigned char tmp8_74;
    int1_t cf75;
    unsigned char tmp8_76;
    int1_t cf77;
    signed char* esi78;
    signed char* esi79;
    signed char* esi80;
    void** esp81;
    unsigned char* edi82;
    signed char* edi83;
    int32_t* eax84;
    unsigned char tmp8_85;
    signed char* edi86;
    int1_t cf87;
    unsigned char* edi88;
    unsigned char* edi89;
    void* esp90;
    unsigned char tmp8_91;
    int1_t cf92;
    signed char* esi93;
    signed char* esi94;
    signed char* esi95;
    void** esp96;
    void* esi97;
    unsigned char tmp8_98;
    signed char* ebp99;
    int1_t cf100;
    unsigned char* ebp101;
    unsigned char* ebp102;
    int32_t* eax103;
    void* esp104;
    int1_t zf105;
    int32_t* esp106;
    signed char* edi107;
    signed char* edi108;
    signed char* edi109;
    signed char* edi110;
    unsigned char* ebp111;
    signed char* ebp112;
    struct s752* ecx113;
    signed char* edi114;
    signed char* edi115;
    signed char* esi116;
    signed char* esi117;
    unsigned char* eax118;
    struct s753* ecx119;
    unsigned char* ebp120;
    signed char* ebp121;
    unsigned char tmp8_122;
    uint1_t cf123;
    unsigned char* eax124;
    struct s750** esp125;
    signed char tmp8_126;
    unsigned char tmp8_127;
    signed char tmp8_128;
    unsigned char* edi129;
    signed char* edi130;
    unsigned char* esi131;
    signed char* esi132;
    unsigned char tmp8_133;
    unsigned char tmp8_134;
    signed char tmp8_135;
    unsigned char* esi136;
    signed char* esi137;
    unsigned char tmp8_138;
    unsigned char* edi139;
    signed char* edi140;
    signed char tmp8_141;
    unsigned char tmp8_142;
    unsigned char* esi143;
    signed char* esi144;
    unsigned char tmp8_145;
    unsigned char tmp8_146;
    unsigned char* edi147;
    signed char* edi148;
    unsigned char* esi149;
    signed char* esi150;
    signed char tmp8_151;
    unsigned char* esi152;
    signed char* esi153;
    unsigned char* esi154;
    signed char* esi155;
    unsigned char* edi156;
    signed char* edi157;
    unsigned char* esi158;
    signed char* esi159;
    unsigned char* edi160;
    signed char* edi161;
    unsigned char* edi162;
    signed char* edi163;
    unsigned char tmp8_164;
    struct s754* esp165;
    unsigned char tmp8_166;
    uint1_t cf167;
    struct s750* edi168;
    unsigned char** esp169;
    signed char* esi170;
    signed char* esi171;
    unsigned char* ecx172;
    unsigned char* ebp173;
    void* ebp174;
    unsigned char* ebx175;
    unsigned char* esi176;
    signed char* esi177;
    signed char* esi178;
    unsigned char* edi179;
    unsigned char* eax180;
    unsigned char* edi181;
    unsigned char* eax182;
    int32_t esi183;
    int16_t* esp184;
    int16_t ds185;
    unsigned char** esp186;
    unsigned char** esp187;
    unsigned char* esi188;
    struct s755* esi189;
    struct s747** esp190;
    struct s748** esp191;
    int32_t* eax192;
    void** esp193;
    int32_t* eax194;
    unsigned char tmp8_195;
    int1_t cf196;
    void* esp197;
    unsigned char tmp8_198;
    int1_t cf199;
    unsigned char** esp200;
    unsigned char tmp8_201;
    int1_t cf202;
    int32_t* eax203;
    void* esp204;
    unsigned char* eax205;
    unsigned char tmp8_206;
    int1_t cf207;
    unsigned char** esp208;
    void** esp209;
    void* esp210;
    int1_t zf211;
    unsigned char tmp8_212;
    uint1_t cf213;
    signed char* edi214;
    signed char* edi215;
    signed char* edi216;
    unsigned char tmp8_217;
    signed char* esi218;
    uint1_t cf219;
    unsigned char* esi220;
    unsigned char* esi221;
    uint1_t zf222;
    signed char* esi223;
    unsigned char tmp8_224;
    int1_t cf225;
    signed char* esi226;
    signed char* esi227;
    signed char* esi228;
    unsigned char* edi229;
    signed char* edi230;
    unsigned char tmp8_231;
    signed char* edi232;
    int1_t cf233;
    unsigned char* edi234;
    unsigned char* edi235;

    if (!less2) {
    }
    tmp8_3 = reinterpret_cast<unsigned char>(*ecx + bh4);
    cf5 = tmp8_3 < *ecx;
    *ecx = tmp8_3;
    *ebp6 = reinterpret_cast<signed char>(*ebp7 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *eax8 = reinterpret_cast<signed char>(*eax9 + dl10);
    *edi11 = reinterpret_cast<signed char>(*edi12 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    tmp8_13 = reinterpret_cast<unsigned char>(*edi14 + *reinterpret_cast<signed char*>(&ecx));
    cf15 = tmp8_13 < *edi16;
    *edi17 = tmp8_13;
    eax18 = reinterpret_cast<void**>(*eax19 * 0x6e0065);
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax18) + reinterpret_cast<int32_t>(eax18) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax18) + reinterpret_cast<int32_t>(eax18) + 0x69) + dh20);
    *edi21 = reinterpret_cast<signed char>(*edi22 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("outsb ");
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&ecx));
    __asm__("insd ");
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax18) + 1));
    *di23 = reinterpret_cast<signed char>(*di24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax18) + 1));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    edx25 = reinterpret_cast<struct s747*>(&edx26->f1);
    *ebp27 = reinterpret_cast<unsigned char>(*ebp28 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    zf29 = *ebp30 == 0;
    __asm__("outsd ");
    *esi31 = reinterpret_cast<signed char>(*esi32 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v33) + 2) = ebx34;
    *ebp35 = reinterpret_cast<signed char>(*ebp36 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax18) + 1));
    *eax18 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    __asm__("out dx, eax");
    if (!__intrinsic()) {
        *edi38 = reinterpret_cast<unsigned char>(*edi39 & 63);
        edx25 = reinterpret_cast<struct s747*>(reinterpret_cast<int32_t>(edx25) - 1);
        *reinterpret_cast<signed char*>(&ebx40) = reinterpret_cast<signed char>(bl41 + 92);
        tmp8_42 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx40) - 81);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx40) - 81) = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax18) + 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax18) + 1) = tmp8_42;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx40) + 1) = reinterpret_cast<signed char>(bh43 - *reinterpret_cast<signed char*>(esi44 - 0x46ffffed));
        eax45 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax18) + reinterpret_cast<unsigned char>(*eax18) + reinterpret_cast<uint1_t>(bh46 < *reinterpret_cast<unsigned char*>(esi47 - 0x46ffffed)));
        *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45) + 0x69) + *reinterpret_cast<signed char*>(&eax45));
        ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
        __asm__("popad ");
        edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
        __asm__("insb ");
        *ebp48 = reinterpret_cast<signed char>(*ebp49 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
        *reinterpret_cast<struct s750**>(&v33) = ebx40;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45) + 97) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45) + 97) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
        edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
        zf50 = edx25->f0 == 0;
        if (zf50) 
            goto addr_10007470_13; else 
            goto addr_10007470_13;
    }
    addr_100074b4_14:
    tmp8_51 = reinterpret_cast<unsigned char>(ebx40->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax18)));
    cf52 = tmp8_51 < ebx40->f0;
    ebx40->f0 = tmp8_51;
    *esi53 = reinterpret_cast<signed char>(*esi54 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    esp56 = reinterpret_cast<struct s751**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v33) + 2)) + 4 - 4);
    *esp56 = esi57;
    tmp8_58 = reinterpret_cast<unsigned char>(*ebp59 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax18) + 1));
    cf60 = tmp8_58 < *ebp61;
    *ebp62 = tmp8_58;
    eax63 = reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(*eax18) * 0x6e006f);
    esp64 = &(*esp56)->f4;
    *eax63 = reinterpret_cast<unsigned char>(*eax63 + *reinterpret_cast<unsigned char*>(&edx25));
    __asm__("outsd ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(eax63) + 0x69) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax63) + reinterpret_cast<uint32_t>(eax63) + 0x69) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax63) + 1));
    eax65 = reinterpret_cast<signed char*>(*eax63 * 0x730065);
    esp66 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp64) + 4);
    tmp8_67 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(&edx25));
    cf68 = tmp8_67 < ebx40->f0;
    ebx40->f0 = tmp8_67;
    *ebp69 = reinterpret_cast<signed char>(*ebp70 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *eax65 = reinterpret_cast<signed char>(*eax65 + *reinterpret_cast<signed char*>(&eax65));
    *eax65 = reinterpret_cast<signed char>(*eax65 + *reinterpret_cast<signed char*>(&eax65));
    *eax65 = reinterpret_cast<signed char>(*eax65 + *reinterpret_cast<signed char*>(&eax65));
    esp71 = reinterpret_cast<struct s750**>(reinterpret_cast<int32_t>(esp66) - 4);
    *esp71 = ebx40;
    *edi72 = reinterpret_cast<signed char>(*edi73 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(eax65) + 0x77) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(eax65) + 0x77) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_74 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax65) + 1));
    cf75 = tmp8_74 < *ecx;
    *ecx = tmp8_74;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(eax65) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(eax65) + 77) + *reinterpret_cast<signed char*>(&ebx40));
    tmp8_76 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf77 = tmp8_76 < *ecx;
    *ecx = tmp8_76;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    __asm__("outsd ");
    *esi78 = reinterpret_cast<signed char>(*esi79 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax65) + 1));
    esp81 = &(*esp71)->f4;
    *edi82 = reinterpret_cast<unsigned char>(*edi83 + *reinterpret_cast<unsigned char*>(&edx25));
    eax84 = reinterpret_cast<int32_t*>(*eax65 * 0x64006e);
    __asm__("outsd ");
    tmp8_85 = reinterpret_cast<unsigned char>(*edi86 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    cf87 = tmp8_85 < *edi88;
    *edi89 = tmp8_85;
    esp90 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp81) + 4);
    tmp8_91 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(&eax84));
    cf92 = tmp8_91 < ebx40->f0;
    ebx40->f0 = tmp8_91;
    *esi93 = reinterpret_cast<signed char>(*esi94 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    esp96 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp90) - 4);
    *esp96 = esi97;
    tmp8_98 = reinterpret_cast<unsigned char>(*ebp99 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax84) + 1));
    cf100 = tmp8_98 < *ebp101;
    *ebp102 = tmp8_98;
    eax103 = reinterpret_cast<int32_t*>(*eax84 * 0x6e006f);
    esp104 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp96) + 4);
    *ecx = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(&eax103));
    zf105 = *ecx == 0;
    esp106 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp104) - 4);
    *esp106 = 0x6e006500;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 0x69) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax103) + 1));
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 0x69) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 0x69) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *edi107 = reinterpret_cast<signed char>(*edi108 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 76) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 76) + *reinterpret_cast<signed char*>(&ebx40));
    *edi109 = reinterpret_cast<signed char>(*edi110 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    **reinterpret_cast<signed char**>(&ebx40) = reinterpret_cast<signed char>(**reinterpret_cast<signed char**>(&ebx40) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("outsb ");
    *ebp111 = reinterpret_cast<unsigned char>(*ebp112 + *reinterpret_cast<unsigned char*>(&edx25));
    ecx113 = reinterpret_cast<struct s752*>(ecx - 1);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 66) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 66) + *reinterpret_cast<signed char*>(&ebx40));
    *edi114 = reinterpret_cast<signed char>(*edi115 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx113) + 1));
    __asm__("outsd ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 65) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax103) + reinterpret_cast<int32_t>(eax103) + 65) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *esi116 = reinterpret_cast<signed char>(*esi117 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx113) + 1));
    eax118 = reinterpret_cast<unsigned char*>(*reinterpret_cast<int32_t*>(*eax103 * 0x61006d) * 0x6e006f);
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    ecx119 = reinterpret_cast<struct s753*>(&ecx113->f1);
    *ebp120 = reinterpret_cast<unsigned char>(*ebp121 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    __asm__("outsd ");
    tmp8_122 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(&edx25));
    cf123 = reinterpret_cast<uint1_t>(tmp8_122 < ebx40->f0);
    ebx40->f0 = tmp8_122;
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<unsigned char*>(&eax118));
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx40) + 1));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ reinterpret_cast<uint32_t>(eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    *eax118 = reinterpret_cast<unsigned char>(*eax118 ^ *reinterpret_cast<unsigned char*>(&eax118));
    eax124 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax118) ^ *eax118);
    esp125 = reinterpret_cast<struct s750**>(reinterpret_cast<int32_t>(esp106) + 1 - 4);
    *esp125 = ebx40;
    tmp8_126 = reinterpret_cast<signed char>(g2d003100 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    g2d003100 = tmp8_126;
    tmp8_127 = reinterpret_cast<unsigned char>(g38002d00 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g38002d00 = tmp8_127;
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_128 = reinterpret_cast<signed char>(g36003200 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    g36003200 = tmp8_128;
    *edi129 = reinterpret_cast<unsigned char>(*edi130 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *esi131 = reinterpret_cast<unsigned char>(*esi132 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_133 = reinterpret_cast<unsigned char>(g39003400 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g39003400 = tmp8_133;
    tmp8_134 = reinterpret_cast<unsigned char>(g37003700 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g37003700 = tmp8_134;
    tmp8_135 = reinterpret_cast<signed char>(g39003100 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    g39003100 = tmp8_135;
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *esi136 = reinterpret_cast<unsigned char>(*esi137 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_138 = reinterpret_cast<unsigned char>(g32003600 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g32003600 = tmp8_138;
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *edi139 = reinterpret_cast<unsigned char>(*edi140 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_141 = reinterpret_cast<signed char>(g36003200 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    g36003200 = tmp8_141;
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_142 = reinterpret_cast<unsigned char>(g39003000 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g39003000 = tmp8_142;
    *esi143 = reinterpret_cast<unsigned char>(*esi144 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_145 = reinterpret_cast<unsigned char>(g31003400 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g31003400 = tmp8_145;
    tmp8_146 = reinterpret_cast<unsigned char>(g31003400 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    g31003400 = tmp8_146;
    *edi147 = reinterpret_cast<unsigned char>(*edi148 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ebx40) + 1));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124)) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ reinterpret_cast<uint32_t>(eax124));
    __asm__("aaa ");
    *esi149 = reinterpret_cast<unsigned char>(*esi150 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_151 = reinterpret_cast<signed char>(g33003100 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    g33003100 = tmp8_151;
    *esi152 = reinterpret_cast<unsigned char>(*esi153 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *esi154 = reinterpret_cast<unsigned char>(*esi155 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *edi156 = reinterpret_cast<unsigned char>(*edi157 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *esi158 = reinterpret_cast<unsigned char>(*esi159 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *edi160 = reinterpret_cast<unsigned char>(*edi161 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *edi162 = reinterpret_cast<unsigned char>(*edi163 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    tmp8_164 = reinterpret_cast<unsigned char>(g28002900 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    g28002900 = tmp8_164;
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ reinterpret_cast<uint32_t>(eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 ^ *reinterpret_cast<unsigned char*>(&eax124));
    esp165 = reinterpret_cast<struct s754*>(esp125 - 1);
    esp165->f0 = ebx40;
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<signed char*>(&ebx40));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 - reinterpret_cast<uint32_t>(eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(&eax124));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 0x6f) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax124) + 1));
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 92) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 92) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<unsigned char*>(&eax124));
    ecx119->f0 = reinterpret_cast<unsigned char>(ecx119->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    __asm__("outsd ");
    tmp8_166 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(&edx25));
    cf167 = reinterpret_cast<uint1_t>(tmp8_166 < ebx40->f0);
    ebx40->f0 = tmp8_166;
    edi168 = esp165->f0;
    esp169 = &esp165->f4;
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(&eax124));
    __asm__("popad ");
    *esi170 = reinterpret_cast<signed char>(*esi171 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx119) + 1));
    ecx172 = &ecx119->f1;
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax124) + 1));
    __asm__("arpl [eax], ax");
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    ebp173 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebp174) - 1);
    *ebp173 = reinterpret_cast<unsigned char>(*ebp173 + *reinterpret_cast<unsigned char*>(&ecx172));
    ebx175 = &ebx40->f1;
    *ebx175 = reinterpret_cast<unsigned char>(*ebx175 + *reinterpret_cast<unsigned char*>(&eax124));
    __asm__("insb ");
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    *esi176 = reinterpret_cast<unsigned char>(*esi177 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(&eax124));
    *eax124 = reinterpret_cast<unsigned char>(*eax124 + *reinterpret_cast<unsigned char*>(&eax124));
    edi179 = &edi168->f1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 0x6f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 0x6f) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax124) + 1));
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 92) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 92) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(&eax124));
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    __asm__("outsd ");
    *ebp173 = reinterpret_cast<unsigned char>(*ebp173 + *reinterpret_cast<unsigned char*>(&eax124));
    __asm__("outsb ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 80) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint32_t>(eax124) + 80) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax124) + 1));
    *edi179 = reinterpret_cast<unsigned char>(*edi179 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    eax180 = reinterpret_cast<unsigned char*>(*eax124 * 0x74006e);
    edi181 = *esp169;
    *eax180 = reinterpret_cast<unsigned char>(*eax180 + *reinterpret_cast<unsigned char*>(&edx25));
    __asm__("insb ");
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax180) + 1));
    __asm__("popad ");
    *ebx175 = reinterpret_cast<unsigned char>(*ebx175 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax180) + 1));
    eax182 = reinterpret_cast<unsigned char*>(*eax180 * 82);
    *ebp173 = reinterpret_cast<unsigned char>(*ebp173 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax182) + 1));
    __asm__("popad ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax182) + reinterpret_cast<uint32_t>(eax182) + 0x79) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax182) + reinterpret_cast<uint32_t>(eax182) + 0x79) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax182) + 1));
    *eax182 = reinterpret_cast<unsigned char>(*eax182 + *reinterpret_cast<unsigned char*>(&eax182));
    *eax182 = reinterpret_cast<unsigned char>(*eax182 + *reinterpret_cast<unsigned char*>(&eax182));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ebx175) + 1));
    *reinterpret_cast<unsigned char**>(esi183 - 0x76) = ecx172;
    __asm__("rcr byte [esi+0x47], 0x88");
    __asm__("retf ");
    __asm__("int1 ");
    esp184 = reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(esp169 + 1 + 1) - 2);
    *esp184 = ds185;
    *reinterpret_cast<unsigned char*>(&eax182) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax182) + 0x7c);
    esp186 = reinterpret_cast<unsigned char**>(esp184 - 2);
    *esp186 = eax182;
    esp187 = esp186 - 1;
    *esp187 = ebx175;
    *edi181 = reinterpret_cast<unsigned char>(*edi181 + *reinterpret_cast<unsigned char*>(&ecx172));
    esi188 = &esi189->f1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax182) + reinterpret_cast<uint32_t>(eax182) + 87) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax182) + reinterpret_cast<uint32_t>(eax182) + 87) + *reinterpret_cast<unsigned char*>(&edx25));
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(&eax182));
    esp190 = reinterpret_cast<struct s747**>(esp187 - 1);
    *esp190 = edx25;
    *ebp173 = reinterpret_cast<unsigned char>(*ebp173 + *reinterpret_cast<unsigned char*>(&eax182));
    esp191 = &(*esp190)->f4;
    *ebp173 = reinterpret_cast<unsigned char>(*ebp173 + *reinterpret_cast<unsigned char*>(&ecx172));
    eax192 = reinterpret_cast<int32_t*>(*eax182 * 0x720063);
    __asm__("outsd ");
    *ebx175 = reinterpret_cast<unsigned char>(*ebx175 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    __asm__("outsd ");
    *esi188 = reinterpret_cast<unsigned char>(*esi188 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax192) + 1));
    esp193 = &(*esp191)->f4;
    *edi181 = reinterpret_cast<unsigned char>(*edi181 + *reinterpret_cast<unsigned char*>(&edx25));
    eax194 = reinterpret_cast<int32_t*>(*eax192 * 0x64006e);
    __asm__("outsd ");
    tmp8_195 = reinterpret_cast<unsigned char>(*edi181 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    cf196 = tmp8_195 < *edi181;
    *edi181 = tmp8_195;
    esp197 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp193) + 4);
    tmp8_198 = reinterpret_cast<unsigned char>(*ebx175 + *reinterpret_cast<signed char*>(&eax194));
    cf199 = tmp8_198 < *ebx175;
    *ebx175 = tmp8_198;
    *esi188 = reinterpret_cast<unsigned char>(*esi188 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    esp200 = reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(esp197) - 4);
    *esp200 = esi188;
    tmp8_201 = reinterpret_cast<unsigned char>(*ebp173 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax194) + 1));
    cf202 = tmp8_201 < *ebp173;
    *ebp173 = tmp8_201;
    eax203 = reinterpret_cast<int32_t*>(*eax194 * 0x6e006f);
    esp204 = reinterpret_cast<void*>(*esp200 + 4);
    *edi181 = reinterpret_cast<unsigned char>(*edi181 + *reinterpret_cast<unsigned char*>(&edx25));
    eax205 = reinterpret_cast<unsigned char*>(*eax203 * 0x64006e);
    __asm__("outsd ");
    tmp8_206 = reinterpret_cast<unsigned char>(*edi181 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    cf207 = tmp8_206 < *edi181;
    *edi181 = tmp8_206;
    esp208 = reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(esp204) - 4);
    *esp208 = ebp173;
    *eax205 = reinterpret_cast<unsigned char>(*eax205 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax205) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205) + 79) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205) + 79) + *reinterpret_cast<signed char*>(&ebx175));
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    __asm__("arpl [eax], ax");
    esp209 = reinterpret_cast<void**>(esp208 - 1);
    *esp209 = reinterpret_cast<void*>(0x73006500);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205) + 0x72) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205) + 0x72) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax205) + 1));
    __asm__("outsd ");
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    esp210 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(*esp209) + 4);
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(&ecx172));
    __asm__("outsb ");
    *ebx175 = reinterpret_cast<unsigned char>(*ebx175 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    __asm__("popad ");
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205) + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax205) + reinterpret_cast<int32_t>(eax205) + 0x6c) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    *ecx172 = reinterpret_cast<unsigned char>(*ecx172 + *reinterpret_cast<unsigned char*>(&eax205));
    *reinterpret_cast<unsigned char**>(reinterpret_cast<int32_t>(esp210) - 4) = ebx175;
    *eax205 = reinterpret_cast<unsigned char>(*eax205 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    zf211 = *eax205 == 0;
    tmp8_212 = reinterpret_cast<unsigned char>(*edi181 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    cf213 = reinterpret_cast<uint1_t>(tmp8_212 < *edi181);
    *edi181 = tmp8_212;
    __asm__("outsb ");
    *eax205 = reinterpret_cast<unsigned char>(*eax205 + *reinterpret_cast<unsigned char*>(&eax205));
    *eax205 = reinterpret_cast<unsigned char>(*eax205 + *reinterpret_cast<unsigned char*>(&eax205));
    *(eax205 - 0xd571e07) = reinterpret_cast<unsigned char>(*(eax205 - 0xd571e07) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ecx172) + 1));
    __asm__("xlatb ");
    __asm__("aas ");
    addr_10007470_13:
    *edi214 = reinterpret_cast<signed char>(*edi215 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    __asm__("outsb ");
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(&edx25));
    __asm__("outsd ");
    tmp8_217 = reinterpret_cast<unsigned char>(*esi218 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    cf219 = reinterpret_cast<uint1_t>(tmp8_217 < *esi220);
    *esi221 = tmp8_217;
    zf222 = reinterpret_cast<uint1_t>(*esi223 == 0);
    __asm__("popad ");
    edx25->f0 = reinterpret_cast<unsigned char>(edx25->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45) + 77) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45) + 77) + *reinterpret_cast<signed char*>(&ebx40));
    tmp8_224 = reinterpret_cast<unsigned char>(*ecx + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx) + 1));
    cf225 = tmp8_224 < *ecx;
    *ecx = tmp8_224;
    __asm__("arpl [eax], ax");
    __asm__("outsd ");
    ebx40->f0 = reinterpret_cast<unsigned char>(ebx40->f0 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    __asm__("outsd ");
    *esi226 = reinterpret_cast<signed char>(*esi227 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    *edi229 = reinterpret_cast<unsigned char>(*edi230 + *reinterpret_cast<unsigned char*>(&edx25));
    eax18 = reinterpret_cast<void**>(*eax45 * 0x64006e);
    __asm__("outsd ");
    tmp8_231 = reinterpret_cast<unsigned char>(*edi232 + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx25) + 1));
    cf233 = tmp8_231 < *edi234;
    *edi235 = tmp8_231;
    if (!cf233) 
        goto addr_100074b4_14; else 
        goto addr_100074b4_14;
}

struct s756 {
    signed char[1] pad1;
    int32_t f1;
    signed char[32] pad37;
    unsigned char f37;
};

struct s757 {
    signed char[93] pad93;
    signed char f93;
};

struct s758 {
    signed char[93] pad93;
    signed char f93;
};

uint64_t g66ee0b2c;

int32_t g66ee0b28;

void fun_100077e5() {
    uint32_t eflags1;
    int32_t ebp2;
    int32_t ebp3;
    struct s756* edx4;
    struct s757* esi5;
    struct s758* esi6;
    unsigned char tmp8_7;
    signed char ch8;
    int32_t esi9;
    uint32_t eax10;
    signed char al11;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = 0;
    __asm__("aas ");
    __asm__("fcmovnbe st0, st1");
    ebp2 = ebp3 + 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&edx4) + 1) = 55;
    esi5->f93 = reinterpret_cast<signed char>(esi6->f93 >> 1);
    tmp8_7 = reinterpret_cast<unsigned char>(edx4->f37 + ch8);
    *reinterpret_cast<uint1_t*>(&eflags1) = reinterpret_cast<uint1_t>(tmp8_7 < edx4->f37);
    edx4->f37 = tmp8_7;
    __asm__("fucomip st0, st3");
    *reinterpret_cast<signed char*>(&edx4) = *reinterpret_cast<signed char*>(esi9 + 1 - 0x637720c8);
    __asm__("les edi, [edx+0x74]");
    *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags1) = 0;
    *reinterpret_cast<int1_t*>(&eflags1) = 0;
    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags1) + 1) = __intrinsic();
    *reinterpret_cast<int1_t*>(&eflags1) = __intrinsic();
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(&g66ee0b2c) + 4) = eflags1 & 0xfcffff;
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al11 - 79))) - 10) + *reinterpret_cast<uint1_t*>(&eflags1));
    __asm__("aas ");
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&g66ee0b2c) + 2) = ebp2;
    if (__intrinsic()) {
        *reinterpret_cast<int32_t*>(ebp2 - 0x5aff259b) = *reinterpret_cast<int32_t*>(ebp2 - 0x5aff259b) - reinterpret_cast<int32_t>(edx4);
    } else {
        *reinterpret_cast<uint32_t*>(&g66ee0b2c) = eax10 & 0x7ef62ee2;
        __asm__("int 0x96");
        __asm__("out 0xf6, eax");
        g66ee0b28 = 0x10007835;
        edx4->f1();
    }
}

int32_t fun_10007853() {
    int32_t eax1;

    __asm__("lds ecx, [edi-0x4c]");
    return eax1 + 71;
}

struct s759 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_10007877(uint32_t ecx, int32_t a2) {
    unsigned char* eax3;
    struct s759* eax4;
    unsigned char** edi5;
    int32_t edi6;
    int32_t edi7;
    uint1_t cf8;
    int32_t ebx9;
    int32_t ebx10;
    int32_t ebx11;
    uint16_t fs12;

    eax3 = &eax4->f1;
    *edi5 = eax3;
    edi6 = edi7 + 4;
    cf8 = reinterpret_cast<uint1_t>(*reinterpret_cast<uint32_t*>(eax3 - 38) < edi6 + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax3) < 0xe3));
    *reinterpret_cast<uint32_t*>(eax3 - 38) = *reinterpret_cast<uint32_t*>(eax3 - 38) - (edi6 + cf8);
    if (ecx - (ebx9 + reinterpret_cast<uint1_t>(ecx < ebx10 + cf8)) - 1) {
        __asm__("lds edi, [edx+0x414cba7c]");
        __asm__("sti ");
    } else {
        *reinterpret_cast<uint32_t*>(ebx11 + 0x3840b6) = fs12;
        *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
        *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
        *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
        __asm__("rol byte [eax], 0x0");
        *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
        *eax3 = reinterpret_cast<unsigned char>(*eax3 + *reinterpret_cast<unsigned char*>(&eax3));
    }
}

void fun_10008044(int32_t ecx) {
    void* eax2;
    signed char al3;
    uint1_t cf4;
    void** edi5;
    signed char* eax6;
    signed char** edi7;
    void* edi8;
    signed char bh9;
    int32_t ebx10;
    int32_t ebx11;
    uint1_t zf12;
    signed char* edx13;

    __asm__("fdiv qword [ecx]");
    __asm__("into ");
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(al3 - 62) + cf4);
    *edi5 = eax2;
    eax6 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax2) - 1);
    __asm__("iretd ");
    edi7 = reinterpret_cast<signed char**>(reinterpret_cast<int32_t>(edi8) + 4 + 1);
    __asm__("fdivr st0, st7");
    __asm__("in eax, 0xec");
    *edi7 = reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(*edi7) & 0x77);
    *reinterpret_cast<unsigned char*>(&eax6) = 48;
    __asm__("wait ");
    *reinterpret_cast<signed char*>(&eax6 + 1) = -24;
    __asm__("fstp qword [esi+0x72]");
    *eax6 = reinterpret_cast<signed char>(*eax6 + bh9);
    *reinterpret_cast<uint32_t*>(ebx10 + 0x4fc000a5) = *reinterpret_cast<int32_t*>(ebx11 + 0x4fc000a5) + (reinterpret_cast<int32_t>(__zero_stack_offset()) - 1) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax6) < reinterpret_cast<unsigned char>(0xd0bd8160));
    __asm__("xlatb ");
    __asm__("in al, dx");
    zf12 = reinterpret_cast<uint1_t>(*edi7 == eax6);
    *edx13 = -24;
    if (!(reinterpret_cast<uint1_t>(!!(ecx - 1)) & zf12)) {
    }
    __asm__("in al, 0x55");
}

void fun_1000813b(int32_t ecx) {
    __asm__("pushad ");
}

struct s760 {
    signed char[1] pad1;
    int32_t f1;
};

void fun_1000833f(signed char cl) {
    int32_t ecx2;
    int32_t eflags3;
    struct s760* ebx4;
    signed char* edi5;
    signed char* esi6;
    int32_t* edi7;
    int32_t edi8;

    *reinterpret_cast<signed char*>(&ecx2) = -36;
    __asm__("int 0xec");
    eflags3 = ebx4->f1;
    *edi5 = *esi6;
    edi7 = reinterpret_cast<int32_t*>(edi8 + (1 - 2 * *reinterpret_cast<uint1_t*>(reinterpret_cast<int32_t>(&eflags3) + 1)));
    *edi7 = *edi7 - ecx2;
}

struct s761 {
    unsigned char f0;
    signed char[262143] pad262144;
    signed char f262144;
};

void fun_10008595() {
    int32_t eax1;
    signed char al2;
    signed char* eax3;
    unsigned char al4;
    signed char* eax5;
    uint1_t cf6;
    unsigned char tmp8_7;
    signed char bh8;
    int1_t cf9;
    struct s761* eax10;
    signed char ch11;

    *reinterpret_cast<unsigned char*>(&eax1) = reinterpret_cast<unsigned char>(al2 - reinterpret_cast<unsigned char>(*eax3 + reinterpret_cast<uint1_t>(al4 < reinterpret_cast<unsigned char>(*eax5 + cf6))));
    tmp8_7 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax1 + 0x2e000005) + bh8);
    cf9 = tmp8_7 < *reinterpret_cast<unsigned char*>(eax1 + 0x2e000005);
    *reinterpret_cast<unsigned char*>(eax1 + 0x2e000005) = tmp8_7;
    if (cf9) 
        goto 0x10008603;
    __asm__("popad ");
    if (!*reinterpret_cast<unsigned char*>(eax1 + 0x2e000005)) 
        goto 0x10008603;
    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax1) & 0x7a);
    if (__intrinsic()) 
        goto "RT$XCU";
    eax10->f0 = reinterpret_cast<unsigned char>(eax10->f0 + *reinterpret_cast<unsigned char*>(&eax10));
    eax10->f262144 = reinterpret_cast<signed char>(eax10->f262144 + ch11);
    eax10->f0 = reinterpret_cast<unsigned char>(eax10->f0 + *reinterpret_cast<unsigned char*>(&eax10));
}

void fun_1000953d(int32_t ecx) {
}

void** fun_10009700() {
    void*** eax1;
    int32_t ecx2;
    void** ecx3;
    void** eax4;
    int1_t zf5;

    eax1 = g2c;
    ecx2 = g1002444c;
    ecx3 = *reinterpret_cast<void***>(eax1 + ecx2 * 4);
    eax4 = g10024618;
    if (reinterpret_cast<signed char>(eax4) > reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx3 + 4)) && (fun_1000b57d(0x10024618), zf5 = reinterpret_cast<int1_t>(g10024618 == 0xffffffff), zf5)) {
        g10024484 = reinterpret_cast<void**>(0x1002461c);
        g1002461c = 0x10001058;
        fun_1000a45e(ecx3, fun_1000ce00);
        eax4 = fun_1000b53c(ecx3, 0x10024618, fun_1000ce00);
    }
    *reinterpret_cast<signed char*>(&eax4) = 1;
    return eax4;
}

int32_t fun_10009810() {
    return 0x80004001;
}

int32_t fun_10009f12() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 40) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

int32_t fun_10009f55() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 44) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

int32_t fun_10009f9b() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 48) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

int32_t fun_1000a008() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 56) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

int32_t fun_1000a04e() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 60) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

int32_t fun_1000a09f() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 64) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

int32_t fun_1000a22b() {
    int32_t ecx1;
    int32_t ebp2;

    ecx1 = 0;
    *reinterpret_cast<unsigned char*>(&ecx1) = reinterpret_cast<uint1_t>(***reinterpret_cast<int32_t***>(ebp2 - 20) == 0xc0000005);
    return ecx1;
}

/* (image base) */
int32_t image_base_ = 0x1000a6e7;

void fun_1000bbe2() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 28) = eax1;
    image_base_();
    goto eax1;
}

void fun_1000c1eb() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 32) = eax1;
    image_base_();
    goto eax1;
}

void fun_1000c2ca() {
    int32_t v1;
    int32_t ebp2;

    v1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    image_base_();
    goto v1;
}

int32_t fun_1000c4a0(int32_t ecx, void** a2) {
    void** v3;

    v3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc);
    if (a2) {
        fun_1000c526(a2, a2, v3);
    } else {
        fun_1000c39a("L", v3);
    }
    return 0;
}

void fun_1000d33c(int32_t a1) {
    int32_t eax2;

    if (a1) {
        eax2 = reinterpret_cast<int32_t>(GetProcessHeap(0, a1));
        HeapFree(eax2, 0, a1);
    }
    return;
}

int32_t RoOriginateError = 0x25ff0;

void fun_1000d830() {
    RoOriginateError();
    goto 0;
}

int32_t fun_1000f370() {
    int32_t v1;

    if (!v1) {
        --g10024668;
    } else {
        ++g10024668;
    }
    return 0;
}

/* (image base) */
int32_t image_base_ = 0x1000a741;

void fun_1000f530() {
    void** v1;
    int32_t v2;
    signed char al3;
    int32_t esi4;
    void** ebp5;

    v1 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!v2))));
    al3 = reinterpret_cast<signed char>(image_base_());
    if (!al3) {
        fun_1000f55e(0, 0xff, v1, esi4, ebp5, __return_address());
    }
    goto v1;
}

struct s762 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    int32_t f12;
};

struct s762* fun_1000f7b0(struct s762* ecx, unsigned char a2) {
    int32_t edi3;
    int32_t eax4;
    int32_t eax5;

    edi3 = ecx->f12;
    ecx->f0 = 0x100010a8;
    if (edi3) {
        eax4 = reinterpret_cast<int32_t>(GetProcessHeap());
        HeapFree(eax4, 0, edi3);
    }
    ecx->f8 = 0xc0000001;
    if (a2 & 1) {
        eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax5, 0, ecx);
    }
    return ecx;
}

void** fun_1000f880(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** edi50;
    void** esi51;
    void** ebp52;
    void** eax53;
    void** ecx54;
    void** esi55;
    void** eax56;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax53 = fun_1000f6d4(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    if (reinterpret_cast<signed char>(eax53) >= reinterpret_cast<signed char>(0)) {
        ecx54 = g0;
        esi55 = *reinterpret_cast<void***>(ecx54);
        image_base_(esi55, 0, a2, a3);
        esi55(esi55, 0, a2, a3);
    }
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax56 = fun_1000a130(reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47));
    return eax56;
}

int32_t fun_10010670() {
    int32_t eax1;

    eax1 = fun_1001093b();
    if (eax1) {
        fun_10010a12();
    }
    return 0;
}

void fun_10010690(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    int1_t zf10;
    void** esi11;
    void** ebp12;
    int32_t eax13;
    int1_t zf14;

    zf10 = (g100244c0 & 0x400) == 0;
    if (!zf10) {
        fun_10010b65(ecx, esi11, ebp12, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9);
    }
    eax13 = reinterpret_cast<int32_t>(WaitForSingleObject());
    if (eax13 == 0x102) {
        fun_10010a12();
        SetEvent(a2);
        CloseHandle(a2, a2);
    }
    zf14 = (g100244c0 & 0x400) == 0;
    if (!zf14) {
        fun_10010b65(ecx, 0, esi11, ebp12, __return_address(), a2, a3, a4, a5, a6, a7, a8);
    }
    goto esi11;
}

struct s763 {
    signed char[16] pad16;
    int32_t f16;
};

struct s763* fun_10010f70(struct s763* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f16 = 0xc0000001;
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

struct s177* fun_10010fa0(struct s177* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47) {
    void** esi48;
    void** ebp49;
    int32_t eax50;

    fun_10010f22(ecx, esi48, ebp49, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
    if (*reinterpret_cast<unsigned char*>(&a2) & 1 && ecx) {
        eax50 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax50, 0, ecx);
    }
    return ecx;
}

struct s764 {
    signed char[32] pad32;
    uint32_t f32;
};

void** fun_10011760(struct s764* a1) {
    void* ebp2;
    uint32_t eax3;
    int1_t below_or_equal4;
    void** v5;
    void** v6;
    void** v7;
    signed char al8;
    void** v9;
    void** v10;
    void** v11;
    int32_t v12;
    void** eax13;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    a1->f32 = 0;
    below_or_equal4 = g10024008 <= 5;
    if (!below_or_equal4 && (al8 = fun_100121ac(0x10024008, 0, 0x2000, v5, v6, v7), !!al8)) {
        fun_100121e9(0x10024008, 0x10024008, 0x10024008, 2, reinterpret_cast<uint32_t>(ebp2) - 44, v9, v10, v11, v12);
    }
    eax13 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax13;
}

int32_t SetSuspendState = 0x2644e;

int32_t fun_10012130(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6) {
    void** v7;
    void** eax8;
    uint32_t eax9;
    void** edi10;
    void** esi11;
    void** ebp12;
    void** eax13;
    void** v14;
    void** eax15;

    v7 = ecx;
    eax8 = *reinterpret_cast<void***>(a2);
    if (!(*reinterpret_cast<unsigned char*>(&eax8) & 6)) {
        if (!(*reinterpret_cast<unsigned char*>(&eax8) & 80)) {
            if (*reinterpret_cast<signed char*>(&eax8) < reinterpret_cast<signed char>(0)) {
                image_base_(0, 0xff, 0);
            }
        } else {
            eax9 = reinterpret_cast<unsigned char>(eax8) >> 6;
            SetSuspendState(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) & 1)), 0, 0);
        }
    } else {
        eax13 = fun_10018c27(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4, edi10, esi11, v7, ebp12, __return_address(), a2, a3, a4, a5, a6);
        if (!eax13) {
            v14 = *reinterpret_cast<void***>(a2 + 4);
            ecx = *reinterpret_cast<void***>(a2);
            eax15 = fun_1001208a(ecx, v14);
            InitiateShutdownW(ecx, 0, 0, 0, eax15, v14);
            fun_10018c27(ecx, 0, 0, 0, 0, eax15, v14, edi10, esi11, v7, ebp12, __return_address());
        }
    }
    CoTaskMemFree(ecx);
    return 0;
}

struct s97* fun_10012f70(struct s97* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void** esi46;
    void** ebp47;
    int32_t eax48;

    fun_10012d1b(ecx, esi46, ebp47, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    if (*reinterpret_cast<unsigned char*>(&a2) & 1 && ecx) {
        eax48 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax48, 0, ecx);
    }
    return ecx;
}

struct s765 {
    signed char[36] pad36;
    uint32_t f36;
};

uint32_t fun_10013006(struct s765* a1) {
    uint32_t* edi2;
    uint32_t ecx3;
    uint32_t eax4;
    uint32_t esi5;

    edi2 = &a1->f36;
    ecx3 = *edi2;
    while (eax4 = ecx3 >> 31, !*reinterpret_cast<signed char*>(&eax4)) {
        esi5 = ecx3 + 1;
        if (*edi2 == esi5) {
            *edi2 = esi5;
        }
        if (ecx3 == ecx3) 
            goto addr_10013048_7;
        ecx3 = ecx3;
    }
    __asm__("lock xadd [ecx*2+0xc], esi");
    esi5 = 2;
    addr_10013048_7:
    return esi5;
}

void fun_10013330(int32_t a1, int32_t* a2) {
    *a2 = 0;
    PostMessageW();
    goto 0x404;
}

void fun_10013770(int32_t a1) {
    PostMessageW();
    goto 0x402;
}

struct s767 {
    signed char[24] pad24;
    int32_t f24;
};

struct s766 {
    struct s767* f0;
    signed char[32] pad36;
    uint32_t f36;
};

void** fun_10013ed6(int32_t ecx, struct s766* a2) {
    void* ebp3;
    uint32_t eax4;
    uint32_t v5;
    struct s766* ebx6;
    uint32_t* esi7;
    uint32_t ecx8;
    uint32_t eax9;
    uint32_t edi10;
    struct s767* eax11;
    int32_t esi12;
    void** eax13;
    void** ecx14;
    void** esi15;
    void** eax16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = eax4 ^ reinterpret_cast<uint32_t>(ebp3);
    ebx6 = a2;
    esi7 = &ebx6->f36;
    ecx8 = *esi7;
    while (eax9 = ecx8 >> 31, !*reinterpret_cast<signed char*>(&eax9)) {
        edi10 = ecx8 - 1;
        if (*esi7 == edi10) {
            *esi7 = edi10;
        }
        if (ecx8 == ecx8) 
            goto addr_10013f24_7;
        ecx8 = ecx8;
    }
    __asm__("lock xadd [ecx*2+0xc], edi");
    edi10 = 0xfffffffe;
    addr_10013f24_7:
    if (!edi10) {
        if (ebx6) {
            eax11 = ebx6->f0;
            esi12 = eax11->f24;
            image_base_(esi12, 1);
            esi12(ebx6, 1);
        }
        eax13 = g10024484;
        if (eax13) {
            ecx14 = *reinterpret_cast<void***>(eax13);
            esi15 = *reinterpret_cast<void***>(ecx14 + 8);
            image_base_(esi15, eax13);
            esi15(esi15, eax13);
        }
    }
    eax16 = fun_1000a130(v5 ^ reinterpret_cast<uint32_t>(ebp3));
    return eax16;
}

void fun_10013f6d() {
    goto 0x10013ee0;
}

int32_t GetWindowLongW = 0x26544;

struct s769 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
};

struct s768 {
    struct s769* f0;
    int32_t f4;
};

int32_t IsWindowUnicode = 0x26e10;

int32_t DefWindowProcA = 0x26e22;

int32_t DefWindowProcW = 0x26556;

int32_t SetWindowLongW = 0x26532;

void** fun_10016160(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, struct s109** a5) {
    void* ebp6;
    uint32_t eax7;
    struct s768* eax8;
    int32_t eax9;
    struct s769* ecx10;
    int32_t esi11;
    struct s769* eax12;
    int32_t esi13;
    struct s769* eax14;
    int32_t esi15;
    struct s109* edi16;
    struct s110* eax17;
    int32_t esi18;
    uint32_t ecx19;
    void** eax20;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    if (a3 != 0x81) {
        eax8 = reinterpret_cast<struct s768*>(GetWindowLongW(a2, 0));
        if (!eax8) {
            eax9 = reinterpret_cast<int32_t>(IsWindowUnicode(a2, a2, 0));
            if (!eax9) {
                DefWindowProcA(a2, a3, a4, a5, a2, a2, 0);
            } else {
                DefWindowProcW(a2, a3, a4, a5, a2, a2, 0);
            }
        } else {
            ecx10 = eax8->f0;
            esi11 = ecx10->f0;
            image_base_(esi11, eax8, a2, 0);
            esi11(esi11, eax8, a2, 0);
            eax12 = eax8->f0;
            esi13 = eax12->f8;
            image_base_(esi13, a2, a3, a4, a5, eax8, a2, 0);
            esi13(eax8, a2, a3, a4, a5, eax8, a2, 0);
            if (a3 == 0x82) {
                SetWindowLongW(eax8, a2, 0, 0, a2, a3, a4, a5, eax8, a2, 0);
                eax8->f4 = 0;
            }
            eax14 = eax8->f0;
            esi15 = eax14->f4;
            image_base_(esi15, eax8, a2, a3, a4, a5, eax8, a2, 0);
            esi15(esi15, eax8, a2, a3, a4, a5, eax8, a2, 0);
        }
    } else {
        edi16 = *a5;
        if (edi16) {
            edi16->f4 = a2;
            SetWindowLongW(a2, 0, edi16);
            eax17 = edi16->f0;
            esi18 = eax17->f8;
            image_base_(esi18, a2, 0x81, a4, a5, a2, 0, edi16);
            esi18(edi16, a2, 0x81, a4, a5, a2, 0, edi16);
        }
    }
    ecx19 = eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6);
    eax20 = fun_1000a130(ecx19, ecx19);
    return eax20;
}

struct s183* fun_100166e0(struct s183* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44) {
    void** esi45;
    void** ebp46;
    int32_t eax47;

    fun_100165ef(ecx, esi45, ebp46, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44);
    if (*reinterpret_cast<unsigned char*>(&a2) & 1 && ecx) {
        eax47 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax47, 0, ecx);
    }
    return ecx;
}

struct s771 {
    signed char[164] pad164;
    int32_t f164;
};

struct s770 {
    signed char[136] pad136;
    struct s771** f136;
};

struct s772 {
    int32_t f0;
    signed char f4;
    signed char[3] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
    signed char[4] pad24;
    int16_t f24;
};

/* (image base) */
int32_t image_base_ = 0x1000aa10;

struct s773 {
    signed char[148] pad148;
    int32_t f148;
};

/* (image base) */
int32_t image_base_ = 0x1000aa56;

void** fun_10016b70(struct s770* ecx, struct s772* a2) {
    void* ebp3;
    uint32_t eax4;
    struct s770* edi5;
    int32_t ecx6;
    int32_t esi7;
    int16_t ax8;
    int16_t ax9;
    int16_t ax10;
    int16_t ax11;
    struct s773** eax12;
    int32_t esi13;
    struct s771** eax14;
    int32_t esi15;
    void** eax16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    edi5 = ecx;
    if (a2->f8 == 2 && (a2->f12 == 1 && (!a2->f16 && a2->f24 == 13))) {
        ecx6 = a2->f0;
        ax8 = reinterpret_cast<int16_t>(image_base_(ecx6, esi7));
        ax9 = reinterpret_cast<int16_t>(image_base_(ecx6, "O", esi7));
        if (ax8 == ax9 || (ecx6 = a2->f0, ax10 = reinterpret_cast<int16_t>(image_base_(ecx6, "O", esi7)), ax11 = reinterpret_cast<int16_t>(image_base_(ecx6, "O", "O", esi7)), ax10 == ax11)) {
            image_base_(ecx6, "R", "O", esi7);
            eax12 = reinterpret_cast<struct s773**>(image_base_(edi5));
            esi13 = (*eax12)->f148;
            image_base_(esi13);
            esi13(eax12);
            edi5 = edi5;
        } else {
            eax14 = edi5->f136;
            esi15 = (*eax14)->f164;
            image_base_(esi15);
            esi15(esi15);
        }
        a2->f4 = 1;
    }
    if (!a2->f4) {
        image_base_(edi5, a2);
    }
    eax16 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax16;
}

struct s775 {
    signed char[16] pad16;
    int32_t f16;
    int32_t f20;
    uint32_t f24;
    uint32_t f28;
    int32_t f32;
};

struct s774 {
    signed char[4] pad4;
    struct s775* f4;
};

void fun_100173f0(struct s774* ecx) {
    struct s775* ecx2;
    int32_t eax3;
    int32_t v4;
    int32_t v5;

    ecx2 = ecx->f4;
    eax3 = reinterpret_cast<int32_t>(GetLastInputInfo());
    if (eax3) {
        if (ecx2->f32) {
            ecx2->f32 = 0;
            ecx2->f28 = 0;
        } else {
            ecx2->f28 = ecx2->f28 + 1;
        }
    }
    if (ecx2->f28 >= ecx2->f24) {
        v4 = ecx2->f20;
        v5 = ecx2->f16;
        PostMessageW(v5, v4, 0, 0);
    }
    return;
}

struct s777 {
    uint32_t f0;
    int32_t** f4;
};

struct s776 {
    signed char[4] pad4;
    struct s777* f4;
    signed char[16] pad24;
    int32_t f24;
};

void** fun_100174a0(int32_t ecx, struct s776* a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t** edi5;
    int32_t esi6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (!a2->f24) {
        edi5 = a2->f4->f4;
        esi6 = **edi5;
        image_base_(esi6);
        esi6(edi5);
    } else {
        a2->f4->f0 = 0;
    }
    eax7 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax7;
}

struct s778 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
};

/* (image base) */
int32_t image_base_ = 0x1000ae66;

struct s778* fun_10017620(struct s778* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f0 = 0x100014d8;
    ecx->f8 = 0x1000139c;
    ecx->f12 = 0x100014b4;
    ecx->f16 = 0x10001388;
    --g10024668;
    image_base_();
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

/* (image base) */
int32_t image_base_ = 0x1000af8a;

int32_t fun_10017670(int32_t ecx, unsigned char a2) {
    int32_t eax3;

    image_base_();
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10019ac0(void** ecx, unsigned char a2) {
    int32_t eax3;

    fun_100198d3(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

struct s779 {
    signed char[16] pad16;
    uint32_t* f16;
};

signed char fun_1001a5b0(struct s779* ecx) {
    if (!ecx->f16 || !(*ecx->f16 & 0xfffffff)) {
        return 0;
    } else {
        return 1;
    }
}

struct s781 {
    uint32_t f0;
    void** f4;
};

struct s780 {
    signed char[16] pad16;
    struct s781* f16;
};

void fun_1001a940(struct s780* ecx) {
    struct s780* edi2;
    uint32_t esi3;
    struct s781* edx4;
    int32_t v5;
    int32_t ebx6;
    void** ecx7;
    void** ecx8;
    void** ecx9;
    void** ecx10;

    edi2 = ecx;
    esi3 = 0;
    edx4 = edi2->f16;
    if (edx4->f0 & 0xfffffff) {
        v5 = ebx6;
        do {
            if (!(edx4->f0 & 0x10000000)) {
                ecx7 = reinterpret_cast<void**>(&edx4->f4);
            } else {
                ecx7 = edx4->f4;
            }
            ecx8 = *reinterpret_cast<void***>(ecx7 + esi3);
            image_base_(ecx8, 1, v5);
            if (!(edi2->f16->f0 & 0x10000000)) {
                ecx9 = reinterpret_cast<void**>(&edi2->f16->f4);
            } else {
                ecx9 = edi2->f16->f4;
            }
            ecx10 = *reinterpret_cast<void***>(ecx9 + esi3);
            image_base_(ecx10);
            edx4 = edi2->f16;
            ++esi3;
        } while (esi3 < (edx4->f0 & 0xfffffff));
    }
    return;
}

void fun_1001a9a0(struct s144* ecx) {
    struct s144* esi2;
    uint32_t ebx3;
    struct s145* ecx4;
    void** edi5;
    void** edi6;
    signed char al7;
    void** eax8;
    void** v9;
    void** v10;
    uint32_t v11;
    void** ecx12;
    int32_t v13;
    uint32_t eax14;
    int32_t v15;
    void** v16;
    void** v17;

    esi2 = ecx;
    ebx3 = 0;
    ecx4 = esi2->f16;
    if (ecx4->f0 & 0xfffffff) {
        do {
            if (!(ecx4->f0 & 0x10000000)) {
                edi5 = reinterpret_cast<void**>(&ecx4->f4);
            } else {
                edi5 = *reinterpret_cast<void***>(&ecx4->f4);
            }
            edi6 = *reinterpret_cast<void***>(edi5 + ebx3 * 4);
            al7 = fun_1001a53e(edi6);
            if (al7) {
                eax8 = image_base_;
                if (eax8 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax8 + 28)) & 8) {
                    v9 = *reinterpret_cast<void***>(eax8 + 20);
                    v10 = *reinterpret_cast<void***>(eax8 + 16);
                    fun_1001c7af(11, v10, v9, edi6);
                }
                fun_1001b0b5(edi6);
            } else {
                v11 = reinterpret_cast<uint1_t>(esi2->f44 == 6);
                image_base_(edi6, v11);
                if (esi2->f48 && esi2->f44 == 7) {
                    image_base_(edi6, 0xfd, v11);
                }
            }
            ecx4 = esi2->f16;
            ++ebx3;
        } while (ebx3 < (ecx4->f0 & 0xfffffff));
    }
    ecx12 = image_base_;
    if (ecx12 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx12 + 28)) & 8) {
        v13 = esi2->f44;
        eax14 = esi2->f12;
        v15 = esi2->f20;
        v16 = *reinterpret_cast<void***>(ecx12 + 20);
        v17 = *reinterpret_cast<void***>(ecx12 + 16);
        fun_1001c806(12, v17, v16, esi2, eax14, v15, v13);
    }
    return;
}

struct s783 {
    uint32_t f0;
    void** f4;
};

struct s782 {
    signed char[16] pad16;
    struct s783* f16;
    signed char[24] pad44;
    int32_t f44;
};

void fun_1001aac0(struct s782* ecx) {
    struct s782* ebx2;
    uint32_t edi3;
    uint32_t eax4;
    uint32_t v5;
    int32_t v6;
    int32_t esi7;
    void** esi8;
    void** esi9;
    int32_t ecx10;

    ebx2 = ecx;
    edi3 = 0;
    eax4 = ebx2->f16->f0 & 0xfffffff;
    v5 = eax4;
    if (eax4) {
        v6 = esi7;
        do {
            if (!(ebx2->f16->f0 & 0x10000000)) {
                esi8 = reinterpret_cast<void**>(&ebx2->f16->f4);
            } else {
                esi8 = ebx2->f16->f4;
            }
            esi9 = *reinterpret_cast<void***>(esi8 + edi3);
            image_base_(esi9, 1, v6);
            image_base_(esi9, 0xff, 1, v6);
            if (!(ebx2->f16->f0 & 0x10000000)) {
            }
            ecx10 = ebx2->f44;
            image_base_(ecx10);
            ++edi3;
        } while (edi3 < v5);
    }
    return;
}

struct s785 {
    uint32_t f0;
    void** f4;
};

struct s786 {
    uint32_t f0;
    void** f4;
};

struct s784 {
    signed char[16] pad16;
    struct s785* f16;
    signed char[24] pad44;
    struct s786* f44;
};

void fun_1001ab40(struct s784* ecx) {
    struct s784* esi2;
    uint32_t ebx3;
    uint32_t edi4;
    struct s785* edx5;
    void** ecx6;
    void** ecx7;
    void** ecx8;
    void** ecx9;
    void** ecx10;
    void** ecx11;
    void** ecx12;
    void** ecx13;
    void** ecx14;
    void** ecx15;
    struct s786* ecx16;
    void** ecx17;
    void** ecx18;

    esi2 = ecx;
    ebx3 = 0;
    edi4 = 0;
    edx5 = esi2->f16;
    if (edx5->f0 & 0xfffffff) {
        do {
            if (!(edx5->f0 & 0x10000000)) {
                ecx6 = reinterpret_cast<void**>(&edx5->f4);
            } else {
                ecx6 = edx5->f4;
            }
            ecx7 = *reinterpret_cast<void***>(ecx6 + edi4);
            image_base_(ecx7, 0xfd);
            if (!(esi2->f16->f0 & 0x10000000)) {
                ecx8 = reinterpret_cast<void**>(&esi2->f16->f4);
            } else {
                ecx8 = esi2->f16->f4;
            }
            ecx9 = *reinterpret_cast<void***>(ecx8 + edi4);
            image_base_(ecx9, 0xff, 0xfd);
            if (!(esi2->f16->f0 & 0x10000000)) {
                ecx10 = reinterpret_cast<void**>(&esi2->f16->f4);
            } else {
                ecx10 = esi2->f16->f4;
            }
            ecx11 = *reinterpret_cast<void***>(ecx10 + edi4);
            image_base_(ecx11, 0xff, 0xff, 0xfd);
            if (!(esi2->f16->f0 & 0x10000000)) {
                ecx12 = reinterpret_cast<void**>(&esi2->f16->f4);
            } else {
                ecx12 = esi2->f16->f4;
            }
            ecx13 = *reinterpret_cast<void***>(ecx12 + edi4);
            image_base_(ecx13, 0, 0xff, 0xff, 0xfd);
            if (!(esi2->f16->f0 & 0x10000000)) {
                ecx14 = reinterpret_cast<void**>(&esi2->f16->f4);
            } else {
                ecx14 = esi2->f16->f4;
            }
            ecx15 = *reinterpret_cast<void***>(ecx14 + edi4);
            image_base_(ecx15, 0, 0, 0xff, 0xff, 0xfd);
            edx5 = esi2->f16;
            ++edi4;
        } while (edi4 < (edx5->f0 & 0xfffffff));
    }
    ecx16 = esi2->f44;
    if (ecx16->f0 & 0xfffffff) {
        do {
            if (!(ecx16->f0 & 0x10000000)) {
                ecx17 = reinterpret_cast<void**>(&ecx16->f4);
            } else {
                ecx17 = ecx16->f4;
            }
            ecx18 = *reinterpret_cast<void***>(ecx17 + ebx3);
            image_base_(ecx18, 0xff);
            ecx16 = esi2->f44;
            ++ebx3;
        } while (ebx3 < (ecx16->f0 & 0xfffffff));
    }
    return;
}

struct s788 {
    uint32_t f0;
    void** f4;
};

struct s787 {
    signed char[16] pad16;
    struct s788* f16;
};

void fun_1001ac40(struct s787* ecx) {
    struct s788* eax2;
    uint32_t ebx3;
    struct s787* v4;
    uint32_t edi5;
    uint32_t ebx6;
    int32_t v7;
    int32_t esi8;
    void** esi9;
    void** esi10;

    eax2 = ecx->f16;
    ebx3 = eax2->f0;
    v4 = ecx;
    edi5 = 0;
    ebx6 = ebx3 & 0xfffffff;
    if (ebx6) {
        v7 = esi8;
        do {
            if (!(ecx->f16->f0 & 0x10000000)) {
                esi9 = reinterpret_cast<void**>(&ecx->f16->f4);
            } else {
                esi9 = ecx->f16->f4;
            }
            esi10 = *reinterpret_cast<void***>(esi9 + edi5);
            image_base_(esi10, 0, v7);
            image_base_(esi10, 0xfd, 0, v7);
            image_base_(esi10);
            ecx = v4;
            ++edi5;
        } while (edi5 < ebx6);
    }
    return;
}

struct s790 {
    uint32_t f0;
    void** f4;
};

struct s789 {
    signed char[16] pad16;
    struct s790* f16;
    signed char[24] pad44;
    unsigned char f44;
};

void fun_1001aca0(struct s789* ecx) {
    struct s789* esi2;
    struct s790* edx3;
    uint32_t edi4;
    int32_t eax5;
    void** ecx6;
    void** ecx7;

    esi2 = ecx;
    edx3 = esi2->f16;
    if (edx3) {
        edi4 = 0;
        if (edx3->f0 & 0xfffffff) {
            do {
                eax5 = 0;
                *reinterpret_cast<unsigned char*>(&eax5) = reinterpret_cast<uint1_t>(esi2->f44 == 0);
                if (!(edx3->f0 & 0x10000000)) {
                    ecx6 = reinterpret_cast<void**>(&edx3->f4);
                } else {
                    ecx6 = edx3->f4;
                }
                ecx7 = *reinterpret_cast<void***>(ecx6 + edi4);
                image_base_(ecx7, eax5 * 2 - 3);
                edx3 = esi2->f16;
                ++edi4;
            } while (edi4 < (edx3->f0 & 0xfffffff));
        }
    }
    return;
}

void fun_1001ad00(struct s144* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void** v12;
    void** v13;
    void** esi14;
    struct s144* esi15;
    struct s145* ecx16;
    void** v17;
    void** ebx18;
    uint32_t ebx19;
    void** v20;
    void** edi21;
    void** edi22;
    void** edi23;
    signed char al24;
    void** eax25;
    void** v26;
    void** v27;
    uint32_t v28;
    uint32_t v29;
    int32_t eax30;
    void** v31;
    void** ecx32;
    int32_t v33;
    uint32_t eax34;
    int32_t v35;
    void** v36;
    void** v37;

    v12 = reinterpret_cast<void**>(__return_address());
    v13 = esi14;
    esi15 = ecx;
    ecx16 = esi15->f16;
    if (ecx16) {
        v17 = ebx18;
        ebx19 = 0;
        if (ecx16->f0 & 0xfffffff) {
            v20 = edi21;
            do {
                if (!(ecx16->f0 & 0x10000000)) {
                    edi22 = reinterpret_cast<void**>(&ecx16->f4);
                } else {
                    edi22 = *reinterpret_cast<void***>(&ecx16->f4);
                }
                edi23 = *reinterpret_cast<void***>(edi22 + ebx19 * 4);
                al24 = fun_1001a53e(edi23);
                if (al24) {
                    eax25 = image_base_;
                    if (eax25 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax25 + 28)) & 8) {
                        v26 = *reinterpret_cast<void***>(eax25 + 20);
                        v27 = *reinterpret_cast<void***>(eax25 + 16);
                        fun_1001c7af(13, v27, v26, edi23);
                    }
                    fun_1001b0b5(edi23);
                } else {
                    v28 = reinterpret_cast<uint1_t>(esi15->f44 == 6);
                    image_base_(edi23, v28);
                    v29 = reinterpret_cast<uint1_t>(esi15->f44 == 6);
                    image_base_(edi23, v29, v28);
                    if (esi15->f48) {
                        eax30 = 0;
                        *reinterpret_cast<unsigned char*>(&eax30) = reinterpret_cast<uint1_t>(esi15->f44 == 6);
                        image_base_(edi23, eax30 * 2 - 3, v29, v28);
                    }
                }
                if (esi15->f49 && !esi15->f24) {
                    v31 = esi15->f52;
                    fun_1001b0f0(edi23, v31, v20, v17, v13, v12, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                }
                ecx16 = esi15->f16;
                ++ebx19;
            } while (ebx19 < (ecx16->f0 & 0xfffffff));
        }
        if (esi15->f16->f0 & 0xfffffff && ((ecx32 = image_base_, ecx32 != 0x10024000) && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx32 + 28)) & 8)) {
            v33 = esi15->f44;
            eax34 = esi15->f12;
            v35 = esi15->f20;
            v36 = *reinterpret_cast<void***>(ecx32 + 20);
            v37 = *reinterpret_cast<void***>(ecx32 + 16);
            fun_1001c806(14, v37, v36, esi15, eax34, v35, v33);
        }
    }
    return;
}

struct s791 {
    signed char[16] pad16;
    int32_t f16;
    signed char[24] pad44;
    int32_t f44;
};

void** fun_1001b650(struct s791* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t ebx4;
    int32_t v5;
    void** eax6;
    int32_t v7;
    void** esi8;
    void** ecx9;
    void** edi10;
    int32_t esi11;
    void** ebx12;
    void** eax13;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ebx4 = ecx->f44;
    v5 = ecx->f16;
    eax6 = fun_1001a4ee(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8);
    if (reinterpret_cast<signed char>(eax6) >= reinterpret_cast<signed char>(0)) {
        v7 = reinterpret_cast<int32_t>(&ecx->pad44);
        esi8 = g0;
        ecx9 = *reinterpret_cast<void***>(esi8 + 0x78);
        image_base_(ecx9, 0, v5, ebx4, v7);
        *reinterpret_cast<void***>(esi8 + 0x78)(ecx9, 0, v5, ebx4, v7);
    }
    fun_1001ccf4(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8, edi10, esi11, ebx12);
    eax13 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax13;
}

struct s793 {
    uint32_t f0;
    void** f4;
};

struct s792 {
    signed char[16] pad16;
    struct s793* f16;
    signed char[24] pad44;
    signed char f44;
};

void** fun_1001b6c0(struct s792* ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    void** v5;
    void** ebx6;
    int32_t v7;
    int32_t esi8;
    void** v9;
    void** edi10;
    struct s792* ebx11;
    uint32_t edi12;
    struct s793* ecx13;
    uint32_t eax14;
    uint32_t eax15;
    void** edx16;
    void** v17;
    void** ecx18;
    void** v19;
    void** eax20;
    void** esi21;
    uint32_t eax22;
    void** edx23;
    void** v24;
    void** ecx25;
    void** v26;
    void** eax27;
    int32_t v28;
    void** esi29;
    void** ecx30;
    void** eax31;
    int32_t v32;
    void** esi33;
    void** ecx34;
    void** eax35;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    v5 = ebx6;
    v7 = esi8;
    v9 = edi10;
    ebx11 = ecx;
    edi12 = 0;
    do {
        ecx13 = ebx11->f16;
        if (edi12 >= (ecx13->f0 & 0xfffffff)) 
            break;
        eax14 = ecx13->f0 >> 28;
        if (!ebx11->f44) {
            eax15 = eax14 & 1;
            if (!eax15) {
                edx16 = reinterpret_cast<void**>(&ecx13->f4);
            } else {
                edx16 = ecx13->f4;
            }
            v17 = *reinterpret_cast<void***>(edx16 + edi12);
            if (!eax15) {
                ecx18 = reinterpret_cast<void**>(&ecx13->f4);
            } else {
                ecx18 = ecx13->f4;
            }
            v19 = *reinterpret_cast<void***>(ecx18 + edi12);
            eax20 = fun_1001a4ee(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8);
            esi21 = eax20;
            if (reinterpret_cast<signed char>(esi21) < reinterpret_cast<signed char>(0)) 
                continue;
        } else {
            eax22 = eax14 & 1;
            if (!eax22) {
                edx23 = reinterpret_cast<void**>(&ecx13->f4);
            } else {
                edx23 = ecx13->f4;
            }
            v24 = *reinterpret_cast<void***>(edx23 + edi12);
            if (!eax22) {
                ecx25 = reinterpret_cast<void**>(&ecx13->f4);
            } else {
                ecx25 = ecx13->f4;
            }
            v26 = *reinterpret_cast<void***>(ecx25 + edi12);
            eax27 = fun_1001a4ee(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8);
            esi21 = eax27;
            if (reinterpret_cast<signed char>(esi21) < reinterpret_cast<signed char>(0)) 
                continue; else 
                goto addr_1001b72f_18;
        }
        v28 = reinterpret_cast<int32_t>(&ebx11->pad44);
        esi29 = g0;
        ecx30 = *reinterpret_cast<void***>(esi29 + 20);
        image_base_(ecx30, 0, v19, v17, 0xff, v28);
        eax31 = reinterpret_cast<void**>(*reinterpret_cast<void***>(esi29 + 20)(ecx30, 0, v19, v17, 0xff, v28));
        addr_1001b79e_20:
        esi21 = eax31;
        continue;
        addr_1001b72f_18:
        v32 = reinterpret_cast<int32_t>(&ebx11->pad44);
        esi33 = g0;
        ecx34 = *reinterpret_cast<void***>(esi33 + 24);
        image_base_(ecx34, 0, v26, v24, v32);
        eax31 = reinterpret_cast<void**>(*reinterpret_cast<void***>(esi33 + 24)(ecx34, 0, v26, v24, v32));
        goto addr_1001b79e_20;
        fun_1001ccf4(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8, v9, v7, v5);
        ++edi12;
    } while (reinterpret_cast<signed char>(esi21) >= reinterpret_cast<signed char>(0));
    eax35 = fun_1000a130(v4 ^ reinterpret_cast<uint32_t>(ebp2));
    return eax35;
}

void** fun_1001b7d0(void** ecx, void** a2, void** a3, void** a4) {
    void** v5;
    void** v6;
    void** ebp7;
    void*** ebp8;
    void** v9;
    void** v10;
    void** ebx11;
    void** v12;
    void** esi13;
    void** v14;
    void** edi15;
    void** esi16;
    void** edi17;
    void** eax18;
    void** v19;
    void** eax20;
    void** ebx21;
    void** eax22;
    void** eax23;
    void** ecx24;
    void** v25;
    void** edi26;
    void** edi27;
    signed char al28;
    signed char al29;
    void** v30;
    void** eax31;
    void** eax32;
    void** v33;
    void** eax34;
    void** edi35;
    void** v36;
    int32_t eax37;
    void** eax38;
    void** v39;
    void** eax40;
    void** ecx41;
    uint32_t eax42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;

    v5 = reinterpret_cast<void**>(__return_address());
    v6 = ebp7;
    ebp8 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v9 = ecx;
    v10 = ebx11;
    v12 = esi13;
    v14 = edi15;
    esi16 = ecx;
    edi17 = reinterpret_cast<void**>(0x8007000e);
    eax18 = reinterpret_cast<void**>(GetProcessHeap());
    v19 = eax18;
    eax20 = reinterpret_cast<void**>(HeapAlloc());
    ebx21 = eax20;
    if (ebx21 && (eax22 = fun_1001a605(ebx21, ecx, ecx, v19, 8, 12, v14, v12, v10), edi17 = eax22, reinterpret_cast<signed char>(edi17) >= reinterpret_cast<signed char>(0))) {
        eax23 = *reinterpret_cast<void***>(esi16 + 16);
        ecx24 = reinterpret_cast<void**>(0);
        v25 = reinterpret_cast<void**>(0);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax23)) & 0xfffffff) {
            do {
                if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(esi16 + 16))) & 0x10000000)) {
                    edi26 = *reinterpret_cast<void***>(esi16 + 16) + 4;
                } else {
                    edi26 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(esi16 + 16) + 4);
                }
                edi27 = *reinterpret_cast<void***>(edi26 + reinterpret_cast<unsigned char>(ecx24) * 4);
                al28 = reinterpret_cast<signed char>(image_base_(edi27));
                if (al28 && *reinterpret_cast<void***>(esi16 + 44) == 7 || (al29 = reinterpret_cast<signed char>(image_base_(edi27)), !al29) && reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi16 + 44) == 6)) {
                    v30 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi16 + 50)));
                    image_base_(edi27, v30);
                    if (*reinterpret_cast<void***>(esi16 + 48) && reinterpret_cast<int1_t>(*reinterpret_cast<void***>(esi16 + 44) == 6)) {
                        image_base_(edi27, 0xff, v30);
                    }
                    eax31 = *reinterpret_cast<void***>(ebx21);
                    eax32 = fun_1001a63d(ebx21, reinterpret_cast<unsigned char>(eax31) & 0xfffffff, ebp8 + 0xfffffff8, v30);
                    if (reinterpret_cast<signed char>(eax32) >= reinterpret_cast<signed char>(0)) {
                        *reinterpret_cast<void***>(v9) = edi27;
                    }
                    if (*reinterpret_cast<signed char*>(esi16 + 49)) {
                        v33 = *reinterpret_cast<void***>(esi16 + 52);
                        fun_1001b0f0(edi27, v33, v30, v19, 8, 12, v14, v12, v10, v9, v25, v6, v5, a2, a3, a4);
                    }
                }
                eax34 = *reinterpret_cast<void***>(esi16 + 16);
                ecx24 = v25 + 1;
                v25 = ecx24;
            } while (reinterpret_cast<unsigned char>(ecx24) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax34)) & 0xfffffff));
        }
        edi35 = *reinterpret_cast<void***>(esi16 + 16);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi35)) & 0x10000000) {
            if (*reinterpret_cast<void***>(edi35 + 4)) {
                v36 = *reinterpret_cast<void***>(edi35 + 4);
                eax37 = reinterpret_cast<int32_t>(GetProcessHeap(0, v36));
                HeapFree(eax37, 0, v36);
                *reinterpret_cast<void***>(edi35 + 4) = reinterpret_cast<void**>(0);
            }
            *reinterpret_cast<void***>(edi35 + 8) = reinterpret_cast<void**>(0);
        }
        *reinterpret_cast<void***>(edi35) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi35)) & 0xe0000000);
        eax38 = reinterpret_cast<void**>(GetProcessHeap(0, edi35));
        HeapFree(eax38, 0, edi35);
        *reinterpret_cast<void***>(esi16 + 16) = ebx21;
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx21)) & 0xfffffff)) {
            edi17 = reinterpret_cast<void**>(0x8000ffff);
        } else {
            v39 = *reinterpret_cast<void***>(esi16 + 44);
            eax40 = fun_1001bdec(ebp8 + 0xfffffffc, ebx21, v39, esi16 + 20, eax38, 0, edi35);
            edi17 = eax40;
            ecx41 = image_base_;
            if (ecx41 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx41 + 28)) & 8) {
                eax42 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi16 + 12));
                v43 = *reinterpret_cast<void***>(esi16 + 44);
                v44 = *reinterpret_cast<void***>(esi16 + 20);
                v45 = *reinterpret_cast<void***>(ecx41 + 20);
                v46 = *reinterpret_cast<void***>(ecx41 + 16);
                fun_1001c83f(v46, v45, esi16, eax42, v44, v43, edi17, eax38, 0, edi35);
            }
            fun_1001ccf4(ebp8 + 0xfffffffc, eax38, 0, edi35);
        }
    }
    return edi17;
}

int32_t fun_1001bd30(void** ecx) {
    void** eax2;
    void** v3;
    void** v4;

    eax2 = image_base_;
    if (eax2 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax2 + 28)) & 8) {
        v3 = *reinterpret_cast<void***>(eax2 + 20);
        v4 = *reinterpret_cast<void***>(eax2 + 16);
        fun_1001c7af(20, v4, v3, ecx);
    }
    return 0x80004001;
}

void** fun_1001c570() {
    void** edi1;
    void** eax2;
    void** v3;
    void** eax4;
    void** v5;
    void** v6;
    void** edi7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** esi12;
    void** v13;
    void** v14;
    void** eax15;
    void** v16;

    edi1 = g10024740;
    if (edi1) {
        eax2 = v3;
        if (*reinterpret_cast<void***>(edi1 + 24) != eax2) {
            if (*reinterpret_cast<void***>(edi1 + 28) == eax2) {
                eax4 = image_base_;
                if (eax4 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax4 + 28)) & 8) {
                    v5 = *reinterpret_cast<void***>(eax4 + 20);
                    v6 = *reinterpret_cast<void***>(eax4 + 16);
                    fun_1001c676(30, v6, v5, edi7, v8, v9);
                }
                v10 = *reinterpret_cast<void***>(edi1 + 28);
                KillTimer(30, 0, v10);
                *reinterpret_cast<void***>(edi1 + 28) = reinterpret_cast<void**>(0);
                eax2 = fun_1001c113(edi1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 32, 0, v10, edi7);
            }
        } else {
            v11 = *reinterpret_cast<void***>(edi1 + 24);
            KillTimer(0, v11, esi12);
            v13 = *reinterpret_cast<void***>(edi1 + 32);
            v14 = *reinterpret_cast<void***>(edi1 + 4);
            eax15 = reinterpret_cast<void**>(image_base_());
            *reinterpret_cast<void***>(edi1 + 24) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi1 + 32) = reinterpret_cast<void**>(0xffffffff);
            v16 = *reinterpret_cast<void***>(eax15 + 36);
            fun_1001a13d(edi1, v16, v14, v13, 0, v11, esi12);
            fun_1001c317(edi1, v14, v13, 0, v11, esi12);
            eax2 = fun_1001af64(eax15, v14, v13, 0, v11, esi12);
        }
    }
    return eax2;
}

struct s794 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
};

struct s794* fun_1001cd40(struct s794* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f0 = 0x100018f4;
    ecx->f8 = 0xc0000001;
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

struct s796 {
    signed char[8] pad8;
    void* f8;
};

struct s795 {
    signed char[8] pad8;
    int32_t f8;
    int32_t f12;
    signed char[4] pad20;
    struct s796** f20;
    uint32_t f24;
};

int32_t CoRevokeInitializeSpy = 0x27048;

/* SHCORE.dll:141 */
int32_t SHCORE_dll_141 = 0x8000008d;

void** fun_1001d780(int32_t ecx, struct s795* a2, int32_t a3) {
    void* ebp4;
    uint32_t eax5;
    int32_t v6;
    int32_t v7;
    int32_t edi8;
    struct s796** v9;
    struct s796** ecx10;
    struct s796* eax11;
    struct s796** esi12;
    void** eax13;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    if (a3 == 1) {
        v6 = a2->f12;
        a2->f24 = 0;
        v7 = a2->f8;
        CoRevokeInitializeSpy(v7, v6, edi8);
        v9 = a2->f20;
        SHCORE_dll_141(v9, v7, v6, edi8);
        ecx10 = a2->f20;
        if (ecx10) {
            eax11 = *ecx10;
            esi12 = *reinterpret_cast<struct s796***>(&eax11->f8);
            ecx10 = esi12;
            image_base_(ecx10);
            esi12(ecx10);
            a2->f20 = reinterpret_cast<struct s796**>(0);
        }
        TlsSetValue(ecx10);
    }
    eax13 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax13;
}

struct s797 {
    signed char[76] pad76;
    int32_t f76;
};

void** fun_1001d970(int32_t ecx, struct s797** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s797* eax5;
    int32_t esi6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0x8], ebx");
    if (!1) {
        if (a2) {
            eax5 = *a2;
            esi6 = eax5->f76;
            image_base_(esi6, 1);
            esi6(a2, 1);
        }
        eax7 = g10024484;
        if (eax7) {
            ecx8 = *reinterpret_cast<void***>(eax7);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax7);
            esi9(esi9, eax7);
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

struct s196* fun_1001e18c(struct s196* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14) {
    void** esi15;
    void** ebp16;
    int32_t eax17;

    fun_1001e0b9(ecx, esi15, ebp16, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    if (*reinterpret_cast<unsigned char*>(&a2) & 1 && ecx) {
        eax17 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax17, 0, ecx);
    }
    return ecx;
}

void** fun_1001e270(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    uint32_t eax45;
    void** v46;
    void** esi47;
    void** ebx48;
    void** edi49;
    void** v50;
    void** ebp51;
    void** v52;
    void** esi53;
    void** ecx54;
    int32_t eax55;
    void** ecx56;
    void** v57;
    void** v58;
    void** esi59;
    uint32_t v60;
    void** ecx61;
    int32_t eax62;
    void** esi63;
    void** v64;
    void** ecx65;
    int32_t eax66;
    uint32_t v67;
    uint32_t v68;
    void** esi69;
    void** ecx70;
    void** eax71;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax45 = g100240c4;
    v46 = reinterpret_cast<void**>(eax45 ^ reinterpret_cast<uint32_t>(ebp44));
    if (!*reinterpret_cast<void***>(a1 + 60)) {
        *reinterpret_cast<void***>(a1 + 60) = reinterpret_cast<void**>(1);
        fun_100136b5(ebp44 + 0xfffffff4, esi47, ebx48, edi49, 0, v50, v46, ebp51, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
        v52 = reinterpret_cast<void**>(ebp44 + 0xfffffff4);
        esi53 = *reinterpret_cast<void***>(a2);
        ecx54 = *reinterpret_cast<void***>(esi53);
        image_base_(ecx54, a2, 0x10007880, v52, esi47, ebx48);
        eax55 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi53)(ecx54, a2, 0x10007880, v52, esi47, ebx48));
        if (eax55 >= 0 && ((ecx56 = *reinterpret_cast<void***>(a1 + 0x28c), !!ecx56) && (v57 = *reinterpret_cast<void***>(a1 + 72), v58 = *reinterpret_cast<void***>(a1 + 68), esi59 = g0, v60 = reinterpret_cast<uint32_t>(a1 + 78), ecx61 = *reinterpret_cast<void***>(esi59 + 12), image_base_(ecx61, 0, v60, ecx56, v58, v57, a2, 0x10007880, v52, esi47, ebx48), eax62 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi59 + 12)(ecx61, 0, v60, ecx56, v58, v57, a2, 0x10007880, v52, esi47, ebx48)), eax62 >= 0))) {
            *reinterpret_cast<void***>(a1 + 0x28c) = reinterpret_cast<void**>(0);
        }
        fun_100136b5(ebp44 + 0xfffffff8, a2, 0x10007880, v52, esi47, ebx48, edi49, 0, 0, v46, ebp51, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40);
        esi63 = *reinterpret_cast<void***>(a2);
        v64 = reinterpret_cast<void**>(ebp44 + 0xfffffff8);
        ecx65 = *reinterpret_cast<void***>(esi63);
        image_base_(ecx65);
        eax66 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi63)(ecx65));
        if (eax66 >= 0) {
            v67 = reinterpret_cast<uint32_t>(a1 + 0x258);
            v68 = reinterpret_cast<uint32_t>(a1 + 78);
            esi69 = g0;
            ecx70 = *reinterpret_cast<void***>(esi69 + 12);
            image_base_(ecx70, 0, v68, v67);
            *reinterpret_cast<void***>(esi69 + 12)(ecx70, 0, v68, v67);
        }
        fun_100136b5(ebp44 + 0xfffffff8, a2, 0x100084a4, v64, a2, 0x10007880, v52, esi47, ebx48, edi49, 0, 0, v46, ebp51, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
        fun_100136b5(ebp44 + 0xfffffff4, a2, 0x100084a4, v64, a2, 0x10007880, v52, esi47, ebx48, edi49, 0, 0, v46, ebp51, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    }
    eax71 = fun_1000a130(reinterpret_cast<unsigned char>(v46) ^ reinterpret_cast<uint32_t>(ebp44));
    return eax71;
}

struct s798 {
    signed char[20] pad20;
    uint32_t f20;
    uint32_t f24;
};

int32_t DuplicateHandle = 0x26336;

uint32_t fun_1001e360(int32_t ecx, struct s798* a2, uint32_t* a3) {
    uint32_t esi4;
    uint32_t* edi5;
    uint32_t eax6;
    uint32_t eax7;
    uint32_t eax8;
    int1_t sf9;
    uint32_t v10;
    int32_t eax11;
    uint32_t v12;
    int32_t eax13;
    uint32_t eax14;
    int1_t sf15;

    *a3 = 0;
    esi4 = 0;
    edi5 = &a2->f20;
    if (!*edi5) {
        eax6 = a2->f24;
        eax7 = reinterpret_cast<uint32_t>(CreateEventW(0, 1, eax6, 0));
        if (!eax7) {
            eax8 = reinterpret_cast<uint32_t>(GetLastError(0, 1, eax6, 0));
            esi4 = eax8;
            sf9 = reinterpret_cast<int32_t>(esi4) < reinterpret_cast<int32_t>(0);
            if (!(reinterpret_cast<uint1_t>(sf9) | reinterpret_cast<uint1_t>(esi4 == 0))) {
                esi4 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi4)) | 0x80070000;
                sf9 = reinterpret_cast<int32_t>(esi4) < reinterpret_cast<int32_t>(0);
            }
            if (!sf9) {
                esi4 = 0x80004005;
            }
        } else {
            *edi5 = eax7;
            if (eax6 != a2->f24) {
                v10 = *edi5;
                if (!a2->f24) {
                    ResetEvent(v10, 0, 1, eax6, 0);
                } else {
                    SetEvent(v10, 0, 1, eax6, 0);
                }
            }
        }
    }
    if (*edi5) {
        eax11 = reinterpret_cast<int32_t>(GetCurrentProcess());
        v12 = *edi5;
        eax13 = reinterpret_cast<int32_t>(DuplicateHandle(eax11, v12, eax11, a3, 0, 0, 2));
        if (!eax13) {
            eax14 = reinterpret_cast<uint32_t>(GetLastError(eax11, v12, eax11, a3, 0, 0, 2));
            esi4 = eax14;
            sf15 = reinterpret_cast<int32_t>(esi4) < reinterpret_cast<int32_t>(0);
            if (!(reinterpret_cast<uint1_t>(sf15) | reinterpret_cast<uint1_t>(esi4 == 0))) {
                esi4 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi4)) | 0x80070000;
                sf15 = reinterpret_cast<int32_t>(esi4) < reinterpret_cast<int32_t>(0);
            }
            if (!sf15) {
                esi4 = 0x80004005;
            }
        } else {
            esi4 = 0;
        }
    }
    return esi4;
}

void** fun_1001e63e(struct s194** a1, int32_t a2, struct s194*** a3) {
    void** eax4;

    eax4 = fun_1001de77(a1, a3);
    return eax4;
}

void fun_1001e694(int32_t a1, int32_t a2, int32_t a3) {
    SHLWAPI_dll_219();
    goto 0x10001998;
}

struct s799 {
    signed char[28] pad28;
    int32_t f28;
};

void** fun_1001e7a6(int32_t ecx, struct s799** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s799* eax5;
    int32_t esi6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0xc], ebx");
    if (!1) {
        if (a2) {
            eax5 = *a2;
            esi6 = eax5->f28;
            image_base_(esi6, 1);
            esi6(a2, 1);
        }
        eax7 = g10024484;
        if (eax7) {
            ecx8 = *reinterpret_cast<void***>(eax7);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax7);
            esi9(esi9, eax7);
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

struct s154* fun_1001ece0(struct s154* ecx, unsigned char a2) {
    int32_t eax3;

    fun_1001ec7f(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

/* (image base) */
int32_t image_base_ = 0x1000b9ee;

void fun_1001ed60(int32_t a1) {
    image_base_(a1 - 16);
    return;
}

void** fun_1001ede0(int32_t ecx, int32_t a2, int32_t* a3) {
    void* ebp4;
    uint32_t eax5;
    struct s197** eax6;
    struct s197* eax7;
    int32_t esi8;
    void** eax9;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    *a3 = 0;
    eax6 = fun_1001ec1b();
    if (eax6) {
        eax7 = *eax6;
        esi8 = eax7->f4;
        image_base_(esi8);
        esi8(eax6);
        *a3 = reinterpret_cast<int32_t>(eax6 + 4);
    }
    eax9 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax9;
}

signed char ga23e1000;

void fun_1001f05d() {
    signed char al1;
    signed char* eax2;
    signed char* eax3;
    signed char dl4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;

    ga23e1000 = al1;
    *eax2 = reinterpret_cast<signed char>(*eax3 + dl4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    __asm__("in al, 0xff");
}

void fun_1001f155() {
    signed char* eax1;
    signed char* eax2;
    signed char dl3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + dl3);
}

void fun_1001f1ad() {
    __asm__("rol dword [eax], 0x10");
}

void fun_1001f1d9() {
    signed char* eax1;
    signed char* eax2;
    signed char dl3;

    *eax1 = reinterpret_cast<signed char>(*eax2 + dl3);
}

struct s800 {
    void* f0;
    signed char[2] pad3;
    unsigned char f3;
    signed char[6] pad10;
    unsigned char f10;
    signed char[7] pad18;
    signed char f18;
    signed char[1] pad20;
    unsigned char f20;
};

struct s801 {
    unsigned char f0;
    signed char[3] pad4;
    unsigned char f4;
};

signed char* fun_2201f666(int32_t a1);

struct s802 {
    signed char f0;
    signed char[40] pad41;
    unsigned char f41;
};

void* gf000020a;

void* gfe2c020f;

struct s803 {
    signed char f0;
    unsigned char f1;
    signed char[100663823] pad100663825;
    unsigned char f100663825;
};

struct s804 {
    unsigned char f0;
    void* f1;
};

struct s805 {
    signed char[1] pad1;
    unsigned char f1;
};

struct s806 {
    unsigned char f0;
    void* f1;
};

void* gf000020e;

struct s807 {
    void* f0;
    signed char f1;
};

struct s808 {
    void* f0;
    unsigned char f1;
};

struct s809 {
    void* f0;
    unsigned char f1;
    signed char[23] pad25;
    signed char f25;
};

struct s810 {
    void* f0;
    signed char[1] pad2;
    unsigned char f2;
    signed char[23] pad26;
    signed char f26;
    signed char[358219751] pad358219778;
    unsigned char f358219778;
};

uint32_t g15b20002;

uint48_t g218;

void** fun_d000240f();

unsigned char g214;

struct s811 {
    unsigned char f0;
    void* f1;
};

uint48_t g20e;

void fun_1001f3ed(void** ecx) {
    signed char* esi2;
    signed char* esi3;
    signed char dh4;
    signed char* edx5;
    signed char* edx6;
    signed char al7;
    signed char* edx8;
    signed char* edx9;
    signed char ah10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char tmp8_14;
    signed char* eax15;
    signed char* eax16;
    unsigned char* edx17;
    signed char* edx18;
    signed char bl19;
    unsigned char tmp8_20;
    signed char* eax21;
    signed char* eax22;
    void* eax23;
    signed char* eax24;
    unsigned char al25;
    signed char* edx26;
    int32_t esi27;
    int32_t esi28;
    signed char* edx29;
    void* dl30;
    struct s800* edx31;
    void* dh32;
    signed char* edx33;
    signed char* eax34;
    unsigned char tmp8_35;
    uint1_t cf36;
    struct s801* eax37;
    uint16_t es38;
    signed char dh39;
    void* dh40;
    void* bh41;
    signed char* eax42;
    unsigned char tmp8_43;
    int1_t cf44;
    signed char* eax45;
    struct s802* es46;
    struct s802* es47;
    struct s802** esp48;
    struct s802* es49;
    void** eax50;
    void* al51;
    signed char* esi52;
    signed char* esi53;
    signed char bh54;
    uint32_t eax55;
    void* ebx56;
    void* ebx57;
    uint32_t eax58;
    signed char bh59;
    signed char* eax60;
    signed char bh61;
    void* bl62;
    unsigned char* esi63;
    signed char* esi64;
    void** eax65;
    void* tmp8_66;
    struct s803* v67;
    int16_t cs68;
    struct s803* cs69;
    unsigned char* edi70;
    uint32_t* edi71;
    uint16_t cs72;
    void* tmp8_73;
    uint1_t cf74;
    void* tmp8_75;
    uint1_t cf76;
    unsigned char tmp8_77;
    uint1_t cf78;
    signed char bh79;
    void* tmp8_80;
    signed char* edi81;
    struct s804* edi82;
    struct s805* edi83;
    struct s806* esi84;
    void* tmp8_85;
    uint1_t cf86;
    void* ebx87;
    void* ebx88;
    void* eax89;
    void* eax90;
    unsigned char tmp8_91;
    uint1_t cf92;
    void* eax93;
    unsigned char tmp8_94;
    uint1_t cf95;
    struct s807* eax96;
    void* tmp8_97;
    uint1_t cf98;
    void* al99;
    uint1_t cf100;
    struct s808* edi101;
    struct s809* esi102;
    void* tmp8_103;
    struct s810* edx104;
    void* tmp8_105;
    void* bh106;
    uint16_t ss107;
    void* tmp8_108;
    uint1_t cf109;
    void* dl110;
    int16_t ss111;
    int16_t ss112;
    void* tmp8_113;
    void* bh114;
    void* tmp8_115;
    uint1_t cf116;
    unsigned char tmp8_117;
    signed char bl118;
    uint1_t cf119;
    void* ebx120;
    void* ebx121;
    void* tmp8_122;
    uint1_t cf123;
    signed char* eax124;
    signed char bh125;
    unsigned char tmp8_126;
    uint1_t cf127;
    unsigned char tmp8_128;
    uint1_t cf129;
    void* tmp8_130;
    uint1_t cf131;
    signed char bl132;
    unsigned char tmp8_133;
    uint1_t cf134;
    uint32_t eax135;
    void* tmp8_136;
    uint1_t cf137;
    uint32_t eax138;
    int32_t ebx139;
    int32_t ebx140;
    int32_t ebx141;
    int32_t ebx142;
    int32_t ebx143;
    int32_t ebx144;
    int32_t ebx145;
    int32_t ebx146;
    int32_t ebx147;
    int32_t ebx148;
    int32_t ebx149;
    int32_t ebx150;
    signed char bl151;
    int16_t ds152;
    int16_t ds153;
    void* bl154;
    void* bl155;
    void** eax156;
    unsigned char al157;
    uint32_t eax158;
    signed char* eax159;
    unsigned char tmp8_160;
    unsigned char al161;
    void* bh162;
    signed char* eax163;
    unsigned char* edi164;
    struct s811* esi165;
    signed char* eax166;
    struct s802* eax167;
    struct s802** esp168;
    unsigned char tmp8_169;
    uint1_t cf170;
    struct s802* esi171;
    void** esp172;

    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + 1);
    *esi2 = reinterpret_cast<signed char>(*esi3 + dh4);
    *edx5 = reinterpret_cast<signed char>(*edx6 + al7);
    *edx8 = reinterpret_cast<signed char>(*edx9 + ah10);
    *reinterpret_cast<signed char*>(&eax11) = reinterpret_cast<signed char>(al12 + *eax13);
    tmp8_14 = *eax11;
    *eax11 = *reinterpret_cast<signed char*>(&eax11);
    *reinterpret_cast<signed char*>(&eax15) = tmp8_14;
    *reinterpret_cast<unsigned char*>(&eax16) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax15) + *eax15);
    *edx17 = reinterpret_cast<unsigned char>(*edx18 + *reinterpret_cast<unsigned char*>(&eax16));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(eax16)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(eax16)) + bl19);
    tmp8_20 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax16) + *eax16);
    *reinterpret_cast<unsigned char*>(&eax21) = tmp8_20;
    if (!(reinterpret_cast<uint1_t>(tmp8_20 < *reinterpret_cast<unsigned char*>(&eax16)) | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax21) == 0))) {
        *reinterpret_cast<unsigned char*>(&eax21) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax21) + *eax21);
    }
    __asm__("enter 0x201, 0x0");
    *reinterpret_cast<unsigned char*>(&eax22) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax21) | 2);
    *reinterpret_cast<unsigned char*>(&eax23) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax22) + *eax22);
    eax24 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax23) - 1);
    al25 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax24) + *edx26);
    *reinterpret_cast<unsigned char*>(esi27 - 0x53fffdfe) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(esi28 - 0x53fffdfe) + al25);
    *reinterpret_cast<void**>(&edx29) = reinterpret_cast<void*>(reinterpret_cast<signed char>(dl30) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<void**>(&edx31) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx29)) + reinterpret_cast<signed char>(dh32));
    *reinterpret_cast<unsigned char*>(&eax24) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al25 + *edx33) + *edx29) + reinterpret_cast<unsigned char>(edx31->f0));
    *eax24 = reinterpret_cast<signed char>(*eax24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax24) + 1));
    eax34 = reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax24) + reinterpret_cast<unsigned char>(edx31->f0));
    edx31->f3 = reinterpret_cast<unsigned char>(edx31->f3 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    tmp8_35 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax34) + *eax34);
    cf36 = reinterpret_cast<uint1_t>(tmp8_35 < *reinterpret_cast<unsigned char*>(&eax34));
    *reinterpret_cast<unsigned char*>(&eax34) = tmp8_35;
    if (!(cf36 | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax34) == 0))) {
        *reinterpret_cast<unsigned char*>(&eax34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax34) + *eax34);
    }
    *reinterpret_cast<unsigned char*>(&eax34) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax34) + *eax34);
    __asm__("cli ");
    eax37 = reinterpret_cast<struct s801*>(reinterpret_cast<uint32_t>(eax34) + reinterpret_cast<unsigned char>(edx31->f0));
    eax37->f4 = reinterpret_cast<unsigned char>(eax37->f4 + *reinterpret_cast<unsigned char*>(&eax37));
    *reinterpret_cast<unsigned char*>(&eax37) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax37) + eax37->f0);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edx31) + reinterpret_cast<uint32_t>(eax37)) = es38;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx31) - 0x23fffdfc) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx31) - 0x23fffdfc) + dh39);
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(dh40) + reinterpret_cast<signed char>(bh41));
    *reinterpret_cast<unsigned char*>(&eax37) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax37) + 2) + 2);
    eax37->f0 = reinterpret_cast<unsigned char>(eax37->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1)));
    eax42 = fun_2201f666(__return_address());
    *reinterpret_cast<unsigned char*>(&eax42) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) + *eax42);
    tmp8_43 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) + *eax42);
    cf44 = tmp8_43 < *reinterpret_cast<unsigned char*>(&eax42);
    *reinterpret_cast<unsigned char*>(&eax42) = tmp8_43;
    if (!cf44) {
        *reinterpret_cast<unsigned char*>(&eax42) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) + *eax42);
        *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1) = reinterpret_cast<void*>(6);
        *reinterpret_cast<unsigned char*>(&eax42) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) + *eax42);
    }
    __asm__("fadd dword [esi]");
    *reinterpret_cast<unsigned char*>(&eax42) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax42) + *eax42);
    eax45 = eax42 - 1;
    es46 = es47;
    esp48 = reinterpret_cast<struct s802**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 - 2 - 2 + 2);
    *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + *eax45);
    if (*reinterpret_cast<unsigned char*>(&eax45)) {
        *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + *eax45);
        es46 = es49;
        *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + *eax45);
        esp48 = esp48 + 1 - 1;
    }
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) | *reinterpret_cast<unsigned char*>(&eax45));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(ecx)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax45) + reinterpret_cast<int32_t>(ecx)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    *reinterpret_cast<unsigned char*>(&eax45) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + *eax45);
    eax50 = reinterpret_cast<void**>(eax45 - 1);
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<int32_t>(ecx) + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax50) + reinterpret_cast<int32_t>(ecx) + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) - 0x17fffdf8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) - 0x17fffdf8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(ecx)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(ecx)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax50) + 1));
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    __asm__("pushad ");
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) | reinterpret_cast<uint32_t>(eax50));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) - 0x45fffdf7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) - 0x45fffdf7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) | reinterpret_cast<uint32_t>(eax50));
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)));
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) | reinterpret_cast<unsigned char>(edx31->f0));
    edx31->f10 = reinterpret_cast<unsigned char>(edx31->f10 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)));
    al51 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax50)) + reinterpret_cast<unsigned char>(*eax50));
    gf000020a = al51;
    *reinterpret_cast<void**>(&eax50) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(al51) | reinterpret_cast<unsigned char>(edx31->f0));
    *esi52 = reinterpret_cast<signed char>(*esi53 + bh54);
    eax55 = reinterpret_cast<uint32_t>(eax50) | reinterpret_cast<unsigned char>(edx31->f0);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx56) + reinterpret_cast<int32_t>(ecx) + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx57) + reinterpret_cast<int32_t>(ecx) + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<signed char*>(eax55 - 0x29fffdf5) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax55 - 0x29fffdf5) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax55) + 1));
    eax58 = eax55 | reinterpret_cast<unsigned char>(edx31->f0);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax58) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax58) + 1) + bh59);
    eax60 = reinterpret_cast<signed char*>(eax58 | reinterpret_cast<unsigned char>(edx31->f0));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp48) + reinterpret_cast<int32_t>(ecx)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp48) + reinterpret_cast<int32_t>(ecx)) + bh61);
    *reinterpret_cast<unsigned char*>(&eax60) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax60) + *eax60);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) + reinterpret_cast<uint32_t>(eax60)) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) + reinterpret_cast<uint32_t>(eax60))));
    __asm__("lodsb ");
    *reinterpret_cast<void**>(&edx31) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)) + reinterpret_cast<signed char>(bl62));
    *reinterpret_cast<unsigned char*>(&eax60) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax60) | 2) | 2);
    *esi63 = reinterpret_cast<unsigned char>(*esi64 + *reinterpret_cast<unsigned char*>(&eax60));
    eax65 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax60) | 0xd4e0002);
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax65)) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax65) == 0))) {
        eax65 = reinterpret_cast<void**>(0xfe2c020f);
        tmp8_66 = reinterpret_cast<void*>(15 + reinterpret_cast<unsigned char>(gfe2c020f));
        *reinterpret_cast<void**>(&eax65) = tmp8_66;
    }
    *reinterpret_cast<int16_t*>(&v67 + 1) = cs68;
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    __asm__("lodsb ");
    v67 = cs69;
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    __asm__("fimul word [esi]");
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    *reinterpret_cast<void**>(&ecx) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)) ^ *edi70);
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    __asm__("lar eax, word [eax]");
    *edi71 = cs72;
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    __asm__("lar eax, word [eax]");
    *eax65 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax65) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)));
    tmp8_73 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    cf74 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_73) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)));
    *reinterpret_cast<void**>(&eax65) = tmp8_73;
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edx31->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65))) + cf74);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(edx31) + 0x10ce0002) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax65) + reinterpret_cast<uint32_t>(edx31) + 0x10ce0002) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    *reinterpret_cast<void**>(&edx31) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)) - reinterpret_cast<unsigned char>(*ecx));
    tmp8_75 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    cf76 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_75) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)));
    *reinterpret_cast<void**>(&eax65) = tmp8_75;
    __asm__("pushad ");
    edx31->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) + reinterpret_cast<uint32_t>(eax65) + cf76);
    tmp8_77 = reinterpret_cast<unsigned char>(v67->f100663825 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1)));
    cf78 = reinterpret_cast<uint1_t>(tmp8_77 < v67->f100663825);
    v67->f100663825 = tmp8_77;
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(edx31->f0)) + cf78);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edx31) + reinterpret_cast<uint32_t>(edx31) + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(edx31) + reinterpret_cast<uint32_t>(edx31) + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)));
    edx31->f18 = reinterpret_cast<signed char>(edx31->f18 + bh79);
    tmp8_80 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65));
    *edi81 = *reinterpret_cast<signed char*>(&v67->f0);
    edi82 = reinterpret_cast<struct s804*>(&edi83->f1);
    esi84 = reinterpret_cast<struct s806*>(&v67->f1);
    tmp8_85 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    cf86 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_85) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1)));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1) = tmp8_85;
    *reinterpret_cast<void**>(&eax65) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_80) + reinterpret_cast<unsigned char>(edx31->f0)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_80) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)))) + reinterpret_cast<unsigned char>(edx31->f0)) + cf86);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx87) + reinterpret_cast<uint32_t>(edx31)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx88) + reinterpret_cast<uint32_t>(edx31)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)));
    eax89 = gf000020e;
    eax90 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax89) + reinterpret_cast<unsigned char>(edx31->f0) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65)) + reinterpret_cast<unsigned char>(*eax65)) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax65))));
    tmp8_91 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi84) - 0x47fffded) + *reinterpret_cast<signed char*>(&eax90));
    cf92 = reinterpret_cast<uint1_t>(tmp8_91 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi84) - 0x47fffded));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi84) - 0x47fffded) = tmp8_91;
    eax93 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax90) + reinterpret_cast<unsigned char>(edx31->f0) + cf92);
    tmp8_94 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax93) + 1) + *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax93) + 1));
    cf95 = reinterpret_cast<uint1_t>(tmp8_94 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax93) + 1));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax93) + 1) = tmp8_94;
    eax96 = reinterpret_cast<struct s807*>(reinterpret_cast<uint32_t>(eax93) + reinterpret_cast<unsigned char>(edx31->f0) + cf95);
    tmp8_97 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx31->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    cf98 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_97) < reinterpret_cast<unsigned char>(edx31->f0));
    edx31->f0 = tmp8_97;
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + 2) + cf98);
    edx31->f20 = reinterpret_cast<unsigned char>(edx31->f20 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    al99 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    cf100 = reinterpret_cast<uint1_t>(esi84->f0 < edi82->f0);
    edi82->f0 = esi84->f0;
    edi101 = reinterpret_cast<struct s808*>(&edi82->f1);
    esi102 = reinterpret_cast<struct s809*>(&esi84->f1);
    tmp8_103 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)));
    *reinterpret_cast<void**>(&edx104) = tmp8_103;
    tmp8_105 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1)) + reinterpret_cast<signed char>(bh106));
    *reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx104) + 1) = tmp8_105;
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(al99) + 2) + cf100) + 2) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_103) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx31)))) + 2) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_105) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx31) + 1))));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) + 0x155a0002) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) + 0x155a0002) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    g15b20002 = ss107;
    tmp8_108 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    cf109 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_108) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *reinterpret_cast<void**>(&eax96) = tmp8_108;
    dl110 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx104)) + reinterpret_cast<unsigned char>(esi102->f0)) + cf109);
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&gf000020e) + 2) = ss111;
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    if (*reinterpret_cast<void**>(&eax96)) {
        *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
        edi101->f0 = *reinterpret_cast<void**>(&eax96);
        edi101 = reinterpret_cast<struct s808*>(&edi101->f1);
        *reinterpret_cast<int16_t*>(&gf000020e) = ss112;
        __asm__("out 0x16, al");
        esi102 = reinterpret_cast<struct s809*>(&esi102->f1 + 1);
        eax96 = reinterpret_cast<struct s807*>(0xf0000210);
        tmp8_113 = reinterpret_cast<void*>(16 + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&gf000020e) + 2)));
        *reinterpret_cast<void**>(&eax96) = tmp8_113;
    }
    __asm__("retf 0x217");
    *reinterpret_cast<void**>(&edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(dl110) + reinterpret_cast<signed char>(bh114));
    *reinterpret_cast<void**>(&eax96) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0)) - 24);
    tmp8_115 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    cf116 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_115) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *reinterpret_cast<void**>(&eax96) = tmp8_115;
    __asm__("pushad ");
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + cf116))));
    tmp8_117 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi102) - 0x33fffde8) + bl118);
    cf119 = reinterpret_cast<uint1_t>(tmp8_117 < *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi102) - 0x33fffde8));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(esi102) - 0x33fffde8) = tmp8_117;
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + cf119))));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(ebx120)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ecx) + reinterpret_cast<int32_t>(ebx121)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx104)));
    tmp8_122 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)) + reinterpret_cast<signed char>(eax96->f0));
    cf123 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_122) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax96)));
    *reinterpret_cast<void**>(&eax96) = tmp8_122;
    eax124 = &eax96->f1;
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - (reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax124) + cf123))));
    esi102->f25 = reinterpret_cast<signed char>(esi102->f25 + bh125);
    tmp8_126 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax124) + *eax124);
    cf127 = reinterpret_cast<uint1_t>(tmp8_126 < *reinterpret_cast<unsigned char*>(&eax124));
    *reinterpret_cast<unsigned char*>(&eax124) = tmp8_126;
    __asm__("lodsb ");
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - (reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax124) + cf127))));
    tmp8_128 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax124) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax124) + 1));
    cf129 = reinterpret_cast<uint1_t>(tmp8_128 < *reinterpret_cast<unsigned char*>(&eax124));
    *reinterpret_cast<unsigned char*>(&eax124) = tmp8_128;
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - (reinterpret_cast<uint32_t>(eax124) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(eax124) + cf129))));
    tmp8_130 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    cf131 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_130) < reinterpret_cast<unsigned char>(esi102->f0));
    esi102->f0 = tmp8_130;
    *reinterpret_cast<unsigned char*>(&eax124) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax124) - reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) + reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax124) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) + cf131))));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx104) + 26) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edx104) + 26) + bl132);
    tmp8_133 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax124) + *eax124);
    cf134 = reinterpret_cast<uint1_t>(tmp8_133 < *reinterpret_cast<unsigned char*>(&eax124));
    *reinterpret_cast<unsigned char*>(&eax124) = tmp8_133;
    eax135 = reinterpret_cast<uint32_t>(eax124) - (reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax124) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) + cf134));
    tmp8_136 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax135) + 1)));
    cf137 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_136) < reinterpret_cast<unsigned char>(esi102->f0));
    esi102->f0 = tmp8_136;
    eax138 = eax135 - (reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) + reinterpret_cast<uint1_t>(eax135 < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) + cf137));
    *reinterpret_cast<unsigned char*>(ebx139 + ebx140 + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx141 + ebx142 + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<unsigned char*>(ebx143 + ebx144 + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(ebx145 + ebx146 + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx104) + 1)));
    *reinterpret_cast<signed char*>(ebx147 + ebx148 + 0x1bf20002) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebx149 + ebx150 + 0x1bf20002) + bl151);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi102) - 0x29fffde4) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi102) - 0x29fffde4) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax138) + 1));
    esi102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g218) + 4) = ds152;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&g218) + 2) = ds153;
    __asm__("fcomp qword [esi]");
    bl154 = reinterpret_cast<void*>(reinterpret_cast<signed char>(bl155) - reinterpret_cast<unsigned char>(edi101->f0));
    *reinterpret_cast<int32_t*>(&g218) = 0x1001f62b;
    eax156 = fun_d000240f();
    esi102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    *eax156 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax156) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx104) + 1)));
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156));
    *reinterpret_cast<int32_t*>(&g218) = 0xae000220;
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    *reinterpret_cast<void**>(&edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx104)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&edx104) + 1)));
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    *ecx = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) + reinterpret_cast<unsigned char>(*eax156));
    g214 = reinterpret_cast<unsigned char>(0x98000221);
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) & reinterpret_cast<uint32_t>(eax156));
    *reinterpret_cast<void**>(&edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx104)) + reinterpret_cast<unsigned char>(bl154));
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) & reinterpret_cast<uint32_t>(eax156));
    esi102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)));
    al157 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax156)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) + 2) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) + 2) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx104)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) - 0x5fffdde) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) - 0x5fffdde) + reinterpret_cast<unsigned char>(bl154));
    *reinterpret_cast<void**>(&eax156) = reinterpret_cast<void*>(al157 & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)));
    esi102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&ecx) + 1)));
    eax158 = reinterpret_cast<uint32_t>(eax156) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) - 0x29fffddd) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) - 0x29fffddd) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx104)));
    eax159 = reinterpret_cast<signed char*>(eax158 & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)));
    tmp8_160 = reinterpret_cast<unsigned char>(g214 + reinterpret_cast<unsigned char>(bl154));
    g214 = tmp8_160;
    __asm__("insb ");
    al161 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax159) + *eax159) & 2);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) - 0x9fffddc) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx104) - 0x9fffddc) + reinterpret_cast<unsigned char>(bl154));
    *reinterpret_cast<unsigned char*>(&eax159) = reinterpret_cast<unsigned char>(al161 & 2);
    esi102->f0 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(esi102->f0) + reinterpret_cast<signed char>(bh162));
    eax163 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax159) & 0x25880002);
    *reinterpret_cast<signed char*>(&eax163) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax163) + *eax163);
    edi164 = &edi101->f1;
    esi165 = reinterpret_cast<struct s811*>(&esi102->f1);
    eax166 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax163) & 0x25d20002);
    *reinterpret_cast<signed char*>(&eax166) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax166) + *eax166);
    eax167 = reinterpret_cast<struct s802*>(reinterpret_cast<uint32_t>(eax166) & 0x262c0002);
    *reinterpret_cast<unsigned char*>(&eax167) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax167) + *reinterpret_cast<signed char*>(&eax167->f0));
    esp168 = reinterpret_cast<struct s802**>(0x210);
    *reinterpret_cast<struct s802**>(reinterpret_cast<int32_t>(&g20e) + 2) = eax167;
    tmp8_169 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax167) + *reinterpret_cast<signed char*>(&eax167->f0));
    cf170 = reinterpret_cast<uint1_t>(tmp8_169 < *reinterpret_cast<unsigned char*>(&eax167));
    *reinterpret_cast<unsigned char*>(&eax167) = tmp8_169;
    if (!(cf170 | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax167) == 0))) {
        *reinterpret_cast<void**>(&edx104) = reinterpret_cast<void*>(38);
        __asm__("fsub qword [esi]");
        *reinterpret_cast<struct s802**>(&g20e) = es46;
        __asm__("daa ");
        *edi164 = reinterpret_cast<unsigned char>(*edi164 ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax167) + 1));
        esi171 = *reinterpret_cast<struct s802**>(&g20e);
        esp168 = reinterpret_cast<struct s802**>(0x212);
        __asm__("daa ");
        eax167 = esi171;
        __asm__("daa ");
        *reinterpret_cast<unsigned char*>(&eax167) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax167) + *reinterpret_cast<signed char*>(&eax167->f0));
        esi165 = reinterpret_cast<struct s811*>(0xe0000227);
        __asm__("daa ");
        *reinterpret_cast<unsigned char*>(&eax167) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax167) + *reinterpret_cast<signed char*>(&eax167->f0));
        *reinterpret_cast<unsigned char*>(&eax167) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax167) + *reinterpret_cast<signed char*>(&eax167->f0));
    }
    esp172 = reinterpret_cast<void**>(esp168 - 2);
    *reinterpret_cast<void***>(esp172) = esp172;
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - *reinterpret_cast<unsigned char*>(&eax167));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(eax167) - 0x37fffdd8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint16_t>(eax167) - 0x37fffdd8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - *reinterpret_cast<unsigned char*>(&eax167));
    esi165->f0 = reinterpret_cast<unsigned char>(esi165->f0 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx)));
    *reinterpret_cast<void**>(edx104) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx104)) - reinterpret_cast<uint16_t>(eax167));
    eax167->f41 = reinterpret_cast<unsigned char>(eax167->f41 + reinterpret_cast<unsigned char>(bl154));
}

struct s812 {
    signed char[46] pad46;
    signed char f46;
};

struct s813 {
    signed char[46] pad46;
    signed char f46;
};

struct s814 {
    unsigned char f0;
    signed char[43] pad44;
    signed char f44;
};

struct s814* fun_880024fd(void** a1, int32_t a2);

struct s815 {
    signed char[45] pad45;
    signed char f45;
};

struct s816 {
    signed char[45] pad45;
    signed char f45;
};

struct s817 {
    signed char[44] pad44;
    signed char f44;
};

struct s818 {
    signed char[44] pad44;
    signed char f44;
};

void*** g58;

void fun_1001f70f(int16_t cx) {
    struct s812* esi2;
    struct s813* esi3;
    signed char bh4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    void** esp8;
    signed char* eax9;
    signed char ch10;
    signed char* esi11;
    unsigned char* esi12;
    signed char* esi13;
    unsigned char* esi14;
    struct s814* eax15;
    struct s815* edx16;
    struct s816* edx17;
    unsigned char tmp8_18;
    unsigned char al19;
    signed char bl20;
    signed char* esi21;
    signed char* esi22;
    signed char dh23;
    unsigned char* edx24;
    signed char dh25;
    uint32_t* edx26;
    uint32_t* edx27;
    struct s817* esi28;
    struct s818* esi29;
    signed char bh30;
    void* esp31;
    signed char* esi32;
    signed char* esi33;
    int32_t ebp34;
    int32_t ebp35;
    unsigned char* eax36;
    signed char* esi37;
    signed char* esi38;
    unsigned char al39;
    signed char* esi40;
    signed char* esi41;

    esi2->f46 = reinterpret_cast<signed char>(esi3->f46 + bh4);
    *reinterpret_cast<signed char*>(&eax5) = reinterpret_cast<signed char>(al6 + *eax7);
    esp8 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    *reinterpret_cast<unsigned char*>(&eax9) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(&eax5) + *eax5);
    ch10 = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&cx) + 1) - *esi11);
    *esi12 = reinterpret_cast<unsigned char>(*esi13 - reinterpret_cast<unsigned char>(ch10 + reinterpret_cast<uint1_t>(*esi14 < reinterpret_cast<unsigned char>(ch10 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) + *eax9) < *reinterpret_cast<unsigned char*>(&eax9))))));
    __asm__("in al, dx");
    eax15 = fun_880024fd(esp8, __return_address());
    edx16->f45 = reinterpret_cast<signed char>(edx17->f45 + *reinterpret_cast<signed char*>(&cx));
    tmp8_18 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + eax15->f0);
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(tmp8_18 - reinterpret_cast<unsigned char>(45 + reinterpret_cast<uint1_t>(tmp8_18 < reinterpret_cast<unsigned char>(45 + reinterpret_cast<uint1_t>(tmp8_18 < *reinterpret_cast<unsigned char*>(&eax15))))));
    al19 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + eax15->f0) - 2);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1) + bl20);
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(al19 - 2);
    eax15->f0 = reinterpret_cast<unsigned char>(eax15->f0 + *reinterpret_cast<unsigned char*>(&eax15));
    eax15->f0 = reinterpret_cast<unsigned char>(eax15->f0 + *reinterpret_cast<unsigned char*>(&eax15));
    *esi21 = reinterpret_cast<signed char>(*esi22 + dh23);
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) ^ *edx24) + dh25);
    *edx26 = *edx27 ^ reinterpret_cast<uint32_t>(eax15);
    esi28->f44 = reinterpret_cast<signed char>(esi29->f44 + bh30);
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + eax15->f0);
    esp31 = reinterpret_cast<void*>(esp8 - 1 + 1 - 1 + 1);
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + eax15->f0) - 2);
    eax15->f44 = reinterpret_cast<signed char>(eax15->f44 + *reinterpret_cast<signed char*>(&cx));
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + eax15->f0);
    *esi32 = reinterpret_cast<signed char>(*esi33 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax15) + 1));
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) - 2);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp31) + ebp34) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp31) + ebp35) + *reinterpret_cast<signed char*>(&cx));
    *reinterpret_cast<unsigned char*>(&eax15) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax15) + eax15->f0);
    eax36 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax15) - reinterpret_cast<unsigned char>(g2c));
    *esi37 = reinterpret_cast<signed char>(*esi38 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax36) + 1));
    al39 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax36) ^ reinterpret_cast<unsigned char>(g2c));
    *esi40 = reinterpret_cast<signed char>(*esi41 + *reinterpret_cast<signed char*>(&cx));
    *reinterpret_cast<unsigned char*>(&eax36) = reinterpret_cast<unsigned char>(al39 ^ reinterpret_cast<unsigned char>(g2c));
    g58 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(g58) ^ reinterpret_cast<uint32_t>(eax36));
    *eax36 = reinterpret_cast<unsigned char>(*eax36 + *reinterpret_cast<unsigned char*>(&eax36));
    *eax36 = reinterpret_cast<unsigned char>(*eax36 + *reinterpret_cast<unsigned char*>(&eax36));
    *eax36 = reinterpret_cast<unsigned char>(*eax36 + *reinterpret_cast<signed char*>(&cx));
    *eax36 = reinterpret_cast<unsigned char>(*eax36 + reinterpret_cast<uint32_t>(eax36));
    __asm__("fdivr st0, st0");
    *eax36 = reinterpret_cast<unsigned char>(*eax36 + reinterpret_cast<uint32_t>(eax36));
}

struct s819 {
    signed char[105] pad105;
    signed char f105;
};

struct s820 {
    signed char[105] pad105;
    signed char f105;
};

struct s821 {
    signed char[1] pad1;
    void** f1;
};

struct s822 {
    signed char[110] pad110;
    int32_t f110;
};

struct s823 {
    signed char[105] pad105;
    signed char f105;
};

struct s824 {
    signed char[105] pad105;
    signed char f105;
};

void** g72644e00;

unsigned char g6c433f04;

void** fun_6e4f9639();

void* g6e4f3f0a;

void* g6572433f;

struct s825 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

unsigned char g65473f06;

struct s826 {
    signed char[1] pad1;
    void** f1;
};

struct s827 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s828 {
    signed char[1] pad1;
    void** f1;
};

signed char g7465533f;

void fun_1001f7c7(void** ecx) {
    void** edx2;
    void* dh3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    struct s819* ebp13;
    struct s820* ebp14;
    signed char dl15;
    void** ebx16;
    struct s821* ebx17;
    void*** esp18;
    struct s822* ebp19;
    uint32_t esi20;
    signed char al21;
    void** es22;
    struct s823* ebp23;
    struct s824* ebp24;
    signed char dl25;
    void** esp26;
    void** esi27;
    uint1_t zf28;
    int32_t ebp29;
    void* tmp8_30;
    int1_t cf31;
    void** edi32;
    void** ebp33;
    uint1_t cf34;
    void* tmp8_35;
    int1_t zf36;
    signed char* eax37;
    signed char* eax38;
    signed char al39;
    void** eax40;
    uint32_t eax41;
    int1_t sf42;
    uint1_t below_or_equal43;
    uint1_t zf44;
    int1_t of45;
    unsigned char tmp8_46;
    void* tmp8_47;
    unsigned char tmp8_48;
    uint1_t zf49;
    uint1_t below_or_equal50;
    unsigned char* eax51;
    unsigned char* eax52;
    unsigned char al53;
    void* tmp32_54;
    int1_t of55;
    void** esp56;
    void** esp57;
    unsigned char tmp8_58;
    void** esp59;
    void** esp60;
    int1_t zf61;
    uint1_t zf62;
    unsigned char tmp8_63;
    void** esp64;
    void* tmp8_65;
    int1_t cf66;
    int1_t zf67;
    void** esp68;
    void** esp69;
    void** esp70;
    void** esp71;
    int1_t zf72;
    void** esp73;
    void** esp74;
    void** tmp32_75;
    void** eax76;
    void** tmp32_77;
    int1_t pf78;
    int1_t zf79;
    void** eax80;
    void** esp81;
    void** esp82;
    void** eax83;
    void** esp84;
    void** esp85;
    void** esp86;
    int1_t zf87;
    void** esp88;
    int1_t zf89;
    void** esp90;
    void** esp91;
    void** esp92;
    void** esp93;
    int1_t sf94;
    void** esp95;
    void** esp96;
    void** esp97;
    unsigned char tmp8_98;
    int1_t zf99;
    void** tmp32_100;
    uint1_t below_or_equal101;
    void** esp102;
    void** ds103;
    uint1_t zf104;
    void** eax105;
    void** tmp32_106;
    int1_t zf107;
    int1_t of108;
    unsigned char tmp8_109;
    int1_t zf110;
    void** esp111;
    int1_t zf112;
    void** esp113;
    int1_t sf114;
    int1_t of115;
    void** esp116;
    unsigned char tmp8_117;
    void** esp118;
    void** esp119;
    void** edx120;
    int1_t zf121;
    void** esp122;
    void** esp123;
    void** esp124;
    void** esp125;
    void** esp126;
    void** esp127;
    void** esp128;
    int1_t zf129;
    void** esp130;
    uint1_t zf131;
    uint1_t below_or_equal132;
    void** esp133;
    void** esp134;
    void** esp135;
    void** esp136;
    void** tmp8_137;
    int1_t zf138;
    int1_t of139;
    void** esp140;
    void** esp141;
    void** esp142;
    void** esp143;
    int1_t zf144;
    void** esp145;
    void** esp146;
    void** eax147;
    void** esp148;
    void** esp149;
    void** eax150;
    void** edx151;
    uint1_t zf152;
    int1_t sf153;
    void** esp154;
    void** eax155;
    void** esp156;
    int1_t zf157;
    void** eax158;
    void** esp159;
    void** esp160;
    void** esp161;
    void** esp162;
    void** esp163;
    void** esp164;
    void** ecx165;
    void** esp166;
    void** esp167;
    void** esp168;
    void** esp169;
    void** edx170;
    void** esp171;
    void** esp172;
    void** esp173;
    void** esp174;
    void** tmp8_175;
    int1_t zf176;
    void** esp177;
    void** esp178;
    void* esi179;
    void** esp180;
    void** edi181;
    void** esp182;
    void** eax183;
    void** esp184;
    void** tmp8_185;
    void** esp186;
    void** tmp8_187;
    void** ecx188;
    void** esp189;
    void** esp190;
    void** esp191;
    void** eax192;
    void** esp193;
    void** ebp194;
    void** eax195;
    void** esp196;
    void** esp197;
    void** esp198;
    uint1_t cf199;
    void** eax200;
    void** esp201;
    void** esp202;
    int1_t zf203;
    void** esp204;
    void** esp205;
    unsigned char tmp8_206;
    int1_t sf207;
    void** esp208;
    void** esp209;
    void** tmp32_210;
    int1_t zf211;
    void** esp212;
    void** esp213;
    int1_t zf214;
    void** esp215;
    void** eax216;
    void** esp217;
    void** esp218;
    void** esp219;
    void** eax220;
    void** tmp8_221;
    void** esp222;
    void** cs223;
    void** esp224;
    void** esp225;
    void** esp226;
    void** esp227;
    int1_t zf228;
    void** esp229;
    void** esp230;
    void** esp231;
    void** esp232;
    void** esp233;
    void** eax234;
    void** esp235;
    int1_t zf236;
    void** esp237;
    void** cs238;
    void** tmp8_239;
    int1_t zf240;
    void** esp241;
    void** esp242;
    void** esp243;
    void** esp244;
    void** esp245;
    void** ebx246;
    void** esp247;
    void* tmp8_248;
    void** esp249;
    void** ecx250;
    void** esp251;
    void** esi252;
    void** esp253;
    void** esp254;
    int1_t zf255;
    int1_t sf256;
    unsigned char tmp8_257;
    void** esp258;
    void** esp259;
    void** esp260;
    void** ecx261;
    void** esp262;
    void** esp263;
    int1_t zf264;
    void** esp265;
    void** esp266;
    void** esp267;
    unsigned char tmp8_268;
    uint1_t zf269;
    void** esp270;
    void** esp271;
    unsigned char tmp8_272;
    unsigned char tmp8_273;
    uint1_t zf274;
    void** esp275;
    void** esp276;
    void** esp277;
    void** esp278;
    uint1_t zf279;
    void** esp280;
    void** esp281;
    void** esp282;
    void** esp283;
    uint1_t zf284;
    void** esp285;
    void** esp286;
    void** esp287;
    void** esp288;
    void** eax289;
    void** esp290;
    void** edx291;
    void** esp292;
    void** esi293;
    void** esp294;
    void** esp295;
    void** esp296;
    void** esp297;
    void** esp298;
    void** esp299;
    void** esp300;
    void** esp301;
    void** esp302;
    void** esp303;
    void** esp304;
    void** esp305;
    void** esp306;
    void** ecx307;
    void** eax308;
    void** esp309;
    void** esp310;
    void** eax311;
    void** esp312;
    void** esp313;
    void** esp314;
    void* tmp8_315;
    uint1_t cf316;
    void** esp317;
    void** esp318;
    void** esp319;
    int1_t zf320;
    void** eax321;
    void** esp322;
    void** esp323;
    void** esp324;
    void** esp325;
    void** esp326;
    void** esp327;
    void** esp328;
    void** esp329;
    void** ebx330;
    void** esp331;
    void** edi332;
    void** esp333;
    void** tmp8_334;
    void* esi335;
    void** eax336;
    void** esp337;
    void** esp338;
    void** esp339;
    void** esp340;
    void** esp341;
    int1_t zf342;
    int1_t zf343;
    int1_t zf344;
    int1_t zf345;
    unsigned char tmp8_346;
    void** esp347;
    void** esp348;
    void** esp349;
    void** eax350;
    void** esp351;
    void** ebp352;
    void** esp353;
    void** esp354;
    void** esp355;
    void** esp356;
    void** esp357;
    void** esp358;
    void** esp359;
    void** esp360;
    unsigned char tmp8_361;
    void** esp362;
    void** esp363;
    void** esp364;
    void** esp365;
    void** esp366;
    void** tmp8_367;
    int1_t sf368;
    int1_t of369;
    void** esp370;
    void** esp371;
    void** esp372;
    void** esp373;
    void** esp374;
    void** esp375;
    void** esp376;
    void** eax377;
    int1_t zf378;
    int1_t zf379;
    void** esp380;
    void** esp381;
    void** esp382;
    void** esp383;
    void** tmp8_384;
    uint1_t cf385;
    void* esi386;
    void** esp387;
    void** esp388;
    void** esp389;
    unsigned char tmp8_390;
    void** esp391;
    void** esp392;
    void** esp393;
    void** esp394;
    int1_t zf395;
    void** esp396;
    void* esi397;
    void** esp398;
    void** esp399;
    void** esp400;
    void** esp401;
    void** esp402;
    void** esp403;
    void** esp404;
    void** esp405;
    int1_t of406;
    void** esp407;
    void** esp408;
    void** esp409;
    void** esp410;
    void** esp411;
    void** tmp8_412;
    void** esp413;
    void** esp414;
    unsigned char tmp8_415;
    void** esp416;
    void** esp417;
    unsigned char tmp8_418;
    void** esp419;
    void** esp420;
    void** eax421;
    void** esp422;
    void** esp423;
    void** esp424;
    void** eax425;
    void** esp426;
    void** tmp8_427;
    void** esp428;
    void** esp429;
    void** esp430;
    void** esp431;
    void** esp432;
    void** esp433;
    void** ecx434;
    int1_t zf435;
    void** esp436;
    void** esp437;
    void** esp438;
    void** eax439;
    void** esp440;
    void** esp441;
    uint1_t cf442;
    void** eax443;
    void** esp444;
    uint1_t zf445;
    void** esp446;
    void** esp447;
    void** esp448;
    void** esp449;
    void** esp450;
    void** esp451;
    void** eax452;
    void** esp453;
    void** esp454;
    void** esp455;
    unsigned char tmp8_456;
    int1_t zf457;
    int1_t sf458;
    int1_t zf459;
    void** esp460;
    int1_t zf461;
    void** esp462;
    void** esp463;
    void** esp464;
    void** esp465;
    void** esp466;
    void** esp467;
    int1_t zf468;
    unsigned char tmp8_469;
    int1_t sf470;
    int1_t of471;
    void** esp472;
    int1_t zf473;
    void** tmp8_474;
    uint1_t below_or_equal475;
    void** eax476;
    void** esp477;
    void** esp478;
    void** esp479;
    void** edi480;
    void** esp481;
    int1_t zf482;
    void** tmp8_483;
    uint1_t cf484;
    uint1_t below_or_equal485;
    void** tmp8_486;
    void** esp487;
    void** esp488;
    void** tmp8_489;
    int1_t zf490;
    void** esp491;
    void** esp492;
    void** tmp8_493;
    uint1_t zf494;
    void** edi495;
    int1_t zf496;
    void* esi497;
    void** esp498;
    void** esp499;
    void** edx500;
    void** tmp8_501;
    void** edx502;
    void** esp503;
    void** esp504;
    void** esp505;
    void** eax506;
    void** tmp8_507;
    void** esp508;
    void** esp509;
    void** esp510;
    void** tmp8_511;
    void** eax512;
    uint1_t zf513;
    int1_t of514;
    uint1_t below_or_equal515;
    uint1_t zf516;
    void** esp517;
    uint1_t cf518;
    void** esp519;
    void** esp520;
    void** esp521;
    void** eax522;
    void** esp523;
    void** esp524;
    void** esp525;
    void** esp526;
    void** esp527;
    void** esp528;
    void** esp529;
    void** esp530;
    void* tmp8_531;
    int1_t sf532;
    int1_t of533;
    void** esp534;
    void** tmp8_535;
    uint1_t below_or_equal536;
    void** esp537;
    void** esp538;
    void** eax539;
    void** tmp32_540;
    void** esp541;
    void** esp542;
    void** esp543;
    void** esp544;
    void** esp545;
    int1_t zf546;
    int1_t of547;
    void** esp548;
    int1_t sf549;
    void** esp550;
    void** esp551;
    void** esp552;
    void** tmp8_553;
    void** esp554;
    void** esp555;
    void** esp556;
    unsigned char tmp8_557;
    int1_t sf558;
    int1_t of559;
    void** esp560;
    void** esp561;
    void** esp562;
    void** esp563;
    int1_t zf564;
    void** eax565;
    void** eax566;
    int1_t zf567;
    void** esp568;
    void** esp569;
    int1_t zf570;
    void** esp571;
    void** esp572;
    void* tmp8_573;
    void* esi574;
    void** esp575;
    void** esp576;
    void** esp577;
    void** esp578;
    void** edx579;
    void** esp580;
    void** tmp32_581;
    uint1_t cf582;
    void** esp583;
    void** esp584;
    void** esp585;
    void** esp586;
    void** esp587;
    void** tmp8_588;
    void** esp589;
    void** esp590;
    void** esp591;
    void** esp592;
    void** esp593;
    void** esp594;
    void** esp595;
    void** esp596;
    void** esp597;
    void** tmp8_598;
    uint1_t below_or_equal599;
    void** cs600;
    void** esp601;
    void** esp602;
    void** esp603;
    void** esp604;
    unsigned char tmp8_605;
    uint1_t zf606;
    void** eax607;
    void** esp608;
    void** esp609;
    void** eax610;
    void** esp611;
    void** esp612;
    void** esp613;
    void** esp614;
    void** esp615;
    void** eax616;
    unsigned char tmp8_617;
    uint1_t cf618;
    void** esp619;
    uint1_t zf620;
    void** esp621;
    void** esp622;
    void** esp623;
    void** esp624;
    void** esp625;
    void** edi626;
    void** esp627;
    void** esp628;
    void** edx629;
    void** tmp32_630;
    uint1_t zf631;
    void** esp632;
    void** esp633;
    void** ebp634;
    void** esp635;
    void** esp636;
    void** esp637;
    void** esp638;
    void** esp639;
    void** eax640;
    void** esp641;
    void** esp642;
    void** esp643;
    void** esp644;
    void** tmp8_645;
    uint1_t below_or_equal646;
    void** tmp8_647;
    uint1_t zf648;
    void** esp649;
    void** esp650;
    void** eax651;
    void** esp652;
    void** esp653;
    void** esp654;
    uint1_t zf655;
    void** esp656;
    void** esp657;
    uint1_t below_or_equal658;
    uint1_t zf659;
    void** eax660;
    void** esp661;
    void** esp662;
    void** esp663;
    void** esp664;
    void** esp665;
    void** esp666;
    void** esp667;
    void** esp668;
    uint1_t zf669;
    void** esp670;
    void** esp671;
    void** esp672;
    unsigned char tmp8_673;
    void** esp674;
    void** esp675;
    void** esp676;
    void** eax677;
    void** esp678;
    void** tmp32_679;
    uint1_t zf680;
    unsigned char tmp8_681;
    void** esp682;
    int1_t sf683;
    uint1_t zf684;
    uint1_t below_or_equal685;
    uint1_t below_or_equal686;
    void** esp687;
    int1_t of688;
    void** esp689;
    void** eax690;
    void** tmp8_691;
    uint1_t cf692;
    uint1_t below_or_equal693;
    uint1_t zf694;
    void** esp695;
    void** esp696;
    void** ebp697;
    void** esp698;
    void** esp699;
    void** esp700;
    int1_t zf701;
    int1_t sf702;
    int1_t of703;
    void** esp704;
    uint1_t zf705;
    uint1_t below_or_equal706;
    void** esp707;
    void** esp708;
    void** eax709;
    void** esp710;
    void** esp711;
    void** esp712;
    unsigned char tmp8_713;
    void** esp714;
    void** esp715;
    void** tmp8_716;
    uint1_t zf717;
    uint1_t below_or_equal718;
    void** esp719;
    uint1_t zf720;
    void** esp721;
    void** esp722;
    void** esp723;
    int1_t of724;
    void** ecx725;
    void** esp726;
    void** esp727;
    void** ecx728;
    void** esp729;
    void** esp730;
    void** esp731;
    void** esp732;
    unsigned char tmp8_733;
    uint1_t zf734;
    void** esp735;
    void** esp736;
    void** esp737;
    uint1_t zf738;
    void** esp739;
    void** ebp740;
    void** esp741;
    uint1_t zf742;
    void** esp743;
    void** esp744;
    void** esp745;
    void** eax746;
    void** tmp8_747;
    void** esp748;
    void** esp749;
    void** esp750;
    uint1_t zf751;
    int1_t of752;
    unsigned char tmp8_753;
    void** esp754;
    void** esp755;
    void** esp756;
    void** esp757;
    void** esp758;
    void** eax759;
    int1_t of760;
    void** esp761;
    void** esp762;
    unsigned char tmp8_763;
    int1_t cf764;
    void** esp765;
    void** esp766;
    void** esp767;
    void** esp768;
    void** esp769;
    int1_t zf770;
    void** esp771;
    struct s825* esp772;
    unsigned char tmp8_773;
    void** esp774;
    void** esp775;
    int1_t sf776;
    void** eax777;
    void** esp778;
    void** esp779;
    uint1_t zf780;
    void** esp781;
    void** esp782;
    void** esp783;
    uint1_t below_or_equal784;
    void** esp785;
    void** esp786;
    void** esp787;
    int1_t zf788;
    void** esp789;
    void** esp790;
    void** esp791;
    void** esp792;
    int1_t zf793;
    void** esp794;
    void** esp795;
    unsigned char tmp8_796;
    void** esp797;
    void** ebp798;
    void** esp799;
    uint1_t below_or_equal800;
    void** esp801;
    void** esp802;
    void** esp803;
    void** esp804;
    void** esp805;
    void** esp806;
    void** esp807;
    unsigned char tmp8_808;
    uint1_t zf809;
    uint1_t below_or_equal810;
    void** esp811;
    void** esp812;
    void** esp813;
    void** esp814;
    void** esi815;
    void** esp816;
    void** esp817;
    void** ebp818;
    void** esp819;
    void** esp820;
    void** esp821;
    void** esp822;
    void** esp823;
    void** esp824;
    void** eax825;
    void** esp826;
    int1_t zf827;
    void** esp828;
    void** esp829;
    void** esp830;
    void** esp831;
    void** esp832;
    void** esp833;
    void** esp834;
    void** eax835;
    void** esp836;
    void** esp837;
    void** esp838;
    void** esp839;
    void** esp840;
    void** esp841;
    unsigned char tmp8_842;
    void** esp843;
    void** esp844;
    void** esp845;
    void** tmp8_846;
    uint1_t cf847;
    uint1_t zf848;
    void** esp849;
    uint1_t zf850;
    int1_t of851;
    uint1_t below_or_equal852;
    int1_t of853;
    int1_t sf854;
    void** esp855;
    void** esp856;
    void** esp857;
    void** esp858;
    void** esp859;
    void** eax860;
    void** eax861;
    void** esp862;
    void** esp863;
    void** esp864;
    void** tmp32_865;
    void** esp866;
    void** esp867;
    void** esp868;
    void** tmp8_869;
    uint1_t cf870;
    void** tmp8_871;
    void** esp872;
    void** esi873;
    void** esp874;
    void** esp875;
    void** esp876;
    int1_t zf877;
    void** esp878;
    uint1_t zf879;
    void** esp880;
    void** esp881;
    void** eax882;
    void** esp883;
    void** esp884;
    void** esp885;
    unsigned char tmp8_886;
    void** esp887;
    void** tmp8_888;
    void** esp889;
    void** esp890;
    void** esp891;
    void** esp892;
    void** tmp8_893;
    void** esp894;
    void** esp895;
    void** esp896;
    void* esi897;
    void** esp898;
    void** esp899;
    void** esp900;
    void** tmp8_901;
    struct s826* ebp902;
    void** esp903;
    void** esp904;
    void** esp905;
    void** esp906;
    uint1_t zf907;
    int1_t zf908;
    unsigned char tmp8_909;
    void** esp910;
    void** esp911;
    void** esp912;
    void** esp913;
    void** esp914;
    void** esp915;
    void** esp916;
    void** esp917;
    void** esp918;
    void** esp919;
    void** tmp8_920;
    void** esp921;
    void** tmp8_922;
    unsigned char tmp8_923;
    void** esp924;
    void** esp925;
    void** esp926;
    void** esp927;
    void** esp928;
    unsigned char tmp8_929;
    void** eax930;
    void* esi931;
    uint1_t zf932;
    void* esi933;
    void** esp934;
    void** esp935;
    void** esp936;
    void** esp937;
    void** tmp8_938;
    int1_t zf939;
    void** esp940;
    void** esp941;
    void** esp942;
    void** esp943;
    void* esi944;
    void** esp945;
    void** esp946;
    unsigned char tmp8_947;
    void** esp948;
    void** esp949;
    void** esp950;
    void** esp951;
    void** tmp8_952;
    void** esp953;
    void** tmp8_954;
    void** esp955;
    void** esp956;
    void** esp957;
    void** esp958;
    void** esp959;
    void** esp960;
    void** esp961;
    void** esp962;
    void** esp963;
    void** esp964;
    void** ebp965;
    void** esp966;
    void** tmp8_967;
    void** esp968;
    void** esp969;
    void** eax970;
    void** esp971;
    void** eax972;
    void** tmp8_973;
    void** esp974;
    unsigned char tmp8_975;
    void** esp976;
    unsigned char tmp8_977;
    uint1_t zf978;
    void** esp979;
    void** esp980;
    void** esp981;
    void** esp982;
    struct s827* esp983;
    unsigned char tmp8_984;
    void** esp985;
    void** esp986;
    unsigned char tmp8_987;
    void** esp988;
    void** eax989;
    void** esp990;
    unsigned char tmp8_991;
    unsigned char tmp8_992;
    void** esp993;
    void** esp994;
    void** esp995;
    void** esp996;
    void** esp997;
    void** esp998;
    void** esp999;
    void** esp1000;
    void** esp1001;
    void** esp1002;
    void** esp1003;
    void** ebp1004;
    void** esp1005;
    void** esp1006;
    void** esp1007;
    void** esp1008;
    void** esp1009;
    void** esp1010;
    int1_t zf1011;
    void** esp1012;
    int1_t zf1013;
    struct s828* esi1014;
    void** tmp8_1015;
    int1_t of1016;
    void** esp1017;
    void** esp1018;
    uint1_t below_or_equal1019;
    void** esp1020;
    unsigned char tmp8_1021;
    void* tmp8_1022;
    void** esp1023;
    void** esp1024;
    void** esp1025;

    *reinterpret_cast<void**>(&edx2 + 1) = reinterpret_cast<void*>(reinterpret_cast<signed char>(dh3) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    ebp13->f105 = reinterpret_cast<signed char>(ebp14->f105 + dl15);
    __asm__("popad ");
    ebx16 = reinterpret_cast<void**>(&ebx17->f1);
    __asm__("insb ");
    esp18 = reinterpret_cast<void***>(ebp19->f110 * 0x72417374 - 1);
    esi20 = reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x6e696e65;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(*reinterpret_cast<unsigned char**>(&ebx16)) + *reinterpret_cast<int16_t*>(&esi20)) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int16_t>(*reinterpret_cast<unsigned char**>(&ebx16)) + *reinterpret_cast<int16_t*>(&esi20)) + al21);
    es22 = *esp18;
    ebp23->f105 = reinterpret_cast<signed char>(ebp24->f105 + dl25);
    __asm__("popad ");
    esp26 = reinterpret_cast<void**>(esp18 + 2 - 4);
    *reinterpret_cast<void***>(esp26) = edx2;
    __asm__("popad ");
    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx16 + 0x65) * 0x6f747541);
    __asm__("insd ");
    __asm__("popad ");
    if (__undefined()) {
        addr_1001f869_2:
        goto addr_1001f86a_3;
    } else {
        __asm__("outsd ");
        __asm__("outsb ");
        zf28 = reinterpret_cast<uint1_t>(ebp29 + 1 == 0);
        if (__intrinsic() | zf28) 
            goto addr_1001f86a_3;
        __asm__("outsb ");
        *reinterpret_cast<unsigned char*>(ecx + 95) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 95) + *reinterpret_cast<signed char*>(&ecx));
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = edx2;
        if (!__intrinsic()) 
            goto addr_1001f80f_7;
    }
    addr_1001f872_8:
    tmp8_30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx2 + 0x70)));
    cf31 = reinterpret_cast<unsigned char>(tmp8_30) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2));
    *reinterpret_cast<void**>(&edx2) = tmp8_30;
    __asm__("arpl [ebx+0x74], dx");
    if (cf31) {
        addr_1001f8e4_9:
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = edi32;
        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 83) * 0x69746174);
        goto addr_1001f8f0_10;
    } else {
        __asm__("outsb ");
        ++edx2;
        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 100) * 0x43676e69);
        cf34 = __intrinsic();
        __asm__("outsd ");
        __asm__("insd ");
        if (__intrinsic()) {
            addr_1001f8f8_12:
            __asm__("arpl [eax+eax+0x0], si");
            ++edi32;
            tmp8_35 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x69)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2)));
            cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_35) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x69)));
            *reinterpret_cast<void**>(edi32 + 0x69) = tmp8_35;
            zf36 = *reinterpret_cast<void**>(edi32 + 0x69) == 0;
            __asm__("outsb ");
            esp26 = esp26 - 4;
            *reinterpret_cast<void***>(esp26) = ebx16;
            goto addr_1001f908_13;
        } else {
            addr_1001f889_14:
            if (!cf34) {
                addr_1001f8f0_10:
                __asm__("outsd ");
                __asm__("outsb ");
                ++esp26;
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx16 + 99) * 0x656e6e6f);
                goto addr_1001f8f8_12;
            } else {
                addr_1001f88b_15:
                esp26 = esp26 - 4;
                *reinterpret_cast<void***>(esp26) = edi32;
                *eax37 = reinterpret_cast<signed char>(*eax38 + al39);
                eax40 = reinterpret_cast<void**>(eax41 | 0x63705202);
                cf34 = 0;
                zf36 = 0;
                goto addr_1001f891_16;
            }
        }
    }
    addr_1001f80f_7:
    __asm__("popad ");
    if (__intrinsic()) {
        addr_1001f86a_3:
        goto addr_1001f872_8;
    } else {
        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 51) * 0x61745332);
        cf34 = __intrinsic();
        zf36 = __undefined();
        if (zf36) {
            addr_1001f891_16:
            esp26 = esp26 - 4;
            *reinterpret_cast<void***>(esp26) = ebx16;
            if (zf36) {
                addr_1001f908_13:
                if (zf36) {
                    addr_1001f96b_18:
                    *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                    __asm__("fst qword [eax]");
                    esp26 = esp26 - 4;
                    *reinterpret_cast<void***>(esp26) = ebp33;
                    goto addr_1001f975_19;
                } else {
                    if (zf36) {
                        addr_1001f975_19:
                        __asm__("outsb ");
                        --ecx;
                        __asm__("outsb ");
                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax40 + reinterpret_cast<unsigned char>(edx2) * 2) + 0x72) * 0x7365636f);
                        cf34 = __intrinsic();
                        sf42 = __undefined();
                        below_or_equal43 = reinterpret_cast<uint1_t>(cf34 | __undefined());
                        if (!cf34) {
                            addr_1001f9d2_21:
                        } else {
                            addr_1001f982_22:
                            if (cf34) {
                                addr_1001f9ed_23:
                                goto addr_1001f9f1_24;
                            } else {
                                addr_1001f984_25:
                                if (below_or_equal43) 
                                    goto addr_1001f986_26; else 
                                    goto addr_1001f986_26;
                            }
                        }
                    } else {
                        __asm__("outsd ");
                        __asm__("outsb ");
                        ++edi32;
                        zf44 = reinterpret_cast<uint1_t>(edi32 == 0);
                        of45 = __intrinsic();
                        below_or_equal43 = reinterpret_cast<uint1_t>(cf34 | zf44);
                        if (zf44) {
                            addr_1001f966_28:
                            --ecx;
                            __asm__("outsb ");
                            goto addr_1001f96b_18;
                        } else {
                            if (cf34) 
                                goto addr_1001f982_22;
                            esp26 = esp26 - 4;
                            *reinterpret_cast<void***>(esp26) = ebx16;
                            if (cf34) 
                                goto addr_1001f98e_31; else 
                                goto addr_1001f918_32;
                        }
                    }
                }
            } else {
                *reinterpret_cast<void***>(esp26 - 4) = edi32;
                *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                goto addr_1001f89f_34;
            }
        } else {
            if (!cf34) 
                goto addr_1001f81e_36; else 
                goto addr_1001f81e_36;
        }
    }
    tmp8_46 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx2 + 0x65523f0c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    cf34 = reinterpret_cast<uint1_t>(tmp8_46 < *reinterpret_cast<unsigned char*>(edx2 + 0x65523f0c));
    *reinterpret_cast<unsigned char*>(edx2 + 0x65523f0c) = tmp8_46;
    __asm__("insb ");
    __asm__("popad ");
    if (!cf34) {
        addr_1001fa47_38:
        --esp26;
        goto addr_1001fa4d_39;
    } else {
        ++eax40;
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = esi27;
        __asm__("popad ");
        __asm__("insb ");
        if (eax40) {
            addr_1001fa4d_39:
            goto addr_1001fa4e_41;
        } else {
            ++esp26;
            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
            goto addr_1001f9ed_23;
        }
    }
    addr_1001f986_26:
    __asm__("salc ");
    tmp8_47 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2))) + cf34);
    cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_47) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)));
    *reinterpret_cast<void**>(ebx16 + 0x74) = tmp8_47;
    zf44 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(ebx16 + 0x74) == 0);
    goto addr_1001f98a_43;
    addr_1001f98e_31:
    if (!cf34) 
        goto addr_1001fa04_44;
    __asm__("popad ");
    esp26 = esp26 - 4;
    *reinterpret_cast<void***>(esp26) = eax40;
    addr_1001f993_46:
    if (!zf44) {
        addr_1001fa04_44:
        goto addr_1001fa05_47;
    } else {
        addr_1001f997_48:
    }
    tmp8_48 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi32 + 0x696e4910) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
    cf34 = reinterpret_cast<uint1_t>(tmp8_48 < *reinterpret_cast<unsigned char*>(edi32 + 0x696e4910));
    *reinterpret_cast<unsigned char*>(edi32 + 0x696e4910) = tmp8_48;
    zf49 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edi32 + 0x696e4910) == 0);
    below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf49);
    goto addr_1001f99a_50;
    addr_1001f918_32:
    ++ebx16;
    zf44 = reinterpret_cast<uint1_t>(ebx16 == 0);
    of45 = __intrinsic();
    below_or_equal43 = reinterpret_cast<uint1_t>(cf34 | zf44);
    __asm__("outsd ");
    if (!zf44) 
        goto addr_1001f98a_43;
    if (zf44) {
        goto addr_1001f984_25;
    }
    if (cf34) 
        goto addr_1001f993_46;
    esp26 = esp26 - 4;
    *reinterpret_cast<void***>(esp26) = esi27;
    __asm__("popad ");
    __asm__("insb ");
    if (!zf44) {
        addr_1001f98a_43:
        __asm__("popad ");
        if (cf34) 
            goto addr_1001fa01_55;
    } else {
        *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = edi32;
        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 83) * 0x69746174);
        cf34 = __intrinsic();
        zf49 = __undefined();
        below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf49);
        goto addr_1001f92c_57;
    }
    --ebp33;
    zf44 = reinterpret_cast<uint1_t>(ebp33 == 0);
    of45 = __intrinsic();
    goto addr_1001f98e_31;
    addr_1001f89f_34:
    __asm__("insd ");
    *reinterpret_cast<void**>(edx2 + 0x70) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx2 + 0x70)) + reinterpret_cast<unsigned char>(edx2));
    __asm__("arpl [edx+0x69], ax");
    __asm__("outsb ");
    ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 0x67) * 0x65657246);
    *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    goto addr_1001f8b2_59;
    addr_1001f81e_36:
    *eax51 = reinterpret_cast<unsigned char>(*eax52 ^ al53);
    cf34 = 0;
    --ecx;
    edi32 = *reinterpret_cast<void***>(esp26);
    esp26 = esp26 + 4 - 4;
    *reinterpret_cast<void***>(esp26) = edx2;
    if (__intrinsic()) 
        goto addr_1001f888_60;
    ++ebp33;
    if (reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0)) 
        goto addr_1001f88b_15;
    if (__intrinsic()) 
        goto addr_1001f89f_34;
    ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x6e)) * 0x746c6946);
    *reinterpret_cast<void**>(&edx2 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
    tmp32_54 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx2 + 0x70)) + reinterpret_cast<unsigned char>(edx2));
    cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_54) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx2 + 0x70)));
    *reinterpret_cast<void**>(edx2 + 0x70) = tmp32_54;
    __asm__("arpl [ebx+0x73], dx");
    ++esp26;
    if (!cf34) {
        addr_1001f8b5_65:
        ++ebx16;
        __asm__("insb ");
        esp26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebp33 + 0x6e)) * 0x6c614374);
        goto addr_1001f8ba_66;
    } else {
        if (cf34) {
            addr_1001f8b2_59:
            g72644e00 = eax40;
            goto addr_1001f8b4_68;
        } else {
            if (reinterpret_cast<signed char>(esp26) >= reinterpret_cast<signed char>(0)) {
                addr_1001f888_60:
                goto addr_1001f889_14;
            } else {
                __asm__("insb ");
                esp26 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebp33 + 0x6e)) * 0x6e6f4374);
                cf34 = __intrinsic();
                of55 = __intrinsic();
                zf49 = __undefined();
                below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf49);
                if (zf49) {
                    addr_1001f8b4_68:
                    goto addr_1001f8b5_65;
                } else {
                    if (__undefined()) {
                        addr_1001f8c5_72:
                        if (of55) {
                            addr_1001f92c_57:
                            __asm__("outsd ");
                            __asm__("outsb ");
                            esp26 = esp26 - 4;
                            *reinterpret_cast<void***>(esp26) = ecx;
                            if (!zf49) {
                                addr_1001f99a_50:
                                if (zf49) {
                                    addr_1001f9f1_24:
                                    esp56 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp56) = ecx;
                                    ++ecx;
                                    ++ebp33;
                                    esp57 = esp56 + 4;
                                    eax40 = *reinterpret_cast<void***>(esp57);
                                    esp26 = esp57 + 4;
                                    goto addr_1001f9f8_73;
                                } else {
                                    if (cf34) {
                                        addr_1001fa12_75:
                                        goto addr_1001fa13_76;
                                    } else {
                                        __asm__("arpl [ebp+0x73], sp");
                                        if (!cf34) {
                                            addr_1001f9f8_73:
                                            edx2 = *reinterpret_cast<void***>(esp26);
                                            tmp8_58 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx2 + 14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2)));
                                            cf34 = reinterpret_cast<uint1_t>(tmp8_58 < *reinterpret_cast<unsigned char*>(edx2 + 14));
                                            *reinterpret_cast<unsigned char*>(edx2 + 14) = tmp8_58;
                                            zf44 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edx2 + 14) == 0);
                                            __asm__("aas ");
                                            esp26 = esp26 + 4 - 4;
                                            *reinterpret_cast<void***>(esp26) = ebx16;
                                            if (zf44) {
                                                addr_1001fa57_78:
                                                if (zf44) {
                                                    goto addr_1001fa9a_80;
                                                } else {
                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                                    cf34 = __intrinsic();
                                                    eax40 = eax40 + 1 + 1;
                                                    esp59 = esp26 + 1 - 4;
                                                    *reinterpret_cast<void***>(esp59) = ecx;
                                                    ++ebp33;
                                                    --edx2;
                                                    esp60 = esp59 - 4;
                                                    *reinterpret_cast<void***>(esp60) = eax40;
                                                    ecx = ecx + 1 + 1;
                                                    esp26 = esp60 - 4;
                                                    *reinterpret_cast<void***>(esp26) = ebp33;
                                                    goto addr_1001fa6a_82;
                                                }
                                            } else {
                                                addr_1001fa01_55:
                                                __asm__("popad ");
                                                __asm__("insb ");
                                                if (!zf44) {
                                                    addr_1001fa6a_82:
                                                    --ecx;
                                                    ++ebp33;
                                                    zf61 = ebp33 == 0;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    if (zf61) {
                                                        addr_1001fabf_83:
                                                        esp26 = esp26 - 4;
                                                        *reinterpret_cast<void***>(esp26) = ebx16;
                                                        if (zf61) {
                                                            goto addr_1001fb06_85;
                                                        }
                                                    } else {
                                                        esi27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
                                                        goto addr_1001fa74_87;
                                                    }
                                                } else {
                                                    addr_1001fa05_47:
                                                    ++eax40;
                                                    ++ebp33;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    if (!ebp33) {
                                                        addr_1001fa4e_41:
                                                        ++eax40;
                                                        ++ebp33;
                                                        zf44 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        goto addr_1001fa57_78;
                                                    } else {
                                                        ++esp26;
                                                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                                        cf34 = __intrinsic();
                                                        goto addr_1001fa12_75;
                                                    }
                                                }
                                            }
                                        } else {
                                            if (cf34) {
                                                addr_1001fa13_76:
                                                goto addr_1001fa16_90;
                                            } else {
                                                addr_1001f9aa_91:
                                            }
                                            __asm__("rcl byte [eax], 0x49");
                                            goto addr_1001f9ad_93;
                                        }
                                    }
                                }
                            } else {
                                if (cf34) {
                                    addr_1001f9b0_95:
                                    goto addr_1001f9b7_96;
                                } else {
                                    --ecx;
                                    zf62 = reinterpret_cast<uint1_t>(ecx == 0);
                                    below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf62);
                                    goto addr_1001f938_98;
                                }
                            }
                        } else {
                            ++edx2;
                            ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 100) * 0x43676e69);
                            cf34 = __intrinsic();
                            zf62 = __undefined();
                            below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf62);
                            goto addr_1001f8d0_100;
                        }
                    } else {
                        *reinterpret_cast<void***>(edi32 + 1) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                        esp26 = esp26 - 4;
                        *reinterpret_cast<void***>(esp26) = edx2;
                        if (__intrinsic()) {
                            addr_1001f8ba_66:
                            __asm__("insb ");
                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40))));
                            tmp8_63 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx) + reinterpret_cast<unsigned char>(eax40) + 82) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                            cf34 = reinterpret_cast<uint1_t>(tmp8_63 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ecx) + reinterpret_cast<unsigned char>(eax40) + 82));
                            *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ecx) + reinterpret_cast<unsigned char>(eax40) + 82) = tmp8_63;
                            zf49 = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx) + reinterpret_cast<unsigned char>(eax40) + 82) == 0);
                            of55 = __intrinsic();
                            below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf49);
                            goto addr_1001f8c5_72;
                        } else {
                            ++edx2;
                            ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 100) * 0x46676e69);
                            cf34 = __intrinsic();
                            zf62 = __undefined();
                            below_or_equal50 = reinterpret_cast<uint1_t>(cf34 | zf62);
                            if (cf34) {
                                addr_1001f8d0_100:
                                if (cf34) {
                                    addr_1001f938_98:
                                    __asm__("outsb ");
                                    __asm__("outsw ");
                                    goto addr_1001f93b_103;
                                } else {
                                    __asm__("popad ");
                                    if (zf62) {
                                        addr_1001f93b_103:
                                        if (cf34) 
                                            goto addr_1001f9aa_91; else 
                                            goto addr_1001f93d_105;
                                    } else {
                                        esp26 = esp26 - 4;
                                        *reinterpret_cast<void***>(esp26) = edi32;
                                        goto addr_1001f8d7_107;
                                    }
                                }
                            } else {
                                __asm__("insd ");
                                esp26 = esp26 - 4;
                                *reinterpret_cast<void***>(esp26) = ebx16;
                                if (zf62) {
                                    addr_1001f8d7_107:
                                    *reinterpret_cast<void***>(ecx + 1) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                                    esp26 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp26) = edx2;
                                    if (__intrinsic()) {
                                        __asm__("outsd ");
                                        __asm__("outsb ");
                                        esp64 = esp26 - 4;
                                        *reinterpret_cast<void***>(esp64) = edi32;
                                        *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2 + 1)));
                                        tmp8_65 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x69)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2)));
                                        cf66 = reinterpret_cast<unsigned char>(tmp8_65) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x69));
                                        *reinterpret_cast<void**>(edi32 + 0x69) = tmp8_65;
                                        zf67 = *reinterpret_cast<void**>(edi32 + 0x69) == 0;
                                        __asm__("outsb ");
                                        esp26 = esp64 - 4;
                                        *reinterpret_cast<void***>(esp26) = ebx16;
                                        if (zf67) {
                                            addr_1001f9ad_93:
                                            __asm__("outsb ");
                                            goto addr_1001f9b0_95;
                                        } else {
                                            if (zf67) {
                                                addr_1001f9b7_96:
                                                *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                __asm__("rcl byte [eax], 1");
                                                esp68 = esp26 - 4;
                                                *reinterpret_cast<void***>(esp68) = edx2;
                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&ebp33)) + *reinterpret_cast<uint16_t*>(&edi32)) + 0x74) * 0x56507265);
                                                cf34 = __intrinsic();
                                                ++edx2;
                                                sf42 = reinterpret_cast<signed char>(edx2) < reinterpret_cast<signed char>(0);
                                                esp26 = esp68 - 1 - 4;
                                                *reinterpret_cast<void***>(esp26) = reinterpret_cast<void**>(0x6f697661);
                                                if (cf34) {
                                                    addr_1001fa16_90:
                                                    eax40 = eax40 + 1 + 1;
                                                    esp69 = esp26 - 4;
                                                    *reinterpret_cast<void***>(esp69) = ecx;
                                                    ++ecx;
                                                    ++ebp33;
                                                    esp70 = esp69 - 4;
                                                    *reinterpret_cast<void***>(esp70) = eax40;
                                                    ++edi32;
                                                    esp71 = esp70 - 4;
                                                    *reinterpret_cast<void***>(esp71) = eax40;
                                                    edx2 = edx2 - 1 + 1;
                                                    zf72 = edx2 == 0;
                                                    esp73 = esp71 - 4;
                                                    *reinterpret_cast<void***>(esp73) = ebp33;
                                                    esp26 = esp73 - 4;
                                                    *reinterpret_cast<void***>(esp26) = eax40;
                                                    if (cf34) {
                                                        addr_1001fa94_111:
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (zf72) {
                                                            addr_1001fada_112:
                                                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                                            esp74 = esp26 + 1 - 4;
                                                            *reinterpret_cast<void***>(esp74) = ecx;
                                                            ++ecx;
                                                            ++ebp33;
                                                            --ebx16;
                                                            eax40 = eax40 + 1 + 1 + 1;
                                                            edx2 = *reinterpret_cast<void***>(esp74);
                                                            esp26 = esp74 + 4;
                                                            *reinterpret_cast<void**>(&ecx + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2 + 1)));
                                                            tmp32_75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                                            cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_75) < reinterpret_cast<unsigned char>(edi32));
                                                            edi32 = tmp32_75;
                                                            goto addr_1001faee_113;
                                                        } else {
                                                            addr_1001fa9a_80:
                                                            ++esp26;
                                                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                                            goto addr_1001fa9d_114;
                                                        }
                                                    } else {
                                                        if (__intrinsic()) {
                                                            addr_1001fa8c_116:
                                                            __asm__("outsb ");
                                                            if (zf72) 
                                                                goto addr_1001fad2_117; else 
                                                                goto addr_1001fa92_118;
                                                        } else {
                                                            if (cf34) {
                                                                addr_1001fa9d_114:
                                                                goto addr_1001faa1_120;
                                                            } else {
                                                                if (reinterpret_cast<signed char>(edx2) >= reinterpret_cast<signed char>(0)) {
                                                                    addr_1001fa74_87:
                                                                    eax76 = eax40 + 1;
                                                                    *reinterpret_cast<unsigned char*>(&eax76) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax76) ^ *reinterpret_cast<unsigned char*>(eax76 + 64));
                                                                    edx2 = *reinterpret_cast<void***>(esp26);
                                                                    *reinterpret_cast<signed char*>(&eax76 + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax76 + 1) + *reinterpret_cast<signed char*>(&ecx));
                                                                    tmp32_77 = eax76 + 0x6e69463f;
                                                                    cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_77) < reinterpret_cast<unsigned char>(eax76));
                                                                    eax40 = tmp32_77;
                                                                    esp26 = esp26 + 4 + 1;
                                                                    zf72 = esp26 == 0;
                                                                    if (!cf34) {
                                                                        addr_1001faee_113:
                                                                        ++edx2;
                                                                        pf78 = __intrinsic();
                                                                        zf79 = edx2 == 0;
                                                                        __asm__("popad ");
                                                                        __asm__("arpl [ebx+0x67], bp");
                                                                        if (cf34) {
                                                                            goto addr_1001fb66_123;
                                                                        }
                                                                    } else {
                                                                        __asm__("outsb ");
                                                                        goto addr_1001fa8c_116;
                                                                    }
                                                                } else {
                                                                    __asm__("outsb ");
                                                                    __asm__("outsw ");
                                                                    eax80 = eax40 + 1;
                                                                    *reinterpret_cast<unsigned char*>(&eax80) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax80) ^ *reinterpret_cast<unsigned char*>(eax80 + 88));
                                                                    edx2 = *reinterpret_cast<void***>(esp26);
                                                                    eax40 = eax80 - 1;
                                                                    esp81 = esp26 + 4 - 4;
                                                                    *reinterpret_cast<void***>(esp81) = eax40;
                                                                    ++ecx;
                                                                    esp82 = esp81 - 4;
                                                                    *reinterpret_cast<void***>(esp82) = esi27;
                                                                    esp26 = esp82 - 4;
                                                                    *reinterpret_cast<void***>(esp26) = esi27;
                                                                    __asm__("popad ");
                                                                    __asm__("insb ");
                                                                    if (ecx) {
                                                                        addr_1001faa1_120:
                                                                        eax83 = eax40 + 1 + 1;
                                                                        esp84 = esp26 - 4;
                                                                        *reinterpret_cast<void***>(esp84) = ecx;
                                                                        ++ebp33;
                                                                        esp85 = esp84 - 4;
                                                                        *reinterpret_cast<void***>(esp85) = eax83;
                                                                        ecx = ecx + 1 + 1;
                                                                        esp86 = esp85 - 4;
                                                                        *reinterpret_cast<void***>(esp86) = esi27;
                                                                        *reinterpret_cast<void***>(edx2) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx2)) ^ reinterpret_cast<unsigned char>(esi27));
                                                                        ++edi32;
                                                                        eax40 = eax83 + 1 + 1;
                                                                        edx2 = *reinterpret_cast<void***>(esp86);
                                                                        *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                                        zf87 = *reinterpret_cast<void***>(eax40) == 0;
                                                                        __asm__("fcom dword [eax]");
                                                                        esp88 = esp86 + 4 - 4;
                                                                        *reinterpret_cast<void***>(esp88) = ebx16;
                                                                        if (zf87) {
                                                                            addr_1001fb29_126:
                                                                            es22 = *reinterpret_cast<void***>(esp88);
                                                                            esp26 = esp88 + 2;
                                                                            __asm__("aas ");
                                                                            ++edi32;
                                                                            zf89 = edi32 == 0;
                                                                            if (zf89) {
                                                                                addr_1001fb73_127:
                                                                                __asm__("outsb ");
                                                                                if (zf89) {
                                                                                    addr_1001fbeb_128:
                                                                                    edi32 = *reinterpret_cast<void***>(esp26);
                                                                                    esp90 = esp26 + 4;
                                                                                    --esi27;
                                                                                    goto addr_1001fbee_129;
                                                                                } else {
                                                                                    ++eax40;
                                                                                    esp91 = esp26 - 4;
                                                                                    *reinterpret_cast<void***>(esp91) = esp91;
                                                                                    __asm__("outsd ");
                                                                                    if (eax40) {
                                                                                        addr_1001fbe0_131:
                                                                                        eax40 = eax40 + 1 + 1;
                                                                                        esp26 = esp91 - 4;
                                                                                        *reinterpret_cast<void***>(esp26) = ecx;
                                                                                        ++ecx;
                                                                                        ++ebp33;
                                                                                        goto addr_1001fbeb_128;
                                                                                    } else {
                                                                                        esp26 = esp91 - 4;
                                                                                        *reinterpret_cast<void***>(esp26) = reinterpret_cast<void**>(0x6f726353);
                                                                                        goto addr_1001fb7f_133;
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                esi27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x70)) * 0x4e79616c);
                                                                                __asm__("outsd ");
                                                                                ++eax40;
                                                                                goto addr_1001fb38_135;
                                                                            }
                                                                        } else {
                                                                            esp92 = esp88 - 4;
                                                                            *reinterpret_cast<void***>(esp92) = esp92;
                                                                            __asm__("outsd ");
                                                                            --ecx;
                                                                            esp26 = esp92 + 1;
                                                                            *reinterpret_cast<void**>(&edx2 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2 + 1)));
                                                                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) | 63);
                                                                            cf34 = 0;
                                                                            zf61 = 0;
                                                                            goto addr_1001fabf_83;
                                                                        }
                                                                    } else {
                                                                        ++eax40;
                                                                        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 64));
                                                                        edx2 = *reinterpret_cast<void***>(esp26);
                                                                        esp26 = esp26 + 4;
                                                                        *reinterpret_cast<unsigned char*>(ebx16 + 0x64413f03) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x64413f03) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                                                                        goto addr_1001fa47_38;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    addr_1001f9d0_138:
                                                    __asm__("popad ");
                                                    __asm__("arpl [edi+ebp*2+0x72], si");
                                                    goto addr_1001f9d2_21;
                                                }
                                            } else {
                                                __asm__("outsd ");
                                                __asm__("outsb ");
                                                ++edi32;
                                                sf42 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                                of45 = __intrinsic();
                                                if (!edi32) 
                                                    goto addr_1001f997_48;
                                                esp26 = esp26 - 4;
                                                *reinterpret_cast<void***>(esp26) = reinterpret_cast<void**>(0x53646c69);
                                                if (!cf66) {
                                                    goto addr_1001f9d0_138;
                                                } else {
                                                    ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x6e)) * 0xde006449);
                                                    *reinterpret_cast<void**>(ebp33 + 0x6e) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebp33 + 0x6e)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2))) + __intrinsic());
                                                    goto addr_1001f966_28;
                                                }
                                            }
                                        }
                                    } else {
                                        ++edx2;
                                        goto addr_1001f8e4_9;
                                    }
                                } else {
                                    goto addr_1001f869_2;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    __asm__("popad ");
    __asm__("arpl [ebx+0x67], bp");
    if (cf34) {
        addr_1001fb38_135:
        goto addr_1001fb39_146;
    } else {
        if (!zf61) {
            addr_1001fb39_146:
            ++ebp33;
            zf79 = ebp33 == 0;
            __asm__("insb ");
            __asm__("insd ");
            goto addr_1001fb3e_148;
        } else {
            ++ebx16;
            __asm__("outsd ");
            __asm__("insb ");
            __asm__("outsd ");
            if (cf34) {
                addr_1001fb12_150:
                esp93 = esp26 - 4;
                *reinterpret_cast<void***>(esp93) = eax40;
                ++edx2;
                sf94 = reinterpret_cast<signed char>(edx2) < reinterpret_cast<signed char>(0);
                esp95 = esp93 - 4;
                *reinterpret_cast<void***>(esp95) = ebp33;
                esp26 = esp95 - 4;
                *reinterpret_cast<void***>(esp26) = eax40;
                if (cf34) {
                    addr_1001fb87_151:
                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                    goto addr_1001fb90_152;
                } else {
                    if (__intrinsic()) {
                        addr_1001fb7f_133:
                        goto addr_1001fb82_154;
                    } else {
                        addr_1001fb1a_155:
                        if (cf34) {
                            addr_1001fb90_152:
                            esp96 = esp26 - 4;
                            *reinterpret_cast<void***>(esp96) = ecx;
                            ++ecx;
                            ++ebp33;
                            edi32 = *reinterpret_cast<void***>(esp96);
                            esp97 = esp96 + 4;
                            --esi27;
                            eax40 = eax40 + 1 + 1 + 1;
                            edx2 = *reinterpret_cast<void***>(esp97);
                            esp26 = esp97 + 4;
                            tmp8_98 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi27 + 0x65533f0d) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                            cf34 = reinterpret_cast<uint1_t>(tmp8_98 < *reinterpret_cast<unsigned char*>(esi27 + 0x65533f0d));
                            *reinterpret_cast<unsigned char*>(esi27 + 0x65533f0d) = tmp8_98;
                            zf99 = *reinterpret_cast<unsigned char*>(esi27 + 0x65533f0d) == 0;
                            if (zf99) {
                                addr_1001fbf1_156:
                                tmp32_100 = ecx;
                                ecx = eax40;
                                eax40 = tmp32_100;
                                *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) | 63);
                                below_or_equal101 = 0;
                                esp90 = esp26 - 4;
                                *reinterpret_cast<void***>(esp90) = edx2;
                                goto addr_1001fbf6_157;
                            } else {
                                __asm__("popad ");
                                if (*reinterpret_cast<signed char*>(esi27 + 0x65533f0d) >= reinterpret_cast<signed char>(0)) {
                                    addr_1001fc17_159:
                                    ++ebp33;
                                    eax40 = *reinterpret_cast<void***>(esp26);
                                    esp102 = esp26 + 4 - 4;
                                    *reinterpret_cast<void***>(esp102) = eax40;
                                    esp26 = esp102 - 4;
                                    *reinterpret_cast<void***>(esp26) = ebp33;
                                    ecx = ecx + 1 + 1 - 1;
                                    goto addr_1001fc1e_160;
                                } else {
                                    if (!zf99) 
                                        goto addr_1001fc1e_160;
                                    esp90 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp90) = eax40;
                                    __asm__("outsd ");
                                    if (cf34) 
                                        goto addr_1001fbae_163;
                                }
                            }
                        } else {
                            if (!sf94) 
                                goto addr_1001fb67_165;
                            __asm__("outsb ");
                            __asm__("outsw ");
                            ++eax40;
                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
                            edx2 = *reinterpret_cast<void***>(esp26);
                            *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                            esp88 = esp26 + 4 - 2;
                            *reinterpret_cast<void***>(esp88) = ds103;
                            goto addr_1001fb29_126;
                        }
                    }
                }
            } else {
                addr_1001fad2_117:
                ++ebp33;
                sf94 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) 
                    goto addr_1001fb1a_155; else 
                    goto addr_1001fada_112;
            }
        }
    }
    addr_1001fbee_129:
    ++eax40;
    edx2 = *reinterpret_cast<void***>(esp90);
    esp26 = esp90 + 4;
    *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    goto addr_1001fbf1_156;
    addr_1001fbae_163:
    ++ebp33;
    zf104 = reinterpret_cast<uint1_t>(ebp33 == 0);
    below_or_equal101 = reinterpret_cast<uint1_t>(cf34 | zf104);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (zf104) {
        addr_1001fbf6_157:
        __asm__("insd ");
        __asm__("outsd ");
        if (below_or_equal101) {
            addr_1001fc60_167:
            ++ecx;
            ++ebp33;
            eax105 = eax40 - 1 + 1;
            edx2 = *reinterpret_cast<void***>(esp90);
            esp26 = esp90 + 4;
            *reinterpret_cast<void***>(eax105) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax105)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax105)));
            __asm__("in eax, dx");
            tmp32_106 = eax105 + 0x726f463f;
            cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_106) < reinterpret_cast<unsigned char>(eax105));
            eax40 = tmp32_106;
            zf107 = eax40 == 0;
            of108 = __intrinsic();
            if (cf34) {
                --esp26;
                zf107 = esp26 == 0;
                goto addr_1001fce2_169;
            } else {
                addr_1001fc72_170:
                if (!zf107) {
                    addr_1001fce2_169:
                    __asm__("outsd ");
                    goto addr_1001fce3_171;
                } else {
                    esp26 = esp26 - 4;
                    *reinterpret_cast<void***>(esp26) = eax40;
                    if (cf34) {
                        addr_1001fce7_173:
                        __asm__("popad ");
                        __asm__("insb ");
                        if (!zf107) {
                            addr_1001fd50_174:
                            edx2 = *reinterpret_cast<void***>(esp26);
                            esp26 = esp26 + 4;
                            tmp8_109 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 0x7465533f) + *reinterpret_cast<signed char*>(&ecx));
                            cf34 = reinterpret_cast<uint1_t>(tmp8_109 < *reinterpret_cast<unsigned char*>(ecx + 0x7465533f));
                            *reinterpret_cast<unsigned char*>(ecx + 0x7465533f) = tmp8_109;
                            goto addr_1001fd5a_175;
                        } else {
                            ++eax40;
                            ++ebp33;
                            zf110 = ebp33 == 0;
                            goto addr_1001fced_177;
                        }
                    } else {
                        if (of108) {
                            addr_1001fcba_179:
                            __asm__("outsd ");
                            if (cf34) {
                                addr_1001fcfd_180:
                                ++eax40;
                                esp111 = esp26 - 4;
                                *reinterpret_cast<void***>(esp111) = ecx;
                                ++ecx;
                                ++ebp33;
                                --edx2;
                                esp26 = esp111 - 4;
                                *reinterpret_cast<void***>(esp26) = eax40;
                                goto addr_1001fd03_181;
                            } else {
                                ++ebp33;
                                zf112 = ebp33 == 0;
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                goto addr_1001fcc2_183;
                            }
                        } else {
                            ++ebp33;
                            zf112 = ebp33 == 0;
                            __asm__("insb ");
                            __asm__("insd ");
                            __asm__("outsb ");
                            if (zf112) {
                                addr_1001fcc2_183:
                                if (zf112) {
                                    addr_1001fd05_185:
                                    esp113 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp113) = eax40;
                                    ++edx2;
                                    zf107 = edx2 == 0;
                                    sf114 = reinterpret_cast<signed char>(edx2) < reinterpret_cast<signed char>(0);
                                    of115 = __intrinsic();
                                    esp116 = esp113 - 4;
                                    *reinterpret_cast<void***>(esp116) = ebp33;
                                    esp26 = esp116 - 4;
                                    *reinterpret_cast<void***>(esp26) = eax40;
                                    if (cf34) {
                                        addr_1001fd7a_186:
                                        edx2 = *reinterpret_cast<void***>(esp26);
                                        esp26 = esp26 + 4;
                                        tmp8_117 = reinterpret_cast<unsigned char>(g6c433f04 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2)));
                                        cf34 = reinterpret_cast<uint1_t>(tmp8_117 < g6c433f04);
                                        g6c433f04 = tmp8_117;
                                        zf107 = g6c433f04 == 0;
                                        of115 = __intrinsic();
                                        __asm__("popad ");
                                        if (!cf34) {
                                            goto addr_1001fdf9_188;
                                        }
                                    } else {
                                        if (of115) {
                                            addr_1001fd72_190:
                                            esp26 = esp26 - 4;
                                            *reinterpret_cast<void***>(esp26) = ecx;
                                            goto addr_1001fd73_191;
                                        } else {
                                            addr_1001fd0d_192:
                                            if (!cf34) {
                                                if (!sf114) {
                                                    addr_1001fd5a_175:
                                                    ++ebx16;
                                                    __asm__("insb ");
                                                    __asm__("popad ");
                                                    if (!cf34) {
                                                        addr_1001fdd2_195:
                                                        eax40 = eax40 + 1 + 1;
                                                        esp118 = esp26 - 4;
                                                        *reinterpret_cast<void***>(esp118) = ecx;
                                                        ++ecx;
                                                        ++ebp33;
                                                        esp119 = esp118 - 4;
                                                        *reinterpret_cast<void***>(esp119) = eax40;
                                                        edx120 = edx2 - 1 + 1;
                                                        zf121 = edx120 == 0;
                                                        esp122 = esp119 - 4;
                                                        *reinterpret_cast<void***>(esp122) = ebp33;
                                                        esp26 = esp122 - 4;
                                                        *reinterpret_cast<void***>(esp26) = eax40;
                                                        if (cf34) {
                                                            addr_1001fe51_196:
                                                            esp123 = esp26 - 4;
                                                            *reinterpret_cast<void***>(esp123) = ecx;
                                                            ++ecx;
                                                            ++ebp33;
                                                            eax40 = *reinterpret_cast<void***>(esp123);
                                                            esp124 = esp123 + 4;
                                                            edx120 = *reinterpret_cast<void***>(esp124);
                                                            esp26 = esp124 + 4;
                                                            *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                            zf121 = *reinterpret_cast<void***>(eax40) == 0;
                                                            goto addr_1001fe5a_197;
                                                        } else {
                                                            if (__intrinsic()) {
                                                                addr_1001fe49_199:
                                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                goto addr_1001fe4c_200;
                                                            } else {
                                                                if (cf34) {
                                                                    addr_1001fe5a_197:
                                                                    if (!zf121) {
                                                                        __asm__("aas ");
                                                                        ++edi32;
                                                                        if (!edi32) 
                                                                            goto addr_1001fea9_203;
                                                                        esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edi32 + 0x68) * 0x6c454074);
                                                                        zf121 = __undefined();
                                                                        goto addr_1001fe63_205;
                                                                    }
                                                                } else {
                                                                    if (reinterpret_cast<signed char>(edx120) >= reinterpret_cast<signed char>(0)) {
                                                                        addr_1001fe31_207:
                                                                        ++eax40;
                                                                        edx120 = *reinterpret_cast<void***>(esp26);
                                                                        esp125 = esp26 + 4;
                                                                        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                                        *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(0xff);
                                                                        ++edi32;
                                                                        if (!edi32) {
                                                                            addr_1001fe92_208:
                                                                            esp126 = esp125 - 4;
                                                                            *reinterpret_cast<void***>(esp126) = ecx;
                                                                            ++ecx;
                                                                            ++ebp33;
                                                                            eax40 = *reinterpret_cast<void***>(esp126);
                                                                            esp127 = esp126 + 4;
                                                                            edx120 = *reinterpret_cast<void***>(esp127);
                                                                            esp26 = esp127 + 4;
                                                                            *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                                            __asm__("ror dword [eax], 1");
                                                                            __asm__("aas ");
                                                                            ++edi32;
                                                                            if (!edi32) {
                                                                                addr_1001ff02_209:
                                                                                ++ebp33;
                                                                                eax40 = eax40 - 1 + 1;
                                                                                edx120 = *reinterpret_cast<void***>(esp26);
                                                                                esp128 = esp26 + 4;
                                                                                *reinterpret_cast<void**>(&ebx16) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx120)));
                                                                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(0xff);
                                                                                cf34 = 0;
                                                                                ++edi32;
                                                                                zf129 = edi32 == 0;
                                                                                if (zf129) {
                                                                                    addr_1001ff68_210:
                                                                                    esp130 = esp128 - 4;
                                                                                    *reinterpret_cast<void***>(esp130) = ebp33;
                                                                                    if (zf129) {
                                                                                        addr_1001ffcc_211:
                                                                                        __asm__("outsd ");
                                                                                        if (!zf129) {
                                                                                            addr_10020032_212:
                                                                                            eax40 = *reinterpret_cast<void***>(esp130);
                                                                                            edx120 = *reinterpret_cast<void***>(esp130 + 4);
                                                                                            *reinterpret_cast<void***>(edx120) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                                                                                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) + 63);
                                                                                            ++ebx16;
                                                                                            __asm__("insb ");
                                                                                            esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebx16 + 0x6b) * 0x756f5440);
                                                                                            cf34 = __intrinsic();
                                                                                            zf131 = __undefined();
                                                                                            below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                                                                                            goto addr_1002003c_213;
                                                                                        } else {
                                                                                            esp133 = esp130 - 4;
                                                                                            *reinterpret_cast<void***>(esp133) = reinterpret_cast<void**>(0x6f726353);
                                                                                            goto addr_1001ffd2_215;
                                                                                        }
                                                                                    } else {
                                                                                        esp134 = esp130 - 4;
                                                                                        *reinterpret_cast<void***>(esp134) = edx120;
                                                                                        ++ebp33;
                                                                                        ++ebx16;
                                                                                        esp135 = esp134 - 4;
                                                                                        *reinterpret_cast<void***>(esp135) = esp135;
                                                                                        edi32 = *reinterpret_cast<void***>(esp135);
                                                                                        esp136 = esp135 + 4;
                                                                                        --esi27;
                                                                                        eax40 = eax40 + 1 + 1 + 1;
                                                                                        edx120 = *reinterpret_cast<void***>(esp136);
                                                                                        esp128 = esp136 + 4;
                                                                                        tmp8_137 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                                                        cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_137) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)));
                                                                                        *reinterpret_cast<void***>(eax40) = tmp8_137;
                                                                                        zf138 = *reinterpret_cast<void***>(eax40) == 0;
                                                                                        of139 = __intrinsic();
                                                                                        __asm__("fmul dword [ebx]");
                                                                                        goto addr_1001ff79_217;
                                                                                    }
                                                                                } else {
                                                                                    --edi32;
                                                                                    zf138 = edi32 == 0;
                                                                                    of139 = __intrinsic();
                                                                                    if (1) {
                                                                                        addr_1001ff79_217:
                                                                                        __asm__("aas ");
                                                                                        esp128 = esp128 - 4;
                                                                                        *reinterpret_cast<void***>(esp128) = eax40;
                                                                                        __asm__("outsd ");
                                                                                        if (!cf34) {
                                                                                            addr_1001ffe8_219:
                                                                                            ++edi32;
                                                                                            __asm__("aas ");
                                                                                            goto addr_1001ffea_220;
                                                                                        } else {
                                                                                            addr_1001ff7f_221:
                                                                                            if (zf138) {
                                                                                                addr_1001ffea_220:
                                                                                                esp140 = esp128 - 4;
                                                                                                *reinterpret_cast<void***>(esp140) = esi27;
                                                                                                esp141 = esp140 - 4;
                                                                                                *reinterpret_cast<void***>(esp141) = ebp33;
                                                                                                ecx = ecx + 1 - 1;
                                                                                                esp142 = esp141 + 1;
                                                                                                eax40 = *reinterpret_cast<void***>(esp142);
                                                                                                esp143 = esp142 + 4;
                                                                                                edx120 = *reinterpret_cast<void***>(esp143);
                                                                                                esp26 = esp143 + 4;
                                                                                                goto addr_1001fff3_222;
                                                                                            } else {
                                                                                                __asm__("outsd ");
                                                                                                __asm__("outsb ");
                                                                                                esp26 = esp128 - 4;
                                                                                                *reinterpret_cast<void***>(esp26) = eax40;
                                                                                                if (cf34) {
                                                                                                    addr_1001fff5_224:
                                                                                                    *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                                                                                                    --ebp33;
                                                                                                    __asm__("popad ");
                                                                                                    __asm__("outsb ");
                                                                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(eax40 + 0x75) * 0x6974616c);
                                                                                                    cf34 = __intrinsic();
                                                                                                    __asm__("outsd ");
                                                                                                    __asm__("outsb ");
                                                                                                    ++ebx16;
                                                                                                    zf144 = ebx16 == 0;
                                                                                                    __asm__("outsd ");
                                                                                                    __asm__("insd ");
                                                                                                    if (__intrinsic()) 
                                                                                                        goto addr_10020074_225; else 
                                                                                                        goto addr_10020008_226;
                                                                                                } else {
                                                                                                    if (of139) 
                                                                                                        goto addr_1001ffc8_228;
                                                                                                    esp133 = esp26 - 4;
                                                                                                    *reinterpret_cast<void***>(esp133) = ebx16;
                                                                                                    __asm__("arpl [edx+0x6f], si");
                                                                                                    __asm__("insb ");
                                                                                                    __asm__("insb ");
                                                                                                    ++edx120;
                                                                                                    __asm__("popad ");
                                                                                                    if (cf34) 
                                                                                                        goto addr_1001ffd2_215; else 
                                                                                                        goto addr_1001ff92_230;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        addr_1001ff14_231:
                                                                                        if (zf138) {
                                                                                            addr_1001ff56_232:
                                                                                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                            eax40 = eax40 + 1 + 1;
                                                                                            esp145 = esp128 - 4;
                                                                                            *reinterpret_cast<void***>(esp145) = ecx;
                                                                                            ++ecx;
                                                                                            ++ebp33;
                                                                                            esp128 = esp145 - 4;
                                                                                            *reinterpret_cast<void***>(esp128) = eax40;
                                                                                            edx120 = edx120 - 1 + 1;
                                                                                            zf129 = edx120 == 0;
                                                                                            goto addr_1001ff68_210;
                                                                                        } else {
                                                                                            ++edx120;
                                                                                            zf138 = edx120 == 0;
                                                                                            of139 = __intrinsic();
                                                                                            __asm__("popad ");
                                                                                            if (!cf34) 
                                                                                                goto addr_1001ff7f_221;
                                                                                            esp146 = esp128 - 4;
                                                                                            *reinterpret_cast<void***>(esp146) = ebx16;
                                                                                            __asm__("arpl [edx+0x6f], si");
                                                                                            __asm__("insb ");
                                                                                            __asm__("insb ");
                                                                                            *reinterpret_cast<void***>(esp146 - 4) = esi27;
                                                                                            esp128 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265);
                                                                                            goto addr_1001ff23_235;
                                                                                        }
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                addr_1001fea9_203:
                                                                                ++eax40;
                                                                                ++ebp33;
                                                                                zf121 = ebp33 == 0;
                                                                                __asm__("insb ");
                                                                                __asm__("insd ");
                                                                                __asm__("outsb ");
                                                                                goto addr_1001feaf_236;
                                                                            }
                                                                        } else {
                                                                            esp128 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp125 + reinterpret_cast<unsigned char>(esi27) * 2) + 0x68) * 0x656c4540);
                                                                            cf34 = __intrinsic();
                                                                            __asm__("insd ");
                                                                            __asm__("outsb ");
                                                                            if (__undefined()) {
                                                                                addr_1001fe88_238:
                                                                                ++ebp33;
                                                                                zf138 = ebp33 == 0;
                                                                                __asm__("insb ");
                                                                                __asm__("insd ");
                                                                                __asm__("outsb ");
                                                                                if (zf138) {
                                                                                    addr_1001fed0_239:
                                                                                    __asm__("outsb ");
                                                                                    if (zf138) 
                                                                                        goto addr_1001ff14_231; else 
                                                                                        goto addr_1001fed4_240;
                                                                                } else {
                                                                                    esp125 = esp128 + 1;
                                                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                    goto addr_1001fe92_208;
                                                                                }
                                                                            } else {
                                                                                esp26 = esp128 + 1;
                                                                                goto addr_1001fe49_199;
                                                                            }
                                                                        }
                                                                    } else {
                                                                        __asm__("outsb ");
                                                                        __asm__("outsw ");
                                                                        ++eax40;
                                                                        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 64));
                                                                        edx2 = *reinterpret_cast<void***>(esp26);
                                                                        esp26 = esp26 + 4;
                                                                        *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                                        goto addr_1001fdf2_244;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        ++eax40;
                                                        ++ebp33;
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (!ebp33) {
                                                            goto addr_1001fda9_247;
                                                        } else {
                                                            ++esp26;
                                                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                                            goto addr_1001fd6b_249;
                                                        }
                                                    }
                                                } else {
                                                    __asm__("outsb ");
                                                    __asm__("outsw ");
                                                    eax147 = eax40 + 1;
                                                    *reinterpret_cast<unsigned char*>(&eax147) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax147) ^ *reinterpret_cast<unsigned char*>(eax147 + 88));
                                                    esp148 = esp26 + 4;
                                                    eax40 = eax147 + 1;
                                                    edx2 = *reinterpret_cast<void***>(esp148);
                                                    esp26 = esp148 + 4;
                                                    goto addr_1001fd1b_251;
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                    esp149 = esp26 + 1 - 4;
                                    *reinterpret_cast<void***>(esp149) = ecx;
                                    ++ecx;
                                    ++ebp33;
                                    eax150 = eax40 + 1 + 1 - 1 + 1;
                                    edx151 = *reinterpret_cast<void***>(esp149);
                                    *reinterpret_cast<void***>(eax150) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax150)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax150)));
                                    edx2 = eax150;
                                    eax40 = edx151;
                                    *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) | 63);
                                    cf34 = 0;
                                    zf152 = 0;
                                    sf153 = __intrinsic();
                                    esp26 = esp149 + 4 - 4;
                                    *reinterpret_cast<void***>(esp26) = edx2;
                                    __asm__("insd ");
                                    __asm__("outsd ");
                                    if (0) {
                                        goto addr_1001fd47_254;
                                    }
                                }
                            } else {
                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                                cf34 = __intrinsic();
                                eax40 = eax40 + 1 + 1;
                                esp26 = esp26 + 1 - 4;
                                *reinterpret_cast<void***>(esp26) = ebx16;
                                goto addr_1001fc8d_256;
                            }
                        }
                    }
                }
            }
        } else {
            esp26 = esp90 - 1;
            esi27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
            cf34 = __intrinsic();
            ++eax40;
            ++ebp33;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp33) {
                goto addr_1001fc4d_259;
            } else {
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                cf34 = __intrinsic();
                esp26 = esp26 + 1 - 4;
                *reinterpret_cast<void***>(esp26) = ecx;
                goto addr_1001fc17_159;
            }
        }
    } else {
        esp26 = esp90 + 1;
        goto addr_1001fbbd_262;
    }
    esp26 = esp26 - 4;
    *reinterpret_cast<void***>(esp26) = eax40;
    if (cf34) {
        addr_1001fdf6_264:
        if (zf107) {
            addr_1001fe4c_200:
            goto addr_1001fe4d_265;
        } else {
            addr_1001fdf9_188:
            __asm__("outsb ");
            __asm__("popad ");
            if (of115) {
                addr_1001fe4d_265:
                goto addr_1001fe51_196;
            } else {
                __asm__("outsd ");
                ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(esi27 + 0x74)) * 0x6c6c6f43);
                __asm__("arpl [gs:ecx+ebp*2+0x6f], si");
                goto addr_1001fe0a_267;
            }
        }
    } else {
        if (of115) {
            addr_1001fdc9_269:
            __asm__("outsb ");
            if (zf107) {
                addr_1001fe0e_270:
                __asm__("outsd ");
                if (!zf107) {
                    addr_1001fe74_271:
                    esp154 = esp26 - 4;
                    *reinterpret_cast<void***>(esp154) = ecx;
                    ++ecx;
                    ++ebp33;
                    eax155 = *reinterpret_cast<void***>(esp154);
                    esp156 = esp154 + 4;
                    edx120 = *reinterpret_cast<void***>(esp156);
                    esp128 = esp156 + 4;
                    *reinterpret_cast<signed char*>(&eax155) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax155) + *reinterpret_cast<signed char*>(&ecx));
                    *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(0xff);
                    cf34 = 0;
                    ++edi32;
                    if (!edi32) {
                        addr_1001fedf_272:
                        ++ecx;
                        ++ebp33;
                        eax40 = eax155 - 1 + 1;
                        edx120 = *reinterpret_cast<void***>(esp128);
                        *reinterpret_cast<unsigned char*>(edi32 + 14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi32 + 14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
                        zf157 = *reinterpret_cast<unsigned char*>(edi32 + 14) == 0;
                        __asm__("aas ");
                        esp26 = esp128 + 4 - 4;
                        *reinterpret_cast<void***>(esp26) = ebx16;
                        if (zf157) {
                            addr_1001ff46_273:
                            __asm__("outsd ");
                            if (!zf157) {
                                addr_1001ffad_274:
                                eax158 = eax40 + 1;
                                *reinterpret_cast<void**>(&eax158) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax158)) ^ *reinterpret_cast<unsigned char*>(eax158 + 88));
                                edx120 = *reinterpret_cast<void***>(esp26);
                                *reinterpret_cast<void***>(eax158) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax158)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax158)));
                                eax40 = eax158 - 0x614d3f0a;
                                __asm__("outsb ");
                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(eax40 + 0x75) * 0x6974616c);
                                cf34 = __intrinsic();
                                zf131 = __undefined();
                                below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                                __asm__("outsd ");
                                __asm__("outsb ");
                                esp26 = esp26 + 4 - 4;
                                *reinterpret_cast<void***>(esp26) = ebx16;
                                if (zf131) {
                                    addr_10020027_275:
                                    esp159 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp159) = ebx16;
                                    ++edi32;
                                    __asm__("aas ");
                                    esp160 = esp159 - 4;
                                    *reinterpret_cast<void***>(esp160) = esi27;
                                    esp161 = esp160 - 4;
                                    *reinterpret_cast<void***>(esp161) = ebp33;
                                    ecx = ecx + 1 - 1;
                                    esp130 = esp161 + 1;
                                    goto addr_10020032_212;
                                } else {
                                    if (cf34) {
                                        addr_1002003c_213:
                                        __asm__("arpl [eax+0x42], bp");
                                        if (!zf131) {
                                            addr_100200bb_277:
                                            if (below_or_equal132) 
                                                goto addr_1002012c_278;
                                        } else {
                                            if (zf131) {
                                                addr_100200b8_280:
                                                esp26 = esp26 - 4;
                                                *reinterpret_cast<void***>(esp26) = esi27;
                                                --ecx;
                                                zf131 = reinterpret_cast<uint1_t>(ecx == 0);
                                                below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                                                goto addr_100200ba_281;
                                            } else {
                                                __asm__("outsb ");
                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                esp162 = esp26 + 1 - 4;
                                                *reinterpret_cast<void***>(esp162) = ebx16;
                                                ++edi32;
                                                __asm__("aas ");
                                                esp163 = esp162 - 4;
                                                *reinterpret_cast<void***>(esp163) = esi27;
                                                esp164 = esp163 - 4;
                                                *reinterpret_cast<void***>(esp164) = ebp33;
                                                ecx165 = ecx + 1 - 1;
                                                esp166 = esp164 + 1;
                                                eax40 = *reinterpret_cast<void***>(esp166);
                                                esp167 = esp166 + 4;
                                                edx120 = *reinterpret_cast<void***>(esp167);
                                                esp26 = esp167 + 4;
                                                *reinterpret_cast<signed char*>(&ecx165) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ecx165) + *reinterpret_cast<signed char*>(&ecx165 + 1));
                                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                                cf34 = 0;
                                                ecx = ecx165 - 1;
                                                zf131 = reinterpret_cast<uint1_t>(ecx == 0);
                                                below_or_equal132 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf131));
                                                if (1) {
                                                    addr_100200ba_281:
                                                    __asm__("outsb ");
                                                    goto addr_100200bb_277;
                                                } else {
                                                    esp168 = esp26 - 4;
                                                    *reinterpret_cast<void***>(esp168) = esp168;
                                                    esp26 = esp168 - 1;
                                                    ++eax40;
                                                    ++ebp33;
                                                    zf144 = ebp33 == 0;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    goto addr_10020070_284;
                                                }
                                            }
                                        }
                                    } else {
                                        addr_1001ffc8_228:
                                        ++eax40;
                                        zf129 = eax40 == 0;
                                        esp130 = esp26 - 4;
                                        *reinterpret_cast<void***>(esp130) = esp130;
                                        goto addr_1001ffcc_211;
                                    }
                                }
                            } else {
                                esp169 = esp26 - 4;
                                *reinterpret_cast<void***>(esp169) = reinterpret_cast<void**>(0x6f726353);
                                __asm__("insb ");
                                __asm__("insb ");
                                *reinterpret_cast<void***>(esp169 - 4) = esi27;
                                esp128 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265);
                                goto addr_1001ff56_232;
                            }
                        } else {
                            ++eax40;
                            ++ebp33;
                            zf121 = ebp33 == 0;
                            __asm__("insb ");
                            __asm__("insd ");
                            goto addr_1001fef2_287;
                        }
                    } else {
                        eax40 = eax155 + 1;
                        goto addr_1001fe88_238;
                    }
                } else {
                    esp26 = esp26 - 4;
                    *reinterpret_cast<void***>(esp26) = reinterpret_cast<void**>(0x6f726353);
                    goto addr_1001fe12_290;
                }
            } else {
                ++esp26;
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                cf34 = __intrinsic();
                goto addr_1001fdd1_292;
            }
        } else {
            addr_1001fd89_293:
            ++ebp33;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp33) {
                addr_1001fdd1_292:
                goto addr_1001fdd2_195;
            } else {
                ++esp26;
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                cf34 = __intrinsic();
                goto addr_1001fd94_295;
            }
        }
    }
    esp26 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 72) * 0x65);
    cf34 = __intrinsic();
    __asm__("insb ");
    if (__intrinsic()) {
        addr_10020129_297:
        ++esp26;
        ++ebp33;
        zf131 = reinterpret_cast<uint1_t>(ebp33 == 0);
        below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
        goto addr_1002012b_298;
    } else {
        if (cf34) 
            goto addr_10020106_300;
        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 64));
        edx120 = *reinterpret_cast<void***>(esp26);
        esp26 = esp26 + 4;
        *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
        __asm__("retf 0x3f05");
        ++esi27;
        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 100) * 0x656c4540);
        cf34 = __intrinsic();
        zf131 = __undefined();
        below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
        goto addr_100200d6_302;
    }
    addr_1001fe63_205:
    __asm__("insd ");
    __asm__("outsb ");
    if (zf121) {
        addr_1001feaf_236:
        if (zf121) {
            addr_1001fef2_287:
            __asm__("outsb ");
            if (zf121) {
                addr_1001ff36_303:
                edx170 = *reinterpret_cast<void***>(esp26);
                esp171 = esp26 + 4;
                *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(ecx) + 63) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(ecx) + 63) + *reinterpret_cast<signed char*>(&edx170));
                zf157 = *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(ecx) + 63) == 0;
                edx120 = *reinterpret_cast<void***>(esp171);
                __asm__("outsd ");
                __asm__("outsd ");
                __asm__("insd ");
                esp172 = esp171 + 4 - 4;
                *reinterpret_cast<void***>(esp172) = esp172;
                __asm__("outsd ");
                esp26 = esp172 - 4;
                *reinterpret_cast<void***>(esp26) = edx120;
                __asm__("arpl [gs:eax+eax*2+0x54], si");
                goto addr_1001ff46_273;
            } else {
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                eax40 = eax40 + 1 + 1;
                esp26 = esp26 + 1 - 4;
                *reinterpret_cast<void***>(esp26) = ecx;
                ++ecx;
                goto addr_1001ff02_209;
            }
        } else {
            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
            esp173 = esp26 + 1 - 4;
            *reinterpret_cast<void***>(esp173) = ecx;
            ++ecx;
            ++ebp33;
            eax40 = *reinterpret_cast<void***>(esp173);
            esp174 = esp173 + 4;
            edx120 = *reinterpret_cast<void***>(esp174);
            tmp8_175 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
            cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_175) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)));
            *reinterpret_cast<void***>(eax40) = tmp8_175;
            zf176 = *reinterpret_cast<void***>(eax40) == 0;
            __asm__("arpl [esi], cx");
            __asm__("aas ");
            esp128 = esp174 + 4 - 4;
            *reinterpret_cast<void***>(esp128) = ebx16;
            if (zf176) {
                addr_1001ff23_235:
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                esp177 = esp128 - 4;
                *reinterpret_cast<void***>(esp177) = ecx;
                ++ecx;
                ++ebp33;
                eax40 = *reinterpret_cast<void***>(esp177);
                esp26 = esp177 + 4;
                goto addr_1001ff36_303;
            } else {
                ++eax40;
                ++ebp33;
                zf138 = ebp33 == 0;
                __asm__("insb ");
                __asm__("insd ");
                goto addr_1001fed0_239;
            }
        }
    } else {
        ++esp26;
        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
        goto addr_1001fe74_271;
    }
    addr_1001ffd2_215:
    __asm__("insb ");
    __asm__("insb ");
    *reinterpret_cast<void***>(esp133 - 4) = esi27;
    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
    esp128 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265 - 4);
    *reinterpret_cast<void***>(esp128) = ebx16;
    goto addr_1001ffe8_219;
    addr_10020008_226:
    if (zf144) {
        addr_10020070_284:
        if (zf144) {
            addr_100200b3_308:
            --edx120;
            esp178 = esp26 - 4;
            *reinterpret_cast<void***>(esp178) = eax40;
            esp26 = esp178 - 4;
            *reinterpret_cast<void***>(esp26) = eax40;
            ecx = ecx + 1 + 1;
            goto addr_100200b8_280;
        } else {
            ++esp26;
            goto addr_10020074_225;
        }
    } else {
        addr_1002000b_310:
        ++eax40;
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = esp26;
        __asm__("outsd ");
        if (eax40) {
            addr_10020074_225:
            esi179 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
            esp180 = esp26 - 4;
            *reinterpret_cast<void***>(esp180) = ecx;
            ++ecx;
            ++ebp33;
            edi181 = *reinterpret_cast<void***>(esp180);
            esp182 = esp180 + 4;
            esi27 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi179) - 1);
            eax183 = *reinterpret_cast<void***>(esp182);
            esp184 = esp182 + 4;
            edx120 = *reinterpret_cast<void***>(esp184);
            tmp8_185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax183)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax183)));
            cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_185) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax183)));
            *reinterpret_cast<void***>(eax183) = tmp8_185;
            eax40 = esp184 + 4;
            es22 = *reinterpret_cast<void***>(eax183);
            esp26 = eax183 + 2;
            __asm__("aas ");
            edi32 = edi181 + 1;
            zf131 = reinterpret_cast<uint1_t>(edi32 == 0);
            below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
            if (zf131) {
                addr_100200d6_302:
                __asm__("insd ");
                __asm__("outsb ");
                goto addr_100200d9_311;
            } else {
                __asm__("outsb ");
                if (below_or_equal132) {
                    addr_100200ff_313:
                    if (zf131) {
                        addr_10020152_314:
                        __asm__("outsb ");
                        if (zf131) {
                            addr_10020196_315:
                            eax40 = eax40 + 1 + 1;
                            esp186 = esp26 - 4;
                            *reinterpret_cast<void***>(esp186) = ebx16;
                            ++edi32;
                            --edx120;
                            esp26 = esp186 - 4;
                            *reinterpret_cast<void***>(esp26) = eax40;
                            ++ecx;
                            goto addr_1002019f_316;
                        } else {
                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 80));
                            cf34 = 0;
                            goto addr_10020157_318;
                        }
                    } else {
                        if (cf34) {
                            addr_10020173_320:
                            edx120 = *reinterpret_cast<void***>(esp26);
                            esp26 = esp26 + 4;
                            tmp8_187 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                            cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_187) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)));
                            *reinterpret_cast<void***>(eax40) = tmp8_187;
                            zf131 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax40) == 0);
                            if (__intrinsic()) 
                                goto addr_1002017c_321;
                        } else {
                            if (below_or_equal132) {
                                addr_1002016f_323:
                                *reinterpret_cast<void***>(edx120) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)) ^ reinterpret_cast<unsigned char>(esi27));
                                eax40 = eax40 + 1 + 1;
                                goto addr_10020173_320;
                            } else {
                                addr_10020106_300:
                                if (cf34) {
                                    addr_1002014a_324:
                                    --eax40;
                                    esp26 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp26) = edi32;
                                    --esi27;
                                    goto addr_1002014d_325;
                                } else {
                                    *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 80));
                                    cf34 = 0;
                                    goto addr_1002010c_327;
                                }
                            }
                        }
                    }
                } else {
                    esp26 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 72) * 0x65);
                    cf34 = __intrinsic();
                    zf131 = __undefined();
                    below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                    __asm__("insb ");
                    if (__intrinsic()) {
                        addr_100200fc_329:
                        __asm__("insd ");
                        __asm__("outsb ");
                        goto addr_100200ff_313;
                    } else {
                        if (cf34) {
                            addr_100200d9_311:
                            if (zf131) {
                                addr_1002012c_278:
                                __asm__("insd ");
                                __asm__("outsb ");
                                if (zf131) {
                                    addr_10020182_331:
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (zf131) {
                                        addr_100201d8_332:
                                        if (zf131) {
                                            addr_1002024c_333:
                                            if (zf131) {
                                                addr_10020292_334:
                                                __asm__("insb ");
                                                __asm__("insd ");
                                                __asm__("outsb ");
                                                if (zf131) {
                                                    addr_100202d9_335:
                                                    ++ebp33;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    if (!ebp33) {
                                                        addr_10020321_336:
                                                        __asm__("aas ");
                                                        ecx188 = ecx + 1;
                                                        esp189 = esp26 - 4;
                                                        *reinterpret_cast<void***>(esp189) = ebx16;
                                                        if (!ecx188) {
                                                            addr_1002039b_337:
                                                            esp190 = esp189 - 4;
                                                            *reinterpret_cast<void***>(esp190) = eax40;
                                                            esp191 = esp190 - 4;
                                                            *reinterpret_cast<void***>(esp191) = esi27;
                                                            *reinterpret_cast<void***>(edx120) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)) ^ reinterpret_cast<unsigned char>(esi27));
                                                            eax192 = eax40 + 1;
                                                            esp193 = esp191 - 4;
                                                            *reinterpret_cast<void***>(esp193) = eax192;
                                                            ecx = ecx188 + 1 + 1;
                                                            goto addr_100203a3_338;
                                                        } else {
                                                            ebp194 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 0x67) * 0x6d6f4340);
                                                            __asm__("outsd ");
                                                            if (__undefined()) {
                                                                addr_10020376_340:
                                                                __asm__("popad ");
                                                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                                                ecx = ecx188 - 1;
                                                                __asm__("outsb ");
                                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx + reinterpret_cast<unsigned char>(ebp194) * 2) + 97) * 0x657a696c);
                                                                eax195 = eax40 + 1;
                                                                ebp33 = ebp194 + 1;
                                                                __asm__("insb ");
                                                                __asm__("insd ");
                                                                __asm__("outsb ");
                                                                if (!ebp33) {
                                                                    addr_100203cc_341:
                                                                    esp196 = esp189 - 4;
                                                                    *reinterpret_cast<void***>(esp196) = eax195;
                                                                    esp197 = esp196 - 4;
                                                                    *reinterpret_cast<void***>(esp197) = eax195;
                                                                    esp198 = esp197 - 4;
                                                                    *reinterpret_cast<void***>(esp198) = esi27;
                                                                    *reinterpret_cast<void***>(edx120) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)) ^ reinterpret_cast<unsigned char>(esi27));
                                                                    cf199 = 0;
                                                                    eax200 = eax195 + 1;
                                                                    esp201 = esp198 - 4;
                                                                    *reinterpret_cast<void***>(esp201) = eax200;
                                                                    ++edi32;
                                                                    esp202 = esp201 - 4;
                                                                    *reinterpret_cast<void***>(esp202) = eax200;
                                                                    ecx = ecx + 1 + 1 + 1;
                                                                    zf203 = ecx == 0;
                                                                    esp204 = esp202 - 4;
                                                                    *reinterpret_cast<void***>(esp204) = esi27;
                                                                    esp205 = esp204 - 4;
                                                                    *reinterpret_cast<void***>(esp205) = esi27;
                                                                    __asm__("popad ");
                                                                    __asm__("insb ");
                                                                    if (!zf203) {
                                                                        addr_10020444_342:
                                                                        if (cf199) {
                                                                            addr_100204ab_343:
                                                                            ++ecx;
                                                                            ++ebp33;
                                                                            eax200 = *reinterpret_cast<void***>(esp205);
                                                                            esp205 = esp205 + 4;
                                                                            goto addr_100204ae_344;
                                                                        } else {
                                                                            __asm__("popad ");
                                                                            if (zf203) {
                                                                                addr_100204ae_344:
                                                                                --ebx16;
                                                                                ++eax200;
                                                                                edx120 = *reinterpret_cast<void***>(esp205);
                                                                                tmp8_206 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax200 + 5) + *reinterpret_cast<signed char*>(&ecx));
                                                                                cf199 = reinterpret_cast<uint1_t>(tmp8_206 < *reinterpret_cast<unsigned char*>(eax200 + 5));
                                                                                *reinterpret_cast<unsigned char*>(eax200 + 5) = tmp8_206;
                                                                                __asm__("aas ");
                                                                                esp205 = esp205 + 4 + 1;
                                                                                sf207 = reinterpret_cast<signed char>(esp205) < reinterpret_cast<signed char>(0);
                                                                                if (!cf199) 
                                                                                    goto addr_1002052d_346; else 
                                                                                    goto addr_100204b9_347;
                                                                            } else {
                                                                                ++ebp33;
                                                                                __asm__("insb ");
                                                                                __asm__("insd ");
                                                                                __asm__("outsb ");
                                                                                if (!ebp33) {
                                                                                    addr_10020491_349:
                                                                                    ++esp205;
                                                                                    if (cf199) {
                                                                                        addr_100204d8_350:
                                                                                        eax200 = *reinterpret_cast<void***>(esp205);
                                                                                        esp208 = esp205 + 4;
                                                                                        edx120 = *reinterpret_cast<void***>(esp208);
                                                                                        esp205 = esp208 + 4;
                                                                                        *reinterpret_cast<void***>(eax200) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                                                                        if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax200)) >= reinterpret_cast<signed char>(0)) {
                                                                                            addr_100204e5_351:
                                                                                            ++ebp33;
                                                                                            __asm__("insb ");
                                                                                            __asm__("insd ");
                                                                                            __asm__("outsb ");
                                                                                            if (!ebp33) {
                                                                                                addr_1002052d_346:
                                                                                                eax200 = *reinterpret_cast<void***>(esp205);
                                                                                                esp209 = esp205 + 4;
                                                                                                edx120 = *reinterpret_cast<void***>(esp209);
                                                                                                esp205 = esp209 + 4;
                                                                                                *reinterpret_cast<unsigned char*>(ebp33 + 8) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx120)));
                                                                                                __asm__("aas ");
                                                                                                ++edi32;
                                                                                                if (!edi32) {
                                                                                                    addr_1002058a_352:
                                                                                                    __asm__("aas ");
                                                                                                    tmp32_210 = eax200 + 0x6665443f;
                                                                                                    cf199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_210) < reinterpret_cast<unsigned char>(eax200));
                                                                                                    eax200 = tmp32_210;
                                                                                                    zf211 = eax200 == 0;
                                                                                                    __asm__("popad ");
                                                                                                    if (!zf211) 
                                                                                                        goto addr_100205ff_353; else 
                                                                                                        goto addr_10020593_354;
                                                                                                } else {
                                                                                                    __asm__("insb ");
                                                                                                    __asm__("arpl [gs:ecx+ebp*2+0x6f], si");
                                                                                                    goto addr_1002053a_356;
                                                                                                }
                                                                                            } else {
                                                                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                                esp212 = esp205 + 1 - 4;
                                                                                                *reinterpret_cast<void***>(esp212) = ecx;
                                                                                                ++ecx;
                                                                                                ++ebp33;
                                                                                                ++edi32;
                                                                                                eax200 = *reinterpret_cast<void***>(esp212);
                                                                                                esp213 = esp212 + 4;
                                                                                                edx120 = *reinterpret_cast<void***>(esp213);
                                                                                                esp205 = esp213 + 4;
                                                                                                goto addr_100204fd_358;
                                                                                            }
                                                                                        } else {
                                                                                            __asm__("aas ");
                                                                                            ++edi32;
                                                                                            zf214 = edi32 == 0;
                                                                                            goto addr_100204e0_360;
                                                                                        }
                                                                                    } else {
                                                                                        ++ebp33;
                                                                                        zf214 = ebp33 == 0;
                                                                                        __asm__("insb ");
                                                                                        __asm__("insd ");
                                                                                        __asm__("outsb ");
                                                                                        goto addr_1002049e_362;
                                                                                    }
                                                                                } else {
                                                                                    esp215 = esp205 + 1 - 4;
                                                                                    *reinterpret_cast<void***>(esp215) = ebp33;
                                                                                    --ecx;
                                                                                    zf214 = ecx == 0;
                                                                                    eax200 = *reinterpret_cast<void***>(esp215);
                                                                                    __asm__("insd ");
                                                                                    __asm__("insb ");
                                                                                    esp205 = esp215 + 4 - 4;
                                                                                    *reinterpret_cast<void***>(esp205) = eax200;
                                                                                    __asm__("popad ");
                                                                                    goto addr_10020459_364;
                                                                                }
                                                                            }
                                                                        }
                                                                    } else {
                                                                        eax216 = eax200 + 1;
                                                                        *reinterpret_cast<unsigned char*>(&eax216) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax216) ^ *reinterpret_cast<unsigned char*>(eax216 + 80));
                                                                        esp217 = esp205 - 4;
                                                                        *reinterpret_cast<void***>(esp217) = eax216;
                                                                        ++ecx;
                                                                        esp218 = esp217 + 4;
                                                                        edx120 = *reinterpret_cast<void***>(esp218);
                                                                        esp219 = esp218 + 4;
                                                                        *reinterpret_cast<void**>(&edx120) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx120)) ^ *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(esp217) + 1 + 54));
                                                                        edi32 = edi32 + 1 + 1;
                                                                        eax220 = *reinterpret_cast<void***>(esp219);
                                                                        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) ^ reinterpret_cast<unsigned char>(esi27));
                                                                        eax200 = eax220 - 1;
                                                                        *reinterpret_cast<void**>(&eax200) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)) ^ *reinterpret_cast<unsigned char*>(eax200 + 90));
                                                                        *reinterpret_cast<void**>(&eax200) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)) ^ *reinterpret_cast<unsigned char*>(eax200 + 90));
                                                                        tmp8_221 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                                                        cf199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_221) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)));
                                                                        *reinterpret_cast<void***>(eax200) = tmp8_221;
                                                                        zf214 = *reinterpret_cast<void***>(eax200) == 0;
                                                                        esp222 = esp219 + 4 - 2;
                                                                        *reinterpret_cast<void***>(esp222) = cs223;
                                                                        __asm__("aas ");
                                                                        esp205 = esp222 - 4;
                                                                        *reinterpret_cast<void***>(esp205) = ebx16;
                                                                        if (zf214) {
                                                                            addr_10020459_364:
                                                                            if (cf199) {
                                                                                addr_100204ce_366:
                                                                                esp224 = esp205 - 4;
                                                                                *reinterpret_cast<void***>(esp224) = ecx;
                                                                                ++ecx;
                                                                                ++ebp33;
                                                                                esp205 = esp224 + 4;
                                                                                goto addr_100204d8_350;
                                                                            } else {
                                                                                if (cf199) {
                                                                                    addr_1002049e_362:
                                                                                    if (zf214) {
                                                                                        addr_100204e0_360:
                                                                                        if (zf214) {
                                                                                            addr_1002052c_368:
                                                                                            goto addr_1002052d_346;
                                                                                        } else {
                                                                                            ++esp205;
                                                                                            goto addr_100204e5_351;
                                                                                        }
                                                                                    } else {
                                                                                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                        esp205 = esp205 + 1 - 4;
                                                                                        *reinterpret_cast<void***>(esp205) = ecx;
                                                                                        goto addr_100204ab_343;
                                                                                    }
                                                                                } else {
                                                                                    addr_1002045e_371:
                                                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                    cf199 = __intrinsic();
                                                                                    eax200 = eax200 + 1 + 1;
                                                                                    esp225 = esp205 + 1 - 4;
                                                                                    *reinterpret_cast<void***>(esp225) = ecx;
                                                                                    esp226 = esp225 - 4;
                                                                                    *reinterpret_cast<void***>(esp226) = eax200;
                                                                                    edx120 = edx120 - 1 + 1;
                                                                                    ++edi32;
                                                                                    esp227 = esp226 - 4;
                                                                                    *reinterpret_cast<void***>(esp227) = eax200;
                                                                                    ecx = ecx + 1 + 1;
                                                                                    esp205 = esp227 - 4;
                                                                                    *reinterpret_cast<void***>(esp205) = esi27;
                                                                                    ebp33 = ebp33 + 1 + 1;
                                                                                    zf228 = ebp33 == 0;
                                                                                    sf207 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                                                                                    __asm__("insb ");
                                                                                    __asm__("insd ");
                                                                                    goto addr_10020475_372;
                                                                                }
                                                                            }
                                                                        } else {
                                                                            addr_10020401_373:
                                                                            --ebp33;
                                                                            --esp205;
                                                                            ++esi27;
                                                                            zf228 = esi27 == 0;
                                                                            sf207 = reinterpret_cast<signed char>(esi27) < reinterpret_cast<signed char>(0);
                                                                            if (cf199) {
                                                                                addr_10020475_372:
                                                                                __asm__("outsb ");
                                                                                if (zf228) {
                                                                                    goto addr_100204bb_375;
                                                                                }
                                                                            } else {
                                                                                __asm__("insd ");
                                                                                esp205 = esp205 - 4;
                                                                                *reinterpret_cast<void***>(esp205) = edx120;
                                                                                if (!cf199) {
                                                                                    *reinterpret_cast<void**>(&eax200) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)) ^ *reinterpret_cast<unsigned char*>(eax200 + 49));
                                                                                    esp205 = esp205 - 4;
                                                                                    *reinterpret_cast<void***>(esp205) = eax200;
                                                                                    ++ecx;
                                                                                    goto addr_1002047f_378;
                                                                                } else {
                                                                                    if (!zf228) {
                                                                                        addr_1002047f_378:
                                                                                        --ebx16;
                                                                                        esp229 = esp205 - 4;
                                                                                        *reinterpret_cast<void***>(esp229) = eax200;
                                                                                        esp230 = esp229 - 4;
                                                                                        *reinterpret_cast<void***>(esp230) = eax200;
                                                                                        ecx = ecx + 1 + 1;
                                                                                        esp231 = esp230 - 4;
                                                                                        *reinterpret_cast<void***>(esp231) = esi27;
                                                                                        esi27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi27) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)));
                                                                                        eax200 = eax200 + 1 + 1;
                                                                                        edx120 = *reinterpret_cast<void***>(esp231);
                                                                                        esp205 = esp231 + 4;
                                                                                        *reinterpret_cast<void***>(eax200) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                                                                        __asm__("lodsd ");
                                                                                        goto addr_1002048d_380;
                                                                                    } else {
                                                                                        __asm__("arpl [ebp+0x40], sp");
                                                                                        esp232 = esp205 + 1 - 4;
                                                                                        *reinterpret_cast<void***>(esp232) = ebp33;
                                                                                        --ecx;
                                                                                        goto addr_10020413_382;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                } else {
                                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                    eax40 = eax195 + 1 + 1;
                                                                    esp189 = esp189 + 1 - 4;
                                                                    *reinterpret_cast<void***>(esp189) = ecx;
                                                                    ++ebp33;
                                                                    --edx120;
                                                                    ecx188 = ecx + 1 - 1;
                                                                    goto addr_1002039b_337;
                                                                }
                                                            } else {
                                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                esp233 = esp189 + 1 - 4;
                                                                *reinterpret_cast<void***>(esp233) = ecx188;
                                                                ecx = ecx188 + 1;
                                                                ebp33 = ebp194 + 1;
                                                                eax234 = eax40 + 1 + 1 - 1;
                                                                esp235 = esp233 - 4;
                                                                *reinterpret_cast<void***>(esp235) = eax234;
                                                                ++edi32;
                                                                eax192 = eax234 + 1;
                                                                edx120 = *reinterpret_cast<void***>(esp235);
                                                                *reinterpret_cast<void***>(ebx16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx120)));
                                                                zf236 = *reinterpret_cast<void***>(ebx16) == 0;
                                                                esp237 = esp235 + 4 - 2;
                                                                *reinterpret_cast<void***>(esp237) = cs238;
                                                                __asm__("aas ");
                                                                esp193 = esp237 - 4;
                                                                *reinterpret_cast<void***>(esp193) = ebx16;
                                                                if (zf236) {
                                                                    addr_100203a4_385:
                                                                    eax200 = eax192 + 1;
                                                                    edx120 = *reinterpret_cast<void***>(esp193);
                                                                    esp232 = esp193 + 4;
                                                                    tmp8_239 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                                                    cf199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_239) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)));
                                                                    *reinterpret_cast<void***>(eax200) = tmp8_239;
                                                                    zf240 = *reinterpret_cast<void***>(eax200) == 0;
                                                                    if (zf240 || (++ebx16, zf240 = ebx16 == 0, !cf199)) {
                                                                        __asm__("popad ");
                                                                        if (zf240) {
                                                                            addr_10020416_387:
                                                                            esp205 = esp232 - 4;
                                                                            *reinterpret_cast<void***>(esp205) = eax200;
                                                                            __asm__("popad ");
                                                                            if (cf199) {
                                                                                addr_1002048d_380:
                                                                                cf199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax200 + 0x646e453f) < reinterpret_cast<unsigned char>(eax200));
                                                                                goto addr_10020491_349;
                                                                            } else {
                                                                                if (cf199) {
                                                                                    goto addr_1002045e_371;
                                                                                } else {
                                                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                    eax200 = eax200 + 1 + 1;
                                                                                    esp241 = esp205 + 1 - 4;
                                                                                    *reinterpret_cast<void***>(esp241) = ecx;
                                                                                    ++ebp33;
                                                                                    --edx120;
                                                                                    esp242 = esp241 - 4;
                                                                                    *reinterpret_cast<void***>(esp242) = eax200;
                                                                                    ecx = ecx + 1 - 1 + 1;
                                                                                    esp205 = esp242 - 4;
                                                                                    *reinterpret_cast<void***>(esp205) = ebp33;
                                                                                    goto addr_1002042f_391;
                                                                                }
                                                                            }
                                                                        } else {
                                                                            esp243 = esp232 + 1 - 4;
                                                                            *reinterpret_cast<void***>(esp243) = ebp33;
                                                                            --ecx;
                                                                            eax200 = *reinterpret_cast<void***>(esp243);
                                                                            __asm__("insd ");
                                                                            __asm__("insb ");
                                                                            esp205 = esp243 + 4 - 4;
                                                                            *reinterpret_cast<void***>(esp205) = eax200;
                                                                            __asm__("popad ");
                                                                            if (cf199) {
                                                                                addr_1002042f_391:
                                                                                esp244 = esp205 - 4;
                                                                                *reinterpret_cast<void***>(esp244) = ebx16;
                                                                                esp245 = esp244 - 4;
                                                                                *reinterpret_cast<void***>(esp245) = esp245;
                                                                                ecx = ecx - 1 + 1;
                                                                                esi27 = esi27 - 1 - 1;
                                                                                ebx246 = ebx16 + 1;
                                                                                ++ebp33;
                                                                                esp247 = esp245 + 4;
                                                                                edi32 = *reinterpret_cast<void***>(esp247);
                                                                                esp205 = esp247 + 4;
                                                                                eax200 = eax200 - 1 + 1 + 1;
                                                                                *reinterpret_cast<unsigned char*>(eax200 + 90) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax200 + 90) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                                                                *reinterpret_cast<signed char*>(&ebx246) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&ebx246) + *reinterpret_cast<signed char*>(&ebx246 + 1));
                                                                                tmp8_248 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)) + 63);
                                                                                cf199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_248) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                                                                *reinterpret_cast<void**>(&eax200) = tmp8_248;
                                                                                ebx16 = ebx246 + 1;
                                                                                zf203 = ebx16 == 0;
                                                                                goto addr_10020444_342;
                                                                            } else {
                                                                                if (cf199) {
                                                                                    goto addr_10020401_373;
                                                                                } else {
                                                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                                                    eax195 = eax200 + 1 + 1;
                                                                                    esp189 = esp205 + 1 - 4;
                                                                                    *reinterpret_cast<void***>(esp189) = ebx16;
                                                                                    ++edi32;
                                                                                    --edx120;
                                                                                    goto addr_100203cc_341;
                                                                                }
                                                                            }
                                                                        }
                                                                    } else {
                                                                        addr_10020413_382:
                                                                        eax200 = *reinterpret_cast<void***>(esp232);
                                                                        esp232 = esp232 + 4;
                                                                        __asm__("insd ");
                                                                        __asm__("insb ");
                                                                        goto addr_10020416_387;
                                                                    }
                                                                } else {
                                                                    __asm__("insb ");
                                                                    __asm__("arpl [gs:ecx+ebp*2+0x6f], si");
                                                                    __asm__("outsb ");
                                                                    ++eax192;
                                                                    ++ebx16;
                                                                    __asm__("outsd ");
                                                                    __asm__("insd ");
                                                                    __asm__("outsd ");
                                                                    if (reinterpret_cast<signed char>(ebx16) < reinterpret_cast<signed char>(0)) {
                                                                        addr_100203a3_338:
                                                                        --ebx16;
                                                                        goto addr_100203a4_385;
                                                                    } else {
                                                                        esp26 = esp193 + 1;
                                                                        eax40 = eax192 + 1 + 1;
                                                                        goto addr_1002036d_398;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                        esp249 = esp26 + 1 - 4;
                                                        *reinterpret_cast<void***>(esp249) = ebp33;
                                                        ecx250 = ecx + 1;
                                                        ++ebp33;
                                                        esp251 = esp249 + 4;
                                                        goto addr_100202ef_400;
                                                    }
                                                } else {
                                                    esi252 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                    eax40 = eax40 + 1 + 1;
                                                    esp253 = esp26 + 1 - 4;
                                                    *reinterpret_cast<void***>(esp253) = ecx;
                                                    ++ecx;
                                                    ++ebp33;
                                                    goto addr_100202a7_402;
                                                }
                                            } else {
                                                __asm__("insb ");
                                                __asm__("popad ");
                                                if (!cf34) {
                                                    addr_100202c6_404:
                                                    eax40 = *reinterpret_cast<void***>(esp26);
                                                    esp254 = esp26 + 4;
                                                    edx120 = *reinterpret_cast<void***>(esp254);
                                                    esp26 = esp254 + 4;
                                                    *reinterpret_cast<unsigned char*>(ebp33 + 0x65533f0d) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 0x65533f0d) + *reinterpret_cast<unsigned char*>(&eax40 + 1));
                                                    zf255 = *reinterpret_cast<unsigned char*>(ebp33 + 0x65533f0d) == 0;
                                                    sf256 = *reinterpret_cast<signed char*>(ebp33 + 0x65533f0d) < reinterpret_cast<signed char>(0);
                                                    goto addr_100202cc_405;
                                                } else {
                                                    --ecx;
                                                    zf255 = ecx == 0;
                                                    sf256 = reinterpret_cast<signed char>(ecx) < reinterpret_cast<signed char>(0);
                                                    __asm__("outsb ");
                                                    __asm__("outsw ");
                                                    goto addr_10020256_407;
                                                }
                                            }
                                        } else {
                                            ++eax40;
                                            esp26 = esp26 - 4;
                                            *reinterpret_cast<void***>(esp26) = esp26;
                                            __asm__("outsd ");
                                            if (eax40) {
                                                addr_10020242_409:
                                                ++eax40;
                                                *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
                                                goto addr_10020246_410;
                                            } else {
                                                esp26 = esp26 - 4;
                                                *reinterpret_cast<void***>(esp26) = reinterpret_cast<void**>(0x6f726353);
                                                goto addr_100201e1_412;
                                            }
                                        }
                                    } else {
                                        if (cf34) {
                                            addr_100201f9_414:
                                            esp26 = esp26 - 4;
                                            *reinterpret_cast<void***>(esp26) = eax40;
                                            goto addr_100201fa_415;
                                        } else {
                                            addr_1002018a_416:
                                            if (below_or_equal132) {
                                                addr_100201f5_417:
                                                eax40 = eax40 + 1 + 1;
                                                esp26 = esp26 - 4;
                                                *reinterpret_cast<void***>(esp26) = ebx16;
                                                ++edi32;
                                                goto addr_100201f9_414;
                                            } else {
                                                if (cf34) {
                                                    addr_100201d0_419:
                                                    __asm__("popad ");
                                                    if (!cf34) {
                                                        addr_10020246_410:
                                                        edx120 = *reinterpret_cast<void***>(esp26);
                                                        esp26 = esp26 + 4;
                                                        tmp8_257 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax40 + 6) + *reinterpret_cast<unsigned char*>(&eax40 + 1));
                                                        cf34 = reinterpret_cast<uint1_t>(tmp8_257 < *reinterpret_cast<unsigned char*>(eax40 + 6));
                                                        *reinterpret_cast<unsigned char*>(eax40 + 6) = tmp8_257;
                                                        __asm__("aas ");
                                                        ++edi32;
                                                        zf131 = reinterpret_cast<uint1_t>(edi32 == 0);
                                                        goto addr_1002024c_333;
                                                    } else {
                                                        --ecx;
                                                        zf131 = reinterpret_cast<uint1_t>(ecx == 0);
                                                        __asm__("outsb ");
                                                        __asm__("outsw ");
                                                        esp26 = esp26 - 4;
                                                        *reinterpret_cast<void***>(esp26) = eax40;
                                                        goto addr_100201d8_332;
                                                    }
                                                } else {
                                                    ++esp26;
                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                    goto addr_10020196_315;
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    addr_10020132_422:
                                    if (cf34) {
                                        addr_100201a3_423:
                                        __asm__("outsb ");
                                        if (zf131) {
                                            addr_100201e8_424:
                                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                            cf34 = __intrinsic();
                                            goto addr_100201f5_417;
                                        } else {
                                            addr_100201a8_425:
                                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 80));
                                            cf34 = 0;
                                            esp258 = esp26 - 4;
                                            *reinterpret_cast<void***>(esp258) = esi27;
                                            ecx = ecx + 1 - 1;
                                            __asm__("outsb ");
                                            if (!ecx) {
                                                addr_10020220_426:
                                                __asm__("arpl [edx+0x6f], si");
                                                __asm__("insb ");
                                                __asm__("insb ");
                                                ++edx120;
                                                __asm__("popad ");
                                                if (cf34) {
                                                    addr_10020269_427:
                                                    eax40 = eax40 + 1 + 1;
                                                    esp259 = esp258 - 4;
                                                    *reinterpret_cast<void***>(esp259) = ebx16;
                                                    ++edi32;
                                                    esp260 = esp259 - 4;
                                                    *reinterpret_cast<void***>(esp260) = eax40;
                                                    ecx261 = ecx + 1;
                                                    goto addr_10020275_428;
                                                } else {
                                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                    eax40 = eax40 + 1 + 1;
                                                    esp262 = esp258 + 1 - 4;
                                                    *reinterpret_cast<void***>(esp262) = ebx16;
                                                    ++edi32;
                                                    esp263 = esp262 - 4;
                                                    *reinterpret_cast<void***>(esp263) = eax40;
                                                    esp26 = esp263 - 4;
                                                    *reinterpret_cast<void***>(esp26) = ebp33;
                                                    ecx = ecx + 1 - 1;
                                                    ++ebx16;
                                                    __asm__("insb ");
                                                    __asm__("popad ");
                                                    if (!__intrinsic()) {
                                                        addr_100202b1_430:
                                                        ++ebp33;
                                                        zf264 = ebp33 == 0;
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (zf264) {
                                                            addr_100202f9_431:
                                                            if (zf264) {
                                                                addr_1002036d_398:
                                                                esp265 = esp26 - 4;
                                                                *reinterpret_cast<void***>(esp265) = ecx;
                                                                ecx188 = ecx + 1;
                                                                ebp194 = ebp33 + 1;
                                                                eax40 = eax40 - 1 + 1;
                                                                edx120 = *reinterpret_cast<void***>(esp265);
                                                                esp189 = esp265 + 4;
                                                                *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                                                                goto addr_10020376_340;
                                                            } else {
                                                                ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi27 + 0x67) * 0x756f5440);
                                                                goto addr_100202fe_433;
                                                            }
                                                        } else {
                                                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                            esp26 = esp26 + 1 - 4;
                                                            *reinterpret_cast<void***>(esp26) = ebp33;
                                                            ++ecx;
                                                            ++ebp33;
                                                            goto addr_100202c6_404;
                                                        }
                                                    } else {
                                                        --ecx;
                                                        __asm__("outsb ");
                                                        __asm__("outsw ");
                                                        goto addr_10020242_409;
                                                    }
                                                }
                                            } else {
                                                esp26 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 72) * 0x65);
                                                cf34 = __intrinsic();
                                                __asm__("insb ");
                                                if (__intrinsic()) {
                                                    goto addr_1002021e_438;
                                                }
                                                if (cf34) 
                                                    goto addr_100201fa_415; else 
                                                    goto addr_100201ba_440;
                                            }
                                        }
                                    } else {
                                        if (below_or_equal132) {
                                            addr_1002019f_316:
                                            esp26 = esp26 - 4;
                                            *reinterpret_cast<void***>(esp26) = esi27;
                                            ++ebp33;
                                            zf131 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                            __asm__("insb ");
                                            __asm__("insd ");
                                            goto addr_100201a3_423;
                                        } else {
                                            if (cf34) {
                                                addr_1002017a_443:
                                                if (cf34) {
                                                    addr_100201e1_412:
                                                    goto addr_100201e4_444;
                                                } else {
                                                    addr_1002017c_321:
                                                    __asm__("popad ");
                                                    if (zf131) {
                                                        addr_100201e4_444:
                                                        __asm__("insb ");
                                                        __asm__("insb ");
                                                        *reinterpret_cast<void***>(esp26 - 4) = esi27;
                                                        esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265);
                                                        goto addr_100201e8_424;
                                                    } else {
                                                        ++eax40;
                                                        ++ebp33;
                                                        zf131 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                        below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                                                        __asm__("insb ");
                                                        goto addr_10020182_331;
                                                    }
                                                }
                                            } else {
                                                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                                eax40 = eax40 + 1 + 1;
                                                esp266 = esp26 + 1 - 4;
                                                *reinterpret_cast<void***>(esp266) = ebx16;
                                                ++edi32;
                                                --edx120;
                                                esp26 = esp266 - 4;
                                                *reinterpret_cast<void***>(esp26) = eax40;
                                                ++ecx;
                                                goto addr_10020149_447;
                                            }
                                        }
                                    }
                                }
                            } else {
                                if (cf34) {
                                    addr_1002014d_325:
                                    ++esp26;
                                    ++ebp33;
                                    zf131 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    goto addr_10020152_314;
                                } else {
                                    if (below_or_equal132) {
                                        addr_10020149_447:
                                        esp26 = esp26 - 4;
                                        *reinterpret_cast<void***>(esp26) = esi27;
                                        goto addr_1002014a_324;
                                    } else {
                                        if (cf34) {
                                            goto addr_10020132_422;
                                        } else {
                                            __asm__("popad ");
                                            __asm__("outsb ");
                                            __asm__("popad ");
                                            goto addr_100200e7_453;
                                        }
                                    }
                                }
                            }
                        } else {
                            --ecx;
                            __asm__("outsb ");
                            if (cf34 | reinterpret_cast<uint1_t>(ecx == 0)) {
                                addr_1002010c_327:
                                ++ecx;
                                esp26 = esp26 - 4;
                                *reinterpret_cast<void***>(esp26) = esi27;
                                ++ebp33;
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                if (!ebp33) {
                                    addr_10020157_318:
                                    esp26 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp26) = esi27;
                                    ecx = ecx + 1 - 1;
                                    __asm__("outsb ");
                                    if (cf34 | reinterpret_cast<uint1_t>(ecx == 0)) {
                                        goto addr_100201cf_456;
                                    } else {
                                        esp26 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 72) * 0x65);
                                        cf34 = __intrinsic();
                                        __asm__("insb ");
                                        if (__intrinsic()) {
                                            addr_100201cb_458:
                                            ++edi32;
                                            sf256 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                            if (!edi32) {
                                                goto addr_10020213_460;
                                            }
                                        } else {
                                            if (cf34) 
                                                goto addr_100201a8_425;
                                            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 80));
                                            esp267 = esp26 - 4;
                                            *reinterpret_cast<void***>(esp267) = eax40;
                                            ecx = ecx + 1 + 1;
                                            esp26 = esp267 - 4;
                                            *reinterpret_cast<void***>(esp26) = esi27;
                                            goto addr_1002016f_323;
                                        }
                                    }
                                } else {
                                    *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 64));
                                    edx120 = *reinterpret_cast<void***>(esp26);
                                    esp26 = esp26 + 4;
                                    tmp8_268 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esp26) + reinterpret_cast<unsigned char>(eax40) + 0x6572433f) + *reinterpret_cast<signed char*>(&ecx));
                                    cf34 = reinterpret_cast<uint1_t>(tmp8_268 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esp26) + reinterpret_cast<unsigned char>(eax40) + 0x6572433f));
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esp26) + reinterpret_cast<unsigned char>(eax40) + 0x6572433f) = tmp8_268;
                                    zf269 = reinterpret_cast<uint1_t>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esp26) + reinterpret_cast<unsigned char>(eax40) + 0x6572433f) == 0);
                                    below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf269);
                                    __asm__("popad ");
                                    if (zf269) 
                                        goto addr_1002018a_416;
                                    eax40 = eax40 + 1 - 1;
                                    esp26 = esp26 - 4;
                                    *reinterpret_cast<void***>(esp26) = edi32;
                                    --esi27;
                                    goto addr_10020129_297;
                                }
                            } else {
                                esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 77) * 97);
                                cf34 = __intrinsic();
                                zf131 = __undefined();
                                below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                                __asm__("outsb ");
                                __asm__("popad ");
                                if (cf34) {
                                    addr_100200e7_453:
                                    if (cf34) {
                                        addr_1002012b_298:
                                        __asm__("insb ");
                                        goto addr_1002012c_278;
                                    } else {
                                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                        cf34 = __intrinsic();
                                        eax40 = eax40 + 1 + 1;
                                        esp270 = esp26 + 1 - 4;
                                        *reinterpret_cast<void***>(esp270) = ebx16;
                                        ++edi32;
                                        esp271 = esp270 - 4;
                                        *reinterpret_cast<void***>(esp271) = eax40;
                                        ++ecx;
                                        esp26 = esp271 - 4;
                                        *reinterpret_cast<void***>(esp26) = esi27;
                                        ++ebp33;
                                        zf131 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                        below_or_equal132 = reinterpret_cast<uint1_t>(cf34 | zf131);
                                        __asm__("insb ");
                                        goto addr_100200fc_329;
                                    }
                                } else {
                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                    cf34 = __intrinsic();
                                    eax40 = eax40 + 1 + 1;
                                    esp26 = esp26 + 1 - 4;
                                    *reinterpret_cast<void***>(esp26) = ebx16;
                                    ++edi32;
                                    goto addr_100200b3_308;
                                }
                            }
                        }
                    }
                }
            }
        } else {
            esp26 = esp26 - 4;
            *reinterpret_cast<void***>(esp26) = reinterpret_cast<void**>(0x6f726353);
            goto addr_10020013_469;
        }
    }
    __asm__("aas ");
    ++ebx16;
    zf131 = reinterpret_cast<uint1_t>(ebx16 == 0);
    goto addr_1002017a_443;
    addr_100204b9_347:
    if (cf199) {
        addr_1002052a_471:
        ++ecx;
        ++ebp33;
        goto addr_1002052c_368;
    } else {
        addr_100204bb_375:
        if (!sf207) {
            addr_100204fd_358:
            tmp8_272 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
            cf199 = reinterpret_cast<uint1_t>(tmp8_272 < *reinterpret_cast<unsigned char*>(ebp33 + 8));
            *reinterpret_cast<unsigned char*>(ebp33 + 8) = tmp8_272;
            __asm__("aas ");
            ++edi32;
            if (!edi32) {
                addr_10020558_472:
                edx120 = *reinterpret_cast<void***>(esp205);
                esp205 = esp205 + 4;
                tmp8_273 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi32 + 0x6e4f3f0a) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                cf199 = reinterpret_cast<uint1_t>(tmp8_273 < *reinterpret_cast<unsigned char*>(edi32 + 0x6e4f3f0a));
                *reinterpret_cast<unsigned char*>(edi32 + 0x6e4f3f0a) = tmp8_273;
                ++ebp33;
                zf274 = reinterpret_cast<uint1_t>(ebp33 == 0);
                if (cf199 | zf274) 
                    goto addr_100205c7_473;
            } else {
                __asm__("insb ");
                __asm__("arpl [gs:ecx+ebp*2+0x6f], si");
                goto addr_1002050a_475;
            }
        } else {
            esp275 = esp205 + 1 - 4;
            *reinterpret_cast<void***>(esp275) = ebp33;
            --ecx;
            eax200 = *reinterpret_cast<void***>(esp275);
            __asm__("insd ");
            __asm__("insb ");
            esp205 = esp275 + 4 - 4;
            *reinterpret_cast<void***>(esp205) = eax200;
            __asm__("popad ");
            if (cf199) {
                addr_1002053a_356:
                __asm__("outsb ");
                ++eax200;
                ++ebx16;
                __asm__("outsd ");
                __asm__("insd ");
                __asm__("outsd ");
                if (reinterpret_cast<signed char>(ebx16) < reinterpret_cast<signed char>(0)) {
                    addr_10020589_477:
                    goto addr_1002058a_352;
                } else {
                    ++esp205;
                    goto addr_10020553_479;
                }
            } else {
                if (cf199) {
                    addr_1002050a_475:
                    __asm__("outsb ");
                    --ecx;
                    __asm__("outsb ");
                    if (reinterpret_cast<signed char>(ecx) < reinterpret_cast<signed char>(0)) {
                        addr_10020553_479:
                        esp276 = esp205 - 4;
                        *reinterpret_cast<void***>(esp276) = ecx;
                        ++ecx;
                        ++ebp33;
                        eax200 = *reinterpret_cast<void***>(esp276);
                        esp205 = esp276 + 4;
                        goto addr_10020558_472;
                    } else {
                        esp277 = esp205 - 4;
                        *reinterpret_cast<void***>(esp277) = esp277;
                        __asm__("outsd ");
                        if (ecx) {
                            addr_1002057a_482:
                            eax200 = *reinterpret_cast<void***>(esp277);
                            esp278 = esp277 + 4 - 4;
                            *reinterpret_cast<void***>(esp278) = eax200;
                            ++ecx;
                            esp205 = esp278 - 4;
                            *reinterpret_cast<void***>(esp205) = ebp33;
                            ++ebp33;
                            zf279 = reinterpret_cast<uint1_t>(ebp33 == 0);
                            if (cf199 | zf279) {
                                addr_100205e6_483:
                                edx120 = *reinterpret_cast<void***>(esp205);
                                esp205 = esp205 + 4;
                                *reinterpret_cast<void**>(&edx120) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx120)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(0xff);
                                __asm__("popad ");
                                if (1) {
                                    addr_10020632_484:
                                    eax200 = *reinterpret_cast<void***>(esp205);
                                    esp280 = esp205 + 4;
                                    edx120 = *reinterpret_cast<void***>(esp280);
                                    esp205 = esp280 + 4;
                                    *reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax200) + reinterpret_cast<unsigned char>(eax200) + 63) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax200) + reinterpret_cast<unsigned char>(eax200) + 63) + *reinterpret_cast<signed char*>(&eax200 + 1));
                                    __asm__("aas ");
                                    *reinterpret_cast<unsigned char*>(ebx16 + 0x72) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x72) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx16 + reinterpret_cast<unsigned char>(edx120) * 2) + 0x65) * 0x636f4c63);
                                    goto addr_1002063f_485;
                                } else {
                                    esp205 = esp205 - 4;
                                    *reinterpret_cast<void***>(esp205) = reinterpret_cast<void**>(0x72646c69);
                                    __asm__("outsb ");
                                    eax200 = eax200 - 1 + 1;
                                    ++ebp33;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (!ebp33) {
                                        addr_1002063f_485:
                                        goto addr_10020645_487;
                                    } else {
                                        addr_100205ff_353:
                                        ++esp205;
                                        goto addr_10020607_488;
                                    }
                                }
                            } else {
                                __asm__("outsb ");
                                if (zf279) {
                                    addr_100205c4_490:
                                    if (zf279) {
                                        addr_10020607_488:
                                        esp281 = esp205 - 4;
                                        *reinterpret_cast<void***>(esp281) = ecx;
                                        ++ecx;
                                        ++ebp33;
                                        edi32 = *reinterpret_cast<void***>(esp281);
                                        esp282 = esp281 + 4;
                                        eax200 = *reinterpret_cast<void***>(esp282);
                                        esp283 = esp282 + 4;
                                        edx120 = *reinterpret_cast<void***>(esp283);
                                        *reinterpret_cast<void***>(eax200) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                        esp205 = esp283 + 4 - 4;
                                        *reinterpret_cast<void***>(esp205) = edx120;
                                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&ebp33)) + *reinterpret_cast<uint16_t*>(&edi32)) + 0x74) * 0x45407265);
                                        zf284 = __undefined();
                                        __asm__("insb ");
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        goto addr_10020623_491;
                                    } else {
                                        addr_100205c7_473:
                                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                                        cf199 = __intrinsic();
                                        esp285 = esp205 + 1 - 4;
                                        *reinterpret_cast<void***>(esp285) = ebp33;
                                        ++ecx;
                                        ++ebp33;
                                        eax200 = *reinterpret_cast<void***>(esp285);
                                        esp205 = esp285 + 4 - 4;
                                        *reinterpret_cast<void***>(esp205) = eax200;
                                        goto addr_100205d6_492;
                                    }
                                } else {
                                    *reinterpret_cast<void**>(&eax200) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)) ^ *reinterpret_cast<unsigned char*>(eax200 + 64));
                                    edx120 = *reinterpret_cast<void***>(esp205);
                                    esp205 = esp205 + 4;
                                    *reinterpret_cast<void***>(eax200) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax200)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)));
                                    goto addr_10020589_477;
                                }
                            }
                        } else {
                            esp286 = esp277 - 4;
                            *reinterpret_cast<void***>(esp286) = reinterpret_cast<void**>(0x656c6553);
                            __asm__("arpl [eax+eax*2+0x44], si");
                            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                            esp205 = esp286 - 4;
                            *reinterpret_cast<void***>(esp205) = ecx;
                            goto addr_1002052a_471;
                        }
                    }
                } else {
                    ++esp205;
                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                    goto addr_100204ce_366;
                }
            }
        }
    }
    __asm__("outsb ");
    if (zf274) {
        addr_100205a5_497:
        goto addr_100205ad_498;
    } else {
        ++ebp33;
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        if (!ebp33) {
            addr_100205ad_498:
            esp287 = esp205 - 4;
            *reinterpret_cast<void***>(esp287) = ebp33;
            ++ebp33;
            esp288 = esp287 + 4;
            edx120 = *reinterpret_cast<void***>(esp288);
            esp205 = esp288 + 4;
            *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(esp287) + 0x6e4f3f0a) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(esp287) + 0x6e4f3f0a) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
            ecx = ecx + 1 - 1;
            __asm__("outsb ");
            if (__intrinsic()) 
                goto addr_10020632_484;
        } else {
            esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
            cf199 = __intrinsic();
            esp277 = esp205 + 1 - 4;
            *reinterpret_cast<void***>(esp277) = ebp33;
            ++ecx;
            ++ebp33;
            goto addr_1002057a_482;
        }
    }
    if (!ecx) 
        goto addr_100205ff_353;
    ++ebp33;
    zf279 = reinterpret_cast<uint1_t>(ebp33 == 0);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    goto addr_100205c4_490;
    addr_10020645_487:
    if (__intrinsic()) {
        addr_100206b0_503:
        eax289 = *reinterpret_cast<void***>(esp205);
        esp290 = esp205 + 4;
        edx291 = *reinterpret_cast<void***>(esp290);
        esp292 = esp290 + 4;
        *reinterpret_cast<void***>(eax289) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax289)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax289)));
        *reinterpret_cast<void***>(ecx) = *reinterpret_cast<void***>(ecx) + 63;
        __asm__("aas ");
        *reinterpret_cast<unsigned char*>(ebx16 + 0x72) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x72) ^ reinterpret_cast<unsigned char>(eax289));
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx16 + reinterpret_cast<unsigned char>(edx291) * 2) + 0x65) * 0x636f4c63);
        goto addr_100206bf_504;
    } else {
        __asm__("arpl [ebp+edx*2+0x49], si");
        eax200 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<int32_t*>(eax200 + 68) * 0x69) + 1) + 1);
        goto addr_10020651_506;
    }
    addr_10020593_354:
    if (zf211) {
        addr_100205d6_492:
        esp205 = esp205 - 4;
        *reinterpret_cast<void***>(esp205) = ebp33;
        ecx = ecx + 1 - 1;
        zf284 = reinterpret_cast<uint1_t>(ecx == 0);
        __asm__("outsb ");
        if (__intrinsic()) {
            addr_10020651_506:
            esp294 = esp205 - 4;
            *reinterpret_cast<void***>(esp294) = ecx;
            ++ebp33;
            ++eax200;
            esp295 = esp294 - 4;
            *reinterpret_cast<void***>(esp295) = eax200;
            esp296 = esp295 - 4;
            *reinterpret_cast<void***>(esp296) = ebp33;
            esp297 = esp296 + 4 - 4;
            *reinterpret_cast<void***>(esp297) = edx120;
            esp298 = esp297 - 4;
            *reinterpret_cast<void***>(esp298) = esp298;
            esp299 = esp298 - 1 + 4 - 4;
            *reinterpret_cast<void***>(esp299) = edx120;
            esp300 = esp299 - 4;
            *reinterpret_cast<void***>(esp300) = esp300;
            ebx16 = ebx16 + 1 + 1;
            ecx = ecx + 1 + 1 - 1 - 1 + 1;
            esp301 = esp300 - 1;
            edi32 = *reinterpret_cast<void***>(esp301);
            esp205 = esp301 + 4;
            goto addr_10020666_507;
        } else {
            if (zf284) 
                goto addr_10020623_491;
            if (cf199 | zf284) 
                goto addr_10020645_487;
        }
    } else {
        __asm__("arpl [ecx+ebp*2+0x6f], si");
        __asm__("outsb ");
        ++eax200;
        ++ebp33;
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        if (!ebp33) 
            goto addr_100205e3_511;
        ++esp205;
        goto addr_100205a5_497;
    }
    __asm__("outsb ");
    if (zf284) {
        addr_10020623_491:
        if (zf284) {
            addr_10020666_507:
            esp302 = esp205 - 4;
            *reinterpret_cast<void***>(esp302) = ebx16;
            ++ebp33;
            ++ebx16;
            esp303 = esp302 - 4;
            *reinterpret_cast<void***>(esp303) = esp303;
            --ecx;
            esi293 = esi27 - 1;
            eax289 = eax200 + 1 + 1 + 1;
            edx291 = *reinterpret_cast<void***>(esp303);
            esp292 = esp303 + 4;
            *reinterpret_cast<unsigned char*>(esi293 + 7) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi293 + 7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax289)));
            __asm__("aas ");
            edi32 = edi32 - 1 + 1;
            if (!edi32) {
                addr_100206bf_504:
                eax289 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(eax289 + 68) * 0x69);
                if (__intrinsic()) {
                    addr_10020730_514:
                    esp304 = esp292 - 4;
                    *reinterpret_cast<void***>(esp304) = ebp33;
                    esp305 = esp304 - 4;
                    *reinterpret_cast<void***>(esp305) = ebx16;
                    esp306 = esp305 - 4;
                    *reinterpret_cast<void***>(esp306) = esp306;
                    ecx307 = ecx + 1 - 1 + 1;
                    ++ebx16;
                    ++ebp33;
                    eax308 = eax289 - 1 + 1 + 1;
                    esp309 = esp306 + 4 + 4 - 4;
                    *reinterpret_cast<void***>(esp309) = eax308;
                    edi32 = *reinterpret_cast<void***>(esp309);
                    esp310 = esp309 + 4;
                    eax311 = eax308 + 1;
                    edx291 = *reinterpret_cast<void***>(esp310);
                    *reinterpret_cast<void***>(eax311) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                    *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) | 63);
                    esp312 = esp310 + 4 - 4;
                    *reinterpret_cast<void***>(esp312) = edx291;
                    goto addr_1002074c_515;
                } else {
                    __asm__("arpl [ebp+edx*2+0x49], si");
                    goto addr_100206cc_517;
                }
            } else {
                __asm__("popad ");
                __asm__("arpl [edi+ebp*2+0x72], si");
                if (reinterpret_cast<signed char>(edi32) >= reinterpret_cast<signed char>(0) || (++ebp33, ebp33 == 0)) {
                    addr_100206cc_517:
                    esp313 = esp292 - 4;
                    *reinterpret_cast<void***>(esp313) = ecx;
                    ecx307 = ecx + 1;
                    ++ebp33;
                    eax311 = *reinterpret_cast<void***>(esp313);
                    esp314 = esp313 + 4;
                    edx291 = *reinterpret_cast<void***>(esp314);
                    esp312 = esp314 + 4;
                    *reinterpret_cast<void***>(ebx16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx291)));
                    tmp8_315 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) + 63);
                    cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_315) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                    *reinterpret_cast<void**>(&eax311) = tmp8_315;
                    ++ebx16;
                    __asm__("insb ");
                    __asm__("popad ");
                    if (!cf316) {
                        addr_10020753_519:
                        __asm__("insb ");
                        __asm__("popad ");
                        if (!cf316) {
                            addr_100207cc_520:
                            ebx16 = *reinterpret_cast<void***>(esp312);
                            esp312 = esp312 + 4 - 2;
                            *reinterpret_cast<void***>(esp312) = es22;
                            __asm__("aas ");
                            ++edi32;
                            if (!edi32) {
                                addr_10020816_521:
                                esp317 = esp312 - 4;
                                *reinterpret_cast<void***>(esp317) = ecx307;
                                ++ecx307;
                                ++ebp33;
                                eax311 = *reinterpret_cast<void***>(esp317);
                                esp312 = esp317 + 4;
                                goto addr_10020822_522;
                            } else {
                                __asm__("insb ");
                                __asm__("popad ");
                                if (!cf316) {
                                    addr_1002084a_524:
                                    ++ebx16;
                                    __asm__("insb ");
                                    __asm__("popad ");
                                    goto addr_10020850_525;
                                } else {
                                    --ecx307;
                                    __asm__("outsb ");
                                    __asm__("outsw ");
                                    esp312 = esp312 - 4;
                                    *reinterpret_cast<void***>(esp312) = eax311;
                                    if (!ecx307) {
                                        addr_10020850_525:
                                        if (!cf316) {
                                            addr_100208c5_527:
                                            __asm__("arpl [eax+eax*2+0x44], si");
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            cf316 = __intrinsic();
                                            eax311 = eax311 + 1 + 1;
                                            esp318 = esp312 - 4;
                                            *reinterpret_cast<void***>(esp318) = ebx16;
                                            ++edi32;
                                            esp319 = esp318 - 4;
                                            *reinterpret_cast<void***>(esp319) = eax311;
                                            esp312 = esp319 - 4;
                                            *reinterpret_cast<void***>(esp312) = ebp33;
                                            ecx307 = ecx307 + 1 - 1;
                                            ++ebx16;
                                            zf320 = ebx16 == 0;
                                            __asm__("insb ");
                                            __asm__("popad ");
                                            if (!cf316) {
                                                addr_10020951_528:
                                                __asm__("insb ");
                                                __asm__("popad ");
                                                if (cf316) {
                                                    __asm__("outsb ");
                                                    __asm__("outsw ");
                                                    eax321 = eax311 + 1;
                                                    *reinterpret_cast<void**>(&eax321) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax321)) ^ *reinterpret_cast<unsigned char*>(eax321 + 88));
                                                    *reinterpret_cast<void***>(eax321) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax321)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax321)));
                                                }
                                            } else {
                                                --ecx307;
                                                __asm__("outsb ");
                                                __asm__("outsw ");
                                                ++eax311;
                                                *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 88));
                                                goto addr_100208e6_532;
                                            }
                                        } else {
                                            --ecx307;
                                            goto addr_10020853_534;
                                        }
                                    } else {
                                        ++eax311;
                                        ++ebp33;
                                        __asm__("insb ");
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        if (!ebp33) {
                                            addr_10020827_536:
                                            __asm__("aas ");
                                            *reinterpret_cast<unsigned char*>(ebx16 + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x6c) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                            cf316 = 0;
                                            goto addr_1002082a_537;
                                        } else {
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            cf316 = __intrinsic();
                                            eax311 = eax311 + 1 + 1;
                                            esp322 = esp312 + 1 - 4;
                                            *reinterpret_cast<void***>(esp322) = ebx16;
                                            ++edi32;
                                            esp312 = esp322 - 4;
                                            *reinterpret_cast<void***>(esp312) = eax311;
                                            goto addr_100207f4_539;
                                        }
                                    }
                                }
                            }
                        } else {
                            addr_10020759_540:
                            --ecx307;
                            __asm__("outsb ");
                            __asm__("outsw ");
                        }
                    } else {
                        ++ebp33;
                        if (reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0)) {
                            addr_1002074c_515:
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&ebp33)) + *reinterpret_cast<uint16_t*>(&edi32)) + 0x74) * 0x43407265);
                            cf316 = __intrinsic();
                            goto addr_10020753_519;
                        } else {
                            if (!cf316) 
                                goto addr_10020759_540;
                            ++eax311;
                            ++ebx16;
                            __asm__("insb ");
                            __asm__("popad ");
                            if (cf316) 
                                goto addr_100206eb_544;
                        }
                    }
                } else {
                    esp323 = esp292 + 1 - 4;
                    *reinterpret_cast<void***>(esp323) = ebx16;
                    esp324 = esp323 - 4;
                    *reinterpret_cast<void***>(esp324) = eax289 + 1 + 1;
                    esp325 = esp324 - 4;
                    *reinterpret_cast<void***>(esp325) = ebp33;
                    esp326 = esp325 + 4 - 4;
                    *reinterpret_cast<void***>(esp326) = edx291;
                    esp327 = esp326 - 4;
                    *reinterpret_cast<void***>(esp327) = esp327;
                    esp328 = esp327 - 1 + 4 - 4;
                    *reinterpret_cast<void***>(esp328) = edx291;
                    esp329 = esp328 - 4;
                    *reinterpret_cast<void***>(esp329) = esp329;
                    ebx330 = ebx16 + 1 + 1;
                    esp331 = esp329 - 1;
                    edi332 = *reinterpret_cast<void***>(esp331);
                    esp333 = esp331 + 4 - 4;
                    *reinterpret_cast<void***>(esp333) = ebx330;
                    ++ebp33;
                    ebx16 = ebx330 + 1;
                    esp205 = esp333 - 4;
                    *reinterpret_cast<void***>(esp205) = esp205;
                    ecx = ecx + 1 - 1 - 1 + 1 - 1;
                    edi32 = edi332 - 1;
                    goto addr_100206b0_503;
                }
            }
        } else {
            esp205 = esp205 + 1 - 4;
            *reinterpret_cast<void***>(esp205) = ebx16;
            ++edi32;
            goto addr_10020632_484;
        }
    } else {
        addr_100205e3_511:
        *reinterpret_cast<void**>(&eax200) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax200)) ^ *reinterpret_cast<unsigned char*>(eax200 + 64));
        goto addr_100205e6_483;
    }
    __asm__("popad ");
    if (!cf316) {
        addr_100207c6_548:
        ++eax311;
        edx291 = *reinterpret_cast<void***>(esp312);
        esp312 = esp312 + 4;
        tmp8_334 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
        cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_334) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)));
        *reinterpret_cast<void***>(eax311) = tmp8_334;
        goto addr_100207cc_520;
    } else {
        ++esp312;
        goto addr_1002076b_550;
    }
    addr_100206eb_544:
    --ecx307;
    __asm__("outsb ");
    __asm__("outsw ");
    ++edx291;
    __asm__("popad ");
    if (!cf316) {
        goto addr_10020759_540;
    }
    esi335 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
    cf316 = __intrinsic();
    eax336 = eax311 + 1 + 1 + 1;
    esp337 = esp312 + 1 - 4;
    *reinterpret_cast<void***>(esp337) = ebx16;
    edi32 = *reinterpret_cast<void***>(esp337);
    esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi335) - 1);
    esp338 = esp337 + 4 - 4;
    *reinterpret_cast<void***>(esp338) = eax336;
    esp339 = esp338 - 4;
    *reinterpret_cast<void***>(esp339) = eax336;
    esp312 = esp339 - 4;
    *reinterpret_cast<void***>(esp312) = ebp33;
    ecx307 = ecx307 + 1 + 1 - 1;
    ++ebx16;
    __asm__("insb ");
    __asm__("popad ");
    if (!cf316) {
        addr_10020780_553:
        eax311 = eax336 + 1;
        ++ebx16;
        goto addr_10020783_554;
    } else {
        --ecx307;
        __asm__("outsb ");
        __asm__("outsw ");
        eax311 = eax336 + 1;
        *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 80));
        cf316 = 0;
        esp340 = esp312 - 4;
        *reinterpret_cast<void***>(esp340) = ecx307;
        edx291 = edx291 + 1 + 1;
        esp341 = esp340 - 4;
        *reinterpret_cast<void***>(esp341) = ebp33;
        esp312 = esp341 - 4;
        *reinterpret_cast<void***>(esp312) = eax311;
        if (0) {
            addr_1002078b_556:
            ++edx291;
            __asm__("popad ");
            if (!cf316) {
                addr_100207f4_539:
                esp312 = esp312 - 4;
                *reinterpret_cast<void***>(esp312) = ebp33;
                ecx307 = ecx307 + 1 - 1;
                ++ebx16;
                __asm__("insb ");
                __asm__("popad ");
                goto addr_100207fa_557;
            } else {
                ++eax311;
                ++esp312;
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                cf316 = __intrinsic();
                goto addr_10020794_559;
            }
        } else {
            if (__intrinsic()) {
                addr_10020783_554:
                __asm__("insb ");
                __asm__("popad ");
                if (!cf316) {
                    addr_100207fa_557:
                    if (!cf316) {
                        addr_1002086f_561:
                        ++edi32;
                        zf342 = edi32 == 0;
                        if (zf342) {
                            addr_100208b6_562:
                            __asm__("outsb ");
                            __asm__("outsw ");
                            esp312 = esp312 - 4;
                            *reinterpret_cast<void***>(esp312) = eax311;
                            if (zf342) {
                                goto addr_1002092f_564;
                            } else {
                                ++eax311;
                                zf343 = eax311 == 0;
                                esp312 = esp312 - 4;
                                *reinterpret_cast<void***>(esp312) = esp312;
                                __asm__("outsd ");
                                goto addr_100208bf_566;
                            }
                        } else {
                            __asm__("insb ");
                            __asm__("popad ");
                            if (!cf316) {
                                addr_100208ea_568:
                                __asm__("aas ");
                                ++edi32;
                                zf344 = edi32 == 0;
                                if (zf344) {
                                    addr_10020932_569:
                                    esp312 = esp312 - 4;
                                    *reinterpret_cast<void***>(esp312) = eax311;
                                    if (zf344) 
                                        goto addr_100209a8_570;
                                } else {
                                    __asm__("insb ");
                                    goto addr_100208f0_572;
                                }
                            } else {
                                --ecx307;
                                __asm__("outsb ");
                                __asm__("outsw ");
                                esp312 = esp312 - 4;
                                *reinterpret_cast<void***>(esp312) = eax311;
                                if (!ecx307) {
                                    addr_100208f0_572:
                                    __asm__("popad ");
                                    if (!cf316) {
                                        esp312 = esp312 - 1 - 4;
                                        *reinterpret_cast<void***>(esp312) = edx291;
                                        __asm__("popad ");
                                        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 0x67) * 0x656c4540);
                                        zf345 = __undefined();
                                        goto addr_1002096c_576;
                                    } else {
                                        --ecx307;
                                        zf345 = ecx307 == 0;
                                        goto addr_100208f4_578;
                                    }
                                } else {
                                    ++eax311;
                                    esp312 = esp312 - 4;
                                    *reinterpret_cast<void***>(esp312) = esp312;
                                    __asm__("outsd ");
                                    if (eax311) {
                                        addr_100208e6_532:
                                        edx291 = *reinterpret_cast<void***>(esp312);
                                        esp312 = esp312 + 4;
                                        tmp8_346 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax311 + 6) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                                        cf316 = reinterpret_cast<uint1_t>(tmp8_346 < *reinterpret_cast<unsigned char*>(eax311 + 6));
                                        *reinterpret_cast<unsigned char*>(eax311 + 6) = tmp8_346;
                                        goto addr_100208ea_568;
                                    } else {
                                        esp347 = esp312 - 4;
                                        *reinterpret_cast<void***>(esp347) = reinterpret_cast<void**>(0x74747542);
                                        __asm__("outsd ");
                                        __asm__("outsb ");
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        cf316 = __intrinsic();
                                        eax311 = eax311 + 1 + 1 + 1;
                                        esp348 = esp347 + 1 - 4;
                                        *reinterpret_cast<void***>(esp348) = ebx16;
                                        ++edi32;
                                        esp349 = esp348 - 4;
                                        *reinterpret_cast<void***>(esp349) = eax311;
                                        esp312 = esp349 - 4;
                                        *reinterpret_cast<void***>(esp312) = ebp33;
                                        ecx307 = ecx307 + 1 - 1;
                                        goto addr_1002089b_581;
                                    }
                                }
                            }
                        }
                    } else {
                        --ecx307;
                        __asm__("outsb ");
                        __asm__("outsw ");
                        ++eax311;
                        *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 88));
                        edx291 = *reinterpret_cast<void***>(esp312);
                        esp312 = esp312 + 4;
                        *reinterpret_cast<void***>(ecx307) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx307)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx291 + 1)));
                        __asm__("aas ");
                        __asm__("aas ");
                        goto addr_1002080a_583;
                    }
                } else {
                    --ecx307;
                    __asm__("outsb ");
                    __asm__("outsw ");
                    goto addr_1002078b_556;
                }
            } else {
                if (0) {
                    addr_10020794_559:
                    eax350 = eax311 + 1 + 1;
                    esp351 = esp312 - 4;
                    *reinterpret_cast<void***>(esp351) = ecx307;
                    ebp352 = ebp33 + 1;
                    esp353 = esp351 - 4;
                    *reinterpret_cast<void***>(esp353) = eax350;
                    esp354 = esp353 - 4;
                    *reinterpret_cast<void***>(esp354) = ebp352;
                    esp355 = esp354 - 4;
                    *reinterpret_cast<void***>(esp355) = ebx16;
                    esp356 = esp355 - 4;
                    *reinterpret_cast<void***>(esp356) = esp356;
                    ecx307 = ecx307 + 1 + 1 - 1 + 1;
                    ++ebx16;
                    ebp33 = ebp352 + 1;
                    eax311 = eax350 - 1 + 1 + 1;
                    esp357 = esp356 + 4 + 4 - 4;
                    *reinterpret_cast<void***>(esp357) = eax311;
                    edi32 = *reinterpret_cast<void***>(esp357);
                    esi293 = esi293 - 1 - 1 - 1;
                    esp358 = esp357 + 4 - 4;
                    *reinterpret_cast<void***>(esp358) = eax311;
                    esp359 = esp358 - 4;
                    *reinterpret_cast<void***>(esp359) = ecx307;
                    edx291 = edx291 - 1 + 1 + 1 + 1;
                    esp360 = esp359 - 4;
                    *reinterpret_cast<void***>(esp360) = ebp33;
                    esp312 = esp360 - 4;
                    *reinterpret_cast<void***>(esp312) = eax311;
                    if (cf316) {
                        addr_1002082a_537:
                        __asm__("popad ");
                        if (!cf316) {
                            addr_100208a1_586:
                            __asm__("outsb ");
                            __asm__("outsw ");
                            ++eax311;
                            *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 88));
                            edx291 = *reinterpret_cast<void***>(esp312);
                            esp312 = esp312 + 4;
                            tmp8_361 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 0x65473f06) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                            cf316 = reinterpret_cast<uint1_t>(tmp8_361 < *reinterpret_cast<unsigned char*>(ebp33 + 0x65473f06));
                            *reinterpret_cast<unsigned char*>(ebp33 + 0x65473f06) = tmp8_361;
                            zf345 = *reinterpret_cast<unsigned char*>(ebp33 + 0x65473f06) == 0;
                            if (zf345) {
                                addr_100208f4_578:
                                __asm__("outsb ");
                                __asm__("outsw ");
                                esp312 = esp312 - 4;
                                *reinterpret_cast<void***>(esp312) = eax311;
                                if (zf345) {
                                    addr_1002096c_576:
                                    goto addr_1002096e_587;
                                } else {
                                    ++eax311;
                                    ++ebx16;
                                    __asm__("outsd ");
                                    __asm__("insd ");
                                    __asm__("outsd ");
                                    if (reinterpret_cast<signed char>(ebx16) < reinterpret_cast<signed char>(0)) {
                                        addr_10020944_589:
                                        eax311 = eax311 + 1 + 1;
                                        esp362 = esp312 - 4;
                                        *reinterpret_cast<void***>(esp362) = ebx16;
                                        ++edi32;
                                        esp363 = esp362 - 4;
                                        *reinterpret_cast<void***>(esp363) = eax311;
                                        esp312 = esp363 - 4;
                                        *reinterpret_cast<void***>(esp312) = ebp33;
                                        ecx307 = ecx307 + 1 - 1;
                                        ++ebx16;
                                        zf320 = ebx16 == 0;
                                        goto addr_10020951_528;
                                    } else {
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        cf316 = __intrinsic();
                                        eax311 = eax311 + 1 + 1;
                                        esp364 = esp312 + 1 - 4;
                                        *reinterpret_cast<void***>(esp364) = ebx16;
                                        ++edi32;
                                        esp365 = esp364 - 4;
                                        *reinterpret_cast<void***>(esp365) = eax311;
                                        ++ecx307;
                                        esp312 = esp365 - 4;
                                        *reinterpret_cast<void***>(esp312) = ebp33;
                                        goto addr_10020913_591;
                                    }
                                }
                            } else {
                                __asm__("insb ");
                                __asm__("popad ");
                                if (!cf316) {
                                    addr_10020928_593:
                                    if (zf345) {
                                        addr_1002096e_587:
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        if (zf345) {
                                            addr_100209b8_594:
                                            edx291 = *reinterpret_cast<void***>(esp312);
                                            esp366 = esp312 + 4;
                                            tmp8_367 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                            cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_367) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)));
                                            *reinterpret_cast<void***>(eax311) = tmp8_367;
                                            es22 = *reinterpret_cast<void***>(esp366);
                                            esp312 = esp366 + 2;
                                            __asm__("aas ");
                                            ++edi32;
                                            zf320 = edi32 == 0;
                                            sf368 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                            of369 = __intrinsic();
                                            if (zf320) {
                                                addr_10020a04_595:
                                                esp312 = esp312 - 4;
                                                *reinterpret_cast<void***>(esp312) = eax311;
                                                goto addr_10020a08_596;
                                            } else {
                                                __asm__("outsd ");
                                                __asm__("outsb ");
                                                if (zf320) {
                                                    addr_10020a2a_598:
                                                    esp370 = esp312 - 4;
                                                    *reinterpret_cast<void***>(esp370) = ebp33;
                                                    ++ecx307;
                                                    ++ebp33;
                                                    edi32 = *reinterpret_cast<void***>(esp370);
                                                    --esi293;
                                                    esp371 = esp370 + 4 - 4;
                                                    *reinterpret_cast<void***>(esp371) = eax311;
                                                    ++edx291;
                                                    sf368 = reinterpret_cast<signed char>(edx291) < reinterpret_cast<signed char>(0);
                                                    of369 = __intrinsic();
                                                    esp372 = esp371 - 4;
                                                    *reinterpret_cast<void***>(esp372) = ebp33;
                                                    esp312 = esp372 - 4;
                                                    *reinterpret_cast<void***>(esp312) = eax311;
                                                    if (cf316) {
                                                        addr_10020aa4_599:
                                                        __asm__("aas ");
                                                        --edi32;
                                                        sf368 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                                        __asm__("outsb ");
                                                        esp312 = esp312 - 4;
                                                        *reinterpret_cast<void***>(esp312) = eax311;
                                                        if (cf316) {
                                                            addr_10020b19_600:
                                                            ++ebp33;
                                                            eax311 = *reinterpret_cast<void***>(esp312);
                                                            esp373 = esp312 + 4 - 4;
                                                            *reinterpret_cast<void***>(esp373) = eax311;
                                                            ++ecx307;
                                                            sf368 = reinterpret_cast<signed char>(ecx307) < reinterpret_cast<signed char>(0);
                                                            esp374 = esp373 - 4;
                                                            *reinterpret_cast<void***>(esp374) = ebp33;
                                                            esp312 = esp374 - 4;
                                                            *reinterpret_cast<void***>(esp312) = eax311;
                                                            if (cf316) {
                                                                addr_10020b90_601:
                                                                esp375 = esp312 - 4;
                                                                *reinterpret_cast<void***>(esp375) = ebp33;
                                                                ++ebp33;
                                                                eax311 = *reinterpret_cast<void***>(esp375);
                                                                esp376 = esp375 + 4 - 4;
                                                                *reinterpret_cast<void***>(esp376) = eax311;
                                                                ecx307 = ecx307 + 1 + 1;
                                                                esp312 = esp376 - 4;
                                                                *reinterpret_cast<void***>(esp312) = esi293;
                                                                goto addr_10020b98_602;
                                                            } else {
                                                                if (__intrinsic()) {
                                                                    addr_10020b88_604:
                                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                                    goto addr_10020b90_601;
                                                                } else {
                                                                    addr_10020b23_605:
                                                                    if (cf316) {
                                                                        addr_10020b99_606:
                                                                        eax377 = eax311 + 1;
                                                                        goto addr_10020b9b_607;
                                                                    } else {
                                                                        if (!sf368) {
                                                                            addr_10020b70_609:
                                                                            __asm__("outsb ");
                                                                            --ebx16;
                                                                            zf378 = ebx16 == 0;
                                                                            if (reinterpret_cast<signed char>(ebx16) >= reinterpret_cast<signed char>(0)) {
                                                                                addr_10020bbb_610:
                                                                                if (zf378) {
                                                                                    addr_10020bfd_611:
                                                                                    __asm__("aas ");
                                                                                    esp312 = esp312 - 4;
                                                                                    *reinterpret_cast<void***>(esp312) = eax311;
                                                                                    __asm__("popad ");
                                                                                    ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(esi293 + 0x74)) * 0x656c4540);
                                                                                    zf379 = __undefined();
                                                                                    __asm__("insd ");
                                                                                    __asm__("outsb ");
                                                                                    if (zf379) {
                                                                                        addr_10020c4d_612:
                                                                                        goto addr_10020c50_613;
                                                                                    } else {
                                                                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                                                        esp312 = esp312 + 1 - 4;
                                                                                        *reinterpret_cast<void***>(esp312) = ebp33;
                                                                                        goto addr_10020c18_615;
                                                                                    }
                                                                                } else {
                                                                                    ++esp312;
                                                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                                                    goto addr_10020bc7_617;
                                                                                }
                                                                            } else {
                                                                                __asm__("outsd ");
                                                                                __asm__("arpl [ebp+0x73], si");
                                                                                --ebp33;
                                                                                __asm__("outsd ");
                                                                                if (cf316 | reinterpret_cast<uint1_t>(ebp33 == 0)) 
                                                                                    goto addr_10020be2_619;
                                                                                ++ebp33;
                                                                                __asm__("insb ");
                                                                                __asm__("insd ");
                                                                                __asm__("outsb ");
                                                                                if (!ebp33) 
                                                                                    goto addr_10020bc7_617; else 
                                                                                    goto addr_10020b87_621;
                                                                            }
                                                                        } else {
                                                                            __asm__("outsb ");
                                                                            __asm__("outsw ");
                                                                            eax377 = eax311 + 1;
                                                                            *reinterpret_cast<void**>(&eax377) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax377)) ^ *reinterpret_cast<unsigned char*>(eax377 + 72));
                                                                            esp380 = esp312 - 4;
                                                                            *reinterpret_cast<void***>(esp380) = eax377;
                                                                            ++ecx307;
                                                                            esp381 = esp380 - 4;
                                                                            *reinterpret_cast<void***>(esp381) = esi293;
                                                                            esp312 = esp381 - 4;
                                                                            *reinterpret_cast<void***>(esp312) = esi293;
                                                                            __asm__("popad ");
                                                                            __asm__("insb ");
                                                                            if (ecx307) {
                                                                                addr_10020b9b_607:
                                                                                *reinterpret_cast<unsigned char*>(eax377 + 90) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax377 + 90) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax377)));
                                                                                *reinterpret_cast<void***>(eax377) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax377)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax377)));
                                                                                __asm__("cli ");
                                                                                *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                                                                                --edi32;
                                                                                __asm__("outsb ");
                                                                                --ebp33;
                                                                                __asm__("outsd ");
                                                                                if (ebp33) {
                                                                                    addr_10020c1c_623:
                                                                                    ++ecx307;
                                                                                    esp382 = esp312 - 4;
                                                                                    *reinterpret_cast<void***>(esp382) = ebp33;
                                                                                    eax311 = eax377 - 1;
                                                                                    ++ebx16;
                                                                                    esp383 = esp382 + 1 + 4;
                                                                                    edi32 = *reinterpret_cast<void***>(esp383);
                                                                                    esp312 = esp383 + 4;
                                                                                    goto addr_10020c23_624;
                                                                                } else {
                                                                                    ++esi293;
                                                                                    __asm__("outsd ");
                                                                                    __asm__("arpl [ebp+0x73], si");
                                                                                    --ebp33;
                                                                                    __asm__("outsd ");
                                                                                    if (!ebp33) {
                                                                                        addr_10020c18_615:
                                                                                        ++ecx307;
                                                                                        ++ebp33;
                                                                                        eax377 = *reinterpret_cast<void***>(esp312);
                                                                                        esp312 = esp312 + 4 - 4;
                                                                                        *reinterpret_cast<void***>(esp312) = eax377;
                                                                                        goto addr_10020c1c_623;
                                                                                    } else {
                                                                                        eax311 = eax377 + 1;
                                                                                        goto addr_10020bb5_627;
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                eax311 = eax377 + 1;
                                                                                *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 49));
                                                                                goto addr_10020b3a_629;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            if (__intrinsic()) {
                                                                addr_10020b11_631:
                                                                esp312 = esp312 - 4;
                                                                *reinterpret_cast<void***>(esp312) = ebp33;
                                                                ++ecx307;
                                                                goto addr_10020b19_600;
                                                            } else {
                                                                if (cf316) 
                                                                    goto addr_10020b22_633; else 
                                                                    goto addr_10020aae_634;
                                                            }
                                                        }
                                                    } else {
                                                        if (of369) {
                                                            addr_10020a9c_636:
                                                            ++eax311;
                                                            edx291 = *reinterpret_cast<void***>(esp312);
                                                            esp312 = esp312 + 4;
                                                            tmp8_384 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                                            cf385 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_384) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)));
                                                            *reinterpret_cast<void***>(eax311) = tmp8_384;
                                                            cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) < reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx307)) + cf385));
                                                            *reinterpret_cast<void***>(ebx16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) - reinterpret_cast<unsigned char>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx307)) + cf316));
                                                            goto addr_10020aa3_637;
                                                        } else {
                                                            if (cf316) {
                                                                goto addr_10020aae_634;
                                                            } else {
                                                                if (!sf368) {
                                                                    goto addr_10020a85_642;
                                                                } else {
                                                                    __asm__("outsb ");
                                                                    goto addr_10020a3c_644;
                                                                }
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    __asm__("outsb ");
                                                    if (zf320) {
                                                        addr_10020a1b_646:
                                                        __asm__("outsb ");
                                                        if (zf320) {
                                                            addr_10020a60_647:
                                                            esp312 = esp312 - 4;
                                                            *reinterpret_cast<void***>(esp312) = reinterpret_cast<void**>(0x69676e61);
                                                            __asm__("outsb ");
                                                            ++eax311;
                                                            ++ebp33;
                                                            __asm__("insb ");
                                                            __asm__("insd ");
                                                            __asm__("outsb ");
                                                            if (!ebp33) 
                                                                goto addr_10020ab0_648; else 
                                                                goto addr_10020a70_649;
                                                        } else {
                                                            ++esp312;
                                                            goto addr_10020a21_651;
                                                        }
                                                    } else {
                                                        if (zf320) 
                                                            goto addr_10020a3c_644; else 
                                                            goto addr_100209ca_653;
                                                    }
                                                }
                                            }
                                        } else {
                                            esi386 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            esp387 = esp312 + 1 - 4;
                                            *reinterpret_cast<void***>(esp387) = ebp33;
                                            ++ecx307;
                                            ++ebp33;
                                            edi32 = *reinterpret_cast<void***>(esp387);
                                            esp388 = esp387 + 4;
                                            esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi386) - 1);
                                            eax311 = *reinterpret_cast<void***>(esp388);
                                            esp389 = esp388 + 4;
                                            edx291 = *reinterpret_cast<void***>(esp389);
                                            esp312 = esp389 + 4;
                                            tmp8_390 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx307 + 0x73493f09) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                                            cf316 = reinterpret_cast<uint1_t>(tmp8_390 < *reinterpret_cast<unsigned char*>(ecx307 + 0x73493f09));
                                            *reinterpret_cast<unsigned char*>(ecx307 + 0x73493f09) = tmp8_390;
                                            goto addr_1002098c_655;
                                        }
                                    } else {
                                        __asm__("insb ");
                                        __asm__("popad ");
                                        if (!cf316) {
                                            addr_100209a2_657:
                                            __asm__("insd ");
                                            __asm__("outsb ");
                                            if (zf345) {
                                                addr_100209e8_658:
                                                eax311 = eax311 + 1 + 1;
                                                esp391 = esp312 - 4;
                                                *reinterpret_cast<void***>(esp391) = ebp33;
                                                ++ebp33;
                                                esp392 = esp391 - 4;
                                                *reinterpret_cast<void***>(esp392) = eax311;
                                                ++edx291;
                                                ++edi32;
                                                esp393 = esp392 - 4;
                                                *reinterpret_cast<void***>(esp393) = eax311;
                                                esp394 = esp393 - 4;
                                                *reinterpret_cast<void***>(esp394) = eax311;
                                                ecx307 = ecx307 + 1 + 1 + 1;
                                                zf395 = ecx307 == 0;
                                                esp396 = esp394 - 4;
                                                *reinterpret_cast<void***>(esp396) = esi293;
                                                esp312 = esp396 - 4;
                                                *reinterpret_cast<void***>(esp312) = esi293;
                                                __asm__("popad ");
                                                __asm__("insb ");
                                                goto addr_100209f9_659;
                                            } else {
                                                addr_100209a8_570:
                                                esi397 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                esp398 = esp312 + 1 - 4;
                                                *reinterpret_cast<void***>(esp398) = ebp33;
                                                ++ecx307;
                                                ++ebp33;
                                                edi32 = *reinterpret_cast<void***>(esp398);
                                                esp399 = esp398 + 4;
                                                esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi397) - 1);
                                                eax311 = *reinterpret_cast<void***>(esp399);
                                                esp312 = esp399 + 4;
                                                goto addr_100209b8_594;
                                            }
                                        } else {
                                            addr_1002092f_564:
                                            --ecx307;
                                            zf344 = ecx307 == 0;
                                            __asm__("outsb ");
                                            __asm__("outsw ");
                                            goto addr_10020932_569;
                                        }
                                    }
                                } else {
                                    --ecx307;
                                    zf342 = ecx307 == 0;
                                    goto addr_100208b6_562;
                                }
                            }
                        } else {
                            --ecx307;
                            __asm__("outsb ");
                            __asm__("outsw ");
                            ++edx291;
                            goto addr_10020833_662;
                        }
                    } else {
                        if (__intrinsic()) {
                            addr_10020822_522:
                            edx291 = *reinterpret_cast<void***>(esp312);
                            esp312 = esp312 + 4;
                            *reinterpret_cast<void***>(esi293) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi293)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                            __asm__("aas ");
                            goto addr_10020827_536;
                        } else {
                            if (cf316) {
                                addr_10020833_662:
                                __asm__("popad ");
                                if (!cf316) {
                                    addr_1002089b_581:
                                    ++ebx16;
                                    __asm__("insb ");
                                    __asm__("popad ");
                                    if (!cf316) {
                                        addr_10020913_591:
                                        --ecx307;
                                        ++ebx16;
                                        __asm__("insb ");
                                        __asm__("popad ");
                                        if (!cf316) {
                                            addr_1002098c_655:
                                            ++ebx16;
                                            zf395 = ebx16 == 0;
                                            sf368 = reinterpret_cast<signed char>(ebx16) < reinterpret_cast<signed char>(0);
                                            of369 = __intrinsic();
                                            __asm__("outsd ");
                                            __asm__("outsb ");
                                            if (zf395) {
                                                addr_100209f9_659:
                                                if (!zf395) 
                                                    goto addr_10020a60_647; else 
                                                    goto addr_100209fb_665;
                                            } else {
                                                __asm__("outsb ");
                                                if (zf395) {
                                                    addr_100209e7_667:
                                                    goto addr_100209e8_658;
                                                } else {
                                                    if (cf316) {
                                                        addr_10020a08_596:
                                                        if (cf316) {
                                                            addr_10020a79_669:
                                                            ++eax311;
                                                            esp400 = esp312 - 4;
                                                            *reinterpret_cast<void***>(esp400) = ebp33;
                                                            ++ebp33;
                                                            edi32 = *reinterpret_cast<void***>(esp400);
                                                            --esi293;
                                                            esp401 = esp400 + 4 - 4;
                                                            *reinterpret_cast<void***>(esp401) = eax311;
                                                            ecx307 = ecx307 + 1 + 1;
                                                            sf368 = reinterpret_cast<signed char>(ecx307) < reinterpret_cast<signed char>(0);
                                                            of369 = __intrinsic();
                                                            esp312 = esp401 - 4;
                                                            *reinterpret_cast<void***>(esp312) = ebp33;
                                                            goto addr_10020a82_670;
                                                        } else {
                                                            if (of369) {
                                                                addr_10020a71_672:
                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                                cf316 = __intrinsic();
                                                                ++eax311;
                                                                goto addr_10020a79_669;
                                                            } else {
                                                                if (cf316) {
                                                                    addr_10020a82_670:
                                                                    esp312 = esp312 - 4;
                                                                    *reinterpret_cast<void***>(esp312) = eax311;
                                                                    if (cf316) {
                                                                        addr_10020af4_674:
                                                                        __asm__("outsb ");
                                                                        esp312 = esp312 - 4;
                                                                        *reinterpret_cast<void***>(esp312) = eax311;
                                                                        if (cf316) {
                                                                            addr_10020b67_675:
                                                                            esp402 = esp312 + 4;
                                                                            --esi293;
                                                                            ++eax311;
                                                                            edx291 = *reinterpret_cast<void***>(esp402);
                                                                            esp312 = esp402 + 4;
                                                                            *reinterpret_cast<void**>(&ecx307) = reinterpret_cast<void*>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx307)) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(&ecx307)));
                                                                            *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                                                                            cf316 = 0;
                                                                            edi32 = *reinterpret_cast<void***>(esp312) - 1;
                                                                            goto addr_10020b70_609;
                                                                        } else {
                                                                            if (of369) {
                                                                                addr_10020b5f_677:
                                                                                esp403 = esp312 - 4;
                                                                                *reinterpret_cast<void***>(esp403) = ebp33;
                                                                                ++ecx307;
                                                                                ++ebp33;
                                                                                esp312 = esp403 + 4;
                                                                                eax311 = *reinterpret_cast<void***>(esp403) - 1;
                                                                                goto addr_10020b67_675;
                                                                            } else {
                                                                                if (cf316) 
                                                                                    goto addr_10020b70_609;
                                                                                if (!sf368) 
                                                                                    goto addr_10020b41_680; else 
                                                                                    goto addr_10020afe_681;
                                                                            }
                                                                        }
                                                                    } else {
                                                                        addr_10020a85_642:
                                                                        if (of369) {
                                                                            addr_10020aec_682:
                                                                            ++eax311;
                                                                            edx291 = *reinterpret_cast<void***>(esp312);
                                                                            *reinterpret_cast<void***>(eax311) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                                                            esp312 = esp312 + 4 + 2;
                                                                            edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                                                            cf316 = 0;
                                                                            goto addr_10020af3_683;
                                                                        } else {
                                                                            if (cf316) {
                                                                                goto addr_10020afe_681;
                                                                            } else {
                                                                                if (!sf368) {
                                                                                    goto addr_10020ad5_688;
                                                                                }
                                                                                __asm__("outsb ");
                                                                                __asm__("outsw ");
                                                                                ++eax311;
                                                                                *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 72));
                                                                                esp404 = esp312 - 4;
                                                                                *reinterpret_cast<void***>(esp404) = eax311;
                                                                                ++ecx307;
                                                                                esp405 = esp404 - 4;
                                                                                *reinterpret_cast<void***>(esp405) = esi293;
                                                                                esp312 = esp405 - 4;
                                                                                *reinterpret_cast<void***>(esp312) = esi293;
                                                                                __asm__("popad ");
                                                                                __asm__("insb ");
                                                                                if (ecx307) 
                                                                                    goto addr_10020aff_690;
                                                                                ++eax311;
                                                                                *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 49));
                                                                                goto addr_10020a9c_636;
                                                                            }
                                                                        }
                                                                    }
                                                                } else {
                                                                    if (!sf368) {
                                                                        addr_10020a53_693:
                                                                        __asm__("aas ");
                                                                        --edi32;
                                                                        sf368 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                                                        of406 = __intrinsic();
                                                                        __asm__("outsb ");
                                                                        esp312 = esp312 - 4;
                                                                        *reinterpret_cast<void***>(esp312) = eax311;
                                                                        if (cf316) {
                                                                            addr_10020ac9_694:
                                                                            esp407 = esp312 - 4;
                                                                            *reinterpret_cast<void***>(esp407) = ebp33;
                                                                            ++ecx307;
                                                                            ++ebp33;
                                                                            eax311 = *reinterpret_cast<void***>(esp407);
                                                                            esp408 = esp407 + 4 - 4;
                                                                            *reinterpret_cast<void***>(esp408) = eax311;
                                                                            ++edx291;
                                                                            sf368 = reinterpret_cast<signed char>(edx291) < reinterpret_cast<signed char>(0);
                                                                            of406 = __intrinsic();
                                                                            esp409 = esp408 - 4;
                                                                            *reinterpret_cast<void***>(esp409) = ebp33;
                                                                            esp312 = esp409 - 4;
                                                                            *reinterpret_cast<void***>(esp312) = eax311;
                                                                            if (cf316) {
                                                                                addr_10020b42_695:
                                                                                __asm__("outsb ");
                                                                                ++edi32;
                                                                                zf378 = edi32 == 0;
                                                                                if (cf316) {
                                                                                    addr_10020bb5_627:
                                                                                    ++ebp33;
                                                                                    zf378 = ebp33 == 0;
                                                                                    __asm__("insb ");
                                                                                    __asm__("insd ");
                                                                                    goto addr_10020bb8_696;
                                                                                } else {
                                                                                    if (!zf378) {
                                                                                        addr_10020bb8_696:
                                                                                        __asm__("outsb ");
                                                                                        goto addr_10020bbb_610;
                                                                                    } else {
                                                                                        ++ebx16;
                                                                                        esp312 = esp312 - 4;
                                                                                        *reinterpret_cast<void***>(esp312) = reinterpret_cast<void**>(0x65676e61);
                                                                                        goto addr_10020b4b_699;
                                                                                    }
                                                                                }
                                                                            } else {
                                                                                addr_10020ad3_700:
                                                                                if (of406) {
                                                                                    addr_10020b3a_629:
                                                                                    ++eax311;
                                                                                    edx291 = *reinterpret_cast<void***>(esp312);
                                                                                    *reinterpret_cast<void***>(eax311) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                                                                    esp312 = esp312 + 4 + 4;
                                                                                    *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                                                                                    cf316 = 0;
                                                                                    goto addr_10020b41_680;
                                                                                } else {
                                                                                    addr_10020ad5_688:
                                                                                    if (cf316) {
                                                                                        addr_10020b4b_699:
                                                                                        goto addr_10020b4d_701;
                                                                                    } else {
                                                                                        if (!sf368) {
                                                                                            addr_10020b22_633:
                                                                                            goto addr_10020b23_605;
                                                                                        } else {
                                                                                            __asm__("outsb ");
                                                                                            __asm__("outsw ");
                                                                                            ++eax311;
                                                                                            *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 72));
                                                                                            esp410 = esp312 - 4;
                                                                                            *reinterpret_cast<void***>(esp410) = eax311;
                                                                                            ++ecx307;
                                                                                            esp411 = esp410 - 4;
                                                                                            *reinterpret_cast<void***>(esp411) = esi293;
                                                                                            esp312 = esp411 - 4;
                                                                                            *reinterpret_cast<void***>(esp312) = esi293;
                                                                                            __asm__("popad ");
                                                                                            __asm__("insb ");
                                                                                            if (ecx307) 
                                                                                                goto addr_10020b4d_701;
                                                                                            ++eax311;
                                                                                            *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 49));
                                                                                            goto addr_10020aec_682;
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        } else {
                                                                            if (of406) {
                                                                                addr_10020ac1_706:
                                                                                goto addr_10020ac9_694;
                                                                            } else {
                                                                                if (cf316) {
                                                                                    goto addr_10020ad3_700;
                                                                                }
                                                                                if (!sf368) 
                                                                                    goto addr_10020aa3_637; else 
                                                                                    goto addr_10020a60_647;
                                                                            }
                                                                        }
                                                                    } else {
                                                                        esp312 = esp312 - 4;
                                                                        *reinterpret_cast<void***>(esp312) = reinterpret_cast<void**>(0x69676e61);
                                                                        __asm__("outsb ");
                                                                        ++eax311;
                                                                        ++ebp33;
                                                                        zf320 = ebp33 == 0;
                                                                        __asm__("insb ");
                                                                        __asm__("insd ");
                                                                        goto addr_10020a1b_646;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        if (zf395) {
                                                            addr_10020a00_712:
                                                            *reinterpret_cast<void***>(eax311) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                                            eax311 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax311) ^ 0x6e4f3f0b);
                                                            cf316 = 0;
                                                            sf368 = __intrinsic();
                                                            of369 = 0;
                                                            goto addr_10020a04_595;
                                                        } else {
                                                            __asm__("arpl [ebp+0x64], si");
                                                            goto addr_1002099f_714;
                                                        }
                                                    }
                                                }
                                            }
                                        } else {
                                            --ecx307;
                                            __asm__("outsb ");
                                            __asm__("outsw ");
                                            ++eax311;
                                            *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 88));
                                            edx291 = *reinterpret_cast<void***>(esp312);
                                            esp312 = esp312 + 4;
                                            tmp8_412 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                            cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_412) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)));
                                            *reinterpret_cast<void***>(eax311) = tmp8_412;
                                            goto addr_10020924_716;
                                        }
                                    } else {
                                        --ecx307;
                                        goto addr_100208a1_586;
                                    }
                                } else {
                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                    esp413 = esp312 + 1 - 4;
                                    *reinterpret_cast<void***>(esp413) = ecx307;
                                    ++ecx307;
                                    ++ebp33;
                                    eax311 = *reinterpret_cast<void***>(esp413);
                                    esp414 = esp413 + 4;
                                    edx291 = *reinterpret_cast<void***>(esp414);
                                    esp312 = esp414 + 4;
                                    tmp8_415 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax311 + 0x313f3f01) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                    cf316 = reinterpret_cast<uint1_t>(tmp8_415 < *reinterpret_cast<unsigned char*>(eax311 + 0x313f3f01));
                                    *reinterpret_cast<unsigned char*>(eax311 + 0x313f3f01) = tmp8_415;
                                    goto addr_1002084a_524;
                                }
                            } else {
                                if (reinterpret_cast<signed char>(edx291) >= reinterpret_cast<signed char>(0)) {
                                    addr_1002080a_583:
                                    *reinterpret_cast<unsigned char*>(ebp33 + 0x6c) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 0x6c) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                                    cf316 = 0;
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (!*reinterpret_cast<unsigned char*>(ebp33 + 0x6c)) {
                                        addr_10020853_534:
                                        __asm__("outsb ");
                                        __asm__("outsw ");
                                        ++edx291;
                                        zf343 = edx291 == 0;
                                        __asm__("popad ");
                                        if (!cf316) {
                                            addr_100208bf_566:
                                            if (!zf343) {
                                                addr_10020924_716:
                                                __asm__("aas ");
                                                ++edi32;
                                                zf345 = edi32 == 0;
                                                goto addr_10020928_593;
                                            } else {
                                                esp312 = esp312 - 4;
                                                *reinterpret_cast<void***>(esp312) = reinterpret_cast<void**>(0x656c6553);
                                                goto addr_100208c5_527;
                                            }
                                        } else {
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            esp416 = esp312 + 1 - 4;
                                            *reinterpret_cast<void***>(esp416) = ebp33;
                                            ++ecx307;
                                            ++ebp33;
                                            eax311 = *reinterpret_cast<void***>(esp416);
                                            esp417 = esp416 + 4;
                                            edx291 = *reinterpret_cast<void***>(esp417);
                                            esp312 = esp417 + 4;
                                            tmp8_418 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx291 + 6) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                                            cf316 = reinterpret_cast<uint1_t>(tmp8_418 < *reinterpret_cast<unsigned char*>(edx291 + 6));
                                            *reinterpret_cast<unsigned char*>(edx291 + 6) = tmp8_418;
                                            __asm__("aas ");
                                            goto addr_1002086f_561;
                                        }
                                    } else {
                                        ++esp312;
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        goto addr_10020816_521;
                                    }
                                } else {
                                    __asm__("outsb ");
                                    __asm__("outsw ");
                                    ++eax311;
                                    *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 73));
                                    goto addr_100207c6_548;
                                }
                            }
                        }
                    }
                } else {
                    if (reinterpret_cast<signed char>(edx291) >= reinterpret_cast<signed char>(0)) {
                        addr_1002076b_550:
                        esp419 = esp312 - 4;
                        *reinterpret_cast<void***>(esp419) = ecx307;
                        ++ebp33;
                        eax336 = *reinterpret_cast<void***>(esp419);
                        esp420 = esp419 + 4 + 4;
                        *reinterpret_cast<void***>(eax336) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax336)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax336)));
                        edx291 = *reinterpret_cast<void***>(esp420);
                        esp312 = esp420 + 4;
                        *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                        ecx307 = ecx307 + 1 - 1;
                        __asm__("outsb ");
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx307 + reinterpret_cast<unsigned char>(ebp33) * 2) + 97) * 0x657a696c);
                        cf316 = __intrinsic();
                        goto addr_10020780_553;
                    } else {
                        __asm__("outsb ");
                        __asm__("outsw ");
                        eax421 = eax311 + 1;
                        *reinterpret_cast<unsigned char*>(&eax421) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax421) ^ *reinterpret_cast<unsigned char*>(eax421 + 73));
                        esp422 = esp312 - 4;
                        *reinterpret_cast<void***>(esp422) = eax421;
                        ecx = ecx307 + 1;
                        esp423 = esp422 - 4;
                        *reinterpret_cast<void***>(esp423) = ebp33;
                        eax289 = eax421 + 1;
                        esp292 = esp423 - 4;
                        *reinterpret_cast<void***>(esp292) = eax289;
                        goto addr_10020730_514;
                    }
                }
            }
        }
    }
    ++eax311;
    --ecx307;
    if (!ecx307) {
        addr_1002099f_714:
        ++eax311;
        ++ebp33;
        zf345 = ebp33 == 0;
        __asm__("insb ");
        goto addr_100209a2_657;
    } else {
        __asm__("insd ");
        --esp312;
        esi293 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72694440);
        cf316 = __intrinsic();
        __asm__("arpl [gs:ebp+edx*2+0x49], si");
        goto addr_10020944_589;
    }
    addr_10020bc7_617:
    esp424 = esp312 - 4;
    *reinterpret_cast<void***>(esp424) = ebp33;
    ++ebp33;
    eax425 = *reinterpret_cast<void***>(esp424);
    esp426 = esp424 + 4 - 4;
    *reinterpret_cast<void***>(esp426) = eax425;
    ecx307 = ecx307 + 1 + 1;
    esp312 = esp426 - 4;
    *reinterpret_cast<void***>(esp312) = esi293;
    *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
    eax311 = eax425 + 1;
    *reinterpret_cast<unsigned char*>(eax311 + 90) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax311 + 90) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    tmp8_427 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
    cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_427) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)));
    *reinterpret_cast<void***>(eax311) = tmp8_427;
    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax311)) < reinterpret_cast<signed char>(0) == __intrinsic()) {
        addr_10020be2_619:
        goto addr_10020be3_728;
    } else {
        __asm__("aas ");
        --edi32;
        __asm__("outsb ");
        ++esp312;
        zf379 = esp312 == 0;
        if (!cf316) {
            addr_10020c53_730:
            if (zf379) {
                addr_10020c96_731:
                eax311 = eax311 + 1 + 1;
                esp312 = esp312 - 4;
                *reinterpret_cast<void***>(esp312) = ebp33;
                ++ecx307;
                goto addr_10020c9d_732;
            } else {
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                eax311 = eax311 + 1 + 1;
                esp428 = esp312 + 1 - 4;
                *reinterpret_cast<void***>(esp428) = ebp33;
                ++ebp33;
                __asm__("aas ");
                ecx307 = ecx307 + 1 + 1;
                esp429 = esp428 - 4;
                *reinterpret_cast<void***>(esp429) = ebp33;
                if (!ecx307) {
                    addr_10020cc9_734:
                    ++ebp33;
                    --edx291;
                    esp430 = esp429 - 4;
                    *reinterpret_cast<void***>(esp430) = eax311;
                    esp431 = esp430 - 4;
                    *reinterpret_cast<void***>(esp431) = eax311;
                    ecx307 = ecx307 + 1 + 1 + 1;
                    esp312 = esp431 - 4;
                    *reinterpret_cast<void***>(esp312) = esi293;
                    goto addr_10020cd1_735;
                } else {
                    esp432 = esp429 - 4;
                    *reinterpret_cast<void***>(esp432) = ebx16;
                    edx291 = *reinterpret_cast<void***>(esp432);
                    ++ebp33;
                    eax311 = eax311 + 1 + 1 - 1 - 1;
                    esp433 = esp432 + 4 - 4;
                    *reinterpret_cast<void***>(esp433) = eax311;
                    ecx434 = ecx307 - 1 + 1;
                    zf435 = ecx434 == 0;
                    esp436 = esp433 - 4;
                    *reinterpret_cast<void***>(esp436) = esi293;
                    esp437 = esp436 - 4;
                    *reinterpret_cast<void***>(esp437) = ebx16;
                    if (!zf435) {
                        addr_10020ce9_737:
                        if (zf435) {
                            addr_10020d2c_738:
                            esp438 = esp437 - 4;
                            *reinterpret_cast<void***>(esp438) = esi293;
                            *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                            eax439 = eax311 + 1;
                            esp440 = esp438 - 4;
                            *reinterpret_cast<void***>(esp440) = eax439;
                            ++ecx434;
                            esp441 = esp440 - 4;
                            *reinterpret_cast<void***>(esp441) = esi293;
                            *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                            cf442 = 0;
                            eax443 = eax439 + 1 - 1;
                            esp444 = esp441 - 4;
                            *reinterpret_cast<void***>(esp444) = eax443;
                            ++edx291;
                            esp437 = esp444 - 4;
                            *reinterpret_cast<void***>(esp437) = ebp33;
                            --esi293;
                            zf445 = reinterpret_cast<uint1_t>(esi293 == 0);
                            __asm__("popad ");
                            if (zf445) {
                                addr_10020d90_739:
                                __asm__("outsb ");
                                if (zf445) {
                                    addr_10020dd5_740:
                                    eax443 = eax443 + 1 + 1;
                                    esp446 = esp437 - 4;
                                    *reinterpret_cast<void***>(esp446) = ebp33;
                                    ++ebp33;
                                    esp447 = esp446 - 4;
                                    *reinterpret_cast<void***>(esp447) = eax443;
                                    esp448 = esp447 - 4;
                                    *reinterpret_cast<void***>(esp448) = ebp33;
                                    ecx434 = ecx434 + 1 + 1 - 1;
                                    esp437 = esp448 + 1;
                                    if (esp437) {
                                        addr_10020e50_741:
                                        esp449 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp449) = ebp33;
                                        esp450 = esp449 - 4;
                                        *reinterpret_cast<void***>(esp450) = ebp33;
                                        edi32 = *reinterpret_cast<void***>(esp450) + 1;
                                        esp451 = esp450 + 4 - 4;
                                        *reinterpret_cast<void***>(esp451) = ebp33;
                                        eax452 = eax443 + 1 + 1;
                                        esp453 = esp451 + 1 - 4;
                                        *reinterpret_cast<void***>(esp453) = eax452;
                                        esp454 = esp453 - 4;
                                        *reinterpret_cast<void***>(esp454) = eax452;
                                        ecx434 = ecx434 + 1 + 1 - 1 + 1 + 1;
                                        esp455 = esp454 + 4;
                                        eax443 = *reinterpret_cast<void***>(esp454) + 1;
                                        edx291 = *reinterpret_cast<void***>(esp455);
                                        esp437 = esp455 + 4;
                                        tmp8_456 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x65473f07) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                        cf442 = reinterpret_cast<uint1_t>(tmp8_456 < *reinterpret_cast<unsigned char*>(ebx16 + 0x65473f07));
                                        *reinterpret_cast<unsigned char*>(ebx16 + 0x65473f07) = tmp8_456;
                                        zf457 = *reinterpret_cast<unsigned char*>(ebx16 + 0x65473f07) == 0;
                                        sf458 = *reinterpret_cast<signed char*>(ebx16 + 0x65473f07) < reinterpret_cast<signed char>(0);
                                        if (zf457) {
                                            addr_10020eb6_742:
                                            if (!sf458) 
                                                goto addr_10020f27_743;
                                        } else {
                                            __asm__("insd ");
                                            goto addr_10020e6e_745;
                                        }
                                    } else {
                                        edx291 = edx291 - 1 + 1;
                                        zf459 = edx291 == 0;
                                        esp437 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp437) = reinterpret_cast<void**>(0x6f697661);
                                        if (cf442) {
                                            addr_10020e30_747:
                                            if (!zf459) {
                                                addr_10020e97_748:
                                                esp460 = esp437 - 4;
                                                *reinterpret_cast<void***>(esp460) = ebp33;
                                                ++ecx434;
                                                ++ebp33;
                                                eax443 = *reinterpret_cast<void***>(esp460);
                                                esp437 = esp460 + 4 - 4;
                                                *reinterpret_cast<void***>(esp437) = eax443;
                                                goto addr_10020e9d_749;
                                            } else {
                                                if (cf442) {
                                                    addr_10020ead_751:
                                                    __asm__("aas ");
                                                    edi32 = *reinterpret_cast<void***>(esp437);
                                                    esp437 = esp437 + 4 - 4;
                                                    *reinterpret_cast<void***>(esp437) = ebx16;
                                                    __asm__("insb ");
                                                    *reinterpret_cast<int16_t*>(&esp437) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&esp437) - 1);
                                                    zf457 = *reinterpret_cast<int16_t*>(&esp437) == 0;
                                                    sf458 = *reinterpret_cast<int16_t*>(&esp437) < 0;
                                                    __asm__("popad ");
                                                    goto addr_10020eb6_742;
                                                } else {
                                                    --ecx434;
                                                    __asm__("outsb ");
                                                    if (!ecx434) {
                                                        addr_10020e9d_749:
                                                        ++ecx434;
                                                        zf461 = ecx434 == 0;
                                                        esp437 = esp437 - 4;
                                                        *reinterpret_cast<void***>(esp437) = ebp33;
                                                        if (zf461) {
                                                            addr_10020f02_753:
                                                            __asm__("outsb ");
                                                            if (zf461) 
                                                                goto addr_10020f46_754; else 
                                                                goto addr_10020f06_755;
                                                        } else {
                                                            addr_10020ea1_756:
                                                            esp462 = esp437 - 4;
                                                            *reinterpret_cast<void***>(esp462) = edx291;
                                                            ++ebp33;
                                                            ++ebx16;
                                                            esp463 = esp462 - 4;
                                                            *reinterpret_cast<void***>(esp463) = esp463;
                                                            eax443 = eax443 + 1 + 1 + 1;
                                                            edx291 = *reinterpret_cast<void***>(esp463);
                                                            esp437 = esp463 + 4;
                                                            *reinterpret_cast<void***>(eax443) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                                            cf442 = 0;
                                                            goto addr_10020ead_751;
                                                        }
                                                    } else {
                                                        if (cf442) {
                                                            goto addr_10020ea1_756;
                                                        }
                                                        __asm__("popad ");
                                                        __asm__("arpl [ebp+0x40], sp");
                                                        ++ebp33;
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (!ebp33) 
                                                            goto addr_10020e86_760; else 
                                                            goto addr_10020e46_761;
                                                    }
                                                }
                                            }
                                        } else {
                                            eax443 = eax443 + 1 + 1;
                                            edx291 = *reinterpret_cast<void***>(esp437);
                                            esp437 = esp437 + 4;
                                            goto addr_10020df3_763;
                                        }
                                    }
                                } else {
                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                    cf442 = __intrinsic();
                                    eax443 = eax443 + 1 + 1;
                                    esp464 = esp437 + 1 - 4;
                                    *reinterpret_cast<void***>(esp464) = ebp33;
                                    ++ebp33;
                                    --edx291;
                                    esp465 = esp464 - 4;
                                    *reinterpret_cast<void***>(esp465) = eax443;
                                    esp437 = esp465 - 4;
                                    *reinterpret_cast<void***>(esp437) = ebp33;
                                    ecx434 = ecx434 + 1 + 1 - 1;
                                    goto addr_10020da7_765;
                                }
                            } else {
                                if (0) {
                                    addr_10020da8_767:
                                    if (!zf445) {
                                        addr_10020e13_768:
                                        eax443 = eax443 + 1 + 1;
                                        esp466 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp466) = ebp33;
                                        ++ebp33;
                                        esp467 = esp466 - 4;
                                        *reinterpret_cast<void***>(esp467) = eax443;
                                        ecx434 = ecx434 + 1 - 1 + 1;
                                        zf468 = ecx434 == 0;
                                        esp437 = esp467 - 4;
                                        *reinterpret_cast<void***>(esp437) = ebp33;
                                        if (zf468) 
                                            goto addr_10020e83_769; else 
                                            goto addr_10020e22_770;
                                    } else {
                                        ++edx291;
                                        esp437 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp437) = reinterpret_cast<void**>(0x6f697661);
                                        if (cf442) {
                                            addr_10020df3_763:
                                            tmp8_469 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi293 + 10) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                            cf442 = reinterpret_cast<uint1_t>(tmp8_469 < *reinterpret_cast<unsigned char*>(esi293 + 10));
                                            *reinterpret_cast<unsigned char*>(esi293 + 10) = tmp8_469;
                                            __asm__("aas ");
                                            --ebp33;
                                            if (!cf442) {
                                                addr_10020e6e_745:
                                                __asm__("insd ");
                                                if (cf442) {
                                                    addr_10020ee5_772:
                                                    *reinterpret_cast<int16_t*>(&esp437) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&esp437) - 1);
                                                    zf468 = *reinterpret_cast<int16_t*>(&esp437) == 0;
                                                    sf470 = *reinterpret_cast<int16_t*>(&esp437) < 0;
                                                    of471 = __intrinsic();
                                                    __asm__("popad ");
                                                    goto addr_10020ee8_773;
                                                } else {
                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 0x65) * 0x75636f46);
                                                    cf442 = __intrinsic();
                                                    of471 = __intrinsic();
                                                    sf470 = __undefined();
                                                    zf468 = __undefined();
                                                    if (!cf442) {
                                                        addr_10020ecd_775:
                                                        goto addr_10020ece_776;
                                                    } else {
                                                        __asm__("arpl [gs:edi+ecx*2+0x66], si");
                                                        if (!cf442) {
                                                            addr_10020ee8_773:
                                                            if (!sf470) {
                                                                addr_10020f59_778:
                                                                eax443 = eax443 + 1 + 1;
                                                                edx291 = *reinterpret_cast<void***>(esp437);
                                                                esp437 = esp437 + 4;
                                                                *reinterpret_cast<void***>(eax443) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                                                goto addr_10020f5d_779;
                                                            } else {
                                                                if (!zf468) {
                                                                    addr_10020f60_781:
                                                                    --edi32;
                                                                    __asm__("outsb ");
                                                                    esp437 = esp437 - 4;
                                                                    *reinterpret_cast<void***>(esp437) = ebp33;
                                                                    __asm__("outsb ");
                                                                    __asm__("outsd ");
                                                                    if (!cf442) 
                                                                        goto addr_10020fdd_782; else 
                                                                        goto addr_10020f69_783;
                                                                } else {
                                                                    esp437 = esp437 - 4;
                                                                    *reinterpret_cast<void***>(esp437) = ebp33;
                                                                    if (of471) {
                                                                        addr_10020f53_785:
                                                                        eax443 = *reinterpret_cast<void***>(esp437);
                                                                        esp472 = esp437 + 4 - 4;
                                                                        *reinterpret_cast<void***>(esp472) = eax443;
                                                                        ++ecx434;
                                                                        esp437 = esp472 - 4;
                                                                        *reinterpret_cast<void***>(esp437) = esi293;
                                                                        goto addr_10020f57_786;
                                                                    } else {
                                                                        __asm__("popad ");
                                                                        if (zf468) {
                                                                            addr_10020f57_786:
                                                                            *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                                                                            goto addr_10020f59_778;
                                                                        } else {
                                                                            ++esp437;
                                                                            if (!cf442) {
                                                                                addr_10020f5f_789:
                                                                                edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                                                                cf442 = 0;
                                                                                goto addr_10020f60_781;
                                                                            } else {
                                                                                if (cf442) {
                                                                                    addr_10020f5d_779:
                                                                                    ebx16 = *reinterpret_cast<void***>(esp437);
                                                                                    esp437 = esp437 + 4;
                                                                                    goto addr_10020f5f_789;
                                                                                } else {
                                                                                    addr_10020ef8_791:
                                                                                    esp437 = esp437 - 4;
                                                                                    *reinterpret_cast<void***>(esp437) = ebx16;
                                                                                    edi32 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x656c4540);
                                                                                    zf461 = __undefined();
                                                                                    __asm__("insd ");
                                                                                    goto addr_10020f02_753;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            addr_10020e83_769:
                                                            if (zf468) 
                                                                goto addr_10020ef8_791; else 
                                                                goto addr_10020e85_792;
                                                        }
                                                    }
                                                }
                                            } else {
                                                __asm__("popad ");
                                                ++ebx16;
                                                __asm__("popad ");
                                                __asm__("insb ");
                                                __asm__("insb ");
                                                eax443 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(eax443 + 69) * 0x6c);
                                                zf473 = __undefined();
                                                __asm__("insd ");
                                                goto addr_10020e0a_794;
                                            }
                                        } else {
                                            eax443 = eax443 + 1 + 1;
                                            edx291 = *reinterpret_cast<void***>(esp437);
                                            tmp8_474 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                            cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_474) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                                            *reinterpret_cast<void***>(eax443) = tmp8_474;
                                            below_or_equal475 = reinterpret_cast<uint1_t>(cf442 | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax443) == 0));
                                            ecx434 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(edi32));
                                            esp437 = esp437 + 4 - 4;
                                            *reinterpret_cast<void***>(esp437) = edx291;
                                            goto addr_10020dbc_796;
                                        }
                                    }
                                } else {
                                    __asm__("outsb ");
                                    __asm__("arpl [ebp+0x40], sp");
                                    *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 75));
                                    goto addr_10020d48_798;
                                }
                            }
                        } else {
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                            eax476 = eax311 + 1 + 1;
                            esp477 = esp437 + 1 - 4;
                            *reinterpret_cast<void***>(esp477) = ebp33;
                            ++ebp33;
                            --edx291;
                            esp478 = esp477 - 4;
                            *reinterpret_cast<void***>(esp478) = eax476;
                            esp479 = esp478 - 4;
                            *reinterpret_cast<void***>(esp479) = eax476;
                            ecx307 = ecx434 + 1 + 1 + 1;
                            goto addr_10020cfe_800;
                        }
                    } else {
                        __asm__("popa ");
                        __asm__("arpl [ebp+0x40], sp");
                        *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 64));
                        edx291 = *reinterpret_cast<void***>(esp437);
                        esp312 = esp437 + 4;
                        *reinterpret_cast<void***>(eax311) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                        edi480 = edi32 + 1;
                        ++esi293;
                        edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi480) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi480)));
                        ecx307 = ecx434 + 1;
                        goto addr_10020c86_805;
                    }
                }
            }
        } else {
            if (cf316) {
                addr_10020c50_613:
                __asm__("insd ");
                __asm__("outsb ");
                goto addr_10020c53_730;
            } else {
                if (reinterpret_cast<signed char>(esp312) >= reinterpret_cast<signed char>(0)) {
                    addr_10020c23_624:
                    eax311 = eax311 + 1 + 1;
                    esp481 = esp312 - 4;
                    *reinterpret_cast<void***>(esp481) = eax311;
                    ++edx291;
                    zf482 = edx291 == 0;
                    esp312 = esp481 - 4;
                    *reinterpret_cast<void***>(esp312) = ebp33;
                    if (zf482) {
                        addr_10020c8b_808:
                        __asm__("insd ");
                        __asm__("outsb ");
                        if (zf482) {
                            addr_10020cd1_735:
                            *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                            ecx434 = ecx307 - 1 - 1;
                            eax443 = eax311 + 1 + 1;
                            edx291 = *reinterpret_cast<void***>(esp312);
                            tmp8_483 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                            cf484 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_483) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                            *reinterpret_cast<void***>(eax443) = tmp8_483;
                            below_or_equal485 = reinterpret_cast<uint1_t>(cf484 | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax443) == 0));
                            *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(edi32)) = ecx434;
                            esp437 = esp312 + 4 - 4;
                            *reinterpret_cast<void***>(esp437) = edx291;
                            __asm__("insd ");
                            __asm__("outsd ");
                            if (below_or_equal485) {
                                addr_10020d48_798:
                                ++eax443;
                                edx291 = *reinterpret_cast<void***>(esp437);
                                esp437 = esp437 + 4;
                                tmp8_486 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_486) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                                *reinterpret_cast<void***>(eax443) = tmp8_486;
                                goto addr_10020d4e_809;
                            } else {
                                eax311 = eax443 + 1;
                                ++ebp33;
                                zf435 = ebp33 == 0;
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                goto addr_10020ce9_737;
                            }
                        } else {
                            ++esp312;
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                            goto addr_10020c96_731;
                        }
                    } else {
                        esp312 = esp312 - 4;
                        *reinterpret_cast<void***>(esp312) = edx291;
                        goto addr_10020c2b_813;
                    }
                } else {
                    addr_10020be3_728:
                    ++ebp33;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp33) {
                        addr_10020c2b_813:
                        ++ebp33;
                        ++ebx16;
                        esp487 = esp312 - 4;
                        *reinterpret_cast<void***>(esp487) = esp487;
                        eax311 = eax311 + 1 + 1;
                        *reinterpret_cast<unsigned char*>(eax311 + 65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax311 + 65) ^ reinterpret_cast<unsigned char>(edx291));
                        esp488 = esp487 - 4;
                        *reinterpret_cast<void***>(esp488) = ebp33;
                        *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ 64);
                        *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 90));
                        tmp8_489 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
                        cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_489) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)));
                        *reinterpret_cast<void***>(eax311) = tmp8_489;
                        __asm__("cli ");
                        esp312 = esp488 - 2;
                        *reinterpret_cast<void***>(esp312) = es22;
                        __asm__("aas ");
                        ++edi32;
                        zf490 = edi32 == 0;
                        if (zf490) {
                            addr_10020c86_805:
                            ++eax311;
                            ++ebp33;
                            zf482 = ebp33 == 0;
                            __asm__("insb ");
                            goto addr_10020c8b_808;
                        } else {
                            __asm__("outsd ");
                            __asm__("outsb ");
                            if (zf490) {
                                addr_10020cac_815:
                                esp491 = esp312 - 4;
                                *reinterpret_cast<void***>(esp491) = reinterpret_cast<void**>("rt@Element@DirectUI@@UAEJPAPAV12@II@Z");
                                eax311 = fun_6e4f9639();
                                esp479 = esp491 + 4;
                                if (cf316) {
                                    addr_10020d29_816:
                                    ++ebp33;
                                    esp437 = esp479 - 4;
                                    *reinterpret_cast<void***>(esp437) = eax311;
                                    ecx434 = ecx307 + 1;
                                    goto addr_10020d2c_738;
                                } else {
                                    eax476 = eax311 + 1;
                                    ++ebp33;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (!ebp33) {
                                        addr_10020cfe_800:
                                        esp492 = esp479 - 4;
                                        *reinterpret_cast<void***>(esp492) = esi293;
                                        *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                                        ecx434 = ecx307 - 1;
                                        eax443 = eax476 + 1 + 1;
                                        edx291 = *reinterpret_cast<void***>(esp492);
                                        tmp8_493 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi293)) + reinterpret_cast<unsigned char>(ecx434));
                                        cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_493) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi293)));
                                        *reinterpret_cast<void***>(esi293) = tmp8_493;
                                        esp437 = esp492 + 4 - 2;
                                        *reinterpret_cast<void***>(esp437) = es22;
                                        __asm__("aas ");
                                        ++edi32;
                                        zf494 = reinterpret_cast<uint1_t>(edi32 == 0);
                                        below_or_equal475 = reinterpret_cast<uint1_t>(cf442 | zf494);
                                        if (zf494) {
                                            addr_10020d4e_809:
                                            *reinterpret_cast<void**>(&edx291) = reinterpret_cast<void*>(5);
                                            __asm__("aas ");
                                            ++ebp33;
                                            below_or_equal475 = reinterpret_cast<uint1_t>(cf442 | reinterpret_cast<uint1_t>(ebp33 == 0));
                                            __asm__("outsb ");
                                            if (!cf442) 
                                                goto addr_10020dca_818; else 
                                                goto addr_10020d55_819;
                                        } else {
                                            esp437 = esp437 - 4;
                                            *reinterpret_cast<void***>(esp437) = reinterpret_cast<void**>(97);
                                            __asm__("arpl [ebp+0x6e], sp");
                                            if (zf494) {
                                                addr_10020d55_819:
                                                if (cf442) {
                                                    addr_10020dbc_796:
                                                    __asm__("insd ");
                                                    __asm__("outsd ");
                                                    if (below_or_equal475) {
                                                        addr_10020e26_821:
                                                        edi495 = edi32 + 1;
                                                        eax443 = eax443 + 1 + 1 + 1;
                                                        edx291 = *reinterpret_cast<void***>(esp437);
                                                        *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                                                        edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi495) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi495)));
                                                        cf442 = 0;
                                                        zf459 = edi32 == 0;
                                                        esp437 = esp437 + 4 - 4;
                                                        *reinterpret_cast<void***>(esp437) = ecx434;
                                                        goto addr_10020e30_747;
                                                    } else {
                                                        ++edx291;
                                                        zf473 = edx291 == 0;
                                                        esp437 = esp437 - 4;
                                                        *reinterpret_cast<void***>(esp437) = reinterpret_cast<void**>(0x6f697661);
                                                        if (cf442) {
                                                            addr_10020e0a_794:
                                                            __asm__("outsb ");
                                                            if (zf473) {
                                                                addr_10020e4f_823:
                                                                ++eax443;
                                                                goto addr_10020e50_741;
                                                            } else {
                                                                ++esp437;
                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                                goto addr_10020e12_825;
                                                            }
                                                        } else {
                                                            addr_10020dca_818:
                                                            ++ebp33;
                                                            zf496 = ebp33 == 0;
                                                            __asm__("insb ");
                                                            __asm__("insd ");
                                                            goto addr_10020dcd_826;
                                                        }
                                                    }
                                                } else {
                                                    esp437 = esp437 - 4;
                                                    *reinterpret_cast<void***>(esp437) = esi293;
                                                    esi293 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x69)) * 0x40656c62);
                                                    cf442 = __intrinsic();
                                                    goto addr_10020d5d_828;
                                                }
                                            } else {
                                                ++ebp33;
                                                __asm__("insb ");
                                                __asm__("insd ");
                                                __asm__("outsb ");
                                                if (!ebp33) {
                                                    addr_10020d5d_828:
                                                    ++ebp33;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    if (!ebp33) {
                                                        addr_10020da7_765:
                                                        ++esp437;
                                                        zf445 = reinterpret_cast<uint1_t>(esp437 == 0);
                                                        goto addr_10020da8_767;
                                                    } else {
                                                        esi497 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                        esp498 = esp437 + 1 - 4;
                                                        *reinterpret_cast<void***>(esp498) = ebp33;
                                                        ++ebp33;
                                                        edi32 = *reinterpret_cast<void***>(esp498);
                                                        esp499 = esp498 + 4;
                                                        esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi497) - 1);
                                                        eax443 = eax443 + 1 + 1 - 1 - 1 - 1 - 1 + 1;
                                                        edx500 = *reinterpret_cast<void***>(esp499);
                                                        tmp8_501 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                                        cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_501) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                                                        *reinterpret_cast<void***>(eax443) = tmp8_501;
                                                        *reinterpret_cast<signed char*>(&edx500 + 1) = 3;
                                                        __asm__("aas ");
                                                        ecx434 = ecx434 + 1 + 1;
                                                        edx291 = edx500 + 1;
                                                        zf496 = edx291 == 0;
                                                        esp437 = esp499 + 4 - 4;
                                                        *reinterpret_cast<void***>(esp437) = reinterpret_cast<void**>(0x6f697661);
                                                        if (cf442) {
                                                            addr_10020dcd_826:
                                                            __asm__("outsb ");
                                                            if (zf496) {
                                                                addr_10020e12_825:
                                                                goto addr_10020e13_768;
                                                            } else {
                                                                ++esp437;
                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                                cf442 = __intrinsic();
                                                                goto addr_10020dd5_740;
                                                            }
                                                        } else {
                                                            ++ebp33;
                                                            zf445 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                            __asm__("insb ");
                                                            __asm__("insd ");
                                                            goto addr_10020d90_739;
                                                        }
                                                    }
                                                } else {
                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                                    eax311 = eax443 + 1 + 1;
                                                    esp479 = esp437 + 1 - 4;
                                                    *reinterpret_cast<void***>(esp479) = ebp33;
                                                    ecx307 = ecx434 + 1;
                                                    goto addr_10020d29_816;
                                                }
                                            }
                                        }
                                    } else {
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        eax311 = eax476 + 1 + 1;
                                        esp429 = esp479 + 1 - 4;
                                        *reinterpret_cast<void***>(esp429) = ebp33;
                                        goto addr_10020cc9_734;
                                    }
                                }
                            } else {
                                __asm__("outsb ");
                                if (zf490) {
                                    addr_10020c9d_732:
                                    ++ebp33;
                                    edx502 = edx291 - 1;
                                    esp503 = esp312 - 4;
                                    *reinterpret_cast<void***>(esp503) = eax311;
                                    esp504 = esp503 - 4;
                                    *reinterpret_cast<void***>(esp504) = eax311;
                                    esp505 = esp504 - 4;
                                    *reinterpret_cast<void***>(esp505) = esi293;
                                    *reinterpret_cast<void***>(edx502) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx502)) ^ reinterpret_cast<unsigned char>(esi293));
                                    ecx307 = ecx307 + 1 + 1 - 1;
                                    eax506 = eax311 + 1 + 1;
                                    edx291 = *reinterpret_cast<void***>(esp505);
                                    esp312 = esp505 + 4;
                                    tmp8_507 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax506)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax506)));
                                    cf316 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_507) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax506)));
                                    *reinterpret_cast<void***>(eax506) = tmp8_507;
                                    goto addr_10020cac_815;
                                } else {
                                    edi32 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x656c4540);
                                    zf379 = __undefined();
                                    goto addr_10020c4d_612;
                                }
                            }
                        }
                    } else {
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                        esp508 = esp312 + 1 - 4;
                        *reinterpret_cast<void***>(esp508) = ebp33;
                        ++ecx307;
                        esp509 = esp508 + 4;
                        eax311 = *reinterpret_cast<void***>(esp509);
                        esp510 = esp509 + 4;
                        edx291 = *reinterpret_cast<void***>(esp510);
                        esp312 = esp510 + 4;
                        *reinterpret_cast<unsigned char*>(ebx16 + 11) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 11) + 0xff);
                        goto addr_10020bfd_611;
                    }
                }
            }
        }
    }
    if (!zf457) {
        addr_10020f2e_839:
        goto addr_10020f2f_840;
    } else {
        __asm__("outsd ");
        esp437 = esp437 + 1 - 1;
        __asm__("popad ");
        if (reinterpret_cast<signed char>(esp437) >= reinterpret_cast<signed char>(0)) {
            addr_10020f2f_840:
            edx291 = *reinterpret_cast<void***>(esp437);
            esp437 = esp437 + 4;
            tmp8_511 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
            cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_511) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
            *reinterpret_cast<void***>(eax443) = tmp8_511;
            *reinterpret_cast<void**>(&eax443) = g6e4f3f0a;
            goto addr_10020f36_842;
        } else {
            if (esp437) {
                addr_10020f36_842:
                __asm__("outsd ");
                if (!cf442) {
                    addr_10020faf_844:
                    ++ecx434;
                    ebp33 = ebp33 - 1 + 1;
                    eax512 = *reinterpret_cast<void***>(esp437);
                    esp437 = esp437 + 4 - 4;
                    *reinterpret_cast<void***>(esp437) = eax512;
                    goto addr_10020fb4_845;
                } else {
                    eax443 = eax443 - 1 + 1;
                    ++ebp33;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp33) {
                        addr_10020f86_847:
                        eax443 = eax443 + 1 + 1;
                        edx291 = *reinterpret_cast<void***>(esp437);
                        *reinterpret_cast<void***>(eax443) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                        ecx434 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx434) & reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                        zf513 = reinterpret_cast<uint1_t>(ecx434 == 0);
                        of514 = 0;
                        below_or_equal515 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf513));
                        __asm__("aas ");
                        esp437 = esp437 + 4 - 4;
                        *reinterpret_cast<void***>(esp437) = ebp33;
                        if (0) {
                            addr_10020ff6_848:
                            __asm__("outsd ");
                            if (below_or_equal515) {
                                addr_1002105e_849:
                                __asm__("insb ");
                                ++eax443;
                                ++ebp33;
                                zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                if (zf516) {
                                    addr_100210a9_850:
                                    __asm__("outsb ");
                                    if (zf516) {
                                        addr_100210ed_851:
                                        if (zf516) {
                                            addr_10021130_852:
                                            __asm__("insb ");
                                            *reinterpret_cast<void***>(esp437 - 4) = ebp33;
                                            esp437 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ecx434 + 68) * 0x72747365);
                                            cf442 = __intrinsic();
                                            __asm__("outsd ");
                                            if (!__undefined()) {
                                                addr_1002118a_853:
                                                goto addr_1002118e_854;
                                            } else {
                                                esi293 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
                                                cf442 = __intrinsic();
                                                ++ebp33;
                                                zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                __asm__("insb ");
                                                __asm__("insd ");
                                            }
                                        } else {
                                            esp517 = esp437 + 1;
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            cf518 = __intrinsic();
                                            goto addr_100210f6_857;
                                        }
                                    } else {
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        esp519 = esp437 + 1 - 4;
                                        *reinterpret_cast<void***>(esp519) = ebp33;
                                        ++ebp33;
                                        esp520 = esp519 - 4;
                                        *reinterpret_cast<void***>(esp520) = ebp33;
                                        edi32 = *reinterpret_cast<void***>(esp520) + 1;
                                        esp521 = esp520 + 4 - 4;
                                        *reinterpret_cast<void***>(esp521) = ebp33;
                                        eax522 = eax443 + 1 + 1 + 1 + 1;
                                        esp523 = esp521 + 1 - 4;
                                        *reinterpret_cast<void***>(esp523) = eax522;
                                        esp524 = esp523 - 4;
                                        *reinterpret_cast<void***>(esp524) = eax522;
                                        ecx434 = ecx434 + 1 + 1 - 1 + 1 + 1;
                                        esp437 = esp524 + 4;
                                        eax443 = *reinterpret_cast<void***>(esp524) + 1;
                                        goto addr_100210cb_859;
                                    }
                                } else {
                                    addr_10021069_860:
                                    esp525 = esp437 + 1;
                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                    cf518 = __intrinsic();
                                    goto addr_10021070_861;
                                }
                            } else {
                                esp437 = esp437 - 4;
                                *reinterpret_cast<void***>(esp437) = esp437;
                                goto addr_10020ffa_863;
                            }
                        } else {
                            __asm__("popad ");
                            if (zf513) {
                                addr_10020ffa_863:
                                __asm__("outsd ");
                                __asm__("outsd ");
                                __asm__("insb ");
                                if (zf513) {
                                    goto addr_10021069_860;
                                }
                            } else {
                                esp437 = esp437 - 4;
                                *reinterpret_cast<void***>(esp437) = esp437;
                                __asm__("outsd ");
                                __asm__("outsd ");
                                __asm__("insb ");
                                goto addr_10020f99_867;
                            }
                        }
                    } else {
                        addr_10020f46_754:
                        ++esp437;
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                        ++ecx434;
                        ebp33 = ebp33 - 1 + 1;
                        goto addr_10020f53_785;
                    }
                }
            } else {
                ++eax443;
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_10020f0b_869:
                    ebp33 = ebp33 - 1 + 1;
                    __asm__("aas ");
                    ecx434 = ecx434 + 1 + 1;
                    esp526 = esp437 - 4;
                    *reinterpret_cast<void***>(esp526) = ebp33;
                    if (!ecx434) {
                        addr_10020f79_870:
                        ebp33 = ebp33 - 1 + 1;
                        eax443 = *reinterpret_cast<void***>(esp526);
                        esp527 = esp526 + 4 - 4;
                        *reinterpret_cast<void***>(esp527) = eax443;
                        ecx434 = ecx434 + 1 + 1;
                        esp437 = esp527 - 4;
                        *reinterpret_cast<void***>(esp437) = esi293;
                        *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                        goto addr_10020f86_847;
                    } else {
                        esp528 = esp526 - 4;
                        *reinterpret_cast<void***>(esp528) = ebx16;
                        edx291 = *reinterpret_cast<void***>(esp528);
                        ++ebp33;
                        eax443 = eax443 + 1 + 1 + 1 + 1 - 1 - 1;
                        esp529 = esp528 + 4 - 4;
                        *reinterpret_cast<void***>(esp529) = eax443;
                        ecx434 = ecx434 - 1 + 1;
                        zf513 = reinterpret_cast<uint1_t>(ecx434 == 0);
                        of514 = __intrinsic();
                        esp530 = esp529 - 4;
                        *reinterpret_cast<void***>(esp530) = esi293;
                        esp437 = esp530 - 4;
                        *reinterpret_cast<void***>(esp437) = ebx16;
                        if (!zf513) {
                            addr_10020f99_867:
                            if (zf513) {
                                addr_10021004_872:
                                __asm__("outsb ");
                                if (zf513) {
                                    addr_10021049_873:
                                    edx291 = *reinterpret_cast<void***>(esp437);
                                    esp437 = esp437 + 4;
                                    *reinterpret_cast<void***>(eax443) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                    tmp8_531 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) + 6);
                                    cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_531) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                    *reinterpret_cast<void**>(&eax443) = tmp8_531;
                                    __asm__("aas ");
                                    ++edi32;
                                    if (!edi32) {
                                        addr_10021094_874:
                                        ++ecx434;
                                        ++ebp33;
                                        zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                        sf532 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                                        of533 = __intrinsic();
                                        __asm__("insb ");
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        if (zf516) 
                                            goto addr_100210ed_851; else 
                                            goto addr_1002109d_875;
                                    } else {
                                        __asm__("arpl [ebx+0x65], sp");
                                        if (!cf442) {
                                            addr_100210cb_859:
                                            edx291 = *reinterpret_cast<void***>(esp437);
                                            esp534 = esp437 + 4;
                                            tmp8_535 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                            cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_535) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                                            *reinterpret_cast<void***>(eax443) = tmp8_535;
                                            __asm__("das ");
                                            es22 = *reinterpret_cast<void***>(esp534);
                                            esp437 = esp534 + 2;
                                            __asm__("aas ");
                                            ++edi32;
                                            zf516 = reinterpret_cast<uint1_t>(edi32 == 0);
                                            sf532 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                            of533 = __intrinsic();
                                            below_or_equal536 = reinterpret_cast<uint1_t>(cf442 | zf516);
                                            if (zf516) {
                                                addr_1002111a_877:
                                                if (zf516) {
                                                    addr_1002116d_878:
                                                    goto addr_10021171_879;
                                                } else {
                                                    if (cf442) 
                                                        goto addr_1002118e_854;
                                                    if (below_or_equal536) 
                                                        goto addr_1002118a_853;
                                                    if (cf442) 
                                                        goto addr_10021165_883; else 
                                                        goto addr_10021125_884;
                                                }
                                            } else {
                                                __asm__("insb ");
                                                __asm__("insd ");
                                                __asm__("outsb ");
                                                if (zf516) {
                                                    addr_1002112c_886:
                                                    goto addr_1002112d_887;
                                                } else {
                                                    if (cf442) {
                                                        goto addr_1002114e_890;
                                                    }
                                                    if (!below_or_equal536) 
                                                        goto addr_100210e0_892;
                                                }
                                            }
                                        } else {
                                            esp437 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(edx291 + 0x6c) * 0x706d4965);
                                            goto addr_1002105e_849;
                                        }
                                    }
                                } else {
                                    esp525 = esp437 + 1;
                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                    goto addr_1002100f_895;
                                }
                            } else {
                                if (of514) {
                                    addr_10020fdd_782:
                                    ++ecx434;
                                    ebp33 = ebp33 - 1 + 1;
                                    eax443 = *reinterpret_cast<void***>(esp437);
                                    esp437 = esp437 + 4;
                                    goto addr_10020fe5_897;
                                } else {
                                    ++ebp33;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (!ebp33) {
                                        addr_10020fe5_897:
                                        esp537 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp537) = eax443;
                                        ++ecx434;
                                        esp538 = esp537 - 4;
                                        *reinterpret_cast<void***>(esp538) = esi293;
                                        *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                                        --ebx16;
                                        eax539 = eax443 + 1 + 1;
                                        edx291 = *reinterpret_cast<void***>(esp538);
                                        *reinterpret_cast<void***>(eax539) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax539)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax539)));
                                        tmp32_540 = edi32;
                                        edi32 = eax539;
                                        eax443 = tmp32_540;
                                        *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) | 63);
                                        zf513 = 0;
                                        below_or_equal515 = 0;
                                        esp437 = esp538 + 4 - 4;
                                        *reinterpret_cast<void***>(esp437) = edx291;
                                        __asm__("insd ");
                                        goto addr_10020ff6_848;
                                    } else {
                                        ++esp437;
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        goto addr_10020faf_844;
                                    }
                                }
                            }
                        } else {
                            addr_10020f27_743:
                            __asm__("popa ");
                            __asm__("arpl [ebp+0x40], sp");
                            *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 64));
                            goto addr_10020f2e_839;
                        }
                    }
                } else {
                    ++esp437;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                    goto addr_10020ecd_775;
                }
            }
        }
    }
    __asm__("outsb ");
    if (zf516) {
        addr_1002118e_854:
        esp541 = esp437 - 4;
        *reinterpret_cast<void***>(esp541) = ebp33;
        ++ecx434;
        ++ebp33;
        eax443 = *reinterpret_cast<void***>(esp541);
        esp542 = esp541 + 4 - 4;
        *reinterpret_cast<void***>(esp542) = eax443;
        ++edx291;
        esp543 = esp542 - 4;
        *reinterpret_cast<void***>(esp543) = ebp33;
        esp437 = esp543 - 4;
        *reinterpret_cast<void***>(esp437) = eax443;
        if (cf442) {
            addr_10021208_902:
            --eax443;
            __asm__("popad ");
            __asm__("outsb ");
            __asm__("insb ");
            goto addr_1002120e_903;
        } else {
            if (__intrinsic()) {
                addr_10021200_905:
                ++eax443;
                *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 64));
                edx291 = *reinterpret_cast<void***>(esp437);
                esp437 = esp437 + 4;
                *reinterpret_cast<void**>(&eax443 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx291 + 1)));
                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                goto addr_10021208_902;
            } else {
                if (cf442) {
                    addr_10021211_907:
                    goto addr_10021213_908;
                } else {
                    if (reinterpret_cast<signed char>(edx291) >= reinterpret_cast<signed char>(0)) {
                        addr_100211e8_910:
                        esp544 = esp437 - 4;
                        *reinterpret_cast<void***>(esp544) = ebp33;
                        ++ecx434;
                        ++ebp33;
                        eax443 = *reinterpret_cast<void***>(esp544);
                        esp545 = esp544 + 4 - 4;
                        *reinterpret_cast<void***>(esp545) = eax443;
                        ++edx291;
                        zf546 = edx291 == 0;
                        of547 = __intrinsic();
                        esp548 = esp545 - 4;
                        *reinterpret_cast<void***>(esp548) = ebp33;
                        esp437 = esp548 - 4;
                        *reinterpret_cast<void***>(esp437) = eax443;
                        if (cf442) {
                            addr_10021266_911:
                            goto addr_10021268_912;
                        } else {
                            if (of547) {
                                addr_1002125e_914:
                                __asm__("outsb ");
                                if (zf546) {
                                    addr_100212a3_915:
                                    if (of547) {
                                        addr_100212b2_916:
                                        if (!cf442) 
                                            goto addr_10021327_917;
                                    } else {
                                        __asm__("aas ");
                                        esp437 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp437) = edx291;
                                        __asm__("insb ");
                                        __asm__("popad ");
                                        if (!cf442) {
                                            addr_10021313_919:
                                            esp437 = esp437 - 2;
                                            *reinterpret_cast<void***>(esp437) = es22;
                                            __asm__("aas ");
                                            ++edi32;
                                            sf549 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                            if (!edi32) {
                                                goto addr_1002135f_921;
                                            }
                                        } else {
                                            ++eax443;
                                            ++ebx16;
                                            __asm__("insb ");
                                            __asm__("popad ");
                                            goto addr_100212b2_916;
                                        }
                                    }
                                } else {
                                    ++esp437;
                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                    goto addr_10021266_911;
                                }
                            } else {
                                if (cf442) {
                                    addr_1002126f_925:
                                    esp550 = esp437 - 4;
                                    *reinterpret_cast<void***>(esp550) = eax443;
                                    ++ecx434;
                                    esp551 = esp550 - 4;
                                    *reinterpret_cast<void***>(esp551) = esi293;
                                    *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                                    eax443 = *reinterpret_cast<void***>(esp551);
                                    esp552 = esp551 + 4;
                                    edx291 = *reinterpret_cast<void***>(esp552);
                                    esp437 = esp552 + 4;
                                    tmp8_553 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                    cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_553) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                                    *reinterpret_cast<void***>(eax443) = tmp8_553;
                                    ebp33 = reinterpret_cast<void**>(0x64413f03);
                                    goto addr_1002127f_926;
                                } else {
                                    if (reinterpret_cast<signed char>(edx291) >= reinterpret_cast<signed char>(0)) {
                                        addr_10021246_928:
                                        *reinterpret_cast<void***>(esp437 - 4) = ebp33;
                                        cf442 = __intrinsic();
                                        esp437 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ecx434 + 70) * 0x7375636f + 1);
                                        __asm__("insb ");
                                        __asm__("a16 popad ");
                                        if (!esp437) {
                                            addr_100212bf_929:
                                            esp554 = esp437 - 4;
                                            *reinterpret_cast<void***>(esp554) = ebp33;
                                            ++ecx434;
                                            ++ebp33;
                                            eax443 = *reinterpret_cast<void***>(esp554);
                                            esp555 = esp554 + 4;
                                            edx291 = *reinterpret_cast<void***>(esp555);
                                            esp556 = esp555 + 4;
                                            tmp8_557 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax443 + 0x6e453f05) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                                            cf442 = reinterpret_cast<uint1_t>(tmp8_557 < *reinterpret_cast<unsigned char*>(eax443 + 0x6e453f05));
                                            *reinterpret_cast<unsigned char*>(eax443 + 0x6e453f05) = tmp8_557;
                                            sf558 = *reinterpret_cast<signed char*>(eax443 + 0x6e453f05) < reinterpret_cast<signed char>(0);
                                            of559 = __intrinsic();
                                            if (*reinterpret_cast<unsigned char*>(eax443 + 0x6e453f05)) {
                                                addr_10021342_930:
                                                esp560 = esp556 - 4;
                                                *reinterpret_cast<void***>(esp560) = eax443;
                                                ++edx291;
                                                sf558 = reinterpret_cast<signed char>(edx291) < reinterpret_cast<signed char>(0);
                                                of559 = __intrinsic();
                                                esp561 = esp560 - 4;
                                                *reinterpret_cast<void***>(esp561) = ebp33;
                                                esp437 = esp561 - 4;
                                                *reinterpret_cast<void***>(esp437) = eax443;
                                                if (cf442) {
                                                    addr_100213b7_931:
                                                    __asm__("salc ");
                                                    es22 = *reinterpret_cast<void***>(esp437);
                                                    esp437 = esp437 + 2;
                                                    __asm__("aas ");
                                                    ++edi32;
                                                    if (!edi32) {
                                                        addr_1002140d_932:
                                                        eax443 = eax443 + 1 + 1;
                                                        esp437 = esp437 - 4;
                                                        *reinterpret_cast<void***>(esp437) = ebp33;
                                                        goto addr_10021410_933;
                                                    } else {
                                                        __asm__("popad ");
                                                        goto addr_100213c0_935;
                                                    }
                                                } else {
                                                    addr_10021348_936:
                                                    if (of559) 
                                                        goto addr_100213af_937; else 
                                                        goto addr_1002134a_938;
                                                }
                                            } else {
                                                esp437 = esp556 - 4;
                                                *reinterpret_cast<void***>(esp437) = eax443;
                                                if (cf442) {
                                                    goto addr_10021348_936;
                                                }
                                                if (of559) 
                                                    goto addr_1002133f_942; else 
                                                    goto addr_100212da_943;
                                            }
                                        } else {
                                            ++eax443;
                                            ++ebp33;
                                            zf546 = ebp33 == 0;
                                            of547 = __intrinsic();
                                            __asm__("insb ");
                                            __asm__("insd ");
                                            goto addr_1002125e_914;
                                        }
                                    } else {
                                        __asm__("outsb ");
                                        __asm__("outsw ");
                                        goto addr_10021200_905;
                                    }
                                }
                            }
                        }
                    } else {
                        __asm__("outsb ");
                        __asm__("outsw ");
                        ++eax443;
                        *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 72));
                        esp562 = esp437 - 4;
                        *reinterpret_cast<void***>(esp562) = eax443;
                        ++ecx434;
                        esp563 = esp562 - 4;
                        *reinterpret_cast<void***>(esp563) = esi293;
                        esp437 = esp563 - 4;
                        *reinterpret_cast<void***>(esp437) = esi293;
                        __asm__("popad ");
                        __asm__("insb ");
                        if (ecx434) {
                            addr_10021213_908:
                            --esp437;
                            esi293 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
                            ++eax443;
                            ++ebp33;
                            zf564 = ebp33 == 0;
                            __asm__("insb ");
                            __asm__("insd ");
                            goto addr_10021223_947;
                        } else {
                            eax565 = eax443 + 1;
                            *reinterpret_cast<unsigned char*>(&eax565) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax565) ^ *reinterpret_cast<unsigned char*>(eax565 + 49));
                            eax566 = eax565 + 1;
                            edx291 = *reinterpret_cast<void***>(esp437);
                            *reinterpret_cast<void***>(eax566) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax566)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax566)));
                            *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                            eax443 = eax566 - 1;
                            __asm__("popad ");
                            __asm__("outsb ");
                            __asm__("insb ");
                            *reinterpret_cast<void***>(esp437 + 4 - 4) = ebp33;
                            esp437 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ecx434 + 80) * 0x65706f72);
                            cf442 = __intrinsic();
                            sf532 = __undefined();
                            zf516 = __undefined();
                            goto addr_100211c1_949;
                        }
                    }
                }
            }
        }
    } else {
        addr_1002114e_890:
        ++esp437;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
        goto addr_10021153_950;
    }
    --ecx434;
    __asm__("outsb ");
    __asm__("outsw ");
    ++edx291;
    __asm__("popad ");
    if (!cf442) 
        goto addr_10021321_952;
    ++esp437;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
    goto addr_100212bf_929;
    if (!sf549) {
        addr_10021360_955:
        ++ebx16;
        zf567 = ebx16 == 0;
        __asm__("outsd ");
        if (!zf567) {
            addr_100213d2_956:
            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
            goto addr_100213d4_957;
        } else {
            if (zf567) {
                addr_100213a6_959:
                ++esp437;
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                goto addr_100213af_937;
            } else {
                ++ebx16;
                goto addr_10021367_961;
            }
        }
    } else {
        __asm__("insb ");
        __asm__("popad ");
        if (!cf442) {
            addr_10021394_963:
            if (sf549) {
                addr_100213d8_964:
                eax443 = eax443 + 1 + 1;
                esp437 = esp437 - 4;
                *reinterpret_cast<void***>(esp437) = ebp33;
                ++ebp33;
                goto addr_100213de_965;
            } else {
                addr_10021398_966:
                ++ebx16;
                goto addr_10021399_967;
            }
        } else {
            addr_10021321_952:
            --ecx434;
            __asm__("outsb ");
            if (reinterpret_cast<signed char>(ecx434) < reinterpret_cast<signed char>(0)) {
                addr_10021367_961:
                __asm__("insb ");
                __asm__("popad ");
                if (!cf442) {
                    addr_100213de_965:
                    esp568 = esp437 - 4;
                    *reinterpret_cast<void***>(esp568) = eax443;
                    ++edi32;
                    eax443 = *reinterpret_cast<void***>(esp568);
                    esp569 = esp568 + 4;
                    edx291 = *reinterpret_cast<void***>(esp569);
                    esp437 = esp569 + 4;
                    *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx291 + 1)));
                    *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                    cf442 = 0;
                    --ecx434;
                    if (1) {
                        addr_10021440_968:
                        __asm__("outsb ");
                        __asm__("outsw ");
                        ++edx291;
                        __asm__("popad ");
                        if (!cf442) 
                            goto addr_100214ac_969;
                    } else {
                        __asm__("popad ");
                        __asm__("insb ");
                        esp437 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax443 + reinterpret_cast<unsigned char>(edx291) * 2) + 0x72) * 0x7265706f);
                        cf442 = __intrinsic();
                        zf570 = __undefined();
                        if (zf570 || (++eax443, ++ebx16, zf570 = ebx16 == 0, !cf442)) {
                            goto addr_10021471_972;
                        } else {
                            --ecx434;
                            __asm__("outsb ");
                            __asm__("outsw ");
                            ++edx291;
                            __asm__("popad ");
                            if (!cf442) 
                                goto addr_10021469_974;
                            ++eax443;
                            ++esp437;
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                            cf442 = __intrinsic();
                            goto addr_1002140a_976;
                        }
                    }
                } else {
                    addr_1002136b_977:
                    --ecx434;
                    __asm__("outsb ");
                    __asm__("outsw ");
                    ++edx291;
                    __asm__("popad ");
                    if (!cf442) 
                        goto addr_100213d8_964; else 
                        goto addr_10021373_978;
                }
            } else {
                addr_10021327_917:
                ++ebx16;
                __asm__("insb ");
                __asm__("popad ");
                if (!cf442) {
                    addr_1002139f_979:
                    __asm__("outsw ");
                    ++edx291;
                    __asm__("popad ");
                    if (!cf442) {
                        addr_1002140a_976:
                        goto addr_1002140d_932;
                    } else {
                        goto addr_100213a6_959;
                    }
                } else {
                    --ecx434;
                    __asm__("outsb ");
                    __asm__("outsw ");
                    ++edx291;
                    __asm__("popad ");
                    if (!cf442) {
                        addr_10021399_967:
                        __asm__("insb ");
                        __asm__("popad ");
                        if (!cf442) {
                            addr_10021410_933:
                            ++ebp33;
                            edi32 = *reinterpret_cast<void***>(esp437);
                            --esi293;
                            esp571 = esp437 + 4 - 4;
                            *reinterpret_cast<void***>(esp571) = eax443;
                            edx291 = edx291 + 1 + 1;
                            esp572 = esp571 - 4;
                            *reinterpret_cast<void***>(esp572) = ebp33;
                            esp437 = esp572 - 4;
                            *reinterpret_cast<void***>(esp437) = eax443;
                            if (cf442) {
                                addr_10021489_982:
                                eax443 = eax443 + 1 + 1;
                                esp437 = esp437 - 4;
                                *reinterpret_cast<void***>(esp437) = ebp33;
                                ++ebp33;
                                goto addr_10021492_983;
                            } else {
                                if (__intrinsic()) {
                                    addr_10021481_985:
                                    __asm__("popad ");
                                    if (!cf442) {
                                        addr_100214e9_986:
                                        if (!cf442) {
                                            addr_10021550_987:
                                            esp437 = esp437 - 4;
                                            *reinterpret_cast<void***>(esp437) = ebp33;
                                            ++ebp33;
                                            goto addr_10021556_988;
                                        } else {
                                            ++esp437;
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            goto addr_100214ef_990;
                                        }
                                    } else {
                                        addr_10021484_991:
                                        ++eax443;
                                        ++esp437;
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        goto addr_10021487_992;
                                    }
                                } else {
                                    if (cf442) {
                                        addr_10021492_983:
                                        esp437 = esp437 - 4;
                                        *reinterpret_cast<void***>(esp437) = eax443;
                                        ++ecx434;
                                        goto addr_10021494_994;
                                    } else {
                                        if (reinterpret_cast<signed char>(edx291) >= reinterpret_cast<signed char>(0)) {
                                            addr_10021469_974:
                                            tmp8_573 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)) + reinterpret_cast<unsigned char>(ecx434));
                                            cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_573) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                                            *reinterpret_cast<void**>(&ecx434 + 1) = tmp8_573;
                                            es22 = *reinterpret_cast<void***>(esp437);
                                            esp437 = esp437 + 2;
                                            __asm__("aas ");
                                            ++edi32;
                                            zf570 = edi32 == 0;
                                            if (zf570) {
                                                goto addr_100214bf_997;
                                            }
                                        } else {
                                            __asm__("outsb ");
                                            __asm__("outsw ");
                                            ++eax443;
                                            *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 64));
                                            edx291 = *reinterpret_cast<void***>(esp437);
                                            esp437 = esp437 + 4;
                                            *reinterpret_cast<void***>(eax443) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                            *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                            cf442 = 0;
                                            --ecx434;
                                            if (1) {
                                                goto addr_10021484_991;
                                            }
                                            if (ecx434) 
                                                goto addr_10021494_994; else 
                                                goto addr_10021432_1001;
                                        }
                                    }
                                }
                            }
                        } else {
                            --ecx434;
                            __asm__("outsb ");
                            goto addr_1002139f_979;
                        }
                    } else {
                        ++esp437;
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                        cf442 = __intrinsic();
                        eax443 = eax443 + 1 + 1 + 1;
                        goto addr_1002133f_942;
                    }
                }
            }
        }
    }
    esi574 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
    cf442 = __intrinsic();
    eax443 = eax443 + 1 + 1 + 1;
    esp575 = esp437 + 1 - 4;
    *reinterpret_cast<void***>(esp575) = ebp33;
    ++edx291;
    ++ebp33;
    edi32 = *reinterpret_cast<void***>(esp575);
    esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi574) - 1);
    esp576 = esp575 + 4 - 4;
    *reinterpret_cast<void***>(esp576) = eax443;
    esp577 = esp576 - 4;
    *reinterpret_cast<void***>(esp577) = ebp33;
    ecx434 = ecx434 + 1 - 1;
    ++ebx16;
    __asm__("insb ");
    __asm__("popad ");
    if (!cf442) {
        addr_100214d3_1005:
        esp437 = esp577 - 4;
        *reinterpret_cast<void***>(esp437) = reinterpret_cast<void**>(0x40646c69);
        ebx16 = ebx16 + 1 + 1;
        __asm__("insb ");
        __asm__("popad ");
        goto addr_100214e1_1006;
    } else {
        --ecx434;
        __asm__("outsb ");
        __asm__("outsw ");
        ++eax443;
        *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 64));
        edx291 = *reinterpret_cast<void***>(esp577);
        esp437 = esp577 + 4;
        goto addr_10021469_974;
    }
    addr_10021471_972:
    __asm__("outsd ");
    if (!zf570) {
        addr_100214e1_1006:
        if (!cf442) {
            addr_10021556_988:
            eax443 = *reinterpret_cast<void***>(esp437);
            esp578 = esp437 + 4;
            edx579 = *reinterpret_cast<void***>(esp578);
            esp580 = esp578 + 4;
            *reinterpret_cast<void**>(&edx579) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
            tmp32_581 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
            cf582 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_581) < reinterpret_cast<unsigned char>(edi32));
            edi32 = tmp32_581;
            ++ecx434;
            if (!cf582) {
                addr_100215d3_1008:
                goto addr_100215d7_1009;
            } else {
                if (cf582) {
                    addr_100215d7_1009:
                    ++eax443;
                    goto addr_100215d8_1011;
                } else {
                    esp583 = esp580 - 4;
                    *reinterpret_cast<void***>(esp583) = eax443;
                    --ecx434;
                    edx579 = *reinterpret_cast<void***>(esp583);
                    esp580 = esp583 + 4;
                    if (cf582) {
                        addr_100215d8_1011:
                        ++eax443;
                        esp584 = esp580 - 4;
                        *reinterpret_cast<void***>(esp584) = ecx434;
                        ++ecx434;
                        ++ebp33;
                        esp585 = esp584 - 4;
                        *reinterpret_cast<void***>(esp585) = eax443;
                        edx579 = edx579 - 1 + 1;
                        goto addr_100215df_1013;
                    } else {
                        esp585 = esp580 - 4;
                        *reinterpret_cast<void***>(esp585) = edx579;
                        *reinterpret_cast<int16_t*>(&eax443) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax443) + 1);
                        goto addr_1002156c_1015;
                    }
                }
            }
        } else {
            --ecx434;
            __asm__("outsb ");
            __asm__("outsw ");
            ++edx291;
            __asm__("popad ");
            goto addr_100214e9_986;
        }
    } else {
        ++eax443;
        ++ebx16;
        __asm__("insb ");
        __asm__("popad ");
        if (!cf442) {
            addr_100214ef_990:
            goto addr_100214f3_1018;
        } else {
            --ecx434;
            __asm__("outsb ");
            __asm__("outsw ");
            ++edx291;
            goto addr_10021481_985;
        }
    }
    addr_10021373_978:
    ++esp437;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
    addr_1002137b_1020:
    esp586 = esp437 - 4;
    *reinterpret_cast<void***>(esp586) = ebp33;
    ++ebp33;
    --ecx434;
    eax443 = *reinterpret_cast<void***>(esp586);
    esp587 = esp586 + 4;
    edx291 = *reinterpret_cast<void***>(esp587);
    esp437 = esp587 + 4;
    tmp8_588 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
    cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_588) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
    *reinterpret_cast<void***>(eax443) = tmp8_588;
    __asm__("arpl [edi], ax");
    __asm__("aas ");
    ++edi32;
    if (!edi32) {
        addr_100213d4_957:
        goto addr_100213d8_964;
    } else {
        __asm__("insb ");
        __asm__("outsd ");
        --ecx434;
        sf549 = reinterpret_cast<signed char>(ecx434) < reinterpret_cast<signed char>(0);
        __asm__("outsb ");
        goto addr_10021394_963;
    }
    addr_10021494_994:
    esp589 = esp437 - 4;
    *reinterpret_cast<void***>(esp589) = ebp33;
    esp590 = esp589 - 4;
    *reinterpret_cast<void***>(esp590) = ebx16;
    esp591 = esp590 - 4;
    *reinterpret_cast<void***>(esp591) = esp591;
    esi293 = esi293 - 1 - 1;
    ++ebx16;
    ++ebp33;
    esp592 = esp591 + 4;
    edi32 = *reinterpret_cast<void***>(esp592);
    esp593 = esp592 + 4;
    eax443 = *reinterpret_cast<void***>(esp593);
    esp594 = esp593 + 4;
    edx291 = *reinterpret_cast<void***>(esp594);
    esp437 = esp594 + 4;
    *reinterpret_cast<void***>(eax443) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
    __asm__("retf ");
    *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
    cf442 = 0;
    ecx434 = ecx434 - 1 + 1 - 1;
    if (1) {
        addr_100214f3_1018:
        esp595 = esp437 - 4;
        *reinterpret_cast<void***>(esp595) = ebp33;
        ++ecx434;
        ++ebp33;
        esp596 = esp595 + 4;
        eax443 = *reinterpret_cast<void***>(esp596);
        esp597 = esp596 + 4;
        edx579 = *reinterpret_cast<void***>(esp597);
        tmp8_598 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
        cf582 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_598) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
        *reinterpret_cast<void***>(eax443) = tmp8_598;
        below_or_equal599 = reinterpret_cast<uint1_t>(cf582 | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax443) == 0));
        cs600 = reinterpret_cast<void**>(static_cast<uint16_t>(*reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(edi32))));
        esp585 = esp597 + 4 - 4;
        *reinterpret_cast<void***>(esp585) = edx579;
        __asm__("insd ");
        __asm__("outsd ");
        if (below_or_equal599) {
            addr_1002156c_1015:
            ++ebx16;
            __asm__("insb ");
            __asm__("popad ");
            if (!cf582) {
                addr_100215e5_1022:
                esp601 = esp585 - 4;
                *reinterpret_cast<void***>(esp601) = edi32;
                --esi293;
                esp585 = esp601 + 1 + 4;
                goto addr_100215e9_1023;
            } else {
                --ecx434;
                __asm__("outsb ");
                __asm__("outsw ");
                goto addr_10021576_1025;
            }
        } else {
            esp602 = esp585 - 4;
            *reinterpret_cast<void***>(esp602) = reinterpret_cast<void**>(0x40646c69);
            ebx16 = ebx16 + 1 + 1;
            __asm__("insb ");
            __asm__("popad ");
            if (!cf582) {
                addr_10021585_1027:
                esp603 = esp602 - 4;
                *reinterpret_cast<void***>(esp603) = ebp33;
                esp604 = esp603 + 4;
                eax443 = *reinterpret_cast<void***>(esp604);
                esp585 = esp604 + 4 + 4;
                tmp8_605 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x313f3f01) + reinterpret_cast<unsigned char>(ecx434));
                cf582 = reinterpret_cast<uint1_t>(tmp8_605 < *reinterpret_cast<unsigned char*>(ebx16 + 0x313f3f01));
                *reinterpret_cast<unsigned char*>(ebx16 + 0x313f3f01) = tmp8_605;
                ebp33 = ebp33 + 1 + 1;
                zf606 = reinterpret_cast<uint1_t>(ebp33 == 0);
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (zf606) {
                    addr_100215e9_1023:
                    eax607 = eax443 + 1 + 1;
                    esp608 = esp585 + 4 - 4;
                    *reinterpret_cast<void***>(esp608) = eax607;
                    esp609 = esp608 - 4;
                    *reinterpret_cast<void***>(esp609) = ebp33;
                    ++ebx16;
                    eax610 = eax607 - 1 + 1 + 1 - 1 - 1 - 1 - 1 - 1 - 1;
                    esp611 = esp609 + 4 + 4 - 4;
                    *reinterpret_cast<void***>(esp611) = eax610;
                    esp612 = esp611 - 4;
                    *reinterpret_cast<void***>(esp612) = ebp33;
                    eax443 = eax610 - 1;
                    ecx434 = ecx434 + 1 - 1 + 1 - 1;
                    esi293 = esi293 - 1 - 1;
                    esp613 = esp612 - 4;
                    *reinterpret_cast<void***>(esp613) = ebx16;
                    esp585 = esp613 - 4;
                    *reinterpret_cast<void***>(esp585) = esp585;
                    goto addr_10021606_1028;
                } else {
                    if (cf582) {
                        addr_1002160a_1030:
                        esp614 = esp585 + 4;
                        edi32 = *reinterpret_cast<void***>(esp614);
                        esp615 = esp614 + 4;
                        --ecx434;
                        eax616 = eax443 + 1 + 1 + 1;
                        edx579 = *reinterpret_cast<void***>(esp615);
                        tmp8_617 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebp33) + reinterpret_cast<unsigned char>(eax616) + 63) + reinterpret_cast<unsigned char>(ecx434));
                        cf618 = reinterpret_cast<uint1_t>(tmp8_617 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebp33) + reinterpret_cast<unsigned char>(eax616) + 63));
                        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(ebp33) + reinterpret_cast<unsigned char>(eax616) + 63) = tmp8_617;
                        esp619 = esp615 + 4 + 1;
                        zf620 = reinterpret_cast<uint1_t>(esp619 == 0);
                        if (!cf618) 
                            goto addr_1002168d_1031;
                    } else {
                        if (cf582 | zf606) {
                            addr_10021606_1028:
                            ++ecx434;
                            --esi293;
                            ++ebx16;
                            ++ebp33;
                            goto addr_1002160a_1030;
                        } else {
                            if (cf582) {
                                addr_100215e1_1034:
                                esp585 = esp585 - 4;
                                *reinterpret_cast<void***>(esp585) = ebp33;
                                --eax443;
                                goto addr_100215e5_1022;
                            } else {
                                esp619 = esp585 + 1 - 4;
                                *reinterpret_cast<void***>(esp619) = ebp33;
                                ++ecx434;
                                goto addr_100215ad_1036;
                            }
                        }
                    }
                }
            } else {
                --ecx434;
                __asm__("outsb ");
                __asm__("outsw ");
                __asm__("popad ");
                if (!cf582) {
                    addr_1002157f_1038:
                    goto addr_10021585_1027;
                } else {
                    esp437 = esp602 + 1;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 1 + 0x65) * 0x49557463);
                    goto addr_10021524_1040;
                }
            }
        }
    } else {
        addr_100214ac_969:
        __asm__("insb ");
        __asm__("outsd ");
        ++eax443;
        goto addr_100214b2_1041;
    }
    if (cf618) 
        goto addr_1002168a_1043;
    if (reinterpret_cast<signed char>(esp619) >= reinterpret_cast<signed char>(0)) {
        addr_1002165d_1045:
        esp621 = esp619 - 4;
        *reinterpret_cast<void***>(esp621) = ecx434;
        ++ebp33;
        esp622 = esp621 - 4;
        *reinterpret_cast<void***>(esp622) = eax616 + 1 + 1;
        ecx434 = ecx434 + 1 + 1;
        esp623 = esp622 - 4;
        *reinterpret_cast<void***>(esp623) = ebp33;
        esp624 = esp623 - 4;
        *reinterpret_cast<void***>(esp624) = edi32;
        --esi293;
        esp625 = esp624 + 1 + 4;
        edi626 = *reinterpret_cast<void***>(esp625);
        esp627 = esp625 + 4;
        eax616 = *reinterpret_cast<void***>(esp627);
        esp628 = esp627 + 4;
        edx629 = *reinterpret_cast<void***>(esp628);
        esp619 = esp628 + 4;
        *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
        __asm__("sti ");
        tmp32_630 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi626) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi626)));
        cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_630) < reinterpret_cast<unsigned char>(edi626));
        edi32 = tmp32_630;
        edx579 = edx629 + 1;
        zf631 = reinterpret_cast<uint1_t>(edx579 == 0);
        if (cf618) {
            addr_100216e9_1046:
            --eax616;
            esp632 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 87) * 0x6f646e69);
            cf618 = __intrinsic();
            if (!reinterpret_cast<uint1_t>(cf618 | __undefined())) {
                addr_10021734_1047:
                esp633 = esp632 - 4;
                *reinterpret_cast<void***>(esp633) = ebp33;
                ebp634 = ebp33 + 1;
                esp635 = esp633 - 4;
                *reinterpret_cast<void***>(esp635) = eax616 + 1;
                ecx434 = ecx434 + 1 + 1;
                esp636 = esp635 - 4;
                *reinterpret_cast<void***>(esp636) = ebp634;
                esp637 = esp636 - 4;
                *reinterpret_cast<void***>(esp637) = edi32;
                esp638 = esp637 + 1 + 4;
                edi32 = *reinterpret_cast<void***>(esp638);
                esp639 = esp638 + 4;
                eax640 = *reinterpret_cast<void***>(esp639);
                esp641 = esp639 + 4;
                edx579 = *reinterpret_cast<void***>(esp641);
                *reinterpret_cast<signed char*>(edi32 + 0x6e493f09) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(edi32 + 0x6e493f09) + *reinterpret_cast<signed char*>(&eax640));
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx434 + reinterpret_cast<unsigned char>(ebp634) * 2) + 97) * 0x657a696c);
                cf618 = __intrinsic();
                eax616 = eax640 + 1;
                esp642 = esp641 + 4 - 4;
                *reinterpret_cast<void***>(esp642) = esp642;
                __asm__("outsd ");
                if (eax616) {
                    addr_100217bb_1048:
                    esp643 = esp642 - 4;
                    *reinterpret_cast<void***>(esp643) = esi293;
                    ebp33 = ebp634 + 1;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp33) {
                        goto addr_10021805_1050;
                    } else {
                        *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
                        edx579 = *reinterpret_cast<void***>(esp643);
                        esp644 = esp643 + 4;
                        tmp8_645 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                        cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_645) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)));
                        *reinterpret_cast<void***>(eax616) = tmp8_645;
                        below_or_equal646 = reinterpret_cast<uint1_t>(cf618 | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax616) == 0));
                        tmp8_647 = *reinterpret_cast<void***>(esi293);
                        *reinterpret_cast<void***>(esi293) = ecx434;
                        ecx434 = tmp8_647;
                        goto addr_100217cc_1052;
                    }
                } else {
                    esp632 = esp642 - 4;
                    *reinterpret_cast<void***>(esp632) = reinterpret_cast<void**>(0x444e5748);
                    ebp33 = ebp634 + 1;
                    zf648 = reinterpret_cast<uint1_t>(ebp33 == 0);
                    __asm__("insb ");
                    goto addr_1002175f_1054;
                }
            } else {
                --esi293;
                zf648 = reinterpret_cast<uint1_t>(esi293 == 0);
                __asm__("popad ");
                if (zf648) {
                    addr_10021761_1056:
                    __asm__("outsb ");
                    goto addr_10021763_1057;
                } else {
                    if (cf618 | zf648) {
                        addr_1002175f_1054:
                        __asm__("insd ");
                        goto addr_10021761_1056;
                    } else {
                        esp649 = esp632 - 4;
                        *reinterpret_cast<void***>(esp649) = edi32;
                        --esi293;
                        esp650 = esp649 + 1;
                        eax651 = eax616 - 1 - 1;
                        __asm__("outsd ");
                        if (!cf618) {
                            addr_10021776_1060:
                            esp652 = esp650 - 4;
                            *reinterpret_cast<void***>(esp652) = edi32;
                            esp653 = esp652 + 1 + 4 + 4;
                            eax616 = eax651 - 1 + 1 + 1;
                            edi32 = *reinterpret_cast<void***>(esp653);
                            esi293 = esi293 - 1 - 1;
                            esp654 = esp653 + 4 - 4;
                            *reinterpret_cast<void***>(esp654) = eax616;
                            ecx434 = ecx434 - 1 + 1;
                            esp644 = esp654 - 4;
                            *reinterpret_cast<void***>(esp644) = esi293;
                            ++ebp33;
                            zf655 = reinterpret_cast<uint1_t>(ebp33 == 0);
                            below_or_equal646 = reinterpret_cast<uint1_t>(cf618 | zf655);
                            __asm__("insb ");
                            __asm__("insd ");
                            __asm__("outsb ");
                            if (zf655) {
                                addr_100217cc_1052:
                                __asm__("aas ");
                                esp656 = esp644 - 4;
                                *reinterpret_cast<void***>(esp656) = ebx16;
                                esp657 = esp656 - 4;
                                *reinterpret_cast<void***>(esp657) = reinterpret_cast<void**>(0x6957776f);
                                __asm__("outsb ");
                                __asm__("outsd ");
                                if (!below_or_equal646) {
                                    goto addr_10021819_1062;
                                }
                            } else {
                                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 80));
                                ++ecx434;
                                --ebx16;
                                edx579 = *reinterpret_cast<void***>(esp644);
                                esp643 = esp644 + 4;
                                *reinterpret_cast<void***>(esi293) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi293)) + reinterpret_cast<unsigned char>(ecx434));
                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                cf618 = 0;
                                eax616 = eax616 + 1 - 1;
                                below_or_equal658 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(eax616 == 0)));
                                __asm__("outsd ");
                                if (1) 
                                    goto addr_1002180f_1064;
                                ++eax616;
                                --esi293;
                                zf659 = reinterpret_cast<uint1_t>(esi293 == 0);
                                below_or_equal658 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf659));
                                __asm__("popad ");
                                if (zf659) 
                                    goto addr_10021809_1066; else 
                                    goto addr_100217a0_1067;
                            }
                        } else {
                            esp619 = esp650 + 1;
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                            goto addr_10021706_1069;
                        }
                    }
                }
            }
        } else {
            __asm__("popad ");
            __asm__("arpl [fs:ecx+0x73], sp");
            if (zf631) 
                goto addr_100216c6_1071;
            if (cf618 | zf631) 
                goto addr_100216e8_1073; else 
                goto addr_10021683_1074;
        }
    } else {
        --esi293;
        zf620 = reinterpret_cast<uint1_t>(esi293 == 0);
        __asm__("popad ");
        if (zf620) {
            addr_1002168a_1043:
            __asm__("outsb ");
            if (zf620) {
                addr_100216ce_1076:
                eax660 = eax616 + 1 + 1;
                esp661 = esp619 - 4;
                *reinterpret_cast<void***>(esp661) = ebp33;
                ++ebp33;
                esp662 = esp661 - 4;
                *reinterpret_cast<void***>(esp662) = eax660;
                esp663 = esp662 - 4;
                *reinterpret_cast<void***>(esp663) = ebp33;
                esp664 = esp663 - 4;
                *reinterpret_cast<void***>(esp664) = edi32;
                --esi293;
                esp665 = esp664 + 1 + 4;
                edi32 = *reinterpret_cast<void***>(esp665);
                ecx434 = ecx434 + 1 + 1 - 1 - 1;
                eax616 = eax660 - 1 + 1 + 1 + 1;
                edx579 = *reinterpret_cast<void***>(esp665 + 4);
                *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                goto addr_100216e5_1077;
            } else {
                addr_1002168e_1078:
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                cf618 = __intrinsic();
                esp666 = esp619 + 1 - 4;
                *reinterpret_cast<void***>(esp666) = ecx434;
                ++ebp33;
                eax616 = *reinterpret_cast<void***>(esp666);
                esp667 = esp666 + 4 - 4;
                *reinterpret_cast<void***>(esp667) = eax616;
                ecx434 = ecx434 + 1 + 1;
                esp619 = esp667 - 4;
                *reinterpret_cast<void***>(esp619) = ebp33;
                goto addr_1002169f_1079;
            }
        } else {
            if (cf618 | zf620) {
                addr_10021688_1081:
                __asm__("insd ");
                goto addr_1002168a_1043;
            } else {
                esp668 = esp619 - 4;
                *reinterpret_cast<void***>(esp668) = edi32;
                --esi293;
                esp619 = esp668 + 1;
                eax616 = eax616 - 1 - 1;
                __asm__("outsd ");
                if (!cf618) {
                    addr_1002169f_1079:
                    ++ebp33;
                    zf669 = reinterpret_cast<uint1_t>(ebp33 == 0);
                    if (cf618 | zf669) {
                        addr_10021707_1083:
                        esp670 = esp619 - 4;
                        *reinterpret_cast<void***>(esp670) = ecx434;
                        ++ecx434;
                        ++ebp33;
                        esp671 = esp670 + 4;
                        eax616 = *reinterpret_cast<void***>(esp671);
                        esp672 = esp671 + 4;
                        edx579 = *reinterpret_cast<void***>(esp672);
                        esp632 = esp672 + 4;
                        tmp8_673 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx579 + 7) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                        cf618 = reinterpret_cast<uint1_t>(tmp8_673 < *reinterpret_cast<unsigned char*>(edx579 + 7));
                        *reinterpret_cast<unsigned char*>(edx579 + 7) = tmp8_673;
                        __asm__("aas ");
                        ++edi32;
                        zf648 = reinterpret_cast<uint1_t>(edi32 == 0);
                        if (zf648) {
                            addr_10021763_1057:
                            if (zf648) {
                                addr_100217a5_1084:
                                esp674 = esp632 + 1;
                                __asm__("outsd ");
                                if (!cf618) {
                                    addr_1002181e_1085:
                                    esp675 = esp674 - 4;
                                    *reinterpret_cast<void***>(esp675) = ecx434;
                                    ++ecx434;
                                    esp676 = esp675 + 4;
                                    eax677 = *reinterpret_cast<void***>(esp676);
                                    esp678 = esp676 + 4;
                                    edx579 = *reinterpret_cast<void***>(esp678);
                                    esp643 = esp678 + 4;
                                    *reinterpret_cast<void***>(eax677) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax677)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax677)));
                                    __asm__("xlatb ");
                                    tmp32_679 = eax677 + 0x7269463f;
                                    eax616 = tmp32_679;
                                    ebp33 = ebp33 + 1 + 1;
                                    zf680 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                    if (reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_679) < reinterpret_cast<unsigned char>(eax677)) | zf680) {
                                        addr_1002189b_1086:
                                        ++eax616;
                                        edx579 = *reinterpret_cast<void***>(esp643);
                                        tmp8_681 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx579 + 5) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579 + 1)));
                                        cf618 = reinterpret_cast<uint1_t>(tmp8_681 < *reinterpret_cast<unsigned char*>(edx579 + 5));
                                        *reinterpret_cast<unsigned char*>(edx579 + 5) = tmp8_681;
                                        __asm__("aas ");
                                        esp682 = esp643 + 4 + 1;
                                        __asm__("outsd ");
                                        --ecx434;
                                        __asm__("outsb ");
                                        if (cf618 | reinterpret_cast<uint1_t>(ecx434 == 0)) {
                                            addr_10021916_1087:
                                            __asm__("aas ");
                                            esp643 = esp682 - 4;
                                            *reinterpret_cast<void***>(esp643) = edx579;
                                            __asm__("insb ");
                                            __asm__("popad ");
                                            if (!cf618) {
                                                addr_10021983_1088:
                                                --ebp33;
                                                if (!ebp33) {
                                                    goto addr_100219f0_1090;
                                                }
                                            } else {
                                                ++eax616;
                                                goto addr_1002191f_1092;
                                            }
                                        } else {
                                            esp643 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 64) * 69);
                                            cf618 = __intrinsic();
                                            sf683 = __undefined();
                                            zf684 = __undefined();
                                            below_or_equal685 = reinterpret_cast<uint1_t>(cf618 | zf684);
                                            __asm__("insb ");
                                            __asm__("insd ");
                                            __asm__("outsb ");
                                            if (zf684) {
                                                addr_10021902_1094:
                                                --ecx434;
                                                below_or_equal686 = reinterpret_cast<uint1_t>(cf618 | reinterpret_cast<uint1_t>(ecx434 == 0));
                                                __asm__("outsb ");
                                                goto addr_10021904_1095;
                                            } else {
                                                if (cf618) {
                                                    addr_10021923_1097:
                                                    __asm__("outsb ");
                                                    goto addr_10021924_1098;
                                                } else {
                                                    if (below_or_equal685) {
                                                        addr_1002191f_1092:
                                                        ++ebp33;
                                                        zf684 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                        sf683 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                                                        below_or_equal685 = reinterpret_cast<uint1_t>(cf618 | zf684);
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        goto addr_10021923_1097;
                                                    } else {
                                                        if (cf618) {
                                                            addr_100218fa_1101:
                                                            if (zf684) {
                                                                addr_1002193d_1102:
                                                                eax616 = *reinterpret_cast<void***>(esp643);
                                                                esp687 = esp643 + 4;
                                                                edx579 = *reinterpret_cast<void***>(esp687);
                                                                esp643 = esp687 + 4;
                                                                *reinterpret_cast<void***>(ebx16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) + reinterpret_cast<unsigned char>(ecx434));
                                                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(0xff);
                                                                cf618 = 0;
                                                                ++edi32;
                                                                zf684 = reinterpret_cast<uint1_t>(edi32 == 0);
                                                                sf683 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                                                                of688 = __intrinsic();
                                                                if (zf684) {
                                                                    addr_10021997_1103:
                                                                    ++esp643;
                                                                    goto addr_10021998_1104;
                                                                } else {
                                                                    if (0) {
                                                                        addr_100219b8_1106:
                                                                        __asm__("outsb ");
                                                                        if (zf684) {
                                                                            addr_10021a0c_1107:
                                                                            *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                            __asm__("salc ");
                                                                            goto addr_10021a0f_1108;
                                                                        } else {
                                                                            if (cf618) {
                                                                                goto addr_10021a2e_1111;
                                                                            }
                                                                            if (sf683) 
                                                                                goto addr_10021a39_1113; else 
                                                                                goto addr_100219c0_1114;
                                                                        }
                                                                    } else {
                                                                        addr_10021949_1115:
                                                                        if (of688) {
                                                                            addr_100219b0_1116:
                                                                            __asm__("outsb ");
                                                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax616 + reinterpret_cast<unsigned char>(eax616) * 2) + 69) * 0x656d656c);
                                                                            cf618 = __intrinsic();
                                                                            sf683 = __undefined();
                                                                            zf684 = __undefined();
                                                                            goto addr_100219b8_1106;
                                                                        } else {
                                                                            if (cf618) {
                                                                                addr_100219c1_1118:
                                                                                ++esp643;
                                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                cf618 = __intrinsic();
                                                                                goto addr_100219c8_1119;
                                                                            } else {
                                                                                addr_1002194d_1120:
                                                                                if (!sf683) {
                                                                                    addr_1002198f_1121:
                                                                                    if (zf684) {
                                                                                        addr_100219e2_1122:
                                                                                        esp643 = esp643 - 4;
                                                                                        *reinterpret_cast<void***>(esp643) = edx579;
                                                                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint16_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void**>(&ebp33)) + *reinterpret_cast<uint16_t*>(&edi32)) + 0x74) * 0x54407265);
                                                                                        __asm__("outsd ");
                                                                                        if (!__undefined()) {
                                                                                            addr_10021a53_1123:
                                                                                            ++ecx434;
                                                                                            edi32 = *reinterpret_cast<void***>(esp643);
                                                                                            esp689 = esp643 + 4;
                                                                                            --esi293;
                                                                                            eax690 = eax616 + 1;
                                                                                            edx579 = *reinterpret_cast<void***>(esp689);
                                                                                            esp643 = esp689 + 4;
                                                                                            tmp8_691 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax690)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax690)));
                                                                                            cf692 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_691) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax690)));
                                                                                            *reinterpret_cast<void***>(eax690) = tmp8_691;
                                                                                            cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax690) < reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(g6572433f) + cf692));
                                                                                            below_or_equal693 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax690) <= reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(g6572433f) + cf618));
                                                                                            eax616 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax690) - (reinterpret_cast<int32_t>(g6572433f) + cf618));
                                                                                            zf694 = reinterpret_cast<uint1_t>(eax616 == static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf618))));
                                                                                            __asm__("popad ");
                                                                                            if (zf694) {
                                                                                                addr_10021ac8_1124:
                                                                                                __asm__("outsb ");
                                                                                                __asm__("outsw ");
                                                                                                esp695 = esp643 - 4;
                                                                                                *reinterpret_cast<void***>(esp695) = eax616;
                                                                                                if (zf694) {
                                                                                                    addr_10021b40_1125:
                                                                                                    esp696 = esp695 - 4;
                                                                                                    *reinterpret_cast<void***>(esp696) = ebp33;
                                                                                                    ++ecx434;
                                                                                                    ebp697 = ebp33 + 1;
                                                                                                    eax616 = *reinterpret_cast<void***>(esp696);
                                                                                                    esp698 = esp696 + 4;
                                                                                                    edx579 = *reinterpret_cast<void***>(esp698);
                                                                                                    *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                                                    __asm__("aas ");
                                                                                                    __asm__("aas ");
                                                                                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi32 + reinterpret_cast<unsigned char>(ebp697) * 2) + 0x75) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi32 + reinterpret_cast<unsigned char>(ebp697) * 2) + 0x75) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579)));
                                                                                                    cf618 = 0;
                                                                                                    __asm__("arpl [eax+0x48], bp");
                                                                                                    esp699 = esp698 + 4 - 4;
                                                                                                    *reinterpret_cast<void***>(esp699) = edi32;
                                                                                                    --esi293;
                                                                                                    esp700 = esp699 + 1;
                                                                                                    ebp33 = ebp697 + 1;
                                                                                                    zf701 = ebp33 == 0;
                                                                                                    sf702 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                                                                                                    of703 = __intrinsic();
                                                                                                    __asm__("insb ");
                                                                                                    __asm__("insd ");
                                                                                                    __asm__("outsb ");
                                                                                                    if (zf701) {
                                                                                                        addr_10021ba2_1126:
                                                                                                        if (cf618) {
                                                                                                            addr_10021c13_1127:
                                                                                                            goto addr_10021c18_1128;
                                                                                                        } else {
                                                                                                            if (of703) {
                                                                                                                addr_10021c0b_1130:
                                                                                                                __asm__("outsb ");
                                                                                                                if (zf701) {
                                                                                                                    addr_10021c50_1131:
                                                                                                                    esp704 = esp700 - 4;
                                                                                                                    *reinterpret_cast<void***>(esp704) = ebp33;
                                                                                                                    --ecx434;
                                                                                                                    zf705 = reinterpret_cast<uint1_t>(ecx434 == 0);
                                                                                                                    below_or_equal706 = reinterpret_cast<uint1_t>(cf618 | zf705);
                                                                                                                    __asm__("outsb ");
                                                                                                                    if (__intrinsic()) {
                                                                                                                        addr_10021cca_1132:
                                                                                                                        esp707 = esp704 - 4;
                                                                                                                        *reinterpret_cast<void***>(esp707) = ebp33;
                                                                                                                        ++ecx434;
                                                                                                                        ++ebp33;
                                                                                                                        esp708 = esp707 + 4;
                                                                                                                        eax709 = *reinterpret_cast<void***>(esp708);
                                                                                                                        esp710 = esp708 + 4;
                                                                                                                        edx579 = *reinterpret_cast<void***>(esp710);
                                                                                                                        *reinterpret_cast<void***>(eax709) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax709)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax709)));
                                                                                                                        esp704 = eax709;
                                                                                                                        eax616 = esp710 + 4;
                                                                                                                        *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                                                                                                                        cf618 = 0;
                                                                                                                        goto addr_10021cd8_1133;
                                                                                                                    } else {
                                                                                                                        if (zf705) 
                                                                                                                            goto addr_10021c9c_1135;
                                                                                                                        if (below_or_equal706) 
                                                                                                                            goto addr_10021cbe_1137; else 
                                                                                                                            goto addr_10021c59_1138;
                                                                                                                    }
                                                                                                                } else {
                                                                                                                    ++esp700;
                                                                                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                                                    goto addr_10021c13_1127;
                                                                                                                }
                                                                                                            } else {
                                                                                                                if (cf618) {
                                                                                                                    addr_10021c1c_1141:
                                                                                                                    ++ebp33;
                                                                                                                    esp711 = esp700 + 4;
                                                                                                                    edi32 = *reinterpret_cast<void***>(esp711);
                                                                                                                    esp712 = esp711 + 4;
                                                                                                                    --esi293;
                                                                                                                    eax616 = *reinterpret_cast<void***>(esp700) - 1 + 1;
                                                                                                                    edx579 = *reinterpret_cast<void***>(esp712);
                                                                                                                    esp704 = esp712 + 4;
                                                                                                                    *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                                                                    goto addr_10021c25_1142;
                                                                                                                } else {
                                                                                                                    if (!sf702) {
                                                                                                                        addr_10021bed_1144:
                                                                                                                        ++eax616;
                                                                                                                        edx579 = *reinterpret_cast<void***>(esp700);
                                                                                                                        esp704 = esp700 + 4;
                                                                                                                        tmp8_713 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi293 + 0x6e4f3f0a) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                                                                                                                        cf618 = reinterpret_cast<uint1_t>(tmp8_713 < *reinterpret_cast<unsigned char*>(esi293 + 0x6e4f3f0a));
                                                                                                                        *reinterpret_cast<unsigned char*>(esi293 + 0x6e4f3f0a) = tmp8_713;
                                                                                                                        ++edi32;
                                                                                                                        if (cf618) {
                                                                                                                            goto addr_10021c6b_1146;
                                                                                                                        } else {
                                                                                                                            if (edi32) {
                                                                                                                                addr_10021c6c_1148:
                                                                                                                                __asm__("arpl [ebp+0x73], si");
                                                                                                                                goto addr_10021c6f_1149;
                                                                                                                            } else {
                                                                                                                                ++ebx16;
                                                                                                                                esp714 = esp704 - 4;
                                                                                                                                *reinterpret_cast<void***>(esp714) = reinterpret_cast<void**>(0x65676e61);
                                                                                                                                goto addr_10021c02_1151;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    } else {
                                                                                                                        esp643 = esp700 - 4;
                                                                                                                        *reinterpret_cast<void***>(esp643) = reinterpret_cast<void**>(0x65676e61);
                                                                                                                        goto addr_10021bad_1153;
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        esp643 = esp700 + 1;
                                                                                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                                        goto addr_10021b68_1155;
                                                                                                    }
                                                                                                } else {
                                                                                                    ++eax616;
                                                                                                    esp643 = esp695 - 4;
                                                                                                    *reinterpret_cast<void***>(esp643) = esp643;
                                                                                                    __asm__("outsd ");
                                                                                                    if (eax616) {
                                                                                                        addr_10021b36_1157:
                                                                                                        __asm__("outsd ");
                                                                                                        if (!cf618) {
                                                                                                            addr_10021bad_1153:
                                                                                                            ++eax616;
                                                                                                            esp700 = esp643 - 4;
                                                                                                            *reinterpret_cast<void***>(esp700) = esp700;
                                                                                                            __asm__("outsd ");
                                                                                                            if (eax616) {
                                                                                                                addr_10021c18_1128:
                                                                                                                esp700 = esp700 - 4;
                                                                                                                *reinterpret_cast<void***>(esp700) = ebp33;
                                                                                                                ++ecx434;
                                                                                                                goto addr_10021c1c_1141;
                                                                                                            } else {
                                                                                                                esp714 = esp700 - 4;
                                                                                                                *reinterpret_cast<void***>(esp714) = reinterpret_cast<void**>(0x444e5748);
                                                                                                                ++ebp33;
                                                                                                                __asm__("insb ");
                                                                                                                __asm__("insd ");
                                                                                                                __asm__("outsb ");
                                                                                                                if (!ebp33) {
                                                                                                                    addr_10021c02_1151:
                                                                                                                    eax616 = eax616 + 1 - 1;
                                                                                                                    esp715 = esp714 - 4;
                                                                                                                    *reinterpret_cast<void***>(esp715) = edi32;
                                                                                                                    --esi293;
                                                                                                                    esp700 = esp715 + 1;
                                                                                                                    ++ebp33;
                                                                                                                    zf701 = ebp33 == 0;
                                                                                                                    __asm__("insb ");
                                                                                                                    __asm__("insd ");
                                                                                                                    goto addr_10021c0b_1130;
                                                                                                                } else {
                                                                                                                    esp643 = esp714 + 1;
                                                                                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                                                    cf618 = __intrinsic();
                                                                                                                    goto addr_10021bca_1160;
                                                                                                                }
                                                                                                            }
                                                                                                        } else {
                                                                                                            goto addr_10021b3a_1162;
                                                                                                        }
                                                                                                    } else {
                                                                                                        esp643 = esp643 - 4;
                                                                                                        *reinterpret_cast<void***>(esp643) = reinterpret_cast<void**>(0x444e5748);
                                                                                                        goto addr_10021ad8_1164;
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                esp643 = esp643 - 4;
                                                                                                *reinterpret_cast<void***>(esp643) = eax616;
                                                                                                goto addr_10021a64_1166;
                                                                                            }
                                                                                        } else {
                                                                                            addr_100219f0_1090:
                                                                                            esp643 = esp643 - 4;
                                                                                            *reinterpret_cast<void***>(esp643) = reinterpret_cast<void**>(0x444e5748);
                                                                                            ++ebp33;
                                                                                            __asm__("insb ");
                                                                                            __asm__("insd ");
                                                                                            __asm__("outsb ");
                                                                                            if (!ebp33) {
                                                                                                addr_10021a3d_1167:
                                                                                                ++ebp33;
                                                                                                esp643 = esp643 - 4;
                                                                                                *reinterpret_cast<void***>(esp643) = edi32;
                                                                                                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ 80);
                                                                                                __asm__("popad ");
                                                                                                if (!*reinterpret_cast<void**>(&eax616)) {
                                                                                                    addr_10021ab9_1168:
                                                                                                    edx579 = *reinterpret_cast<void***>(esp643);
                                                                                                    esp643 = esp643 + 4;
                                                                                                    *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                                                    tmp8_716 = *reinterpret_cast<void***>(esi293) + 63;
                                                                                                    cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_716) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi293)));
                                                                                                    *reinterpret_cast<void***>(esi293) = tmp8_716;
                                                                                                    ++edi32;
                                                                                                    zf717 = reinterpret_cast<uint1_t>(edi32 == 0);
                                                                                                    below_or_equal718 = reinterpret_cast<uint1_t>(cf618 | zf717);
                                                                                                    if (zf717) {
                                                                                                        addr_10021b06_1169:
                                                                                                        if (zf717) {
                                                                                                            addr_10021b72_1170:
                                                                                                            *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                                                            __asm__("iretd ");
                                                                                                            *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) + reinterpret_cast<unsigned char>(edi32));
                                                                                                            __asm__("aas ");
                                                                                                            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi32 + reinterpret_cast<unsigned char>(ebp33) * 2) + 0x75) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(edi32 + reinterpret_cast<unsigned char>(ebp33) * 2) + 0x75) ^ reinterpret_cast<unsigned char>(edx579);
                                                                                                            cf618 = 0;
                                                                                                            __asm__("arpl [eax+0x48], bp");
                                                                                                            esp719 = esp643 - 4;
                                                                                                            *reinterpret_cast<void***>(esp719) = edi32;
                                                                                                            --esi293;
                                                                                                            esp643 = esp719 + 1;
                                                                                                            ++ebp33;
                                                                                                            zf720 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                                                            __asm__("insb ");
                                                                                                            __asm__("insd ");
                                                                                                            __asm__("outsb ");
                                                                                                            goto addr_10021b87_1171;
                                                                                                        } else {
                                                                                                            if (below_or_equal718) {
                                                                                                                addr_10021b70_1173:
                                                                                                                eax616 = *reinterpret_cast<void***>(esp643);
                                                                                                                esp721 = esp643 + 4;
                                                                                                                edx579 = *reinterpret_cast<void***>(esp721);
                                                                                                                esp643 = esp721 + 4;
                                                                                                                goto addr_10021b72_1170;
                                                                                                            } else {
                                                                                                                --eax616;
                                                                                                                goto addr_10021b0c_1175;
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        __asm__("insb ");
                                                                                                        __asm__("popad ");
                                                                                                        if (!cf618) {
                                                                                                            addr_10021b3a_1162:
                                                                                                            esp695 = esp643 + 1;
                                                                                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                                            goto addr_10021b40_1125;
                                                                                                        } else {
                                                                                                            --ecx434;
                                                                                                            zf694 = reinterpret_cast<uint1_t>(ecx434 == 0);
                                                                                                            goto addr_10021ac8_1124;
                                                                                                        }
                                                                                                    }
                                                                                                } else {
                                                                                                    if (0) {
                                                                                                        addr_10021ab6_1179:
                                                                                                        eax616 = eax616 + 1 + 1 + 1;
                                                                                                        goto addr_10021ab9_1168;
                                                                                                    } else {
                                                                                                        esp643 = esp643 - 4;
                                                                                                        *reinterpret_cast<void***>(esp643) = ebx16;
                                                                                                        __asm__("arpl [eax+0x65], bp");
                                                                                                        __asm__("insd ");
                                                                                                        __asm__("popad ");
                                                                                                        eax616 = eax616 + 1 + 1;
                                                                                                        *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 80));
                                                                                                        goto addr_10021a53_1123;
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                ++esp643;
                                                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                                goto addr_10021a03_1182;
                                                                                            }
                                                                                        }
                                                                                    } else {
                                                                                        if (cf618) {
                                                                                            addr_10021a03_1182:
                                                                                            esp722 = esp643 - 4;
                                                                                            *reinterpret_cast<void***>(esp722) = ebx16;
                                                                                            ++edi32;
                                                                                            eax616 = *reinterpret_cast<void***>(esp722);
                                                                                            esp723 = esp722 + 4;
                                                                                            edx579 = *reinterpret_cast<void***>(esp723);
                                                                                            esp643 = esp723 + 4;
                                                                                            goto addr_10021a0c_1107;
                                                                                        } else {
                                                                                            addr_10021994_1184:
                                                                                            if (sf683) {
                                                                                                addr_10021a0f_1108:
                                                                                                *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                                                                                cf618 = 0;
                                                                                                --ecx434;
                                                                                                zf694 = reinterpret_cast<uint1_t>(ecx434 == 0);
                                                                                                of724 = __intrinsic();
                                                                                                below_or_equal693 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf694));
                                                                                                if (1) {
                                                                                                    addr_10021a64_1166:
                                                                                                    __asm__("popad ");
                                                                                                    if (zf694) {
                                                                                                        addr_10021adb_1185:
                                                                                                        goto addr_10021adc_1186;
                                                                                                    } else {
                                                                                                        if (cf618) 
                                                                                                            goto addr_10021ad8_1164;
                                                                                                        esp643 = esp643 - 4;
                                                                                                        *reinterpret_cast<void***>(esp643) = eax616;
                                                                                                        if (cf618) 
                                                                                                            goto addr_10021adc_1186; else 
                                                                                                            goto addr_10021a6d_1189;
                                                                                                    }
                                                                                                } else {
                                                                                                    __asm__("popad ");
                                                                                                    if (zf694) {
                                                                                                        addr_10021a8b_1191:
                                                                                                        if (zf694) {
                                                                                                            addr_10021b01_1192:
                                                                                                            __asm__("aas ");
                                                                                                            *reinterpret_cast<unsigned char*>(esi293 + 97) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi293 + 97) ^ reinterpret_cast<unsigned char>(ecx434));
                                                                                                            cf618 = 0;
                                                                                                            zf717 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi293 + 97) == 0);
                                                                                                            below_or_equal718 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf717));
                                                                                                            goto addr_10021b06_1169;
                                                                                                        } else {
                                                                                                            addr_10021a8d_1193:
                                                                                                            if (cf618) {
                                                                                                                addr_10021afe_1194:
                                                                                                                *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                                                                *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(63);
                                                                                                                goto addr_10021b01_1192;
                                                                                                            } else {
                                                                                                                addr_10021a90_1195:
                                                                                                                *reinterpret_cast<void***>(edx579) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx579)) ^ reinterpret_cast<unsigned char>(esi293));
                                                                                                                cf618 = 0;
                                                                                                                eax616 = eax616 + 1 + 1;
                                                                                                                esp643 = esp643 - 4;
                                                                                                                *reinterpret_cast<void***>(esp643) = eax616;
                                                                                                                goto addr_10021a95_1196;
                                                                                                            }
                                                                                                        }
                                                                                                    } else {
                                                                                                        if (0) {
                                                                                                            addr_10021a88_1198:
                                                                                                            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ 80);
                                                                                                            cf618 = 0;
                                                                                                            zf694 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax616) == 0);
                                                                                                            __asm__("popad ");
                                                                                                            goto addr_10021a8b_1191;
                                                                                                        } else {
                                                                                                            addr_10021a1a_1199:
                                                                                                            esp643 = esp643 - 4;
                                                                                                            *reinterpret_cast<void***>(esp643) = ebx16;
                                                                                                            if (!zf694) 
                                                                                                                goto addr_10021a8d_1193; else 
                                                                                                                goto addr_10021a1d_1200;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            } else {
                                                                                                ++eax616;
                                                                                                goto addr_10021997_1103;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                } else {
                                                                                    addr_1002194f_1202:
                                                                                    ++ebp33;
                                                                                    zf694 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                                    of724 = __intrinsic();
                                                                                    __asm__("insb ");
                                                                                    __asm__("insd ");
                                                                                    __asm__("outsb ");
                                                                                    if (zf694) {
                                                                                        addr_100219a7_1203:
                                                                                        ecx725 = ecx434 + 1;
                                                                                        esp726 = esp643 + 1;
                                                                                        ++eax616;
                                                                                        edx579 = *reinterpret_cast<void***>(esp726);
                                                                                        esp643 = esp726 + 4;
                                                                                        *reinterpret_cast<void***>(ebx16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx725 + 1)));
                                                                                        *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                                                                        ecx434 = ecx725 - 1;
                                                                                        goto addr_100219b0_1116;
                                                                                    } else {
                                                                                        if (cf618) {
                                                                                            addr_100219c8_1119:
                                                                                            ++ecx434;
                                                                                            ebp33 = ebp33 - 1 + 1;
                                                                                            eax616 = *reinterpret_cast<void***>(esp643);
                                                                                            esp643 = esp643 + 4 - 4;
                                                                                            *reinterpret_cast<void***>(esp643) = eax616;
                                                                                            goto addr_100219d0_1205;
                                                                                        } else {
                                                                                            if (reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0)) {
                                                                                                addr_100219d4_1207:
                                                                                                __asm__("insd ");
                                                                                                __asm__("outsb ");
                                                                                                if (zf694) 
                                                                                                    goto addr_10021a1a_1199; else 
                                                                                                    goto addr_100219da_1208;
                                                                                            } else {
                                                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                                cf618 = __intrinsic();
                                                                                                eax616 = eax616 + 1 + 1 + 1;
                                                                                                ++ebp33;
                                                                                                --edx579;
                                                                                                esp727 = esp643 + 1 - 4;
                                                                                                *reinterpret_cast<void***>(esp727) = eax616;
                                                                                                ecx434 = ecx434 - 1 + 1 + 1;
                                                                                                esp643 = esp727 - 4;
                                                                                                *reinterpret_cast<void***>(esp643) = ebp33;
                                                                                                if (!ecx434) {
                                                                                                    addr_100219d0_1205:
                                                                                                    ++ecx434;
                                                                                                    esp643 = esp643 - 4;
                                                                                                    *reinterpret_cast<void***>(esp643) = esi293;
                                                                                                    ++ebp33;
                                                                                                    zf694 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                                                    of724 = __intrinsic();
                                                                                                    __asm__("insb ");
                                                                                                    goto addr_100219d4_1207;
                                                                                                } else {
                                                                                                    addr_1002196f_1210:
                                                                                                    esp643 = esp643 - 4;
                                                                                                    *reinterpret_cast<void***>(esp643) = esi293;
                                                                                                    ++ecx434;
                                                                                                    goto addr_10021972_1211;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            } else {
                                                                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 80));
                                                                cf618 = 0;
                                                                ++ecx434;
                                                                esp643 = esp643 - 4;
                                                                *reinterpret_cast<void***>(esp643) = esi293;
                                                                goto addr_10021902_1094;
                                                            }
                                                        } else {
                                                            addr_100218ba_1213:
                                                            ecx728 = ecx434 - 1 + 1 + 1;
                                                            eax616 = eax616 + 1 + 1 - 1;
                                                            esp729 = esp643 + 1 + 4;
                                                            edx579 = *reinterpret_cast<void***>(esp729);
                                                            esp643 = esp729 + 4;
                                                            *reinterpret_cast<void***>(ecx728) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx728)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx728 + 1)));
                                                            *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(edi32));
                                                            ecx434 = ecx728 - 1;
                                                            __asm__("outsb ");
                                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax616 + reinterpret_cast<unsigned char>(eax616) * 2) + 69) * 0x656d656c);
                                                            cf618 = __intrinsic();
                                                            of688 = __intrinsic();
                                                            sf683 = __undefined();
                                                            zf684 = __undefined();
                                                            below_or_equal685 = reinterpret_cast<uint1_t>(cf618 | zf684);
                                                            goto addr_100218d8_1214;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } else {
                                        __asm__("outsb ");
                                        if (zf680) {
                                            addr_10021879_1216:
                                            __asm__("arpl [eax+0x65], bp");
                                            __asm__("insd ");
                                            __asm__("popad ");
                                            ++eax616;
                                            ++esp643;
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                            goto addr_10021881_1217;
                                        } else {
                                            ++ebp33;
                                            __asm__("insb ");
                                            __asm__("insd ");
                                            __asm__("outsb ");
                                            if (!ebp33) {
                                                addr_10021881_1217:
                                                eax616 = eax616 + 1 + 1;
                                                esp657 = esp643 - 4;
                                                *reinterpret_cast<void***>(esp657) = ebx16;
                                                ++edi32;
                                                __asm__("aas ");
                                                ++ecx434;
                                                goto addr_1002188d_1219;
                                            } else {
                                                esp657 = esp643 + 1;
                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                cf618 = __intrinsic();
                                                goto addr_10021843_1221;
                                            }
                                        }
                                    }
                                } else {
                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                    esp730 = esp674 + 1 - 4;
                                    *reinterpret_cast<void***>(esp730) = ecx434;
                                    ebp634 = ebp33 + 1;
                                    eax616 = *reinterpret_cast<void***>(esp730);
                                    esp642 = esp730 + 4 - 4;
                                    *reinterpret_cast<void***>(esp642) = eax616;
                                    ecx434 = ecx434 + 1 + 1;
                                    goto addr_100217bb_1048;
                                }
                            } else {
                                esp731 = esp632 + 1;
                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                cf618 = __intrinsic();
                                goto addr_1002176b_1224;
                            }
                        } else {
                            esp732 = esp632 - 4;
                            *reinterpret_cast<void***>(esp732) = edi32;
                            goto addr_1002171c_1226;
                        }
                    } else {
                        __asm__("outsb ");
                        if (zf669) {
                            addr_100216e5_1077:
                            ecx434 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx434) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx434)));
                            goto addr_100216e8_1073;
                        } else {
                            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
                            edx579 = *reinterpret_cast<void***>(esp619);
                            tmp8_733 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 15) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                            cf618 = reinterpret_cast<uint1_t>(tmp8_733 < *reinterpret_cast<unsigned char*>(ebp33 + 15));
                            *reinterpret_cast<unsigned char*>(ebp33 + 15) = tmp8_733;
                            zf734 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebp33 + 15) == 0);
                            __asm__("aas ");
                            esp735 = esp619 + 4 - 4;
                            *reinterpret_cast<void***>(esp735) = edi32;
                            __asm__("outsb ");
                            esp732 = esp735 - 4;
                            *reinterpret_cast<void***>(esp732) = eax616;
                            if (cf618) {
                                addr_10021722_1229:
                                esp731 = esp732 + 1;
                                ++ebp33;
                                __asm__("insb ");
                                __asm__("insd ");
                                __asm__("outsb ");
                                if (!ebp33) {
                                    addr_1002176b_1224:
                                    eax651 = eax616 + 1 + 1;
                                    esp736 = esp731 - 4;
                                    *reinterpret_cast<void***>(esp736) = ecx434;
                                    ++ebp33;
                                    --edx579;
                                    esp737 = esp736 - 4;
                                    *reinterpret_cast<void***>(esp737) = eax651;
                                    ecx434 = ecx434 + 1 + 1;
                                    esp650 = esp737 - 4;
                                    *reinterpret_cast<void***>(esp650) = ebp33;
                                    goto addr_10021776_1060;
                                } else {
                                    esp632 = esp731 + 1;
                                    ++eax616;
                                    goto addr_10021734_1047;
                                }
                            } else {
                                __asm__("arpl [eax+0x54], ax");
                                goto addr_100216b4_1232;
                            }
                        }
                    }
                } else {
                    addr_1002162b_1233:
                    ++esp619;
                    goto addr_1002162d_1234;
                }
            }
        }
    }
    --esi293;
    zf738 = reinterpret_cast<uint1_t>(esi293 == 0);
    __asm__("popad ");
    if (zf738) {
        addr_10021845_1236:
        esp739 = esp657 - 4;
        *reinterpret_cast<void***>(esp739) = ecx434;
        ebp740 = ebp33 + 1;
        eax616 = *reinterpret_cast<void***>(esp739);
        esp741 = esp739 + 4 - 4;
        *reinterpret_cast<void***>(esp741) = eax616;
        ecx434 = ecx434 + 1 + 1;
        esp643 = esp741 - 4;
        *reinterpret_cast<void***>(esp643) = ebp740;
        ebp33 = ebp740 + 1;
        zf742 = reinterpret_cast<uint1_t>(ebp33 == 0);
        if (cf618 | zf742) 
            goto addr_100218ba_1213;
    } else {
        if (cf618 | zf738) {
            addr_10021843_1221:
            goto addr_10021845_1236;
        } else {
            esp743 = esp657 - 4;
            *reinterpret_cast<void***>(esp743) = edi32;
            --esi293;
            esp643 = esp743 + 1;
            eax616 = eax616 - 1 - 1;
            __asm__("outsd ");
            if (!cf618) {
                addr_1002185a_1239:
                --esi293;
                goto addr_1002185c_1240;
            } else {
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                esp744 = esp643 + 1 - 4;
                *reinterpret_cast<void***>(esp744) = ecx434;
                ++ecx434;
                ++ebp33;
                esp745 = esp744 + 4;
                eax746 = *reinterpret_cast<void***>(esp744) - 1 + 1;
                edx579 = *reinterpret_cast<void***>(esp745);
                *reinterpret_cast<void***>(eax746) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax746)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax746)));
                esp643 = esp745 + 4 - 4;
                *reinterpret_cast<void***>(esp643) = ebx16;
                eax616 = eax746 + 0x7365443f;
                if (!eax616) {
                    goto addr_10021875_1243;
                } else {
                    __asm__("outsd ");
                    if (reinterpret_cast<signed char>(eax616) >= reinterpret_cast<signed char>(0)) {
                        addr_1002185c_1240:
                        *reinterpret_cast<unsigned char*>(eax616 + 90) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax616 + 90) ^ reinterpret_cast<unsigned char>(eax616));
                        ecx434 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx434) + reinterpret_cast<unsigned char>(ecx434));
                        edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                        cf618 = 0;
                        zf684 = reinterpret_cast<uint1_t>(edi32 == 0);
                        sf683 = __intrinsic();
                        of688 = 0;
                        below_or_equal685 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf684));
                        esp643 = esp643 - 4;
                        *reinterpret_cast<void***>(esp643) = eax616;
                        __asm__("popad ");
                        if (zf684) {
                            goto addr_100218dc_1246;
                        }
                    } else {
                        addr_10021805_1050:
                        ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 100) * 0x4e40776f);
                        cf618 = __intrinsic();
                        zf659 = __undefined();
                        below_or_equal658 = reinterpret_cast<uint1_t>(cf618 | zf659);
                        goto addr_10021807_1247;
                    }
                }
            }
        }
    }
    __asm__("outsb ");
    if (zf742) {
        addr_10021898_1249:
        eax616 = eax616 + 1 - 1;
        goto addr_1002189b_1086;
    } else {
        *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 95));
        goto addr_1002185a_1239;
    }
    addr_10021875_1243:
    --ecx434;
    goto addr_10021876_1251;
    if (0) {
        addr_100218d8_1214:
        __asm__("outsb ");
        if (!zf684) {
            addr_100218dc_1246:
            if (cf618) 
                goto addr_1002194d_1120; else 
                goto addr_100218de_1254;
        }
    } else {
        ++esi293;
        zf684 = reinterpret_cast<uint1_t>(esi293 == 0);
        sf683 = reinterpret_cast<signed char>(esi293) < reinterpret_cast<signed char>(0);
        of688 = __intrinsic();
        below_or_equal685 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf684));
        if (0) 
            goto addr_100218dc_1246;
        __asm__("insd ");
        esp643 = esp643 - 4;
        *reinterpret_cast<void***>(esp643) = eax616;
        __asm__("popad ");
        if (zf684) 
            goto addr_100218e6_1257; else 
            goto addr_10021872_1258;
    }
    addr_1002192f_1259:
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
    esp643 = esp643 + 1 - 4;
    *reinterpret_cast<void***>(esp643) = ebp33;
    ++ecx434;
    ++edi32;
    --ebx16;
    goto addr_1002193d_1102;
    addr_100218de_1254:
    if (below_or_equal685) 
        goto addr_10021949_1115;
    if (cf618) {
        addr_10021924_1098:
        if (zf684) {
            addr_10021977_1261:
            eax616 = eax616 + 1 + 1 - 1 + 1;
            edx579 = *reinterpret_cast<void***>(esp643);
            esp643 = esp643 + 4;
            tmp8_747 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
            cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_747) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)));
            *reinterpret_cast<void***>(eax616) = tmp8_747;
            if (reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax616)) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax616) == 0))) {
                __asm__("aas ");
                ++esp643;
                __asm__("outsd ");
                goto addr_10021983_1088;
            }
        } else {
            if (cf618) {
                addr_10021998_1104:
                esp748 = esp643 - 4;
                *reinterpret_cast<void***>(esp748) = ebp33;
                ++ecx434;
                ++ebp33;
                eax616 = eax616 + 1 + 1 - 1;
                esp643 = esp748 - 4;
                *reinterpret_cast<void***>(esp643) = eax616;
                goto addr_100219a7_1203;
            } else {
                if (below_or_equal685) 
                    goto addr_10021994_1184;
                if (cf618) 
                    goto addr_1002196f_1210; else 
                    goto addr_1002192f_1259;
            }
        }
    } else {
        addr_100218e4_1267:
        ++esp643;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
        goto addr_100218e6_1257;
    }
    __asm__("outsd ");
    ++eax616;
    ++ebp33;
    zf684 = reinterpret_cast<uint1_t>(ebp33 == 0);
    sf683 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    goto addr_1002198f_1121;
    addr_100218e6_1257:
    eax616 = eax616 + 1 + 1;
    --edx579;
    esp749 = esp643 - 4;
    *reinterpret_cast<void***>(esp749) = eax616;
    ecx434 = ecx434 + 1 + 1;
    esp643 = esp749 - 4;
    *reinterpret_cast<void***>(esp643) = esi293;
    ebp33 = ebp33 - 1 + 1 + 1;
    zf684 = reinterpret_cast<uint1_t>(ebp33 == 0);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    goto addr_100218fa_1101;
    addr_10021872_1258:
    if (0) {
        goto addr_100218e4_1267;
    }
    addr_10021809_1066:
    __asm__("popad ");
    if (zf659) {
        addr_10021878_1270:
        esp643 = esp643 - 4;
        *reinterpret_cast<void***>(esp643) = ebx16;
        goto addr_10021879_1216;
    } else {
        addr_1002180f_1064:
        if (below_or_equal658) {
            addr_10021876_1251:
            ++eax616;
            goto addr_10021878_1270;
        } else {
            esp750 = esp643 - 4;
            *reinterpret_cast<void***>(esp750) = edi32;
            --esi293;
            esp657 = esp750 + 1;
            eax616 = eax616 - 1 - 1;
            __asm__("outsd ");
            if (!cf618) {
                addr_1002188d_1219:
                esp643 = esp657 - 4;
                *reinterpret_cast<void***>(esp643) = edi32;
                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ 80);
                cf618 = 0;
                zf751 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax616) == 0);
                of752 = 0;
                below_or_equal686 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf751));
                __asm__("popad ");
                if (zf751) {
                    addr_10021907_1272:
                    __asm__("insb ");
                    if (of752) {
                        addr_10021972_1211:
                        esp643 = esp643 - 4;
                        *reinterpret_cast<void***>(esp643) = edx579;
                        ecx434 = ecx434 - 1 + 1;
                        goto addr_10021975_1273;
                    } else {
                        if (cf618) 
                            goto addr_1002194f_1202;
                        *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
                        edx579 = *reinterpret_cast<void***>(esp643);
                        esp682 = esp643 + 4;
                        tmp8_753 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 12) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579 + 1)));
                        cf618 = reinterpret_cast<uint1_t>(tmp8_753 < *reinterpret_cast<unsigned char*>(ebx16 + 12));
                        *reinterpret_cast<unsigned char*>(ebx16 + 12) = tmp8_753;
                        goto addr_10021916_1087;
                    }
                } else {
                    if (0) {
                        addr_10021904_1095:
                        if (below_or_equal686) {
                            addr_10021975_1273:
                            --esi293;
                            esp643 = esp643 - 4;
                            *reinterpret_cast<void***>(esp643) = esp643;
                            goto addr_10021977_1261;
                        } else {
                            esp643 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 72) * 0x65);
                            cf618 = __intrinsic();
                            of752 = __intrinsic();
                            goto addr_10021907_1272;
                        }
                    } else {
                        ++eax616;
                        *reinterpret_cast<void***>(edx579) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx579)) ^ reinterpret_cast<unsigned char>(esi293));
                        goto addr_10021898_1249;
                    }
                }
            } else {
                addr_10021819_1062:
                esp674 = esp657 + 1;
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                goto addr_1002181e_1085;
            }
        }
    }
    addr_100217a0_1067:
    if (below_or_equal658) {
        addr_10021807_1247:
        goto addr_10021809_1066;
    } else {
        esp632 = esp643 - 4;
        *reinterpret_cast<void***>(esp632) = edi32;
        --esi293;
        goto addr_100217a5_1084;
    }
    addr_100216e8_1073:
    __asm__("aas ");
    goto addr_100216e9_1046;
    addr_10021683_1074:
    __asm__("outsb ");
    if (zf631) 
        goto addr_100216c6_1071;
    ++ebp33;
    zf620 = reinterpret_cast<uint1_t>(ebp33 == 0);
    __asm__("insb ");
    goto addr_10021688_1081;
    addr_10021a39_1113:
    eax616 = eax616 + 1 + 1;
    ecx434 = ecx434 - 1 + 1;
    goto addr_10021a3d_1167;
    addr_100219c0_1114:
    goto addr_100219c1_1118;
    addr_10021cbe_1137:
    __asm__("insd ");
    __asm__("outsb ");
    if (zf705) {
        addr_10021d04_1281:
        if (below_or_equal706) {
            addr_10021d6b_1282:
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (zf705) {
                addr_10021db2_1283:
                if (zf705) {
                    addr_10021df4_1284:
                    if (zf705) {
                        addr_10021e36_1285:
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                        cf618 = __intrinsic();
                        eax616 = eax616 + 1 + 1;
                        esp754 = esp704 - 4;
                        *reinterpret_cast<void***>(esp754) = ebp33;
                        ++ecx434;
                        ++ebp33;
                        goto addr_10021e42_1286;
                    } else {
                        esp755 = esp704 + 1;
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                    }
                } else {
                    esp756 = esp704 + 1;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                    goto addr_10021dbe_1289;
                }
            } else {
                addr_10021d72_1290:
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                esp757 = esp704 + 1 - 4;
                *reinterpret_cast<void***>(esp757) = ebp33;
                eax616 = *reinterpret_cast<void***>(esp757);
                esp758 = esp757 + 4 - 4;
                *reinterpret_cast<void***>(esp758) = eax616;
                ecx434 = ecx434 + 1 + 1;
                esp704 = esp758 - 4;
                *reinterpret_cast<void***>(esp704) = esi293;
                ebp33 = ebp33 + 1 + 1;
                zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                goto addr_10021d88_1291;
            }
        } else {
            __asm__("outsb ");
            if (zf705) {
                addr_10021d49_1293:
                ++edi32;
                eax759 = eax616 + 1 + 1 + 1;
                edx579 = *reinterpret_cast<void***>(esp704);
                esp756 = esp704 + 4;
                *reinterpret_cast<void***>(eax759) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax759)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax759)));
                eax616 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax759) & 0x70553f0f);
                cf618 = 0;
                zf705 = reinterpret_cast<uint1_t>(eax616 == 0);
                of760 = 0;
                __asm__("popad ");
                if (zf705) {
                    addr_10021dbe_1289:
                    esp761 = esp756 - 4;
                    *reinterpret_cast<void***>(esp761) = ebp33;
                    eax616 = *reinterpret_cast<void***>(esp761);
                    esp762 = esp761 + 4 - 4;
                    *reinterpret_cast<void***>(esp762) = eax616;
                    ecx434 = ecx434 + 1 + 1;
                    esp704 = esp762 - 4;
                    *reinterpret_cast<void***>(esp704) = esi293;
                    ebp33 = ebp33 + 1 + 1;
                    zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                    __asm__("insb ");
                    __asm__("insd ");
                    goto addr_10021dc8_1294;
                } else {
                    esp704 = esp756 - 4;
                    *reinterpret_cast<void***>(esp704) = esp704;
                    __asm__("outsd ");
                    __asm__("outsd ");
                    __asm__("insb ");
                    if (zf705) 
                        goto addr_10021dc8_1294;
                    if (0) 
                        goto addr_10021da1_1297; else 
                        goto addr_10021d61_1298;
                }
            } else {
                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
                edx579 = *reinterpret_cast<void***>(esp704);
                esp704 = esp704 + 4;
                tmp8_763 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax616 + 10) + reinterpret_cast<unsigned char>(ecx434));
                cf764 = tmp8_763 < *reinterpret_cast<unsigned char*>(eax616 + 10);
                *reinterpret_cast<unsigned char*>(eax616 + 10) = tmp8_763;
                __asm__("aas ");
                --ebp33;
                zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                if (!cf764) 
                    goto addr_10021d88_1291;
                __asm__("popad ");
                ++ebx16;
                __asm__("popad ");
                goto addr_10021d1a_1301;
            }
        }
    } else {
        ++esp704;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
        goto addr_10021cc6_1303;
    }
    addr_10021dfa_1304:
    goto addr_10021e00_1305;
    addr_10021da1_1297:
    if (of760) {
        addr_10021de3_1306:
        if (of760) {
            addr_10021e25_1307:
            __asm__("insb ");
            eax616 = eax616 + 1 - 1;
            esp765 = esp704 - 4;
            *reinterpret_cast<void***>(esp765) = edi32;
            esp766 = esp765 + 1;
            ++ebp33;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp33) {
                goto addr_10021e76_1309;
            } else {
                esp704 = esp766 + 1;
                goto addr_10021e36_1285;
            }
        } else {
            esp704 = esp704 - 4;
            *reinterpret_cast<void***>(esp704) = esp704;
            __asm__("outsd ");
            if (!zf705) {
                addr_10021e4c_1312:
                if (!cf618) {
                    addr_10021ec2_1313:
                    esp767 = esp704 + 1;
                    ++ebp33;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp33) {
                        addr_10021f0b_1314:
                        esp768 = esp767 - 4;
                        *reinterpret_cast<void***>(esp768) = ebp33;
                        ++ebp33;
                        esp769 = esp768 + 4 - 4;
                        *reinterpret_cast<void***>(esp769) = *reinterpret_cast<void***>(esp768);
                        ecx434 = ecx434 + 1 + 1;
                        esp766 = esp769 - 4;
                        *reinterpret_cast<void***>(esp766) = ebp33;
                        --ebx16;
                        zf770 = ebx16 == 0;
                        if (reinterpret_cast<signed char>(ebx16) >= reinterpret_cast<signed char>(0)) {
                            addr_10021f7d_1315:
                            ++esp766;
                            ++ebp33;
                            zf770 = ebp33 == 0;
                            __asm__("insb ");
                            __asm__("insd ");
                            __asm__("outsb ");
                            goto addr_10021f83_1316;
                        } else {
                            __asm__("outsd ");
                            goto addr_10021f1c_1318;
                        }
                    } else {
                        esp771 = esp767 + 1 - 4;
                        *reinterpret_cast<void***>(esp771) = ebp33;
                        ++ecx434;
                        ++ebp33;
                        esp766 = esp771 + 4;
                        goto addr_10021ed9_1320;
                    }
                } else {
                    addr_10021e4f_1321:
                    esp772 = reinterpret_cast<struct s825*>(*reinterpret_cast<unsigned char*>(edx579 + 0x6c) * 0x40404065);
                    edx579 = esp772->f0;
                    esp766 = reinterpret_cast<void**>(&esp772->f4);
                    tmp8_773 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax616 + 11) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                    cf618 = reinterpret_cast<uint1_t>(tmp8_773 < *reinterpret_cast<unsigned char*>(eax616 + 11));
                    *reinterpret_cast<unsigned char*>(eax616 + 11) = tmp8_773;
                    __asm__("aas ");
                    --edi32;
                    goto addr_10021e5c_1322;
                }
            } else {
                esp704 = esp704 - 4;
                *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
                ++ebp33;
                zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                goto addr_10021df4_1284;
            }
        }
    } else {
        esp704 = esp704 - 4;
        *reinterpret_cast<void***>(esp704) = esp704;
        __asm__("outsd ");
        if (!zf705) {
            addr_10021e0a_1325:
            __asm__("outsb ");
            goto addr_10021e0d_1326;
        } else {
            addr_10021da7_1327:
            esp704 = esp704 - 4;
            *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
            ++ebp33;
            zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            goto addr_10021db2_1283;
        }
    }
    addr_10021d61_1298:
    esp704 = esp704 - 4;
    *reinterpret_cast<void***>(esp704) = esp704;
    __asm__("outsd ");
    if (!zf705) {
        addr_10021dc8_1294:
        __asm__("outsb ");
        goto addr_10021dcb_1328;
    } else {
        esp704 = esp704 - 4;
        *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
        ++ebp33;
        zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
        goto addr_10021d6b_1282;
    }
    addr_10021c59_1138:
    __asm__("outsb ");
    if (zf705) {
        addr_10021c9c_1135:
        if (zf705) {
            addr_10021cdf_1330:
            if (zf705) {
                addr_10021d21_1331:
                goto addr_10021d23_1332;
            } else {
                esp704 = esp704 - 4;
                *reinterpret_cast<void***>(esp704) = esp704;
                __asm__("outsd ");
                if (!zf705) {
                    addr_10021d48_1334:
                    esp704 = esp704 - 4;
                    *reinterpret_cast<void***>(esp704) = ebx16;
                    goto addr_10021d49_1293;
                } else {
                    esp704 = esp704 - 4;
                    *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
                    ++ebp33;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp33) {
                        addr_10021d32_1336:
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                        eax616 = eax616 + 1 + 1;
                        esp774 = esp704 + 1 - 4;
                        *reinterpret_cast<void***>(esp774) = ebp33;
                        ++ebp33;
                        esp775 = esp774 - 4;
                        *reinterpret_cast<void***>(esp775) = eax616;
                        ecx434 = ecx434 + 1 - 1 + 1;
                        zf705 = reinterpret_cast<uint1_t>(ecx434 == 0);
                        esp704 = esp775 - 4;
                        *reinterpret_cast<void***>(esp704) = ebp33;
                        goto addr_10021d43_1337;
                    } else {
                        ++esp704;
                        goto addr_10021cf3_1339;
                    }
                }
            }
        } else {
            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 48));
            goto addr_10021ca2_1341;
        }
    } else {
        *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
        edx579 = *reinterpret_cast<void***>(esp704);
        esp704 = esp704 + 4;
        *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
        *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
        cf618 = 0;
        --edi32;
        __asm__("outsb ");
        --ebx16;
        zf705 = reinterpret_cast<uint1_t>(ebx16 == 0);
        sf776 = reinterpret_cast<signed char>(ebx16) < reinterpret_cast<signed char>(0);
        if (!sf776) 
            goto addr_10021cb1_1343;
    }
    addr_10021c6b_1146:
    __asm__("outsd ");
    goto addr_10021c6c_1148;
    addr_10021adc_1186:
    __asm__("outsb ");
    if (zf694) {
        addr_10021b20_1344:
        ++ebp33;
        eax777 = *reinterpret_cast<void***>(esp643);
        esp778 = esp643 + 4;
        edx579 = *reinterpret_cast<void***>(esp778);
        esp779 = esp778 + 4;
        *reinterpret_cast<void***>(eax777) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax777)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax777)));
        __asm__("aas ");
        __asm__("aas ");
        *reinterpret_cast<unsigned char*>(esi293 + 97) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi293 + 97) ^ reinterpret_cast<unsigned char>(ecx434));
        cf618 = 0;
        zf780 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(esi293 + 97) == 0);
        if (zf780) {
            addr_10021b98_1345:
            eax616 = *reinterpret_cast<void***>(esp779);
            esp781 = esp779 + 4;
            edx579 = *reinterpret_cast<void***>(esp781);
            *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
            cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx434) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)));
            ecx434 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx434) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)));
            __asm__("aas ");
            --edi32;
            zf701 = edi32 == 0;
            sf702 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
            of703 = __intrinsic();
            __asm__("outsb ");
            esp700 = esp781 + 4 - 4;
            *reinterpret_cast<void***>(esp700) = eax616;
            goto addr_10021ba2_1126;
        } else {
            if (zf780) {
                addr_10021b96_1347:
                ++ebp33;
                goto addr_10021b98_1345;
            } else {
                esp782 = esp779 - 4;
                *reinterpret_cast<void***>(esp782) = edi32;
                --esi293;
                esp643 = esp782 + 1;
                eax616 = eax777 - 1 - 1;
                goto addr_10021b36_1157;
            }
        }
    } else {
        ++esp643;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
        cf618 = __intrinsic();
        goto addr_10021ae7_1350;
    }
    addr_10021a6d_1189:
    if (below_or_equal693) {
        addr_10021ad8_1164:
        ++ebp33;
        zf694 = reinterpret_cast<uint1_t>(ebp33 == 0);
        __asm__("insb ");
        __asm__("insd ");
        goto addr_10021adb_1185;
    } else {
        if (cf618) {
            addr_10021ab3_1352:
            __asm__("outsb ");
            goto addr_10021ab6_1179;
        } else {
            esp783 = esp643 - 4;
            *reinterpret_cast<void***>(esp783) = ebx16;
            __asm__("arpl [eax+0x65], bp");
            __asm__("insd ");
            __asm__("popad ");
            ++eax616;
            esp643 = esp783 + 1;
            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
            goto addr_10021a7c_1354;
        }
    }
    addr_10021a95_1196:
    ++ecx434;
    esp643 = esp643 - 4;
    *reinterpret_cast<void***>(esp643) = esi293;
    ++ebp33;
    zf720 = reinterpret_cast<uint1_t>(ebp33 == 0);
    below_or_equal784 = reinterpret_cast<uint1_t>(cf618 | zf720);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    goto addr_10021a9d_1355;
    addr_10021a1d_1200:
    if (of724) {
        goto addr_10021a90_1195;
    }
    if (cf618) 
        goto addr_10021a95_1196;
    ++eax616;
    ++ebp33;
    zf720 = reinterpret_cast<uint1_t>(ebp33 == 0);
    sf683 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
    below_or_equal784 = reinterpret_cast<uint1_t>(cf618 | zf720);
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (zf720) {
        addr_10021a7c_1354:
        eax616 = eax616 + 1 + 1;
        esp785 = esp643 - 4;
        *reinterpret_cast<void***>(esp785) = ebx16;
        ++edi32;
        --edx579;
        esp643 = esp785 - 4;
        *reinterpret_cast<void***>(esp643) = edi32;
        goto addr_10021a88_1198;
    } else {
        if (cf618) {
            addr_10021a9d_1355:
            if (zf720) {
                addr_10021aef_1360:
                --ecx434;
                ++ebx16;
                __asm__("insb ");
                __asm__("popad ");
                if (!cf618) {
                    addr_10021b68_1155:
                    esp643 = esp643 - 4;
                    *reinterpret_cast<void***>(esp643) = ecx434;
                    ++ecx434;
                    ++ebp33;
                    goto addr_10021b70_1173;
                } else {
                    --ecx434;
                    __asm__("outsb ");
                    __asm__("outsw ");
                    ++eax616;
                    *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 88));
                    edx579 = *reinterpret_cast<void***>(esp643);
                    esp643 = esp643 + 4;
                    goto addr_10021afe_1194;
                }
            } else {
                if (cf618) {
                    addr_10021b10_1363:
                    __asm__("outsd ");
                    if (!cf618) {
                        addr_10021b87_1171:
                        if (zf720) {
                            addr_10021bca_1160:
                            esp786 = esp643 - 4;
                            *reinterpret_cast<void***>(esp786) = ebp33;
                            ++ecx434;
                            ++ebp33;
                            eax616 = *reinterpret_cast<void***>(esp786);
                            esp787 = esp786 + 4 - 4;
                            *reinterpret_cast<void***>(esp787) = eax616;
                            ++edx579;
                            zf788 = edx579 == 0;
                            esp789 = esp787 - 4;
                            *reinterpret_cast<void***>(esp789) = ebp33;
                            esp704 = esp789 - 4;
                            *reinterpret_cast<void***>(esp704) = eax616;
                            if (cf618) {
                                addr_10021c45_1364:
                                esp790 = esp704 - 4;
                                *reinterpret_cast<void***>(esp790) = ebp33;
                                ++ecx434;
                                ++ebp33;
                                eax616 = *reinterpret_cast<void***>(esp790);
                                esp704 = esp790 + 4;
                                goto addr_10021c4e_1365;
                            } else {
                                if (__intrinsic()) {
                                    addr_10021c3d_1367:
                                    if (zf788) {
                                        addr_10021c80_1368:
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        if (zf788) {
                                            addr_10021cc6_1303:
                                            goto addr_10021cca_1132;
                                        } else {
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                            esp791 = esp704 + 1 - 4;
                                            *reinterpret_cast<void***>(esp791) = ebp33;
                                            ++ebp33;
                                            eax616 = *reinterpret_cast<void***>(esp791);
                                            esp792 = esp791 + 4 - 4;
                                            *reinterpret_cast<void***>(esp792) = eax616;
                                            ecx434 = ecx434 + 1 + 1;
                                            goto addr_10021c96_1370;
                                        }
                                    } else {
                                        ++esp704;
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                        cf618 = __intrinsic();
                                        goto addr_10021c45_1364;
                                    }
                                } else {
                                    if (cf618) {
                                        addr_10021c4e_1365:
                                        esp700 = esp704 - 4;
                                        *reinterpret_cast<void***>(esp700) = eax616;
                                        ++ecx434;
                                        goto addr_10021c50_1131;
                                    } else {
                                        if (reinterpret_cast<signed char>(edx579) >= reinterpret_cast<signed char>(0)) {
                                            addr_10021c25_1142:
                                            *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                                            cf618 = 0;
                                            --edi32;
                                            __asm__("outsb ");
                                            --ecx434;
                                            zf793 = ecx434 == 0;
                                            __asm__("outsb ");
                                            if (__intrinsic()) {
                                                addr_10021ca2_1341:
                                                ++eax616;
                                                edx579 = *reinterpret_cast<void***>(esp704);
                                                *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                *reinterpret_cast<void***>(edx579) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx579)) | 63);
                                                --edi32;
                                                __asm__("outsb ");
                                                esp704 = esp704 + 4 + 1;
                                                zf705 = reinterpret_cast<uint1_t>(esp704 == 0);
                                                sf776 = reinterpret_cast<signed char>(esp704) < reinterpret_cast<signed char>(0);
                                                if (1) {
                                                    addr_10021d23_1332:
                                                    if (!zf705) {
                                                        addr_10021d88_1291:
                                                        if (zf705) {
                                                            addr_10021dcb_1328:
                                                            if (zf705) {
                                                                addr_10021e0d_1326:
                                                                if (zf705) 
                                                                    goto addr_10021e4f_1321;
                                                            } else {
                                                                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 75));
                                                                ++eax616;
                                                                edx579 = *reinterpret_cast<void***>(esp704);
                                                                *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                                                __asm__("cdq ");
                                                                *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) | 63);
                                                                cf618 = 0;
                                                                zf705 = 0;
                                                                of760 = 0;
                                                                esp754 = esp704 + 4 - 4;
                                                                *reinterpret_cast<void***>(esp754) = edx579;
                                                                __asm__("insd ");
                                                                __asm__("outsd ");
                                                                if (0) {
                                                                    addr_10021e42_1286:
                                                                    --edx579;
                                                                    esp794 = esp754 - 4;
                                                                    *reinterpret_cast<void***>(esp794) = eax616;
                                                                    esp795 = esp794 - 4;
                                                                    *reinterpret_cast<void***>(esp795) = eax616;
                                                                    esp704 = esp795 - 4;
                                                                    *reinterpret_cast<void***>(esp704) = ebp33;
                                                                    ecx434 = ecx434 + 1 + 1 - 1 + 1;
                                                                    __asm__("arpl [ebx+0x65], sp");
                                                                    goto addr_10021e4c_1312;
                                                                } else {
                                                                    esp704 = esp754 - 4;
                                                                    *reinterpret_cast<void***>(esp704) = esp704;
                                                                    __asm__("outsd ");
                                                                    __asm__("outsd ");
                                                                    __asm__("insb ");
                                                                    if (0) 
                                                                        goto addr_10021e4c_1312; else 
                                                                        goto addr_10021de3_1306;
                                                                }
                                                            }
                                                        } else {
                                                            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
                                                            edx579 = *reinterpret_cast<void***>(esp704);
                                                            esp755 = esp704 + 4;
                                                            tmp8_796 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi32 + 0x63413f03) + *reinterpret_cast<signed char*>(&eax616 + 1));
                                                            cf618 = reinterpret_cast<uint1_t>(tmp8_796 < *reinterpret_cast<unsigned char*>(edi32 + 0x63413f03));
                                                            *reinterpret_cast<unsigned char*>(edi32 + 0x63413f03) = tmp8_796;
                                                            zf705 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(edi32 + 0x63413f03) == 0);
                                                            of760 = __intrinsic();
                                                            if (zf705) 
                                                                goto addr_10021e00_1305;
                                                            if (cf618 | zf705) 
                                                                goto addr_10021dfa_1304; else 
                                                                goto addr_10021d99_1378;
                                                        }
                                                    } else {
                                                        esp704 = esp704 - 4;
                                                        *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
                                                        ++ebp33;
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (!ebp33) 
                                                            goto addr_10021d72_1290; else 
                                                            goto addr_10021d32_1336;
                                                    }
                                                } else {
                                                    if (0) {
                                                        addr_10021d20_1381:
                                                        goto addr_10021d21_1331;
                                                    } else {
                                                        addr_10021cb1_1343:
                                                        if (!sf776) {
                                                            addr_10021cf3_1339:
                                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                            esp797 = esp704 - 4;
                                                            *reinterpret_cast<void***>(esp797) = ebp33;
                                                            ebp798 = ebp33 + 1;
                                                            eax616 = *reinterpret_cast<void***>(esp797);
                                                            esp799 = esp797 + 4 - 4;
                                                            *reinterpret_cast<void***>(esp799) = eax616;
                                                            ecx434 = ecx434 + 1 + 1;
                                                            esp704 = esp799 - 4;
                                                            *reinterpret_cast<void***>(esp704) = ebp798;
                                                            ebp33 = ebp798 + 1;
                                                            zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                            below_or_equal706 = reinterpret_cast<uint1_t>(__intrinsic() | zf705);
                                                            goto addr_10021d04_1281;
                                                        } else {
                                                            esp704 = esp704 - 4;
                                                            *reinterpret_cast<void***>(esp704) = esp704;
                                                            __asm__("outsd ");
                                                            if (!zf705) {
                                                                addr_10021d1a_1301:
                                                                __asm__("insb ");
                                                                __asm__("insb ");
                                                                eax616 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(eax616 + 84) * 0x6f);
                                                                zf705 = __undefined();
                                                                goto addr_10021d20_1381;
                                                            } else {
                                                                esp704 = esp704 - 4;
                                                                *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
                                                                ++ebp33;
                                                                zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                below_or_equal706 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf705));
                                                                __asm__("insb ");
                                                                goto addr_10021cbe_1137;
                                                            }
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (zf793) {
                                                    addr_10021c6f_1149:
                                                    --ebp33;
                                                    __asm__("outsd ");
                                                    if (cf618 | reinterpret_cast<uint1_t>(ebp33 == 0)) {
                                                        addr_10021cd8_1133:
                                                        --edi32;
                                                        __asm__("outsb ");
                                                        ++ebp33;
                                                        zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                        below_or_equal800 = reinterpret_cast<uint1_t>(cf618 | zf705);
                                                        goto addr_10021cdc_1385;
                                                    } else {
                                                        ++eax616;
                                                        zf705 = reinterpret_cast<uint1_t>(eax616 == 0);
                                                        below_or_equal800 = reinterpret_cast<uint1_t>(cf618 | zf705);
                                                        esp704 = esp704 - 4;
                                                        *reinterpret_cast<void***>(esp704) = esp704;
                                                        __asm__("outsd ");
                                                        if (!zf705) {
                                                            addr_10021cdc_1385:
                                                            if (below_or_equal800) {
                                                                addr_10021d43_1337:
                                                                if (zf705) {
                                                                    goto addr_10021da7_1327;
                                                                } else {
                                                                    ++edi32;
                                                                    --ebp33;
                                                                    goto addr_10021d48_1334;
                                                                }
                                                            } else {
                                                                __asm__("outsb ");
                                                                goto addr_10021cdf_1330;
                                                            }
                                                        } else {
                                                            esp704 = esp704 - 4;
                                                            *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
                                                            ++ebp33;
                                                            zf788 = ebp33 == 0;
                                                            __asm__("insb ");
                                                            goto addr_10021c80_1368;
                                                        }
                                                    }
                                                } else {
                                                    esp792 = esp704 - 4;
                                                    *reinterpret_cast<void***>(esp792) = esp792;
                                                    __asm__("outsd ");
                                                    if (!zf793) {
                                                        addr_10021c96_1370:
                                                        esp704 = esp792 - 4;
                                                        *reinterpret_cast<void***>(esp704) = esi293;
                                                        ++ebp33;
                                                        zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        goto addr_10021c9c_1135;
                                                    } else {
                                                        esp704 = esp792 - 4;
                                                        *reinterpret_cast<void***>(esp704) = reinterpret_cast<void**>(0x444e5748);
                                                        ++ebp33;
                                                        zf788 = ebp33 == 0;
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        goto addr_10021c3d_1367;
                                                    }
                                                }
                                            }
                                        } else {
                                            __asm__("outsb ");
                                            __asm__("outsw ");
                                            ++eax616;
                                            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 72));
                                            cf618 = 0;
                                            esp801 = esp704 - 4;
                                            *reinterpret_cast<void***>(esp801) = eax616;
                                            ++ecx434;
                                            esp802 = esp801 - 4;
                                            *reinterpret_cast<void***>(esp802) = esi293;
                                            esp700 = esp802 - 4;
                                            *reinterpret_cast<void***>(esp700) = esi293;
                                            __asm__("popad ");
                                            __asm__("insb ");
                                            if (ecx434) 
                                                goto addr_10021c50_1131;
                                            ++eax616;
                                            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 49));
                                            goto addr_10021bed_1144;
                                        }
                                    }
                                }
                            }
                        } else {
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                            esp779 = esp643 + 1 - 4;
                            *reinterpret_cast<void***>(esp779) = ebp33;
                            ++ecx434;
                            goto addr_10021b96_1347;
                        }
                    } else {
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                        esp643 = esp643 + 1 - 4;
                        *reinterpret_cast<void***>(esp643) = ecx434;
                        ++ecx434;
                        goto addr_10021b20_1344;
                    }
                } else {
                    if (below_or_equal784) {
                        addr_10021b0c_1175:
                        esp803 = esp643 - 4;
                        *reinterpret_cast<void***>(esp803) = edi32;
                        --esi293;
                        esp643 = esp803 + 1;
                        --eax616;
                        zf720 = reinterpret_cast<uint1_t>(eax616 == 0);
                        goto addr_10021b10_1363;
                    } else {
                        if (cf618) {
                            addr_10021ae7_1350:
                            eax616 = eax616 + 1 + 1;
                            esp804 = esp643 - 4;
                            *reinterpret_cast<void***>(esp804) = ebx16;
                            ++edi32;
                            esp805 = esp804 - 4;
                            *reinterpret_cast<void***>(esp805) = eax616;
                            ++ecx434;
                            esp643 = esp805 - 4;
                            *reinterpret_cast<void***>(esp643) = ebp33;
                            goto addr_10021aef_1360;
                        } else {
                            *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 80));
                            goto addr_10021aa9_1400;
                        }
                    }
                }
            }
        } else {
            addr_10021a2e_1111:
            if (sf683) {
                addr_10021aa9_1400:
                esp806 = esp643 - 4;
                *reinterpret_cast<void***>(esp806) = eax616;
                esp807 = esp806 - 4;
                *reinterpret_cast<void***>(esp807) = ebp33;
                ecx434 = ecx434 + 1 + 1 - 1;
                esp643 = esp807 - 4;
                *reinterpret_cast<void***>(esp643) = ebp33;
                __asm__("outsb ");
                ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 0x6f) * 0x77);
                goto addr_10021ab3_1352;
            } else {
                ++eax616;
                ++esp643;
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                goto addr_10021a39_1113;
            }
        }
    }
    *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
    edx579 = *reinterpret_cast<void***>(esp704);
    esp766 = esp704 + 4;
    tmp8_808 = reinterpret_cast<unsigned char>(g65473f06 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
    cf618 = reinterpret_cast<uint1_t>(tmp8_808 < g65473f06);
    g65473f06 = tmp8_808;
    zf809 = reinterpret_cast<uint1_t>(g65473f06 == 0);
    below_or_equal810 = reinterpret_cast<uint1_t>(cf618 | zf809);
    if (zf809) {
        addr_10021e5c_1322:
        __asm__("outsb ");
        esp811 = esp766 - 4;
        *reinterpret_cast<void***>(esp811) = esp811;
        esp812 = esp811 - 4;
        *reinterpret_cast<void***>(esp812) = reinterpret_cast<void**>(0x43656d65);
        esp813 = esp812 - 4;
        *reinterpret_cast<void***>(esp813) = reinterpret_cast<void**>(0x65676e61);
        esp814 = esp813 - 4;
        *reinterpret_cast<void***>(esp814) = edi32;
        esi815 = esi293 - 1;
        esp766 = esp814 + 1;
        ++ebp33;
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        if (!ebp33) {
            addr_10021eb6_1403:
            ++ebx16;
            esp816 = esp766 - 4;
            *reinterpret_cast<void***>(esp816) = reinterpret_cast<void**>(0x65676e61);
            esp704 = esp816 - 4;
            *reinterpret_cast<void***>(esp704) = edi32;
            esi293 = esi815 - 1;
            goto addr_10021ec2_1313;
        } else {
            addr_10021e76_1309:
            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
            esp817 = esp766 + 1 - 4;
            *reinterpret_cast<void***>(esp817) = ebp33;
            ebp818 = ebp33 + 1;
            esp819 = esp817 + 4 - 4;
            *reinterpret_cast<void***>(esp819) = *reinterpret_cast<void***>(esp817);
            ecx434 = ecx434 + 1 + 1;
            esp820 = esp819 - 4;
            *reinterpret_cast<void***>(esp820) = ebp818;
            esp821 = esp820 - 4;
            *reinterpret_cast<void***>(esp821) = esp821;
            esp822 = esp821 - 4;
            *reinterpret_cast<void***>(esp822) = reinterpret_cast<void**>(0x43656d65);
            esp766 = esp822 - 4;
            *reinterpret_cast<void***>(esp766) = reinterpret_cast<void**>(0x65676e61);
            ebp33 = ebp818 + 1;
            zf809 = reinterpret_cast<uint1_t>(ebp33 == 0);
            below_or_equal810 = reinterpret_cast<uint1_t>(__intrinsic() | zf809);
            goto addr_10021e93_1404;
        }
    } else {
        __asm__("arpl [ebx+0x65], sp");
        if (!cf618) {
            addr_10021e93_1404:
            if (below_or_equal810) {
                addr_10021efb_1406:
                esp823 = esp766 - 4;
                *reinterpret_cast<void***>(esp823) = edi32;
                esp766 = esp823 + 1;
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_10021f46_1407:
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                    esp824 = esp766 + 1 - 4;
                    *reinterpret_cast<void***>(esp824) = ebp33;
                    ++ebp33;
                    eax825 = *reinterpret_cast<void***>(esp824);
                    esp826 = esp824 + 4 - 4;
                    *reinterpret_cast<void***>(esp826) = eax825;
                    ecx434 = ecx434 + 1 + 1;
                    zf827 = ecx434 == 0;
                    esp828 = esp826 - 4;
                    *reinterpret_cast<void***>(esp828) = ebp33;
                    if (zf827) {
                        addr_10021fba_1408:
                        if (zf827) {
                            addr_10021ffc_1409:
                            esp829 = esp828 - 4;
                            *reinterpret_cast<void***>(esp829) = ebp33;
                            ++ecx434;
                            ++ebp33;
                            esp830 = esp829 + 4;
                            eax825 = *reinterpret_cast<void***>(esp830);
                            esp831 = esp830 + 4;
                            edx579 = *reinterpret_cast<void***>(esp831);
                            *reinterpret_cast<void***>(eax825) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                            esp832 = esp831 + 4 - 2;
                            *reinterpret_cast<void***>(esp832) = es22;
                            ++ebx16;
                            __asm__("popad ");
                            __asm__("outsb ");
                            esp833 = esp832 - 4;
                            *reinterpret_cast<void***>(esp833) = ebx16;
                            if (!ebx16) 
                                goto addr_10022056_1410;
                        } else {
                            esp766 = esp828 + 1;
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                            goto addr_10021fc6_1412;
                        }
                    } else {
                        --ebp33;
                        esp834 = esp828 - 4;
                        *reinterpret_cast<void***>(esp834) = ebx16;
                        ++edi32;
                        eax835 = eax825 + 1 + 1;
                        esp836 = esp834 - 4;
                        *reinterpret_cast<void***>(esp836) = eax835;
                        ++ecx434;
                        eax616 = eax835 + 1;
                        edx579 = *reinterpret_cast<void***>(esp836);
                        esp766 = esp836 + 4;
                        *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                        goto addr_10021f65_1414;
                    }
                } else {
                    addr_10021f06_1415:
                    esp767 = esp766 + 1;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                    cf618 = __intrinsic();
                    goto addr_10021f0b_1314;
                }
            } else {
                __asm__("outsb ");
                if (zf809) {
                    addr_10021ed9_1320:
                    eax616 = *reinterpret_cast<void***>(esp766);
                    esp837 = esp766 + 4;
                    edx579 = *reinterpret_cast<void***>(esp837);
                    *reinterpret_cast<void**>(&ebx16) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)) + 0xff);
                    *reinterpret_cast<void**>(&ebx16 + 1) = reinterpret_cast<void*>(0xff);
                    --edi32;
                    __asm__("outsb ");
                    __asm__("outsd ");
                    ++ebx16;
                    esp766 = esp837 + 4 - 4;
                    *reinterpret_cast<void***>(esp766) = reinterpret_cast<void**>(0x57646c69);
                    __asm__("arpl [ebp+0x74], si");
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax616 + reinterpret_cast<unsigned char>(ebp33) * 2) + 83) * 0x74726f68 + 1);
                    __asm__("outsd ");
                    if (esi293) {
                        addr_10021f66_1417:
                        edi32 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edi32) | **reinterpret_cast<unsigned char**>(&ebx16)) - 1);
                        __asm__("outsb ");
                        esp838 = esp766 - 4;
                        *reinterpret_cast<void***>(esp838) = edi32;
                        __asm__("insd ");
                        esp839 = esp838 - 4;
                        *reinterpret_cast<void***>(esp839) = esp839;
                        esp840 = esp839 - 4;
                        *reinterpret_cast<void***>(esp840) = reinterpret_cast<void**>(0x43656d65);
                        esp841 = esp840 - 4;
                        *reinterpret_cast<void***>(esp841) = reinterpret_cast<void**>(0x65676e61);
                        goto addr_10021f77_1418;
                    } else {
                        goto addr_10021efb_1406;
                    }
                } else {
                    edx579 = *reinterpret_cast<void***>(esp766);
                    esp766 = esp766 + 4;
                    tmp8_842 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x6e4f3f0a) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                    cf618 = reinterpret_cast<uint1_t>(tmp8_842 < *reinterpret_cast<unsigned char*>(ebx16 + 0x6e4f3f0a));
                    *reinterpret_cast<unsigned char*>(ebx16 + 0x6e4f3f0a) = tmp8_842;
                    --ecx434;
                    zf770 = ecx434 == 0;
                    __asm__("insd ");
                    __asm__("insd ");
                    if (cf618) {
                        addr_10021f1c_1318:
                        __asm__("popad ");
                        if (cf618) {
                            addr_10021f83_1316:
                            if (zf770) {
                                addr_10021fc6_1412:
                                esp843 = esp766 - 4;
                                *reinterpret_cast<void***>(esp843) = ebp33;
                                ++ebp33;
                                esp844 = esp843 + 4;
                                ecx434 = ecx434 + 1 - 1;
                                eax825 = *reinterpret_cast<void***>(esp843) + 1;
                                edx579 = *reinterpret_cast<void***>(esp844);
                                esp845 = esp844 + 4;
                                tmp8_846 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_846) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
                                *reinterpret_cast<void***>(eax825) = tmp8_846;
                                zf848 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax825) == 0);
                                if (cf847 | zf848) {
                                    addr_10021fdc_1421:
                                    if (zf848) {
                                        addr_10022047_1422:
                                        if (!zf848) {
                                            addr_100220ac_1423:
                                            edx579 = *reinterpret_cast<void***>(esp845);
                                            esp849 = esp845 + 4;
                                            *reinterpret_cast<void**>(&edx579 + 1) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579 + 1)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                            *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(0xff);
                                            cf847 = 0;
                                            ++edi32;
                                            if (!edi32) {
                                                addr_1002210c_1424:
                                                ++ebp33;
                                                __asm__("insb ");
                                                __asm__("insd ");
                                                __asm__("outsb ");
                                                if (!ebp33) {
                                                    addr_10022158_1425:
                                                    esp849 = esp849 + 1 - 4;
                                                    *reinterpret_cast<void***>(esp849) = esi293;
                                                    ++ebp33;
                                                    zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                    of851 = __intrinsic();
                                                    below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    goto addr_1002215e_1426;
                                                } else {
                                                    addr_10022118_1427:
                                                    esp845 = esp849 + 1;
                                                    goto addr_10022119_1428;
                                                }
                                            } else {
                                                ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 100) * 0x6c43776f);
                                                cf847 = __intrinsic();
                                                of853 = __intrinsic();
                                                sf854 = __undefined();
                                                zf850 = __undefined();
                                                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                __asm__("popad ");
                                                goto addr_100220bd_1430;
                                            }
                                        } else {
                                            addr_10022049_1431:
                                            esp833 = esp845 - 4;
                                            *reinterpret_cast<void***>(esp833) = reinterpret_cast<void**>(0x444e5748);
                                            ++ebp33;
                                            __asm__("insb ");
                                            __asm__("insd ");
                                            __asm__("outsb ");
                                            if (!ebp33) {
                                                addr_10022096_1432:
                                                --edx579;
                                                esp855 = esp833 - 4;
                                                *reinterpret_cast<void***>(esp855) = eax825;
                                                esp856 = esp855 - 4;
                                                *reinterpret_cast<void***>(esp856) = eax825;
                                                esp857 = esp856 - 4;
                                                *reinterpret_cast<void***>(esp857) = esi293;
                                                esp858 = esp857 + 1 - 4;
                                                *reinterpret_cast<void***>(esp858) = ebp33;
                                                ecx434 = ecx434 + 1 + 1 - 1;
                                                eax825 = *reinterpret_cast<void***>(esp858);
                                                __asm__("insd ");
                                                __asm__("insb ");
                                                esp845 = esp858 + 4 - 4;
                                                *reinterpret_cast<void***>(esp845) = eax825;
                                                __asm__("popad ");
                                                if (cf847) {
                                                    addr_10022119_1428:
                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                    ++ecx434;
                                                    ebp33 = ebp33 - 1 + 1;
                                                    esp859 = esp845 + 4;
                                                    edi32 = edi32 + 1 + 1;
                                                    eax860 = *reinterpret_cast<void***>(esp845) + 1;
                                                    edx579 = *reinterpret_cast<void***>(esp859);
                                                    esp849 = esp859 + 4;
                                                    *reinterpret_cast<void***>(eax860) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax860)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax860)));
                                                    eax825 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax860) & 0x65473f07);
                                                    cf847 = 0;
                                                    zf850 = reinterpret_cast<uint1_t>(eax825 == 0);
                                                    sf854 = __intrinsic();
                                                    of853 = 0;
                                                    below_or_equal852 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf850));
                                                    if (zf850) {
                                                        addr_10022178_1433:
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        goto addr_1002217a_1434;
                                                    } else {
                                                        addr_10022133_1435:
                                                        __asm__("insb ");
                                                        __asm__("insd ");
                                                        __asm__("outsb ");
                                                        if (zf850) {
                                                            addr_1002217a_1434:
                                                            __asm__("outsb ");
                                                            if (zf850) {
                                                                addr_100221cf_1436:
                                                                eax861 = eax825 + 1 + 1;
                                                                esp862 = esp849 + 1 - 4;
                                                                *reinterpret_cast<void***>(esp862) = eax861;
                                                                esp863 = esp862 - 4;
                                                                *reinterpret_cast<void***>(esp863) = eax861;
                                                                esp864 = esp863 + 4;
                                                                eax825 = *reinterpret_cast<void***>(esp863) + 1;
                                                                edx579 = *reinterpret_cast<void***>(esp864);
                                                                *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                                                tmp32_865 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                                                cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_865) < reinterpret_cast<unsigned char>(edi32));
                                                                edi32 = tmp32_865;
                                                                ecx434 = ecx434 + 1 + 1 + 1;
                                                                esp849 = esp864 + 4 - 4;
                                                                *reinterpret_cast<void***>(esp849) = edx579;
                                                                *reinterpret_cast<int16_t*>(&eax825) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax825) + 1);
                                                                goto addr_100221e2_1437;
                                                            } else {
                                                                if (cf847) {
                                                                    if (cf847) {
                                                                        addr_10022234_1440:
                                                                        eax825 = eax825 + 1 + 1;
                                                                        esp866 = esp849 - 4;
                                                                        *reinterpret_cast<void***>(esp866) = ebp33;
                                                                        ++ecx434;
                                                                        ++edi32;
                                                                        --edx579;
                                                                        esp849 = esp866 - 4;
                                                                        *reinterpret_cast<void***>(esp849) = eax825;
                                                                        goto addr_1002223c_1441;
                                                                    } else {
                                                                        ++esp849;
                                                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                        goto addr_100221fa_1443;
                                                                    }
                                                                } else {
                                                                    if (below_or_equal852) 
                                                                        goto addr_100221ec_1445;
                                                                    if (cf847) 
                                                                        goto addr_100221c7_1447; else 
                                                                        goto addr_10022187_1448;
                                                                }
                                                            }
                                                        } else {
                                                            ++ebp33;
                                                            zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                            below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                            __asm__("insb ");
                                                            __asm__("insd ");
                                                            __asm__("outsb ");
                                                            if (zf850) {
                                                                addr_10022192_1450:
                                                                ++ecx434;
                                                                ++ebp33;
                                                                esp867 = esp849 + 4;
                                                                eax825 = *reinterpret_cast<void***>(esp867);
                                                                esp868 = esp867 + 4;
                                                                edx579 = *reinterpret_cast<void***>(esp868);
                                                                *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579 + 1)));
                                                                edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                                                cf847 = 0;
                                                                zf850 = reinterpret_cast<uint1_t>(edi32 == 0);
                                                                below_or_equal852 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf850));
                                                                esp849 = esp868 + 4 - 4;
                                                                *reinterpret_cast<void***>(esp849) = ecx434;
                                                                if (!zf850) {
                                                                    addr_10022203_1451:
                                                                    edx579 = *reinterpret_cast<void***>(esp849);
                                                                    tmp8_869 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                                                    cf870 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_869) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
                                                                    *reinterpret_cast<void***>(eax825) = tmp8_869;
                                                                    esp849 = esp849 + 4 - 2;
                                                                    *reinterpret_cast<void***>(esp849) = es22;
                                                                    tmp8_871 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32) + 0xff) + cf870);
                                                                    cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_871) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                                                    *reinterpret_cast<void***>(edi32) = tmp8_871;
                                                                    zf850 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(edi32) == 0);
                                                                    of851 = __intrinsic();
                                                                    below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                                    goto addr_10022209_1452;
                                                                } else {
                                                                    if (0) {
                                                                        addr_10022219_1454:
                                                                        goto addr_1002221f_1455;
                                                                    } else {
                                                                        --ecx434;
                                                                        zf850 = reinterpret_cast<uint1_t>(ecx434 == 0);
                                                                        of851 = __intrinsic();
                                                                        below_or_equal852 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf850));
                                                                        __asm__("outsb ");
                                                                        goto addr_100221a2_1457;
                                                                    }
                                                                }
                                                            } else {
                                                                addr_10022142_1458:
                                                                if (cf847) {
                                                                    goto addr_100221b4_1460;
                                                                }
                                                            }
                                                            if (below_or_equal852) {
                                                                addr_100221af_1462:
                                                                if (zf850) {
                                                                    addr_10022202_1463:
                                                                    eax825 = *reinterpret_cast<void***>(esp849);
                                                                    esp849 = esp849 + 4;
                                                                    goto addr_10022203_1451;
                                                                } else {
                                                                    if (cf847) {
                                                                        addr_10022223_1465:
                                                                        if (zf850) {
                                                                            goto addr_10022278_1467;
                                                                        } else {
                                                                            if (cf847) {
                                                                                addr_10022296_1469:
                                                                                ++eax825;
                                                                                goto addr_10022297_1470;
                                                                            } else {
                                                                                if (below_or_equal852) {
                                                                                    addr_10022292_1472:
                                                                                    --esi293;
                                                                                    esp849 = esp849 - 4;
                                                                                    *reinterpret_cast<void***>(esp849) = esp849;
                                                                                    eax825 = eax825 + 1 + 1;
                                                                                    goto addr_10022296_1469;
                                                                                } else {
                                                                                    if (cf847) {
                                                                                        addr_1002226d_1474:
                                                                                        if (zf850) 
                                                                                            goto addr_100222c0_1475; else 
                                                                                            goto addr_10022270_1476;
                                                                                    } else {
                                                                                        ++esp849;
                                                                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                        goto addr_10022234_1440;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    } else {
                                                                        addr_100221b4_1460:
                                                                        if (below_or_equal852) {
                                                                            addr_1002221f_1455:
                                                                            __asm__("insd ");
                                                                            __asm__("outsb ");
                                                                            goto addr_10022223_1465;
                                                                        } else {
                                                                            if (cf847) {
                                                                                addr_100221fa_1443:
                                                                                esp849 = esp849 - 4;
                                                                                *reinterpret_cast<void***>(esp849) = ebp33;
                                                                                ++ecx434;
                                                                                ++edi32;
                                                                                --ebx16;
                                                                                goto addr_10022202_1463;
                                                                            } else {
                                                                                addr_100221ba_1479:
                                                                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                                eax825 = eax825 + 1 + 1;
                                                                                esp849 = esp849 + 1 - 4;
                                                                                *reinterpret_cast<void***>(esp849) = ebp33;
                                                                                ++ecx434;
                                                                                goto addr_100221c7_1447;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            } else {
                                                                if (cf847) {
                                                                    addr_1002218a_1481:
                                                                    esp849 = esp849 - 4;
                                                                    *reinterpret_cast<void***>(esp849) = ebp33;
                                                                    goto addr_10022192_1450;
                                                                } else {
                                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                                    cf847 = __intrinsic();
                                                                    eax825 = eax825 + 1 + 1;
                                                                    esp872 = esp849 + 1 - 4;
                                                                    *reinterpret_cast<void***>(esp872) = ebp33;
                                                                    ++ecx434;
                                                                    ++ebp33;
                                                                    esp849 = esp872 - 4;
                                                                    *reinterpret_cast<void***>(esp849) = eax825;
                                                                    goto addr_10022158_1425;
                                                                }
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    if (cf847) {
                                                        addr_100220e9_1484:
                                                        ++edi32;
                                                        esp849 = esp845 - 4;
                                                        *reinterpret_cast<void***>(esp849) = eax825;
                                                        ++ecx434;
                                                        goto addr_100220ed_1485;
                                                    } else {
                                                        *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) ^ *reinterpret_cast<unsigned char*>(eax825 + 64));
                                                        goto addr_100220ac_1423;
                                                    }
                                                }
                                            } else {
                                                addr_10022056_1410:
                                                esi873 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                esp874 = esp833 + 1 - 4;
                                                *reinterpret_cast<void***>(esp874) = ebp33;
                                                goto addr_10022061_1487;
                                            }
                                        }
                                    } else {
                                        __asm__("outsd ");
                                        __asm__("outsb ");
                                        ++ebx16;
                                        esp875 = esp845 - 4;
                                        *reinterpret_cast<void***>(esp875) = reinterpret_cast<void**>(0x65676e61);
                                        eax825 = eax825 + 1 - 1;
                                        esp876 = esp875 - 4;
                                        *reinterpret_cast<void***>(esp876) = edi32;
                                        --esi293;
                                        esp849 = esp876 + 1;
                                        ++ebp33;
                                        __asm__("insb ");
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        if (!ebp33) {
                                            addr_10022034_1489:
                                            __asm__("ror dword [ecx], 1");
                                            __asm__("aas ");
                                            --ecx434;
                                            zf877 = ecx434 == 0;
                                            if (!cf847) {
                                                addr_10022087_1490:
                                                if (zf877) {
                                                    addr_100220c9_1491:
                                                    __asm__("insb ");
                                                    esp878 = esp849 - 4;
                                                    *reinterpret_cast<void***>(esp878) = edi32;
                                                    esp849 = esp878 + 1;
                                                    ++ebp33;
                                                    zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    goto addr_100220d6_1492;
                                                } else {
                                                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                                    cf847 = __intrinsic();
                                                    eax825 = eax825 + 1 + 1;
                                                    esp833 = esp849 + 1 - 4;
                                                    *reinterpret_cast<void***>(esp833) = ebp33;
                                                    ++ecx434;
                                                    ++ebp33;
                                                    goto addr_10022096_1432;
                                                }
                                            } else {
                                                esp845 = esp849 - 4;
                                                *reinterpret_cast<void***>(esp845) = ebx16;
                                                ecx434 = ecx434 + 1 + 1;
                                                ++ebp33;
                                                __asm__("outsb ");
                                                __asm__("popad ");
                                                ++eax825;
                                                zf848 = reinterpret_cast<uint1_t>(eax825 == 0);
                                                goto addr_10022045_1495;
                                            }
                                        } else {
                                            esp828 = esp849 + 1;
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                            goto addr_10021ffc_1409;
                                        }
                                    }
                                } else {
                                    __asm__("aas ");
                                    --edi32;
                                    __asm__("outsb ");
                                    ++ebx16;
                                    zf848 = reinterpret_cast<uint1_t>(ebx16 == 0);
                                    __asm__("outsd ");
                                    __asm__("insd ");
                                    if (__intrinsic()) 
                                        goto addr_10022049_1431;
                                    if (!cf847) 
                                        goto addr_10022045_1495; else 
                                        goto addr_10021fdc_1421;
                                }
                            } else {
                                addr_10021f86_1499:
                                ++esp766;
                                goto addr_10021f87_1500;
                            }
                        } else {
                            ++ebp33;
                            zf879 = reinterpret_cast<uint1_t>(ebp33 == 0);
                            if (cf618 | zf879) {
                                addr_10021f87_1500:
                                esi873 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                esp880 = esp766 - 4;
                                *reinterpret_cast<void***>(esp880) = ebp33;
                                ++ebp33;
                                esp881 = esp880 + 4;
                                ecx434 = ecx434 + 1 - 1;
                                eax882 = *reinterpret_cast<void***>(esp880) + 1;
                                edx579 = *reinterpret_cast<void***>(esp881);
                                *reinterpret_cast<void***>(eax882) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax882)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax882)));
                                *reinterpret_cast<uint16_t*>(&edi32) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edi32) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
                                --edi32;
                                __asm__("outsb ");
                                esp883 = esp881 + 4 - 4;
                                *reinterpret_cast<void***>(esp883) = edi32;
                                __asm__("insd ");
                                esp874 = esp883 - 4;
                                *reinterpret_cast<void***>(esp874) = ebx16;
                                if (!edi32) {
                                    addr_10022019_1502:
                                    ++ebp33;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (!ebp33) {
                                        addr_10022061_1487:
                                        ++ecx434;
                                        ++ebp33;
                                        edi32 = *reinterpret_cast<void***>(esp874);
                                        esp884 = esp874 + 4;
                                        esi293 = esi873 - 1;
                                        eax825 = *reinterpret_cast<void***>(esp884);
                                        esp885 = esp884 + 4;
                                        edx579 = *reinterpret_cast<void***>(esp885);
                                        esp849 = esp885 + 4;
                                        tmp8_886 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax825 + 0x6572433f) + *reinterpret_cast<unsigned char*>(&eax825 + 1));
                                        cf847 = reinterpret_cast<uint1_t>(tmp8_886 < *reinterpret_cast<unsigned char*>(eax825 + 0x6572433f));
                                        *reinterpret_cast<unsigned char*>(eax825 + 0x6572433f) = tmp8_886;
                                        zf850 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(eax825 + 0x6572433f) == 0);
                                        sf854 = *reinterpret_cast<signed char*>(eax825 + 0x6572433f) < reinterpret_cast<signed char>(0);
                                        of853 = __intrinsic();
                                        below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                        __asm__("popad ");
                                        if (zf850) {
                                            addr_100220d6_1492:
                                            if (zf850) 
                                                goto addr_10022118_1427; else 
                                                goto addr_100220d8_1503;
                                        } else {
                                            esp849 = esp849 - 4;
                                            *reinterpret_cast<void***>(esp849) = ebx16;
                                            if (zf850 || (esp849 = esp849 - 4, *reinterpret_cast<void***>(esp849) = eax825, cf847)) {
                                                addr_100220ed_1485:
                                                ++eax825;
                                                edx579 = *reinterpret_cast<void***>(esp849);
                                                esp887 = esp849 + 4;
                                                tmp8_888 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                                cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_888) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
                                                *reinterpret_cast<void***>(eax825) = tmp8_888;
                                                cs600 = reinterpret_cast<void**>(static_cast<uint16_t>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(edi32))));
                                                __asm__("aas ");
                                                edi32 = *reinterpret_cast<void***>(esp887) - 1;
                                                __asm__("outsb ");
                                                esp889 = esp887 + 4 - 4;
                                                *reinterpret_cast<void***>(esp889) = ebp33;
                                                ecx434 = ecx434 - 1 - 1;
                                                zf850 = reinterpret_cast<uint1_t>(ecx434 == 0);
                                                of851 = __intrinsic();
                                                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                esp849 = esp889 - 4;
                                                *reinterpret_cast<void***>(esp849) = ebx16;
                                                if (zf850) {
                                                    addr_1002215e_1426:
                                                    __asm__("outsb ");
                                                    if (zf850) {
                                                        addr_100221a2_1457:
                                                        if (zf850) {
                                                            addr_10022209_1452:
                                                            if (zf850) {
                                                                addr_1002226c_1505:
                                                                __asm__("outsb ");
                                                                goto addr_1002226d_1474;
                                                            } else {
                                                                addr_1002220d_1506:
                                                                esp849 = esp849 - 4;
                                                                *reinterpret_cast<void***>(esp849) = eax825;
                                                                if (cf847) {
                                                                    addr_1002227f_1507:
                                                                    esp890 = esp849 - 4;
                                                                    *reinterpret_cast<void***>(esp890) = ebp33;
                                                                    ++edi32;
                                                                    --edx579;
                                                                    eax825 = eax825 + 1 + 1 - 1;
                                                                    esp891 = esp890 - 4;
                                                                    *reinterpret_cast<void***>(esp891) = eax825;
                                                                    ecx434 = ecx434 + 1 + 1;
                                                                    esp849 = esp891 - 4;
                                                                    *reinterpret_cast<void***>(esp849) = ebp33;
                                                                    if (!ecx434) {
                                                                        goto addr_100222ee_1509;
                                                                    }
                                                                } else {
                                                                    if (below_or_equal852) {
                                                                        addr_1002227b_1511:
                                                                        goto addr_1002227f_1507;
                                                                    } else {
                                                                        if (cf847) {
                                                                            addr_10022265_1513:
                                                                            if (!zf850) {
                                                                                addr_100222cc_1514:
                                                                                eax825 = eax825 + 1 + 1;
                                                                                esp849 = esp849 - 4;
                                                                                *reinterpret_cast<void***>(esp849) = ebp33;
                                                                                ++ecx434;
                                                                                ++edi32;
                                                                                goto addr_100222d5_1515;
                                                                            } else {
                                                                                ++eax825;
                                                                                ++ebp33;
                                                                                zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                                                __asm__("insb ");
                                                                                __asm__("insd ");
                                                                                goto addr_1002226c_1505;
                                                                            }
                                                                        } else {
                                                                            if (of851) {
                                                                                esp892 = esp849 - 4;
                                                                                *reinterpret_cast<void***>(esp892) = esi293;
                                                                                esp849 = esp892 - 4;
                                                                                *reinterpret_cast<void***>(esp849) = edx579;
                                                                                ecx434 = ecx434 + 1 - 1 + 1;
                                                                                goto addr_10022292_1472;
                                                                            } else {
                                                                                ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x6e)) * 0x6c454073);
                                                                                cf847 = __intrinsic();
                                                                                zf850 = __undefined();
                                                                                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                                                goto addr_10022219_1454;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            if (cf847) {
                                                                goto addr_1002220d_1506;
                                                            } else {
                                                                __asm__("popad ");
                                                                __asm__("arpl [ebp+0x40], sp");
                                                                ++ebp33;
                                                                zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                                __asm__("insb ");
                                                                __asm__("insd ");
                                                                __asm__("outsb ");
                                                                goto addr_100221af_1462;
                                                            }
                                                        }
                                                    } else {
                                                        *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) ^ *reinterpret_cast<unsigned char*>(eax825 + 88));
                                                        goto addr_10022164_1524;
                                                    }
                                                } else {
                                                    if (zf850) {
                                                        addr_10022164_1524:
                                                        edx579 = *reinterpret_cast<void***>(esp849);
                                                        tmp8_893 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                                        cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_893) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
                                                        *reinterpret_cast<void***>(eax825) = tmp8_893;
                                                        __asm__("in al, dx");
                                                        esp894 = esp849 + 4 - 2;
                                                        *reinterpret_cast<void***>(esp894) = cs600;
                                                        __asm__("aas ");
                                                        esp849 = esp894 - 4;
                                                        *reinterpret_cast<void***>(esp849) = esp849;
                                                        __asm__("outsd ");
                                                        if (!cf847) {
                                                            addr_100221e2_1437:
                                                            ++ebp33;
                                                            zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                            sf854 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                                                            of853 = __intrinsic();
                                                            below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                            __asm__("insb ");
                                                            __asm__("insd ");
                                                            __asm__("outsb ");
                                                            if (zf850) {
                                                                addr_1002223c_1441:
                                                                ++ecx434;
                                                                esp849 = esp849 - 4;
                                                                *reinterpret_cast<void***>(esp849) = edi32;
                                                                *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) ^ 80);
                                                                cf847 = 0;
                                                                zf850 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax825) == 0);
                                                                sf854 = __intrinsic();
                                                                below_or_equal852 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf850));
                                                                if (0) {
                                                                    goto addr_100222b2_1527;
                                                                }
                                                            } else {
                                                                addr_100221ec_1445:
                                                                if (cf847) {
                                                                    addr_1002225d_1528:
                                                                    if (of853) 
                                                                        goto addr_100222c4_1529; else 
                                                                        goto addr_1002225f_1530;
                                                                } else {
                                                                    if (below_or_equal852) {
                                                                        goto addr_1002225b_1533;
                                                                    }
                                                                }
                                                            }
                                                        } else {
                                                            addr_1002216f_1534:
                                                            ++ebp33;
                                                            __asm__("insb ");
                                                            __asm__("insd ");
                                                            __asm__("outsb ");
                                                            if (!ebp33) {
                                                                goto addr_100221ba_1479;
                                                            } else {
                                                                ++ebp33;
                                                                zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                                                sf854 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                                                                of853 = __intrinsic();
                                                                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                                goto addr_10022178_1433;
                                                            }
                                                        }
                                                    } else {
                                                        ++ebx16;
                                                        esp895 = esp849 - 4;
                                                        *reinterpret_cast<void***>(esp895) = reinterpret_cast<void**>(0x65676e61);
                                                        ++eax825;
                                                        esp849 = esp895 - 4;
                                                        *reinterpret_cast<void***>(esp849) = esp849;
                                                        __asm__("outsd ");
                                                        if (eax825) {
                                                            goto addr_1002216f_1534;
                                                        } else {
                                                            esp849 = esp849 - 4;
                                                            *reinterpret_cast<void***>(esp849) = reinterpret_cast<void**>(0x444e5748);
                                                            goto addr_1002210c_1424;
                                                        }
                                                    }
                                                }
                                            } else {
                                                if (cf847) {
                                                    addr_100220bd_1430:
                                                    if (!cf847) {
                                                        goto addr_10022133_1435;
                                                    } else {
                                                        --esi293;
                                                        __asm__("popad ");
                                                        __asm__("insd ");
                                                        ++ecx434;
                                                        zf850 = reinterpret_cast<uint1_t>(ecx434 == 0);
                                                        below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                                                        __asm__("outsb ");
                                                        esp849 = esp849 - 4;
                                                        *reinterpret_cast<void***>(esp849) = ebx16;
                                                        if (zf850) 
                                                            goto addr_10022142_1458; else 
                                                            goto addr_100220c9_1491;
                                                    }
                                                } else {
                                                    --eax825;
                                                    esp896 = esp849 - 4;
                                                    *reinterpret_cast<void***>(esp896) = edi32;
                                                    esp849 = esp896 + 1;
                                                    ++ebp33;
                                                    zf877 = ebp33 == 0;
                                                    __asm__("insb ");
                                                    __asm__("insd ");
                                                    __asm__("outsb ");
                                                    goto addr_10022087_1490;
                                                }
                                            }
                                        }
                                    } else {
                                        esi897 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                        esp898 = esp874 + 1 - 4;
                                        *reinterpret_cast<void***>(esp898) = ebp33;
                                        ++ecx434;
                                        ++ebp33;
                                        edi32 = *reinterpret_cast<void***>(esp898);
                                        esp899 = esp898 + 4;
                                        esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi897) - 1);
                                        eax825 = *reinterpret_cast<void***>(esp899);
                                        esp900 = esp899 + 4;
                                        edx579 = *reinterpret_cast<void***>(esp900);
                                        esp849 = esp900 + 4;
                                        tmp8_901 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                        cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_901) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
                                        *reinterpret_cast<void***>(eax825) = tmp8_901;
                                        goto addr_10022034_1489;
                                    }
                                } else {
                                    ebp902 = reinterpret_cast<struct s826*>(*reinterpret_cast<int32_t*>(esi873 + 0x67) * 0x6e616843);
                                    esp903 = esp874 - 4;
                                    *reinterpret_cast<void***>(esp903) = edi32;
                                    esi293 = esi873 - 1;
                                    esp828 = esp903 + 1;
                                    ebp33 = reinterpret_cast<void**>(&ebp902->f1);
                                    zf827 = ebp33 == 0;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    goto addr_10021fba_1408;
                                }
                            } else {
                                __asm__("outsb ");
                                if (zf879) {
                                    addr_10021f65_1414:
                                    goto addr_10021f66_1417;
                                } else {
                                    edx579 = *reinterpret_cast<void***>(esp766);
                                    esp841 = esp766 + 4;
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edx579) + reinterpret_cast<unsigned char>(ecx434) + 0x476e4f3f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx579) + reinterpret_cast<unsigned char>(ecx434) + 0x476e4f3f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                                    if (!*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx579) + reinterpret_cast<unsigned char>(ecx434) + 0x476e4f3f)) {
                                        addr_10021f77_1418:
                                        esp766 = esp841 - 4;
                                        *reinterpret_cast<void***>(esp766) = edi32;
                                        --esi293;
                                        goto addr_10021f7d_1315;
                                    } else {
                                        __asm__("insb ");
                                        ++ebx16;
                                        __asm__("outsd ");
                                        esp904 = esp841 - 4;
                                        *reinterpret_cast<void***>(esp904) = edi32;
                                        esp766 = esp904 + 1;
                                        ++ebp33;
                                        __asm__("insb ");
                                        __asm__("insd ");
                                        __asm__("outsb ");
                                        if (!ebp33) 
                                            goto addr_10021f86_1499; else 
                                            goto addr_10021f46_1407;
                                    }
                                }
                            }
                        }
                    } else {
                        esi815 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 0x65) * 0x6f6c6f43);
                        cf618 = __intrinsic();
                        if (cf618) {
                            goto addr_10021f06_1415;
                        } else {
                            __asm__("arpl [eax+0x65], bp");
                            __asm__("insd ");
                            goto addr_10021eb6_1403;
                        }
                    }
                }
            }
        } else {
            esp704 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(edx579 + 0x6c) * 0x706d4965);
            goto addr_10021e25_1307;
        }
    }
    __asm__("outsd ");
    __asm__("arpl [ebp+0x73], si");
    esp905 = esp833 - 4;
    *reinterpret_cast<void***>(esp905) = edi32;
    esi873 = esi293 - 1;
    esp874 = esp905 + 1;
    goto addr_10022019_1502;
    addr_100221c7_1447:
    esp906 = esp849 - 4;
    *reinterpret_cast<void***>(esp906) = ebp33;
    edi32 = *reinterpret_cast<void***>(esp906) + 1;
    esp849 = esp906 + 4 - 4;
    *reinterpret_cast<void***>(esp849) = ebp33;
    ecx434 = ecx434 + 1 - 1;
    goto addr_100221cf_1436;
    addr_10022187_1448:
    ++esp849;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
    goto addr_1002218a_1481;
    addr_10022278_1467:
    ++esp849;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
    goto addr_1002227b_1511;
    addr_10022270_1476:
    if (cf847) {
        addr_100222e1_1554:
        __asm__("insd ");
        __asm__("outsb ");
        if (zf850) {
            addr_10022337_1555:
            if (zf850) {
                addr_1002239e_1556:
                --ecx434;
                ++eax825;
                ++ebp33;
                zf907 = reinterpret_cast<uint1_t>(ebp33 == 0);
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!zf907) {
                    if (cf847) 
                        goto 0x1002241b;
                    if (cf847 | zf907) 
                        goto "@@@Z";
                    if (cf847) 
                        goto "mentProvider@DirectUI@@UAGJPAUUiaRect@@@Z";
                }
            } else {
                ++eax825;
                ++ebp33;
                zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (zf850) {
                    addr_10022392_1562:
                    __asm__("aas ");
                    ++edi32;
                    zf908 = edi32 == 0;
                    if (zf908) 
                        goto "gle@ElementProvider@DirectUI@@UAGJPAUUiaRect@@@Z"; else 
                        goto addr_10022399_1563;
                } else {
                    addr_10022342_1564:
                    if (cf847) {
                        addr_100223b3_1565:
                        eax825 = eax825 + 1 + 1;
                        goto addr_100223bc_1566;
                    } else {
                        if (!below_or_equal852) {
                            if (cf847) {
                                addr_1002238a_1570:
                                __asm__("outsb ");
                                if (zf850) {
                                    addr_100223ce_1571:
                                    *reinterpret_cast<void***>(esp849 - 4) = edx579;
                                } else {
                                    eax825 = eax825 + 1 + 1;
                                    edx579 = *reinterpret_cast<void***>(esp849);
                                    esp849 = esp849 + 4;
                                    tmp8_909 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(esi293 + 8) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                                    cf847 = reinterpret_cast<uint1_t>(tmp8_909 < *reinterpret_cast<unsigned char*>(esi293 + 8));
                                    *reinterpret_cast<unsigned char*>(esi293 + 8) = tmp8_909;
                                    goto addr_10022392_1562;
                                }
                            } else {
                                ++esp849;
                                goto addr_1002234d_1574;
                            }
                        }
                    }
                }
            }
        } else {
            if (cf847) {
                addr_10022358_1576:
                esp849 = esp849 - 4;
                *reinterpret_cast<void***>(esp849) = edi32;
                *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) ^ 78);
                zf850 = reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax825) == 0);
                __asm__("popad ");
                if (zf850) 
                    goto addr_100223c7_1577; else 
                    goto addr_1002235e_1578;
            } else {
                if (below_or_equal852) {
                    addr_10022354_1580:
                    esp849 = esp849 - 4;
                    *reinterpret_cast<void***>(esp849) = ebp33;
                    ++ecx434;
                    ++edi32;
                    --edx579;
                    goto addr_10022358_1576;
                } else {
                    if (cf847) 
                        goto addr_10022342_1564; else 
                        goto addr_100222ef_1582;
                }
            }
        }
    } else {
        if (below_or_equal852) {
            addr_100222dd_1584:
            __asm__("popad ");
            if (!below_or_equal852) {
                addr_10022325_1585:
                esp910 = esp849 - 4;
                *reinterpret_cast<void***>(esp910) = ebp33;
                ++ecx434;
                ++edi32;
                eax825 = *reinterpret_cast<void***>(esp910);
                esp911 = esp910 + 4;
                edx579 = *reinterpret_cast<void***>(esp911);
                esp849 = esp911 + 4;
                goto addr_1002232d_1586;
            } else {
                __asm__("insb ");
                goto addr_100222e1_1554;
            }
        } else {
            if (cf847) 
                goto addr_100222b8_1589; else 
                goto addr_10022278_1467;
        }
    }
    ++esp849;
    goto addr_100223b3_1565;
    addr_10022399_1563:
    if (!zf908) 
        goto "UAGJPAUUiaRect@@@Z";
    if (zf908) 
        goto "I@@UAGJPAUUiaRect@@@Z";
    __asm__("insd ");
    goto addr_1002239e_1556;
    addr_1002235e_1578:
    __asm__("a16 popad ");
    if (zf850) {
        addr_100223c7_1577:
        esp849 = esp849 - 4;
        *reinterpret_cast<void***>(esp849) = ebx16;
        goto addr_100223cc_1593;
    } else {
        ++esp849;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x6f697463);
        cf847 = __intrinsic();
        goto addr_10022365_1595;
    }
    addr_100222ef_1582:
    ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebp33 + 0x70)) * 0x4040656c);
    ++eax825;
    edx579 = *reinterpret_cast<void***>(esp849);
    esp849 = esp849 + 4;
    goto addr_100222f8_1596;
    addr_10022045_1495:
    esp845 = esp845 - 4;
    *reinterpret_cast<void***>(esp845) = esp845;
    __asm__("outsd ");
    goto addr_10022047_1422;
    addr_100220d8_1503:
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
    esp912 = esp849 + 1 - 4;
    *reinterpret_cast<void***>(esp912) = ebp33;
    ++ebp33;
    eax825 = *reinterpret_cast<void***>(esp912);
    esp913 = esp912 + 4 - 4;
    *reinterpret_cast<void***>(esp913) = eax825;
    ecx434 = ecx434 + 1 + 1;
    esp845 = esp913 - 4;
    *reinterpret_cast<void***>(esp845) = eax825;
    goto addr_100220e9_1484;
    if (below_or_equal852) {
        addr_100222ad_1598:
        if (zf850) {
            addr_10022300_1599:
            __asm__("outsb ");
            if (zf850) {
                addr_1002236b_1600:
                eax825 = eax825 + 1 + 1;
                esp914 = esp849 - 4;
                *reinterpret_cast<void***>(esp914) = eax825;
                esp915 = esp914 - 4;
                *reinterpret_cast<void***>(esp915) = eax825;
                esp916 = esp915 - 4;
                *reinterpret_cast<void***>(esp916) = ebp33;
                ecx434 = ecx434 + 1 + 1 - 1;
                zf850 = reinterpret_cast<uint1_t>(ecx434 == 0);
                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                esp849 = esp916 - 4;
                *reinterpret_cast<void***>(esp849) = edx579;
                __asm__("popad ");
                if (!below_or_equal852) {
                    addr_100223bc_1566:
                    esp917 = esp849 - 4;
                    *reinterpret_cast<void***>(esp917) = ebp33;
                    --edx579;
                    esp918 = esp917 - 4;
                    *reinterpret_cast<void***>(esp918) = eax825;
                    esp919 = esp918 - 4;
                    *reinterpret_cast<void***>(esp919) = eax825;
                    ecx434 = ecx434 + 1 + 1 + 1;
                    esp849 = esp919 - 4;
                    *reinterpret_cast<void***>(esp849) = ebp33;
                    if (!ecx434) 
                        goto "edFragmentRoots@ElementProvider@DirectUI@@UAGJPAPAUtagSAFEARRAY@@@Z"; else 
                        goto addr_100223c7_1577;
                } else {
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    goto addr_1002237c_1602;
                }
            } else {
                if (sf854) {
                    addr_1002237c_1602:
                    if (zf850) 
                        goto addr_100223ce_1571;
                } else {
                    addr_10022308_1604:
                    --ebp33;
                    zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                    __asm__("outsb ");
                    goto addr_1002230a_1605;
                }
            }
        } else {
            if (cf847) {
                addr_10022321_1607:
                goto addr_10022325_1585;
            } else {
                addr_100222b2_1527:
                if (below_or_equal852) 
                    goto addr_1002231d_1608;
            }
            if (cf847) {
                addr_100222f8_1596:
                tmp8_920 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_920) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
                *reinterpret_cast<void***>(eax825) = tmp8_920;
                zf850 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(eax825) == 0);
                sf854 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax825)) < reinterpret_cast<signed char>(0);
                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf854 != __intrinsic()) | zf850)) {
                    addr_1002230a_1605:
                    if (!zf850) {
                        addr_1002234d_1574:
                        eax825 = eax825 + 1 + 1;
                        goto addr_10022354_1580;
                    } else {
                        ++ebp33;
                        zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                        below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                        __asm__("insb ");
                        __asm__("insd ");
                        goto addr_10022310_1611;
                    }
                } else {
                    __asm__("aas ");
                    esp921 = esp849 - 4;
                    *reinterpret_cast<void***>(esp921) = ebx16;
                    esp849 = esp921 - 4;
                    *reinterpret_cast<void***>(esp849) = reinterpret_cast<void**>(0x6f43776f);
                    goto addr_10022300_1599;
                }
            } else {
                addr_100222b8_1589:
                ++ebp33;
                zf850 = reinterpret_cast<uint1_t>(ebp33 == 0);
                below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
                goto addr_100222b9_1613;
            }
        }
    } else {
        if (0) {
            addr_10022297_1470:
            edx579 = *reinterpret_cast<void***>(esp849);
            esp849 = esp849 + 4;
            tmp8_922 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
            cf847 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_922) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)));
            *reinterpret_cast<void***>(eax825) = tmp8_922;
            *reinterpret_cast<void***>(edi32) = *reinterpret_cast<void***>(edi32) - 1;
            zf850 = reinterpret_cast<uint1_t>(*reinterpret_cast<void***>(edi32) == 0);
            sf854 = reinterpret_cast<signed char>(*reinterpret_cast<void***>(edi32)) < reinterpret_cast<signed char>(0);
            below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
            __asm__("aas ");
            if (zf850) 
                goto addr_10022300_1599; else 
                goto addr_100222a1_1615;
        } else {
            if (0) {
                addr_100222be_1617:
                if (zf850) {
                    addr_10022310_1611:
                    __asm__("outsb ");
                    if (zf850) {
                        addr_10022365_1595:
                        __asm__("outsb ");
                        goto addr_1002236b_1600;
                    } else {
                        if (cf847) 
                            goto addr_10022386_1619;
                        if (below_or_equal852) 
                            goto addr_10022382_1621; else 
                            goto addr_10022319_1622;
                    }
                } else {
                    addr_100222c0_1475:
                    if (cf847) {
                        addr_10022331_1623:
                        --esi293;
                        zf850 = reinterpret_cast<uint1_t>(esi293 == 0);
                        __asm__("popad ");
                        if (cf847 | zf850) 
                            goto addr_1002239e_1556; else 
                            goto addr_10022335_1624;
                    } else {
                        if (below_or_equal852) {
                            addr_1002232d_1586:
                            tmp8_923 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx579 + 10) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                            cf847 = reinterpret_cast<uint1_t>(tmp8_923 < *reinterpret_cast<unsigned char*>(edx579 + 10));
                            *reinterpret_cast<unsigned char*>(edx579 + 10) = tmp8_923;
                            __asm__("aas ");
                            goto addr_10022331_1623;
                        } else {
                            addr_100222c4_1529:
                            if (cf847) 
                                goto addr_10022308_1604; else 
                                goto addr_100222c8_1626;
                        }
                    }
                }
            } else {
                ebp33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edi32 + 0x6e)) * 0x40404073);
                edx579 = *reinterpret_cast<void***>(esp849);
                esp849 = esp849 + 4;
                *reinterpret_cast<void***>(eax825) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax825)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)));
                *reinterpret_cast<void**>(&eax825) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax825)) | 8);
                cf847 = 0;
                __asm__("aas ");
                ++edi32;
                zf850 = reinterpret_cast<uint1_t>(edi32 == 0);
                sf854 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
                of853 = __intrinsic();
                below_or_equal852 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf850));
                if (zf850) {
                    addr_100222ab_1628:
                    __asm__("outsb ");
                    goto addr_100222ad_1598;
                } else {
                    addr_1002225b_1533:
                    if (cf847) 
                        goto addr_100222cc_1514; else 
                        goto addr_1002225d_1528;
                }
            }
        }
    }
    if (cf847) 
        goto "ElementProvider@DirectUI@@UAGJPAUUiaRect@@@Z";
    if (below_or_equal852) 
        goto "gle@ElementProvider@DirectUI@@UAGJPAUUiaRect@@@Z";
    addr_10022382_1621:
    if (cf847) {
        addr_100223cc_1593:
        esp849 = esp849 - 4;
        *reinterpret_cast<void***>(esp849) = edx579;
        goto addr_100223ce_1571;
    } else {
        addr_10022386_1619:
        if (cf847) 
            goto "angle@ElementProvider@DirectUI@@UAGJPAUUiaRect@@@Z";
    }
    __asm__("a16 insd ");
    goto addr_1002238a_1570;
    addr_100222a1_1615:
    --eax825;
    zf850 = reinterpret_cast<uint1_t>(eax825 == 0);
    sf854 = reinterpret_cast<signed char>(eax825) < reinterpret_cast<signed char>(0);
    below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
    __asm__("outsd ");
    if (!cf847) {
        addr_10022319_1622:
        if (cf847) {
            goto addr_1002235e_1578;
        } else {
            addr_1002231d_1608:
            ++esp849;
            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
            goto addr_10022321_1607;
        }
    } else {
        esp849 = esp849 - 4;
        *reinterpret_cast<void***>(esp849) = edx579;
        __asm__("popad ");
        if (!below_or_equal852) {
            addr_100222ee_1509:
            goto addr_100222ef_1582;
        } else {
            __asm__("insb ");
            __asm__("insd ");
            goto addr_100222ab_1628;
        }
    }
    addr_10022335_1624:
    __asm__("a16 popad ");
    goto addr_10022337_1555;
    addr_100222c8_1626:
    ++esp849;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
    cf847 = __intrinsic();
    goto addr_100222cc_1514;
    addr_1002225f_1530:
    if (cf847) {
        addr_100222d5_1515:
        --edx579;
        esp924 = esp849 - 4;
        *reinterpret_cast<void***>(esp924) = eax825;
        esp925 = esp924 - 4;
        *reinterpret_cast<void***>(esp925) = eax825;
        esp926 = esp925 - 4;
        *reinterpret_cast<void***>(esp926) = ebp33;
        ecx434 = ecx434 + 1 + 1 - 1;
        zf850 = reinterpret_cast<uint1_t>(ecx434 == 0);
        below_or_equal852 = reinterpret_cast<uint1_t>(cf847 | zf850);
        esp849 = esp926 - 4;
        *reinterpret_cast<void***>(esp849) = edx579;
        goto addr_100222dd_1584;
    } else {
        if (!sf854) {
            addr_100222b9_1613:
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            goto addr_100222be_1617;
        } else {
            __asm__("popad ");
            __asm__("insb ");
            goto addr_10022265_1513;
        }
    }
    addr_10021d99_1378:
    if (zf705) {
        addr_10021e00_1305:
        esp927 = esp755 - 4;
        *reinterpret_cast<void***>(esp927) = ebp33;
        eax616 = *reinterpret_cast<void***>(esp927);
        esp928 = esp927 + 4 - 4;
        *reinterpret_cast<void***>(esp928) = eax616;
        ecx434 = ecx434 + 1 + 1;
        esp704 = esp928 - 4;
        *reinterpret_cast<void***>(esp704) = esi293;
        ebp33 = ebp33 + 1 + 1;
        zf705 = reinterpret_cast<uint1_t>(ebp33 == 0);
        __asm__("insb ");
        __asm__("insd ");
        goto addr_10021e0a_1325;
    } else {
        esp704 = esp755 - 4;
        *reinterpret_cast<void***>(esp704) = esp704;
        __asm__("outsd ");
        __asm__("outsd ");
        __asm__("insb ");
        if (zf705) 
            goto addr_10021e0a_1325; else 
            goto addr_10021da1_1297;
    }
    addr_100219da_1208:
    *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) ^ *reinterpret_cast<unsigned char*>(eax616 + 64));
    edx579 = *reinterpret_cast<void***>(esp643);
    esp643 = esp643 + 4;
    *reinterpret_cast<void***>(eax616) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
    __asm__("pushad ");
    *reinterpret_cast<void**>(&eax616) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)) | 63);
    goto addr_100219e2_1122;
    addr_10021432_1001:
    __asm__("arpl [ecx+0x73], bp");
    goto addr_10021435_1638;
    addr_1002133f_942:
    esp556 = esp437 - 4;
    *reinterpret_cast<void***>(esp556) = ebp33;
    ++ecx434;
    ++ebp33;
    goto addr_10021342_930;
    addr_1002134a_938:
    if (cf442) {
        addr_100213c0_935:
        __asm__("insd ");
        ++eax443;
        ++ebx16;
        __asm__("insb ");
        __asm__("popad ");
        if (!cf442) {
            addr_1002143b_1639:
            __asm__("insb ");
            __asm__("popad ");
            if (!cf442) {
                addr_100214b2_1041:
                ++ebx16;
                __asm__("insb ");
                __asm__("popad ");
                if (!cf442) {
                    addr_1002152a_1640:
                    edx579 = *reinterpret_cast<void***>(esp437);
                    esp585 = esp437 + 4;
                    tmp8_929 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi293) + reinterpret_cast<unsigned char>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
                    cf582 = reinterpret_cast<uint1_t>(tmp8_929 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esi293) + reinterpret_cast<unsigned char>(eax443)));
                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(esi293) + reinterpret_cast<unsigned char>(eax443)) = tmp8_929;
                    __asm__("aas ");
                    ++edi32;
                    if (!edi32) {
                        addr_10021576_1025:
                        ++edx579;
                        __asm__("popad ");
                        if (!cf582) {
                            addr_100215df_1013:
                            ++edi32;
                            *reinterpret_cast<unsigned char*>(eax443 + 65) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(eax443 + 65) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx579)));
                            goto addr_100215e1_1034;
                        } else {
                            esp602 = esp585 + 1;
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                            goto addr_1002157f_1038;
                        }
                    } else {
                        esp619 = esp585 - 4;
                        *reinterpret_cast<void***>(esp619) = reinterpret_cast<void**>(0x72646c69);
                        __asm__("outsb ");
                        eax930 = eax443 + 1;
                        ++ebx16;
                        __asm__("insb ");
                        __asm__("popad ");
                        if (!cf582) {
                            addr_100215b3_1643:
                            __asm__("aas ");
                            --ecx434;
                            __asm__("outsb ");
                            cf618 = __intrinsic();
                            esi931 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx434 + reinterpret_cast<unsigned char>(ebp33) * 2) + 97) * 0x657a696c - 1);
                            zf932 = reinterpret_cast<uint1_t>(esi931 == 0);
                            __asm__("popad ");
                            if (zf932) {
                                addr_1002162d_1234:
                                esi933 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                                esp934 = esp619 - 4;
                                *reinterpret_cast<void***>(esp934) = ecx434;
                                ++ecx434;
                                ++ebp33;
                                esp935 = esp934 + 4;
                                eax616 = *reinterpret_cast<void***>(esp935);
                                esp936 = esp935 + 4;
                                edx579 = *reinterpret_cast<void***>(esp936);
                                esp937 = esp936 + 4;
                                tmp8_938 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax616)));
                                cf618 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_938) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax616)));
                                *reinterpret_cast<void***>(eax616) = tmp8_938;
                                __asm__("insb ");
                                es22 = *reinterpret_cast<void***>(esp937);
                                esp619 = esp937 + 2;
                                __asm__("aas ");
                                ++edi32;
                                zf939 = edi32 == 0;
                            } else {
                                if (cf618 | zf932) 
                                    goto addr_1002162b_1233;
                                esp940 = esp619 - 4;
                                *reinterpret_cast<void***>(esp940) = edi32;
                                esi933 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esi931) - 1);
                                esp619 = esp940 + 1;
                                eax616 = eax930 + 1 - 1 - 1;
                                zf939 = eax616 == 0;
                                __asm__("outsd ");
                                if (cf618) 
                                    goto addr_100215ce_1646;
                            }
                        } else {
                            --ecx434;
                            __asm__("outsb ");
                            __asm__("outsw ");
                            __asm__("popad ");
                            if (!cf582) {
                                addr_100215ad_1036:
                                ++ebp33;
                                eax930 = *reinterpret_cast<void***>(esp619);
                                esp941 = esp619 + 4;
                                edx579 = *reinterpret_cast<void***>(esp941);
                                esp619 = esp941 + 4;
                                *reinterpret_cast<unsigned char*>(ebp33 + 9) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 9) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                                goto addr_100215b3_1643;
                            } else {
                                esp437 = esp619 + 1;
                                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 1 + 0x65) * 0x49557463);
                                goto addr_10021550_987;
                            }
                        }
                    }
                } else {
                    --ecx434;
                    __asm__("outsb ");
                    __asm__("outsw ");
                    ++edx291;
                    __asm__("popad ");
                    if (!cf442) {
                        addr_10021524_1040:
                        esp942 = esp437 - 4;
                        *reinterpret_cast<void***>(esp942) = ebp33;
                        ++ecx434;
                        ++ebp33;
                        esp943 = esp942 + 4;
                        eax443 = *reinterpret_cast<void***>(esp943);
                        esp437 = esp943 + 4;
                        goto addr_1002152a_1640;
                    } else {
                        addr_100214bf_997:
                        esi944 = reinterpret_cast<void*>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                        esp945 = esp437 + 1 - 4;
                        *reinterpret_cast<void***>(esp945) = ebp33;
                        ++ebp33;
                        edi32 = *reinterpret_cast<void***>(esp945);
                        esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi944) - 1);
                        esp946 = esp945 + 4 + 4;
                        edx291 = *reinterpret_cast<void***>(esp946);
                        esp577 = esp946 + 4;
                        tmp8_947 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edi32 + 0x64413f03) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx291 + 1)));
                        cf442 = reinterpret_cast<uint1_t>(tmp8_947 < *reinterpret_cast<unsigned char*>(edi32 + 0x64413f03));
                        *reinterpret_cast<unsigned char*>(edi32 + 0x64413f03) = tmp8_947;
                        goto addr_100214d3_1005;
                    }
                }
            } else {
                --ecx434;
                goto addr_10021440_968;
            }
        } else {
            --ecx434;
            __asm__("outsb ");
            __asm__("outsw ");
            ++edx291;
            __asm__("popad ");
            if (!cf442) {
                addr_10021435_1638:
                if (!cf442) {
                    addr_10021487_992:
                    goto addr_10021489_982;
                } else {
                    *reinterpret_cast<int16_t*>(&eax443) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax443) + 1);
                    ++ebx16;
                    goto addr_1002143b_1639;
                }
            } else {
                ++eax443;
                ++esp437;
                goto addr_100213d2_956;
            }
        }
    } else {
        if (!sf558) {
            goto addr_10021398_966;
        } else {
            __asm__("outsb ");
            __asm__("outsw ");
            goto addr_10021350_1657;
        }
    }
    if (zf939) {
        addr_1002168d_1031:
        goto addr_1002168e_1078;
    } else {
        esp948 = esp619 - 4;
        *reinterpret_cast<void***>(esp948) = edi32;
        esp732 = esp948 + 1;
        ++eax616;
        esi293 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(esi933) - 1 - 1);
        zf734 = reinterpret_cast<uint1_t>(esi293 == 0);
        __asm__("popad ");
        if (zf734) {
            addr_100216b6_1660:
            __asm__("outsd ");
            if (!zf734) {
                addr_1002171c_1226:
                eax616 = eax616 + 1 - 1;
                esp732 = esp732 + 1 - 4;
                *reinterpret_cast<void***>(esp732) = edi32;
                esi293 = esi293 - 1 - 1;
                goto addr_10021722_1229;
            } else {
                esp619 = esp732 - 4;
                *reinterpret_cast<void***>(esp619) = reinterpret_cast<void**>(0x444e5748);
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_10021706_1069:
                    goto addr_10021707_1083;
                } else {
                    addr_100216c6_1071:
                    ++esp619;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                    goto addr_100216cb_1662;
                }
            }
        } else {
            if (cf618 | zf734) {
                addr_100216b4_1232:
                goto addr_100216b6_1660;
            } else {
                esp949 = esp732 - 4;
                *reinterpret_cast<void***>(esp949) = edi32;
                --esi293;
                esp619 = esp949 + 1;
                eax616 = eax616 - 1 - 1;
                __asm__("outsd ");
                if (!cf618) {
                    addr_100216cb_1662:
                    goto addr_100216ce_1076;
                } else {
                    ++eax616;
                    ++esp619;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
                    goto addr_1002165d_1045;
                }
            }
        }
    }
    addr_100215ce_1646:
    eax443 = eax616 + 1;
    esp580 = esp619 + 1;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx579 + 0x65) * 0x49557463);
    goto addr_100215d3_1008;
    addr_100212da_943:
    if (cf442) {
        addr_10021350_1657:
        ++eax443;
        goto addr_10021352_1666;
    } else {
        if (!sf558) 
            goto addr_10021327_917;
        __asm__("outsb ");
        __asm__("outsw ");
        ++eax443;
        ++ebx16;
        __asm__("insb ");
        __asm__("popad ");
        if (cf442) 
            goto addr_100212e7_1669;
    }
    addr_1002135a_1670:
    __asm__("aas ");
    ++edi32;
    if (!edi32) {
        addr_100213af_937:
        esp950 = esp437 - 4;
        *reinterpret_cast<void***>(esp950) = ebp33;
        ++ebp33;
        --ecx434;
        eax443 = *reinterpret_cast<void***>(esp950);
        esp951 = esp950 + 4;
        edx291 = *reinterpret_cast<void***>(esp951);
        esp437 = esp951 + 4;
        tmp8_952 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
        cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_952) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
        *reinterpret_cast<void***>(eax443) = tmp8_952;
        goto addr_100213b7_931;
    } else {
        addr_1002135f_921:
        --ecx434;
        goto addr_10021360_955;
    }
    addr_100212e7_1669:
    --ecx434;
    __asm__("outsb ");
    __asm__("outsw ");
    ++edx291;
    __asm__("popad ");
    if (!cf442) {
        addr_10021354_1671:
        ++eax443;
        edx291 = *reinterpret_cast<void***>(esp437);
        esp953 = esp437 + 4;
        tmp8_954 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx434) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443 + 1)));
        cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_954) < reinterpret_cast<unsigned char>(ecx434));
        ecx434 = tmp8_954;
        es22 = *reinterpret_cast<void***>(esp953);
        esp437 = esp953 + 2;
        goto addr_1002135a_1670;
    } else {
        ++eax443;
        esp955 = esp437 + 1;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
        cf442 = __intrinsic();
        goto addr_100212f6_1673;
    }
    if (0) {
        addr_10021041_1675:
        esp956 = esp437 - 4;
        *reinterpret_cast<void***>(esp956) = ebp33;
        ++ecx434;
        ++ebp33;
        edi32 = *reinterpret_cast<void***>(esp956);
        esp957 = esp956 + 4;
        --esi293;
        eax443 = *reinterpret_cast<void***>(esp957);
        esp437 = esp957 + 4;
        goto addr_10021049_873;
    } else {
        ++ebp33;
        zf513 = reinterpret_cast<uint1_t>(ebp33 == 0);
        __asm__("insb ");
        __asm__("insd ");
        goto addr_10021004_872;
    }
    addr_1002109d_875:
    if (cf442) {
        addr_1002110e_1677:
        *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 80));
        cf442 = 0;
        esp958 = esp437 - 4;
        *reinterpret_cast<void***>(esp958) = eax443;
        ecx434 = ecx434 + 1 + 1;
        esp437 = esp958 - 4;
        *reinterpret_cast<void***>(esp437) = esi293;
        ++ebp33;
        zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
        sf532 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
        below_or_equal536 = reinterpret_cast<uint1_t>(static_cast<uint32_t>(zf516));
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        goto addr_1002111a_877;
    } else {
        if (cf442 | zf516) {
            addr_1002110a_1679:
            if (of533) {
                addr_10021171_879:
                if (cf442) {
                    addr_100211e7_1680:
                    goto addr_100211e8_910;
                } else {
                    if (!sf532) {
                        addr_100211c1_949:
                        goto addr_100211c5_1682;
                    } else {
                        addr_10021175_1683:
                        esi293 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
                        cf442 = __intrinsic();
                        ++eax443;
                        ++ebp33;
                        zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                        sf532 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
                        __asm__("insb ");
                        __asm__("insd ");
                        __asm__("outsb ");
                        if (zf516) {
                            addr_100211c5_1682:
                            if (cf442) {
                                addr_1002123d_1684:
                                if (zf516) {
                                    addr_1002127f_926:
                                    esp955 = esp437 - 4;
                                    *reinterpret_cast<void***>(esp955) = edx291;
                                    *reinterpret_cast<int16_t*>(&eax443) = reinterpret_cast<int16_t>(*reinterpret_cast<int16_t*>(&eax443) + 1);
                                    ++ebx16;
                                    __asm__("insb ");
                                    __asm__("popad ");
                                    if (!cf442) {
                                        addr_100212fc_1685:
                                        ++ebp33;
                                        esp959 = esp955 - 4;
                                        *reinterpret_cast<void***>(esp959) = eax443;
                                        ++edx291;
                                        esp960 = esp959 - 4;
                                        *reinterpret_cast<void***>(esp960) = ebp33;
                                        esp437 = esp960 - 4;
                                        *reinterpret_cast<void***>(esp437) = eax443;
                                        if (cf442) {
                                            goto addr_10021373_978;
                                        } else {
                                            if (__intrinsic()) {
                                                goto addr_1002136b_977;
                                            }
                                            if (cf442) 
                                                goto addr_1002137b_1020;
                                        }
                                    } else {
                                        --ecx434;
                                        __asm__("outsb ");
                                        __asm__("outsw ");
                                        ++edx291;
                                        __asm__("popad ");
                                        if (!cf442) {
                                            addr_100212f6_1673:
                                            eax443 = eax443 + 1 + 1;
                                            esp955 = esp955 - 4;
                                            *reinterpret_cast<void***>(esp955) = ebp33;
                                            ++ecx434;
                                            goto addr_100212fc_1685;
                                        } else {
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            esp961 = esp955 + 1 - 4;
                                            *reinterpret_cast<void***>(esp961) = ebp33;
                                            ++ecx434;
                                            ++ebp33;
                                            esp962 = esp961 + 4;
                                            eax443 = *reinterpret_cast<void***>(esp962);
                                            esp437 = esp962 + 4;
                                            goto addr_100212a1_1692;
                                        }
                                    }
                                } else {
                                    *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 64));
                                    edx291 = *reinterpret_cast<void***>(esp437);
                                    esp437 = esp437 + 4;
                                    *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(eax443) + reinterpret_cast<unsigned char>(ecx434) + 0x7465473f) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(eax443) + reinterpret_cast<unsigned char>(ecx434) + 0x7465473f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                                    goto addr_10021246_928;
                                }
                            } else {
                                if (!sf532) {
                                    addr_1002120e_903:
                                    *reinterpret_cast<void***>(esp437 - 4) = ebp33;
                                    esp437 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ecx434 + 69) * 0x746e6576);
                                    goto addr_10021211_907;
                                } else {
                                    esp963 = esp437 - 4;
                                    *reinterpret_cast<void***>(esp963) = reinterpret_cast<void**>(0x69676e61);
                                    __asm__("outsb ");
                                    esp437 = esp963 - 1;
                                    esi293 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
                                    ++eax443;
                                    ++ebp33;
                                    zf564 = ebp33 == 0;
                                    __asm__("insb ");
                                    __asm__("insd ");
                                    __asm__("outsb ");
                                    if (zf564) {
                                        addr_10021223_947:
                                        __asm__("outsb ");
                                        if (zf564) {
                                            addr_10021268_912:
                                            eax443 = eax443 + 1 + 1;
                                            esp437 = esp437 - 4;
                                            *reinterpret_cast<void***>(esp437) = ebp33;
                                            ++ecx434;
                                            goto addr_1002126f_925;
                                        } else {
                                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                            cf442 = __intrinsic();
                                            esp964 = esp437 + 1 - 4;
                                            *reinterpret_cast<void***>(esp964) = ebp33;
                                            ebp965 = ebp33 + 1;
                                            eax443 = *reinterpret_cast<void***>(esp964);
                                            esp966 = esp964 + 4 - 4;
                                            *reinterpret_cast<void***>(esp966) = eax443;
                                            ecx434 = ecx434 + 1 + 1;
                                            esp437 = esp966 - 4;
                                            *reinterpret_cast<void***>(esp437) = ebp965;
                                            ebp33 = ebp965 + 1;
                                            zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                                            if (cf442 | zf516) {
                                                addr_100212a1_1692:
                                                edx291 = *reinterpret_cast<void***>(esp437);
                                                esp437 = esp437 + 4;
                                                tmp8_967 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
                                                cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_967) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
                                                *reinterpret_cast<void***>(eax443) = tmp8_967;
                                                of547 = __intrinsic();
                                                goto addr_100212a3_915;
                                            } else {
                                                __asm__("outsb ");
                                                goto addr_1002123d_1684;
                                            }
                                        }
                                    } else {
                                        ++esp437;
                                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                                        cf442 = __intrinsic();
                                        goto addr_100211e7_1680;
                                    }
                                }
                            }
                        } else {
                            ++esp437;
                            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                            cf442 = __intrinsic();
                            goto addr_1002118a_853;
                        }
                    }
                }
            } else {
                if (cf442) 
                    goto addr_1002114e_890; else 
                    goto addr_1002110e_1677;
            }
        } else {
            if (cf442) {
                addr_100210e5_1702:
                if (of533) {
                    addr_10021153_950:
                    esp968 = esp437 - 4;
                    *reinterpret_cast<void***>(esp968) = ebp33;
                    ++ecx434;
                    ++ebp33;
                    esp969 = esp968 + 4;
                    eax970 = *reinterpret_cast<void***>(esp969);
                    esp971 = esp969 + 4;
                    edx291 = *reinterpret_cast<void***>(esp971);
                    esp437 = esp971 + 4;
                    *reinterpret_cast<void***>(eax970) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax970)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax970)));
                    eax443 = eax970 - 1;
                    __asm__("popad ");
                    goto addr_10021165_883;
                } else {
                    ++eax443;
                    goto addr_100210e8_1704;
                }
            } else {
                ++ebp33;
                zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                __asm__("insb ");
                __asm__("insd ");
                goto addr_100210a9_850;
            }
        }
    }
    if (reinterpret_cast<signed char>(edx291) >= reinterpret_cast<signed char>(0)) {
        addr_10021352_1666:
        *reinterpret_cast<void**>(&eax443) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)) ^ *reinterpret_cast<unsigned char*>(eax443 + 73));
        goto addr_10021354_1671;
    } else {
        __asm__("outsb ");
        __asm__("outsw ");
        eax972 = eax443 + 1;
        *reinterpret_cast<unsigned char*>(&eax972) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax972) ^ *reinterpret_cast<unsigned char*>(eax972 + 73));
        eax443 = eax972 + 1;
        edx291 = *reinterpret_cast<void***>(esp437);
        esp437 = esp437 + 4;
        tmp8_973 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443)));
        cf442 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_973) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax443)));
        *reinterpret_cast<void***>(eax443) = tmp8_973;
        goto addr_10021313_919;
    }
    addr_10021165_883:
    __asm__("outsb ");
    __asm__("insb ");
    *reinterpret_cast<void***>(esp437 - 4) = ebp33;
    esp437 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ecx434 + 80) * 0x65706f72);
    cf442 = __intrinsic();
    sf532 = __undefined();
    zf516 = __undefined();
    goto addr_1002116d_878;
    addr_10021125_884:
    edx291 = *reinterpret_cast<void***>(esp437);
    esp437 = esp437 + 4;
    *reinterpret_cast<void**>(&ebx16) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx291 + 1)));
    *reinterpret_cast<void***>(edi32) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16 + 1)));
    goto addr_1002112c_886;
    addr_100210e0_892:
    if (cf442) {
        addr_1002112d_887:
        __asm__("popad ");
        __asm__("outsb ");
        goto addr_10021130_852;
    } else {
        __asm__("insd ");
        goto addr_100210e5_1702;
    }
    addr_10020f06_755:
    ++esp437;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
    goto addr_10020f0b_869;
    addr_10020e86_760:
    ++ebp33;
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (!ebp33) {
        addr_10020ece_776:
        ++ecx434;
        ebp33 = ebp33 - 1 + 1;
        esp974 = esp437 + 4;
        eax443 = *reinterpret_cast<void***>(esp437) - 1 - 1 + 1;
        edx291 = *reinterpret_cast<void***>(esp974);
        esp437 = esp974 + 4;
        tmp8_975 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 0x535f3f0f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
        cf442 = reinterpret_cast<uint1_t>(tmp8_975 < *reinterpret_cast<unsigned char*>(ebp33 + 0x535f3f0f));
        *reinterpret_cast<unsigned char*>(ebp33 + 0x535f3f0f) = tmp8_975;
        __asm__("insb ");
        goto addr_10020ee5_772;
    } else {
        ++esp437;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
        goto addr_10020e97_748;
    }
    addr_10020e46_761:
    ++esp437;
    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
    ++eax443;
    goto addr_10020e4f_823;
    addr_10020e22_770:
    ++edi32;
    --ebp33;
    esp437 = esp437 - 4;
    *reinterpret_cast<void***>(esp437) = ebx16;
    goto addr_10020e26_821;
    addr_10020f69_783:
    eax512 = eax443 - 1 + 1;
    ++ebp33;
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (!ebp33) {
        addr_10020fb4_845:
        ++ecx434;
        esp976 = esp437 - 4;
        *reinterpret_cast<void***>(esp976) = esi293;
        *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
        eax443 = eax512 + 1 + 1;
        edx291 = *reinterpret_cast<void***>(esp976);
        esp525 = esp976 + 4;
        tmp8_977 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebp33 + 0x63413f03) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443 + 1)));
        cf518 = reinterpret_cast<uint1_t>(tmp8_977 < *reinterpret_cast<unsigned char*>(ebp33 + 0x63413f03));
        *reinterpret_cast<unsigned char*>(ebp33 + 0x63413f03) = tmp8_977;
        zf978 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebp33 + 0x63413f03) == 0);
        if (zf978) 
            goto addr_1002102c_1710;
    } else {
        esp526 = esp437 + 1;
        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
        goto addr_10020f79_870;
    }
    if (cf518 | zf978) {
        addr_10021026_1713:
        --ebx16;
        if (reinterpret_cast<signed char>(ebx16) >= reinterpret_cast<signed char>(0)) {
            addr_10021070_861:
            eax443 = eax443 + 1 + 1;
            esp979 = esp525 - 4;
            *reinterpret_cast<void***>(esp979) = ebp33;
            ++ebp33;
            --edx291;
            esp525 = esp979 - 4;
            *reinterpret_cast<void***>(esp525) = eax443;
            ecx434 = ecx434 + 1 + 1;
            goto addr_10021079_1714;
        } else {
            __asm__("outsd ");
            __asm__("arpl [ebp+0x73], si");
            goto addr_1002102c_1710;
        }
    } else {
        if (zf978) {
            addr_1002102c_1710:
            ++eax443;
            ++ebp33;
            zf978 = reinterpret_cast<uint1_t>(ebp33 == 0);
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            goto addr_10021036_1717;
        } else {
            esp525 = esp525 - 4;
            *reinterpret_cast<void***>(esp525) = esp525;
            __asm__("outsd ");
            __asm__("outsd ");
            __asm__("insb ");
            if (zf978) {
                addr_10021036_1717:
                if (zf978) {
                    addr_10021079_1714:
                    esp980 = esp525 - 4;
                    *reinterpret_cast<void***>(esp980) = eax443;
                    esp517 = esp980 - 4;
                    *reinterpret_cast<void***>(esp517) = ebp33;
                    ecx434 = ecx434 + 1 - 1 + 1;
                    __asm__("arpl [ebx+0x65], sp");
                    if (!cf518) {
                        addr_100210f6_857:
                        eax443 = eax443 + 1 + 1;
                        esp981 = esp517 - 4;
                        *reinterpret_cast<void***>(esp981) = ebp33;
                        ++ebp33;
                        --edx291;
                        esp982 = esp981 - 4;
                        *reinterpret_cast<void***>(esp982) = eax443;
                        esp437 = esp982 - 4;
                        *reinterpret_cast<void***>(esp437) = esi293;
                        ecx434 = ecx434 + 1 + 1 - 1;
                        __asm__("outsb ");
                        if (cf518 | reinterpret_cast<uint1_t>(ecx434 == 0)) {
                            goto addr_10021175_1683;
                        } else {
                            esp437 = reinterpret_cast<void**>(*reinterpret_cast<unsigned char*>(ebp33 + 72) * 0x65);
                            cf442 = __intrinsic();
                            of533 = __intrinsic();
                            sf532 = __undefined();
                            zf516 = __undefined();
                            __asm__("insb ");
                            goto addr_1002110a_1679;
                        }
                    } else {
                        esp983 = reinterpret_cast<struct s827*>(*reinterpret_cast<unsigned char*>(edx291 + 0x6c) * 0x40404065);
                        edx291 = esp983->f0;
                        esp437 = reinterpret_cast<void**>(&esp983->f4);
                        tmp8_984 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx291 + 0x65473f08) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx434 + 1)));
                        cf442 = reinterpret_cast<uint1_t>(tmp8_984 < *reinterpret_cast<unsigned char*>(edx291 + 0x65473f08));
                        *reinterpret_cast<unsigned char*>(edx291 + 0x65473f08) = tmp8_984;
                        if (!*reinterpret_cast<unsigned char*>(edx291 + 0x65473f08)) {
                            addr_100210e8_1704:
                            ++ebp33;
                            zf516 = reinterpret_cast<uint1_t>(ebp33 == 0);
                            __asm__("insb ");
                            __asm__("insd ");
                            __asm__("outsb ");
                            goto addr_100210ed_851;
                        } else {
                            --ecx434;
                            goto addr_10021094_874;
                        }
                    }
                } else {
                    esp437 = esp525 + 1;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                    goto addr_10021041_1675;
                }
            } else {
                if (__intrinsic()) {
                    addr_1002100f_895:
                    ++ecx434;
                    ebp33 = ebp33 - 1 + 1;
                    eax443 = *reinterpret_cast<void***>(esp525);
                    esp525 = esp525 + 4;
                    goto addr_10021017_1725;
                } else {
                    ++ebp33;
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (!ebp33) {
                        addr_10021017_1725:
                        esp985 = esp525 - 4;
                        *reinterpret_cast<void***>(esp985) = eax443;
                        ++ecx434;
                        esp986 = esp985 - 4;
                        *reinterpret_cast<void***>(esp986) = esi293;
                        *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                        eax443 = eax443 + 1 + 1;
                        edx291 = *reinterpret_cast<void***>(esp986);
                        esp525 = esp986 + 4;
                        tmp8_987 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(eax443) + 0x7465473f) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax443 + 1)));
                        cf518 = reinterpret_cast<uint1_t>(tmp8_987 < *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(eax443) + 0x7465473f));
                        *reinterpret_cast<unsigned char*>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(eax443) + 0x7465473f) = tmp8_987;
                        goto addr_10021026_1713;
                    } else {
                        esp437 = esp525 + 1;
                        esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                        goto addr_10020fdd_782;
                    }
                }
            }
        }
    }
    addr_10020e85_792:
    goto addr_10020e86_760;
    addr_10020b87_621:
    ++esp312;
    goto addr_10020b88_604;
    addr_10020aae_634:
    if (!sf368) {
        addr_10020af3_683:
        --edi32;
        sf368 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
        of369 = __intrinsic();
        goto addr_10020af4_674;
    } else {
        addr_10020ab0_648:
        esp312 = esp312 - 4;
        *reinterpret_cast<void***>(esp312) = reinterpret_cast<void**>(0x65676e61);
        ++eax311;
        ++ebp33;
        __asm__("insb ");
        __asm__("insd ");
        __asm__("outsb ");
        if (!ebp33) {
            addr_10020aff_690:
            ++eax311;
            ++ebp33;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp33) {
                addr_10020b4d_701:
                ++eax311;
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_10020b98_602:
                    *reinterpret_cast<void***>(edx291) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx291)) ^ reinterpret_cast<unsigned char>(esi293));
                    goto addr_10020b99_606;
                } else {
                    ++esp312;
                    esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                    goto addr_10020b5f_677;
                }
            } else {
                ++esp312;
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                cf316 = __intrinsic();
                goto addr_10020b11_631;
            }
        } else {
            ++esp312;
            esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
            cf316 = __intrinsic();
            goto addr_10020ac1_706;
        }
    }
    addr_10020aa3_637:
    goto addr_10020aa4_599;
    addr_10020a70_649:
    ++esp312;
    goto addr_10020a71_672;
    addr_100209ca_653:
    ebp33 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(esi293 + 0x67) * 0x69447341);
    if (!__intrinsic()) {
        addr_10020a43_1731:
        ++ecx307;
        esp988 = esp312 - 4;
        *reinterpret_cast<void***>(esp988) = esi293;
        esp312 = esp988 - 4;
        *reinterpret_cast<void***>(esp312) = esi293;
        __asm__("popad ");
        __asm__("insb ");
        if (ecx307) {
            goto addr_10020ab0_648;
        } else {
            eax989 = eax311 + 1;
            *reinterpret_cast<unsigned char*>(&eax989) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax989) ^ *reinterpret_cast<unsigned char*>(eax989 + 49));
            eax311 = eax989 + 1;
            edx291 = *reinterpret_cast<void***>(esp312);
            esp312 = esp312 + 4;
            *reinterpret_cast<void***>(eax311) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax311)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)));
            *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ 11);
            cf316 = 0;
            goto addr_10020a53_693;
        }
    } else {
        __asm__("insb ");
        __asm__("popad ");
        if (!__undefined()) {
            addr_10020a3c_644:
            __asm__("outsw ");
            ++eax311;
            *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 72));
            esp312 = esp312 - 4;
            *reinterpret_cast<void***>(esp312) = eax311;
            goto addr_10020a43_1731;
        } else {
            ++eax311;
            ++ebp33;
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (!ebp33) {
                addr_10020a21_651:
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                cf316 = __intrinsic();
                eax311 = eax311 + 1 + 1;
                goto addr_10020a2a_598;
            } else {
                ++esp312;
                esi293 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx291 + 0x65) * 0x49557463);
                goto addr_100209e7_667;
            }
        }
    }
    addr_100209fb_665:
    ++eax311;
    *reinterpret_cast<void**>(&eax311) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax311)) ^ *reinterpret_cast<unsigned char*>(eax311 + 64));
    edx291 = *reinterpret_cast<void***>(esp312);
    esp312 = esp312 + 4;
    goto addr_10020a00_712;
    addr_10020b41_680:
    --edi32;
    goto addr_10020b42_695;
    addr_10020afe_681:
    esp312 = esp312 - 4;
    *reinterpret_cast<void***>(esp312) = reinterpret_cast<void**>(0x65676e61);
    goto addr_10020aff_690;
    addr_100201fa_415:
    esp260 = esp26 - 4;
    *reinterpret_cast<void***>(esp260) = ebp33;
    ecx261 = ecx + 1 - 1;
    ++ebx16;
    __asm__("insb ");
    __asm__("popad ");
    if (!cf34) {
        addr_10020275_428:
        esp251 = esp260 - 4;
        *reinterpret_cast<void***>(esp251) = ebp33;
        ecx250 = ecx261 - 1;
        ++ebx16;
        __asm__("insb ");
        __asm__("popad ");
        if (!cf34) {
            addr_100202ef_400:
            eax40 = *reinterpret_cast<void***>(esp251);
            esp990 = esp251 + 4;
            edx120 = *reinterpret_cast<void***>(esp990);
            *reinterpret_cast<unsigned char*>(&ecx250 + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx250 + 1) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx120)));
            edi32 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi32) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi32)));
            ecx = ecx250 + 1;
            zf264 = ecx == 0;
            esp26 = esp990 + 4 - 4;
            *reinterpret_cast<void***>(esp26) = ebx16;
            goto addr_100202f9_431;
        } else {
            ecx = ecx250 - 1;
            __asm__("outsb ");
            __asm__("outsw ");
            ++eax40;
            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
            edx120 = *reinterpret_cast<void***>(esp251);
            tmp8_991 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 5) + *reinterpret_cast<signed char*>(&ecx));
            cf34 = reinterpret_cast<uint1_t>(tmp8_991 < *reinterpret_cast<unsigned char*>(ecx + 5));
            *reinterpret_cast<unsigned char*>(ecx + 5) = tmp8_991;
            __asm__("aas ");
            esp26 = esp251 + 4 + 1;
            sf256 = reinterpret_cast<signed char>(esp26) < reinterpret_cast<signed char>(0);
            goto addr_1002028a_1738;
        }
    } else {
        ecx = ecx261 - 1;
        __asm__("outsb ");
        __asm__("outsw ");
        ++eax40;
        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
        edx120 = *reinterpret_cast<void***>(esp260);
        esp26 = esp260 + 4;
        tmp8_992 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx120 + 6) + *reinterpret_cast<signed char*>(&edx120 + 1));
        cf34 = reinterpret_cast<uint1_t>(tmp8_992 < *reinterpret_cast<unsigned char*>(edx120 + 6));
        *reinterpret_cast<unsigned char*>(edx120 + 6) = tmp8_992;
        __asm__("aas ");
        ++edi32;
        zf255 = edi32 == 0;
        sf256 = reinterpret_cast<signed char>(edi32) < reinterpret_cast<signed char>(0);
        if (zf255) {
            addr_10020256_407:
            esp26 = esp26 - 4;
            *reinterpret_cast<void***>(esp26) = eax40;
            if (zf255) {
                addr_100202cc_405:
                if (zf255) {
                    addr_1002031c_1740:
                    ++eax40;
                    edx120 = *reinterpret_cast<void***>(esp26);
                    esp26 = esp26 + 4;
                    *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                    __asm__("aam 0x3");
                    goto addr_10020321_336;
                } else {
                    addr_100202d1_1741:
                    if (!sf256) {
                        addr_1002031a_1742:
                        ++edi32;
                        goto addr_1002031c_1740;
                    } else {
                        __asm__("outsd ");
                        __asm__("arpl [ebp+0x73], si");
                        ++eax40;
                        goto addr_100202d9_335;
                    }
                }
            } else {
                eax40 = eax40 + 1 - 1;
                esp993 = esp26 - 4;
                *reinterpret_cast<void***>(esp993) = edi32;
                esi252 = esi27 - 1;
                esp253 = esp993 + 1;
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_100202a7_402:
                    edi32 = *reinterpret_cast<void***>(esp253);
                    esp994 = esp253 + 4;
                    esi27 = esi252 - 1;
                    ++eax40;
                    edx120 = *reinterpret_cast<void***>(esp994);
                    esp26 = esp994 + 4;
                    *reinterpret_cast<unsigned char*>(edx120 + 0x313f3f01) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx120 + 0x313f3f01) + *reinterpret_cast<signed char*>(&ecx));
                    goto addr_100202b1_430;
                } else {
                    esp258 = esp253 + 1;
                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                    cf34 = __intrinsic();
                    goto addr_10020269_427;
                }
            }
        } else {
            addr_10020213_460:
            __asm__("insb ");
            __asm__("popad ");
            if (!cf34) {
                addr_1002028a_1738:
                if (!cf34) {
                    addr_10020301_1746:
                    __asm__("arpl [eax+0x53], bp");
                    __asm__("insb ");
                    __asm__("arpl [gs:eax+eax*2+0x44], si");
                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
                    eax40 = eax40 + 1 + 1;
                    esp995 = esp26 - 4;
                    *reinterpret_cast<void***>(esp995) = ecx;
                    ++ecx;
                    ++ebp33;
                    esp26 = esp995 - 4;
                    *reinterpret_cast<void***>(esp26) = eax40;
                    goto addr_1002031a_1742;
                } else {
                    if (cf34) {
                        addr_100202fe_433:
                        goto addr_10020301_1746;
                    } else {
                        if (!sf256) 
                            goto addr_100202d1_1741;
                    }
                }
            } else {
                --ecx;
                __asm__("outsb ");
                __asm__("outsw ");
                esp26 = esp26 - 4;
                *reinterpret_cast<void***>(esp26) = eax40;
                if (ecx) {
                    addr_1002021e_438:
                    ++eax40;
                    esp258 = esp26 - 4;
                    *reinterpret_cast<void***>(esp258) = ebx16;
                    goto addr_10020220_426;
                }
            }
        }
    }
    ++ebp33;
    zf131 = reinterpret_cast<uint1_t>(ebp33 == 0);
    goto addr_10020292_334;
    addr_100201ba_440:
    *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 80));
    esp996 = esp26 - 4;
    *reinterpret_cast<void***>(esp996) = eax40;
    ecx = ecx + 1 + 1;
    esp997 = esp996 - 4;
    *reinterpret_cast<void***>(esp997) = esi27;
    *reinterpret_cast<void***>(edx120) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)) ^ reinterpret_cast<unsigned char>(esi27));
    eax40 = eax40 + 1 + 1;
    edx120 = *reinterpret_cast<void***>(esp997);
    esp26 = esp997 + 4;
    *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    cf34 = 0;
    __asm__("aas ");
    goto addr_100201cb_458;
    addr_100201cf_456:
    __asm__("insb ");
    goto addr_100201d0_419;
    addr_1001ff92_230:
    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
    eax40 = eax40 + 1 + 1;
    esp998 = esp133 + 1 - 4;
    *reinterpret_cast<void***>(esp998) = ebx16;
    ++edi32;
    esp999 = esp998 - 4;
    *reinterpret_cast<void***>(esp999) = eax40;
    ++edx120;
    esp1000 = esp999 - 4;
    *reinterpret_cast<void***>(esp1000) = ebp33;
    esp26 = esp1000 - 4;
    *reinterpret_cast<void***>(esp26) = eax40;
    if (__intrinsic()) {
        addr_10020013_469:
        __asm__("insb ");
        __asm__("insb ");
        *reinterpret_cast<void***>(esp26 - 4) = esi27;
        esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265);
    } else {
        if (__intrinsic()) 
            goto addr_1002000b_310;
        if (!__intrinsic()) 
            goto addr_1001ffa8_1754;
    }
    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
    goto addr_10020027_275;
    addr_1001ffa8_1754:
    if (reinterpret_cast<signed char>(edx120) >= reinterpret_cast<signed char>(0)) {
        addr_1001fff3_222:
        *reinterpret_cast<void***>(edx120) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx120)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ecx + 1)));
        goto addr_1001fff5_224;
    } else {
        __asm__("outsb ");
        __asm__("outsw ");
        goto addr_1001ffad_274;
    }
    addr_1001fed4_240:
    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx120 + 0x65) * 0x49557463);
    eax155 = eax40 + 1 + 1;
    esp128 = esp128 + 1 - 4;
    *reinterpret_cast<void***>(esp128) = ecx;
    goto addr_1001fedf_272;
    addr_1001fc8d_256:
    ++edi32;
    esp1001 = esp26 - 4;
    *reinterpret_cast<void***>(esp1001) = eax40;
    ++edx2;
    zf107 = edx2 == 0;
    sf114 = reinterpret_cast<signed char>(edx2) < reinterpret_cast<signed char>(0);
    of115 = __intrinsic();
    esp1002 = esp1001 - 4;
    *reinterpret_cast<void***>(esp1002) = ebp33;
    esp26 = esp1002 - 4;
    *reinterpret_cast<void***>(esp26) = eax40;
    if (cf34) {
        addr_1001fd03_181:
        ++edi32;
        goto addr_1001fd05_185;
    } else {
        if (of115) {
            addr_1001fcfb_1758:
            ++eax40;
            goto addr_1001fcfd_180;
        } else {
            addr_1001fc96_1759:
            if (cf34) {
                goto addr_1001fd0d_192;
            }
        }
        if (!sf114) {
            addr_1001fce3_171:
            __asm__("arpl [ecx+0x6c], sp");
            esp26 = esp26 - 4;
            *reinterpret_cast<void***>(esp26) = esi27;
            goto addr_1001fce7_173;
        } else {
            __asm__("outsb ");
            __asm__("outsw ");
            ++eax40;
            *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
            edx2 = *reinterpret_cast<void***>(esp26);
            esp26 = esp26 + 4;
            *reinterpret_cast<void***>(eax40) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
            goto addr_1001fca3_1763;
        }
    }
    addr_1001fc4d_259:
    ++ebp33;
    zf107 = ebp33 == 0;
    sf114 = reinterpret_cast<signed char>(ebp33) < reinterpret_cast<signed char>(0);
    of115 = __intrinsic();
    __asm__("insb ");
    __asm__("insd ");
    __asm__("outsb ");
    if (zf107) {
        goto addr_1001fc96_1759;
    } else {
        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
        eax40 = eax40 + 1 + 1;
        esp90 = esp26 + 1 - 4;
        *reinterpret_cast<void***>(esp90) = ecx;
        goto addr_1001fc60_167;
    }
    addr_1001f93d_105:
    __asm__("popad ");
    if (zf62) {
        goto addr_1001f9aa_91;
    }
    addr_1001fa92_118:
    ++ebp33;
    zf72 = ebp33 == 0;
    __asm__("insb ");
    goto addr_1001fa94_111;
    if (!zf79) {
        addr_1001fb66_123:
        goto addr_1001fb67_165;
    } else {
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = eax40;
        if (cf34) {
            addr_1001fb6b_1769:
            if (pf78) {
                addr_1001fbd5_1770:
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_1001fc1e_160:
                    ++ebp33;
                    zf107 = ebp33 == 0;
                    of108 = __intrinsic();
                    __asm__("insb ");
                    __asm__("insd ");
                    __asm__("outsb ");
                    if (zf107) 
                        goto addr_1001fc72_170;
                } else {
                    esp91 = esp26 + 1;
                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                    goto addr_1001fbe0_131;
                }
            } else {
                ++ebp33;
                zf89 = ebp33 == 0;
                __asm__("insb ");
                __asm__("insd ");
                goto addr_1001fb73_127;
            }
        } else {
            if (__intrinsic()) {
                addr_1001fb3e_148:
                __asm__("outsb ");
                if (zf79) {
                    addr_1001fb82_154:
                    __asm__("insb ");
                    __asm__("insb ");
                    *reinterpret_cast<void***>(esp26 - 4) = esi27;
                    esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265);
                    goto addr_1001fb87_151;
                } else {
                    ++esp26;
                    goto addr_1001fb46_1775;
                }
            } else {
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_1001fb46_1775:
                    esp1003 = esp26 - 4;
                    *reinterpret_cast<void***>(esp1003) = ecx;
                    ebp1004 = ebp33 + 1;
                    esp1005 = esp1003 - 4;
                    *reinterpret_cast<void***>(esp1005) = eax40 + 1 + 1;
                    esp1006 = esp1005 - 4;
                    *reinterpret_cast<void***>(esp1006) = ebp1004;
                    ecx = ecx + 1 + 1 + 1;
                    ebp33 = ebp1004 + 1;
                    esp1007 = esp1006 + 1 - 4;
                    *reinterpret_cast<void***>(esp1007) = esp1007;
                    esp1008 = esp1007 + 4;
                    edi32 = *reinterpret_cast<void***>(esp1008);
                    esp1009 = esp1008 + 4;
                    eax40 = *reinterpret_cast<void***>(esp1009);
                    esp1010 = esp1009 + 4;
                    edx2 = *reinterpret_cast<void***>(esp1010);
                    *reinterpret_cast<unsigned char*>(ecx + 14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ecx + 14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                    zf1011 = *reinterpret_cast<unsigned char*>(ecx + 14) == 0;
                    __asm__("aas ");
                    esp26 = esp1010 + 4 - 4;
                    *reinterpret_cast<void***>(esp26) = ebx16;
                    if (zf1011) {
                        addr_1001fbbd_262:
                        esp1012 = esp26 - 4;
                        *reinterpret_cast<void***>(esp1012) = ecx;
                        ++ecx;
                        ++ebp33;
                        eax40 = eax40 + 1 + 1 - 1 + 1;
                        edx2 = *reinterpret_cast<void***>(esp1012);
                        *reinterpret_cast<unsigned char*>(edx2 + 14) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(edx2 + 14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&ebx16)));
                        zf1013 = *reinterpret_cast<unsigned char*>(edx2 + 14) == 0;
                        __asm__("aas ");
                        esp26 = esp1012 + 4 - 4;
                        *reinterpret_cast<void***>(esp26) = ebx16;
                        if (!zf1013) {
                            esi27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x69)) * 0x40656c62);
                            cf34 = __intrinsic();
                            goto addr_1001fbd5_1770;
                        }
                    } else {
                        addr_1001fb67_165:
                        esi27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(edx2 + 0x74)) * 0x696c6175);
                        cf34 = __intrinsic();
                        pf78 = __undefined();
                        goto addr_1001fb6b_1769;
                    }
                } else {
                    addr_1001fb06_85:
                    esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                    cf34 = __intrinsic();
                    eax40 = eax40 + 1 + 1;
                    esp26 = esp26 + 1 - 4;
                    *reinterpret_cast<void***>(esp26) = ebx16;
                    ++edi32;
                    goto addr_1001fb12_150;
                }
            }
        }
    }
    esi1014 = reinterpret_cast<struct s828*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(ebx16 + 0x74)) * 0x72656e65);
    ++eax40;
    *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 64));
    edx2 = *reinterpret_cast<void***>(esp26);
    esp26 = esp26 + 4;
    tmp8_1015 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
    cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_1015) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax40)));
    *reinterpret_cast<void***>(eax40) = tmp8_1015;
    g7465533f = *reinterpret_cast<signed char*>(&ecx);
    esi27 = reinterpret_cast<void**>(&esi1014->f1);
    zf110 = esi27 == 0;
    of1016 = __intrinsic();
    __asm__("outsd ");
    if (cf34) {
        addr_1001fca3_1763:
        __asm__("sti ");
        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) | 63);
        cf34 = 0;
        zf110 = 0;
        of1016 = 0;
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = ebx16;
        if (0) {
            addr_1001fced_177:
            __asm__("insb ");
            __asm__("insd ");
            __asm__("outsb ");
            if (zf110) {
                addr_1001fd34_1780:
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                cf34 = __intrinsic();
                eax40 = eax40 + 1 + 1;
                esp1017 = esp26 - 4;
                *reinterpret_cast<void***>(esp1017) = ebx16;
                ++edi32;
                esp1018 = esp1017 - 4;
                *reinterpret_cast<void***>(esp1018) = eax40;
                ++edx2;
                zf152 = reinterpret_cast<uint1_t>(edx2 == 0);
                sf153 = reinterpret_cast<signed char>(edx2) < reinterpret_cast<signed char>(0);
                below_or_equal1019 = reinterpret_cast<uint1_t>(cf34 | zf152);
                esp1020 = esp1018 - 4;
                *reinterpret_cast<void***>(esp1020) = ebp33;
                esp26 = esp1020 - 4;
                *reinterpret_cast<void***>(esp26) = eax40;
                if (cf34) {
                    addr_1001fdb4_1781:
                    __asm__("insd ");
                    __asm__("outsd ");
                    if (below_or_equal1019) {
                        addr_1001fe20_1782:
                        esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                        eax40 = eax40 + 1 + 1;
                        esp26 = esp26 - 4;
                        *reinterpret_cast<void***>(esp26) = ecx;
                        goto addr_1001fe2a_1783;
                    } else {
                        --esp26;
                        zf152 = reinterpret_cast<uint1_t>(esp26 == 0);
                        __asm__("outsd ");
                        goto addr_1001fdbd_1785;
                    }
                } else {
                    if (__intrinsic()) {
                        addr_1001fdac_1787:
                        ++eax40;
                        *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
                        edx2 = *reinterpret_cast<void***>(esp26);
                        esp26 = esp26 + 4;
                        tmp8_1021 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx16 + 0x65523f0c) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2)));
                        cf34 = reinterpret_cast<uint1_t>(tmp8_1021 < *reinterpret_cast<unsigned char*>(ebx16 + 0x65523f0c));
                        *reinterpret_cast<unsigned char*>(ebx16 + 0x65523f0c) = tmp8_1021;
                        below_or_equal1019 = reinterpret_cast<uint1_t>(cf34 | reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(ebx16 + 0x65523f0c) == 0));
                        goto addr_1001fdb4_1781;
                    } else {
                        addr_1001fd47_254:
                        if (cf34) {
                            addr_1001fdbd_1785:
                            __asm__("arpl [ecx+0x6c], sp");
                            esp26 = esp26 - 4;
                            *reinterpret_cast<void***>(esp26) = esi27;
                            __asm__("popad ");
                            __asm__("insb ");
                            if (!zf152) {
                                addr_1001fe2a_1783:
                                ++ecx;
                                ++ebp33;
                                esp26 = esp26 - 4;
                                *reinterpret_cast<void***>(esp26) = eax40;
                                --esi27;
                                --eax40;
                                goto addr_1001fe31_207;
                            } else {
                                ++eax40;
                                ++ebp33;
                                zf107 = ebp33 == 0;
                                __asm__("insb ");
                                __asm__("insd ");
                                goto addr_1001fdc9_269;
                            }
                        } else {
                            if (!sf153) {
                                addr_1001fd94_295:
                                goto addr_1001fd98_1790;
                            } else {
                                __asm__("outsb ");
                                __asm__("outsw ");
                                ++eax40;
                                *reinterpret_cast<void**>(&eax40) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) ^ *reinterpret_cast<unsigned char*>(eax40 + 88));
                                goto addr_1001fd50_174;
                            }
                        }
                    }
                }
            } else {
                ++esp26;
                esi27 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(edx2 + 0x65) * 0x49557463);
                cf34 = __intrinsic();
                goto addr_1001fcfb_1758;
            }
        } else {
            addr_1001fcab_1793:
            __asm__("popad ");
            __asm__("arpl [ebx+0x67], bp");
            if (cf34) {
                addr_1001fd20_1794:
                __asm__("outsd ");
                goto addr_1001fd21_1795;
            } else {
                addr_1001fcb1_1796:
                if (!zf110) {
                    addr_1001fd21_1795:
                    __asm__("outsb ");
                    if (zf110) 
                        goto addr_1001fd89_293;
                } else {
                    esp26 = esp26 - 4;
                    *reinterpret_cast<void***>(esp26) = ebx16;
                    if (zf110) {
                        addr_1001fd1b_251:
                        *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&edx2 + 1)));
                        tmp8_1022 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)) + 63);
                        cf34 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_1022) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax40)));
                        *reinterpret_cast<void**>(&eax40) = tmp8_1022;
                        ++ebx16;
                        zf110 = ebx16 == 0;
                        of1016 = __intrinsic();
                        goto addr_1001fd20_1794;
                    } else {
                        ++ebx16;
                        __asm__("outsd ");
                        __asm__("insb ");
                        goto addr_1001fcba_179;
                    }
                }
            }
        }
    } else {
        if (cf34) {
            goto addr_1001fcb1_1796;
        }
        if (!zf110) 
            goto addr_1001fcb1_1796;
        esp26 = esp26 - 4;
        *reinterpret_cast<void***>(esp26) = ebx16;
        if (zf110) 
            goto addr_1001fcab_1793;
        ++ebx16;
        __asm__("outsd ");
        __asm__("insb ");
        __asm__("outsd ");
        if (cf34) 
            goto addr_1001fc8d_256; else 
            goto addr_1001fc4d_259;
    }
    __asm__("outsb ");
    if (zf110) {
        addr_1001fd77_1805:
        ++edi32;
        ++eax40;
        goto addr_1001fd7a_186;
    } else {
        if (cf34) {
            addr_1001fd98_1790:
            eax40 = eax40 + 1 + 1;
            esp1023 = esp26 - 4;
            *reinterpret_cast<void***>(esp1023) = ebx16;
            ++edi32;
            esp1024 = esp1023 - 4;
            *reinterpret_cast<void***>(esp1024) = eax40;
            ++edx2;
            esp1025 = esp1024 - 4;
            *reinterpret_cast<void***>(esp1025) = ebp33;
            esp26 = esp1025 - 4;
            *reinterpret_cast<void***>(esp26) = eax40;
            if (cf34) {
                addr_1001fe12_290:
                __asm__("insb ");
                __asm__("insb ");
                *reinterpret_cast<void***>(esp26 - 4) = esi27;
                esp26 = reinterpret_cast<void**>(*reinterpret_cast<int32_t*>(ebp33 + 0x77) * 0x44407265);
                goto addr_1001fe1b_1807;
            } else {
                if (__intrinsic()) {
                    addr_1001fe0a_267:
                    __asm__("outsb ");
                    ecx = *reinterpret_cast<void***>(esp26);
                    ++eax40;
                    zf107 = eax40 == 0;
                    esp26 = esp26 + 4 - 4;
                    *reinterpret_cast<void***>(esp26) = esp26;
                    goto addr_1001fe0e_270;
                } else {
                    if (cf34) {
                        addr_1001fe1b_1807:
                        goto addr_1001fe20_1782;
                    } else {
                        if (reinterpret_cast<signed char>(edx2) >= reinterpret_cast<signed char>(0)) {
                            addr_1001fdf2_244:
                            ecx = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi27)));
                            zf107 = ecx == 0;
                            of115 = __intrinsic();
                            __asm__("aas ");
                            esp26 = esp26 - 4;
                            *reinterpret_cast<void***>(esp26) = ebx16;
                            goto addr_1001fdf6_264;
                        } else {
                            addr_1001fda9_247:
                            __asm__("outsb ");
                            __asm__("outsw ");
                            goto addr_1001fdac_1787;
                        }
                    }
                }
            }
        } else {
            if (of1016) {
                addr_1001fd6b_249:
                eax40 = eax40 + 1 + 1;
                goto addr_1001fd72_190;
            } else {
                ++ebp33;
                __asm__("insb ");
                __asm__("insd ");
                __asm__("outsb ");
                if (!ebp33) {
                    addr_1001fd73_191:
                    ++ecx;
                    ++ebp33;
                    esp26 = esp26 - 4;
                    *reinterpret_cast<void***>(esp26) = eax40;
                    goto addr_1001fd77_1805;
                } else {
                    ++esp26;
                    goto addr_1001fd34_1780;
                }
            }
        }
    }
}

void fun_10022dee() {
    __asm__("aas ");
}

void fun_100030a8() {
    signed char* ebx1;
    signed char* ebx2;
    signed char dl3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;
    signed char ah8;

    __asm__("in al, dx");
    *ebx1 = reinterpret_cast<signed char>(*ebx2 + dl3);
    *reinterpret_cast<signed char*>(eax4 + eax5 + 0x6f) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(eax6 + eax7 + 0x6f) + ah8);
}

struct s829 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s830 {
    signed char[1] pad1;
    unsigned char f1;
    signed char[2] pad4;
    int32_t f4;
};

struct s831 {
    signed char[24] pad24;
    signed char f24;
};

struct s832 {
    signed char[24] pad24;
    signed char f24;
};

struct s833 {
    unsigned char f0;
    signed char[65535] pad65536;
    unsigned char f65536;
};

struct s834 {
    unsigned char f0;
    signed char[32] pad33;
    unsigned char f33;
    signed char[65502] pad65536;
    unsigned char f65536;
};

struct s835 {
    unsigned char f0;
    void* f1;
};

struct s836 {
    signed char[7] pad7;
    unsigned char f7;
};

struct s837 {
    signed char[7] pad7;
    signed char f7;
};

struct s838 {
    signed char[1] pad1;
    unsigned char f1;
};

void fun_10004a4b(unsigned char cl) {
    uint48_t v2;
    struct s829* eax3;
    uint32_t eax4;
    uint32_t* eax5;
    unsigned char tmp8_6;
    signed char bl7;
    unsigned char* ebx8;
    unsigned char bl9;
    unsigned char* ecx10;
    unsigned char* eax11;
    unsigned char* eax12;
    unsigned char tmp8_13;
    uint1_t cf14;
    void** esp15;
    void* cs16;
    unsigned char tmp8_17;
    uint1_t cf18;
    unsigned char bl19;
    unsigned char* eax20;
    unsigned char bl21;
    unsigned char* eax22;
    unsigned char* eax23;
    unsigned char* ebx24;
    unsigned char* eax25;
    signed char dl26;
    unsigned char* eax27;
    unsigned char* eax28;
    unsigned char* eax29;
    signed char dh30;
    signed char dh31;
    void* esp32;
    unsigned char* eax33;
    unsigned char tmp8_34;
    uint1_t cf35;
    uint32_t tmp32_36;
    uint1_t cf37;
    struct s830* esi38;
    void* esi39;
    unsigned char* eax40;
    struct s830** esp41;
    signed char dl42;
    struct s831* edx43;
    struct s832* edx44;
    struct s833* eax45;
    unsigned char tmp8_46;
    uint1_t cf47;
    uint1_t cf48;
    signed char dh49;
    signed char dh50;
    unsigned char tmp8_51;
    signed char* ebp52;
    uint1_t cf53;
    unsigned char* ebp54;
    unsigned char* ebp55;
    int32_t* esp56;
    struct s834* esi57;
    unsigned char* eax58;
    struct s835* eax59;
    unsigned char tmp8_60;
    uint1_t cf61;
    unsigned char tmp8_62;
    uint1_t cf63;
    signed char dh64;
    unsigned char tmp8_65;
    int32_t esp66;
    void** eax67;
    struct s836* edi68;
    struct s837* edi69;
    unsigned char* eax70;
    unsigned char al71;
    unsigned char tmp8_72;
    uint1_t cf73;
    uint32_t esp74;
    struct s834* eax75;
    signed char dl76;
    unsigned char dl77;
    unsigned char* edi78;
    struct s838* edi79;
    uint1_t cf80;
    signed char dl81;
    unsigned char* edi82;
    signed char dl83;
    unsigned char tmp8_84;
    uint1_t cf85;
    unsigned char* eax86;
    signed char* eax87;

    *reinterpret_cast<int32_t*>(&v2) = reinterpret_cast<int32_t>(__return_address());
    eax3 = reinterpret_cast<struct s829*>(eax4 | *eax5);
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) + reinterpret_cast<uint1_t>(eax3->f0 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax3))))));
    tmp8_6 = reinterpret_cast<unsigned char>(bl7 + eax3->f0);
    *reinterpret_cast<unsigned char*>(&ebx8) = tmp8_6;
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax3) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax3) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(tmp8_6 < bl9)))))));
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 | *reinterpret_cast<unsigned char*>(&eax3));
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + cl);
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
    *ebx8 = reinterpret_cast<unsigned char>(*ebx8 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax3) + 1));
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 - *reinterpret_cast<unsigned char*>(&eax3));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax3) + reinterpret_cast<uint32_t>(eax3)) ^ reinterpret_cast<uint32_t>(eax3);
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 + *reinterpret_cast<unsigned char*>(&eax3));
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 & *reinterpret_cast<unsigned char*>(&eax3));
    eax3->f0 = reinterpret_cast<unsigned char>(eax3->f0 | *reinterpret_cast<unsigned char*>(&eax3));
    *reinterpret_cast<unsigned char*>(&ecx10) = reinterpret_cast<unsigned char>(cl | eax3->f0);
    eax11 = &eax3->f65536;
    *eax11 = reinterpret_cast<unsigned char>(*eax11 + *reinterpret_cast<signed char*>(&eax11));
    eax12 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax11) | *eax11);
    tmp8_13 = reinterpret_cast<unsigned char>(*eax12 + *reinterpret_cast<signed char*>(&eax12));
    cf14 = reinterpret_cast<uint1_t>(tmp8_13 < *eax12);
    *eax12 = tmp8_13;
    esp15 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&v2) + 2)) + 4 - 2);
    *esp15 = cs16;
    *ebx8 = reinterpret_cast<unsigned char>(*ebx8 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + reinterpret_cast<uint1_t>(*ebx8 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + cf14))));
    tmp8_17 = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<uint32_t>(eax12)) + *reinterpret_cast<signed char*>(&eax12));
    cf18 = reinterpret_cast<uint1_t>(tmp8_17 < *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<uint32_t>(eax12)));
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) + reinterpret_cast<uint32_t>(eax12)) = tmp8_17;
    bl19 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx8) + *eax12) + cf18);
    eax20 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax12) | *ecx10);
    *eax20 = reinterpret_cast<unsigned char>(*eax20 | *reinterpret_cast<unsigned char*>(&eax20));
    bl21 = reinterpret_cast<unsigned char>(bl19 & *eax20);
    eax22 = eax20 - 1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<uint32_t>(eax22)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<uint32_t>(eax22)) + *reinterpret_cast<unsigned char*>(&ecx10));
    *eax22 = reinterpret_cast<unsigned char>(*eax22 | *reinterpret_cast<unsigned char*>(&eax22));
    eax23 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax22) | *eax22);
    *eax23 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*eax23 + *reinterpret_cast<signed char*>(&eax23))));
    *reinterpret_cast<unsigned char*>(&ebx24) = reinterpret_cast<unsigned char>(bl21 - *eax23);
    eax25 = eax23 - 1;
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax25) + reinterpret_cast<uint32_t>(eax25)) + dl26);
    *eax25 = reinterpret_cast<unsigned char>(*eax25 | *reinterpret_cast<unsigned char*>(&eax25));
    eax27 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax25) | *eax25);
    *eax27 = reinterpret_cast<unsigned char>(*eax27 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax27) + reinterpret_cast<uint1_t>(*eax27 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax27))))));
    eax28 = eax27 - 1;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28)) = reinterpret_cast<unsigned char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(eax28)) + *reinterpret_cast<unsigned char*>(&ebx24));
    *eax28 = reinterpret_cast<unsigned char>(*eax28 | *reinterpret_cast<unsigned char*>(&eax28));
    eax29 = eax28 - 1;
    *eax29 = reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax29) + 1));
    *eax29 = reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<unsigned char*>(&ecx10));
    *eax29 = reinterpret_cast<unsigned char>(*eax29 + dh30);
    *reinterpret_cast<unsigned char*>(&eax29) = 0;
    *eax29 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax29));
    *eax29 = reinterpret_cast<unsigned char>(*eax29 + *reinterpret_cast<unsigned char*>(&ecx10));
    *eax29 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax29));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29) + 28) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax29) + reinterpret_cast<uint32_t>(eax29) + 28) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax29) + 1));
    *ecx10 = reinterpret_cast<unsigned char>(*ecx10 + dh31);
    *reinterpret_cast<unsigned char*>(&eax29) = 0;
    *eax29 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax29));
    esp32 = reinterpret_cast<void*>(reinterpret_cast<int16_t>(*esp15) + 4);
    *eax29 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax29));
    *eax29 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax29));
    g10000 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(g10000));
    *eax29 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*eax29));
    eax33 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax29) | *eax29);
    tmp8_34 = reinterpret_cast<unsigned char>(*eax33 + *reinterpret_cast<unsigned char*>(&eax33));
    cf35 = reinterpret_cast<uint1_t>(tmp8_34 < *eax33);
    *eax33 = tmp8_34;
    *ebx24 = reinterpret_cast<unsigned char>(*ebx24 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + reinterpret_cast<uint1_t>(*ebx24 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + cf35))));
    tmp32_36 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33)) + reinterpret_cast<uint32_t>(eax33);
    cf37 = reinterpret_cast<uint1_t>(tmp32_36 < *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33)));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax33) + reinterpret_cast<uint32_t>(eax33)) = tmp32_36;
    esi38 = reinterpret_cast<struct s830*>(reinterpret_cast<int32_t>(esi39) + 1 + 1 + 1 - 1);
    *eax33 = reinterpret_cast<unsigned char>(*eax33 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + reinterpret_cast<uint1_t>(*eax33 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + cf37))));
    *eax33 = reinterpret_cast<unsigned char>(*eax33 | *reinterpret_cast<unsigned char*>(&eax33));
    *eax33 = reinterpret_cast<unsigned char>(*eax33 | *reinterpret_cast<unsigned char*>(&eax33));
    eax40 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax33) | *eax33);
    *reinterpret_cast<unsigned char*>(&eax40) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax40)));
    esp41 = reinterpret_cast<struct s830**>(reinterpret_cast<int32_t>(esp32) + 2 - 4);
    *esp41 = esi38;
    *ebx24 = reinterpret_cast<unsigned char>(*ebx24 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx10) + reinterpret_cast<uint1_t>(*ebx24 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx10))))));
    *eax40 = reinterpret_cast<unsigned char>(*eax40 + dl42);
    edx43->f24 = reinterpret_cast<signed char>(edx44->f24 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax40) + 1));
    eax45 = reinterpret_cast<struct s833*>(reinterpret_cast<uint32_t>(eax40) | *eax40);
    tmp8_46 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax45)))));
    cf47 = reinterpret_cast<uint1_t>(tmp8_46 < *reinterpret_cast<unsigned char*>(&eax45));
    *reinterpret_cast<unsigned char*>(&eax45) = tmp8_46;
    __asm__("outsb ");
    cf48 = reinterpret_cast<uint1_t>(eax45->f0 < reinterpret_cast<unsigned char>(dh49 + cf47));
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 - reinterpret_cast<unsigned char>(dh50 + cf48));
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + reinterpret_cast<uint1_t>(eax45->f0 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax45) + cf48))));
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 | *reinterpret_cast<unsigned char*>(&eax45));
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 + *reinterpret_cast<unsigned char*>(&ecx10));
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 + *reinterpret_cast<unsigned char*>(&eax45));
    tmp8_51 = reinterpret_cast<unsigned char>(*ebp52 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax45) + 1));
    cf53 = reinterpret_cast<uint1_t>(tmp8_51 < *ebp54);
    *ebp55 = tmp8_51;
    eax45->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax45->f0 + *reinterpret_cast<unsigned char*>(&eax45)) + cf53);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax45) + reinterpret_cast<uint32_t>(eax45)) ^ reinterpret_cast<uint32_t>(eax45);
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 + *reinterpret_cast<unsigned char*>(&eax45));
    esp56 = &(*esp41)->f4;
    eax45->f0 = reinterpret_cast<unsigned char>(eax45->f0 + *reinterpret_cast<unsigned char*>(&eax45));
    esi57 = reinterpret_cast<struct s834*>(&esi38->f1);
    *reinterpret_cast<unsigned char*>(&eax45) = 8;
    eax58 = &eax45->f65536;
    *eax58 = reinterpret_cast<unsigned char>(*eax58 + *reinterpret_cast<signed char*>(&eax58));
    eax59 = reinterpret_cast<struct s835*>(reinterpret_cast<uint32_t>(eax58) | *eax58);
    tmp8_60 = reinterpret_cast<unsigned char>(eax59->f0 + *reinterpret_cast<unsigned char*>(&eax59));
    cf61 = reinterpret_cast<uint1_t>(tmp8_60 < eax59->f0);
    eax59->f0 = tmp8_60;
    if (!__intrinsic()) {
        eax59 = reinterpret_cast<struct s835*>(reinterpret_cast<uint32_t>(eax59) | *ecx10);
        tmp8_62 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax59)));
        cf63 = reinterpret_cast<uint1_t>(tmp8_62 < *reinterpret_cast<unsigned char*>(&eax59));
        *reinterpret_cast<unsigned char*>(&eax59) = tmp8_62;
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 - reinterpret_cast<unsigned char>(80 + reinterpret_cast<uint1_t>(eax59->f0 < reinterpret_cast<unsigned char>(80 + cf63))));
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 & reinterpret_cast<uint32_t>(ecx10));
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 + *reinterpret_cast<unsigned char*>(&ecx10));
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 + dh64);
        *reinterpret_cast<unsigned char*>(&eax59) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax59)));
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 | *reinterpret_cast<unsigned char*>(&eax59));
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 + *reinterpret_cast<unsigned char*>(&ecx10));
        eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 + *reinterpret_cast<unsigned char*>(&eax59));
        tmp8_65 = reinterpret_cast<unsigned char>(esi57->f0 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax59) + 1));
        cf61 = reinterpret_cast<uint1_t>(tmp8_65 < esi57->f0);
        esi57->f0 = tmp8_65;
    }
    *reinterpret_cast<unsigned char*>(&eax59) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax59) - reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax59) < reinterpret_cast<unsigned char>(static_cast<uint32_t>(cf61))))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax59) + reinterpret_cast<uint32_t>(eax59)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax59) + reinterpret_cast<uint32_t>(eax59)) ^ reinterpret_cast<uint32_t>(eax59);
    eax59->f0 = reinterpret_cast<unsigned char>(eax59->f0 + *reinterpret_cast<unsigned char*>(&eax59));
    esp66 = *esp56 + 4;
    *reinterpret_cast<unsigned char*>(&eax59) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax59)));
    eax67 = &eax59->f1;
    edi68->f7 = reinterpret_cast<unsigned char>(edi69->f7 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    *ebx24 = reinterpret_cast<unsigned char>(*ebx24 | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<uint32_t>(eax67));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    *eax67 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax67) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax67)));
    eax70 = reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax67) | reinterpret_cast<unsigned char>(*eax67));
    *eax70 = reinterpret_cast<unsigned char>(*eax70 + *reinterpret_cast<unsigned char*>(&eax70));
    al71 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax70) | *ecx10);
    tmp8_72 = reinterpret_cast<unsigned char>(static_cast<uint32_t>(al71));
    *reinterpret_cast<unsigned char*>(&eax70) = tmp8_72;
    cf73 = reinterpret_cast<uint1_t>(*reinterpret_cast<unsigned char*>(&eax70) < reinterpret_cast<unsigned char>(*eax70 + reinterpret_cast<uint1_t>(tmp8_72 < al71)));
    *reinterpret_cast<unsigned char*>(&eax70) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax70) - reinterpret_cast<unsigned char>(*eax70 + cf73));
    esp74 = esp66 + *eax70 + cf73;
    *eax70 = reinterpret_cast<unsigned char>(*eax70 | *reinterpret_cast<unsigned char*>(&eax70));
    eax75 = esi57;
    eax75->f33 = reinterpret_cast<unsigned char>(eax75->f33 - reinterpret_cast<unsigned char>(dl76 + reinterpret_cast<uint1_t>(eax75->f33 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(dl77)))));
    *reinterpret_cast<unsigned char*>(&eax75) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax75)));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 | *reinterpret_cast<unsigned char*>(&eax75));
    eax75->f0 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax75->f0 + *reinterpret_cast<unsigned char*>(&eax75)) + reinterpret_cast<uint1_t>(esp74 + eax75->f0 < esp74));
    edi78 = &edi79->f1;
    cf80 = reinterpret_cast<uint1_t>(eax75->f33 < reinterpret_cast<unsigned char>(dl81 + reinterpret_cast<uint1_t>(*edi82 < *reinterpret_cast<unsigned char*>(&eax75))));
    eax75->f33 = reinterpret_cast<unsigned char>(eax75->f33 - reinterpret_cast<unsigned char>(dl83 + cf80));
    *reinterpret_cast<unsigned char*>(&eax75) = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax75))) + cf80);
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 | *reinterpret_cast<unsigned char*>(&eax75));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax75) + reinterpret_cast<uint1_t>(eax75->f0 < reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax75))))));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 | *reinterpret_cast<unsigned char*>(&eax75));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 + *reinterpret_cast<unsigned char*>(&ecx10));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 + *reinterpret_cast<unsigned char*>(&eax75));
    tmp8_84 = reinterpret_cast<unsigned char>(*edi78 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax75) + 1));
    cf85 = reinterpret_cast<uint1_t>(tmp8_84 < *edi78);
    *edi78 = tmp8_84;
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 - reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax75) + reinterpret_cast<uint1_t>(eax75->f0 < reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax75) + cf85))));
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax75) + reinterpret_cast<uint32_t>(eax75)) = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(eax75) + reinterpret_cast<uint32_t>(eax75)) ^ reinterpret_cast<uint32_t>(eax75);
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 + *reinterpret_cast<unsigned char*>(&eax75));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 + *reinterpret_cast<unsigned char*>(&eax75));
    eax75->f0 = reinterpret_cast<unsigned char>(eax75->f0 | *reinterpret_cast<unsigned char*>(&eax75));
    *reinterpret_cast<unsigned char*>(&eax75) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax75) + 8);
    eax86 = &eax75->f65536;
    *eax86 = reinterpret_cast<unsigned char>(*eax86 + *reinterpret_cast<signed char*>(&eax86));
    eax87 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax86) | *eax86);
    *eax87 = reinterpret_cast<signed char>(*eax87 + *reinterpret_cast<signed char*>(&eax87));
}

struct s839 {
    signed char[1] pad1;
    signed char f1;
};

signed char g43891100;

void fun_10005197(int32_t a1, int32_t a2) {
    uint88_t v1;
    signed char* eax2;
    signed char* eax3;
    signed char al4;
    signed char* eax5;
    signed char* eax6;
    signed char al7;
    signed char* eax8;
    signed char* eax9;
    signed char al10;
    signed char* eax11;
    signed char* eax12;
    signed char al13;
    signed char* eax14;
    signed char* eax15;
    signed char al16;
    struct s0** ecx17;
    signed char ch18;
    signed char bh19;
    unsigned char* eax20;
    signed char* eax21;
    int32_t ebp22;
    int32_t ebp23;
    signed char* eax24;
    signed char* eax25;
    void* esp26;
    unsigned char* ecx27;
    signed char bh28;
    void** eax29;
    void* esp30;
    void* tmp8_31;
    uint1_t cf32;
    signed char* esi33;
    struct s839* esi34;
    void* dl35;
    void** edx36;
    int32_t* eax37;
    signed char* ebp38;
    signed char* ebp39;
    signed char* ebp40;
    signed char* ebp41;
    signed char bh42;
    int32_t ecx43;
    signed char* edx44;
    signed char* edx45;
    signed char dh46;
    signed char* ebx47;
    signed char* ebx48;
    signed char* ebx49;
    int32_t* eax50;
    signed char* edi51;
    signed char* edi52;
    signed char* bx53;
    signed char* bx54;
    signed char* edx55;
    signed char* edx56;
    signed char dl57;
    signed char* eax58;
    signed char** edi59;
    signed char* edx60;
    signed char* edx61;
    signed char dl62;
    int32_t ebx63;
    int32_t ebx64;

    *reinterpret_cast<int32_t*>(&v1) = a1;
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 4) = a2;
    *eax2 = reinterpret_cast<signed char>(*eax3 + al4);
    *eax5 = reinterpret_cast<signed char>(*eax6 + al7);
    *eax8 = reinterpret_cast<signed char>(*eax9 + al10);
    *eax11 = reinterpret_cast<signed char>(*eax12 + al13);
    *eax14 = reinterpret_cast<signed char>(*eax15 + al16);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx17) + 1) = reinterpret_cast<signed char>(ch18 + bh19);
    eax20 = fun_10008af6(ecx17, __return_address());
    *eax20 = reinterpret_cast<unsigned char>(*eax20 + *reinterpret_cast<unsigned char*>(&eax20));
    *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) + *eax20);
    *eax20 = reinterpret_cast<unsigned char>(*eax20 + *reinterpret_cast<unsigned char*>(&eax20));
    eax21 = reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax20) & *eax20);
    *eax21 = reinterpret_cast<signed char>(*eax21 + *reinterpret_cast<signed char*>(&eax21));
    *reinterpret_cast<signed char*>(ebp22 + 0x79280000) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(ebp23 + 0x79280000) - *reinterpret_cast<signed char*>(&eax21));
    *eax21 = reinterpret_cast<signed char>(*eax21 + *reinterpret_cast<signed char*>(&eax21));
    *eax21 = reinterpret_cast<signed char>(*eax21 + *reinterpret_cast<signed char*>(&eax21));
    *eax21 = reinterpret_cast<signed char>(*eax21 + *reinterpret_cast<signed char*>(&eax21));
    eax24 = fun_10008b12(*reinterpret_cast<int32_t*>(&v1), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 4));
    *eax24 = reinterpret_cast<signed char>(*eax24 + *reinterpret_cast<signed char*>(&eax24));
    eax25 = reinterpret_cast<signed char*>((reinterpret_cast<uint32_t>(eax24) | 0x28000000) - 0x7ab40000);
    *eax25 = reinterpret_cast<signed char>(*eax25 + *reinterpret_cast<signed char*>(&eax25));
    esp26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4 + 4 - 4 + 4 + 4 - 1);
    *eax25 = reinterpret_cast<signed char>(*eax25 + *reinterpret_cast<signed char*>(&eax25));
    *eax25 = reinterpret_cast<signed char>(*eax25 + *reinterpret_cast<signed char*>(&eax25));
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx27) + 1) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx17) + 1) + bh28);
    eax29 = fun_10008b2e(*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 3), *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(&v1) + 7));
    esp30 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp26) - 4 + 4 + 4);
    tmp8_31 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    cf32 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_31) < reinterpret_cast<unsigned char>(*eax29));
    *eax29 = tmp8_31;
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29))) + cf32);
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<int32_t>(eax29));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    __asm__("rol byte [eax], 0x0");
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    esi33 = &esi34->f1;
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<signed char>(dl35));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *ecx27 = reinterpret_cast<unsigned char>(*ecx27 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax29) + 1)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<int32_t>(esp30));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<signed char>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(&eax29) + 1)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<int32_t>(esp30));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *reinterpret_cast<void**>(&eax29) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29))));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *eax29 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax29) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)));
    *reinterpret_cast<void**>(&eax29) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax29)) + reinterpret_cast<signed char>(*edx36));
    eax37 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax29) + reinterpret_cast<int32_t>(*reinterpret_cast<void**>(reinterpret_cast<int32_t>(esp30) + reinterpret_cast<int32_t>(eax29))));
    *reinterpret_cast<signed char*>(&eax37) = reinterpret_cast<signed char>(static_cast<int32_t>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(&eax37) + 4) + 4) + 4)));
    *ebp38 = reinterpret_cast<signed char>(*ebp39 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax37) + 1));
    *ebp40 = reinterpret_cast<signed char>(*ebp41 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax37) + 1));
    __asm__("outsb ");
    *ecx27 = reinterpret_cast<unsigned char>(*ecx27 + bh42);
    ecx43 = reinterpret_cast<int32_t>(ecx27 - 1);
    *esi33 = reinterpret_cast<signed char>(*esi33 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx43) + 1));
    *edx44 = reinterpret_cast<signed char>(*edx45 + dh46);
    __asm__("popad ");
    *ebx47 = reinterpret_cast<signed char>(*ebx48 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax37) + 1));
    eax50 = reinterpret_cast<int32_t*>(*eax37 * 0x650076);
    *edi51 = reinterpret_cast<signed char>(*edi52 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx43) + 1));
    *bx53 = reinterpret_cast<signed char>(*bx54 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx43) + 1));
    __asm__("outsb ");
    *edx55 = reinterpret_cast<signed char>(*edx56 + dl57);
    eax58 = reinterpret_cast<signed char*>(*eax50 * 0x680067);
    *eax58 = reinterpret_cast<signed char>(*eax58 + *reinterpret_cast<signed char*>(&eax58));
    __asm__("out dx, al");
    *reinterpret_cast<signed char*>(&eax58) = g43891100;
    *edi59 = eax58;
    *edx60 = reinterpret_cast<signed char>(*edx61 + dl62);
    (esi33 - 4 + 1 - 4)[0x644a714c] = *reinterpret_cast<signed char*>(&ecx43);
    __asm__("out 0x24, al");
    if (eax58 + 1) {
        *reinterpret_cast<unsigned char*>(ebx63 + 0x582a84da) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(ebx64 + 0x582a84da) & 0x78);
    }
}

int32_t g80026;

struct s840 {
    signed char[1] pad1;
    signed char f1;
};

struct s842 {
    signed char[4] pad4;
    unsigned char* f4;
};

struct s841 {
    signed char[4] pad4;
    struct s842* f4;
};

void* g4110100;

void fun_10005eea(uint32_t* ecx) {
    int32_t eax2;
    uint1_t cf3;
    unsigned char* eax4;
    signed char al5;
    signed char* eax6;
    void* ecx7;
    void* ecx8;
    unsigned char tmp8_9;
    uint1_t cf10;
    int32_t edx11;
    int32_t edx12;
    unsigned char bl13;
    void* eax14;
    void** eax15;
    int32_t* ebx16;
    void** ebx17;
    int32_t* esp18;
    void** eax19;
    void** ecx20;
    void** eax21;
    void* al22;
    void* tmp8_23;
    uint1_t cf24;
    void* tmp8_25;
    uint1_t cf26;
    void* tmp8_27;
    void* tmp8_28;
    uint1_t cf29;
    void* tmp8_30;
    uint1_t cf31;
    void* tmp8_32;
    signed char* esi33;
    struct s840* esi34;
    unsigned char** esp35;
    void* al36;
    void* tmp8_37;
    unsigned char* ebx38;
    void* dl39;
    uint32_t tmp32_40;
    uint1_t cf41;
    void* tmp32_42;
    uint1_t cf43;
    void* edx44;
    void* edx45;
    void* dh46;
    void* tmp8_47;
    void* dl48;
    uint1_t cf49;
    signed char* edx50;
    signed char* edx51;
    signed char dl52;
    uint32_t* edx53;
    int32_t* edx54;
    void** eax55;
    signed char dl56;

    *ecx = *ecx + eax2 + cf3;
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<unsigned char>(al5 + *eax6);
    ecx7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx) - g80026);
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + reinterpret_cast<int32_t>(eax4));
    ecx8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx7) + 1);
    tmp8_9 = reinterpret_cast<unsigned char>(*eax4 + *reinterpret_cast<unsigned char*>(&eax4));
    cf10 = reinterpret_cast<uint1_t>(tmp8_9 < *eax4);
    *eax4 = tmp8_9;
    *eax4 = reinterpret_cast<unsigned char>(*eax4 + reinterpret_cast<int32_t>(ecx8) + cf10);
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx8) + edx11 + 4) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ecx8) + edx12 + 4) | bl13);
    *reinterpret_cast<unsigned char*>(&eax14) = reinterpret_cast<unsigned char>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax4)));
    eax15 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax14) - (*ebx16 + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax14) < reinterpret_cast<uint32_t>(*ebx17))));
    *reinterpret_cast<void***>(eax15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *reinterpret_cast<void***>(eax15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) - (reinterpret_cast<unsigned char>(eax15) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) < reinterpret_cast<unsigned char>(eax15))));
    *reinterpret_cast<void***>(eax15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax15)));
    *reinterpret_cast<void***>(eax15) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax15)) + reinterpret_cast<unsigned char>(eax15));
    esp18 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__return_address()) + 4);
    eax19 = reinterpret_cast<void**>(eax15 - 1);
    ecx20 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ecx8) - 1);
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) & reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    *eax19 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax19) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax19)));
    eax21 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax19) + reinterpret_cast<unsigned char>(*eax19));
    al22 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21))));
    tmp8_23 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al22)));
    cf24 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_23) < reinterpret_cast<unsigned char>(al22));
    *reinterpret_cast<void**>(&eax21) = tmp8_23;
    do {
        tmp8_25 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)) + reinterpret_cast<unsigned char>(*eax21)) + cf24);
        cf24 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_25) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
        *reinterpret_cast<void**>(&eax21) = tmp8_25;
    } while (!*reinterpret_cast<void**>(&eax21));
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21))))));
    cf26 = 0;
    do {
        tmp8_27 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)) + reinterpret_cast<unsigned char>(*eax21)) + cf26);
        cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_27) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
        *reinterpret_cast<void**>(&eax21) = tmp8_27;
    } while (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(*reinterpret_cast<void**>(&eax21)) < reinterpret_cast<signed char>(0) != __intrinsic()) | reinterpret_cast<uint1_t>(*reinterpret_cast<void**>(&eax21) == 0));
    tmp8_28 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21))) + cf26);
    cf29 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_28) < reinterpret_cast<unsigned char>(*eax21));
    *eax21 = tmp8_28;
    tmp8_30 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21))) + cf29);
    cf31 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_30) < reinterpret_cast<unsigned char>(*eax21));
    *eax21 = tmp8_30;
    tmp8_32 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)) + reinterpret_cast<unsigned char>(*eax21)) + cf31);
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(tmp8_32) - reinterpret_cast<unsigned char>(11 - reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_32) < reinterpret_cast<unsigned char>(11 - reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_32) < reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)))))));
    *reinterpret_cast<unsigned char*>(*esp18 + 0x3165bfc) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(*esp18 + 0x3165bfc) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) | reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    esi33 = &esi34->f1;
    esp35 = &(*reinterpret_cast<struct s841**>(reinterpret_cast<int32_t>(esp18 + 1) - 1))->f4->f4;
    al36 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21))));
    tmp8_37 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(al36)));
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp8_37) + reinterpret_cast<unsigned char>(*ecx20)) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_37) < reinterpret_cast<unsigned char>(al36)));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) | *reinterpret_cast<unsigned char*>(&ecx20));
    ebx38 = *esp35;
    *ecx20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx20) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *ecx20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx20) + reinterpret_cast<unsigned char>(dl39));
    tmp32_40 = *reinterpret_cast<uint32_t*>(esi33 - 4) + reinterpret_cast<int32_t>(esp35 + 1);
    cf41 = reinterpret_cast<uint1_t>(tmp32_40 < *reinterpret_cast<uint32_t*>(esi33 - 4));
    *reinterpret_cast<uint32_t*>(esi33 - 4) = tmp32_40;
    tmp32_42 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<uint32_t>(eax21) + cf41);
    cf43 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_42) < reinterpret_cast<unsigned char>(*eax21));
    *eax21 = tmp32_42;
    __asm__("aam 0xfc");
    *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(edx44) + reinterpret_cast<uint32_t>(eax21)) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx45) + reinterpret_cast<uint32_t>(eax21)) + reinterpret_cast<uint32_t>(eax21) + cf43;
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(dh46));
    *reinterpret_cast<void**>(&eax21) = g4110100;
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)) + reinterpret_cast<unsigned char>(*eax21));
    *reinterpret_cast<unsigned char*>(&ecx20) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx20) ^ *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax21) + 1));
    *eax21 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax21) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    *ecx20 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx20) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)));
    tmp8_47 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*ecx20) + reinterpret_cast<unsigned char>(dl48));
    cf49 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp8_47) < reinterpret_cast<unsigned char>(*ecx20));
    *ecx20 = tmp8_47;
    *reinterpret_cast<void**>(&eax21) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax21)) + 2) + cf49);
    *edx50 = reinterpret_cast<signed char>(*edx51 + dl52);
    *edx53 = *edx54 + reinterpret_cast<uint32_t>(eax21);
    *ebx38 = reinterpret_cast<unsigned char>(*ebx38 + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&ecx20) + 1));
    eax55 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax21) | 0x40026);
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) + reinterpret_cast<uint32_t>(eax55));
    *reinterpret_cast<void**>(&eax55) = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)) + reinterpret_cast<unsigned char>(*eax55));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) ^ reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *esi33 = reinterpret_cast<signed char>(*esi33 + dl56);
    *ebx38 = reinterpret_cast<unsigned char>(*ebx38 + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *eax55 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(*eax55) + reinterpret_cast<unsigned char>(*reinterpret_cast<void**>(&eax55)));
    *reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax55) + reinterpret_cast<uint32_t>(eax55)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(eax55) + reinterpret_cast<uint32_t>(eax55)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax55) + 1));
}

void fun_100061bb(signed char* ecx) {
    int32_t* eax2;
    void* eax3;
    void** eax4;
    signed char bl5;

    eax2 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(eax3) + reinterpret_cast<int32_t>(*eax4));
    *ecx = reinterpret_cast<signed char>(*ecx + bl5);
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax2) + reinterpret_cast<int32_t>(eax2)) = reinterpret_cast<signed char>(*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax2) + reinterpret_cast<int32_t>(eax2)) + *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&eax2) + 1));
    *eax2 = *eax2 + reinterpret_cast<int32_t>(eax2);
}

void fun_100068de() {
}

unsigned char gd200115c;

void fun_100068d1() {
    unsigned char ah1;

    gd200115c = reinterpret_cast<unsigned char>(gd200115c | ah1);
}

void fun_1000785c() {
    int1_t cf1;

    if (cf1) 
        goto 0x10007888;
    goto 0x100078bb;
}

int32_t fun_1000df80();

void fun_1000de20();

void fun_10008ab0() {
    g10024600 = reinterpret_cast<void**>(fun_1000df80);
    g100245fc = reinterpret_cast<int32_t>(fun_1000de20);
}

struct s843 {
    struct s21* f0;
    struct s21* f1;
    struct s21* f2;
    struct s21* f3;
};

void** DllGetClassObject(int32_t ecx, struct s157* a2, int32_t a3, struct s22*** a4) {
    void* ebp5;
    uint32_t eax6;
    uint32_t v7;
    struct s157* ebx8;
    uint32_t edi9;
    struct s843* eax10;
    struct s157* edx11;
    uint32_t esi12;
    struct s21* ecx13;
    int1_t cf14;
    uint1_t cf15;
    uint32_t eax16;
    int32_t edi17;
    int32_t edi18;
    int32_t eax19;
    struct s20* eax20;
    struct s21* edi21;
    int32_t eax22;
    struct s21* eax23;
    struct s21* ebx24;
    void** eax25;
    void** eax26;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    v7 = eax6 ^ reinterpret_cast<uint32_t>(ebp5);
    ebx8 = a2;
    *a4 = reinterpret_cast<struct s22**>(0);
    edi9 = 0;
    do {
        eax10 = *reinterpret_cast<struct s843**>(edi9 * 8 + 0x10001a70);
        edx11 = ebx8;
        esi12 = 12;
        do {
            ecx13 = edx11->f0;
            if (ecx13 != eax10->f0) 
                break;
            ++edx11;
            ++eax10;
            cf14 = esi12 < 4;
            esi12 = esi12 - 4;
        } while (!cf14);
        goto addr_10008c01_5;
        cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx13) < reinterpret_cast<unsigned char>(eax10->f0));
        if (ecx13 != eax10->f0 || ((ecx13 = edx11->f1, cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx13) < reinterpret_cast<unsigned char>(eax10->f1)), ecx13 != eax10->f1) || ((ecx13 = edx11->f2, cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx13) < reinterpret_cast<unsigned char>(eax10->f2)), ecx13 != eax10->f2) || (ecx13 = edx11->f3, cf15 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx13) < reinterpret_cast<unsigned char>(eax10->f3)), ecx13 != eax10->f3)))) {
            eax16 = reinterpret_cast<uint32_t>(eax10) - (reinterpret_cast<uint32_t>(eax10) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax10) < reinterpret_cast<uint32_t>(eax10) + cf15)) | 1;
        } else {
            goto addr_10008c01_5;
        }
        addr_10008c03_9:
        if (!eax16) 
            break; else 
            continue;
        addr_10008c01_5:
        eax16 = 0;
        goto addr_10008c03_9;
        ++edi9;
    } while (edi9 < 4);
    goto addr_10008c0d_11;
    edi17 = *reinterpret_cast<int32_t*>(edi9 * 8 + 0x10001a74);
    if (!edi17) {
        addr_1000ceff_13:
        edi18 = 0x80040111;
    } else {
        eax19 = reinterpret_cast<int32_t>(GetProcessHeap(8, 12));
        eax20 = reinterpret_cast<struct s20*>(HeapAlloc(eax19, 8, 12));
        if (!eax20) {
            edi18 = 0x8007000e;
        } else {
            eax20->f0 = reinterpret_cast<struct s21*>(0x10001af4);
            eax20->f4 = 1;
            eax20->f8 = edi17;
            ++g10024668;
            ecx13 = eax20->f0;
            edi21 = *reinterpret_cast<struct s21**>(&ecx13->f0);
            if (!reinterpret_cast<int1_t>(edi21 == fun_10008d70)) {
                ecx13 = edi21;
                image_base_(ecx13, eax20, a3, a4, eax19, 8, 12);
                eax22 = reinterpret_cast<int32_t>(edi21(ecx13, eax20, a3, a4, eax19, 8, 12));
            } else {
                eax22 = fun_10008d70(eax20, a3, a4, eax19, 8, 12);
            }
            edi18 = eax22;
            eax23 = eax20->f0;
            ebx24 = eax23->f8;
            if (!reinterpret_cast<int1_t>(ebx24 == fun_10008d30)) {
                ecx13 = ebx24;
                image_base_(ecx13, eax20, eax19, 8, 12);
                ebx24(ecx13, eax20, eax19, 8, 12);
                ebx8 = a2;
            } else {
                fun_10008d30(ecx13, eax20, eax19, 8, 12);
                ebx8 = a2;
            }
        }
    }
    if (edi18 < 0) {
        eax25 = fun_1000d5fd(ecx13);
        fun_1000d51f(eax25, ebx8, a3, a4);
    }
    eax26 = fun_1000a130(v7 ^ reinterpret_cast<uint32_t>(ebp5));
    return eax26;
    addr_10008c0d_11:
    goto addr_1000ceff_13;
}

struct s844 {
    signed char[8] pad8;
    int32_t f8;
};

void** fun_10008cd0(int32_t ecx, struct s844* a2, int32_t a3, struct s23* a4, void*** a5) {
    void* ebp6;
    uint32_t eax7;
    int32_t esi8;
    void** eax9;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    *a5 = reinterpret_cast<void**>(0);
    if (!a3) {
        esi8 = a2->f8;
        if (!reinterpret_cast<int1_t>(esi8 == fun_10008d90)) {
            image_base_(esi8, a4, a5);
            esi8(esi8, a4, a5);
        } else {
            fun_10008d90(a4, a5);
        }
    }
    eax9 = fun_1000a130(eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6));
    return eax9;
}

struct s845 {
    signed char[16] pad16;
    void** f16;
};

int32_t ConvertStringSecurityDescriptorToSecurityDescriptorW = 0x262ce;

int32_t QueueUserWorkItem = 0x26348;

int32_t fun_10010760(void** ecx, void** a2, void** a3, void** a4);

void** fun_10009030(void** ecx, struct s845* a2, int32_t a3) {
    void* ebp4;
    uint32_t eax5;
    void** edi6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    int32_t eax38;
    signed char v39;
    int32_t eax40;
    void** v41;
    int32_t eax42;
    void** v43;
    void** v44;
    int32_t eax45;
    void** v46;
    int32_t eax47;
    uint32_t eax48;
    uint32_t esi49;
    int1_t sf50;
    void* v51;
    void* v52;
    uint32_t eax53;
    int1_t sf54;
    uint32_t ecx55;
    void** eax56;
    int32_t eax57;
    unsigned char bl58;
    void** eax59;
    void** v60;
    void** esi61;
    int32_t eax62;
    unsigned char al63;
    unsigned char al64;
    int32_t eax65;
    int32_t eax66;
    void** ebx67;
    void** esi68;
    void** v69;
    void** v70;
    int32_t eax71;
    int32_t v72;
    int32_t eax73;
    signed char bl74;
    int32_t v75;
    int32_t eax76;
    int32_t eax77;
    int32_t v78;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    fun_1000b8d8(ecx, reinterpret_cast<uint32_t>(ebp4) + 0xfffffee4, 0, 0x118, edi6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37);
    eax38 = reinterpret_cast<int32_t>(GetVersionExW());
    if (!eax38 || (v39 != 1 || (eax40 = reinterpret_cast<int32_t>(GetSystemMetrics(0x1000)), !!eax40))) {
        addr_1000d03d_2:
    } else {
        v41 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffedc);
        eax42 = reinterpret_cast<int32_t>(RegOpenKeyExW(0x80000002, "S", 0, 1, v41, 0x1000));
        if (!eax42) {
            v43 = v44;
            goto addr_1000d037_5;
        } else {
            v43 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffed8);
            eax45 = reinterpret_cast<int32_t>(RegOpenKeyExW(0x80000002, "S", 0, 1, v43, 0x80000002, "S", 0, 1, v41, 0x1000));
            if (!eax45) {
                goto addr_1000d037_5;
            } else {
                v46 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffed0);
                eax47 = reinterpret_cast<int32_t>(ConvertStringSecurityDescriptorToSecurityDescriptorW());
                if (!eax47) {
                    eax48 = reinterpret_cast<uint32_t>(GetLastError());
                    esi49 = eax48;
                    sf50 = reinterpret_cast<int32_t>(esi49) < reinterpret_cast<int32_t>(0);
                    if (!(reinterpret_cast<uint1_t>(sf50) | reinterpret_cast<uint1_t>(esi49 == 0))) {
                        esi49 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi49)) | 0x80070000;
                        sf50 = reinterpret_cast<int32_t>(esi49) < reinterpret_cast<int32_t>(0);
                    }
                    if (sf50) 
                        goto addr_10009163_12; else 
                        goto addr_1000d06c_13;
                } else {
                    addr_10009117_14:
                    v51 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffed8);
                    v52 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffecc);
                    eax53 = reinterpret_cast<uint32_t>(RegCreateKeyExW(0x80000002, "S", 0, 0, 1, 1, v52, v51, 0));
                    esi49 = eax53;
                    sf54 = reinterpret_cast<int32_t>(esi49) < reinterpret_cast<int32_t>(0);
                    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(sf54) | reinterpret_cast<uint1_t>(esi49 == 0))) {
                        esi49 = static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&esi49)) | 0x80070000;
                        sf54 = reinterpret_cast<int32_t>(esi49) < reinterpret_cast<int32_t>(0);
                        goto addr_10009149_16;
                    }
                }
            }
        }
    }
    addr_100091d2_17:
    ecx55 = eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4);
    eax56 = fun_1000a130(ecx55, ecx55);
    return eax56;
    addr_1000d037_5:
    RegCloseKey(v43, 0x80000002, "S", 0, 1, v41, 0x1000);
    goto addr_1000d03d_2;
    addr_10009163_12:
    if (reinterpret_cast<int32_t>(esi49) >= reinterpret_cast<int32_t>(0)) {
        eax57 = a3;
        if (!eax57) {
            ecx = a2->f16;
            bl58 = 0;
            if (ecx) {
                eax59 = *reinterpret_cast<void***>(ecx);
                v60 = ecx;
                esi61 = *reinterpret_cast<void***>(eax59 + 16);
                ecx = esi61;
                image_base_(ecx, v60);
                eax62 = reinterpret_cast<int32_t>(esi61(ecx, v60));
                bl58 = reinterpret_cast<uint1_t>(!!eax62);
            }
            al63 = fun_100108f3(ecx);
            if (!(al63 || ((al64 = fun_1000d2dd(ecx), !!al64) || bl58))) {
                eax65 = reinterpret_cast<int32_t>(QueueUserWorkItem(ecx, fun_10010760, 0, 16));
                if (!eax65) {
                    eax66 = reinterpret_cast<int32_t>(GetLastError(ecx, fun_10010760, 0, 16));
                    if (!(reinterpret_cast<uint1_t>(eax66 < 0) | reinterpret_cast<uint1_t>(eax66 == 0))) {
                    }
                }
                fun_100106ef(ecx, "S", 1, fun_10010760, 0, 16, ebx67, "D", 1, v46, 0, esi68, 0x80000002, "S", 0, 1, v43, 0x80000002, "S", 0, 1, v41, 0x1000);
            }
            v69 = reinterpret_cast<void**>(1);
            v70 = reinterpret_cast<void**>("L");
            goto addr_1000d0b4_30;
        } else {
            if (eax57 - 1) {
                goto addr_100091d0_33;
            } else {
                v69 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp4) + 0xfffffedc);
                v70 = reinterpret_cast<void**>(1);
                eax71 = reinterpret_cast<int32_t>(RegOpenKeyExW(0x80000002, "S", 0, 1, v69));
                if (eax71) {
                    addr_100091cb_35:
                    goto addr_100091d0_33;
                } else {
                    eax73 = reinterpret_cast<int32_t>(RegQueryValueExW(v72, "S", eax71, eax71, eax71, eax71, 0x80000002, "S", 0, 1, v69));
                    if (eax73) {
                        bl74 = 0;
                    } else {
                        bl74 = 1;
                    }
                    RegCloseKey(v75, v72, "S", eax71, eax71, eax71, eax71, 0x80000002, "S", 0, 1, v69);
                    if (!bl74) 
                        goto addr_1000d081_40; else 
                        goto addr_100091cb_35;
                }
            }
        }
    }
    addr_100091d1_41:
    goto addr_100091d2_17;
    addr_1000d0b4_30:
    fun_100106ef(ecx, v70, v69, ebx67, "D", 1, v46, 0, esi68, 0x80000002, "S", 0, 1, v43, 0x80000002, "S", 0, 1, v41, 0x1000, reinterpret_cast<uint32_t>(ebp4) + 0xfffffee0, edi6, 12);
    addr_100091d0_33:
    goto addr_100091d1_41;
    addr_1000d081_40:
    eax76 = reinterpret_cast<int32_t>(QueueUserWorkItem(fun_10010670, 0, 16, v75, v72, "S", eax71, eax71, eax71, eax71, 0x80000002, "S", 0, 1, v69));
    if (!eax76) {
        eax77 = reinterpret_cast<int32_t>(GetLastError(fun_10010670, 0, 16, v75, v72, "S", eax71, eax71, eax71, eax71, 0x80000002, "S", 0, 1, v69));
        if (!(reinterpret_cast<uint1_t>(eax77 < 0) | reinterpret_cast<uint1_t>(eax77 == 0))) {
        }
    }
    goto addr_1000d0b4_30;
    addr_1000d06c_13:
    goto addr_10009117_14;
    addr_10009149_16:
    if (!sf54) {
        RegCloseKey(v78, 0x80000002, "S", 0, 0, 1, 1, v52, v51, 0);
    }
    LocalFree(0, 0x80000002, "S", 0, 0, 1, 1, v52, v51, 0);
    goto addr_10009163_12;
}

int32_t DllCanUnloadNow() {
    void*** eax1;
    int32_t ecx2;
    void** ecx3;
    void** eax4;
    int1_t zf5;
    int1_t less_or_equal6;
    signed char al7;

    eax1 = g2c;
    ecx2 = g1002444c;
    ecx3 = *reinterpret_cast<void***>(eax1 + ecx2 * 4);
    eax4 = g10024618;
    if (reinterpret_cast<signed char>(eax4) > reinterpret_cast<signed char>(*reinterpret_cast<void***>(ecx3 + 4)) && (fun_1000b57d(0x10024618), zf5 = reinterpret_cast<int1_t>(g10024618 == 0xffffffff), zf5)) {
        g10024484 = reinterpret_cast<void**>(0x1002461c);
        g1002461c = 0x10001058;
        fun_1000a45e(ecx3, fun_1000ce00);
        fun_1000b53c(ecx3, 0x10024618, fun_1000ce00);
    }
    less_or_equal6 = g10024668 <= 0;
    if (!less_or_equal6 || (al7 = fun_10008af0(0x1002461c, 0), al7 == 0)) {
        return 1;
    } else {
        return 0;
    }
}

struct s846 {
    signed char[8] pad8;
    struct s2* f8;
};

void** fun_100095d1(struct s2* ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    struct s2* ebx5;
    struct s24* eax6;
    struct s25** esi7;
    struct s25** eax8;
    struct s25** edx9;
    struct s25** v10;
    struct s2* edi11;
    struct s2* eax12;
    int32_t edi13;
    int32_t eax14;
    struct s2** eax15;
    struct s2* v16;
    struct s846** eax17;
    struct s2* edi18;
    struct s2* eax19;
    struct s2* esi20;
    void** eax21;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    ebx5 = ecx;
    ebx5->f0 = reinterpret_cast<struct s2*>(0x10001058);
    eax6 = fun_10009680(ebx5);
    esi7 = &eax6->f4;
    eax8 = fun_10009690(ebx5);
    edx9 = eax8;
    v10 = edx9;
    if (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(edx9)) {
        do {
            if (*esi7) {
                ecx = ebx5->f0;
                edi11 = ecx->f12;
                if (!reinterpret_cast<int1_t>(edi11 == fun_100096a0)) {
                    ecx = edi11;
                    image_base_(ecx, ebx5);
                    edi11(ecx, ebx5);
                    edx9 = v10;
                }
                if (*(*esi7)->f12) {
                    eax12 = ebx5->f0;
                    edi13 = eax12->f28;
                    image_base_(edi13, ebx5);
                    eax14 = reinterpret_cast<int32_t>(edi13(edi13, ebx5));
                    AcquireSRWLockExclusive(edi13, eax14, ebx5);
                    eax15 = (*esi7)->f12;
                    ecx = *eax15;
                    if (ecx) {
                        *eax15 = reinterpret_cast<struct s2*>(0);
                        if (eax14) {
                            ReleaseSRWLockExclusive(eax14, eax14, ebx5);
                            ecx = ecx;
                        }
                        v16 = ecx;
                        eax17 = reinterpret_cast<struct s846**>(DecodePointer(v16, eax14, ebx5));
                        edi18 = (*eax17)->f8;
                        ecx = edi18;
                        image_base_(ecx, eax17, v16, eax14, ebx5);
                        edi18(ecx, eax17, v16, eax14, ebx5);
                    } else {
                        if (eax14) {
                            ReleaseSRWLockExclusive(eax14, eax14, ebx5);
                        }
                    }
                    edx9 = v10;
                }
            }
            ++esi7;
        } while (reinterpret_cast<uint32_t>(esi7) < reinterpret_cast<uint32_t>(edx9));
    }
    eax19 = ebx5->f0;
    esi20 = eax19->f12;
    if (!reinterpret_cast<int1_t>(esi20 == fun_100096a0)) {
        image_base_(esi20, ebx5);
        esi20(esi20, ebx5);
    } else {
        fun_100096a0(ecx, ebx5);
    }
    g10024484 = reinterpret_cast<void**>(0);
    g10024614 = reinterpret_cast<void*>(0);
    eax21 = fun_1000a130(v4 ^ reinterpret_cast<uint32_t>(ebp2));
    return eax21;
}

struct s847 {
    signed char[8] pad8;
    struct s847* f8;
};

void fun_100096a8(int32_t ecx) {
    struct s847** esi2;
    struct s847* edi3;
    struct s847* v4;
    int32_t eax5;

    esi2 = reinterpret_cast<struct s847**>(0x1002463c);
    if (!0) {
        do {
            edi3 = *esi2;
            if (edi3) {
                do {
                    v4 = edi3;
                    edi3 = edi3->f8;
                    eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, v4));
                    HeapFree(eax5, 0, v4);
                } while (edi3);
            }
            *esi2 = reinterpret_cast<struct s847*>(0);
            ++esi2;
        } while (!reinterpret_cast<int1_t>(esi2 == 0x10024664));
    }
    return;
}

struct s848 {
    uint32_t f0;
    signed char[4] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
    int32_t f20;
    signed char[8] pad32;
    int32_t f32;
    int32_t f36;
};

void** fun_10009760(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, struct s848* a10) {
    void* ebp11;
    uint32_t eax12;
    int32_t edx13;
    int32_t ecx14;
    int32_t ecx15;
    uint32_t ecx16;
    int32_t esi17;
    int32_t v18;
    void** eax19;

    ebp11 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax12 = g100240c4;
    if (a10) {
        edx13 = a4;
        ecx14 = a3;
        if (!ecx14) {
            a10->f0 = 0;
            goto addr_100097d3_4;
        } else {
            if (ecx14 - 1) {
                addr_100097d3_4:
                ecx15 = a7;
            } else {
                if (!*reinterpret_cast<unsigned char*>(&edx13)) {
                    ecx16 = 0x100;
                } else {
                    ecx16 = *reinterpret_cast<unsigned char*>(&edx13) + 1;
                }
                a10->f0 = ecx16;
                a10->f8 = a5;
                a10->f12 = a6;
                ecx15 = a7;
                a10->f16 = ecx15;
                a10->f20 = a8;
            }
            esi17 = a10->f32;
            if (esi17) {
                v18 = a10->f36;
                image_base_(esi17, a2, a3, edx13, a5, a6, ecx15, a8, a9, v18);
                esi17(esi17, a2, a3, edx13, a5, a6, ecx15, a8, a9, v18);
            }
        }
    }
    eax19 = fun_1000a130(eax12 ^ reinterpret_cast<uint32_t>(ebp11) ^ reinterpret_cast<uint32_t>(ebp11));
    return eax19;
}

int32_t fun_10009820() {
    return 0;
}

struct s849 {
    signed char[12] pad12;
    uint32_t f12;
};

struct s850 {
    signed char[12] pad12;
    int32_t f12;
};

struct s851 {
    signed char[12] pad12;
    int32_t f12;
};

void** g10024468;

struct s852 {
    signed char[12] pad12;
    int32_t f12;
};

int32_t g100240e4 = 0;

struct s853 {
    signed char[16] pad16;
    int32_t f16;
};

struct s854 {
    signed char[12] pad12;
    int32_t f12;
};

struct s855 {
    signed char[8] pad8;
    int32_t f8;
};

struct s856 {
    signed char[16] pad16;
    int32_t f16;
};

struct s857 {
    signed char[12] pad12;
    void** f12;
};

struct s858 {
    signed char[8] pad8;
    int32_t f8;
};

struct s859 {
    signed char[16] pad16;
    int32_t f16;
};

struct s860 {
    signed char[12] pad12;
    uint32_t f12;
};

struct s861 {
    signed char[8] pad8;
    void** f8;
};

struct s862 {
    signed char[12] pad12;
    int32_t f12;
};

struct s863 {
    signed char[12] pad12;
    int32_t f12;
};

struct s864 {
    signed char[16] pad16;
    int32_t f16;
};

struct s865 {
    signed char[12] pad12;
    void** f12;
};

struct s866 {
    signed char[8] pad8;
    int32_t f8;
};

struct s867 {
    signed char[16] pad16;
    int32_t f16;
};

struct s868 {
    signed char[12] pad12;
    int32_t f12;
};

struct s869 {
    signed char[8] pad8;
    int32_t f8;
};

struct s870 {
    signed char[8] pad8;
    void** f8;
};

struct s871 {
    signed char[8] pad8;
    int32_t f8;
};

struct s872 {
    signed char[8] pad8;
    int32_t f8;
};

void fun_10009e46(void** a1) {
    int32_t ebp2;
    int32_t ebp3;
    struct s849* ebp4;
    struct s850* ebp5;
    int1_t zf6;
    int32_t ebp7;
    struct s851* ebp8;
    void** edi9;
    int32_t ebp10;
    struct s852* ebp11;
    int32_t v12;
    struct s853* ebp13;
    int32_t v14;
    struct s854* ebp15;
    int32_t v16;
    struct s855* ebp17;
    void** ecx18;
    int32_t eax19;
    int32_t ebp20;
    int32_t ebp21;
    int32_t ebp22;
    int32_t ebp23;
    int32_t v24;
    struct s856* ebp25;
    void** v26;
    struct s857* ebp27;
    int32_t v28;
    struct s858* ebp29;
    void** eax30;
    int32_t ebp31;
    int32_t ebp32;
    int32_t ebp33;
    int32_t ebp34;
    int32_t v35;
    struct s859* ebp36;
    uint32_t v37;
    struct s860* ebp38;
    void** v39;
    struct s861* ebp40;
    int32_t eax41;
    int32_t ebp42;
    int32_t ebp43;
    struct s862* ebp44;
    int32_t ebp45;
    struct s863* ebp46;
    int32_t ebp47;
    int32_t v48;
    struct s864* ebp49;
    void** v50;
    struct s865* ebp51;
    int32_t v52;
    struct s866* ebp53;
    void** eax54;
    int32_t ebp55;
    int32_t ebp56;
    void** edi57;
    int1_t zf58;
    int32_t ebp59;
    int32_t ebp60;
    int32_t v61;
    struct s867* ebp62;
    int32_t v63;
    struct s868* ebp64;
    int32_t v65;
    struct s869* ebp66;
    int32_t eax67;
    int32_t ebp68;
    int32_t ebp69;
    int32_t ebp70;
    void** v71;
    struct s870* ebp72;
    int32_t ebp73;
    int32_t ebp74;
    int32_t v75;
    struct s871* ebp76;
    int32_t ebp77;
    void** edi78;
    int32_t ebp79;
    int32_t v80;
    struct s872* ebp81;
    int32_t ebp82;

    fun_1000a33c(0x1001efc8, 48, __return_address());
    *reinterpret_cast<int32_t*>(ebp2 - 32) = 1;
    *reinterpret_cast<int32_t*>(ebp3 - 4) = 0;
    if (ebp4->f12 <= 1) {
        g100240c0 = ebp4->f12;
    }
    if (!ebp5->f12 && (zf6 = g100240e0 == 0, zf6)) {
        *reinterpret_cast<int32_t*>(ebp7 - 32) = 0;
        goto addr_1000a0be_6;
    }
    if (ebp8->f12 == 1 || ebp8->f12 == 2) {
        edi9 = g10024468;
        if (edi9) {
            *reinterpret_cast<int32_t*>(ebp10 - 4) = 1;
            if (ebp11->f12 == 1) {
                g100240e4 = 1;
            }
            v12 = ebp13->f16;
            v14 = ebp15->f12;
            v16 = ebp17->f8;
            ecx18 = edi9;
            image_base_(ecx18, v16, v14, v12);
            eax19 = reinterpret_cast<int32_t>(edi9(ecx18, v16, v14, v12));
            *reinterpret_cast<int32_t*>(ebp20 - 32) = eax19;
            *reinterpret_cast<int32_t*>(ebp21 - 4) = 0;
        }
        if (!*reinterpret_cast<int32_t*>(ebp22 - 32)) 
            goto addr_1000a0be_6;
        *reinterpret_cast<int32_t*>(ebp23 - 4) = 2;
        v24 = ebp25->f16;
        v26 = ebp27->f12;
        v28 = ebp29->f8;
        eax30 = fun_10009c02(ecx18, v28, v26, v24);
        *reinterpret_cast<void***>(ebp31 - 32) = eax30;
        *reinterpret_cast<int32_t*>(ebp32 - 4) = 0;
        if (!*reinterpret_cast<int32_t*>(ebp33 - 32)) 
            goto addr_1000a0be_6;
    }
    *reinterpret_cast<int32_t*>(ebp34 - 4) = 3;
    v35 = ebp36->f16;
    v37 = ebp38->f12;
    v39 = ebp40->f8;
    eax41 = fun_1000ba48(ecx18, v39, v37, v35);
    *reinterpret_cast<int32_t*>(ebp42 - 32) = eax41;
    *reinterpret_cast<int32_t*>(ebp43 - 4) = 0;
    if (ebp44->f12 != 1) 
        goto addr_1000a024_18;
    if (!*reinterpret_cast<int32_t*>(ebp45 - 32)) 
        goto addr_10009f88_20;
    addr_1000a024_18:
    if (!ebp46->f12 || ebp46->f12 == 3) {
        *reinterpret_cast<int32_t*>(ebp47 - 4) = 7;
        v48 = ebp49->f16;
        v50 = ebp51->f12;
        v52 = ebp53->f8;
        eax54 = fun_10009c02(ecx18, v52, v50, v48);
        *reinterpret_cast<void***>(ebp55 - 32) = eax54;
        *reinterpret_cast<int32_t*>(ebp56 - 4) = 0;
        edi57 = g10024468;
        if (!edi57) 
            goto addr_1000a0be_6;
        zf58 = g100240e4 == 0;
        if (zf58) 
            goto addr_1000a0be_6;
    } else {
        addr_1000a0be_6:
        *reinterpret_cast<int32_t*>(ebp59 - 4) = -2;
        fun_1000a0d5(ecx18);
        fun_1000a384(ecx18, 0x1001efc8, 48, __return_address(), a1);
        goto 0x1001efc8;
    }
    *reinterpret_cast<int32_t*>(ebp60 - 4) = 8;
    v61 = ebp62->f16;
    v63 = ebp64->f12;
    v65 = ebp66->f8;
    ecx18 = edi57;
    image_base_(ecx18, v65, v63, v61);
    eax67 = reinterpret_cast<int32_t>(edi57(ecx18, v65, v63, v61));
    *reinterpret_cast<int32_t*>(ebp68 - 32) = eax67;
    *reinterpret_cast<int32_t*>(ebp69 - 4) = 0;
    goto addr_1000a0be_6;
    addr_10009f88_20:
    *reinterpret_cast<int32_t*>(ebp70 - 4) = 4;
    v71 = ebp72->f8;
    fun_1000ba48(ecx18, v71, 0, 0);
    *reinterpret_cast<int32_t*>(ebp73 - 4) = 0;
    *reinterpret_cast<int32_t*>(ebp74 - 4) = 5;
    v75 = ebp76->f8;
    fun_10009c02(ecx18, v75, 0, 0);
    *reinterpret_cast<int32_t*>(ebp77 - 4) = 0;
    edi78 = g10024468;
    if (!edi78) 
        goto addr_1000a024_18;
    *reinterpret_cast<int32_t*>(ebp79 - 4) = 6;
    v80 = ebp81->f8;
    ecx18 = edi78;
    image_base_(ecx18, v80, 0, 0);
    edi78(ecx18, v80, 0, 0);
    *reinterpret_cast<int32_t*>(ebp82 - 4) = 0;
    goto addr_1000a024_18;
}

int32_t fun_10009ecf() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 36) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

void fun_10009f26() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 32) = 0;
}

void fun_10009f69() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 32) = 0;
}

int32_t fun_10009fca() {
    int32_t** ecx1;
    int32_t ebp2;
    int32_t eax3;
    int32_t ebp4;
    int32_t eax5;

    ecx1 = *reinterpret_cast<int32_t***>(ebp2 - 20);
    eax3 = **ecx1;
    *reinterpret_cast<int32_t*>(ebp4 - 52) = eax3;
    eax5 = fun_10009e26(eax3, ecx1);
    return eax5;
}

void fun_10009faf() {
}

void fun_1000a01c() {
}

void fun_1000a062() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 32) = 0;
}

void fun_1000a0b3() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 32) = 0;
}

void fun_1000a23e() {
}

void fun_1000a452() {
}

void fun_1000b8de(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f2b0, 0x10028428);
    goto eax2;
}

int32_t fun_1000bc1f() {
    return 1;
}

void fun_1000bbf4() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;
    int32_t eax6;
    int32_t ebp7;
    int32_t ebp8;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 28);
    esp4 = esp1 - 1;
    *esp4 = 0x1000bc00;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000bc07;
    eax6 = fun_1000bb85(eax5);
    *reinterpret_cast<int32_t*>(ebp7 - 32) = eax6;
    *reinterpret_cast<int32_t*>(ebp8 - 4) = -2;
}

void fun_1000bce0() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 0x88) = eax1;
    image_base_();
    goto eax1;
}

void fun_1000bd7f() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 0x8c) = eax1;
    image_base_();
    goto eax1;
}

void fun_1000be1b() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 0x90) = eax1;
    image_base_();
    goto eax1;
}

void fun_1000c1fd() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 32);
    esp4 = esp1 - 1;
    *esp4 = 0x1000c209;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000c210;
    fun_1000bb85(eax5);
}

void fun_1000c2d8() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 4) = -2;
}

void fun_1000c350() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 28) = eax1;
    image_base_();
    goto eax1;
}

int32_t fun_1000c450(int32_t ecx) {
    fun_1000c39a("a", reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc);
    return 0;
}

int32_t fun_1000c4d0(int32_t ecx) {
    fun_1000c39a("s", reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc);
    return 0;
}

int32_t fun_10010740(void** a1, void** a2) {
    void** ebp3;

    fun_10016679(a1 + 12, a2, ebp3, __return_address(), a1);
    return 0;
}

struct s0** fun_1000d5c0(struct s0** ecx, unsigned char a2) {
    int32_t eax3;

    *ecx = reinterpret_cast<struct s0*>(0x10001058);
    fun_10008af0(ecx, 1);
    g10024614 = reinterpret_cast<void*>(0);
    g10024484 = reinterpret_cast<void**>(0);
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void fun_1000d850() {
    RoOriginateError();
    goto 0;
}

int32_t g100246b0;

int32_t g10024610;

void** fun_1000ed40(int32_t ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    int32_t eax5;
    int32_t eax6;
    void** eax7;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = g100246b0;
    if (esi4) {
        addr_1000ed90_2:
        image_base_(esi4);
        esi4(esi4);
    } else {
        eax5 = g10024610;
        if (!eax5) {
            eax5 = reinterpret_cast<int32_t>(GetModuleHandleW("n"));
            g10024610 = eax5;
        }
        eax6 = reinterpret_cast<int32_t>(GetProcAddress(eax5, "RtlDllShutdownInProgress"));
        esi4 = eax6;
        g100246b0 = esi4;
        if (esi4) 
            goto addr_1000ed90_2; else 
            goto addr_1000ed8c_6;
    }
    addr_1000ed9a_7:
    eax7 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax7;
    addr_1000ed8c_6:
    goto addr_1000ed9a_7;
}

int32_t DebugBreak = 0x26184;

void fun_1000de20() {
    goto DebugBreak;
}

struct s14* fun_1000df60(struct s15* a1, int32_t a2, void* a3) {
    struct s14* eax4;

    fun_1000dea5(a1, a3);
    eax4 = fun_1000ef19(a1);
    return eax4;
}

signed char fun_10009bd0() {
    return 1;
}

void** fun_1000f4c0(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** edi50;
    void** esi51;
    void** ebp52;
    void** eax53;
    void** ecx54;
    void** esi55;
    void** eax56;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax53 = fun_1000f41f(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    if (reinterpret_cast<signed char>(eax53) >= reinterpret_cast<signed char>(0)) {
        ecx54 = g0;
        esi55 = *reinterpret_cast<void***>(ecx54);
        image_base_(esi55, 0, a2, a3);
        esi55(esi55, 0, a2, a3);
    }
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax56 = fun_1000a130(reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47));
    return eax56;
}

void** fun_1000f5c0(struct s171** a1, int32_t a2, struct s171*** a3) {
    void** eax4;

    eax4 = fun_1000f391(a1, a3);
    return eax4;
}

struct s873 {
    signed char[8] pad8;
    int32_t f8;
};

struct s873* fun_1000f780(struct s873* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f8 = 0xc0000001;
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_1000f800(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47) {
    void*** ebp48;
    uint32_t eax49;
    void** v50;
    void** ecx51;
    void** esi52;
    void** ebp53;
    void** eax54;
    void** ecx55;
    void** esi56;
    void** ecx57;
    void** eax58;

    ebp48 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax49 = g100240c4;
    v50 = reinterpret_cast<void**>(eax49 ^ reinterpret_cast<uint32_t>(ebp48));
    ecx51 = reinterpret_cast<void**>(ebp48 + 0xfffffff8);
    fun_100136b5(ecx51, esi52, 0, v50, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
    eax54 = fun_10018e4a(ecx51, ebp48 + 0xfffffff8, esi52, 0, v50, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40);
    if (reinterpret_cast<signed char>(eax54) >= reinterpret_cast<signed char>(0)) {
        ecx55 = reinterpret_cast<void**>(0);
        *reinterpret_cast<unsigned char*>(&ecx55) = reinterpret_cast<uint1_t>(!!a3);
        esi56 = g0;
        ecx57 = *reinterpret_cast<void***>(esi56 + 24);
        image_base_(ecx57, 0, "R", "E", ecx55, 3);
        *reinterpret_cast<void***>(esi56 + 24)(ecx57, 0, "R", "E", ecx55, 3);
    }
    fun_100136b5(ebp48 + 0xfffffff8, esi52, 0, v50, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
    eax58 = fun_1000a130(reinterpret_cast<unsigned char>(v50) ^ reinterpret_cast<uint32_t>(ebp48));
    return eax58;
}

struct s874 {
    signed char[12] pad12;
    int32_t f12;
};

void** fun_1000f920(int32_t ecx, struct s874* a2, void** a3) {
    void** eax4;
    void** esi5;
    int32_t* ecx6;
    int32_t eax7;

    eax4 = fun_1000fc0f(a3);
    esi5 = eax4;
    if (reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0)) {
        ecx6 = &a2->f12;
        if (*ecx6 == ecx) {
            *ecx6 = ecx;
        }
        if (!1) {
            esi5 = reinterpret_cast<void**>(0x8000ffff);
            eax7 = reinterpret_cast<int32_t>(GetProcessHeap());
            HeapFree(eax7, 0, ecx);
        }
    }
    return esi5;
}

int32_t RtlEqualUnicodeString = 0x261d8;

void** fun_1000f970(int32_t ecx, int32_t a2, uint32_t* a3) {
    void* esp4;
    uint32_t v5;
    uint32_t ebx6;
    void** v7;
    void** esi8;
    void** v9;
    void** edi10;
    void** eax11;
    void* esp12;
    void** esi13;
    void** v14;
    void** eax15;
    void* esp16;
    void** v17;
    void** ecx18;
    void** v19;
    void** eax20;
    void** eax21;
    uint32_t ebx22;
    uint32_t v23;
    void** v24;
    int32_t edi25;
    int32_t v26;
    signed char al27;
    int32_t eax28;
    int32_t v29;

    esp4 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 20);
    v5 = ebx6;
    v7 = esi8;
    v9 = edi10;
    eax11 = fun_10018891(ecx, reinterpret_cast<uint32_t>(esp4) + 4);
    esp12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp4) - 4 - 4 - 4 - 4 - 4 + 4 + 4);
    esi13 = eax11;
    if (reinterpret_cast<signed char>(esi13) < reinterpret_cast<signed char>(0)) {
        addr_1000fa46_2:
        return esi13;
    } else {
        eax15 = fun_1000fa51(v14, reinterpret_cast<uint32_t>(esp12) + 28, v9);
        esp16 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp12) - 4 - 4 + 4 + 4);
        esi13 = eax15;
        if (reinterpret_cast<signed char>(esi13) < reinterpret_cast<signed char>(0)) {
            addr_1000fa3d_4:
            fun_1000bb91(v17, v9, v7);
            goto addr_1000fa46_2;
        } else {
            ecx18 = v19;
            eax20 = fun_1000c2fc(ecx18, reinterpret_cast<uint32_t>(esp16) - 4 + 28, reinterpret_cast<uint32_t>(esp16) + 20);
            if (reinterpret_cast<signed char>(eax20) < reinterpret_cast<signed char>(0)) {
                if (!reinterpret_cast<int1_t>(eax20 == 0xc0000034)) {
                    ecx18 = eax20;
                    eax21 = fun_1000f8e7(ecx18);
                    esi13 = eax21;
                } else {
                    *a3 = 1;
                }
            } else {
                ebx22 = 0;
                *a3 = 1;
                if (v23 <= 0) {
                    addr_1000fa04_10:
                    ecx18 = v24;
                    fun_1000bc38(ecx18);
                } else {
                    edi25 = v26;
                    do {
                        al27 = reinterpret_cast<signed char>(RtlEqualUnicodeString(ecx18, fun_10001978, edi25, 1));
                        if (al27) 
                            goto addr_1000f9fe_13;
                        ++ebx22;
                        edi25 = edi25 + 8;
                    } while (ebx22 < v5);
                    goto addr_1000f9fc_15;
                }
            }
        }
    }
    eax28 = reinterpret_cast<int32_t>(GetProcessHeap(ecx18));
    HeapFree(ecx18, eax28, 0, v29);
    goto addr_1000fa3d_4;
    addr_1000f9fe_13:
    *a3 = 0;
    goto addr_1000fa04_10;
    addr_1000f9fc_15:
    goto addr_1000fa04_10;
}

void fun_1000c8c0(int32_t a1) {
    goto fun_10008f30;
}

void** fun_1000fe40(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** edi50;
    void** esi51;
    void** ebp52;
    void** eax53;
    void** ecx54;
    void** esi55;
    void** eax56;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax53 = fun_1000fd9e(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    if (reinterpret_cast<signed char>(eax53) >= reinterpret_cast<signed char>(0)) {
        ecx54 = g0;
        esi55 = *reinterpret_cast<void***>(ecx54);
        image_base_(esi55, 0, a2, a3);
        esi55(esi55, 0, a2, a3);
    }
    fun_100136b5(ebp47 + 0xfffffff8, edi50, esi51, 0, v49, ebp52, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    eax56 = fun_1000a130(reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47));
    return eax56;
}

int32_t fun_10010000(void** ecx) {
    unsigned char al2;
    uint32_t eax3;
    uint32_t eax4;
    uint32_t* v5;
    void** eax6;

    al2 = fun_1001c9a7(ecx);
    eax3 = al2;
    eax4 = -eax3;
    *v5 = (eax4 - (eax4 + reinterpret_cast<uint1_t>(eax4 < eax4 + reinterpret_cast<uint1_t>(!!eax3))) & 0xfffffffe) + 2;
    eax6 = fun_10010167(0x80000002, "B", v5);
    if (reinterpret_cast<signed char>(eax6) >= reinterpret_cast<signed char>(0) && *v5 >= 3) {
        *v5 = 0;
    }
    return 0;
}

void** fun_10010150(struct s172** a1, int32_t a2, struct s172*** a3) {
    void** eax4;

    eax4 = fun_1000fd10(a1, a3);
    return eax4;
}

void** fun_10010ce0(int32_t ecx, unsigned char* a2) {
    void* ebp3;
    uint32_t eax4;
    void** eax5;
    void** eax6;
    void** edi7;
    int32_t v8;
    int32_t v9;
    void** eax10;
    int1_t zf11;
    void** eax12;
    void** edi13;
    void** eax14;
    void** esi15;
    void** eax16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    eax5 = fun_10010d84(reinterpret_cast<uint32_t>(ebp3) - 8);
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0) && (g10 = *a2, eax6 = g0, edi7 = *reinterpret_cast<void***>(eax6), image_base_(edi7, 0, v8, v9), eax10 = reinterpret_cast<void**>(edi7(edi7, 0, v8, v9)), zf11 = (*a2 & 1) == 0, !zf11)) {
        if (reinterpret_cast<signed char>(eax10) < reinterpret_cast<signed char>(0)) {
            g10 = reinterpret_cast<unsigned char>(g10 & 0xfffffffa);
        } else {
            if (*a2 & 4) {
                eax12 = g10024484;
                edi13 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax12) + 4);
                image_base_(edi13, eax12, 0, v8, v9);
                edi13(edi13, eax12, 0, v8, v9);
            }
        }
    }
    if (!1) {
        eax14 = g0;
        esi15 = *reinterpret_cast<void***>(eax14 + 8);
        image_base_(esi15, 0);
        esi15(esi15, 0);
    }
    eax16 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax16;
}

struct s875 {
    signed char[16] pad16;
    unsigned char f16;
};

void** fun_10010fd0(int32_t ecx, struct s875* a2) {
    void* ebp3;
    uint32_t eax4;
    void** ecx5;
    void** esi6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [eax+0x8], edi");
    if (!(a2->f16 & 6) && !0) {
        ecx5 = g10024484;
        esi6 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx5) + 4);
        image_base_(esi6);
        esi6(esi6);
    }
    eax7 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax7;
}

void** fun_10011030(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43) {
    void*** ebp44;
    void** v45;
    uint32_t eax46;
    void** v47;
    void** v48;
    void** v49;
    int32_t eax50;
    void** edi51;
    void** eax52;
    void** esi53;
    void** esi54;
    void** ebp55;
    void** eax56;

    ebp44 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v45 = ecx;
    eax46 = g100240c4;
    v47 = reinterpret_cast<void**>(eax46 ^ reinterpret_cast<uint32_t>(ebp44));
    if (*reinterpret_cast<void***>(a2 + 32)) {
        v48 = reinterpret_cast<void**>(ebp44 + 0xfffffff8);
        v49 = *reinterpret_cast<void***>(a2 + 32);
        eax50 = reinterpret_cast<int32_t>(SHLWAPI_dll_172(v49, v48));
        if (eax50 >= 0) {
            *reinterpret_cast<signed char*>(&ecx) = 1;
            fun_1001d229(ecx, v49, v48, edi51, v45);
        }
        eax52 = *reinterpret_cast<void***>(a2 + 32);
        esi53 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax52) + 0x94);
        image_base_(esi53);
        esi53(esi53);
        fun_100136b5(a2 + 32, eax52, esi54, v49, v48, edi51, v45, v47, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    }
    eax56 = fun_1000a130(reinterpret_cast<unsigned char>(v47) ^ reinterpret_cast<uint32_t>(ebp44));
    return eax56;
}

void** fun_100111f0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void*** ebp46;
    uint32_t eax47;
    void** v48;
    void** edi49;
    void** edi50;
    void** esi51;
    void** ebx52;
    void** ebp53;
    void** esi54;
    int32_t eax55;
    void* v56;
    void** v57;
    int32_t eax58;
    uint32_t ecx59;
    void** eax60;

    ebp46 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax47 = g100240c4;
    v48 = reinterpret_cast<void**>(eax47 ^ reinterpret_cast<uint32_t>(ebp46));
    edi49 = a2 + 24;
    fun_100136b5(edi49, edi50, esi51, ebx52, ecx, v48, ebp53, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    esi54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(a3));
    image_base_(esi54);
    eax55 = reinterpret_cast<int32_t>(esi54(esi54));
    if (eax55 >= 0 && (v56 = reinterpret_cast<void*>(ebp46 - 8), v57 = *reinterpret_cast<void***>(edi49), eax58 = reinterpret_cast<int32_t>(SHLWAPI_dll_172(esi54, v57, v56)), eax58 >= 0)) {
        fun_10011097(a2, 0, ecx, a4, v57, v56);
    }
    ecx59 = reinterpret_cast<unsigned char>(v48) ^ reinterpret_cast<uint32_t>(ebp46);
    eax60 = fun_1000a130(ecx59, ecx59);
    return eax60;
}

void** fun_10011260(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** eax50;
    void** ecx51;
    void** esi52;
    void** edi53;
    void** esi54;
    void** ebp55;
    uint32_t ecx56;
    void** eax57;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    *reinterpret_cast<void***>(a5) = reinterpret_cast<void**>(0);
    if (!a3) {
        eax50 = fun_10010e14(ebp47 + 0xfffffff8);
        if (reinterpret_cast<signed char>(eax50) >= reinterpret_cast<signed char>(0)) {
            ecx51 = g0;
            esi52 = *reinterpret_cast<void***>(ecx51);
            image_base_(esi52, 0, a4, a5);
            esi52(esi52, 0, a4, a5);
        }
        fun_100136b5(ebp47 + 0xfffffff8, edi53, esi54, 0, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    } else {
        RoOriginateError(0x80040110, 0);
    }
    ecx56 = reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47);
    eax57 = fun_1000a130(ecx56, ecx56);
    return eax57;
}

void** fun_100112e0(void** a1, void** a2, void** a3, void** a4) {
    void** ebp5;
    void** eax6;

    eax6 = fun_10011097(a1, a2, a3, a4, ebp5, __return_address());
    return eax6;
}

void** fun_10011540(int32_t ecx) {
    void* ebp2;
    uint32_t eax3;
    void** ecx4;
    void** eax5;
    int32_t v6;
    void** esi7;
    uint32_t ecx8;
    void** eax9;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ecx4 = g10024484;
    if (ecx4) {
        eax5 = *reinterpret_cast<void***>(ecx4);
        if (!v6) {
            esi7 = *reinterpret_cast<void***>(eax5 + 8);
        } else {
            esi7 = *reinterpret_cast<void***>(eax5 + 4);
        }
        image_base_(esi7);
        esi7(esi7);
    } else {
        RoOriginateError(0x80004005);
    }
    ecx8 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax9 = fun_1000a130(ecx8, ecx8);
    return eax9;
}

struct s876 {
    signed char[32] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[7] pad44;
    void** f44;
};

int32_t WinSqmAddToStream = 0x26426;

int32_t IsSETEnabled = 0x26de8;

void** fun_100115a0(struct s876* a1, void** a2) {
    void* ebp3;
    uint32_t eax4;
    int1_t below_or_equal5;
    void** edi6;
    void** esi7;
    void** ebx8;
    signed char al9;
    void** v10;
    int32_t v11;
    void** v12;
    void** v13;
    int32_t eax14;
    void** v15;
    int1_t zf16;
    void** v17;
    int32_t eax18;
    uint32_t eax19;
    void** ecx20;
    uint32_t eax21;
    void** eax22;
    void** eax23;
    void** ecx24;
    void** esi25;
    int1_t zf26;
    uint32_t ecx27;
    void** eax28;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    a1->f36 = a2;
    below_or_equal5 = g10024008 <= 5;
    if (!below_or_equal5 && (al9 = fun_100121ac(0x10024008, 0, 0x4000, edi6, esi7, ebx8), !!al9)) {
        v10 = a2;
        fun_100121e9(0x10024008, 0x10024008, 0x10024008, 3, reinterpret_cast<uint32_t>(ebp3) + 0xffffffc8, edi6, esi7, ebx8, v11);
    }
    v12 = a1->f44;
    v13 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp3) + 0xffffffbc);
    WinSqmAddToStream();
    if (!(reinterpret_cast<unsigned char>(a1->f36) & 6) || (eax14 = reinterpret_cast<int32_t>(IsSETEnabled()), eax14 == 0)) {
        fun_10011d31(reinterpret_cast<int32_t>(a1) + 0xfffffffc, 0, 0x320c, 1, v13, edi6, esi7, ebx8, 1, v12, v10, v15);
    } else {
        zf16 = (g100244c0 & 0x100) == 0;
        if (!zf16) {
            fun_10010b65(1, 0, 0x320c, 1, v13, edi6, esi7, ebx8, 1, v12, v10, v17);
        }
        eax18 = reinterpret_cast<int32_t>(IsOS(29));
        eax19 = reinterpret_cast<uint32_t>(-eax18);
        ecx20 = a1->f32;
        eax21 = (eax19 - (eax19 + reinterpret_cast<uint1_t>(eax19 < eax19 + reinterpret_cast<uint1_t>(!!eax18))) & 97) + 0xbbb;
        eax22 = fun_10016f2a(ecx20, static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax21)), 1, 29);
        if (reinterpret_cast<signed char>(eax22) < reinterpret_cast<signed char>(0)) {
            eax23 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(a1) + 0xfffffffc);
            ecx24 = *reinterpret_cast<void***>(eax23);
            esi25 = *reinterpret_cast<void***>(ecx24 + 24);
            ecx20 = esi25;
            image_base_(ecx20, eax23, 29);
            esi25(ecx20, eax23, 29);
        }
        zf26 = (g100244c0 & 0x100) == 0;
        if (!zf26) {
            fun_10010b65(ecx20, 29, 0, 0x320c, 1, v13, edi6, esi7, ebx8, 1, v12, v10);
        }
    }
    ecx27 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax28 = fun_1000a130(ecx27, ecx27);
    return eax28;
}

void** fun_100116b0(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    void** ebp10;
    void** eax11;

    *reinterpret_cast<void***>(a1 + 36) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a1 + 36)) | 0x1000000);
    eax11 = fun_10011d31(a1 + 0xfffffffc, ebp10, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9);
    return eax11;
}

void** fun_100117c0(struct s175** a1, int32_t a2, struct s175*** a3) {
    void** eax4;

    eax4 = fun_10010b90(a1, a3);
    return eax4;
}

struct s877 {
    signed char[28] pad28;
    int32_t f28;
};

void** fun_10011883(int32_t ecx, struct s877** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s877* eax5;
    int32_t esi6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0x10], ebx");
    if (!1) {
        if (a2) {
            eax5 = *a2;
            esi6 = eax5->f28;
            image_base_(esi6, 1);
            esi6(a2, 1);
        }
        eax7 = g10024484;
        if (eax7) {
            ecx8 = *reinterpret_cast<void***>(eax7);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax7);
            esi9(esi9, eax7);
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

void fun_1000baf0() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 28) = eax1;
    image_base_();
    goto eax1;
}

void** fun_10012540(int32_t ecx, unsigned char* a2) {
    void* ebp3;
    uint32_t eax4;
    void** eax5;
    void** eax6;
    void** edi7;
    int32_t v8;
    int32_t v9;
    void** eax10;
    int1_t zf11;
    void** eax12;
    void** edi13;
    void** eax14;
    void** esi15;
    void** eax16;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    eax5 = fun_10012911(reinterpret_cast<uint32_t>(ebp3) - 8);
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0) && (g10 = *a2, eax6 = g0, edi7 = *reinterpret_cast<void***>(eax6), image_base_(edi7, 0, v8, v9), eax10 = reinterpret_cast<void**>(edi7(edi7, 0, v8, v9)), zf11 = (*a2 & 1) == 0, !zf11)) {
        if (reinterpret_cast<signed char>(eax10) < reinterpret_cast<signed char>(0)) {
            g10 = reinterpret_cast<unsigned char>(g10 & 0xfffffffa);
        } else {
            if (*a2 & 4) {
                eax12 = g10024484;
                edi13 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax12) + 4);
                image_base_(edi13, eax12, 0, v8, v9);
                edi13(edi13, eax12, 0, v8, v9);
            }
        }
    }
    if (!1) {
        eax14 = g0;
        esi15 = *reinterpret_cast<void***>(eax14 + 8);
        image_base_(esi15, 0);
        esi15(esi15, 0);
    }
    eax16 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax16;
}

void** fun_10013080(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void*** ebp47;
    uint32_t eax48;
    void** v49;
    void** eax50;
    void** ecx51;
    void** esi52;
    void** edi53;
    void** esi54;
    void** ebp55;
    uint32_t ecx56;
    void** eax57;

    ebp47 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax48 = g100240c4;
    v49 = reinterpret_cast<void**>(eax48 ^ reinterpret_cast<uint32_t>(ebp47));
    *reinterpret_cast<void***>(a5) = reinterpret_cast<void**>(0);
    if (!a3) {
        eax50 = fun_100129a1(ebp47 + 0xfffffff8);
        if (reinterpret_cast<signed char>(eax50) >= reinterpret_cast<signed char>(0)) {
            ecx51 = g0;
            esi52 = *reinterpret_cast<void***>(ecx51);
            image_base_(esi52, 0, a4, a5);
            esi52(esi52, 0, a4, a5);
        }
        fun_100136b5(ebp47 + 0xfffffff8, edi53, esi54, 0, v49, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    } else {
        RoOriginateError(0x80040110, 0);
    }
    ecx56 = reinterpret_cast<unsigned char>(v49) ^ reinterpret_cast<uint32_t>(ebp47);
    eax57 = fun_1000a130(ecx56, ecx56);
    return eax57;
}

struct s98* fun_10012f40(struct s98* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f0 = 0x10001120;
    fun_10012e3f(ecx);
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

struct s98* fun_10012fa0(struct s98* ecx, unsigned char a2) {
    int32_t eax3;

    fun_10012e3f(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

struct s878 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
    int32_t f12;
};

struct s878* fun_10012fd0(struct s878* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f0 = 0x1000110c;
    ecx->f12 = 0xc0000001;
    ecx->f8 = 0xc0000001;
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

int32_t fun_100133f2(int32_t ecx) {
    struct s72** v2;
    int32_t eax3;

    eax3 = fun_100125e4(ecx, v2);
    return eax3;
}

void fun_1001351c() {
    uint32_t* v1;
    int32_t esi2;

    *v1 = 0;
    RoOriginateError();
    goto esi2;
}

void fun_100135c5() {
    RoOriginateError();
    goto 0;
}

struct s880 {
    int32_t f0;
    signed char[4] pad8;
    int32_t f8;
};

struct s879 {
    signed char[12] pad12;
    int32_t f12;
    struct s880** f16;
};

void** fun_10014040(int32_t ecx, struct s879* a2, int32_t a3, uint32_t* a4) {
    void* ebp5;
    uint32_t eax6;
    uint32_t v7;
    struct s879* ebx8;
    uint32_t* edi9;
    int32_t* esi10;
    int32_t edx11;
    int32_t ecx12;
    void** eax13;
    struct s880** eax14;
    struct s880* ecx15;
    int32_t esi16;
    struct s880** ecx17;
    int32_t esi18;

    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax6 = g100240c4;
    v7 = eax6 ^ reinterpret_cast<uint32_t>(ebp5);
    ebx8 = a2;
    edi9 = a4;
    esi10 = &ebx8->f12;
    *edi9 = 0;
    do {
        edx11 = *esi10;
        if (!edx11) 
            break;
        ecx12 = edx11 + 1;
        if (*esi10 == ecx12) {
            *esi10 = ecx12;
        }
    } while (edx11 != edx11);
    goto addr_10014089_6;
    addr_10014076_8:
    eax13 = fun_1000a130(v7 ^ reinterpret_cast<uint32_t>(ebp5));
    return eax13;
    addr_10014089_6:
    eax14 = ebx8->f16;
    ecx15 = *eax14;
    esi16 = ecx15->f0;
    image_base_(esi16, eax14, a3, edi9);
    esi16(esi16, eax14, a3, edi9);
    ecx17 = ebx8->f16;
    esi18 = (*ecx17)->f8;
    image_base_(esi18, ecx17, eax14, a3, edi9);
    esi18(esi18, ecx17, eax14, a3, edi9);
    goto addr_10014076_8;
}

int32_t CompareStringOrdinal = 0x2657e;

int32_t fun_10013790(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13) {
    void** v14;
    void** ebx15;
    void** esi16;
    void** ecx17;
    void** edi18;
    void** esi19;
    void** ebp20;
    unsigned char al21;
    void** v22;
    int32_t eax23;
    void** eax24;
    void*** ecx25;
    void** ecx26;
    void** v27;

    v14 = ebx15;
    esi16 = a3;
    ecx17 = a1 + 0xfffffff4;
    al21 = fun_10015664(ecx17, edi18, esi19, v14, ebp20, __return_address(), a1, *reinterpret_cast<int24_t*>(&a2));
    if (!al21 || (v22 = *reinterpret_cast<void***>(a1 + 76), eax23 = reinterpret_cast<int32_t>(CompareStringOrdinal(a2, 0xff, v22, 0xff, 1)), eax23 != 2)) {
        addr_10013821_2:
        if (esi16) {
            DeleteObject(ecx17, esi16);
            goto addr_1001382c_4;
        }
    } else {
        esi16 = reinterpret_cast<void**>(0);
        eax24 = fun_1001d174(a3, a5, ecx17, a2, 0xff, v22, 0xff, 1, edi18, esi19, v14, ebp20, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
        if (!eax24) {
            addr_1001382c_4:
            return 0;
        } else {
            if (*reinterpret_cast<void***>(a1 + 0x78) != a4 || *reinterpret_cast<void***>(a1 + 0x7c) != a5) {
                if (*reinterpret_cast<void***>(a1 + 0x78) != a5 || *reinterpret_cast<void***>(a1 + 0x7c) != a4) {
                    addr_10013819_8:
                    ecx17 = eax24;
                    image_base_(ecx17, a2, 0xff, v22, 0xff, 1);
                    goto addr_10013821_2;
                } else {
                    ecx25 = reinterpret_cast<void***>(a1 + 0x84);
                }
            } else {
                ecx26 = *reinterpret_cast<void***>(a1 + 60);
                v27 = image_base_;
                image_base_(ecx26, v27, 1, eax24, a2, 0xff, v22, 0xff, 1);
                ecx25 = reinterpret_cast<void***>(a1 + 0x80);
            }
        }
    }
    fun_1001da0f(ecx25, a2, 0xff, v22, 0xff, 1, edi18, esi19, *reinterpret_cast<int16_t*>(&v14));
    goto addr_10013819_8;
}

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(14);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(48);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(32);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(0x84);

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(15);

void** fun_10013840(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39) {
    void** eax40;
    int1_t zf41;
    void** v42;
    void** ecx43;
    void** eax44;
    void** edi45;
    void** esi46;
    void** ebx47;
    void** ebp48;
    void** eax49;
    int1_t zf50;
    int1_t zf51;
    void** esi52;
    uint32_t eax53;

    eax40 = *reinterpret_cast<void***>(a3 + 12);
    if (!eax40 || eax40 == 1) {
        eax40 = *reinterpret_cast<void***>(a3 + 4);
        zf41 = eax40 == image_base_;
        if (!zf41) {
            addr_1001398e_3:
            return eax40;
        } else {
            if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 1)) {
                addr_1001398b_5:
                *reinterpret_cast<void***>(a3 + 8) = reinterpret_cast<void**>(1);
                goto addr_1001398e_3;
            } else {
                v42 = reinterpret_cast<void**>(1);
            }
        }
    } else {
        if (!reinterpret_cast<int1_t>(eax40 == 4)) {
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 1 && reinterpret_cast<int1_t>(eax40 == 2)) {
                ecx43 = a3 + 4;
                if (*reinterpret_cast<void***>(a3) != *reinterpret_cast<void***>(ecx + 24)) {
                    eax44 = image_base_;
                    eax40 = fun_10012ec1(ecx43);
                    if (*reinterpret_cast<unsigned char*>(&eax40) && (eax40 = *reinterpret_cast<void***>(a3), eax40 == *reinterpret_cast<void***>(ecx + 40))) {
                        eax40 = fun_10014ac5(ecx + 0xffffffd8, 0, edi45, esi46, ebx47, eax44, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
                        goto addr_1001398e_3;
                    }
                } else {
                    eax40 = fun_10012ec1(ecx43);
                    if (!*reinterpret_cast<unsigned char*>(&eax40)) {
                        eax49 = image_base_;
                        eax40 = fun_10012ec1(a3 + 4);
                        if (*reinterpret_cast<unsigned char*>(&eax40)) {
                            *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 0xfffffff7);
                            eax40 = fun_10014933(ecx + 0xffffffd8, edi45, esi46, ebx47, eax49, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
                            goto addr_1001398e_3;
                        }
                    } else {
                        *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) | 8);
                        goto addr_1001398e_3;
                    }
                }
            }
        } else {
            eax40 = *reinterpret_cast<void***>(a3 + 4);
            zf50 = eax40 == image_base_;
            if (!zf50) {
                zf51 = eax40 == image_base_;
                if (zf51) {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 1) {
                        esi52 = ecx + 0xffffffd8;
                        fun_10014bef(esi52, edi45, esi46, ebx47, ecx, ebp48, __return_address(), a2, a3);
                        fun_10014d63(esi52, 1, edi45, esi46, ebx47, ecx, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
                        eax40 = fun_10015dba(esi52, edi45, esi46, ebx47, ecx);
                        goto addr_1001398b_5;
                    }
                }
            } else {
                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 20) == 14)) {
                    if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 20) == 15)) 
                        goto addr_1001398b_5;
                    eax40 = *reinterpret_cast<void***>(ecx + 12);
                    if (1 & *reinterpret_cast<unsigned char*>(&eax40)) 
                        goto addr_1001398b_5;
                    eax53 = reinterpret_cast<unsigned char>(eax40) >> 10;
                    v42 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax53) & 1)));
                } else {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 1) {
                        fun_10015dba(ecx + 0xffffffd8, edi45, esi46, ebx47, ecx);
                        eax40 = fun_100158a2(ecx + 0xffffffd8, 1);
                        goto addr_1001398b_5;
                    }
                }
            }
        }
    }
    eax40 = fun_10014ac5(ecx + 0xffffffd8, v42, edi45, esi46, ebx47, ecx, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37);
    goto addr_1001398b_5;
}

void** fun_100139a0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40) {
    void** v41;
    void** ecx42;
    void** eax43;
    void** edx44;
    void** v45;
    void** ebx46;
    void** edi47;
    void** ebp48;
    int1_t zf49;
    void** ecx50;
    void** esi51;
    void** v52;
    void** ecx53;

    v41 = ecx;
    ecx42 = *reinterpret_cast<void***>(ecx + 12);
    if (!(*reinterpret_cast<unsigned char*>(&ecx42) & 1) || (eax43 = a2, eax43 != *reinterpret_cast<void***>(ecx + 20))) {
        addr_10013b21_2:
        return eax43;
    } else {
        edx44 = *reinterpret_cast<void***>(a3 + 12);
        if (!reinterpret_cast<int1_t>(edx44 == 1)) {
            if (!edx44) 
                goto addr_10013a38_5;
            if (!reinterpret_cast<int1_t>(edx44 == 3)) 
                goto addr_10013b20_7;
            addr_10013a38_5:
            eax43 = *reinterpret_cast<void***>(a3);
            if (eax43 == *reinterpret_cast<void***>(ecx + 32)) 
                goto addr_10013a43_8;
        } else {
            if (!*reinterpret_cast<void***>(a3 + 8)) 
                goto addr_100139dc_10;
            if (*reinterpret_cast<void***>(a3 + 8) != edx44) 
                goto addr_10013b20_7;
            addr_100139dc_10:
            if (!*reinterpret_cast<void***>(a3 + 16)) 
                goto addr_100139ec_12;
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 16) == 3)) 
                goto addr_10013b1c_14;
            addr_100139ec_12:
            eax43 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(a3 + 24))));
            if (*reinterpret_cast<uint16_t*>(&eax43) >= 0xa6) 
                goto addr_10013b1c_14;
            if (*reinterpret_cast<unsigned char*>(&ecx42) & 6) 
                goto addr_10013b1c_14;
            if (*reinterpret_cast<unsigned char*>(&ecx42) & 16) 
                goto addr_10013a15_17;
            if (*reinterpret_cast<unsigned char*>(&ecx42) & 8) 
                goto addr_10013b1c_14;
            addr_10013a15_17:
            if (eax43 == 32 || eax43 == 13) {
                *reinterpret_cast<signed char*>(&eax43) = 1;
            } else {
                *reinterpret_cast<signed char*>(&eax43) = 0;
            }
            v45 = eax43;
            goto addr_10013b14_22;
        }
    }
    if (eax43 != *reinterpret_cast<void***>(ecx + 28) && eax43 != *reinterpret_cast<void***>(ecx + 40) || *reinterpret_cast<void***>(a3 + 8) && !reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 8) == 1)) {
        addr_10013b20_7:
        goto addr_10013b21_2;
    } else {
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 16) == 2)) {
            addr_10013b1c_14:
            *reinterpret_cast<void***>(a3 + 4) = reinterpret_cast<void**>(1);
            goto addr_10013b20_7;
        } else {
            v45 = reinterpret_cast<void**>(0);
        }
    }
    addr_10013b14_22:
    eax43 = fun_10014ac5(ecx + 0xffffffd8, v45, ebx46, edi47, v41, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
    goto addr_10013b1c_14;
    addr_10013a43_8:
    zf49 = *reinterpret_cast<void***>(a3 + 8) == 0;
    *reinterpret_cast<signed char*>(&v41 + 3) = 0;
    if (zf49 || reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 8) == 1)) {
        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 16) == 1)) {
            if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 16) == 2)) {
                if (reinterpret_cast<int1_t>(edx44 == 3) && reinterpret_cast<int1_t>(*reinterpret_cast<void***>(a3 + 16) == 5)) {
                    *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 0xfffffffb);
                }
            } else {
                *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 0xfffffffb);
                ecx50 = ecx + 0xffffffd8;
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 58) {
                    eax43 = fun_10014933(ecx50, ebx46, edi47, v41, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40);
                    *reinterpret_cast<signed char*>(&v41 + 3) = *reinterpret_cast<signed char*>(&eax43);
                } else {
                    if (*reinterpret_cast<void***>(a3 + 12)) {
                        eax43 = fun_10015dba(ecx50, ebx46, edi47, v41, ebp48);
                    } else {
                        eax43 = fun_10014ac5(ecx50, 1, ebx46, edi47, v41, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
                    }
                    *reinterpret_cast<signed char*>(&v41 + 3) = 1;
                }
            }
        } else {
            *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) | 4);
            *reinterpret_cast<void***>(ecx + 12) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx + 12)) & 0xffffffdf);
            fun_10014bef(ecx + 0xffffffd8, esi51, ebx46, edi47, v41, ebp48, __return_address(), a2, a3);
            eax43 = fun_10015d47(ecx + 0xffffffd8, 1, esi51, ebx46, edi47, v41, ebp48, __return_address());
        }
    }
    if (!*reinterpret_cast<void***>(a3 + 12) && ((v52 = *reinterpret_cast<void***>(ecx + 24), eax43 = fun_1001d267(ecx + 72, v52, a3, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 2), !!*reinterpret_cast<signed char*>(&eax43)) && !*reinterpret_cast<signed char*>(&v41 + 3))) {
        ecx53 = ecx + 0xffffffd8;
        if (!*reinterpret_cast<signed char*>(&v41 + 2)) {
            eax43 = fun_10015dba(ecx53, ebx46, edi47, v41, ebp48);
            goto addr_10013b20_7;
        } else {
            eax43 = fun_10014ac5(ecx53, 0, ebx46, edi47, v41, ebp48, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
            goto addr_10013b20_7;
        }
    }
}

struct s881 {
    signed char[36] pad36;
    void** f36;
};

struct s881* fun_10012f00(struct s881* ecx, unsigned char a2) {
    void** ecx3;
    uint32_t eax4;
    int32_t eax5;

    ecx3 = ecx->f36;
    eax4 = reinterpret_cast<unsigned char>(ecx3) >> 31;
    if (*reinterpret_cast<signed char*>(&eax4)) {
        fun_10013e70(ecx3, reinterpret_cast<unsigned char>(ecx3) + reinterpret_cast<unsigned char>(ecx3));
    }
    if (a2 & 1) {
        eax5 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax5, 0, ecx);
    }
    return ecx;
}

struct s882 {
    signed char[12] pad12;
    unsigned char f12;
    signed char[23] pad36;
    void** f36;
};

/* (image base) */
int32_t image_base_ = 0x1000a902;

void** fun_10013b30(struct s882* ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42) {
    void** eax43;
    void** esi44;
    void** ebp45;

    if (ecx->f12 & 1 && ((eax43 = a2, eax43 == ecx->f36) && ((eax43 = reinterpret_cast<void**>(image_base_()), a3 == eax43) && (eax43 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a3 + 4)) & 3), eax43 == a4)))) {
        ecx->f12 = reinterpret_cast<unsigned char>(ecx->f12 | 32);
        eax43 = fun_10014933(reinterpret_cast<int32_t>(ecx) + 0xffffffd8, esi44, ebp45, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
    }
    return eax43;
}

struct s884 {
    signed char[48] pad48;
    int32_t f48;
};

struct s883 {
    signed char[36] pad36;
    unsigned char f36;
    signed char[107] pad144;
    struct s884** f144;
};

void** fun_10013b70(void** ecx, struct s883* a2) {
    void* ebp3;
    uint32_t eax4;
    struct s884** eax5;
    int32_t esi6;
    int32_t eax7;
    void** esi8;
    void** edi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (a2->f36 & 16 && (eax5 = a2->f144, esi6 = (*eax5)->f48, image_base_(esi6), eax7 = reinterpret_cast<int32_t>(esi6(esi6)), eax7 >= 0)) {
        fun_10015b89(reinterpret_cast<int32_t>(a2) + 0xfffffff0, ecx, 0, reinterpret_cast<uint32_t>(ebp3) + 0xfffffff8, esi8, edi9, ecx);
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

struct s886 {
    signed char[32] pad32;
    int32_t f32;
};

struct s887 {
    signed char[48] pad48;
    int32_t f48;
};

struct s885 {
    signed char[32] pad32;
    unsigned char f32;
    signed char[99] pad132;
    struct s886** f132;
    signed char[8] pad144;
    struct s887** f144;
};

void** fun_10013bd0(struct s885* a1, struct s887** a2, int32_t a3) {
    void* ebp4;
    uint32_t eax5;
    struct s886** eax6;
    int32_t esi7;
    int32_t eax8;
    struct s887** eax9;
    struct s887* esi10;
    int32_t ecx11;
    void** eax12;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    if (a1->f32 & 16 && (a1->f144 == a2 && a3 == 6)) {
        eax6 = a1->f132;
        esi7 = (*eax6)->f32;
        image_base_();
        eax8 = reinterpret_cast<int32_t>(esi7());
        if (eax8 >= 0) {
            eax9 = a1->f144;
            __asm__("fld qword [ebp-0xc]");
            esi10 = *eax9;
            __asm__("fstp qword [esp]");
            ecx11 = esi10->f48;
            image_base_(ecx11, eax9, esi7, esi7, 0);
            esi10->f48(ecx11, eax9, esi7, esi7, 0);
        }
    }
    eax12 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax12;
}

void** fun_10013c50(void** ecx, void** a2) {
    void* ebp3;
    uint32_t eax4;
    void** v5;
    void** esi6;
    void** esi7;
    void** ecx8;
    int32_t eax9;
    void** eax10;
    void** eax11;
    void** esi12;
    signed char al13;
    void** v14;
    void** eax15;
    void** ecx16;
    void** esi17;
    void** eax18;
    void** eax19;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (a2) {
        v5 = ecx + 28;
        EnterCriticalSection(v5, esi6);
        esi7 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx));
        image_base_(esi7, v5, esi6);
        ecx8 = ecx;
        eax9 = reinterpret_cast<int32_t>(esi7(v5, esi6));
        if (eax9) {
            eax10 = ecx + 52;
            if (!*reinterpret_cast<void***>(eax10)) {
                eax11 = reinterpret_cast<void**>(0);
            } else {
                eax11 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax10));
            }
            if (eax11 || (esi12 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx) + 12), image_base_(esi12, v5, esi6), ecx8 = ecx, al13 = reinterpret_cast<signed char>(esi12(v5, esi6)), !!al13)) {
                v14 = ecx8;
                ecx8 = eax10;
                eax15 = fun_1001a116(ecx8, a2, v14, v5, esi6);
                if (reinterpret_cast<signed char>(eax15) >= reinterpret_cast<signed char>(0)) {
                    ecx16 = *reinterpret_cast<void***>(a2);
                    esi17 = *reinterpret_cast<void***>(ecx16 + 4);
                    ecx8 = esi17;
                    image_base_(ecx8, a2, v5, esi6);
                    esi17(ecx8, a2, v5, esi6);
                }
            } else {
                eax18 = reinterpret_cast<void**>(GetLastError(v5, esi6));
                if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax18) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax18 == 0))) {
                }
            }
        }
        LeaveCriticalSection(ecx8);
    }
    eax19 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax19;
}

void** fun_10013d90(struct s182** a1, int32_t a2, struct s182*** a3) {
    void** eax4;

    eax4 = fun_100122ff(a1, a3);
    return eax4;
}

void** fun_10014600(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46) {
    void** ecx47;
    void** ebp48;
    void** eax49;

    ecx47 = g1002466c;
    if (ecx47 && reinterpret_cast<int1_t>(a2 == 32)) {
        eax49 = fun_100149d6(ecx47, ebp48, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46);
    }
    return eax49;
}

/* (image base) */
int32_t image_base_ = 0x1000af0c;

void fun_10017cb0() {
    goto image_base_;
}

int32_t MonitorFromPoint = 0x26e34;

/* (image base) */
int32_t image_base_ = 0x1000b3b7;

/* (image base) */
int32_t image_base_ = 0x1000a79f;

void** fun_100143b0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41) {
    int1_t zf42;
    uint32_t v43;
    void** eax44;
    void** esi45;
    int32_t eax46;
    void** eax47;
    void** eax48;
    void** eax49;
    void** edi50;
    void** eax51;
    void** edi52;
    void** esi53;
    void** ebx54;
    void** ebp55;
    int1_t zf56;

    zf42 = (g100244c0 & 0x100) == 0;
    if (!zf42) {
        v43 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 48)) >> 7 & 1;
        fun_10016342(v43);
    }
    eax44 = fun_1001d1cd(ecx);
    esi45 = eax44;
    if (reinterpret_cast<signed char>(esi45) >= reinterpret_cast<signed char>(0)) {
        eax46 = reinterpret_cast<int32_t>(MonitorFromPoint(0, 0, 1));
        if (eax46) {
            image_base_(eax46, 0, 0, 1);
        }
        eax47 = fun_10017d8c();
        esi45 = eax47;
        if (reinterpret_cast<signed char>(esi45) >= reinterpret_cast<signed char>(0) && ((eax48 = fun_10017e79(), esi45 = eax48, reinterpret_cast<signed char>(esi45) >= reinterpret_cast<signed char>(0)) && (eax49 = fun_10017860(0, 0, 1), esi45 = eax49, reinterpret_cast<signed char>(esi45) >= reinterpret_cast<signed char>(0)))) {
            edi50 = a2 + 0xfffffffc;
            eax51 = fun_1001503c(edi50, 0, 0, 1);
            esi45 = eax51;
            if (reinterpret_cast<signed char>(esi45) >= reinterpret_cast<signed char>(0)) {
                fun_100132fe(edi50, 0, 0, 1);
                fun_100131f9(edi50, 0, 0, 1);
                fun_10014d63(edi50, 0, 0, 0, 1, edi52, esi53, ebx54, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
                fun_1001571e(edi50, 1, 0, 0, 1, edi52, esi53, ebx54, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36);
                fun_10015dba(edi50, 0, 0, 1, edi52);
                zf56 = (g100244c0 & 0x100) == 0;
                if (!zf56) {
                    fun_10010b65(edi50, 0, 0, 1, edi52, esi53, ebx54, ebp55, __return_address(), a2, a3, a4);
                }
                image_base_(edi50, 0, 0, 1);
            }
            ecx = edi50;
            fun_100149d6(ecx, 0, 0, 1, edi52, esi53, ebx54, ebp55, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41);
        }
        fun_1001da38(ecx, 0, 0, 1);
        image_base_(ecx, 0, 0, 1);
        image_base_(ecx, 0x10000000, 0, 0, 1);
    }
    return esi45;
}

struct s888 {
    signed char[56] pad56;
    int32_t f56;
    signed char[4] pad64;
    int32_t f64;
};

signed char fun_10015880(struct s888* ecx) {
    int32_t ebx2;
    int32_t v3;
    int32_t v4;
    int32_t eax5;

    ebx2 = 0;
    if (ecx->f56 && (v3 = ecx->f64, v4 = ecx->f56, eax5 = reinterpret_cast<int32_t>(PostMessageW(v4, v3, 0, 0)), !!eax5)) {
        *reinterpret_cast<signed char*>(&ebx2) = 1;
    }
    return *reinterpret_cast<signed char*>(&ebx2);
}

void** fun_10016030(int32_t ecx, struct s99** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s99* eax5;
    int32_t esi6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (a2) {
        eax5 = *a2;
        esi6 = eax5->f8;
        image_base_(esi6);
        esi6(esi6);
    }
    eax7 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax7;
}

void fun_1000bb50() {
    int32_t eax1;
    int32_t ebp2;
    int32_t ebp3;

    eax1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 28) = eax1;
    image_base_();
    goto eax1;
}

void fun_1000b6de();

int32_t fun_1000b6d4() {
    int32_t ebp1;

    *reinterpret_cast<uint32_t*>(ebp1 - 20) = 0;
    return fun_1000b6de;
}

void fun_10016260(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void** v46;
    void** v47;
    void** ebp48;
    void** v49;
    void** esi50;
    void** v51;
    void** edi52;
    void** edi53;
    uint32_t eax54;
    uint32_t eax55;
    void** eax56;
    uint32_t eax57;
    void** esi58;
    signed char al59;
    uint32_t eax60;
    void** v61;
    uint32_t eax62;
    int1_t zf63;

    v46 = reinterpret_cast<void**>(__return_address());
    v47 = ebp48;
    v49 = esi50;
    v51 = edi52;
    edi53 = a5;
    eax54 = reinterpret_cast<uint32_t>(a3 - 0x113);
    if (!eax54) {
        if (!reinterpret_cast<int1_t>(a4 == 1)) {
            addr_1001632c_3:
            DefWindowProcW(ecx);
            goto edi53;
        } else {
            KillTimer(a2, 1, v51, v49, v47, v46);
        }
    } else {
        eax55 = eax54 - 0x105;
        if (!eax55) {
            eax56 = fun_1000c8a7(ecx, edi53, 0x10007248, 16, v51, v49, v47, v46, a2, a3);
            if (eax56) 
                goto addr_1001632c_3;
            if (*reinterpret_cast<void***>(edi53 + 20) != eax56) 
                goto addr_1001632c_3;
        } else {
            eax57 = eax55 - 0x1e9;
            if (!eax57) {
                esi58 = *reinterpret_cast<void***>(ecx + 56);
                if (esi58) {
                    *reinterpret_cast<void***>(esi58 + 60) = *reinterpret_cast<void***>(esi58 + 60) + 1;
                    do {
                        al59 = fun_10013229(esi58, v51, v49, v47, v46);
                    } while (al59);
                    ecx = esi58;
                    fun_10013f7b(ecx, v51, v49, v47, v46, a2, a3, a4, a5, a6);
                    goto addr_1001632c_3;
                }
            } else {
                eax60 = eax57 - 1;
                if (!eax60) {
                    v61 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!a4))));
                } else {
                    eax62 = eax60 - 1;
                    if (!eax62) {
                        zf63 = (g100244c0 & 0x100) == 0;
                        if (!zf63) {
                            fun_10010b65(ecx, v51, v49, v47, v46, a2, a3, a4, a5, a6, a7, a8);
                        }
                        v61 = reinterpret_cast<void**>(0);
                    } else {
                        if (!(eax62 - 1)) {
                            ecx = ecx + 0xffffffd4;
                            fun_10015f50(ecx, 1, v51, v49, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
                            goto addr_1001632c_3;
                        }
                    }
                }
                ecx = ecx + 0xffffffd4;
                fun_10014ac5(ecx, v61, v51, v49, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
                goto addr_1001632c_3;
            }
        }
    }
    ecx = ecx + 0xffffffd4;
    fun_100149d6(ecx, v51, v49, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    goto addr_1001632c_3;
}

void** fun_10016810(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    void** eax6;

    eax6 = fun_1001759b(ecx, __return_address(), a2, a3, a4, a5);
    g10024710 = reinterpret_cast<struct s69**>(0);
    return eax6;
}

struct s889 {
    struct s118* f0;
    void** f4;
    signed char[3] pad8;
    signed char f8;
    signed char[3] pad12;
    int32_t f12;
};

/* (image base) */
int32_t image_base_ = 0x1000aa2e;

int32_t GetKeyState = 0x26e6e;

/* (image base) */
int32_t image_base_ = 0x1000aa24;

/* (image base) */
int32_t image_base_ = 0x1000aa1a;

void** fun_10016940(void** ecx, struct s889* a2) {
    void* ebp3;
    uint32_t eax4;
    void** v5;
    struct s889* edi6;
    void** ebx7;
    void** v8;
    void** eax9;
    void** eax10;
    struct s118* edi11;
    struct s123** ebx12;
    int32_t esi13;
    struct s118* ecx14;
    struct s123** eax15;
    struct s118* esi16;
    struct s118* ebx17;
    void** eax18;
    uint32_t ebx19;
    int16_t ax20;
    int16_t ax21;
    int16_t ax22;
    void** eax23;
    void** esi24;
    struct s118* ecx25;
    void** eax26;
    struct s118* esi27;
    struct s118* ebx28;
    void** eax29;
    int16_t ax30;
    int16_t ax31;
    uint32_t ecx32;
    void** eax33;
    int16_t ax34;
    int16_t ax35;
    void** eax36;
    void** esi37;
    void** esi38;
    void** edi39;
    void** ebx40;
    signed char al41;
    void** v42;
    uint16_t ax43;
    void** v44;
    struct s118* eax45;
    struct s118* eax46;
    int32_t eax47;
    uint16_t ax48;
    struct s118* eax49;
    struct s118* eax50;
    void** ecx51;
    void** esi52;
    void** v53;
    void** ecx54;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    v5 = reinterpret_cast<void**>(eax4 ^ reinterpret_cast<uint32_t>(ebp3));
    edi6 = a2;
    ebx7 = ecx;
    v8 = ebx7;
    if (edi6->f12 != 2 || (eax9 = image_base_, eax10 = fun_10012ec1(&edi6->f4), *reinterpret_cast<signed char*>(&eax10) == 0)) {
        addr_10016a3f_2:
        if (!edi6->f8) {
            image_base_(ebx7, edi6);
        }
    } else {
        edi11 = edi6->f0;
        ebx12 = g1002471c;
        esi13 = edi11->f0->f140;
        image_base_(esi13);
        ecx14 = edi11;
        eax15 = reinterpret_cast<struct s123**>(esi13(ecx14));
        edi6 = a2;
        if (eax15 == ebx12) {
            esi16 = edi6->f0;
            ebx17 = reinterpret_cast<struct s118*>(0);
            if (esi16 && (ecx14 = esi16, eax18 = fun_1001640f(ecx14), !!eax18)) {
                ebx17 = esi16;
            }
            ebx19 = ebx17->f252;
            ax20 = reinterpret_cast<int16_t>(GetKeyState(ecx14, 0xa0));
            if (ax20 < 0 || (ax21 = reinterpret_cast<int16_t>(GetKeyState(ecx14, 0xa1, 0xa0)), ax21 < 0)) {
                if (*reinterpret_cast<unsigned char*>(&ebx19) & 4) {
                    ebx19 = ebx19 & 0xfffdffff | 0x2000000;
                }
            } else {
                if (*reinterpret_cast<unsigned char*>(&ebx19) & 2 && !(ebx19 & 0x20000)) {
                    ebx19 = ebx19 | 0x800000;
                }
            }
            ax22 = reinterpret_cast<int16_t>(GetKeyState(ecx14, 17, 0xa0));
            if (ax22 < 0) {
                ebx19 = ebx19 | 0x10000;
            }
            eax23 = *reinterpret_cast<void***>(v8 + 0x84);
            esi24 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax23) + 12);
            image_base_(esi24, eax23, ebx19, 17, 0xa0);
            esi24(esi24, eax23, ebx19, 17, 0xa0);
            edi6->f8 = 1;
            goto addr_10016a3b_15;
        }
        ecx25 = edi6->f0;
        eax26 = fun_100163c6(ecx25);
        if (!eax26) 
            goto addr_10016a3b_15;
        esi27 = edi6->f0;
        ebx28 = reinterpret_cast<struct s118*>(0);
        if (esi27 && (eax29 = fun_1001650d(esi27), !!eax29)) {
            ebx28 = esi27;
        }
        ax30 = reinterpret_cast<int16_t>(image_base_(ebx28));
        ax31 = reinterpret_cast<int16_t>(image_base_(ebx28, "R"));
        if (ax30 != ax31) 
            goto addr_10016b20_20; else 
            goto addr_10016a9f_21;
    }
    ecx32 = reinterpret_cast<unsigned char>(v5) ^ reinterpret_cast<uint32_t>(ebp3);
    eax33 = fun_1000a130(ecx32, ecx32);
    return eax33;
    addr_10016b20_20:
    ax34 = reinterpret_cast<int16_t>(image_base_(ebx28, "R"));
    ax35 = reinterpret_cast<int16_t>(image_base_(ebx28, "C", "R"));
    if (ax34 != ax35) {
        addr_10016a3b_15:
        ebx7 = v8;
    } else {
        ebx7 = v8;
        eax36 = *reinterpret_cast<void***>(ebx7 + 0x84);
        esi37 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax36) + 20);
        image_base_(esi37, eax36, "C", "R");
        esi37(esi37, eax36, "C", "R");
        goto addr_10016b58_24;
    }
    addr_10016a3e_25:
    goto addr_10016a3f_2;
    addr_10016b58_24:
    edi6->f8 = 1;
    goto addr_10016a3e_25;
    addr_10016a9f_21:
    al41 = fun_1001d3b4(ebx28, "R", esi38, edi39, ebx40, eax9, v8, v5);
    if (!al41) {
        v42 = reinterpret_cast<void**>("O");
        ax43 = reinterpret_cast<uint16_t>(image_base_(ebx28, "O", "R"));
        ebx7 = v8;
        v44 = reinterpret_cast<void**>(static_cast<uint32_t>(ax43));
        eax45 = reinterpret_cast<struct s118*>(image_base_(ebx7, v44, "O", "R"));
        eax46 = fun_100165b7(eax45, v44, "O", "R", esi38, edi39, ebx40, eax9, v8, v5);
        eax47 = reinterpret_cast<int32_t>(image_base_(eax46, v44, "O", "R"));
    } else {
        v42 = reinterpret_cast<void**>("O");
        ax48 = reinterpret_cast<uint16_t>(image_base_(ebx28, "O", "R"));
        ebx7 = v8;
        v44 = reinterpret_cast<void**>(static_cast<uint32_t>(ax48));
        eax49 = reinterpret_cast<struct s118*>(image_base_(ebx7, v44, "O", "R"));
        eax50 = fun_100165d3(eax49, v44, "O", "R", esi38, edi39, ebx40, eax9);
        eax47 = reinterpret_cast<int32_t>(image_base_(eax50, v44, "O", "R"));
    }
    ecx51 = *reinterpret_cast<void***>(ebx7 + 0x84);
    esi52 = *reinterpret_cast<void***>(ecx51);
    v53 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx7 + 0x8c) + eax47 * 4));
    ecx54 = *reinterpret_cast<void***>(esi52 + 16);
    image_base_(ecx54, ecx51, v53, v44, v42, "R");
    *reinterpret_cast<void***>(esi52 + 16)(ecx54, ecx51, v53, v44, v42, "R");
    goto addr_10016b58_24;
}

/* (image base) */
int32_t image_base_ = 0x1000af76;

int32_t fun_100176a0(int32_t ecx, unsigned char a2) {
    int32_t eax3;

    image_base_();
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

/* (image base) */
int32_t image_base_ = 0x1000b210;

void fun_10017750(int32_t a1) {
    int32_t* eax2;

    GetProcessHeap();
    eax2 = reinterpret_cast<int32_t*>(HeapAlloc());
    if (eax2) {
        image_base_(eax2);
        *eax2 = 0x1000137c;
        fun_10017cc0(eax2, a1);
    }
    goto 8;
}

int32_t fun_10017ab0() {
    image_base_(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 20, 1, 0);
    return 0;
}

void fun_10017b70() {
    goto image_base_;
}

int32_t fun_10017d60(int32_t a1) {
    int32_t eax2;
    int32_t* v3;

    eax2 = 1;
    if (a1 != 16) {
        if (a1 == 33 || a1 == 0x24b) {
            *v3 = 3;
        } else {
            addr_10017d88_4:
            return eax2;
        }
    }
    eax2 = 0;
    goto addr_10017d88_4;
}

/* (image base) */
int32_t image_base_ = 0x1000af26;

void fun_10018040() {
    goto image_base_;
}

/* (image base) */
int32_t image_base_ = 0x1000aad4;

int32_t fun_10018210(int32_t ecx, unsigned char a2) {
    int32_t eax3;

    image_base_();
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

/* (image base) */
int32_t image_base_ = 0x1000b2a4;

int32_t fun_10018240(int32_t ecx, unsigned char a2) {
    int32_t eax3;

    image_base_();
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10018350(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    void** eax6;

    eax6 = fun_1001759b(ecx, __return_address(), a2, a3, a4, a5);
    g1002471c = reinterpret_cast<struct s123**>(0);
    return eax6;
}

struct s890 {
    signed char[148] pad148;
    int32_t f148;
};

struct s891 {
    signed char[4] pad4;
    signed char f4;
    signed char[3] pad8;
    int32_t f8;
    int32_t f12;
    int32_t f16;
    signed char[4] pad24;
    uint16_t f24;
};

/* (image base) */
int32_t image_base_ = 0x1000b286;

void** fun_10018490(struct s890** ecx, struct s891* a2) {
    void* ebp3;
    uint32_t eax4;
    uint32_t eax5;
    struct s890* eax6;
    int32_t esi7;
    void** eax8;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (!a2->f8 && (a2->f12 == 1 && (!a2->f16 && ((eax5 = a2->f24, eax5 == 13) || eax5 == 32)))) {
        eax6 = *ecx;
        esi7 = eax6->f148;
        image_base_(esi7);
        esi7(ecx);
        a2->f4 = 1;
    }
    if (!a2->f4) {
        image_base_(ecx, a2);
    }
    eax8 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax8;
}

int32_t fun_10018660(int32_t ecx, unsigned char a2) {
    int32_t eax3;

    image_base_();
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void fun_10018700(int32_t a1, int32_t a2, int32_t** a3) {
    fun_100185ef(a2, a3);
    return;
}

void fun_1000a6a7(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f250, 0x100284bc);
    goto eax2;
}

void** fun_10019a20(void** ecx, unsigned char a2) {
    int32_t eax3;

    fun_10019873(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10019a50(void** ecx, unsigned char a2) {
    int32_t eax3;

    fun_100196a3(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10019a80(void** ecx, unsigned char a2) {
    int32_t eax3;

    *reinterpret_cast<void***>(ecx) = reinterpret_cast<void**>(0x100017ec);
    *reinterpret_cast<void***>(ecx + 8) = reinterpret_cast<void**>(0x100017d4);
    fun_100196a3(ecx);
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10019af0(void** ecx, unsigned char a2) {
    int32_t eax3;

    fun_10019933(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

int32_t* fun_10019b20(int32_t* ecx, unsigned char a2) {
    int32_t eax3;

    *ecx = 0x1000183c;
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10019c20(void** ecx, void** a2) {
    void** eax3;
    void** esi4;
    void** ecx5;
    uint32_t v6;
    void** edi7;
    void** eax8;
    void** ecx9;

    eax3 = fun_1001befd(ecx);
    esi4 = eax3;
    if (reinterpret_cast<signed char>(esi4) < reinterpret_cast<signed char>(0) || (ecx5 = *reinterpret_cast<void***>(ecx + 16), v6 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx5)) & 0xfffffff, eax8 = fun_1001a63d(ecx5, v6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, edi7), esi4 = eax8, reinterpret_cast<signed char>(esi4) < reinterpret_cast<signed char>(0))) {
        image_base_(a2, 1);
        image_base_(a2, 0xff, 1);
        ecx9 = *reinterpret_cast<void***>(ecx + 44);
        image_base_(ecx9, a2, 0xff, 1);
    } else {
        *reinterpret_cast<void***>(ecx) = a2;
    }
    return esi4;
}

void** fun_10019c90(void** ecx, void** a2) {
    void** eax3;
    void** edx4;
    void** ecx5;
    uint32_t v6;
    void** esi7;
    void** eax8;

    eax3 = fun_1001befd(ecx);
    edx4 = eax3;
    if (reinterpret_cast<signed char>(edx4) >= reinterpret_cast<signed char>(0) && (ecx5 = *reinterpret_cast<void***>(ecx + 16), v6 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx5)) & 0xfffffff, eax8 = fun_1001a63d(ecx5, v6, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, esi7), edx4 = eax8, reinterpret_cast<signed char>(edx4) >= reinterpret_cast<signed char>(0))) {
        *reinterpret_cast<void***>(ecx) = a2;
    }
    return edx4;
}

struct s892 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_10019d20(void** ecx, int32_t a2) {
    void* ebp3;
    void** eax4;
    void** esi5;
    void*** ebx6;
    void** eax7;
    void** ecx8;
    uint32_t v9;
    void** ebx10;
    void** eax11;
    int32_t* v12;
    void** ecx13;
    void** v14;
    void** v15;
    uint32_t v16;
    void** eax17;
    void** ecx18;
    uint32_t v19;
    struct s892* v20;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = fun_1001befd(ecx);
    esi5 = eax4;
    if (reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0)) {
        ebx6 = reinterpret_cast<void***>(ecx + 44);
        if (!*ebx6) {
            eax7 = fun_1001a36c(ecx, ebx6);
            esi5 = eax7;
        }
        if (reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0) && (ecx8 = *reinterpret_cast<void***>(ecx + 16), v9 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx8)) & 0xfffffff, eax11 = fun_1001a63d(ecx8, v9, reinterpret_cast<int32_t>(ebp3) + 0xfffffffc, ebx10), esi5 = eax11, reinterpret_cast<signed char>(esi5) >= reinterpret_cast<signed char>(0))) {
            *v12 = a2;
            ecx13 = *ebx6;
            v14 = *reinterpret_cast<void***>(ecx + 48);
            v15 = *reinterpret_cast<void***>(ecx + 52);
            v16 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx13)) & 0xfffffff;
            eax17 = fun_1001a7cb(ecx13, v16, reinterpret_cast<int32_t>(ebp3) - 4);
            esi5 = eax17;
            if (reinterpret_cast<signed char>(esi5) < reinterpret_cast<signed char>(0)) {
                ecx18 = *reinterpret_cast<void***>(ecx + 16);
                v19 = (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx18)) & 0xfffffff) - 1;
                fun_1001afa8(ecx18, v19, ecx18);
            } else {
                v20->f0 = v14;
                v20->f4 = v15;
            }
        }
    }
    return esi5;
}

void** fun_10019dc0(void** ecx, void** a2) {
    void** eax3;
    void** edi4;
    signed char al5;
    void** ecx6;
    uint32_t v7;
    void** esi8;
    void** eax9;

    eax3 = fun_1001befd(ecx);
    edi4 = eax3;
    if (reinterpret_cast<signed char>(edi4) >= reinterpret_cast<signed char>(0)) {
        al5 = reinterpret_cast<signed char>(image_base_(a2));
        if (!al5) {
            image_base_(a2, 1);
        } else {
            ecx6 = *reinterpret_cast<void***>(ecx + 16);
            v7 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx6)) & 0xfffffff;
            eax9 = fun_1001a63d(ecx6, v7, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffffc, esi8);
            edi4 = eax9;
            if (reinterpret_cast<signed char>(edi4) >= reinterpret_cast<signed char>(0)) {
                *reinterpret_cast<void***>(ecx) = a2;
            }
        }
    }
    return edi4;
}

void** fun_10019e20(void** ecx, void** a2) {
    void** eax3;

    fun_1001af25(60);
    eax3 = fun_1001a052(ecx, a2, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 8);
    return eax3;
}

struct s893 {
    signed char[16] pad16;
    int32_t f16;
    signed char[24] pad44;
    uint32_t* f44;
};

signed char fun_1001a5d0(struct s893* ecx) {
    int32_t eax2;

    eax2 = 0;
    if (ecx->f16 && (ecx->f44 && *ecx->f44 & 0xfffffff)) {
        *reinterpret_cast<signed char*>(&eax2) = 1;
    }
    return *reinterpret_cast<signed char*>(&eax2);
}

struct s894 {
    signed char[48] pad48;
    uint32_t* f48;
};

signed char fun_1001a5f0(struct s894* ecx) {
    if (!ecx->f48 || !(*ecx->f48 & 0xfffffff)) {
        return 0;
    } else {
        return 1;
    }
}

struct s896 {
    uint32_t f0;
    void** f4;
};

struct s895 {
    signed char[16] pad16;
    struct s896* f16;
};

void fun_1001a8a0(struct s895* ecx) {
    struct s895* edi2;
    uint32_t esi3;
    struct s896* edx4;
    int32_t v5;
    int32_t ebx6;
    void** ecx7;
    void** ecx8;
    void** ecx9;
    void** ecx10;
    void** ecx11;
    void** ecx12;
    void** ecx13;
    void** ecx14;

    edi2 = ecx;
    esi3 = 0;
    edx4 = edi2->f16;
    if (edx4->f0 & 0xfffffff) {
        v5 = ebx6;
        do {
            if (!(edx4->f0 & 0x10000000)) {
                ecx7 = reinterpret_cast<void**>(&edx4->f4);
            } else {
                ecx7 = edx4->f4;
            }
            ecx8 = *reinterpret_cast<void***>(ecx7 + esi3);
            image_base_(ecx8, 0xff, v5);
            if (!(edi2->f16->f0 & 0x10000000)) {
                ecx9 = reinterpret_cast<void**>(&edi2->f16->f4);
            } else {
                ecx9 = edi2->f16->f4;
            }
            ecx10 = *reinterpret_cast<void***>(ecx9 + esi3);
            image_base_(ecx10, 0xff, 0xff, v5);
            if (!(edi2->f16->f0 & 0x10000000)) {
                ecx11 = reinterpret_cast<void**>(&edi2->f16->f4);
            } else {
                ecx11 = edi2->f16->f4;
            }
            ecx12 = *reinterpret_cast<void***>(ecx11 + esi3);
            image_base_(ecx12, 0, 0xff, 0xff, v5);
            if (!(edi2->f16->f0 & 0x10000000)) {
                ecx13 = reinterpret_cast<void**>(&edi2->f16->f4);
            } else {
                ecx13 = edi2->f16->f4;
            }
            ecx14 = *reinterpret_cast<void***>(ecx13 + esi3);
            image_base_(ecx14);
            edx4 = edi2->f16;
            ++esi3;
        } while (esi3 < (edx4->f0 & 0xfffffff));
    }
    return;
}

struct s898 {
    uint32_t f0;
    void** f4;
};

struct s897 {
    signed char[16] pad16;
    struct s898* f16;
};

void fun_1001aa70(struct s897* ecx) {
    struct s897* edi2;
    struct s898* edx3;
    uint32_t esi4;
    void** ecx5;
    void** ecx6;

    edi2 = ecx;
    edx3 = edi2->f16;
    if (edx3) {
        esi4 = 0;
        if (edx3->f0 & 0xfffffff) {
            do {
                if (!(edx3->f0 & 0x10000000)) {
                    ecx5 = reinterpret_cast<void**>(&edx3->f4);
                } else {
                    ecx5 = edx3->f4;
                }
                ecx6 = *reinterpret_cast<void***>(ecx5 + esi4);
                image_base_(ecx6, 1);
                edx3 = edi2->f16;
                ++esi4;
            } while (esi4 < (edx3->f0 & 0xfffffff));
        }
    }
    return;
}

struct s899 {
    signed char[20] pad20;
    int32_t f20;
};

void** fun_1001ae20(struct s899** ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t esi4;
    void** eax5;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    esi4 = (*ecx)->f20;
    image_base_(esi4);
    esi4(ecx);
    eax5 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax5;
}

struct s900 {
    signed char[8] pad8;
    void** f8;
    signed char[10] pad19;
    signed char f19;
};

void fun_1001aeb0(struct s900* ecx, void** a2) {
    void** ecx3;
    uint32_t eax4;
    uint32_t edx5;
    void** ebx6;
    uint32_t esi7;
    void** edi8;

    if (ecx->f19 || ((ecx3 = ecx->f8, ecx3 == 0) || (eax4 = 0, edx5 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx3)) & 0xfffffff, static_cast<uint32_t>(reinterpret_cast<uint1_t>(edx5 == 0))))) {
        addr_1001af02_2:
        return;
    } else {
        ebx6 = ecx3 + 4;
        esi7 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx3)) & 0x10000000;
        do {
            if (!esi7) {
                edi8 = ebx6;
            } else {
                edi8 = *reinterpret_cast<void***>(ebx6);
            }
            ebx6 = ecx3 + 4;
            if (*reinterpret_cast<void***>(edi8 + eax4 * 4) == a2) 
                break;
            ++eax4;
        } while (eax4 < edx5);
        goto addr_1001aef6_9;
    }
    fun_1001afa8(ecx3, eax4, ecx3);
    addr_1001aeff_11:
    goto addr_1001af02_2;
    addr_1001aef6_9:
    goto addr_1001aeff_11;
}

struct s901 {
    signed char[40] pad40;
    uint32_t f40;
};

void fun_1001af10(struct s901* ecx, uint32_t a2) {
    if (ecx->f40 == a2) {
        ecx->f40 = 0;
    }
    return;
}

void fun_1001b000(struct s144* ecx) {
    struct s144* esi2;
    struct s145* ecx3;
    uint32_t edi4;
    int32_t v5;
    int32_t ebx6;
    void** ecx7;
    void** ebx8;
    uint32_t v9;
    int32_t eax10;
    void** ecx11;
    int32_t v12;
    uint32_t eax13;
    int32_t v14;
    void** v15;
    void** v16;

    esi2 = ecx;
    ecx3 = esi2->f16;
    if (ecx3) {
        edi4 = 0;
        if (ecx3->f0 & 0xfffffff) {
            v5 = ebx6;
            do {
                if (!(ecx3->f0 & 0x10000000)) {
                    ecx7 = reinterpret_cast<void**>(&ecx3->f4);
                } else {
                    ecx7 = *reinterpret_cast<void***>(&ecx3->f4);
                }
                ebx8 = *reinterpret_cast<void***>(ecx7 + edi4 * 4);
                v9 = reinterpret_cast<uint1_t>(esi2->f44 != 6);
                image_base_(ebx8, v9, v5);
                image_base_(ebx8);
                if (esi2->f48) {
                    eax10 = 0;
                    *reinterpret_cast<unsigned char*>(&eax10) = reinterpret_cast<uint1_t>(esi2->f44 != 6);
                    image_base_(ebx8, eax10 * 2 - 3);
                }
                ecx3 = esi2->f16;
                ++edi4;
            } while (edi4 < (ecx3->f0 & 0xfffffff));
        }
        ecx11 = image_base_;
        if (ecx11 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx11 + 28)) & 8) {
            v12 = esi2->f44;
            eax13 = esi2->f12;
            v14 = esi2->f20;
            v15 = *reinterpret_cast<void***>(ecx11 + 20);
            v16 = *reinterpret_cast<void***>(ecx11 + 16);
            fun_1001c806(15, v16, v15, esi2, eax13, v14, v12);
        }
    }
    return;
}

struct s903 {
    uint32_t f0;
    void** f4;
};

struct s904 {
    uint32_t f0;
    void** f4;
};

struct s902 {
    signed char[16] pad16;
    struct s903* f16;
    signed char[24] pad44;
    struct s904* f44;
    int32_t f48;
};

/* (image base) */
int32_t image_base_ = 0x1000b36a;

struct s905 {
    int32_t f0;
    int32_t f4;
};

void** fun_1001b470(struct s902* ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    void** v5;
    void** ebx6;
    int32_t v7;
    int32_t esi8;
    void** v9;
    void** edi10;
    struct s902* edi11;
    void** eax12;
    struct s903* ecx13;
    uint32_t esi14;
    void** v15;
    void** ecx16;
    void** ecx17;
    void* v18;
    struct s905* eax19;
    void** ecx20;
    int32_t v21;
    void** ecx22;
    void** ecx23;
    int32_t v24;
    void** ecx25;
    struct s904* ecx26;
    uint32_t esi27;
    void** ecx28;
    void** ecx29;
    void** ecx30;
    void** ecx31;
    int32_t ebx32;
    struct s904* v33;
    struct s903* v34;
    void** eax35;
    int32_t v36;
    void** esi37;
    void** ecx38;
    void** eax39;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    v5 = ebx6;
    v7 = esi8;
    v9 = edi10;
    edi11 = ecx;
    eax12 = fun_1001af25(20);
    ecx13 = edi11->f16;
    esi14 = 0;
    v15 = eax12;
    if (ecx13->f0 & 0xfffffff) {
        do {
            if (!(ecx13->f0 & 0x10000000)) {
                ecx16 = reinterpret_cast<void**>(&ecx13->f4);
            } else {
                ecx16 = ecx13->f4;
            }
            ecx17 = *reinterpret_cast<void***>(ecx16 + esi14);
            v18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8);
            eax19 = reinterpret_cast<struct s905*>(image_base_(ecx17, v18));
            if (!(edi11->f16->f0 & 0x10000000)) {
                ecx20 = reinterpret_cast<void**>(&edi11->f16->f4);
            } else {
                ecx20 = edi11->f16->f4;
            }
            v21 = eax19->f0;
            ecx22 = *reinterpret_cast<void***>(ecx20 + esi14);
            image_base_(ecx22, v21, v18);
            if (!(edi11->f16->f0 & 0x10000000)) {
                ecx23 = reinterpret_cast<void**>(&edi11->f16->f4);
            } else {
                ecx23 = edi11->f16->f4;
            }
            v24 = eax19->f4;
            ecx25 = *reinterpret_cast<void***>(ecx23 + esi14);
            image_base_(ecx25, v24, v21, v18);
            if (!1) {
                image_base_(v24, v21, v18);
            }
            ecx13 = edi11->f16;
            ++esi14;
        } while (esi14 < (ecx13->f0 & 0xfffffff));
    }
    ecx26 = edi11->f44;
    esi27 = 0;
    if (ecx26->f0 & 0xfffffff) {
        do {
            if (!(ecx26->f0 & 0x10000000)) {
                ecx28 = reinterpret_cast<void**>(&ecx26->f4);
            } else {
                ecx28 = ecx26->f4;
            }
            ecx29 = *reinterpret_cast<void***>(ecx28 + esi27);
            image_base_(ecx29, 1);
            if (!(edi11->f44->f0 & 0x10000000)) {
                ecx30 = reinterpret_cast<void**>(&edi11->f44->f4);
            } else {
                ecx30 = edi11->f44->f4;
            }
            ecx31 = *reinterpret_cast<void***>(ecx30 + esi27);
            image_base_(ecx31, 1, 1);
            ecx26 = edi11->f44;
            ++esi27;
        } while (esi27 < (ecx26->f0 & 0xfffffff));
    }
    ebx32 = edi11->f48;
    v33 = edi11->f44;
    v34 = edi11->f16;
    eax35 = fun_1001a4ee(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff4);
    if (reinterpret_cast<signed char>(eax35) >= reinterpret_cast<signed char>(0)) {
        v36 = reinterpret_cast<int32_t>(&edi11->pad44);
        esi37 = g0;
        ecx38 = *reinterpret_cast<void***>(esi37 + 72);
        image_base_(ecx38, 0, v34, v33, ebx32, v15, 0, 0xff, v36);
        *reinterpret_cast<void***>(esi37 + 72)(ecx38, 0, v34, v33, ebx32, v15, 0, 0xff, v36);
    }
    fun_1001ccf4(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff4, v9, v7, v5);
    eax39 = fun_1000a130(v4 ^ reinterpret_cast<uint32_t>(ebp2));
    return eax39;
}

struct s906 {
    signed char[16] pad16;
    int32_t f16;
};

void** fun_1001b5e0(struct s906* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t ebx4;
    void** eax5;
    int32_t v6;
    void** esi7;
    void** ecx8;
    void** edi9;
    int32_t esi10;
    void** ebx11;
    void** eax12;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    ebx4 = ecx->f16;
    eax5 = fun_1001a4ee(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8);
    if (reinterpret_cast<signed char>(eax5) >= reinterpret_cast<signed char>(0)) {
        v6 = reinterpret_cast<int32_t>(ecx + 1);
        esi7 = g0;
        ecx8 = *reinterpret_cast<void***>(esi7 + 0x68);
        image_base_(ecx8, 0, ebx4, 1, 0, v6);
        *reinterpret_cast<void***>(esi7 + 0x68)(ecx8, 0, ebx4, 1, 0, v6);
    }
    fun_1001ccf4(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8, edi9, esi10, ebx11);
    eax12 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
    return eax12;
}

struct s907 {
    signed char[16] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
};

void** fun_1001b980(struct s907* ecx) {
    void*** ebp2;
    void** v3;
    void** esi4;
    void** ebp5;
    void** eax6;

    ebp2 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v3 = ecx->f16;
    eax6 = fun_1001bdec(ebp2 + 0xfffffffc, v3, 7, &ecx->f20, esi4, 0, ebp5);
    fun_1001ccf4(ebp2 + 0xfffffffc, esi4, 0, ebp5);
    return eax6;
}

/* (image base) */
int32_t image_base_ = 0x1000ba20;

/* (image base) */
int32_t image_base_ = 0x1000ba16;

/* (image base) */
int32_t image_base_ = 0x1000ba2a;

struct s908 {
    uint32_t f0;
    uint32_t f4;
};

struct s909 {
    uint32_t f0;
    int32_t f4;
};

struct s910 {
    int32_t f0;
    uint32_t f4;
};

struct s911 {
    uint32_t f0;
    uint32_t f4;
};

void** fun_1001ba40(struct s147* ecx) {
    void* esp2;
    uint32_t eax3;
    uint32_t v4;
    void** v5;
    void** ebx6;
    struct s147* ebx7;
    void** v8;
    void** esi9;
    void** v10;
    void** edi11;
    int32_t esi12;
    signed char al13;
    void* esp14;
    uint32_t ecx15;
    void** eax16;
    uint32_t v17;
    uint32_t eax18;
    void** eax19;
    void* esp20;
    void** ecx21;
    void** esi22;
    void** v23;
    uint32_t edi24;
    void** v25;
    uint32_t v26;
    void** v27;
    void** v28;
    void** v29;
    void** ecx30;
    void** v31;
    void** esi32;
    void** eax33;
    void** eax34;
    void** ecx35;
    void** esi36;
    uint32_t v37;
    void** edx38;
    struct s908* esi39;
    uint32_t v40;
    struct s909* esi41;
    uint32_t v42;
    struct s910* esi43;
    int32_t v44;
    uint32_t v45;
    uint32_t eax46;
    void** v47;
    struct s911* eax48;
    uint32_t edx49;
    uint32_t ecx50;
    signed char al51;
    uint32_t eax52;
    int32_t v53;
    int32_t v54;
    void** v55;
    void** eax56;
    void** edi57;
    void* ecx58;
    uint32_t eax59;
    int32_t v60;
    void** v61;
    void** v62;
    int32_t v63;
    void** esp64;
    void** esp65;
    void** v66;
    void** eax67;
    void** v68;
    void** v69;

    esp2 = reinterpret_cast<void*>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 68);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(esp2);
    v5 = ebx6;
    ebx7 = ecx;
    v8 = esi9;
    v10 = edi11;
    esi12 = ebx7->f0->f8;
    image_base_(esi12);
    al13 = reinterpret_cast<signed char>(esi12(ebx7));
    esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp2) - 4 - 4 - 4 - 4 + 4 - 4 + 4);
    if (!al13) {
        addr_1001bd15_2:
        ecx15 = v4 ^ reinterpret_cast<uint32_t>(esp14) + 4 + 4 + 4;
        eax16 = fun_1000a130(ecx15, ecx15);
        return eax16;
    } else {
        v17 = 0;
        if (ebx7->f95) {
            if (!ebx7->f96) {
                eax18 = reinterpret_cast<uint32_t>(image_base_(ebx7));
                esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) - 4 + 4);
            } else {
                eax18 = reinterpret_cast<uint32_t>(image_base_(ebx7));
                esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) - 4 + 4);
            }
            v17 = eax18;
        }
        eax19 = fun_1001bfc1(ebx7);
        esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) - 4 + 4);
        ecx21 = image_base_;
        esi22 = eax19;
        v23 = esi22;
        edi24 = 0;
        *reinterpret_cast<signed char*>(&v25 + 3) = 0;
        v26 = 0;
        if (reinterpret_cast<signed char>(esi22) >= reinterpret_cast<signed char>(0)) 
            goto addr_1001bac3_9;
    }
    addr_1001bc91_10:
    esi22 = reinterpret_cast<void**>(0x8000ffff);
    v23 = reinterpret_cast<void**>(0x8000ffff);
    if (ecx21 == 0x10024000) 
        goto addr_1001bcf6_11;
    if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx21 + 28)) & 2)) 
        goto addr_1001bcf6_11;
    v27 = *reinterpret_cast<void***>(ecx21 + 20);
    v28 = *reinterpret_cast<void***>(ecx21 + 16);
    fun_1001c676(18, v28, v27, v10, v8, v5);
    esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 - 4 + 4 - 4 + 8 + 4);
    addr_1001bcbb_14:
    if (reinterpret_cast<signed char>(esi22) < reinterpret_cast<signed char>(0)) {
        addr_1001bcf6_11:
        v29 = ebx7->f88;
        ecx30 = reinterpret_cast<void**>(&ebx7->f44);
        v31 = ebx7->f52;
        fun_1001bda4(ecx30, v31, v29);
        esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 - 4 + 8 + 4);
    } else {
        ecx30 = reinterpret_cast<void**>(&ebx7->f44);
        esi32 = ebx7->f88;
        eax33 = fun_1001a4ee(ecx30);
        esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4);
        if (reinterpret_cast<signed char>(eax33) >= reinterpret_cast<signed char>(0)) {
            eax34 = *reinterpret_cast<void***>(&ebx7->f44);
            ecx35 = *reinterpret_cast<void***>(eax34);
            esi36 = *reinterpret_cast<void***>(ecx35 + 0x84);
            ecx30 = esi36;
            image_base_(ecx30, eax34, v23, esi32);
            esi36(ecx30, eax34, v23, esi32);
            esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) - 4 - 4 - 4 - 4 + 4 - 4 + 4);
        }
    }
    if (v17) {
        image_base_(ecx30);
        esp14 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) - 4 + 4);
        goto addr_1001bd15_2;
    }
    addr_1001bac3_9:
    v37 = 0;
    do {
        if (edi24 >= (ebx7->f48->f0 & 0xfffffff)) 
            break;
        if (!(ebx7->f48->f0 & 0x10000000)) {
            edx38 = reinterpret_cast<void**>(&ebx7->f48->f4);
        } else {
            edx38 = ebx7->f48->f4;
        }
        esi39 = reinterpret_cast<struct s908*>(v37 + reinterpret_cast<uint32_t>(edx38));
        v40 = esi39->f0;
        esi41 = reinterpret_cast<struct s909*>(&esi39->f4);
        v42 = esi41->f0;
        esi43 = reinterpret_cast<struct s910*>(&esi41->f4);
        v44 = esi43->f0;
        v45 = esi43->f4;
        eax46 = v45 >> 8;
        if (*reinterpret_cast<signed char*>(&eax46)) {
            *reinterpret_cast<signed char*>(&v25 + 3) = 1;
            continue;
        } else {
            v47 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp20) + 40);
            eax48 = reinterpret_cast<struct s911*>(image_base_(v40, v47));
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 + 4);
            edx49 = eax48->f0;
            v17 = edx49;
            ecx50 = eax48->f4;
            al51 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v44) + 2);
            if (al51) {
                eax52 = reinterpret_cast<uint32_t>(image_base_(v26, v47));
                image_base_(v26, eax52 & 0xffefefff, v47);
                esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4 - 4 - 4 + 4);
                al51 = *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v42) + 2);
                ecx50 = v17;
                edx49 = v37;
            }
            if (edx49 != v40) 
                goto addr_1001bb9c_40;
            if (ecx50 == v42) 
                goto addr_1001bb62_42;
        }
        addr_1001bb9c_40:
        if (!al51) {
            v53 = ebx7->f68;
            v54 = ebx7->f64;
            v55 = ebx7->f88;
            eax56 = fun_10019ff9(&ebx7->f44, v55, v23, ecx50, v42, v54, v53, v26, v40, v47);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 32 + 4);
            edi57 = eax56;
            v25 = eax56;
        } else {
            ecx58 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) + 60);
            if (reinterpret_cast<int32_t>(ecx50) > reinterpret_cast<int32_t>(v42)) 
                goto addr_1001bbb7_57; else 
                goto addr_1001bbb4_58;
        }
        addr_1001bc09_59:
        ecx21 = image_base_;
        if (ecx21 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx21 + 28)) & 8) {
            eax59 = ebx7->f12;
            v60 = ebx7->f20;
            v61 = *reinterpret_cast<void***>(ecx21 + 20);
            v62 = *reinterpret_cast<void***>(ecx21 + 16);
            fun_1001c87e(v62, v61, ebx7, v23, eax59, v60, v37, v17, edi57, v47);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 - 4 + 36 + 4);
            ecx21 = image_base_;
        }
        if (reinterpret_cast<signed char>(edi57) >= reinterpret_cast<signed char>(0)) {
            *reinterpret_cast<signed char*>(&v5 + 3) = 1;
        }
        addr_1001bc4d_63:
        if (v45) {
            image_base_(v45, v47);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 + 4);
            ecx21 = image_base_;
            continue;
        }
        addr_1001bbb7_57:
        v63 = ebx7->f84 - ebx7->f76;
        esp64 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 - 4);
        esp65 = esp64 - 1;
        v66 = ebx7->f88;
        eax67 = fun_10019e98(&ebx7->f44, v66, v23, esp65 + 11, esp64 + 16, ecx58, ecx58, v63, v47);
        esp20 = reinterpret_cast<void*>(esp65 - 1 - 1 - 1 - 1 + 7 + 1);
        edi57 = eax67;
        v25 = edi57;
        goto addr_1001bc09_59;
        addr_1001bbb4_58:
        ecx58 = reinterpret_cast<void*>(&ebx7->pad76);
        goto addr_1001bbb7_57;
        addr_1001bb62_42:
        ecx21 = image_base_;
        if (ecx21 != 0x10024000 && reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx21 + 28)) & 4) {
            v68 = *reinterpret_cast<void***>(ecx21 + 20);
            v69 = *reinterpret_cast<void***>(ecx21 + 16);
            fun_1001c676(17, v69, v68, v47, v10, v8);
            esp20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp20) - 4 - 4 - 4 + 4 - 4 + 8 + 4);
            ecx21 = image_base_;
            goto addr_1001bc4d_63;
        }
        v37 = v37 + 16;
        edi24 = v26 + 1;
        esi22 = v23;
        v26 = edi24;
    } while (reinterpret_cast<signed char>(esi22) >= reinterpret_cast<signed char>(0));
    if (*reinterpret_cast<signed char*>(&v25 + 3)) 
        goto addr_1001bcbb_14; else 
        goto addr_1001bc91_10;
}

int32_t fun_1001c350(void** a1, void** a2, void** a3) {
    void** ebp4;

    if (a1) {
        fun_1001af64(a1, ebp4, __return_address(), a1, a2, a3);
    }
    return 1;
}

struct s912 {
    void** f0;
    signed char[1] pad2;
    void** f2;
};

struct s913 {
    void** f0;
    signed char[1] pad2;
    void** f2;
};

void** fun_1001d040(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45) {
    void** v46;
    void** v47;
    void** ebp48;
    void*** ebp49;
    uint32_t eax50;
    void** v51;
    void** eax52;
    void** v53;
    void** ebx54;
    void** v55;
    void** esi56;
    void** v57;
    void** edi58;
    void** edi59;
    struct s912* edx60;
    void** ecx61;
    uint1_t cf62;
    uint32_t ecx63;
    void** eax64;
    void** ecx65;
    struct s913* ecx66;
    uint1_t cf67;
    void** eax68;
    void** ecx69;
    void** esi70;
    void** eax71;
    void** eax72;
    void** ecx73;
    void** esi74;

    v46 = reinterpret_cast<void**>(__return_address());
    v47 = ebp48;
    ebp49 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax50 = g100240c4;
    v51 = reinterpret_cast<void**>(eax50 ^ reinterpret_cast<uint32_t>(ebp49));
    eax52 = a3;
    v53 = ebx54;
    v55 = esi56;
    v57 = edi58;
    if (!(!eax52 || !*reinterpret_cast<void***>(eax52))) {
        edi59 = a4;
        edx60 = reinterpret_cast<struct s912*>("T");
        ecx61 = eax52;
        *reinterpret_cast<void***>(edi59) = reinterpret_cast<void**>(0);
        do {
            cf62 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx61)) < reinterpret_cast<unsigned char>(edx60->f0));
            if (*reinterpret_cast<void***>(ecx61) != edx60->f0) 
                goto addr_1001d09c_5;
            if (!*reinterpret_cast<void***>(ecx61)) 
                goto addr_1001d098_7;
            cf62 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx61 + 2)) < reinterpret_cast<unsigned char>(edx60->f2));
            if (*reinterpret_cast<void***>(ecx61 + 2) != edx60->f2) 
                goto addr_1001d09c_5;
            ecx61 = ecx61 + 4;
            edx60 = reinterpret_cast<struct s912*>(reinterpret_cast<int32_t>(edx60) + 4);
        } while (*reinterpret_cast<void***>(ecx61 + 2));
        goto addr_1001d098_7;
    }
    addr_1001d15f_10:
    ecx63 = reinterpret_cast<unsigned char>(v51) ^ reinterpret_cast<uint32_t>(ebp49);
    eax64 = fun_1000a130(ecx63, ecx63);
    return eax64;
    addr_1001d09c_5:
    ecx65 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx61) - (reinterpret_cast<unsigned char>(ecx61) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx61) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx61) + cf62))) | 1);
    addr_1001d0a1_11:
    if (ecx65) {
        ecx66 = reinterpret_cast<struct s913*>("C");
        do {
            cf67 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax52)) < reinterpret_cast<unsigned char>(ecx66->f0));
            if (*reinterpret_cast<void***>(eax52) != ecx66->f0) 
                break;
            if (!*reinterpret_cast<void***>(eax52)) 
                goto addr_1001d109_15;
            cf67 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax52 + 2)) < reinterpret_cast<unsigned char>(ecx66->f2));
            if (*reinterpret_cast<void***>(eax52 + 2) != ecx66->f2) 
                break;
            eax52 = eax52 + 4;
            ecx66 = reinterpret_cast<struct s913*>(reinterpret_cast<int32_t>(ecx66) + 4);
        } while (*reinterpret_cast<void***>(eax52 + 2));
        goto addr_1001d109_15;
    } else {
        fun_100136b5(ebp49 + 0xfffffff8, v57, v55, v53, 0, v51, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
        eax68 = fun_1001cc54(ebp49 + 0xfffffff8, v57, v55, v53, 0, v51, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36);
        if (reinterpret_cast<signed char>(eax68) >= reinterpret_cast<signed char>(0)) {
            ecx69 = g0;
            esi70 = *reinterpret_cast<void***>(ecx69);
            image_base_(esi70, 0, 0x10005188, edi59);
            esi70(esi70, 0, 0x10005188, edi59);
        }
        fun_100136b5(ebp49 + 0xfffffff8, v57, v55, v53, 0, v51, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
        goto addr_1001d15f_10;
    }
    eax71 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax52) - (reinterpret_cast<unsigned char>(eax52) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax52) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(eax52) + cf67))) | 1);
    addr_1001d112_22:
    if (eax71) {
        goto addr_1001d15f_10;
    } else {
        fun_100136b5(ebp49 + 0xfffffff8, v57, v55, v53, 0, v51, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
        eax72 = fun_1001cbae(ebp49 + 0xfffffff8, v57, v55, v53, 0, v51, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36);
        if (reinterpret_cast<signed char>(eax72) >= reinterpret_cast<signed char>(0)) {
            ecx73 = g0;
            esi74 = *reinterpret_cast<void***>(ecx73);
            image_base_(esi74, 0, 0x10005188, edi59);
            esi74(esi74, 0, 0x10005188, edi59);
        }
        fun_100136b5(ebp49 + 0xfffffff8, v57, v55, v53, 0, v51, v47, v46, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
        goto addr_1001d15f_10;
    }
    addr_1001d109_15:
    eax71 = reinterpret_cast<void**>(0);
    goto addr_1001d112_22;
    addr_1001d098_7:
    ecx65 = reinterpret_cast<void**>(0);
    goto addr_1001d0a1_11;
}

struct s914 {
    signed char[12] pad12;
    int32_t f12;
};

/* (image base) */
int32_t image_base_ = 0x1000b3d5;

void fun_1001d600(struct s914* a1, int32_t a2) {
    a1->f12 = a2;
    image_base_();
    image_base_();
    goto 0x2000;
}

struct s915 {
    signed char[12] pad12;
    int32_t f12;
    int32_t f16;
};

void fun_1001d720(struct s915* a1) {
    int32_t ecx2;
    int32_t eax3;
    int32_t esi4;

    image_base_();
    ecx2 = a1->f12;
    eax3 = reinterpret_cast<int32_t>(image_base_(ecx2));
    a1->f16 = eax3;
    goto esi4;
}

void** fun_1001d840(struct s150** a1, int32_t a2, struct s150*** a3) {
    void** eax4;

    eax4 = fun_1001ca07(a1, a3);
    return eax4;
}

struct s195* fun_1001e1c0(struct s195* ecx, unsigned char a2) {
    int32_t eax3;

    fun_1001e14b(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

struct s916 {
    signed char[6] pad6;
    void** f6;
};

void** fun_1001e420(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42) {
    void*** ebp43;
    uint32_t eax44;
    void** v45;
    void** ecx46;
    void** edi47;
    void** esi48;
    void** ebx49;
    void** v50;
    void** v51;
    void** v52;
    void** ebp53;
    int1_t zf54;
    void** v55;
    void** v56;
    void** v57;
    int32_t eax58;
    void** v59;
    void** edi60;
    void** esi61;
    void** v62;
    uint32_t ecx63;
    void** eax64;
    int1_t zf65;
    void** v66;
    void** v67;
    void** edx68;
    void** eax69;
    struct s916* ecx70;
    void** edi71;
    void** ecx72;
    void** v73;
    void** v74;
    void** v75;
    void** esi76;
    void** v77;
    void** v78;
    void** ecx79;
    void** esi80;
    int32_t eax81;
    void* v82;
    void** esi83;
    int32_t eax84;
    uint32_t v85;
    void** ecx86;
    void** esi87;
    int1_t zf88;

    ebp43 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax44 = g100240c4;
    v45 = reinterpret_cast<void**>(eax44 ^ reinterpret_cast<uint32_t>(ebp43));
    ecx46 = a1 + 0x248;
    fun_1001eba5(ecx46, edi47, esi48, ebx49, v50, v51, v52, v45, ebp53, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    zf54 = *reinterpret_cast<signed char*>(a1 + 61) == 0;
    if (zf54 || (ecx46 = reinterpret_cast<void**>(ebp43 + 0xfffffff8), fun_100136b5(ecx46, edi47, esi48, ebx49, v55, v56, 0, v45, ebp53, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42), v57 = reinterpret_cast<void**>(ebp43 + 0xfffffff8), eax58 = reinterpret_cast<int32_t>(CoCreateInstance(ecx46, 0x10008054, 0, 1, 0x100084b4, v57)), eax58 < 0)) {
        addr_1001e566_2:
        v59 = *reinterpret_cast<void***>(a1 + 40);
        SetEvent(ecx46);
        edi60 = *reinterpret_cast<void***>(a1 + 48);
        esi61 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(edi60) + 4);
        image_base_(esi61);
        esi61(edi60);
        fun_100136b5(ebp43 + 0xfffffff8, a1 + 0xfffffff0, v59, edi47, esi48, ebx49, v62, 0, 0, v45, ebp53, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40);
        ecx63 = reinterpret_cast<unsigned char>(v45) ^ reinterpret_cast<uint32_t>(ebp43);
        eax64 = fun_1000a130(ecx63, ecx63);
        return eax64;
    } else {
        zf65 = (*reinterpret_cast<unsigned char*>(&g100244c0) & 16) == 0;
        if (!zf65) {
            fun_10010b65(ecx46, 0x10008054, 0, 1, 0x100084b4, v57, edi47, esi48, ebx49, v66, v67, 0);
        }
        edx68 = a1 + 0x27c;
        eax69 = *reinterpret_cast<void***>(edx68);
        *reinterpret_cast<void***>(edx68) = reinterpret_cast<void**>(0);
        if (eax69) {
            DeleteObject(ecx46, eax69, 0x10008054, 0, 1, 0x100084b4, v57);
            edx68 = a1 + 0x27c;
        }
        ecx70 = reinterpret_cast<struct s916*>(0);
        edi71 = a1 + 62;
        *reinterpret_cast<void***>(&ecx70) = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!*reinterpret_cast<void***>(a1 + 60))));
        ecx72 = reinterpret_cast<void**>(&ecx70->f6);
        v62 = ecx72;
        if (*reinterpret_cast<void***>(edi71)) 
            goto addr_1001e4bd_8;
    }
    addr_1001e4df_9:
    v73 = a1 + 0x27c;
    v74 = ecx72;
    v75 = *reinterpret_cast<void***>(a1 + 56);
    esi76 = g0;
    v77 = *reinterpret_cast<void***>(a1 + 52);
    v78 = reinterpret_cast<void**>(0);
    ecx79 = *reinterpret_cast<void***>(esi76 + 12);
    image_base_(ecx79, 0, 0, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57);
    *reinterpret_cast<void***>(esi76 + 12)(ecx79, 0, 0, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57);
    goto addr_1001e501_10;
    addr_1001e4bd_8:
    v73 = edx68;
    v74 = ecx72;
    v75 = *reinterpret_cast<void***>(a1 + 56);
    esi80 = g0;
    v77 = *reinterpret_cast<void***>(a1 + 52);
    v78 = edi71;
    ecx79 = *reinterpret_cast<void***>(esi80 + 12);
    image_base_(ecx79, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57);
    eax81 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi80 + 12)(ecx79, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57));
    if (eax81 >= 0) {
        addr_1001e501_10:
        if (*reinterpret_cast<void***>(edi71) && (fun_100136b5(ebp43 + 0xfffffff4, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57, edi47, esi48, ebx49, v62, 0, 0, v45, ebp53, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31), v82 = reinterpret_cast<void*>(ebp43 + 0xfffffff4), esi83 = g0, ecx79 = *reinterpret_cast<void***>(esi83), image_base_(ecx79, 0, 0x10008494, v82, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57), eax84 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(esi83)(ecx79, 0, 0x10008494, v82, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57)), eax84 >= 0)) {
            v85 = reinterpret_cast<uint32_t>(a1 + 0x248);
            ecx86 = g0;
            esi87 = *reinterpret_cast<void***>(ecx86 + 16);
            ecx79 = esi87;
            image_base_(ecx79, 0, edi71, v85, 0, 0x10008494, v82, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57);
            esi87(ecx79, 0, edi71, v85, 0, 0x10008494, v82, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57);
        }
    } else {
        ecx72 = v62;
        goto addr_1001e4df_9;
    }
    zf88 = (*reinterpret_cast<unsigned char*>(&g100244c0) & 16) == 0;
    if (!zf88) {
        fun_10010b65(ecx79, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57);
    }
    ecx46 = reinterpret_cast<void**>(ebp43 + 0xfffffff4);
    fun_100136b5(ecx46, 0, v78, v77, v75, v74, v73, 0x10008054, 0, 1, 0x100084b4, v57, edi47, esi48, ebx49, v62, 0, 0, v45, ebp53, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31);
    goto addr_1001e566_2;
}

struct s917 {
    signed char[60] pad60;
    unsigned char f60;
};

int32_t fun_1001e5b0(struct s917* a1) {
    int32_t eax2;

    eax2 = 0;
    *reinterpret_cast<unsigned char*>(&eax2) = reinterpret_cast<uint1_t>(!!a1->f60);
    return eax2;
}

struct s918 {
    signed char[16] pad16;
    int32_t f16;
    signed char[8] pad28;
    uint32_t f28;
};

int32_t fun_1001e610(struct s918* a1) {
    uint32_t ecx2;
    int32_t eax3;

    ecx2 = 0;
    if (a1->f28) {
        *reinterpret_cast<unsigned char*>(&ecx2) = reinterpret_cast<uint1_t>(a1->f16 != 2);
        ecx2 = (ecx2 - 1 & 0xffffc005) - 0x7fffbffb;
    }
    eax3 = 0;
    *reinterpret_cast<unsigned char*>(&eax3) = reinterpret_cast<uint1_t>(!!ecx2);
    return eax3;
}

void fun_1001e657(struct s194** a1, int32_t a2, struct s194*** a3) {
    void** eax4;

    eax4 = fun_1001de77(a1, a3);
    if (reinterpret_cast<signed char>(eax4) < reinterpret_cast<signed char>(0)) {
        SHLWAPI_dll_219(a1, a1 + 4, 0x10001998, a2, a3);
    }
    return;
}

void** fun_1001e6c0(void** ecx, void** a2, void** a3, int32_t a4, uint32_t* a5) {
    void*** ebp6;
    uint32_t eax7;
    void** v8;
    void** edi9;
    void** esi10;
    void** ebp11;
    void** eax12;
    void** eax13;
    int32_t** eax14;
    int32_t* ecx15;
    int32_t esi16;
    void** eax17;

    ebp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    v8 = reinterpret_cast<void**>(eax7 ^ reinterpret_cast<uint32_t>(ebp6));
    *a5 = 0;
    eax12 = fun_1000c8a7(ecx, a3, 0x100084e8, 16, edi9, esi10, v8, ebp11, __return_address(), a2);
    if (!eax12 || (eax13 = fun_1000c8a7(ecx, a3, 0x100084d8, 16, edi9, esi10, v8, ebp11, __return_address(), a2), !eax13)) {
        eax14 = reinterpret_cast<int32_t**>(a2 + 0xfffffffc);
        ecx15 = *eax14;
        esi16 = *ecx15;
        image_base_(esi16, eax14, a4, a5);
        esi16(esi16, eax14, a4, a5);
    }
    eax17 = fun_1000a130(reinterpret_cast<unsigned char>(v8) ^ reinterpret_cast<uint32_t>(ebp6));
    return eax17;
}

struct s919 {
    signed char[64] pad64;
    int32_t f64;
};

void** fun_1001e7bb(int32_t ecx, struct s919** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s919* edx5;
    int32_t esi6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0x14], ebx");
    if (!1 && a2) {
        edx5 = *a2;
        esi6 = edx5->f64;
        image_base_(esi6);
        esi6(a2);
    }
    eax7 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax7;
}

void** fun_1001e810(int32_t ecx, struct s152* a2) {
    void* ebp3;
    uint32_t eax4;
    struct s152* esi5;
    struct s153* eax6;
    int32_t esi7;
    void** eax8;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (a2->f24 == 2) {
        a2->f24 = 1;
        fun_1001ea9b(a2, 0, esi5);
        eax6 = a2->f0;
        esi7 = eax6->f44;
        image_base_(esi7, a2);
        esi7(esi7, a2);
    }
    eax8 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax8;
}

struct s920 {
    signed char[48] pad48;
    int32_t f48;
};

void** fun_1001e870(int32_t ecx, struct s920** a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t esi5;
    uint32_t ecx6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    esi5 = (*a2)->f48;
    image_base_(esi5);
    esi5(esi5);
    ecx6 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax7 = fun_1000a130(ecx6, ecx6);
    return eax7;
}

void** fun_1001ead0(int32_t ecx, struct s152* a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t* ecx5;
    int32_t tmp32_6;
    struct s152* esi7;
    struct s153* eax8;
    int32_t esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (a2->f28 & 1) {
        ecx5 = &a2->f24;
        if (*ecx5 == 1) {
            tmp32_6 = *ecx5;
            *ecx5 = 2;
            if (tmp32_6 != 4) {
                fun_1001ea9b(a2, 1, esi7);
                eax8 = a2->f0;
                esi9 = eax8->f40;
                image_base_(esi9, a2);
                esi9(esi9, a2);
            } else {
                *ecx5 = 4;
            }
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

struct s921 {
    signed char[48] pad48;
    int32_t f48;
};

void** fun_1001eb40(int32_t ecx, int32_t a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t esi5;
    uint32_t ecx6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    esi5 = (*reinterpret_cast<struct s921**>(a2 - 16))->f48;
    image_base_(esi5);
    esi5(esi5);
    ecx6 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax7 = fun_1000a130(ecx6, ecx6);
    return eax7;
}

struct s154* fun_1001ed10(struct s154* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f0 = 0x10001970;
    ecx->f8 = 0x1000196c;
    ecx->f16 = 0x1000195c;
    --g10024668;
    fun_1001ec7f(ecx);
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

/* (image base) */
int32_t image_base_ = 0x1000b22e;

/* (image base) */
int32_t image_base_ = 0x1000ba10;

void** fun_1001ed80(int32_t ecx, int32_t a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t edi5;
    int32_t* eax6;
    int32_t esi7;
    int32_t esi8;
    uint32_t ecx9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    GetProcessHeap(8, 8, edi5);
    eax6 = reinterpret_cast<int32_t*>(HeapAlloc());
    if (eax6) {
        image_base_(eax6, esi7);
        *eax6 = 0x10001944;
        esi8 = image_base_;
        image_base_(esi8);
        esi8(eax6);
    }
    ecx9 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax10 = fun_1000a130(ecx9, ecx9);
    return eax10;
}

struct s923 {
    signed char[148] pad148;
    int32_t f148;
};

struct s922 {
    signed char[4] pad4;
    struct s923** f4;
};

void** fun_1001eeb0(struct s922* ecx, int32_t a2) {
    void* ebp3;
    uint32_t eax4;
    struct s923** edi5;
    int32_t esi6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    if (a2 == 26) {
        edi5 = ecx->f4;
        esi6 = (*edi5)->f148;
        image_base_(esi6);
        esi6(edi5);
    }
    eax7 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax7;
}

struct s926 {
    signed char[4] pad4;
    int32_t f4;
};

struct s925 {
    signed char[8] pad8;
    struct s926* f8;
};

struct s924 {
    signed char[12] pad12;
    struct s925* f12;
};

void** fun_1001ef10(struct s924* ecx, struct s925* a2) {
    void* ebp3;
    uint32_t eax4;
    int32_t esi5;
    uint32_t ecx6;
    void** eax7;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    ecx->f12 = a2;
    esi5 = a2->f8->f4;
    image_base_(esi5);
    esi5(esi5);
    ecx6 = eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3);
    eax7 = fun_1000a130(ecx6, ecx6);
    return eax7;
}

void** fun_10009200(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30) {
    void** ecx31;
    void** eax32;
    void** eax33;
    void** v34;
    uint32_t edx35;
    void** ebp36;
    void** edi37;
    void*** esi38;
    void** eax39;

    ecx31 = a9;
    if (ecx31) {
        eax32 = a2;
        if (!eax32) {
            eax33 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(ecx31 + 42)));
            *reinterpret_cast<void***>(ecx31 + 36) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx31 + 40) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx31 + 16) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx31 + 20) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx31 + 24) = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(ecx31 + 28) = reinterpret_cast<void**>(0);
            if (*reinterpret_cast<uint16_t*>(&eax33)) {
                __asm__("cdq ");
                v34 = *reinterpret_cast<void***>(ecx31 + 44);
                eax33 = fun_1000b8d8(ecx31, v34, 0, (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(eax33 - 1) + (edx35 & 31)) >> 5) * 4 + 4, ebp36, __return_address(), a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30);
            }
        } else {
            eax33 = eax32 - 1;
            if (!eax33) {
                *reinterpret_cast<void***>(ecx31 + 40) = a3;
                *reinterpret_cast<void***>(ecx31 + 16) = a4;
                *reinterpret_cast<void***>(ecx31 + 20) = a5;
                *reinterpret_cast<void***>(ecx31 + 24) = a6;
                *reinterpret_cast<void***>(ecx31 + 28) = a7;
                eax33 = reinterpret_cast<void**>(0);
                edi37 = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(ecx31 + 36) = reinterpret_cast<void**>(1);
                if (0 < *reinterpret_cast<uint16_t*>(ecx31 + 42)) {
                    do {
                        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(reinterpret_cast<unsigned char>(edi37) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx31 + 52)))) > reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx31 + 40)) && *reinterpret_cast<void***>(ecx31 + 40) || reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx31 + 48) + reinterpret_cast<unsigned char>(edi37) * 8)) | *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx31 + 48) + reinterpret_cast<unsigned char>(edi37) * 8) + 4) && (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx31 + 16)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx31 + 48) + reinterpret_cast<unsigned char>(edi37) * 8)) | reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx31 + 20)) & *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx31 + 48) + reinterpret_cast<unsigned char>(edi37) * 8) + 4)) || (!reinterpret_cast<int1_t>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx31 + 24)) & reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx31 + 48) + reinterpret_cast<unsigned char>(edi37) * 8))) == *reinterpret_cast<void***>(ecx31 + 24)) || !reinterpret_cast<int1_t>((reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx31 + 28)) & *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ecx31 + 48) + reinterpret_cast<unsigned char>(edi37) * 8) + 4)) == *reinterpret_cast<void***>(ecx31 + 28))))) {
                            esi38 = reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx31 + 44) + (reinterpret_cast<unsigned char>(edi37) >> 5) * 4);
                            eax39 = *esi38;
                            __asm__("btr eax, edx");
                        } else {
                            esi38 = reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx31 + 44) + (reinterpret_cast<unsigned char>(edi37) >> 5) * 4);
                            eax39 = *esi38;
                            __asm__("bts eax, edx");
                        }
                        *esi38 = eax39;
                        ++edi37;
                        eax33 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(ecx31 + 42)));
                    } while (reinterpret_cast<unsigned char>(edi37) < reinterpret_cast<unsigned char>(eax33));
                }
            }
        }
    }
    return eax33;
}

int32_t fun_10009830() {
    return 0;
}

void fun_10009e10() {
    int32_t v1;

    if (v1 == 1) {
        fun_1000a293();
    }
    goto 0x10009e49;
}

void fun_1000a3a0(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    fun_1000a609(0x100240c4, fun_1000a130, a1, a2, a3, a4);
    return;
}

void fun_10009ee3() {
    int32_t ebp1;

    *reinterpret_cast<int32_t*>(ebp1 - 32) = 0;
}

void fun_10009fde() {
}

void fun_1000a621(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f210, 0x10028010);
    goto eax2;
}

int32_t fun_1000b705() {
    int32_t ecx1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t eax4;

    ecx1 = ***reinterpret_cast<int32_t***>(ebp2 - 20);
    *reinterpret_cast<int32_t*>(ebp3 - 28) = ecx1;
    eax4 = 0;
    *reinterpret_cast<unsigned char*>(&eax4) = reinterpret_cast<uint1_t>(ecx1 == 0xc0000017);
    return eax4;
}

void fun_1000b8e8() {
    goto 0x1000a784;
}

void fun_1000bc23() {
}

void fun_1000bcf5() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;
    int32_t eax6;
    int32_t ebp7;
    int32_t ebp8;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 0x88);
    esp4 = esp1 - 1;
    *esp4 = 0x1000bd04;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000bd0b;
    eax6 = fun_1000bb85(eax5);
    *reinterpret_cast<int32_t*>(ebp7 - 0x70) = eax6;
    *reinterpret_cast<int32_t*>(ebp8 - 4) = -2;
}

void fun_1000bd94() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;
    int32_t eax6;
    int32_t ebp7;
    int32_t ebp8;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 0x8c);
    esp4 = esp1 - 1;
    *esp4 = 0x1000bda3;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000bdaa;
    eax6 = fun_1000bb85(eax5);
    *reinterpret_cast<int32_t*>(ebp7 - 0x70) = eax6;
    *reinterpret_cast<int32_t*>(ebp8 - 4) = -2;
}

void fun_1000be30() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;
    int32_t eax6;
    int32_t ebp7;
    int32_t ebp8;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 0x90);
    esp4 = esp1 - 1;
    *esp4 = 0x1000be3f;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000be46;
    eax6 = fun_1000bb85(eax5);
    *reinterpret_cast<int32_t*>(ebp7 - 0x70) = eax6;
    *reinterpret_cast<int32_t*>(ebp8 - 4) = -2;
}

void fun_1000c362() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;
    int32_t* esp6;
    int32_t eax7;
    int32_t ebp8;
    int32_t ebp9;
    int32_t* esp10;
    int32_t ebp11;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 28);
    esp4 = esp1 - 1;
    *esp4 = 0x1000c36e;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    esp6 = esp4 + 1 - 1;
    *esp6 = 0x1000c375;
    eax7 = fun_1000bb85(eax5);
    *reinterpret_cast<int32_t*>(ebp8 - 32) = eax7;
    if (!*reinterpret_cast<int32_t*>(ebp9 - 36)) 
        goto 0x1000c389;
    esp10 = esp6 + 1 - 1;
    *esp10 = *reinterpret_cast<int32_t*>(ebp11 - 36);
    *(esp10 - 1) = 0x1000c389;
    LocalFree(eax5);
}

void fun_1000c480() {
    int32_t v1;

    if (v1) {
        image_base_(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 12);
    }
    return;
}

void fun_1000c500(int32_t a1) {
    LocalAlloc();
    goto a1;
}

int32_t CreateEventExW = 0x26306;

int32_t WaitForMultipleObjects = 0x2635c;

int32_t fun_10010760(void** ecx, void** a2, void** a3, void** a4) {
    void*** ebp5;
    int1_t zf6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** ebp13;
    signed char al14;
    void* v15;
    int32_t eax16;
    int32_t edi17;
    int32_t esi18;
    int32_t eax19;
    int32_t eax20;
    int32_t eax21;
    void** eax22;
    void* v23;
    int32_t eax24;
    int32_t eax25;
    int32_t eax26;
    int32_t v27;
    int32_t eax28;
    int32_t v29;
    int32_t v30;
    void* v31;
    void** eax32;
    void** ebx33;
    int32_t v34;
    void** v35;
    void* v36;
    void** eax37;
    void** v38;
    void** v39;
    int1_t zf40;
    void** v41;

    ebp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    zf6 = (g100244c0 & 0x400) == 0;
    if (!zf6) {
        fun_10010b65(ecx, v7, v8, v9, v10, v11, v12, ebp13, __return_address(), a2, a3, a4);
    }
    al14 = fun_10010966(ecx);
    if (al14 && (v15 = reinterpret_cast<void*>(ebp5 - 20), eax16 = reinterpret_cast<int32_t>(ConvertStringSecurityDescriptorToSecurityDescriptorW("D", 1, v15, 0)), !!eax16)) {
        eax19 = reinterpret_cast<int32_t>(CreateEventExW(ebp5 - 24, "G", 1, 0x100000, edi17, esi18, "D", 1, v15, 0));
        if (eax19 || (eax20 = reinterpret_cast<int32_t>(OpenEventW()), !!eax20)) {
            eax21 = reinterpret_cast<int32_t>(WaitForSingleObject());
            if (!eax21 && (eax22 = reinterpret_cast<void**>(CreateEventW(0, 1, 0, 0)), !!eax22)) {
                v23 = reinterpret_cast<void*>(ebp5 - 4);
                eax24 = reinterpret_cast<int32_t>(GetCurrentProcess(v23, 0, 0, 2, 0, 1, 0, 0));
                eax25 = reinterpret_cast<int32_t>(GetCurrentProcess(eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0));
                eax26 = reinterpret_cast<int32_t>(DuplicateHandle(eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0));
                if (eax26 && (eax28 = reinterpret_cast<int32_t>(QueueUserWorkItem(fun_10010690, v27, 16, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0)), !eax28)) {
                    SetEvent(v29, fun_10010690, v27, 16, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0);
                    CloseHandle(v30, v29, fun_10010690, v27, 16, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0);
                }
                v31 = reinterpret_cast<void*>(ebp5 - 24);
                eax32 = reinterpret_cast<void**>(CreateEventExW(v31, "G", 1, 0x100000, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0));
                ebx33 = eax32;
                if (ebx33 || (v34 = reinterpret_cast<int32_t>("G"), v35 = eax32, v36 = reinterpret_cast<void*>(0x100000), eax37 = reinterpret_cast<void**>(OpenEventW(0x100000, v35, "G", v31, "G", 1, 0x100000, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0)), ebx33 = eax37, !!ebx33)) {
                    v34 = 0x2710;
                    v35 = reinterpret_cast<void**>(0);
                    v38 = ebx33;
                    v36 = reinterpret_cast<void*>(ebp5 - 12);
                    v39 = eax22;
                    WaitForMultipleObjects(2, v36, 0, 0x2710, v31, "G", 1, 0x100000, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0);
                    CloseHandle(ebx33, 2, v36, 0, 0x2710, v31, "G", 1, 0x100000, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0);
                }
                SetEvent(eax22, v36, v35, v34, v31, "G", 1, 0x100000, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0);
                CloseHandle(eax22, eax22, v36, v35, v34, v31, "G", 1, 0x100000, eax25, eax22, eax24, v23, 0, 0, 2, 0, 1, 0, 0);
            }
            CloseHandle();
        }
    }
    if (!1) {
        LocalFree(0, 12);
    }
    zf40 = (g100244c0 & 0x400) == 0;
    if (!zf40) {
        fun_10010b65(ecx, 12, 0, 0, v38, v39, v41, ebp13, __return_address(), a2, a3, a4);
    }
    return 0;
}

void fun_1000d870() {
    RoOriginateError();
    goto 0;
}

signed char g100246ac;

int32_t fun_1000df80() {
    int1_t zf1;

    zf1 = g100246ac == 0;
    if (zf1) {
        fun_1000e26e(fun_10009bb0, 0, 0x100246b8, 64);
        g100246ac = 1;
    }
    return 0x100246b8;
}

int32_t malloc = 0x25c58;

void** fun_10009be0() {
    void** eax1;

    eax1 = reinterpret_cast<void**>(malloc());
    g10024458 = eax1;
    g10024454 = eax1;
    if (eax1) {
        *reinterpret_cast<void***>(eax1) = reinterpret_cast<void**>(0);
        return 0;
    } else {
        return eax1 + 1;
    }
}

struct s927 {
    signed char[20] pad20;
    int32_t f20;
};

void** fun_1000f5e0(int32_t ecx, struct s927** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s927* eax5;
    int32_t esi6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0x8], ebx");
    if (!1) {
        if (a2) {
            eax5 = *a2;
            esi6 = eax5->f20;
            image_base_(esi6, 1);
            esi6(a2, 1);
        }
        eax7 = g10024484;
        if (eax7) {
            ecx8 = *reinterpret_cast<void***>(eax7);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax7);
            esi9(esi9, eax7);
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

void** fun_1000fae0(struct s55** a1, int32_t a2, struct s55*** a3) {
    void** eax4;

    eax4 = fun_1000f646(a1, a3);
    return eax4;
}

void fun_1000c8d0(int32_t a1) {
    goto fun_10008ea0;
}

void fun_1000ffa0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38) {
    int32_t eax39;
    int32_t eax40;
    void*** esi41;
    unsigned char al42;
    void** v43;
    void** edi44;
    void** esi45;
    void** ebx46;
    void** ebp47;

    *reinterpret_cast<void***>(a3) = reinterpret_cast<void**>(0);
    eax39 = reinterpret_cast<int32_t>(GetSystemMetrics());
    eax40 = reinterpret_cast<int32_t>(GetSystemMetrics());
    esi41 = reinterpret_cast<void***>(0x10007454);
    if (eax39 <= eax40) {
        esi41 = reinterpret_cast<void***>(0x10007450);
    }
    al42 = fun_1001c9a7(ecx);
    if (!al42) {
        v43 = *esi41;
        fun_1001056d(ecx, v43, ecx, a3, 1, 0, edi44, esi45, ebx46, ebp47, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38);
    }
    goto ebx46;
}

struct s928 {
    signed char[12] pad12;
    int32_t f12;
};

struct s928* fun_10010640(struct s928* ecx, unsigned char a2) {
    int32_t eax3;

    ecx->f12 = 0xc0000001;
    if (a2 & 1) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10011300(int32_t ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32, void** a33, void** a34, void** a35, void** a36, void** a37, void** a38, void** a39, void** a40, void** a41, void** a42, void** a43, void** a44, void** a45, void** a46, void** a47) {
    void*** ebp48;
    uint32_t eax49;
    void** v50;
    int32_t eax51;
    void** ecx52;
    void** edi53;
    void** ebp54;
    void** v55;
    int32_t eax56;
    void** ecx57;
    void** esi58;
    int32_t eax59;
    void** esi60;
    void** ebx61;
    void** esi62;
    void** edi63;
    void** ecx64;
    int32_t eax65;
    void** eax66;

    ebp48 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax49 = g100240c4;
    v50 = reinterpret_cast<void**>(eax49 ^ reinterpret_cast<uint32_t>(ebp48));
    if (a3) {
        eax51 = fun_10011cd6(a2);
        if (eax51 >= 0) {
            ecx52 = reinterpret_cast<void**>(ebp48 + 0xfffffff8);
            fun_100136b5(ecx52, edi53, 0, v50, ebp54, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47);
            v55 = reinterpret_cast<void**>(ebp48 + 0xfffffff8);
            eax56 = reinterpret_cast<int32_t>(CoCreateInstance(ecx52, 0x10008084, 0, 1, 0x10007800, v55));
            if (eax56 >= 0) {
                ecx57 = g0;
                esi58 = *reinterpret_cast<void***>(ecx57 + 12);
                image_base_(esi58);
                eax59 = reinterpret_cast<int32_t>(esi58(esi58));
                if (eax59 >= 0 && (esi60 = a2 + 32, fun_100136b5(esi60, ebx61, 0, 1, esi62, 0x10008084, 0, 1, 0x10007800, v55, edi53, 0, v50, ebp54, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38), edi63 = g0, ecx64 = *reinterpret_cast<void***>(edi63 + 24), image_base_(ecx64), eax65 = reinterpret_cast<int32_t>(*reinterpret_cast<void***>(edi63 + 24)(ecx64)), eax65 >= 0)) {
                    fun_100119cf(a2, a3, a4, a5, 1, esi60, ebx61, 0, 1, esi62, 0x10008084, 0, 1, 0x10007800, v55, edi53);
                    image_base_(a2, a4, a5, 1, esi60, ebx61);
                }
            }
            fun_100136b5(ebp48 + 0xfffffff8, 0x10008084, 0, 1, 0x10007800, v55, edi53, 0, v50, ebp54, __return_address(), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42);
        }
    }
    eax66 = fun_1000a130(reinterpret_cast<unsigned char>(v50) ^ reinterpret_cast<uint32_t>(ebp48));
    return eax66;
}

struct s929 {
    signed char[36] pad36;
    unsigned char f36;
    signed char[3] pad40;
    void** f40;
};

struct s930 {
    signed char[1] pad1;
    void** f1;
};

int32_t RecordShutdownReason = 0x26df8;

void** fun_100116d0(void** ecx, struct s929* a2, void** a3) {
    struct s929* esi4;
    void*** esp5;
    void** edi6;
    void** esi7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** v15;
    void** eax16;
    uint1_t zf17;
    void** v18;
    struct s930* eax19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** eax28;

    esi4 = a2;
    esp5 = reinterpret_cast<void***>((reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4) & 0xfffffff8) - 32 - 4 - 4);
    esi4->f40 = a3;
    eax16 = fun_10018c27(ecx, esp5 + 12, edi6, esi7, v8, v9, v10, v11, v12, v13, v14, v15);
    if (!eax16) {
        zf17 = reinterpret_cast<uint1_t>((esi4->f36 & 2) == 0);
        v18 = eax16;
        esi4 = reinterpret_cast<struct s929*>(reinterpret_cast<int32_t>(esi4) + 4 + 4 + 4 + 4 + 4);
        eax19 = reinterpret_cast<struct s930*>(0);
        *reinterpret_cast<unsigned char*>(&eax19) = zf17;
        v20 = reinterpret_cast<void**>(&eax19->f1);
        v21 = esi4->f40;
        v22 = reinterpret_cast<void**>(esp5 - 4 - 4 + 4 - 4 + 4 + 4 - 4 + 4 + 16);
        RecordShutdownReason(v22);
        fun_10018c27(ecx, 0, v22, edi6, esi7, v23, v24, 24, v20, v21, 1, v18);
    }
    eax28 = fun_10011d31(reinterpret_cast<int32_t>(esi4) + 0xfffffffc, edi6, esi7, v25, v26, 24, v20, v21, 1, v18, 0, v27);
    return eax28;
}

void** fun_100117d7(struct s176** a1, int32_t a2, struct s176*** a3) {
    void** eax4;

    eax4 = fun_10010c1e(a1, a3);
    return eax4;
}

void fun_1000bb02() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 28);
    esp4 = esp1 - 1;
    *esp4 = 0x1000bb0e;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000bb15;
    fun_1000bb85(eax5);
}

int32_t WindowsCreateString = 0x26568;

void fun_10013541() {
    uint32_t* v1;

    *v1 = 0;
    WindowsCreateString();
    goto 22;
}

struct s931 {
    signed char[28] pad28;
    void** f28;
};

int32_t fun_100135f0(struct s931* a1, void*** a2) {
    void*** edi3;
    void*** eax4;
    void*** v5;
    void** eax6;
    uint32_t eax7;
    void** eax8;
    void** esi9;
    void** edx10;
    void** v11;
    void** ebx12;
    int32_t eax13;
    void** eax14;
    uint32_t ecx15;
    void** ecx16;
    int32_t eax17;
    void** eax18;

    edi3 = a2;
    eax4 = &a1->f28;
    v5 = eax4;
    eax6 = *eax4;
    *edi3 = reinterpret_cast<void**>(0);
    eax7 = reinterpret_cast<unsigned char>(eax6) >> 31;
    if (!*reinterpret_cast<signed char*>(&eax7)) {
        eax8 = fun_1001319a(reinterpret_cast<int32_t>(a1) + 0xfffffff8);
        esi9 = eax8;
        if (esi9) {
            *reinterpret_cast<void***>(esi9 + 12) = eax6;
            edx10 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(esi9) >> 1) | 0x80000000);
            v11 = edx10;
            if (*v5 == edx10) {
                *v5 = edx10;
            }
            ebx12 = eax6;
            if (ebx12 != eax6) 
                goto addr_1001365c_6;
        } else {
            eax13 = 0x8007000e;
            goto addr_10013680_8;
        }
    } else {
        eax14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax6) + reinterpret_cast<unsigned char>(eax6));
        *reinterpret_cast<void***>(eax14 + 8) = *reinterpret_cast<void***>(eax14 + 8) + 1;
        *edi3 = eax14;
        eax13 = 0;
        goto addr_10013681_10;
    }
    addr_1001367c_11:
    *edi3 = esi9;
    addr_1001367e_12:
    eax13 = 0;
    addr_10013680_8:
    addr_10013681_10:
    return eax13;
    do {
        addr_1001365c_6:
        ecx15 = reinterpret_cast<unsigned char>(ebx12) >> 31;
        if (*reinterpret_cast<signed char*>(&ecx15)) 
            break;
        ecx16 = ebx12;
        *reinterpret_cast<void***>(esi9 + 12) = ebx12;
        if (*v5 == edx10) {
            *v5 = edx10;
        }
        edx10 = v11;
        ebx12 = ebx12;
    } while (ebx12 != ecx16);
    goto addr_1001367c_11;
    *reinterpret_cast<void***>(esi9) = reinterpret_cast<void**>(0x1000110c);
    *reinterpret_cast<void***>(esi9 + 12) = reinterpret_cast<void**>(0xc0000001);
    *reinterpret_cast<void***>(esi9 + 8) = reinterpret_cast<void**>(0xc0000001);
    eax17 = reinterpret_cast<int32_t>(GetProcessHeap(0, esi9));
    HeapFree(eax17, 0, esi9);
    eax18 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx12) + reinterpret_cast<unsigned char>(ebx12));
    *reinterpret_cast<void***>(eax18 + 8) = *reinterpret_cast<void***>(eax18 + 8) + 1;
    *edi3 = eax18;
    goto addr_1001367e_12;
}

void** fun_10013da7(struct s71** a1, int32_t a2, struct s71*** a3) {
    void** eax4;

    eax4 = fun_1001238d(a1, a3);
    return eax4;
}

void fun_1000bb62() {
    int32_t* esp1;
    int32_t ebp2;
    int32_t ebp3;
    int32_t* esp4;
    int32_t eax5;

    esp1 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp2 - 24)) - 4);
    *esp1 = *reinterpret_cast<int32_t*>(ebp3 - 28);
    esp4 = esp1 - 1;
    *esp4 = 0x1000bb6e;
    eax5 = reinterpret_cast<int32_t>(image_base_());
    *(esp4 + 1 - 1) = 0x1000bb75;
    fun_1000bb85(eax5);
}

void** g100240a4 = reinterpret_cast<void**>(0);

void** fun_100097f9() {
    void** v1;
    void** ecx2;
    void** edi3;
    void** ebx4;
    void** ecx5;
    void** eax6;
    void** esi7;
    void** v8;
    void** v9;
    int32_t eax10;
    int32_t eax11;
    int32_t eax12;
    void** ecx13;
    void** ecx14;
    int32_t eax15;
    void** eax16;

    v1 = reinterpret_cast<void**>(__return_address());
    ecx2 = g100240a4;
    if (ecx2) {
        edi3 = ecx2;
        ebx4 = edi3 + 4;
        ecx5 = ebx4;
        fun_1000f291(ecx5, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4);
        *reinterpret_cast<void***>(edi3) = *reinterpret_cast<void***>(edi3) - 1;
        eax6 = *reinterpret_cast<void***>(edi3);
        if (*reinterpret_cast<void***>(edi3)) {
            esi7 = ecx2;
            while (esi7 && (v8 = esi7, eax6 = reinterpret_cast<void**>(ReleaseMutex(v8)), !eax6)) {
                v9 = ecx5;
                while (1) {
                    ecx5 = v1;
                    fun_1000f27a(ecx5, v9, v8);
                    addr_1000ea85_8:
                    if (*reinterpret_cast<void***>(edi3 + 8) == esi7) 
                        goto addr_1000ea97_9;
                    v8 = *reinterpret_cast<void***>(edi3 + 8);
                    eax10 = reinterpret_cast<int32_t>(CloseHandle(v8));
                    if (!eax10) 
                        goto addr_1000ea77_11;
                    addr_1000ea97_9:
                    if (*reinterpret_cast<void***>(ebx4) == esi7) 
                        break;
                    v8 = *reinterpret_cast<void***>(ebx4);
                    eax11 = reinterpret_cast<int32_t>(CloseHandle(v8));
                    if (eax11) 
                        break;
                    addr_1000ea77_11:
                    v9 = ecx5;
                }
                eax12 = reinterpret_cast<int32_t>(GetProcessHeap(esi7, edi3));
                eax6 = reinterpret_cast<void**>(HeapFree(eax12, esi7, edi3));
            }
        } else {
            ecx13 = *reinterpret_cast<void***>(edi3 + 8);
            if (ecx13) {
                fun_1000f2dd(ecx13);
            }
            esi7 = reinterpret_cast<void**>(0);
            *reinterpret_cast<void***>(edi3 + 8) = reinterpret_cast<void**>(0);
            ecx14 = *reinterpret_cast<void***>(edi3 + 12);
            if (ecx14) {
                fun_1000f2dd(ecx14);
            }
            *reinterpret_cast<void***>(edi3 + 12) = reinterpret_cast<void**>(0);
            if (ecx2) {
                fun_1000f312(ecx2);
            }
            eax6 = fun_1000e977(ecx2);
            if (!*reinterpret_cast<signed char*>(&eax6)) {
                ecx5 = edi3 + 24;
                fun_1000dad6(ecx5);
                if (!*reinterpret_cast<void***>(edi3 + 12)) 
                    goto addr_1000ea85_8;
                v8 = *reinterpret_cast<void***>(edi3 + 12);
                eax15 = reinterpret_cast<int32_t>(CloseHandle(v8));
                if (eax15) 
                    goto addr_1000ea85_8; else 
                    goto addr_1000ea77_11;
            }
        }
        return eax6;
    } else {
        return eax16;
    }
}

void fun_1000b6de() {
}

void fun_10017cf9(int32_t ecx) {
}

int32_t CreateWindowInBand = 0x2674a;

void fun_100179b0(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t a6, int32_t a7, int32_t a8, int32_t a9, int32_t a10, int32_t a11, int32_t a12, int32_t a13) {
    CreateWindowInBand();
    goto a3;
}

void** fun_10017ae0(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    void** eax6;

    eax6 = fun_1001759b(ecx, __return_address(), a2, a3, a4, a5);
    g10024718 = reinterpret_cast<struct s181**>(0);
    return eax6;
}

void fun_10017b80() {
    goto image_base_;
}

struct s932 {
    signed char[264] pad264;
    uint32_t f264;
};

int32_t SetWindowPos = 0x26760;

/* (image base) */
int32_t image_base_ = 0x1000ae98;

void fun_10017f80(struct s932* ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    int32_t esi6;
    int32_t eax7;
    int32_t eax8;
    int32_t eax9;
    int32_t eax10;
    uint32_t ecx11;
    int32_t eax12;

    if (ecx->f264) {
        if (a3 != 0x113) {
            if (a3 == 0x7e) {
                eax7 = reinterpret_cast<int32_t>(GetSystemMetrics(79, 20, esi6));
                eax8 = reinterpret_cast<int32_t>(GetSystemMetrics(78, eax7, 79, 20, esi6));
                eax9 = reinterpret_cast<int32_t>(GetSystemMetrics(77, eax8, 78, eax7, 79, 20, esi6));
                eax10 = reinterpret_cast<int32_t>(GetSystemMetrics(76, eax9, 77, eax8, 78, eax7, 79, 20, esi6));
                ecx11 = ecx->f264;
                eax12 = reinterpret_cast<int32_t>(image_base_(ecx11, 0, eax10, 76, eax9, 77, eax8, 78, eax7, 79, 20, esi6));
                SetWindowPos(ecx11, eax12, 0, eax10, 76, eax9, 77, eax8, 78, eax7, 79, 20, esi6);
                image_base_(ecx, reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 20, eax12, 0, eax10, 76, eax9, 77, eax8, 78, eax7, 79, 20, esi6);
            }
        } else {
            if (a4 == 1 && (KillTimer(a2, 1, esi6), !!ecx->f264)) {
                image_base_(a2, 1, esi6);
                ecx->f264 = 0;
            }
        }
    }
    image_base_(ecx);
    return;
}

void fun_10018360() {
    goto image_base_;
}

void** fun_10018720(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    void** eax6;

    eax6 = fun_1001759b(ecx, __return_address(), a2, a3, a4, a5);
    g10024720 = reinterpret_cast<struct s122**>(0);
    return eax6;
}

void** fun_100199f0(void** ecx, unsigned char a2) {
    int32_t eax3;

    fun_10019813(ecx);
    if (a2 & 1 && ecx) {
        eax3 = reinterpret_cast<int32_t>(GetProcessHeap(0, ecx));
        HeapFree(eax3, 0, ecx);
    }
    return ecx;
}

void** fun_10019e50(void** ecx, int32_t a2) {
    void** eax3;

    image_base_(a2);
    eax3 = fun_10019f3d(ecx, a2);
    if (!1) {
        image_base_();
    }
    return eax3;
}

void** fun_1001b370(void** ecx) {
    void* ebp2;
    uint32_t eax3;
    uint32_t v4;
    void** v5;
    void** ebx6;
    void** ebx7;
    int32_t v8;
    int32_t esi9;
    void** v10;
    void** edi11;
    void** edx12;
    void** edx13;
    void** esi14;
    void** eax15;
    uint32_t edi16;
    int32_t eax17;
    void** eax18;
    void** ecx19;
    void** eax20;
    uint32_t* v21;
    void** edi22;
    void** eax23;
    void** eax24;
    void*** v25;
    void** esi26;
    void* v27;
    void** ecx28;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = eax3 ^ reinterpret_cast<uint32_t>(ebp2);
    v5 = ebx6;
    ebx7 = ecx;
    v8 = esi9;
    v10 = edi11;
    edx12 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx7 + 16));
    edx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx12) & 0xfffffff);
    if (reinterpret_cast<unsigned char>(edx13) <= reinterpret_cast<unsigned char>(2)) {
        esi14 = reinterpret_cast<void**>(0);
    } else {
        ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xffffffec);
        eax15 = fun_1001b1b6(ecx, edx13);
        esi14 = eax15;
    }
    edi16 = 0;
    if (reinterpret_cast<signed char>(esi14) < reinterpret_cast<signed char>(0)) {
        addr_1001b431_5:
        if (!1 && !1) {
            eax17 = reinterpret_cast<int32_t>(GetProcessHeap(ecx, 0, 0));
            HeapFree(ecx, eax17, 0, 0);
        }
    } else {
        while (eax18 = *reinterpret_cast<void***>(ebx7 + 16), ecx19 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8), edi16 < (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax18)) & 0xfffffff)) {
            eax20 = fun_1001a63d(reinterpret_cast<uint32_t>(ebp2) + 0xffffffec, 0, ecx19, v10);
            if (reinterpret_cast<signed char>(eax20) >= reinterpret_cast<signed char>(0)) {
                *v21 = edi16;
            }
            ++edi16;
        }
        edi22 = *reinterpret_cast<void***>(ebx7 + 44);
        eax23 = fun_1001a4ee(ecx19);
        if (reinterpret_cast<signed char>(eax23) < reinterpret_cast<signed char>(0)) 
            goto addr_1001b426_12; else 
            goto addr_1001b402_13;
    }
    eax24 = fun_1000a130(v4 ^ reinterpret_cast<uint32_t>(ebp2));
    return eax24;
    addr_1001b426_12:
    ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebp2) + 0xfffffff8);
    fun_1001ccf4(ecx, v10, v8, v5);
    goto addr_1001b431_5;
    addr_1001b402_13:
    v25 = reinterpret_cast<void***>(ebx7 + 20);
    esi26 = g0;
    v27 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) + 0xffffffec);
    ecx28 = *reinterpret_cast<void***>(esi26 + 0x6c);
    image_base_(ecx28, 0, eax18, edi22, v27, 0xff, 0, v25);
    *reinterpret_cast<void***>(esi26 + 0x6c)(ecx28, 0, eax18, edi22, v27, 0xff, 0, v25);
    goto addr_1001b426_12;
}

void fun_1001ae60() {
    goto fun_1001be33;
}

struct s933 {
    signed char[16] pad16;
    int32_t f16;
    signed char[24] pad44;
    int32_t f44;
};

void** fun_1001b9b0(struct s933* ecx) {
    void* ebp2;
    uint32_t eax3;
    int32_t v4;
    int32_t v5;
    int32_t eax6;
    int32_t v7;
    void** esi8;
    void** ecx9;
    void** ecx10;
    void** esi11;
    uint32_t ecx12;
    void** eax13;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    v4 = ecx->f44;
    v5 = ecx->f16;
    eax6 = reinterpret_cast<int32_t>(image_base_());
    if (eax6 >= 0) {
        v7 = reinterpret_cast<int32_t>(&ecx->pad44);
        esi8 = g0;
        ecx9 = *reinterpret_cast<void***>(esi8 + 28);
        image_base_(ecx9, 0, v5, v4, v7);
        *reinterpret_cast<void***>(esi8 + 28)(ecx9, 0, v5, v4, v7);
    }
    if (!1) {
        ecx10 = g0;
        esi11 = *reinterpret_cast<void***>(ecx10 + 8);
        image_base_(esi11, 0);
        esi11(esi11, 0);
    }
    ecx12 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
    eax13 = fun_1000a130(ecx12, ecx12);
    return eax13;
}

struct s934 {
    signed char[12] pad12;
    uint32_t f12;
    uint32_t f16;
};

void fun_1001d630(struct s934* a1) {
    uint32_t ecx2;

    ecx2 = a1->f12;
    image_base_(ecx2);
    image_base_(ecx2);
    a1->f12 = 0;
    a1->f16 = 0;
    goto 0x2000;
}

int32_t fun_1001d750(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7) {
    void** ebp8;
    void** eax9;

    eax9 = fun_10012aaa(a2, ebp8, __return_address(), a1, a2, a3, a4, a5, a6, a7);
    if (eax9) {
        image_base_(eax9, 1);
    }
    return 0;
}

void** fun_1001d860(struct s193** a1, int32_t a2, struct s193*** a3) {
    void** eax4;

    eax4 = fun_1001ca95(a1, a3);
    return eax4;
}

int32_t fun_1001e5d0(struct s152* a1) {
    int32_t* edx2;
    int32_t tmp32_3;
    struct s152* ebp4;
    int32_t eax5;

    if (a1->f28 & 2) {
        edx2 = &a1->f24;
        if (*edx2 == 1) {
            tmp32_3 = *edx2;
            *edx2 = 3;
            if (tmp32_3 != 4) {
                fun_1001ea9b(a1, 1, ebp4);
            }
            eax5 = 0;
        } else {
            eax5 = 1;
        }
    } else {
        eax5 = 0x80004001;
    }
    return eax5;
}

void** fun_1001e8b0(struct s152* a1) {
    void* ebp2;
    uint32_t eax3;
    int32_t edi4;
    int32_t esi5;
    signed char al6;
    int32_t* eax7;
    int32_t* ecx8;
    int32_t tmp32_9;
    struct s153* eax10;
    void* v11;
    int32_t esi12;
    struct s153* eax13;
    int32_t esi14;
    int32_t eax15;
    signed char al16;
    struct s153* ecx17;
    int32_t esi18;
    struct s153* eax19;
    void* v20;
    int32_t esi21;
    struct s153* eax22;
    int32_t esi23;
    int32_t eax24;
    struct s153* eax25;
    int32_t esi26;
    void** eax27;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    edi4 = 0x80004005;
    esi5 = a1->f0->f52;
    image_base_(esi5);
    al6 = reinterpret_cast<signed char>(esi5(a1));
    eax7 = &a1->f24;
    if (*eax7 != 1) {
        if (*eax7 == 3 || *eax7) {
            addr_1001e9f6_3:
        } else {
            ecx8 = &a1->f24;
            tmp32_9 = *ecx8;
            *ecx8 = 1;
            if (tmp32_9 != 3) {
                if (*ecx8 == 1) {
                    if (al6) {
                        eax10 = a1->f0;
                        v11 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 12);
                        esi12 = eax10->f56;
                        image_base_(esi12, v11);
                        esi12(a1, v11);
                    }
                    eax13 = a1->f0;
                    esi14 = eax13->f32;
                    image_base_(esi14, a1);
                    eax15 = reinterpret_cast<int32_t>(esi14(esi14, a1));
                    edi4 = eax15;
                    al16 = al6;
                    if (al16) {
                        ecx17 = a1->f0;
                        esi18 = ecx17->f60;
                        image_base_(esi18, 0, a1);
                        esi18(a1, 0, a1);
                        al16 = al6;
                    }
                    if (edi4 >= 0) {
                        if (a1->f24 != 1) {
                            if (a1->f24 == 2) {
                                fun_1001ea9b(a1, 0, a1);
                                edi4 = 0x8000000a;
                            }
                        } else {
                            if (al16) {
                                eax19 = a1->f0;
                                v20 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 12);
                                esi21 = eax19->f56;
                                image_base_(esi21, v20, a1);
                                esi21(a1, v20, a1);
                            }
                            eax22 = a1->f0;
                            esi23 = eax22->f48;
                            image_base_(esi23, a1, a1);
                            eax24 = reinterpret_cast<int32_t>(esi23(esi23, a1, a1));
                            edi4 = eax24;
                            if (al6) {
                                eax25 = a1->f0;
                                esi26 = eax25->f60;
                                image_base_(esi26, 0, a1, a1);
                                esi26(a1, 0, a1, a1);
                            }
                        }
                    }
                }
                if (*eax7 != 2 || edi4 != 0x8000000a) {
                    *eax7 = 4;
                    goto addr_1001e9f6_3;
                }
            } else {
                *ecx8 = 4;
            }
        }
        eax27 = fun_1000a130(eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2));
        return eax27;
    } else {
        goto addr_1001e9f6_3;
    }
}

struct s935 {
    signed char[52] pad52;
    int32_t f52;
    signed char f56;
};

int32_t fun_1001eb80(struct s935* a1, int32_t a2) {
    int32_t v3;
    int32_t eax4;

    if (a1->f56 || (v3 = a1->f52, eax4 = reinterpret_cast<int32_t>(WaitForSingleObject(v3, a2)), !!eax4)) {
        eax4 = 1;
    }
    return eax4;
}

void** fun_1001ef50(int32_t ecx, int32_t a2) {
    void** eax3;

    eax3 = fun_1001ee3d(ecx, a2 - 16, 26);
    return eax3;
}

int32_t fun_10009835() {
    int32_t* v1;

    *v1 = 1;
    return 0;
}

void fun_1000b71b() {
    int32_t ebp1;
    int32_t* esp2;
    int32_t ebp3;

    if (*reinterpret_cast<int32_t*>(ebp1 - 28) == 0xc0000017) {
        esp2 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(*reinterpret_cast<void**>(ebp3 - 24)) - 4);
        *esp2 = 8;
        *(esp2 - 1) = 0x1000b72f;
        SetLastError();
    }
}

void fun_1000a795() {
    goto 0x1000a784;
}

void fun_1000b8f2() {
    goto 0x1000a784;
}

void fun_1000c520() {
    goto LocalFree;
}

void fun_1000d890() {
    RoOriginateError();
    goto 0;
}

struct s936 {
    signed char[24] pad24;
    int32_t f24;
};

void** fun_1000fb00(int32_t ecx, struct s936** a2) {
    void* ebp3;
    uint32_t eax4;
    struct s936* eax5;
    int32_t esi6;
    void** eax7;
    void** ecx8;
    void** esi9;
    void** eax10;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [edi+0x8], ebx");
    if (!1) {
        if (a2) {
            eax5 = *a2;
            esi6 = eax5->f24;
            image_base_(esi6, 1);
            esi6(a2, 1);
        }
        eax7 = g10024484;
        if (eax7) {
            ecx8 = *reinterpret_cast<void***>(eax7);
            esi9 = *reinterpret_cast<void***>(ecx8 + 8);
            image_base_(esi9, eax7);
            esi9(esi9, eax7);
        }
    }
    eax10 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
    return eax10;
}

int32_t fun_1000c8e0(int32_t a1) {
    __asm__("lock xadd [ecx+0x10], eax");
    return 2;
}

struct s938 {
    signed char[20] pad20;
    int32_t f20;
};

struct s937 {
    struct s938* f0;
    signed char[12] pad16;
    unsigned char f16;
};

void** fun_10011800(int32_t ecx, struct s937* a2) {
    void* ebp3;
    uint32_t eax4;
    void** eax5;
    void** ecx6;
    void** v7;
    void** esi8;
    void** ebx9;
    unsigned char ebx10;
    struct s938* eax11;
    int32_t esi12;
    uint32_t ebx13;
    void** eax14;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax4 = g100240c4;
    __asm__("lock xadd [eax+0x8], edi");
    if (1) {
        if (a2->f16 & 6 || 1) {
            addr_1001186f_3:
            eax5 = fun_1000a130(eax4 ^ reinterpret_cast<uint32_t>(ebp3) ^ reinterpret_cast<uint32_t>(ebp3));
            return eax5;
        } else {
            ecx6 = g10024484;
            v7 = ecx6;
            esi8 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx6) + 8);
        }
    } else {
        v7 = ebx9;
        ebx10 = a2->f16;
        eax11 = a2->f0;
        esi12 = eax11->f20;
        image_base_(esi12);
        esi12(a2);
        ebx13 = ebx10 & 5;
        if (*reinterpret_cast<signed char*>(&ebx13) != 5) 
            goto addr_1001186f_3;
        eax14 = g10024484;
        esi8 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(eax14) + 8);
    }
    image_base_(esi8, v7);
    esi8(esi8, v7);
    goto addr_1001186f_3;
}

int32_t fun_100179f0(int32_t a1, int32_t a2, uint32_t* a3) {
    int32_t eax4;

    eax4 = fun_1001754e(a2, a3);
    return eax4;
}

void** fun_10017af0(struct s128** ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    void** eax6;

    eax6 = fun_1001759b(ecx, __return_address(), a2, a3, a4, a5);
    g10024714 = reinterpret_cast<struct s104**>(0);
    return eax6;
}

void** fun_10017b90(int32_t ecx, int32_t a2, struct s185** a3) {
    void** eax4;

    eax4 = fun_100176cf(ecx, a3);
    return eax4;
}

/* (image base) */
int32_t image_base_ = 0x1000ac06;

struct s939 {
    signed char[76] pad76;
    int32_t f76;
};

void** fun_10018730(int32_t ecx, int32_t a2, int32_t a3, int32_t a4, int32_t a5) {
    void* ebp6;
    uint32_t eax7;
    int32_t edi8;
    int32_t esi9;
    uint16_t ax10;
    struct s939** eax11;
    struct s939* ecx12;
    int32_t esi13;
    uint32_t ecx14;
    void** eax15;

    ebp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax7 = g100240c4;
    if (!a2) {
        image_base_();
    } else {
        ax10 = reinterpret_cast<uint16_t>(image_base_("C", edi8, esi9));
        eax11 = reinterpret_cast<struct s939**>(image_base_(ecx, static_cast<uint32_t>(ax10), "C", edi8, esi9));
        ecx12 = *eax11;
        esi13 = ecx12->f76;
        image_base_(esi13);
        esi13(eax11);
    }
    ecx14 = eax7 ^ reinterpret_cast<uint32_t>(ebp6) ^ reinterpret_cast<uint32_t>(ebp6);
    eax15 = fun_1000a130(ecx14, ecx14);
    return eax15;
}

void fun_1000a6c2() {
    goto 0x1000a6b1;
}

/* (image base) */
void** image_base_ = reinterpret_cast<void**>(96);

void** fun_1001ae70(void** ecx) {
    void** eax2;
    struct s146* v3;
    void** eax4;
    int32_t edi5;
    void** esi6;

    eax2 = image_base_;
    eax4 = fun_10012ec1(&v3->f4);
    if (*reinterpret_cast<signed char*>(&eax4) && v3->f12 == 4) {
        eax4 = fun_1001c113(ecx, v3, edi5, esi6, eax2);
    }
    return eax4;
}

struct s940 {
    signed char[12] pad12;
    int32_t f12;
    int32_t f16;
};

struct s941 {
    signed char[4] pad4;
    int32_t f4;
    signed char[8] pad16;
    int32_t f16;
};

/* (image base) */
int32_t image_base_ = 0x1000ba3e;

struct s942 {
    signed char[20] pad20;
    int32_t f20;
    int32_t f24;
    uint32_t f28;
};

int32_t PtInRect = 0x270b6;

void** fun_1001d660(struct s940* a1) {
    void* ebp2;
    uint32_t eax3;
    struct s941* v4;
    uint32_t ecx5;
    void** eax6;
    int32_t ecx7;
    int32_t edi8;
    int32_t eax9;
    int32_t ecx10;
    struct s942* esi11;
    void* v12;
    int32_t eax13;
    int32_t eax14;
    int32_t ecx15;
    int32_t v16;
    int32_t eax17;
    uint32_t eax18;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g100240c4;
    if (v4->f4 != 0x8007 || (!a1->f16 || v4->f16 != 5)) {
        addr_1001d705_2:
        ecx5 = eax3 ^ reinterpret_cast<uint32_t>(ebp2) ^ reinterpret_cast<uint32_t>(ebp2);
        eax6 = fun_1000a130(ecx5, ecx5);
        return eax6;
    } else {
        ecx7 = a1->f12;
        image_base_(ecx7, reinterpret_cast<uint32_t>(ebp2) - 20, 12, edi8);
        eax9 = reinterpret_cast<int32_t>(image_base_(ecx7));
        if (eax9) 
            goto addr_1001d6bb_16;
    }
    addr_1001d704_17:
    goto addr_1001d705_2;
    addr_1001d6bb_16:
    ecx10 = a1->f16;
    esi11 = reinterpret_cast<struct s942*>(&v4->f4 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
    v12 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp2) - 36);
    eax13 = reinterpret_cast<int32_t>(image_base_(ecx10, v12, 12));
    eax14 = reinterpret_cast<int32_t>(image_base_(ecx10, eax13, v12, 12));
    if (!eax14) 
        goto addr_1001d704_17;
    ecx15 = esi11->f20;
    v16 = esi11->f24;
    eax17 = reinterpret_cast<int32_t>(PtInRect(reinterpret_cast<uint32_t>(ebp2) - 36, ecx15, v16, eax13, v12, 12));
    eax18 = reinterpret_cast<uint32_t>(-eax17);
    esi11->f28 = eax18 - (eax18 + reinterpret_cast<uint1_t>(eax18 < eax18 + reinterpret_cast<uint1_t>(!!eax17))) & 2;
    goto addr_1001d704_17;
}

void fun_1001d880(int32_t a1, int32_t a2, int32_t a3) {
    SHLWAPI_dll_219();
    goto 0x1000208c;
}

void fun_1001ef70(int32_t a1, int32_t a2, int32_t a3) {
    SHLWAPI_dll_219();
    goto 0x1000209c;
}

int32_t fun_10009860(int32_t a1) {
    __asm__("lock xadd [ecx+0x4], eax");
    return 2;
}

void fun_1000a63c() {
    goto 0x1000a62b;
}

void fun_1000a79f() {
    goto 0x1000a784;
}

void fun_1000b8fc() {
    goto 0x1000a784;
}

int32_t WindowsIsStringEmpty = 0x26004;

int32_t WindowsStringHasEmbeddedNull = 0x2601c;

int32_t RoOriginateErrorW = 0x2603c;

int32_t WindowsGetStringRawBuffer = 0x25f46;

struct s943 {
    signed char[4] pad4;
    struct s159* f4;
};

struct s944 {
    void** f0;
    signed char[1] pad2;
    void** f2;
};

void** DllGetActivationFactory(struct s21* ecx, void** a2, struct s22*** a3) {
    void** eax4;
    void* ebp5;
    uint32_t eax6;
    uint32_t v7;
    struct s157* v8;
    struct s157* ebx9;
    int32_t v10;
    int32_t esi11;
    void** ebx12;
    int32_t v13;
    int32_t edi14;
    void** v15;
    struct s22*** v16;
    int32_t eax17;
    void* v18;
    void** v19;
    int32_t eax20;
    int32_t v21;
    int32_t ecx22;
    void** v23;
    void** eax24;
    void** ecx25;
    void** v26;
    void** v27;
    void** esi28;
    struct s943* eax29;
    void** ecx30;
    void** v31;
    struct s159** edi32;
    void** esi33;
    void** ecx34;
    struct s159** eax35;
    struct s159** v36;
    void** esi37;
    struct s944* eax38;
    uint1_t cf39;
    uint32_t eax40;
    uint32_t ecx41;
    void** eax42;
    struct s159* v43;

    eax4 = fun_1000d5fd(ecx);
    ebp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 4 + 4 - 4);
    eax6 = g100240c4;
    v7 = eax6 ^ reinterpret_cast<uint32_t>(ebp5);
    v8 = ebx9;
    v10 = esi11;
    ebx12 = eax4;
    *a3 = reinterpret_cast<struct s22**>(0);
    v13 = edi14;
    v15 = a2;
    v16 = a3;
    eax17 = reinterpret_cast<int32_t>(WindowsIsStringEmpty(v15, v13, v10, v8));
    if (eax17 || ((v18 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(ebp5) - 52), v19 = a2, eax20 = reinterpret_cast<int32_t>(WindowsStringHasEmbeddedNull()), eax20 < 0) || v21 == 1)) {
        ecx22 = 10;
        while (ecx22) {
            --ecx22;
        }
        RoOriginateErrorW();
    } else {
        v23 = a2;
        eax24 = reinterpret_cast<void**>(WindowsGetStringRawBuffer(v23));
        ecx25 = *reinterpret_cast<void***>(ebx12);
        v26 = ebx12;
        v27 = eax24;
        esi28 = *reinterpret_cast<void***>(ecx25 + 20);
        image_base_(esi28, v26, v23);
        eax29 = reinterpret_cast<struct s943*>(esi28(esi28, v26, v23));
        ecx30 = *reinterpret_cast<void***>(ebx12);
        v31 = ebx12;
        edi32 = &eax29->f4;
        esi33 = *reinterpret_cast<void***>(ecx30 + 24);
        ecx34 = esi33;
        image_base_(ecx34, v31, v26, v23);
        eax35 = reinterpret_cast<struct s159**>(esi33(ecx34, v31, v26, v23));
        v36 = eax35;
        while (reinterpret_cast<uint32_t>(edi32) < reinterpret_cast<uint32_t>(eax35)) {
            if (!*edi32) {
                addr_1000d4b7_10:
                ++edi32;
                continue;
            } else {
                esi37 = (*edi32)->f4;
                image_base_(esi37, v31, v26, v23);
                eax38 = reinterpret_cast<struct s944*>(esi37(esi37, v31, v26, v23));
                ecx34 = v27;
                do {
                    cf39 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx34)) < reinterpret_cast<unsigned char>(eax38->f0));
                    if (*reinterpret_cast<void***>(ecx34) != eax38->f0) 
                        break;
                    if (!*reinterpret_cast<void***>(ecx34)) 
                        goto addr_1000d4a7_14;
                    cf39 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx34 + 2)) < reinterpret_cast<unsigned char>(eax38->f2));
                    if (*reinterpret_cast<void***>(ecx34 + 2) != eax38->f2) 
                        break;
                    ecx34 = ecx34 + 4;
                    eax38 = reinterpret_cast<struct s944*>(reinterpret_cast<uint32_t>(eax38) + 4);
                } while (*reinterpret_cast<void***>(ecx34 + 2));
                goto addr_1000d4a7_14;
            }
            eax40 = reinterpret_cast<uint32_t>(eax38) - (reinterpret_cast<uint32_t>(eax38) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(eax38) < reinterpret_cast<uint32_t>(eax38) + cf39)) | 1;
            addr_1000d4b0_18:
            if (!eax40) 
                goto addr_1000d4ce_19;
            eax35 = v36;
            goto addr_1000d4b7_10;
            addr_1000d4a7_14:
            eax40 = 0;
            goto addr_1000d4b0_18;
        }
        goto addr_1000d4be_21;
    }
    addr_1000d50a_22:
    addr_1000d50c_23:
    ecx41 = v7 ^ reinterpret_cast<uint32_t>(ebp5);
    eax42 = fun_1000a130(ecx41, ecx41);
    return eax42;
    addr_1000d4be_21:
    RoOriginateError(ecx34, 0x80040111, 0, v31, v26, v23);
    goto addr_1000d50a_22;
    addr_1000d4ce_19:
    v43 = *edi32;
    fun_1000d65c(ebx12, "5", v43, v16, v31, v26, v23, 0, v19, v18, v15, v13, v10, v8);
    goto addr_1000d50c_23;
}

void fun_1000c8f0(int32_t a1) {
    goto 0x100099d0;
}

struct s945 {
    int32_t f0;
    signed char* f4;
};

/* (image base) */
int32_t image_base_ = 0x1000af30;

void** fun_10017b00(struct s190* ecx, int32_t a2, struct s945* a3) {
    void* ebp4;
    uint32_t eax5;
    int32_t eax6;
    struct s191* ecx7;
    int32_t esi8;
    signed char* v9;
    int32_t v10;
    void** eax11;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = g100240c4;
    eax6 = a2 - 9;
    if (!eax6) {
        ecx7 = ecx->f0;
        esi8 = ecx7->f8;
        image_base_(esi8);
        esi8(ecx);
    } else {
        if (!(eax6 - 1)) {
            v9 = a3->f4;
            v10 = a3->f0;
            fun_10017ccc(ecx, v10, v9);
        } else {
            image_base_(a2, a3);
        }
    }
    eax11 = fun_1000a130(eax5 ^ reinterpret_cast<uint32_t>(ebp4) ^ reinterpret_cast<uint32_t>(ebp4));
    return eax11;
}

/* (image base) */
int32_t image_base_ = 0x1000af02;

/* (image base) */
int32_t image_base_ = 0x1000b224;

/* (image base) */
int32_t image_base_ = 0x1000b21a;

void** fun_10017bb0(void* a1, int32_t a2, uint32_t* a3) {
    void* ebp4;
    uint32_t eax5;
    void** edi6;
    void** eax7;
    void* ecx8;
    int32_t v9;
    void** eax10;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax5 = reinterpret_cast<uint32_t>(image_base_());
    edi6 = reinterpret_cast<void**>(0x80070057);
    if (a3 && (eax5 <= 20 && ((*a3 = 0, eax7 = reinterpret_cast<void**>(image_base_(reinterpret_cast<int32_t>(a1) - 8, 10, a2, reinterpret_cast<int32_t>(ebp4) - 1)), edi6 = eax7, reinterpret_cast<signed char>(edi6) >= reinterpret_cast<signed char>(0)) && !1))) {
        ecx8 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp4) - 12);
        image_base_(ecx8, reinterpret_cast<int32_t>(a1) + 0x68);
        if (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + eax5 * 4 + 20)) {
            v9 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(a1) + eax5 * 4 + 20);
            IUnknown_Set(ecx8, a3, v9, reinterpret_cast<int32_t>(a1) + 0x68);
        } else {
            eax10 = fun_10017a07(a2, a3, reinterpret_cast<int32_t>(a1) + 0x68);
            edi6 = eax10;
            if (reinterpret_cast<signed char>(edi6) >= reinterpret_cast<signed char>(0)) {
                *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(a1) + eax5 * 4 + 20) = *a3;
            }
        }
        image_base_(reinterpret_cast<int32_t>(ebp4) - 12, reinterpret_cast<int32_t>(a1) + 0x68);
    }
    return edi6;
}

void fun_1000a6cc(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f270, 0x1002846c);
    goto eax2;
}

/* (image base) */
int32_t image_base_ = 0x1000b9e4;

void fun_1001efa0(int32_t a1) {
    image_base_(a1 - 16);
    return;
}

int32_t fun_10009880(int32_t a1) {
    __asm__("lock xadd [ecx+0x8], eax");
    return 2;
}

void fun_1000a646() {
    goto 0x1000a62b;
}

void fun_1000a7a9() {
    goto 0x1000a784;
}

void fun_1000b906() {
    goto 0x1000a784;
}

struct s946 {
    signed char[16] pad16;
    struct s946* f16;
    struct s946* f20;
    signed char[1] pad25;
    signed char f25;
    unsigned char f26;
    signed char[1] pad28;
    struct s946* f28;
};

int32_t EtwGetTraceLoggerHandle = 0x25e48;

int32_t EtwGetTraceEnableLevel = 0x25e62;

int32_t EtwGetTraceEnableFlags = 0x25e7c;

int32_t fun_1000d8d0(int32_t ecx, int32_t a2, struct s946* a3, struct s946** a4, int32_t a5) {
    struct s946* ebx6;
    struct s946* esi7;
    int32_t eax8;
    struct s946* eax9;
    struct s946* edi10;
    struct s946* edx11;
    signed char al12;
    struct s946* eax13;
    signed char dl14;
    int32_t eax15;

    ebx6 = reinterpret_cast<struct s946*>(0);
    esi7 = a3;
    *a4 = reinterpret_cast<struct s946*>(0);
    eax8 = a2 - 4;
    if (!eax8) {
        eax9 = reinterpret_cast<struct s946*>(EtwGetTraceLoggerHandle(a5));
        edi10 = edx11;
        ebx6 = eax9;
        al12 = reinterpret_cast<signed char>(EtwGetTraceEnableLevel(ebx6, edi10, a5));
        eax13 = reinterpret_cast<struct s946*>(EtwGetTraceEnableFlags(ebx6, edi10, ebx6, edi10, a5));
        dl14 = al12;
    } else {
        if (!(eax8 - 1)) {
            edi10 = reinterpret_cast<struct s946*>(0);
            eax13 = reinterpret_cast<struct s946*>(0);
            dl14 = 0;
        } else {
            eax15 = 87;
            goto addr_1000d93d_6;
        }
    }
    if (esi7->f26 & 2 && esi7->f16) {
        esi7 = esi7->f16;
    }
    esi7->f16 = ebx6;
    esi7->f20 = edi10;
    esi7->f25 = dl14;
    esi7->f28 = eax13;
    eax15 = 0;
    addr_1000d93d_6:
    return eax15;
}

int32_t fun_100099f0() {
    int32_t* v1;

    *v1 = 0x401;
    return 0;
}

void fun_1000c900(int32_t a1) {
    goto 0x100117e0;
}

void fun_1001efb8() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;
    signed char* eax7;
    signed char* eax8;
    signed char al9;
    signed char* eax10;
    signed char* eax11;
    signed char al12;
    signed char* eax13;
    signed char* eax14;
    signed char al15;
    signed char* eax16;
    signed char* eax17;
    signed char al18;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
    *eax7 = reinterpret_cast<signed char>(*eax8 + al9);
    *eax10 = reinterpret_cast<signed char>(*eax11 + al12);
    *eax13 = reinterpret_cast<signed char>(*eax14 + al15);
    *eax16 = reinterpret_cast<signed char>(*eax17 + al18);
    __asm__("in al, 0xff");
}

int32_t fun_100098a0() {
    return 1;
}

void fun_1000a650() {
    goto 0x1000a62b;
}

void fun_1000a7b3() {
    goto 0x1000a784;
}

void fun_1000b910() {
    goto 0x1000a784;
}

int32_t fun_10009a10() {
    return 0x40000;
}

void fun_1000c910(int32_t a1) {
    goto 0x100117e0;
}

void fun_1000a6e7() {
    goto 0x1000a6d6;
}

struct s947 {
    signed char[60] pad60;
    signed char f60;
};

int32_t fun_100098b0(struct s947* a1) {
    a1->f60 = 1;
    return 0;
}

void fun_1000a65a() {
    goto 0x1000a62b;
}

void fun_1000a7bd() {
    goto 0x1000a784;
}

void fun_1000b91a() {
    goto 0x1000a784;
}

int32_t fun_10009a20() {
    return 0x80004001;
}

void fun_1000c920(int32_t a1) {
    goto 0x10011890;
}

void fun_1000a6f1() {
    goto 0x1000a6d6;
}

int32_t fun_100098c2(int32_t a1) {
    __asm__("lock xadd [ecx+0xc], eax");
    return 2;
}

void fun_1000a664(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f230, 0x10028498);
    goto eax2;
}

void fun_1000a7c7() {
    goto 0x1000a784;
}

void fun_1000b924() {
    goto 0x1000a784;
}

int32_t fun_10009a30() {
    return 0x80004001;
}

void fun_1000c930(int32_t a1) {
    goto 0x10011890;
}

void fun_1000a6fb() {
    goto 0x1000a6d6;
}

void fun_100098f0() {
    return;
}

void fun_1000a7d1() {
    goto 0x1000a784;
}

void fun_1000b92e() {
    goto 0x1000a784;
}

int32_t fun_10009a40() {
    return 0x80004001;
}

void fun_1000c940(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a705() {
    goto 0x1000a6d6;
}

void fun_10009900(uint32_t* a1) {
    *a1 = 0;
    return;
}

void fun_1000a67f() {
    goto 0x1000a66e;
}

void fun_1000a7db() {
    goto 0x1000a784;
}

void fun_1000b938() {
    goto 0x1000a784;
}

int32_t fun_10009a50() {
    return 0x80004001;
}

void fun_1000c950(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a70f() {
    goto 0x1000a6d6;
}

signed char fun_10009910() {
    return 0;
}

void fun_1000a7e5() {
    goto 0x1000a784;
}

void fun_1000b942() {
    goto 0x1000a784;
}

int32_t fun_10009a60() {
    return 0x80004001;
}

void fun_1000c960(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a719() {
    goto 0x1000a6d6;
}

struct s948 {
    signed char[24] pad24;
    int32_t f24;
};

int32_t fun_10009920(struct s948* a1) {
    a1->f24 = 4;
    return 0;
}

void fun_1000a7ef() {
    goto 0x1000a784;
}

void fun_1000b94c() {
    goto 0x1000a784;
}

int32_t fun_10009a70() {
    return fun_10017750;
}

void fun_1000c970(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a723() {
    goto 0x1000a6d6;
}

struct s949 {
    signed char[24] pad24;
    int32_t f24;
};

int32_t fun_10009940(struct s949* a1) {
    return a1->f24;
}

void fun_1000a7f9() {
    goto 0x1000a784;
}

void fun_1000b960() {
    goto 0x1000a784;
}

int32_t fun_10009a80() {
    return fun_1001ed80;
}

void fun_1000c980(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a72d() {
    goto 0x1000a6d6;
}

int32_t fun_1000994f(int32_t a1) {
    __asm__("lock xadd [ecx+0x14], eax");
    return 2;
}

void fun_1000a810() {
    goto 0x1000a784;
}

void fun_1000b96a() {
    goto 0x1000a784;
}

int32_t fun_10009a90() {
    return 0x10024620;
}

void fun_1000c990(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a737() {
    goto 0x1000a6d6;
}

int32_t fun_10009970() {
    int32_t v1;

    return v1;
}

void fun_1000a81a() {
    goto 0x1000a784;
}

void fun_1000b980() {
    goto 0x1000a784;
}

int32_t fun_10009aa0() {
    return fun_1001f208;
}

void fun_1000c9a0(int32_t a1) {
    goto 0x10013010;
}

void fun_1000a741(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f290, 0x100284b0);
    goto eax2;
}

int32_t fun_10009980() {
    return 0;
}

void fun_1000a824() {
    goto 0x1000a784;
}

void fun_1000b98a() {
    goto 0x1000a784;
}

struct s181** fun_10009ab0() {
    struct s181** eax1;

    eax1 = g10024718;
    return eax1;
}

void fun_1000c9b0(int32_t a1) {
    goto 0x10013010;
}

int32_t fun_10009990() {
    uint32_t* v1;

    *v1 = 0;
    return 0;
}

void fun_1000a82e() {
    goto 0x1000a784;
}

void fun_1000b994() {
    goto 0x1000a784;
}

struct s123** fun_10009ac0() {
    struct s123** eax1;

    eax1 = g1002471c;
    return eax1;
}

void fun_1000c9c0(int32_t a1) {
    goto 0x10013400;
}

void fun_1000a75c() {
    goto 0x1000a74b;
}

struct s950 {
    signed char[40] pad40;
    int32_t f40;
};

void fun_100099b0(struct s950* a1, int32_t a2) {
    a1->f40 = a2;
    return;
}

void fun_1000a838() {
    goto 0x1000a784;
}

void fun_1000b99e() {
    goto 0x1000a784;
}

struct s69** fun_10009ad0() {
    struct s69** eax1;

    eax1 = g10024710;
    return eax1;
}

void fun_1000c9d0(int32_t a1) {
    goto 0x10013520;
}

void fun_1000a766() {
    goto 0x1000a74b;
}

void fun_1000a842() {
    goto 0x1000a784;
}

void fun_1000b9a8() {
    goto 0x1000a784;
}

signed char fun_10009ae0() {
    return 0;
}

void fun_1000c9e0(int32_t a1) {
    goto 0x10013550;
}

void fun_1000a770() {
    goto 0x1000a74b;
}

void fun_1000a84c() {
    goto 0x1000a784;
}

void fun_1000b9b2() {
    goto 0x1000a784;
}

struct s104** fun_10009af0() {
    struct s104** eax1;

    eax1 = g10024714;
    return eax1;
}

void fun_1000c9f0(int32_t a1) {
    goto 0x100135d0;
}

void fun_1000a77a() {
    goto 0x1000a784;
}

void fun_1000a860() {
    goto 0x1000a784;
}

void fun_1000b9bc() {
    goto 0x1000a784;
}

struct s122** fun_10009b00() {
    struct s122** eax1;

    eax1 = g10024720;
    return eax1;
}

void fun_1000ca00(int32_t a1) {
    goto 0x10009840;
}

void fun_1000a86a() {
    goto 0x1000a784;
}

void fun_1000b9c6() {
    goto 0x1000a784;
}

void fun_10009b10() {
    return;
}

void fun_1000ca10(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a874() {
    goto 0x1000a784;
}

void fun_1000b9d0() {
    goto 0x1000a784;
}

void fun_10009b20() {
    return;
}

void fun_1000ca20(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a880() {
    goto 0x1000a784;
}

void fun_1000b9da() {
    goto 0x1000a784;
}

signed char fun_10009b30() {
    return 1;
}

void fun_1000ca30(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a88a() {
    goto 0x1000a784;
}

void fun_1000b9e4() {
    goto 0x1000a784;
}

void fun_10009b40() {
    return;
}

void fun_1000ca40(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a894() {
    goto 0x1000a784;
}

void fun_1000b9ee() {
    goto 0x1000a784;
}

signed char fun_10009b50() {
    return 1;
}

void fun_1000ca50(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a89e() {
    goto 0x1000a784;
}

void fun_1000b9f8() {
    goto 0x1000a784;
}

struct s951 {
    signed char[40] pad40;
    int32_t f40;
};

void fun_10009b60(struct s951* ecx, int32_t a2) {
    ecx->f40 = a2;
    return;
}

void fun_1000ca60(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a8a8() {
    goto 0x1000a784;
}

void fun_1000ba02() {
    goto 0x1000a784;
}

int32_t fun_10009b70() {
    return 0;
}

void fun_1000ca70(int32_t a1) {
    goto 0x10013db0;
}

void fun_1000a8b2() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ba02;

void fun_1000ba10() {
    goto image_base_;
}

struct s952 {
    signed char[68] pad68;
    int32_t f68;
};

int32_t fun_10009b80(struct s952* ecx) {
    return ecx->f68;
}

void fun_1000ca80(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8bc() {
    goto 0x1000a784;
}

void fun_1000ba16(int32_t ecx) {
    int32_t eax2;

    eax2 = fun_10018a97(0x1001f2d0, 0x10028464);
    goto eax2;
}

void fun_10009b90() {
    return;
}

void fun_1000ca90(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8c6() {
    goto 0x1000a784;
}

void fun_1000ba20() {
    goto 0x1000b3a6;
}

void** fun_10009ba0() {
    void** eax1;

    eax1 = g0;
    return eax1;
}

void fun_1000caa0(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8d0() {
    goto 0x1000a784;
}

void fun_1000b3b7() {
    goto 0x1000b3a6;
}

void fun_1000ba2a() {
    goto 0x1000b3a6;
}

void fun_1000cab0(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8da() {
    goto 0x1000a784;
}

void fun_1000b3c1() {
    goto 0x1000b3a6;
}

void fun_1000ba34() {
    goto 0x1000b3a6;
}

void fun_1000cac0(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8e4() {
    goto 0x1000a784;
}

void fun_1000b3cb() {
    goto 0x1000b3a6;
}

void fun_1000ba3e() {
    goto 0x1000b3a6;
}

void fun_1000cad0(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8ee() {
    goto 0x1000a784;
}

void fun_1000b3d5() {
    goto 0x1000b3a6;
}

void fun_1000cae0(int32_t a1) {
    goto 0x10013ee0;
}

void fun_1000a8f8() {
    goto 0x1000a784;
}

void fun_1000b3df() {
    goto 0x1000b3a6;
}

void fun_1000caf0(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a902() {
    goto 0x1000a784;
}

void fun_1000b3e9() {
    goto 0x1000b3a6;
}

void fun_1000cb00(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a910() {
    goto 0x1000a784;
}

void fun_1000b3f3() {
    goto 0x1000b3a6;
}

void fun_1000cb10(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a920() {
    goto 0x1000a784;
}

int32_t fun_1000b400(void** ecx) {
    fun_1000b432(ecx);
    fun_1000a45e(ecx, 0x1000b520);
    return 0;
}

void fun_1000cb20(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a930() {
    goto 0x1000a784;
}

void fun_1000cb30(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a93a() {
    goto 0x1000a784;
}

void fun_1000cb40(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a944() {
    goto 0x1000a784;
}

void fun_1000cb50(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a94e() {
    goto 0x1000a784;
}

void fun_1000cb60(int32_t a1) {
    goto 0x10013f70;
}

void fun_1000a958() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b136;

void fun_1000cb70(int32_t a1) {
    goto image_base_;
}

void fun_1000a962() {
    goto 0x1000a784;
}

void fun_1000cb80(int32_t a1) {
    goto image_base_;
}

void fun_1000a96c() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b126;

void fun_1000cb90(int32_t a1) {
    goto image_base_;
}

void fun_1000a976() {
    goto 0x1000a784;
}

void fun_1000cba0(int32_t a1) {
    goto image_base_;
}

void fun_1000a980() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000af16;

void fun_1000cbb0(int32_t a1) {
    goto image_base_;
}

void fun_1000a98a() {
    goto 0x1000a784;
}

void fun_1000cbc0(int32_t a1) {
    goto image_base_;
}

void fun_1000a994() {
    goto 0x1000a784;
}

void fun_1000cbd0(int32_t ecx) {
    goto 0x1001e190;
}

void fun_1000a99e() {
    goto 0x1000a784;
}

void fun_1000cbe0(int32_t a1) {
    goto 0x100098d0;
}

/* (image base) */
int32_t image_base_ = 0x1000a99e;

void fun_1000a9b0() {
    goto image_base_;
}

void fun_1000cbf0(int32_t a1) {
    goto 0x100098d0;
}

void fun_1000a9b6() {
    goto 0x1000a784;
}

void fun_1000cc00(int32_t a1) {
    goto 0x100098d0;
}

void fun_1000a9c0() {
    goto 0x1000a784;
}

void fun_1000cc10(int32_t a1) {
    goto 0x100098d0;
}

void fun_1000a9ca() {
    goto 0x1000a784;
}

void fun_1000cc20(int32_t a1) {
    goto 0x100098d0;
}

void fun_1000a9d4() {
    goto 0x1000a784;
}

void fun_1000cc30(int32_t a1) {
    goto 0x100098d0;
}

void fun_1000a9de() {
    goto 0x1000a784;
}

void fun_1000cc40(int32_t a1) {
    goto 0x10009950;
}

void fun_1000a9e8() {
    goto 0x1000a784;
}

void fun_1000cc50(int32_t a1) {
    goto 0x10009950;
}

void fun_1000a9f2() {
    goto 0x1000a784;
}

void fun_1000cc60(int32_t a1) {
    goto 0x10009950;
}

void fun_1000a9fc() {
    goto 0x1000a784;
}

void fun_1000cc70(int32_t a1) {
    goto 0x10009950;
}

void fun_1000aa06() {
    goto 0x1000a784;
}

void fun_1000cc80(int32_t a1) {
    goto 0x1001e640;
}

void fun_1000aa10() {
    goto 0x1000a784;
}

void fun_1000cc90(int32_t a1) {
    goto 0x1001e660;
}

void fun_1000aa1a() {
    goto 0x1000a784;
}

void fun_1000cca0(int32_t a1) {
    goto 0x1001e660;
}

void fun_1000aa24() {
    goto 0x1000a784;
}

void fun_1000ccb0(int32_t a1) {
    goto 0x1001e660;
}

void fun_1000aa2e() {
    goto 0x1000a784;
}

void fun_1000ccc0(int32_t a1) {
    goto 0x1001e660;
}

void fun_1000aa40() {
    goto image_base_;
}

void fun_1000ccd0(int32_t a1) {
    goto 0x1001e660;
}

void fun_1000aa46() {
    goto 0x1000a784;
}

void fun_1000cce0(int32_t a1) {
    goto 0x1001e660;
}

/* (image base) */
int32_t image_base_ = 0x1000aa46;

void fun_1000aa50() {
    goto image_base_;
}

void fun_1000ccf0(int32_t a1) {
    goto 0x1001e6a0;
}

void fun_1000aa56() {
    goto 0x1000a784;
}

void fun_1000cd00(int32_t a1) {
    goto 0x1001e6a0;
}

void fun_1000aa60() {
    goto image_base_;
}

void fun_1000cd10(int32_t a1) {
    goto 0x1001e6a0;
}

void fun_1000aa66() {
    goto 0x1000a784;
}

void fun_1000cd20(int32_t a1) {
    goto 0x1001e6a0;
}

void fun_1000aa70() {
    goto 0x1000a784;
}

void fun_1000cd30(int32_t a1) {
    goto 0x1001e740;
}

void fun_1000aa7a() {
    goto 0x1000a784;
}

void fun_1000cd40(int32_t a1) {
    goto 0x1001e7b0;
}

void fun_1000aa84() {
    goto 0x1000a784;
}

void fun_1000cd50(int32_t a1) {
    goto 0x1001e7b0;
}

void fun_1000aa8e() {
    goto 0x1000a784;
}

void fun_1000cd60(int32_t a1) {
    goto 0x1001e7b0;
}

void fun_1000aa98() {
    goto 0x1000a784;
}

void fun_1000cd70(int32_t a1) {
    goto 0x1001e7b0;
}

void fun_1000aaa2() {
    goto 0x1000a784;
}

void fun_1000cd80(int32_t a1) {
    goto 0x1001e7b0;
}

void fun_1000aaac() {
    goto 0x1000a784;
}

void fun_1000cd90(int32_t a1) {
    goto 0x1001e7b0;
}

void fun_1000aab6() {
    goto 0x1000a784;
}

void fun_1000cda0(int32_t a1) {
    goto 0x1001e7c0;
}

void fun_1000aac0() {
    goto 0x1000a784;
}

void fun_1000cdb0(int32_t a1) {
    goto 0x1001e7c0;
}

void fun_1000aaca() {
    goto 0x1000a784;
}

void fun_1000cdc0(int32_t a1) {
    goto 0x1001e7c0;
}

void fun_1000aad4() {
    goto 0x1000a784;
}

void fun_1000cdd0(int32_t a1) {
    goto 0x1001e7c0;
}

void fun_1000aade() {
    goto 0x1000a784;
}

int32_t __CxxFrameHandler3 = 0x26ec8;

void fun_1000cdda() {
    uint32_t ecx1;
    int32_t v2;

    ecx1 = *reinterpret_cast<uint32_t*>(v2 - 24) ^ reinterpret_cast<uint32_t>(v2 + 12);
    fun_1000a130(ecx1, ecx1);
    goto __CxxFrameHandler3;
}

void fun_1000aae8() {
    goto 0x1000a784;
}

void fun_1000ce00() {
    goto 0x100095e0;
}

void fun_1000aaf2() {
    goto 0x1000a784;
}

void fun_1000ce10() {
    goto 0x10009800;
}

void fun_1000aafc() {
    goto 0x1000a784;
}

void fun_1000ce20() {
    goto 0x100096b0;
}

void fun_1000ab06() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab06;

void fun_1000ab10() {
    goto image_base_;
}

void fun_1000ab16() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab16;

void fun_1000ab20() {
    goto image_base_;
}

void fun_1000ab26() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab26;

void fun_1000ab30() {
    goto image_base_;
}

void fun_1000ab36() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab36;

void fun_1000ab40() {
    goto image_base_;
}

void fun_1000ab46() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab46;

void fun_1000ab50() {
    goto image_base_;
}

void fun_1000ab56() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab56;

void fun_1000ab60() {
    goto image_base_;
}

void fun_1000ab66() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab66;

void fun_1000ab70() {
    goto image_base_;
}

void fun_1000ab76() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab76;

void fun_1000ab80() {
    goto image_base_;
}

void fun_1000ab86() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab86;

void fun_1000ab90() {
    goto image_base_;
}

void fun_1000ab96() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ab96;

void fun_1000aba0() {
    goto image_base_;
}

void fun_1000aba6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000aba6;

void fun_1000abb0() {
    goto image_base_;
}

void fun_1000abb6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000abb6;

void fun_1000abc0() {
    goto image_base_;
}

void fun_1000abc6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000abc6;

void fun_1000abd0() {
    goto image_base_;
}

void fun_1000abd6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000abd6;

void fun_1000abe0() {
    goto image_base_;
}

void fun_1000abe6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000abe6;

void fun_1000abf0() {
    goto image_base_;
}

void fun_1000abf6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000abf6;

void fun_1000ac00() {
    goto image_base_;
}

void fun_1000ac06() {
    goto 0x1000a784;
}

void fun_1000ac10() {
    goto image_base_;
}

void fun_1000ac16() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac16;

void fun_1000ac20() {
    goto image_base_;
}

void fun_1000ac26() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac26;

void fun_1000ac30() {
    goto image_base_;
}

void fun_1000ac36() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac36;

void fun_1000ac40() {
    goto image_base_;
}

void fun_1000ac46() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac46;

void fun_1000ac50() {
    goto image_base_;
}

void fun_1000ac56() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac56;

void fun_1000ac60() {
    goto image_base_;
}

void fun_1000ac66() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac66;

void fun_1000ac70() {
    goto image_base_;
}

void fun_1000ac76() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac76;

void fun_1000ac80() {
    goto image_base_;
}

void fun_1000ac86() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac86;

void fun_1000ac90() {
    goto image_base_;
}

void fun_1000ac96() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ac96;

void fun_1000aca0() {
    goto image_base_;
}

void fun_1000aca6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000aca6;

void fun_1000acb0() {
    goto image_base_;
}

void fun_1000acb6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000acb6;

void fun_1000acc0() {
    goto image_base_;
}

void fun_1000acc6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000acc6;

void fun_1000acd0() {
    goto image_base_;
}

void fun_1000acd6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000acd6;

void fun_1000ace0() {
    goto image_base_;
}

void fun_1000ace6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ace6;

void fun_1000acf0() {
    goto image_base_;
}

void fun_1000acf6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000acf6;

void fun_1000ad00() {
    goto image_base_;
}

void fun_1000ad06() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad06;

void fun_1000ad10() {
    goto image_base_;
}

void fun_1000ad16() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad16;

void fun_1000ad20() {
    goto image_base_;
}

void fun_1000ad26() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad26;

void fun_1000ad30() {
    goto image_base_;
}

void fun_1000ad36() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad36;

void fun_1000ad40() {
    goto image_base_;
}

void fun_1000ad46() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad46;

void fun_1000ad50() {
    goto image_base_;
}

void fun_1000ad56() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad56;

void fun_1000ad60() {
    goto image_base_;
}

void fun_1000ad66() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad66;

void fun_1000ad70() {
    goto image_base_;
}

void fun_1000ad76() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad76;

void fun_1000ad80() {
    goto image_base_;
}

void fun_1000ad86() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad86;

void fun_1000ad90() {
    goto image_base_;
}

void fun_1000ad96() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ad96;

void fun_1000ada0() {
    goto image_base_;
}

void fun_1000ada6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ada6;

void fun_1000adb0() {
    goto image_base_;
}

void fun_1000adb6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000adb6;

void fun_1000adc0() {
    goto image_base_;
}

void fun_1000adc6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000adc6;

void fun_1000add0() {
    goto image_base_;
}

void fun_1000add6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000add6;

void fun_1000ade0() {
    goto image_base_;
}

void fun_1000ade6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ade6;

void fun_1000adf0() {
    goto image_base_;
}

void fun_1000adf6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000adf6;

void fun_1000ae00() {
    goto image_base_;
}

void fun_1000ae06() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ae06;

void fun_1000ae10() {
    goto image_base_;
}

void fun_1000ae16() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ae16;

void fun_1000ae20() {
    goto image_base_;
}

void fun_1000ae26() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ae26;

void fun_1000ae30() {
    goto image_base_;
}

void fun_1000ae36() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ae36;

void fun_1000ae40() {
    goto image_base_;
}

void fun_1000ae46() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ae46;

void fun_1000ae50() {
    goto image_base_;
}

void fun_1000ae56() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000ae56;

void fun_1000ae60() {
    goto image_base_;
}

void fun_1000ae66() {
    goto 0x1000a784;
}

void fun_1000ae70() {
    goto 0x1000a784;
}

void fun_1000ae7a() {
    goto 0x1000a784;
}

void fun_1000ae84() {
    goto 0x1000a784;
}

void fun_1000ae8e() {
    goto 0x1000a784;
}

void fun_1000ae98() {
    goto 0x1000a784;
}

void fun_1000aea2() {
    goto 0x1000a784;
}

void fun_1000aeac() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000aeac;

void fun_1000aec0() {
    goto image_base_;
}

void fun_1000aec6() {
    goto 0x1000a784;
}

void fun_1000aed0() {
    goto 0x1000a784;
}

void fun_1000aeda() {
    goto 0x1000a784;
}

void fun_1000aee4() {
    goto 0x1000a784;
}

void fun_1000aeee() {
    goto 0x1000a784;
}

void fun_1000aef8() {
    goto 0x1000a784;
}

void fun_1000af02() {
    goto 0x1000a784;
}

void fun_1000af0c() {
    goto 0x1000a784;
}

void fun_1000af16() {
    goto 0x1000a784;
}

void fun_1000af20() {
    goto image_base_;
}

void fun_1000af26() {
    goto 0x1000a784;
}

void fun_1000af30() {
    goto 0x1000a784;
}

void fun_1000af3a() {
    goto 0x1000a784;
}

void fun_1000af44() {
    goto 0x1000a784;
}

void fun_1000af4e() {
    goto 0x1000a784;
}

void fun_1000af58() {
    goto 0x1000a784;
}

void fun_1000af62() {
    goto 0x1000a784;
}

void fun_1000af6c() {
    goto 0x1000a784;
}

void fun_1000af76() {
    goto 0x1000a784;
}

void fun_1000af80() {
    goto 0x1000a784;
}

void fun_1000af8a() {
    goto 0x1000a784;
}

void fun_1000af94() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000af94;

void fun_1000afa0() {
    goto image_base_;
}

void fun_1000afa6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000afa6;

void fun_1000afb0() {
    goto image_base_;
}

void fun_1000afb6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000afb6;

void fun_1000afc0() {
    goto image_base_;
}

void fun_1000afc6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000afc6;

void fun_1000afd0() {
    goto image_base_;
}

void fun_1000afd6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000afd6;

void fun_1000afe0() {
    goto image_base_;
}

void fun_1000afe6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000afe6;

void fun_1000aff0() {
    goto image_base_;
}

void fun_1000aff6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000aff6;

void fun_1000b000() {
    goto image_base_;
}

void fun_1000b006() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b006;

void fun_1000b010() {
    goto image_base_;
}

void fun_1000b016() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b016;

void fun_1000b020() {
    goto image_base_;
}

void fun_1000b026() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b026;

void fun_1000b030() {
    goto image_base_;
}

void fun_1000b036() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b036;

void fun_1000b040() {
    goto image_base_;
}

void fun_1000b046() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b046;

void fun_1000b050() {
    goto image_base_;
}

void fun_1000b056() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b056;

void fun_1000b060() {
    goto image_base_;
}

void fun_1000b066() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b066;

void fun_1000b070() {
    goto image_base_;
}

void fun_1000b076() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b076;

void fun_1000b080() {
    goto image_base_;
}

void fun_1000b086() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b086;

void fun_1000b090() {
    goto image_base_;
}

void fun_1000b096() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b096;

void fun_1000b0a0() {
    goto image_base_;
}

void fun_1000b0a6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b0a6;

void fun_1000b0b0() {
    goto image_base_;
}

void fun_1000b0b6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b0b6;

void fun_1000b0c0() {
    goto image_base_;
}

void fun_1000b0c6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b0c6;

void fun_1000b0d0() {
    goto image_base_;
}

void fun_1000b0d6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b0d6;

void fun_1000b0e0() {
    goto image_base_;
}

void fun_1000b0e6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b0e6;

void fun_1000b0f0() {
    goto image_base_;
}

void fun_1000b0f6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b0f6;

void fun_1000b100() {
    goto image_base_;
}

void fun_1000b106() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b106;

void fun_1000b110() {
    goto image_base_;
}

void fun_1000b116() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b116;

void fun_1000b120() {
    goto image_base_;
}

void fun_1000b126() {
    goto 0x1000a784;
}

void fun_1000b130() {
    goto image_base_;
}

void fun_1000b136() {
    goto 0x1000a784;
}

void fun_1000b140() {
    goto image_base_;
}

void fun_1000b146() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b146;

void fun_1000b150() {
    goto image_base_;
}

void fun_1000b156() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b156;

void fun_1000b160() {
    goto image_base_;
}

void fun_1000b166() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b166;

void fun_1000b170() {
    goto image_base_;
}

void fun_1000b176() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b176;

void fun_1000b180() {
    goto image_base_;
}

void fun_1000b186() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b186;

void fun_1000b190() {
    goto image_base_;
}

void fun_1000b196() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b196;

void fun_1000b1a0() {
    goto image_base_;
}

void fun_1000b1a6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b1a6;

void fun_1000b1b0() {
    goto image_base_;
}

void fun_1000b1b6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b1b6;

void fun_1000b1c0() {
    goto image_base_;
}

void fun_1000b1c6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b1c6;

void fun_1000b1d0() {
    goto image_base_;
}

void fun_1000b1d6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b1d6;

void fun_1000b1e0() {
    goto image_base_;
}

void fun_1000b1e6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b1e6;

void fun_1000b1f0() {
    goto image_base_;
}

void fun_1000b1f6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b1f6;

void fun_1000b200() {
    goto image_base_;
}

void fun_1000b206() {
    goto 0x1000a784;
}

void fun_1000b210() {
    goto 0x1000a784;
}

void fun_1000b21a() {
    goto 0x1000a784;
}

void fun_1000b224() {
    goto 0x1000a784;
}

void fun_1000b22e() {
    goto 0x1000a784;
}

void fun_1000b238() {
    goto 0x1000a784;
}

void fun_1000b242() {
    goto 0x1000a784;
}

void fun_1000b24c() {
    goto 0x1000a784;
}

void fun_1000b256() {
    goto 0x1000a784;
}

void fun_1000b260() {
    goto 0x1000a784;
}

void fun_1000b26a() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b26a;

void fun_1000b280() {
    goto image_base_;
}

void fun_1000b286() {
    goto 0x1000a784;
}

void fun_1000b290() {
    goto 0x1000a784;
}

void fun_1000b29a() {
    goto 0x1000a784;
}

void fun_1000b2a4() {
    goto 0x1000a784;
}

void fun_1000b2ae() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b2ae;

void fun_1000b2c0() {
    goto image_base_;
}

void fun_1000b2c6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b2c6;

void fun_1000b2d0() {
    goto image_base_;
}

void fun_1000b2d6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b2d6;

void fun_1000b2e0() {
    goto image_base_;
}

void fun_1000b2e6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b2e6;

void fun_1000b2f0() {
    goto image_base_;
}

void fun_1000b2f6() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b2f6;

void fun_1000b300() {
    goto image_base_;
}

void fun_1000b306() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b306;

void fun_1000b310() {
    goto image_base_;
}

void fun_1000b316() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b316;

void fun_1000b320() {
    goto image_base_;
}

void fun_1000b326() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b326;

void fun_1000b330() {
    goto image_base_;
}

void fun_1000b336() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b336;

void fun_1000b340() {
    goto image_base_;
}

void fun_1000b346() {
    goto 0x1000a784;
}

/* (image base) */
int32_t image_base_ = 0x1000b346;

void fun_1000b350() {
    goto image_base_;
}

void fun_1000b356() {
    goto 0x1000a784;
}

void fun_1000b360() {
    goto 0x1000a784;
}

void fun_1000b36a() {
    goto 0x1000a784;
}

void fun_1000b374() {
    goto 0x1000a784;
}

void fun_1000b37e() {
    goto 0x1000a784;
}

void fun_1000b388() {
    goto 0x1000a784;
}

void fun_1000b392() {
    goto 0x1000a784;
}

void fun_1000b39c() {
    goto 0x1000b3a6;
}
