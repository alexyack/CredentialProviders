void fn1000C402(word32 edx, word32 ebx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
fn1000C402_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C402:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem47[0x10031020:word32] = Mem0[0x10031020:word32] & 0x00000000
	Mem50[0x10031024:word32] = Mem47[0x10031024:word32] & 0x00000000
	word32 edi_54
	byte SCZO_56
	word32 eax_57
	byte SZO_58
	byte C_59
	word32 esi_60
	byte Z_61
	word16 si_62
	word32 ecx_63
	selector ds_131
	selector es_130
	word32 ebx_129
	word32 edx_128
	word32 ebp_119
	word32 esp_117
	call api-ms-win-eventing-provider-l1-1-0.dll!EventRegister (retsize: 4; depth: 52)
		uses: C_52,dwLoc04_6,dwLoc08_12,dwLoc0C_43,dwLoc10_39,dwLoc14_35,dwLoc18_25,dwLoc1C_15,dwLoc20_19,dwLoc24_22,dwLoc28_29,dwLoc2C_31,dwLoc30_33,eax_17,ebp_7,edi_45,esi_44,esp_32,SZO_51
		defs: C_59,ds_67,eax_57,ebp_55,ebx_65,ecx_63,edi_54,edx_64,es_66,esi_60,esp_53,SCZO_56,si_62,SZO_58,Z_61
	word32 esi_124 = fp - 0x00000018
	word16 si_69 = (word16) (fp - 0x00000018)
	branch (fp - 0x00000018 & fp - 0x00000018) == 0x00000000 l1000C460
// DataOut: cs ds ebp ebx edx es esi esp fs gs si ss
// DataOut (flags): SZO
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000C460:
	word32 ecx_103 = Mem50[0x10031004:word32]
	word32 eax_104 = (word32) Mem50[ecx_103:word16]
	Mem106[esp_117 - 0x00000004:word32] = eax_104
	Mem108[esp_117 - 0x00000008:word32] = ecx_103
	Mem110[esp_117 - 0x0000000C:word32] = 0x00000002
	Mem113[esp_117 - 0x00000010:word32] = Mem110[0x1003101C:word32]
	Mem116[esp_117 - 0x00000014:word32] = Mem113[0x10031018:word32]
	word32 edi_118
	byte SCZO_120
	word32 eax_121
	byte SZO_122
	byte C_123
	byte Z_125
	word16 si_126
	word32 ecx_127
	call api-ms-win-eventing-provider-l1-1-0.dll!EventSetInformation (retsize: 4; depth: 4)
		uses: C_72,ds_67,dwLoc04_6,dwLoc08_12,dwLoc0C_43,dwLoc10_39,dwLoc14_35,dwLoc18_25,dwLoc1C_15,dwLoc20_19,dwLoc24_22,dwLoc28_29,dwLoc2C_31,dwLoc30_33,eax_104,ebp_55,ebx_65,ecx_103,edi_54,edx_64,es_66,esi_68,esp_115,SCZO_73,si_69,SZO_70,Z_71
		defs: C_123,ds_131,eax_121,ebp_119,ebx_129,ecx_127,edi_118,edx_128,es_130,esi_124,esp_117,SCZO_120,si_126,SZO_122,Z_125
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x1000C370 -40(fp):0x10031000 -36(fp):0x10031018 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000C453:
	branch (fp - 0x00000018 & fp - 0x00000018) <= 0x00000000 l1000C47F
// DataOut: cs ds ebp ebx edx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x1000C370 -40(fp):0x10031000 -36(fp):0x10031018 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000C455:
	esi_124 = (word32) si_69 | 0x80070000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x1000C370 -40(fp):0x10031000 -36(fp):0x10031018 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000C47F:
	word32 ecx_93
	fn1002F420(esi_124, eax_11 ^ fp - 0x00000004, edx_128, ebx_129, ebp_119, Mem50[esp_117 + 0x00000004:word32], Mem50[esp_117:word32], es_130, ds_131, out ecx_93)
	return
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x1000C370 -40(fp):0x10031000 -36(fp):0x10031018 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000C402_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -48(fp):fp - 0x00000018 -44(fp):0x1000C370 -40(fp):0x10031000 -36(fp):0x10031018 -32(fp):edi -28(fp):esi -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000C491(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax ecx edi edx esi
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0010(32)
fn1000C491_entry:
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0010(32)

l1000C491:
	word32 eax_54 = Mem0[ecx + 0x00000004:word32]
	Mem56[dwArg10 + 0x00000004:word32] = Mem0[dwArg10 + 0x00000004:word32] & 0x00000000
	Mem58[dwArg10:word32] = eax_54
	word32 eax_60 = (word32) Mem58[Mem58[ecx + 0x00000004:word32]:word16]
	Mem62[dwArg10 + 0x00000014:word32] = Mem58[dwArg10 + 0x00000014:word32] & 0x00000000
	Mem65[dwArg10 + 0x00000008:word32] = eax_60
	Mem66[dwArg10 + 0x0000000C:word32] = 0x00000002
	Mem67[dwArg10 + 0x00000010:word32] = edx + 0x0000000B
	Mem69[dwArg10 + 0x00000018:word32] = (word32) Mem67[edx + 0x0000000B:word16]
	Mem74[dwArg10 + 0x0000001C:word32] = 0x00000001
	word32 esp_81
	word32 edi_82
	word32 ebp_83
	byte SCZO_84
	byte al_85
	word32 eax_86
	word32 edx_87
	word32 esi_88
	word32 ecx_89
	byte SZO_90
	byte C_91
	call api-ms-win-eventing-provider-l1-1-0.dll!EventWriteTransfer (retsize: 4; depth: 60)
		uses: al_71,C_64,dwLoc04_6,dwLoc08_53,dwLoc0C_50,dwLoc10_44,dwLoc14_30,dwLoc18_15,dwLoc1C_19,dwLoc20_33,dwLoc24_37,dwLoc28_43,dwLoc2C_48,dwLoc30_73,dwLoc34_77,dwLoc38_80,eax_70,ebp_7,ecx_24,edi_22,edx_52,esi_28,esp_79,SZO_63
		defs: al_85,C_91,eax_86,ebp_83,ecx_89,edi_82,edx_87,esi_88,esp_81,SCZO_84,SZO_90
	word32 edi_92
	*ediOut = Mem74[ecx + 0x00000018:word32]
	word32 esi_94
	*esiOut = Mem74[ecx + 0x0000001C:word32]
	return eax_86
// DataOut: bl cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1000C491_exit:
// DataOut: eax ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp al:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000014 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1000C51D(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: edi esi esp
fn1000C51D_entry:
// DataOut: bh bl cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C51D:
	word32 esi_22 = 0x00000000
	word32 edi_10 = 0x10003088
	branch edx == 0x00000000 l1000C53C
// DataOut: bh bl cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C52C:
	word32 esi_39 = edx
	edi_10 = edx
// DataOut: bh bl cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x10003088 esi:0x00000000 -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000C533:
	esi_39 = esi_50 + 0x00000001
	word32 esi_50 = esi_39
	branch Mem0[esi_50:byte] != 0x00 l1000C533
// DataOut: bh bl cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx esi:<invalid> edx:edx + 0x00000001 al:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000C53A:
	esi_22 = esi_39 - (edx + 0x00000001)
// DataOut: bh bl cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx esi:<invalid> edx:edx + 0x00000001 al:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000C53C:
	Mem26[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] & 0x00000000
	Mem30[ecx + 0x0000000C:word32] = Mem26[ecx + 0x0000000C:word32] & 0x00000000
	Mem33[ecx:word32] = edi_10
	Mem36[ecx + 0x00000008:word32] = esi_22 + 0x00000001
	return
// DataOut: bh bl cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> edx:edx + 0x00000001 al:<invalid> -8(fp):edi -4(fp):esi

fn1000C51D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi eax:<invalid> edx:edx + 0x00000001 al:<invalid> -8(fp):edi -4(fp):esi



word32 fn1000C54F(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: al eax edx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000C54F_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000C54F:
	word32 eax_21
	word32 eax_11 = dwArg04 | dwArg08
	branch eax_11 == 0x00000000 l1000C586
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32) Stack +0008(32)

l1000C55C:
	eax_11 = Mem0[ecx + 0x0000000C:word32] & dwArg08
	word32 edx_41 = Mem0[ecx + 0x00000008:word32] & dwArg04 | eax_11
	*edxOut = edx_41
	branch edx_41 == 0x00000000 l1000C582
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp
// LocalsOut: Stack +0004(32) Stack +0008(32)

l1000C56C:
	eax_11 = Mem0[ecx + 0x00000010:word32] & dwArg04
	word32 edx_56 = Mem0[ecx + 0x00000014:word32] & dwArg08
	*edxOut = edx_56
	branch eax_11 != Mem0[ecx + 0x00000010:word32] l1000C582
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -4(fp):ebp

l1000C57D:
	branch edx_56 == Mem0[ecx + 0x00000014:word32] l1000C586
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -4(fp):ebp

l1000C586:
	eax_21 = DPB(eax_11, 0x01, 0) (alias)
// DataOut: al cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -4(fp):ebp

l1000C582:
	eax_21 = DPB(eax_11, 0x00, 0) (alias)
// DataOut: al cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -4(fp):ebp

l1000C588:
	return eax_21
// DataOut: al cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> al:<invalid> edx:<invalid> -4(fp):ebp

fn1000C54F_exit:
// DataOut: al eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> al:<invalid> edx:<invalid> -4(fp):ebp



void fn1000C58C(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: ebx edi esi esp
fn1000C58C_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C58C:
	word32 esi_12 = 0x00000000
	word32 edi_15 = 0x10003338
	branch edx == 0x00000000 l1000C5B4
// DataOut: bx cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C59E:
	word32 esi_40 = edx
	edi_15 = edx
// DataOut: bx cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x10003338 ebx:0x00000000 esi:0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1000C5A5:
	esi_40 = esi_52 + 0x00000002
	word32 esi_52 = esi_40
	branch Mem0[esi_52:word16] != 0x0000 l1000C5A5
// DataOut: bx cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:0x00000000 esi:<invalid> edx:edx + 0x00000002 ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1000C5B0:
	esi_12 = esi_40 - (edx + 0x00000002) >> 0x00000001
// DataOut: cs ds ebp ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:0x00000000 esi:<invalid> edx:edx + 0x00000002 ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1000C5B4:
	Mem28[ecx:word32] = edi_15
	Mem35[ecx + 0x00000004:word32] = 0x00000000
	Mem36[ecx + 0x0000000C:word32] = 0x00000000
	Mem37[ecx + 0x00000008:word32] = esi_12 * 0x00000002 + 0x00000002
	return
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:0x00000000 esi:<invalid> edx:edx + 0x00000002 ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1000C58C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebx:ebx esi:esi eax:<invalid> edx:edx + 0x00000002 ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn1000C640(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: eax edx esi
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi rax rcx rdx rsi si sil
// Preserved: ebp edi esp
fn1000C640_entry:
	*esiOut = esi
// DataOut: bl bx cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C640:
	word32 eax_34
	word32 edi_3 = edi
	word32 ebp_35 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edx_15 = Mem0[ecx:word32]
	*edxOut = edx_15
	eax_34 = eax_13
	branch edx_15 == 0x00000000 l1000C66B
// DataOut: bl bx cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000C656:
	Mem48[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 esp_58
	word32 edi_59
	word32 ebp_60
	word32 ecx_61
	word32 eax_62
	byte SZO_63
	byte C_64
	word32 edx_65
	byte Z_66
	word32 esi_67
	word32 ebx_68
	selector es_69
	selector ds_70
	call Mem48[0x100323BC:word32] (retsize: 4; depth: 20)
		uses: C_50,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_53,dwLoc10_55,eax_51,ebp_7,ebx,ecx_57,edi_3,edx_15,es,esi_56,esp_54,SZO_49,Z_17
		defs: C_64,ds_70,eax_62,ebp_60,ebx_68,ecx_61,edi_59,edx_65,es_69,esi_67,esp_58,SZO_63,Z_66
	word32 esp_71
	word32 ecx_74
	byte SZO_76
	byte C_77
	byte Z_79
	word32 esi_80
	call esi_67 (retsize: 4; depth: 4)
		uses: C_64,ds_70,dwLoc04_6,dwLoc08_14,dwLoc0C_53,dwLoc10_55,eax_62,ebp_60,ebx_68,ecx_61,edi_59,edx_65,es_69,esi_67,esp_58,SZO_63,Z_66
		defs: C_77,ds_83,eax_75,ebp_73,ebx_81,ecx_74,edi_72,edx_78,es_82,esi_80,esp_71,SZO_76,Z_79
	*esiOut = Mem48[esp_71:word32]
// DataOut: bl bx cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000C66B:
	word32 ecx_40
	return fn1002F420(eax_34, eax_13 ^ fp - 0x00000004, edx_15, ebx, ebp_35, esi, edi_3, es, ds, out ecx_40)
// DataOut: bl bx cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1000C640_exit:
// DataOut: eax edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp



void DllGetClassObject(word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
DllGetClassObject_entry:
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000C680:
	Mem23[dwArg0C:word32] = Mem0[dwArg0C:word32] & 0x00000000
	word32 esi_29 = fn1000C851(edx, ebx, edi, es, ds)
	Mem31[esi_29:word32] = Mem23[esi_29:word32] & 0x00000000
	word32 ecx_33 = 0x10030420
	branch true l1000C6E2
// DataOut: cs ds ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32)

l1000C6A4:
// DataOut: cs ds ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:0x10030420 eax:0x100315A0 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1000C6A7:
	word32 eax_69 = Mem31[ecx_33:word32]
	branch eax_69 == 0x00000000 l1000C6D7
// DataOut: cs ds eax ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1000C6AD:
	word32 ebx_81 = Mem31[eax_69 + 0x00000004:word32]
	word32 edx_82 = 0x00000000
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1000C6B2:
	branch Mem31[ebx_81 + edx_82 * 0x00000004:word32] != Mem31[dwArg04 + edx_82 * 0x00000004:word32] l1000C6D7
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1000C6D7:
	ecx_33 = ecx_33 + 0x00000004
	branch ecx_33 <u 0x10030430 l1000C6A7
// DataOut: cs ds ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1000C6E2:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000C6BA:
	edx_82 = edx_82 + 0x00000001
	branch edx_82 != 0x00000004 l1000C6B2
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1000C6C0:
	Mem93[fp - 0x00000018:word32] = esi_29
	Mem96[fp - 0x0000001C:word32] = Mem93[ecx_33:word32]
	Mem102[fp - 0x00000020:word32] = dwArg08
	fn1000C8B4(fp - 0x00000008, es, ds, dwArg00, dwArg04, dwArg08)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000C6E7:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

DllGetClassObject_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void DllCanUnloadNow(word32 edx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi esp rax rcx rdi rsi rsp si sil sp spl
// Preserved: esp
DllCanUnloadNow_entry:
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000C700:
	fn1000C851(edx, ebx, edi, es, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

DllCanUnloadNow_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid>



word32 fn1000C712(word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es fs gs ss
// LiveOut: eax ebp esi esp
// Trashed: SCZO ah al ax bp bpl ch cl cx di dil eax ebp ecx edi esi esp rax rbp rcx rdi rsi rsp si sil sp spl
// Preserved: edi
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000C712_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000C712:
	word32 esp_10 = fp - 0x00000008
	branch dwArg08 == 0x00000000 l1000C736
// DataOut: cs ds eax ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000C736:
	word32 edi_62
	word32 ebp_63
	word32 eax_64
	word32 esi_65
	byte SZO_66
	byte C_67
	byte SCZO_68
	byte Z_69
	word32 edx_70
	word32 ebx_71
	selector es_72
	selector ds_73
	call api-ms-win-eventing-provider-l1-1-0.dll!EventUnregister (retsize: 4; depth: 20)
		uses: C,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_55,dwLoc10_58,eax_14,ebp_7,ebx,edi_3,edx,es,esi_13,esp_57,SCZO_15,SZO,Z_16
		defs: C_67,ds_73,eax_64,ebp_63,ebx_71,edi_62,edx_70,es_72,esi_65,esp_61,SCZO_68,SZO_66,Z_69
	Mem74[0x10031018:word32] = 0x00000000
	Mem75[0x1003101C:word32] = 0x00000000
	Mem76[0x10031000:word32] = 0x00000000
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -8(fp):esi -4(fp):ebp

l1000C721:
	branch dwArg08 != 0x00000001 l1000C75A
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1000C726:
	DisableThreadLibraryCalls(dwArg04)
	fn1000C402(edx, ebx, es, ds)
	esp_10 = fp - 0x00000008
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -8(fp):esi -4(fp):ebp

l1000C75A:
	word32 esi_32
	*esiOut = Mem0[esp_10:word32]
	word32 ebp_34
	*ebpOut = Mem0[esp_10 + 0x00000004:word32]
	return 0x00000001
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1000C712_exit:
// DataOut: eax ebp esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



void fn1000C80F(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: edi esp
fn1000C80F_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C80F:
	Mem7[ecx:word32] = 0x10001068
	fn1000CA28(edx, ebx, esi, es, ds)
	Mem15[0x10031478:word32] = Mem7[0x10031478:word32] & 0x00000000
	Mem18[0x10031598:byte] = 0x00
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1000C80F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -4(fp):ecx



word32 fn1000C851(word32 edx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi esp rax rcx rdi rsi rsp si sil sp spl
// Preserved: edi esp
fn1000C851_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000C851:
	branch Mem0[0x1003159C:word32] <= Mem0[Mem0[Mem0[fs:0x0000002C:word32] + Mem0[0x10031410:word32] * 0x00000004:word32] + 0x00000004:word32] l1000C876
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1000C873:
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edi:0x100315A0 -4(fp):edi
// LocalsOut: fp(32) Local -0004(32)

l1000C87A:
	fn1002F5AD(edx, ebx, 0x100315A0, es, ds, 0x1003159C)
	branch Mem0[0x1003159C:word32] != 0xFFFFFFFF l1000C875
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edi:0x100315A0 -4(fp):edi
// LocalsOut: Local -0004(32)
// Terminates process

l1000C890:
	Mem48[fp - 0x0000000C:word32] = 0x10030270
	Mem49[0x10031478:word32] = 0x100315A0
	Mem50[0x100315A0:word32] = 0x10001068
	word32 esi_52
	word32 ebx_53 = fn1002F782(edx, ebx, 0x1003159C, 0x100315A0, es, ds, dwArg00, out esi_52)
	Mem55[fp - 0x00000010:word32] = esi_52
	fn1002F56C(edx, ebx_53, ebp, esi_52, 0x100315A0, es, ds, dwArg00)
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> esp:esp + 0x00000004 -12(fp):0x1003159C -8(fp):esi -4(fp):edi
// Terminates process

l1000C875:
	esi = Mem0[fp - 0x00000008:word32]
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: ecx:<invalid> esp:<invalid> -12(fp):0x1003159C -8(fp):esi -4(fp):edi

l1000C876:
	return esi
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:0x100315A0 esi:<invalid> -12(fp):0x1003159C -8(fp):esi -4(fp):edi

fn1000C851_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:0x100315A0 ecx:<invalid> edi:<invalid> esi:<invalid> -12(fp):0x1003159C -8(fp):esi -4(fp):edi



void fn1000C8B4(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0008(32) Stack +000C(32)
fn1000C8B4_entry:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l1000C8B4:
	word32 ebp_128
	word32 edx_105
	selector es_109
	selector ds_110
	word32 esp_129
	word32 eax_100
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem29[dwArg0C:word32] = 0x00000000
	branch Mem29[Mem29[dwArg08 + 0x0000000C:word32]:word32] == 0x00000000 l1000C92F
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Stack +000C(32)

l1000C8E0:
	AcquireSRWLockShared(0x10031474)
	word32 eax_298 = Mem29[dwArg08 + 0x0000000C:word32]
	branch Mem29[eax_298:word32] == 0x00000000 l1000C924
// DataOut: cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Stack +000C(32)

l1000C924:
	ReleaseSRWLockShared(0x10031474)
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -32(fp):0x10031474 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Stack +000C(32)

l1000C92F:
	word32 esp_81
	word32 edi_82
	word32 ebp_83
	byte SCZO_84
	word32 eax_85
	byte SZO_86
	byte C_87
	word32 ebx_88
	word32 esi_89
	word32 edx_90
	byte Z_91
	word32 ecx_92
	byte S_93
	selector es_94
	selector ds_95
	call Mem29[0x100323BC:word32] (retsize: 4; depth: 48)
		uses: C,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_63,ebp_7,ebx_17,ecx_70,edi_25,edx,es,esi_62,esp_74,S,SCZO_31,SZO,Z_32
		defs: C_87,ds_95,eax_85,ebp_83,ebx_88,ecx_92,edi_82,edx_90,es_94,esi_89,esp_81,S_93,SCZO_84,SZO_86,Z_91
	byte SCZO_99
	byte SZO_101
	byte C_102
	word32 ebx_103
	word32 esi_104
	byte Z_106
	word32 ecx_107
	byte S_108
	word32 edi_163
	call esi_89 (retsize: 4; depth: 4)
		uses: C_87,ds_95,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_85,ebp_83,ebx_88,ecx_92,edi_82,edx_90,es_94,esi_89,esp_81,S_93,SCZO_84,SZO_86,Z_91
		defs: C_102,ds_110,eax_100,ebp_98,ebx_103,ecx_107,edi_97,edx_105,es_109,esi_104,esp_96,S_108,SCZO_99,SZO_101,Z_106
	branch eax_100 < 0x00000000 l1000C9D4
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -32(fp):0x10031474 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Stack +000C(32)

l1000C94E:
	word32 edi_124
	branch (Mem29[edx:byte] & 0x04) != 0x00 l1000C9CA
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C956:
	word32 esp_169
	Mem151[esp_129 - 0x00000004:word32] = 0x10031474
	AcquireSRWLockExclusive(Mem151[esp_129 - 0x00000004:PSRWLOCK])
	word32 eax_154 = Mem151[Mem151[ebx_103 + 0x0000000C:word32]:word32]
	branch eax_154 != 0x00000000 l1000C97A
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:edx ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C97A:
	Mem256[esp_129 - 0x00000004:word32] = eax_154
	word32 eax_257 = DecodePointer(Mem256[esp_129 - 0x00000004:PVOID])
	Mem261[esp_129 - 0x00000004:word32] = eax_257
	word32 esp_265
	word32 edi_266
	word32 ebp_267
	byte SCZO_268
	word32 eax_269
	byte SZO_270
	byte C_271
	word32 ebx_272
	word32 esi_273
	word32 edx_274
	byte Z_275
	word32 ecx_276
	byte S_277
	selector es_278
	selector ds_279
	call Mem261[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_157,ds_110,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_257,ebp_98,ebx_103,ecx_264,edi_259,edx_105,es_109,esi_263,esp_260,S_112,SCZO_99,SZO_155,Z_156
		defs: C_271,ds_279,eax_269,ebp_267,ebx_272,ecx_276,edi_266,edx_274,es_278,esi_273,esp_265,S_277,SCZO_268,SZO_270,Z_275
	byte SCZO_283
	word32 eax_284
	byte SZO_285
	byte C_286
	word32 ebx_287
	word32 esi_288
	byte Z_290
	word32 ecx_291
	byte S_292
	call esi_273 (retsize: 4; depth: 4)
		uses: C_271,ds_279,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_269,ebp_267,ebx_272,ecx_276,edi_266,edx_274,es_278,esi_273,esp_265,S_277,SCZO_268,SZO_270,Z_275
		defs: C_286,ds_294,eax_284,ebp_282,ebx_287,ecx_291,edi_281,edx_289,es_293,esi_288,esp_280,S_292,SCZO_283,SZO_285,Z_290
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C96A:
	Mem250[esp_129 - 0x00000004:word32] = 0x00000000
	Mem254[Mem250[ebx_103 + 0x0000000C:word32]:word32] = EncodePointer(Mem250[esp_129 - 0x00000004:PVOID])
	esp_169 = esp_129
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C993:
	word32 esp_170 = esp_169 - 0x00000004
	Mem171[esp_170:word32] = 0x10031474
	ReleaseSRWLockExclusive(Mem171[esp_170:PSRWLOCK])
	esp_129 = esp_170 + 0x00000004
	branch edi_163 == 0x00000000 l1000C9CA
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C9CA:
	edi_124 = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C9A2:
	Mem178[esp_170:word32] = 0x00000000
	word32 esp_182
	word32 edi_183
	word32 ebp_184
	byte SCZO_185
	word32 eax_186
	byte SZO_187
	byte C_188
	word32 ebx_189
	word32 esi_190
	word32 edx_191
	byte Z_192
	word32 ecx_193
	byte S_194
	selector es_195
	selector ds_196
	call Mem178[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_175,ds_158,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_176,ebp_168,ebx_165,ecx_181,edi_163,edx_161,es_159,esi_180,esp_177,S_160,SCZO_162,SZO_173,Z_174
		defs: C_188,ds_196,eax_186,ebp_184,ebx_189,ecx_193,edi_183,edx_191,es_195,esi_190,esp_182,S_194,SCZO_185,SZO_187,Z_192
	word32 esp_197
	word32 edi_198
	word32 ebp_199
	byte SCZO_200
	word32 eax_201
	byte SZO_202
	byte C_203
	word32 ebx_204
	word32 esi_205
	word32 edx_206
	byte Z_207
	word32 ecx_208
	byte S_209
	selector es_210
	selector ds_211
	call esi_190 (retsize: 4; depth: 4)
		uses: C_188,ds_196,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_186,ebp_184,ebx_189,ecx_193,edi_183,edx_191,es_195,esi_190,esp_182,S_194,SCZO_185,SZO_187,Z_192
		defs: C_203,ds_211,eax_201,ebp_199,ebx_204,ecx_208,edi_198,edx_206,es_210,esi_205,esp_197,S_209,SCZO_200,SZO_202,Z_207
	Mem214[esp_197 - 0x00000004:word32] = 0x00000000
	word32 esp_218
	word32 edi_219
	word32 ebp_220
	byte SCZO_221
	word32 eax_222
	byte SZO_223
	byte C_224
	word32 ebx_225
	word32 esi_226
	word32 edx_227
	byte Z_228
	word32 ecx_229
	byte S_230
	selector es_231
	selector ds_232
	call Mem214[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_203,ds_211,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_212,ebp_199,ebx_204,ecx_217,edi_198,edx_206,es_210,esi_216,esp_213,S_209,SCZO_200,SZO_202,Z_207
		defs: C_224,ds_232,eax_222,ebp_220,ebx_225,ecx_229,edi_219,edx_227,es_231,esi_226,esp_218,S_230,SCZO_221,SZO_223,Z_228
	byte SCZO_236
	word32 eax_237
	byte SZO_238
	byte C_239
	word32 ebx_240
	word32 esi_241
	byte Z_243
	word32 ecx_244
	byte S_245
	call esi_226 (retsize: 4; depth: 4)
		uses: C_224,ds_232,dwLoc04_6,dwLoc08_12,dwLoc0C_28,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_65,dwLoc24_69,dwLoc28_72,dwLoc2C_75,eax_222,ebp_220,ebx_225,ecx_229,edi_219,edx_227,es_231,esi_226,esp_218,S_230,SCZO_221,SZO_223,Z_228
		defs: C_239,ds_247,eax_237,ebp_235,ebx_240,ecx_244,edi_234,edx_242,es_246,esi_241,esp_233,S_245,SCZO_236,SZO_238,Z_243
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000C9CD:
	Mem131[dwArg0C:word32] = edi_124
	eax_100 = 0x00000000
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000C8F2:
	word32 eax_304 = DecodePointer(Mem29[eax_298:word32])
	word32 esp_318
	word32 edi_319
	word32 ebp_320
	byte SCZO_321
	word32 eax_322
	byte SZO_323
	byte C_324
	word32 ebx_325
	word32 esi_326
	word32 edx_327
	byte Z_328
	word32 ecx_329
	byte S_330
	selector es_331
	selector ds_332
	call Mem29[0x100323BC:word32] (retsize: 4; depth: 44)
		uses: C,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_306,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_308,dwLoc24_311,dwLoc28_314,dwLoc2C,eax_304,ebp_7,ebx_17,ecx_316,edi_25,edx,es,esi_315,esp_313,S,SCZO_299,SZO,Z_300
		defs: C_324,ds_332,eax_322,ebp_320,ebx_325,ecx_329,edi_319,edx_327,es_331,esi_326,esp_318,S_330,SCZO_321,SZO_323,Z_328
	word32 esp_333
	word32 edi_334
	byte SCZO_336
	word32 eax_337
	byte SZO_338
	byte C_339
	word32 ebx_340
	word32 esi_341
	byte Z_343
	word32 ecx_344
	byte S_345
	call esi_326 (retsize: 4; depth: 4)
		uses: C_324,ds_332,dwLoc04_6,dwLoc08_12,dwLoc0C_306,dwLoc10_27,dwLoc14_15,dwLoc18_20,dwLoc1C_24,dwLoc20_308,dwLoc24_311,dwLoc28_314,dwLoc2C,eax_322,ebp_320,ebx_325,ecx_329,edi_319,edx_327,es_331,esi_326,esp_318,S_330,SCZO_321,SZO_323,Z_328
		defs: C_339,ds_347,eax_337,ebp_335,ebx_340,ecx_344,edi_334,edx_342,es_346,esi_341,esp_333,S_345,SCZO_336,SZO_338,Z_343
	Mem349[esp_333 - 0x00000004:word32] = 0x10031474
	ReleaseSRWLockShared(Mem349[esp_333 - 0x00000004:PSRWLOCK])
	esp_129 = esp_333
	eax_100 = eax_337
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -32(fp):0x10031474 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000C9D4:
	word32 esp_49 = esp_129 + 0x00000004
	word32 ecx_57
	fn1002F420(eax_100, eax_11 ^ fp - 0x00000004, edx_105, Mem29[esp_49 + 0x00000004:word32], ebp_128, Mem29[esp_49:word32], Mem29[esp_129:word32], es_109, ds_110, out ecx_57)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000C8B4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -44(fp):edx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1000CA28(word32 edx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp edi esi esp
fn1000CA28_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CA28:
	word32 ebp_140 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 edi_139 = 0x10030420
	branch true l1000CAAA
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000CA46:
	word32 esp_108 = fp - 0x00000010
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x10030420 ebp:fp - 0x00000004 eax:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CA47:
	branch Mem0[edi_139:word32] == 0x00000000 l1000CA9E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CA4C:
	branch Mem0[Mem0[Mem0[edi_139:word32] + 0x0000000C:word32]:word32] == 0x00000000 l1000CA9E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CA5B:
	word32 esp_96 = esp_108 - 0x00000004
	Mem97[esp_96:word32] = 0x10031474
	AcquireSRWLockExclusive(Mem97[esp_96:PSRWLOCK])
	word32 eax_99 = Mem97[edi_139:word32]
	Mem101[esp_96:word32] = 0x10031474
	word32 eax_102 = Mem101[eax_99 + 0x0000000C:word32]
	word32 esi_104 = Mem101[eax_102:word32]
	branch esi_104 != 0x00000000 l1000CA7E
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CA7E:
	Mem110[eax_102:word32] = Mem101[eax_102:word32] & 0x00000000
	ReleaseSRWLockExclusive(Mem110[esp_96:PSRWLOCK])
	Mem115[esp_96:word32] = esi_104
	word32 eax_116 = DecodePointer(Mem115[esp_96:PVOID])
	Mem119[esp_96:word32] = eax_116
	word32 esp_123
	word32 edi_124
	word32 ebp_125
	word32 ecx_126
	word32 eax_127
	byte SZO_128
	byte C_129
	byte SCZO_130
	word32 esi_131
	byte Z_132
	byte al_133
	word32 edx_134
	word32 ebx_135
	selector es_136
	selector ds_137
	call Mem119[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_103,C_112,ds_58,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_55,eax_116,ebp_69,ebx_60,ecx_122,edi_63,edx_61,es_59,esi_121,esp_118,SCZO_94,SZO_111,Z_106
		defs: al_133,C_129,ds_137,eax_127,ebp_125,ebx_135,ecx_126,edi_124,edx_134,es_136,esi_131,esp_123,SCZO_130,SZO_128,Z_132
	word32 ecx_141
	word32 eax_142
	byte SZO_143
	byte C_144
	byte SCZO_145
	word32 esi_146
	byte Z_147
	byte al_148
	call esi_131 (retsize: 4; depth: 4)
		uses: al_133,C_129,ds_137,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_55,eax_127,ebp_125,ebx_135,ecx_126,edi_124,edx_134,es_136,esi_131,esp_123,SCZO_130,SZO_128,Z_132
		defs: al_148,C_144,ds_152,eax_142,ebp_140,ebx_150,ecx_141,edi_139,edx_149,es_151,esi_146,esp_138,SCZO_145,SZO_143,Z_147
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CA76:
	ReleaseSRWLockExclusive(Mem101[esp_96:PSRWLOCK])
	esp_108 = esp_96 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CA9E:
	edi_139 = edi_139 + 0x00000004
	branch edi_139 <u 0x10030434 l1000CA47
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CAA9:
	esi = Mem0[esp_108:word32]
	esp_15 = esp_108 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CAAA:
	word32 eax_39 = -Mem0[0x1003147C:word32]
	word32 ecx_49
	fn1002F420(DPB(eax_39, 0x00 - (eax_39 == 0x00000000) + 0x01, 0), eax_13 ^ fp - 0x00000004, edx, ebx, ebp_140, esi, Mem0[esp_15:word32], es, ds, out ecx_49)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1000CA28_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



word32 fn1000CAD8(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg0C, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +000C(32)
fn1000CAD8_entry:
	*edxOut = edx
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32) Stack +000C(32)

l1000CAD8:
	word32 eax_42 = RegGetValueW(ecx, edx, dwArg04, 0x10000012, fp - 0x0000000C, fp - 0x00000008, fp - 0x00000010)
	word32 ecx_104
	*ecxOut = eax_42
	word16 cx_151 = (word16) eax_42
	branch eax_42 != 0x00000000 l1000CB51
// DataOut: bl cs cx ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Stack +000C(32)

l1000CB51:
	branch eax_42 != 0x000000EA l1000CB5C
// DataOut: bl cs cx ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:<invalid> -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):fp - 0x00000010 -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CB59:
	*ecxOut = 0x0000000D
	cx_151 = 0x000D (alias)
// DataOut: bl cs cx ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:<invalid> -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):fp - 0x00000010 -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CB5C:
	branch ecx_104 <= 0x00000000 l1000CB69
// DataOut: bl cs cx ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:<invalid> -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):<invalid> -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CB0D:
	byte Z_118
	cx_151 = 0x000D (alias)
	branch (dwLoc0C & 0x00000000) != 0x00000004 l1000CB32
// DataOut: bl cs cx ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:<invalid> -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):fp - 0x00000010 -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +000C(32)

l1000CB32:
	branch false l1000CB60
// DataOut: bl cs cx ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:0x0000000D -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x0000000D -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0) Stack +000C(32)

l1000CB37:
	word32 edx_133
	*edxOut = 0x00000031
	branch 0x0030 == wLoc08 l1000CB49
// DataOut: bl cs cx ds dx ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:0x0000000D -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x0000000D -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0) Stack +000C(32)

l1000CB43:
	branch 0x0031 != wLoc08 l1000CB60
// DataOut: bl cs cx ds dx ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:0x00000030 esi:0x00000004 ecx:0x0000000D edx:0x00000031 -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x00000031 -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0) Stack +000C(32)

l1000CB49:
	Z_118 = cond(0x0031 - wLoc08) (alias)
// DataOut: bl cs ds ebx edx es fs gs ss
// DataOut (flags): Z
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:0x00000030 esi:0x00000004 ecx:0x0000000D edx:0x00000031 -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x00000031 -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32)

l1000CB15:
	branch dwLoc08 == 0x00000000 l1000CB21
// DataOut: bl cs cx ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:0x0000000D -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x0000000D -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32)

l1000CB1C:
	branch dwLoc08 != 0x00000001 l1000CB60
// DataOut: bl cs cx ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:0x0000000D -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x0000000D -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32)

l1000CB60:
	*ecxOut = (word32) cx_151 | 0x80070000
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:<invalid> edx:0x00000031 -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):<invalid> -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CB21:
	Z_118 = cond(dwLoc08 - 0x00000001) (alias)
// DataOut: bl cs ds ebx edx es fs gs ss
// DataOut (flags): Z
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:0x0000000D -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):0x0000000D -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32)

l1000CB26:
	Mem103[dwArg0C:word32] = (word32) Z_118
	*ecxOut = 0x00000000
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:0x00000000 edx:0x00000031 -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):<invalid> -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CB69:
	return ecx_104
// DataOut: bl cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x00000004 ecx:<invalid> cl:<invalid> edx:0x00000031 -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):<invalid> -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp

fn1000CAD8_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> cl:<invalid> edx:0x00000031 -48(fp):ecx -44(fp):edx -40(fp):<invalid> -36(fp):0x10000012 -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000008 -24(fp):<invalid> -20(fp):esi -16(fp):0x00000004 -12(fp):<invalid> -4(fp):ebp



word32 fn1000CB72(word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000CB72_entry:
// DataOut: bl cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000CB72:
	word32 eax_32 = RegGetValueW(0x80000002, edx, dwArg04, 0x00000010, 0x00000000, dwArg08, fp - 0x00000008)
	word16 ax_33 = (word16) eax_32
	branch eax_32 <= 0x00000000 l1000CBA5
// DataOut: ax bl cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CB9D:
	eax_32 = (word32) ax_33 | 0x80070000
// DataOut: bl cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):0x80000002 -32(fp):edx -28(fp):<invalid> -24(fp):0x00000010 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):fp - 0x00000008 -8(fp):0x00000004 -4(fp):ebp
// LocalsOut: fp(32)

l1000CBA5:
	return eax_32
// DataOut: bl cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):0x80000002 -32(fp):edx -28(fp):<invalid> -24(fp):0x00000010 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):fp - 0x00000008 -8(fp):0x00000004 -4(fp):ebp

fn1000CB72_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> -36(fp):0x80000002 -32(fp):edx -28(fp):<invalid> -24(fp):0x00000010 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):fp - 0x00000008 -8(fp):0x00000004 -4(fp):ebp



word32 fn1000CBB3(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & blOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: bl eax edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1000CBB3_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000CBB3:
	__align(fp - 0x00000004)
	Mem32[dwArg04:word32] = 0x00000000
	word32 esp_185 = fp - 0x0000008C
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1000CBF1:
	word32 esp_38 = esp_185 - 0x00000004
	Mem39[esp_38:word32] = esp_185 + 0x00000010
	Mem41[esp_38 - 0x00000004:word32] = 0x00000001
	Mem44[esp_38 - 0x00000008:word32] = esp_38 + 0x0000001C
	Mem46[esp_38 - 0x0000000C:word32] = 0x00000000
	word32 esp_47
	word32 edi_48
	word32 ebp_49
	byte SCZO_50
	word32 eax_51
	byte SZO_52
	byte C_53
	word32 ebx_54
	word32 esi_55
	word32 edx_56
	byte Z_57
	byte SO_58
	word16 si_59
	byte S_60
	byte CZ_61
	word32 ecx_62
	selector es_63
	selector ds_64
	byte bl_65
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaOpenPolicy (retsize: 4; depth: 4)
		uses: C_21,dwLoc04_6,dwLoc08_12,dwLoc60_35,dwLoc64_33,dwLoc68_30,dwLoc6C_31,dwLoc70_29,dwLoc74_22,dwLoc84_15,dwLoc88_18,dwLoc8C_24,eax_42,ebp_7,ebx_19,edi_26,edx,esi_27,esp_45,si_28,SZO_20
		defs: bl_65,C_53,CZ_61,ds_64,eax_51,ebp_49,ebx_54,ecx_62,edi_48,edx_56,es_63,esi_55,esp_47,S_60,SCZO_50,si_59,SO_58,SZO_52,Z_57
	Mem66[esp_47 + 0x00000014:word32] = eax_51
	branch eax_51 == 0xC0020017 l1000CC16
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC0F:
	branch eax_51 != 0xC0020018 l1000CC26
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC16:
	branch esi_55 >= 0xFFFFFFF7 l1000CC26
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC26:
	Mem70[esp_47 - 0x00000004:word32] = eax_51
	word32 esp_71
	word32 edi_72
	word32 ebp_73
	byte SCZO_74
	word32 eax_75
	byte SZO_76
	byte C_77
	word32 ebx_78
	word32 esi_79
	byte Z_81
	byte SO_82
	word16 si_83
	byte S_84
	byte CZ_85
	word32 ecx_86
	selector es_87
	selector ds_88
	byte bl_89
	word32 edx_110
	call ntdll.dll!RtlNtStatusToDosError (retsize: 4; depth: 4)
		uses: bl_65,C_53,CZ_61,ds_64,dwLoc04_6,dwLoc08_12,dwLoc60_35,dwLoc64_33,dwLoc68_30,dwLoc6C_31,dwLoc70_29,dwLoc74_22,dwLoc84_15,dwLoc88_18,dwLoc8C_24,eax_51,ebp_49,ebx_54,ecx_62,edi_48,edx_56,es_63,esi_55,esp_69,S_60,SCZO_67,si_59,SO_58,SZO_52,Z_68
		defs: bl_89,C_77,CZ_85,ds_88,eax_75,ebp_73,ebx_78,ecx_86,edi_72,edx_80,es_87,esi_79,esp_71,S_84,SCZO_74,si_83,SO_82,SZO_76,Z_81
	word32 esi_104 = eax_75
	word16 si_91 = (word16) eax_75
	byte S_101 = cond(eax_75)
	branch eax_75 <= 0x00000000 l1000CC3E
// DataOut: cs ds ebp edi edx es esi esp fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC33:
	word32 esi_168 = (word32) si_91
	esi_104 = esi_168 | 0x80070000
	S_101 = cond(esi_168 | 0x80070000) (alias)
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC3E:
	branch S_101 l1000CC48
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC48:
	branch Mem70[0x10031000:word32] <=u 0x00000002 l1000CC9D
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000CC51:
	fn1000C51D(esp_71 + 0x00000050, 0x10002FCC)
	fn1000C51D(esp_71 + 0x00000060, 0x10002FD4)
	Mem144[esp_71 + 0x00000074:word32] = 0x00000000
	Mem145[esp_71 + 0x00000070:word32] = esp_71 + 0x00000014
	Mem146[esp_71 + 0x00000078:word32] = 0x00000004
	Mem147[esp_71 + 0x0000007C:word32] = 0x00000000
	Mem151[esp_71 - 0x00000004:word32] = esp_71 + 0x00000030
	Mem153[esp_71 - 0x00000008:word32] = 0x00000005
	Mem155[esp_71 - 0x0000000C:word32] = 0x00000000
	Mem157[esp_71 - 0x00000010:word32] = 0x00000000
	word32 ecx_162
	word32 edi_165
	fn1000C491(0x10031000, 0x10007B59, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_162, out edx_110, out esi_104, out edi_165)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CC40:
	Mem136[edi_72:word32] = Mem70[esp_71 + 0x00000010:word32]
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000CC9D:
	word32 ebx_120 = Mem70[esp_71 + 0x00000008:word32]
	word32 edi_115 = Mem70[esp_71:word32]
	*ediOut = edi_115
	word32 esi_117 = Mem70[esp_71 + 0x00000004:word32]
	*esiOut = esi_117
	byte bl_121
	*blOut = (byte) ebx_120
	word32 ecx_126
	return fn1002F420(esi_104, Mem70[esp_71 + 0x00000084:word32] ^ esp_71 + 0x0000000C, edx_110, ebx_120, ebp_73, esi_117, edi_115, es_87, ds_88, out ecx_126)
// DataOut: bl cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp

fn1000CBB3_exit:
// DataOut: bl eax edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp

l1000CC1C:
	Mem184[esp_47 - 0x00000004:word32] = 0x0000000A
	Sleep(Mem184[esp_47 - 0x00000004:DWORD])
	esp_185 = esp_47
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000074 -148(fp):0x00000001 -144(fp):fp - 0x0000007C -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):0x00000018 -112(fp):0x00000000 -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)



word32 fn1000CCB6(selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & blOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: bl eax ecx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn1000CCB6_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32) Local -001C(32) Local -002C(32)

l1000CCB6:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebp_124 = fp - 0x00000004
	byte bl_39
	word32 esi_40
	word32 edx_132
	word32 edi_123
	word32 eax_141 = fn1000CBB3(fp - 0x00000014, fp - 0x00000004, es, ds, fp - 0x00000018, out edx_132, out bl_39, out esi_40, out edi_123)
	word32 esp_122 = fp - 0x00000024
	branch eax_141 < 0x00000000 l1000CD39
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32) Local -001C(32)

l1000CCF5:
	word32 edi_97
	word32 ebp_98
	byte SCZO_99
	word32 eax_100
	byte SZO_101
	byte C_102
	word32 ebx_103
	word32 esi_104
	byte al_105
	word32 edx_106
	word32 ecx_107
	byte bl_108
	byte S_109
	word16 cx_110
	byte Z_111
	byte cl_112
	selector es_113
	selector ds_114
	word32 esp_118
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaQueryInformationPolicy (retsize: 4; depth: 52)
		uses: al_43,bl_39,bLoc0B_22,bLoc0C_35,C_47,cl,cx,ds,dwLoc04_6,dwLoc08_12,dwLoc10_26,dwLoc14_18,dwLoc18,dwLoc20_15,dwLoc24_21,dwLoc28_87,dwLoc2C_89,dwLoc30_93,eax_85,ebp_7,ebx_28,ecx,edi_41,edx_38,es,esi_40,esp_92,S_46,SCZO,SZO_45,Z
		defs: al_105,bl_108,C_102,cl_112,cx_110,ds_114,eax_100,ebp_98,ebx_103,ecx_107,edi_97,edx_106,es_113,esi_104,esp_96,S_109,SCZO_99,SZO_101,Z_111
	branch (fp - 0x0000001C & fp - 0x0000001C) < 0x00000000 l1000CD2B
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -40(fp):fp - 0x00000018 -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32) Local -001C(32)

l1000CD2B:
	Mem182[esi_104:byte] = 0x00
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1000CD08:
	byte bl_153
	bl_153 = bl_108
	branch Mem0[dwLoc1C + 0x00000008:word16] != 0x0000 l1000CD20
// DataOut: bl cl cs cx ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1000CD13:
	bl_153 = bl_108
	branch Mem0[dwLoc1C + 0x00000010:word16] != 0x0000 l1000CD20
// DataOut: bl cl cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1000CD19:
	bl_153 = bl_108
	branch Mem0[dwLoc1C + 0x00000028:word32] != 0x00000000 l1000CD20
// DataOut: bl cl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1000CD1E:
	bl_153 = 0x00
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1000CD20:
	Mem155[esp_118 - 0x00000004:word32] = dwLoc1C
	Mem156[esi_104:byte] = bl_153
	word32 edi_158
	word32 ebp_159
	byte SCZO_160
	word32 eax_161
	byte SZO_162
	byte C_163
	word32 ebx_164
	word32 esi_165
	byte al_166
	word32 edx_167
	word32 ecx_168
	byte bl_169
	byte S_170
	word16 cx_171
	byte Z_172
	byte cl_173
	selector es_174
	selector ds_175
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaFreeMemory (retsize: 4; depth: 4)
		uses: al_147,bl_153,bLoc0B_22,bLoc0C_35,C_117,cl_150,cx_149,ds_114,dwLoc04_6,dwLoc08_12,dwLoc10_26,dwLoc14_18,dwLoc18,dwLoc1C,dwLoc20_15,dwLoc24_21,dwLoc28_87,dwLoc2C_89,dwLoc30_93,eax_146,ebp_98,ebx_103,ecx_148,edi_97,edx_106,es_113,esi_104,esp_154,S_116,SCZO_151,SZO_115,Z_152
		defs: al_166,bl_169,C_163,cl_173,cx_171,ds_175,eax_161,ebp_159,ebx_164,ecx_168,edi_158,edx_167,es_174,esi_165,esp_157,S_170,SCZO_160,SZO_162,Z_172
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:cl al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1000CD2E:
	word32 esp_120 = esp_118 - 0x00000004
	Mem121[esp_120:word32] = dwLoc18
	byte SCZO_125
	word32 eax_126
	byte SZO_127
	byte C_128
	word32 ebx_129
	word32 esi_130
	byte al_131
	word32 ecx_133
	byte bl_134
	byte S_135
	word16 cx_136
	byte Z_137
	byte cl_138
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaClose (retsize: 4; depth: 4)
		uses: al_105,bl_108,bLoc0B_22,bLoc0C_35,C_117,cl_112,cx_110,ds_114,dwLoc04_6,dwLoc08_12,dwLoc10_26,dwLoc14_18,dwLoc18,dwLoc20_15,dwLoc24_21,dwLoc28_87,dwLoc2C_89,dwLoc30_93,eax_100,ebp_98,ebx_103,ecx_107,edi_97,edx_106,es_113,esi_104,esp_120,S_116,SCZO_99,SZO_115,Z_111
		defs: al_131,bl_134,C_128,cl_138,cx_136,ds_140,eax_126,ebp_124,ebx_129,ecx_133,edi_123,edx_132,es_139,esi_130,esp_122,S_135,SCZO_125,SZO_127,Z_137
	eax_141 = 0x00000000
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:cl al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):fp - 0x0000001C -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CD39:
	word32 ebx_73 = Mem0[esp_122 + 0x00000004:word32]
	byte bl_74
	*blOut = (byte) ebx_73
	word32 ecx_76
	return fn1002F420(eax_141, eax_11 ^ fp - 0x00000004, edx_132, ebx_73, ebp_124, Mem0[esp_122:word32], edi_123, es, ds, out ecx_76)
// DataOut: bl cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:cl al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):<invalid> -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp

fn1000CCB6_exit:
// DataOut: bl eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x0000000C -40(fp):<invalid> -36(fp):esi -32(fp):ebx -20(fp):0x0000000C -16(fp):0x00000002 -12(fp):bl -11(fp):al -8(fp):<invalid> -4(fp):ebp



byte fn1000CD49(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut: al
// Trashed: SCZO ah al ax bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: ebp ebx edi esp
fn1000CD49_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000A(0)

l1000CD49:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	memset(fp - 0x00000120, 0x00000000, 0x00000118)
	byte bl_19 = 0x00
	word32 eax_31 = GetVersionExW(fp - 0x00000124)
	branch eax_31 == 0x00000000 l1000CD98
// DataOut: bl cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000A(0) Local -0128(32)

l1000CD91:
	bl_19 = bLoc0A == 0x02
// DataOut: bl cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000128 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -308(fp):fp - 0x00000120 -304(fp):0x00000000 -300(fp):fp - 0x00000124 -296(fp):ebx -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0128(32)

l1000CD98:
	word32 ecx_52
	return (byte) fn1002F420(DPB(eax_31, bl_19, 0), eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_52)
// DataOut: al cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000128 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> bl:Test(EQ,Z) -308(fp):fp - 0x00000120 -304(fp):0x00000000 -300(fp):fp - 0x00000124 -296(fp):ebx -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp

fn1000CD49_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx bl:<invalid> ecx:<invalid> al:Test(EQ,Z) -308(fp):fp - 0x00000120 -304(fp):0x00000000 -300(fp):fp - 0x00000124 -296(fp):ebx -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp



byte fn1000CDA9(selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: al bl ebx ecx edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp edi esp
fn1000CDA9_entry:
	*ecxOut = ecx
	*edxOut = edx
	*ebxOut = ebx
	*esiOut = esi
// DataOut: bl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(0)

l1000CDA9:
	word32 eax_14 = Mem0[0x10031480:word32]
	branch eax_14 != 0x00000000 l1000CDDA
// DataOut: bl cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(0)

l1000CDB9:
	word32 ecx_45
	word32 edx_46
	byte bl_47
	branch fn1000CCB6(es, ds, out ecx_45, out edx_46, out bl_47) < 0x00000000 l1000CDD5
// DataOut: bl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0005(0)

l1000CDD5:
	eax_14 = Mem0[0x10031480:word32]
// DataOut: bl cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> al:<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000CDC5:
	word32 eax_57 = (word32) (bLoc05 == 0x00)
	Mem61[0x10031480:word32] = eax_57 + 0x00000001
	eax_14 = eax_57 + 0x00000001
// DataOut: bl cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> al:<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000CDDA:
	return eax_14 != 0x00000002
// DataOut: al bl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp

fn1000CDA9_exit:
// DataOut: al bl ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> al:Test(NE,Z) ecx:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp



byte fn1000CDE4(ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al edx
// Trashed: SCZO ah al ax bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: ebp ebx edi esp
fn1000CDE4_entry:
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CDE4:
	byte bl_16 = 0x00
	word32 edx_23
	*edxOut = 0x10002FE8
	branch fn1000CB72(0x10002FE8, 0x1000305C, fp - 0x00000008) < 0x00000000 l1000CE0E
// DataOut: bl cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CE07:
	bl_16 = 0xFFFFFFFF == 0x00000000
// DataOut: bl cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 edx:0x10002FE8 -20(fp):0x1000305C -16(fp):fp - 0x00000008 -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000CE0E:
	return bl_16
// DataOut: al cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:0x10002FE8 bl:Test(EQ,Z) -20(fp):0x1000305C -16(fp):fp - 0x00000008 -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

fn1000CDE4_exit:
// DataOut: al edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx edx:0x10002FE8 bl:<invalid> al:Test(EQ,Z) -20(fp):0x1000305C -16(fp):fp - 0x00000008 -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp



word32 fn1000CE15(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax ecx edi edx esi
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1000CE15_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CE15:
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebp_122 = fp - 0x00000004
	word32 edi_121 = 0x00000000
	word32 esp_120 = fp - 0x00000014
	branch CoGetMalloc(0x00000001, fp - 0x0000000C) < 0x00000000 l1000CE65
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000CE3C:
	word32 esp_74
	word32 edi_75
	word32 ebp_76
	word32 ecx_77
	word32 eax_78
	byte SZO_79
	byte C_80
	word32 esi_81
	byte S_82
	word32 edx_83
	word32 ebx_84
	selector es_85
	selector ds_86
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_33,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_19,dwLoc14_21,dwLoc18_68,dwLoc1C_70,eax_66,ebp_7,ebx,ecx_73,edi_28,edx,es,esi_72,esp_69,S_32,SZO_31
		defs: C_80,ds_86,eax_78,ebp_76,ebx_84,ecx_77,edi_75,edx_83,es_85,esi_81,esp_74,S_82,SZO_79
	word32 esp_87
	word32 edi_88
	word32 ebp_89
	word32 ecx_90
	word32 eax_91
	byte SZO_92
	byte C_93
	word32 esi_94
	byte S_95
	word32 edx_96
	word32 ebx_97
	selector es_98
	selector ds_99
	call esi_81 (retsize: 4; depth: 4)
		uses: C_80,ds_86,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_19,dwLoc14_21,dwLoc18_68,dwLoc1C_70,eax_78,ebp_76,ebx_84,ecx_77,edi_75,edx_83,es_85,esi_81,esp_74,S_82,SZO_79
		defs: C_93,ds_99,eax_91,ebp_89,ebx_97,ecx_90,edi_88,edx_96,es_98,esi_94,esp_87,S_95,SZO_92
	Mem103[esp_87 - 0x00000004:word32] = ecx
	word32 esp_107
	word32 edi_108
	word32 ebp_109
	word32 ecx_110
	word32 eax_111
	byte SZO_112
	byte C_113
	word32 esi_114
	byte S_115
	word32 edx_116
	word32 ebx_117
	selector es_118
	selector ds_119
	call Mem103[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_93,ds_99,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_19,dwLoc14_21,dwLoc18_68,dwLoc1C_70,eax_91,ebp_89,ebx_97,ecx_106,edi_101,edx_104,es_98,esi_105,esp_102,S_95,SZO_92
		defs: C_113,ds_119,eax_111,ebp_109,ebx_117,ecx_110,edi_108,edx_116,es_118,esi_114,esp_107,S_115,SZO_112
	word32 ecx_123
	word32 eax_124
	byte SZO_125
	byte C_126
	word32 esi_127
	byte S_128
	call esi_114 (retsize: 4; depth: 4)
		uses: C_113,ds_119,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_19,dwLoc14_21,dwLoc18_68,dwLoc1C_70,eax_111,ebp_109,ebx_117,ecx_110,edi_108,edx_116,es_118,esi_114,esp_107,S_115,SZO_112
		defs: C_126,ds_132,eax_124,ebp_122,ebx_130,ecx_123,edi_121,edx_129,es_131,esi_127,esp_120,S_128,SZO_125
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx -28(fp):0x00000001 -24(fp):fp - 0x0000000C -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CE65:
	word32 edi_50 = Mem0[esp_120:word32]
	*ediOut = edi_50
	word32 esi_55 = Mem0[esp_120 + 0x00000004:word32]
	*esiOut = esi_55
	word32 ecx_57
	return fn1002F420(edi_121, eax_15 ^ fp - 0x00000004, edx, ebx, ebp_122, esi_55, edi_50, es, ds, out ecx_57)
// DataOut: cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1000CE15_exit:
// DataOut: eax ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1000CE77(byte cl, word32 edx, word32 ebx, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cl cs ds ebx edx es fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx rax rcx rdi rdx
// Preserved: edi esi esp
fn1000CE77_entry:
	*edxOut = edx
	*ecxOut = ecx
// DataOut: cl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CE77:
	branch (cl & 0x01) == 0x00 l1000CE95
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CE81:
	word32 ecx_39
	word32 edx_40
	word32 esi_41
	word32 edi_42
	word32 eax_43 = fn1000CE15(Mem0[edx:word32], edx, ebx, es, ds, out ecx_39, out edx_40, out esi_41, out edi_42)
	memset(Mem0[esi_41:word32], 0x00000000, eax_43)
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:edx -4(fp):esi

l1000CE95:
	return 0x00000000
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):esi

fn1000CE77_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):esi



word32 fn1000CE99(byte cl, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cl cs ds ebx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx rax rcx rdi rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1000CE99_entry:
	*edxOut = edx
// DataOut: cl cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000CE99:
	branch (cl & 0x01) == 0x00 l1000CEC6
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000CEA6:
	word32 ecx_44
	word32 edx_45
	word32 esi_46
	word32 edi_47
	word32 eax_48 = fn1000CE15(Mem0[edx:word32], edx, ebx, es, ds, out ecx_44, out edx_45, out esi_46, out edi_47)
	branch eax_48 <=u dwArg04 l1000CEC6
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:edx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1000CEB2:
	memset(Mem0[esi_46:word32] + dwArg04, 0x00000000, eax_48 - dwArg04)
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000CEC6:
	return 0x00000000
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1000CE99_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn1000CECD(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: edi esi esp
fn1000CECD_entry:
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CECD:
	word32 esi_12 = ecx
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CED6:
	esi_12 = esi_44 + 0x00000002
	word32 esi_44 = esi_12
	branch Mem0[esi_44:word16] != 0x0000 l1000CED6
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x00000002 esi:<invalid> ax:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000CEE1:
	word32 ecx_33
	word32 edx_34
	return fn1000FBA7(ecx, es, ds, ecx, esi_12 - (ecx + 0x00000002) >> 0x00000001, edx, out ecx_33, out edx_34)
// DataOut: cs ds eax ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x00000002 esi:<invalid> ax:<invalid> -8(fp):edi -4(fp):esi

fn1000CECD_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ax:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):edi -4(fp):esi



word32 fn1000CEF1(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp edi esp
fn1000CEF1_entry:
// DataOut: bl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CEF1:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	__lock()
	Mem19[ecx + 0x00000004:word32] = __xadd(Mem0[ecx + 0x00000004:word32], eax_13 | 0xFFFFFFFF)
	word32 ebp_39 = fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 eax_18 = eax_13 | 0xFFFFFFFF
	branch Mem19[ecx + 0x00000004:word32] != 0x00000000 l1000CF26
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000CF0E:
	branch ecx == 0x00000000 l1000CF26
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CF12:
	word32 esp_62
	word32 edi_63
	word32 ebp_64
	word32 ecx_65
	word32 eax_66
	byte SZO_67
	byte C_68
	byte SCZO_69
	byte Z_70
	word32 esi_71
	word32 edx_72
	word32 ebx_73
	selector es_74
	selector ds_75
	call Mem19[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_54,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_57,dwLoc14_59,eax_55,ebp_7,ebx,ecx_61,edi_17,edx,es,esi_60,esp_58,SCZO_20,SZO_52,Z_53
		defs: C_68,ds_75,eax_66,ebp_64,ebx_73,ecx_65,edi_63,edx_72,es_74,esi_71,esp_62,SCZO_69,SZO_67,Z_70
	word32 esp_77
	word32 edi_78
	word32 ecx_80
	byte SZO_82
	byte C_83
	byte SCZO_84
	byte Z_85
	word32 esi_86
	call esi_71 (retsize: 4; depth: 4)
		uses: C_68,ds_75,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_57,dwLoc14_59,eax_66,ebp_64,ebx_73,ecx_76,edi_63,edx_72,es_74,esi_71,esp_62,SCZO_69,SZO_67,Z_70
		defs: C_83,ds_90,eax_81,ebp_79,ebx_88,ecx_80,edi_78,edx_87,es_89,esi_86,esp_77,SCZO_84,SZO_82,Z_85
	esi = Mem19[esp_77:word32]
	esp_15 = esp_77 + 0x00000004
// DataOut: bl cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000CF26:
	word32 ecx_47
	fn1002F420(eax_18, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_39, esi, Mem19[esp_15:word32], es, ds, out ecx_47)
	return esi
// DataOut: bl cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -20(fp):0x00000001 -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1000CEF1_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):0x00000001 -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



word32 fn1000CF35(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
fn1000CF35_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CF35:
	fn10010735(ecx + 0x0000001C, edx, es, ds)
	Mem23[ecx + 0x00000034:word32] = 0x00000001
	Mem24[ecx:word32] = 0x100011C0
	Mem25[ecx + 0x00000004:word32] = 0x100011A8
	Mem26[ecx + 0x00000008:word32] = 0x10001198
	Mem27[ecx + 0x0000000C:word32] = 0x10001180
	Mem28[ecx + 0x00000010:word32] = 0x1000116C
	Mem29[ecx + 0x00000014:word32] = 0x10001158
	Mem30[ecx + 0x00000018:word32] = 0x10001144
	Mem31[ecx + 0x0000001C:word32] = 0x10001224
	branch Mem0[0x10031478:word32] == 0x00000000 l1000CF93
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000CF8C:
	__lock()
	Mem67[0x1003147C:word32] = Mem31[0x1003147C:word32] + 0x00000001
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1000CF93:
	Mem36[ecx:word32] = 0x100012C4
	Mem37[ecx + 0x00000004:word32] = 0x100012AC
	Mem39[ecx + 0x00000008:word32] = 0x1000129C
	Mem40[ecx + 0x0000000C:word32] = 0x10001284
	Mem41[ecx + 0x00000010:word32] = 0x10001270
	Mem42[ecx + 0x00000014:word32] = 0x1000125C
	Mem43[ecx + 0x00000018:word32] = 0x10001248
	Mem44[ecx + 0x0000001C:word32] = 0x10001224
	Mem45[ecx + 0x00000038:word32] = 0x00000000
	Mem46[ecx + 0x0000003C:word32] = 0x00000000
	Mem47[ecx + 0x00000040:word32] = 0x00000000
	Mem48[ecx + 0x00000044:word32] = 0x00000000
	Mem51[ecx + 0x00000048:word32] = 0x00000000
	InitializeSRWLock(ecx + 0x0000004C)
	Mem54[ecx + 0x00000050:word32] = 0x00000000
	InitializeSRWLock(ecx + 0x00000054)
	Mem60[ecx + 0x00000058:byte] = 0x00
	return ecx
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1000CF35_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> ebx:ebx eax:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn1000D021(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn1000D021_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000D021:
	Mem12[ecx:word32] = 0x100012C4
	Mem15[ecx + 0x00000004:word32] = 0x100012AC
	Mem16[ecx + 0x00000008:word32] = 0x1000129C
	Mem17[ecx + 0x0000000C:word32] = 0x10001284
	Mem18[ecx + 0x00000010:word32] = 0x10001270
	Mem19[ecx + 0x00000014:word32] = 0x1000125C
	Mem20[ecx + 0x00000018:word32] = 0x10001248
	Mem21[ecx + 0x0000001C:word32] = 0x10001224
	fn1000E200(edx, ebx, es, ds, ecx + 0x00000018)
	word32 ecx_28
	word32 edx_29
	word32 esi_30
	fn1000F276(ecx + 0x00000044, ebx, esi, ecx, es, ds, out ecx_28, out edx_29, out esi_30)
	word32 edx_33
	word32 esi_34
	fn1000C640(ecx + 0x00000040, ebx, esi_30, ecx, es, ds, out edx_33, out esi_34)
	word32 ecx_37
	word32 edx_38
	word32 esi_39
	fn1000F276(ecx + 0x0000003C, ebx, esi_34, ecx, es, ds, out ecx_37, out edx_38, out esi_39)
	word32 ecx_42
	word32 edx_43
	word32 esi_44
	fn1000F276(ecx + 0x00000038, ebx, esi_39, ecx, es, ds, out ecx_42, out edx_43, out esi_44)
	Mem46[ecx + 0x00000034:word32] = 0xC0000001
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000D092_thunk_fn1000F23B:
	word32 edx_53
	word32 ebp_54
	fn1000F23B(ecx + 0x0000001C, ebx, ebp, esi, edi, es, ds, out edx_53, out ebp_54)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi eax:<invalid> ecx:<invalid> esi:esi edx:<invalid> -12(fp):ecx + 0x00000018 -8(fp):edi -4(fp):esi

fn1000D021_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ebp:<invalid> -12(fp):ecx + 0x00000018 -8(fp):edi -4(fp):esi



void fn1000E130(word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edi edx es fs gs ss
// LiveOut:
// Trashed: SCZOFPUF ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: eax ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1000E130_entry:
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000E130:
	word32 eax_20 = fn1000EBC2(dwArg04 - 0x0000000C)
	branch eax_20 < 0x00000000 l1000E1D5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1000E14D:
	word32 edi_166
	word32 ebx_61
	word32 esi_63
	word32 edi_64
	word32 ebp_163
	word32 eax_65 = fn1002FF64(dwArg04, eax_20, edi, out ebx_61, out ebp_163, out esi_63, out edi_64)
	branch eax_65 == 0x00000000 l1000E17A
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E17A:
	edi_166 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> -28(fp):0x00000028 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E160:
	Mem145[fp - 0x00000018:word32] = Mem0[ebx_61 + 0x0000002C:word32]
	Mem149[fp - 0x0000001C:word32] = Mem145[ebp_163 + 0x0000000C:word32]
	Mem152[fp - 0x00000020:word32] = Mem149[ebp_163 + 0x00000018:word32]
	Mem155[fp - 0x00000024:word32] = Mem152[ebp_163 + 0x00000014:word32]
	Mem158[fp - 0x00000028:word32] = Mem155[ebp_163 + 0x00000010:word32]
	edi_166 = fn1001CF11(eax_65, ebx_61, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out edx, out ebp_163)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> -28(fp):0x00000028 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E17C:
	word32 esi_84 = (0x00000000 - (-edi_166 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch edi_166 == 0x00000000 l1000E1D4
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E192:
	Mem102[ebp_163 - 0x00000001:byte] = 0x00
	Mem104[fp - 0x00000018:word32] = ebp_163 - 0x00000001
	Mem107[fp - 0x0000001C:word32] = Mem104[ebx_61 + 0x0000003C:word32]
	word32 edx_112
	real64 rArg0_113
	branch fn1001D0D8(edi_166, edx, ebp_163, es, ds, dwArg00, dwArg04, rArg0, out edx_112, out rArg0_113) < 0x00000000 l1000E1CA
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E1A8:
	branch Mem107[ebp_163 - 0x00000001:byte] == 0x00 l1000E1CA
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E1CA:
	fn1000CEF1(edi_166, edx_112, ebx_61, esi_84, es, ds)
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp

l1000E1AE:
	word32 ecx_129 = Mem107[ebx_61 + 0x00000030:word32]
	Mem131[fp - 0x00000018:word32] = edi_166
	word32 edx_132
	word32 eax_133 = fn10013BB7(ecx_129, edx_112, ebx_61, ebp_163, es, ds, dwArg00, out edx_132)
	word32 ecx_135 = Mem131[ebx_61 + 0x0000003C:word32]
	branch ecx_135 == 0x00000000 l1000E1C5
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp

l1000E1C0:
	fn1000CEF1(ecx_135, edx_132, ebx_61, eax_133, es, ds)
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp

l1000E1C5:
	Mem141[ebx_61 + 0x0000003C:word32] = edi_166
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp

l1000E1D4:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp

l1000E1D5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn1000E130_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -5(fp):0x00 -4(fp):ebp



void fn1000E200(word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi rax rcx rdi
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1000E200_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000E200:
	word32 ecx_14 = Mem0[dwArg04 + 0x00000030:word32]
	branch ecx_14 == 0x00000000 l1000E219
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000E210:
	word32 esi_29 = fn1000CEF1(ecx_14, edx, ebx, dwArg04, es, ds)
	Mem31[esi_29 + 0x00000030:word32] = Mem0[esi_29 + 0x00000030:word32] & 0x00000000
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000E219:
	return
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp

fn1000E200_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp esi:esi ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp



word32 fn1000E53F(word32 ecx, word32 dwArg04, byte bArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)
fn1000E53F_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l1000E53F:
	Mem24[dwArg10:word32] = 0x00000000
	byte al_21 = 0x00
	branch bArg08 != 0x00 l1000E581
// DataOut: al bl cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +000C(32)

l1000E558:
	word32 ecx_209
	word32 edx_210
	branch fn1000CAD8(0x80000002, 0x10003460, 0x10003434, fp - 0x00000008, out ecx_209, out edx_210) < 0x00000000 l1000E57F
// DataOut: bl cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:bl -32(fp):edi -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +000C(32)

l1000E578:
	al_21 = 0x01
	branch false l1000E581
// DataOut: al bl cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> -44(fp):0x10003434 -40(fp):ecx -36(fp):fp - 0x00000008 -32(fp):edi -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +000C(32)

l1000E57F:
	al_21 = 0x00
// DataOut: al cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> -44(fp):0x10003434 -40(fp):ecx -36(fp):fp - 0x00000008 -32(fp):edi -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +000C(32)

l1000E581:
	word32 eax_162
	word32 ecx_109 = 0x0000006B
	branch al_21 != 0x00 l1000E5DC
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> -44(fp):0x10003434 -40(fp):ecx -36(fp):fp - 0x00000008 -32(fp):edi -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32) Stack +000C(32)

l1000E591:
	branch dwArg0C == 0x00000000 l1000E5DC
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32)

l1000E5DC:
	word32 dwLoc24_105
	branch dwArg04 == 0x00000000 l1000E610
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E610:
	dwLoc24_105 = 0x0000006F
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0030(32)

l1000E5E3:
	branch dwArg04 == 0x00000001 l1000E60C
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E60C:
	dwLoc24_105 = 0x00000073
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0030(32)

l1000E5E8:
	branch dwArg04 == 0x00000002 l1000E608
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E608:
	dwLoc24_105 = 0x00000074
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0030(32)

l1000E5ED:
	branch dwArg04 == 0x00000003 l1000E604
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E604:
	dwLoc24_105 = 0x00000075
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0030(32)

l1000E5F2:
	branch dwArg04 == 0x00000004 l1000E600
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E600:
	dwLoc24_105 = 0x00000076
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0030(32)

l1000E5F7:
	branch dwArg04 != 0x00000005 l1000E613
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E5FC:
	dwLoc24_105 = 0x00000077
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0030(32)

l1000E612:
	ecx_109 = dwLoc24_105
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32)

l1000E613:
	eax_162 = fn1000F146(fp - 0x00000014, 0x10000000, ecx_109)
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> cl:<invalid> -44(fp):0x10003434 -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E596:
	word32 dwLoc24_167
	branch dwArg04 == 0x00000001 l1000E5C2
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E5C2:
	dwLoc24_167 = 0x0000006C
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32)

l1000E59E:
	branch dwArg04 == 0x00000002 l1000E5BE
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E5BE:
	dwLoc24_167 = 0x0000006D
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32)

l1000E5A3:
	branch dwArg04 == 0x00000003 l1000E5BA
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E5BA:
	dwLoc24_167 = 0x0000006E
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32)

l1000E5A8:
	branch dwArg04 == 0x00000004 l1000E5B6
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E5B6:
	dwLoc24_167 = 0x00000071
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32)

l1000E5AD:
	branch dwArg04 != 0x00000005 l1000E5C5
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E5B2:
	dwLoc24_167 = 0x00000072
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):0x0000006B -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32)

l1000E5C4:
	ecx_109 = dwLoc24_167
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:0x0000006B eax:<invalid> edx:<invalid> cl:0x6B -44(fp):0x10003434 -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E5C5:
	eax_162 = fn1000F146(fp - 0x00000014, 0x10000000, ecx_109)
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> cl:<invalid> -44(fp):0x10003434 -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E625:
	branch eax_162 < 0x00000000 l1000E639
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> cl:<invalid> ax:<invalid> -48(fp):fp - 0x00000014 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E62B:
	Mem83[dwArg10:word32] = 0x00000000
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> ax:<invalid> -48(fp):fp - 0x00000014 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000E639:
	fn1000F2EE(fp - 0x00000014)
	return eax_162
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 al:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> ax:<invalid> -48(fp):fp - 0x00000014 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn1000E53F_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx al:<invalid> ecx:fp - 0x00000014 eax:<invalid> esi:esi edx:<invalid> cl:<invalid> ax:<invalid> -48(fp):fp - 0x00000014 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



void fn1000E64C(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32) Stack +000C(32)
fn1000E64C_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32) Stack +0008(32) Stack +000C(32)

l1000E64C:
	Mem18[dwArg0C:word32] = 0x00000000
	branch LookupAccountSidLocalW(dwArg08, 0x00000000, fp - 0x0000000C, 0x00000000, fp - 0x00000008, fp - 0x00000014) == 0x00000000 l1000E685
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32) Stack +0008(32)

l1000E685:
	branch fn100107F1() != 0x8007007A l1000E83F
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000050 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -104(fp):<invalid> -100(fp):0x00000000 -96(fp):fp - 0x0000000C -92(fp):0x00000000 -88(fp):fp - 0x00000008 -84(fp):fp - 0x00000014 -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32) Stack +0008(32)

l1000E698:
	word32 eax_102 = LocalAlloc(0x00000040, 0x00000000)
	word32 edi_104 = eax_102
	branch eax_102 == 0x00000000 l1000E83E
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000050 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -104(fp):<invalid> -100(fp):0x00000000 -96(fp):fp - 0x0000000C -92(fp):0x00000000 -88(fp):fp - 0x00000008 -84(fp):fp - 0x00000014 -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32) Stack +0008(32)

l1000E6C3:
	word32 eax_148 = LocalAlloc(0x00000040, 0x00000000)
	word32 esp_149 = fp - 0x00000054
	word32 ebx_150 = eax_148
	branch eax_148 == 0x00000000 l1000E837
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000054 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -104(fp):<invalid> -100(fp):0x00000000 -96(fp):fp - 0x0000000C -92(fp):0x00000040 -88(fp):0x00000000 -84(fp):edi -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32) Stack +0008(32)

l1000E6ED:
	word32 esp_208 = fp - 0x00000054
	branch LookupAccountSidLocalW(dwArg08, eax_102, fp - 0x0000000C, eax_148, fp - 0x00000008, fp - 0x00000014) != 0x00000000 l1000E717
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000054 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -104(fp):<invalid> -100(fp):0x00000000 -96(fp):fp - 0x0000000C -92(fp):0x00000040 -88(fp):0x00000000 -84(fp):edi -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32)

l1000E708:
	branch fn100107F1() < 0x00000000 l1000E830
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000054 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):fp - 0x00000008 -88(fp):fp - 0x00000014 -84(fp):edi -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0040(32) Local -0044(32) Local -0048(32)

l1000E717:
	word32 esp_254
	word32 ebp_256
	byte SCZO_257
	word32 eax_258
	byte SZO_260
	byte C_261
	word32 esi_262
	byte Z_263
	byte S_264
	word32 ecx_265
	word32 edx_266
	selector es_267
	selector ds_268
	word16 bx_269
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertSidToStringSidW (retsize: 4; depth: 96)
		uses: bx_151,C_248,ds,dwLoc04_6,dwLoc08_29,dwLoc0C_23,dwLoc10,dwLoc18,dwLoc40_246,dwLoc44_243,dwLoc48_239,dwLoc4C_13,dwLoc50_17,dwLoc54_96,dwLoc58_250,dwLoc5C_253,dwLoc60_198,dwLoc64_201,dwLoc68_203,dwLoc6C_206,eax_241,ebp_7,ebx_150,ecx,edi_104,edx,es,esi_157,esp_252,S,SCZO_92,SZO_247,Z_210
		defs: bx_269,C_261,ds_268,eax_258,ebp_256,ebx_259,ecx_265,edi_255,edx_266,es_267,esi_262,esp_254,S_264,SCZO_257,SZO_260,Z_263
	branch (fp - 0x00000048 & fp - 0x00000048) != 0x00000000 l1000E743
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000054 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):fp - 0x00000008 -88(fp):fp - 0x00000014 -84(fp):edi -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0048(32)

l1000E734:
	branch fn100107F1() < 0x00000000 l1000E821
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0010(32) Local -0048(32)

l1000E743:
	word32 esi_300
	Mem304[esp_254 - 0x00000004:word32] = fn1000EF25(fp - 0x00000018, edx_266, ebx_150, dwLoc48 & 0x00000000, es_267, ds_268, out esi_300, out edi_104)
	Mem306[esp_254 - 0x00000008:word32] = 0x00000000
	Mem308[esp_254 - 0x0000000C:word32] = esi_300
	Mem310[esp_254 - 0x00000010:word32] = 0x00000000
	word32 ecx_317
	word16 bx_318
	word32 eax_319 = fn1002CCDB(edi_104, 0x00000000, ebp_256, es_267, ds_268, dwArg00, dwArg04, dwArg0C, out ecx_317, out bx_318)
	word32 esi_321 = eax_319
	branch eax_319 < 0x00000000 l1000E819
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E771:
	Mem339[ebp_256 - 0x0000002C:word32] = 0x00000000
	Mem340[ebp_256 - 0x00000028:word32] = 0x00000000
	Mem341[ebp_256 - 0x00000024:word32] = 0x00000000
	fn1000F2EE(ebp_256 - 0x0000002C)
	word32 ecx_342 = Mem341[ebp_256 - 0x0000000C:word32]
	Mem345[ebp_256 - 0x00000028:word32] = Mem341[ebp_256 - 0x00000028:word32] | 0xFFFFFFFF
	Mem349[ebp_256 - 0x00000024:word32] = Mem345[ebp_256 - 0x00000024:word32] | 0xFFFFFFFF
	Mem353[esp_254 - 0x00000004:word32] = ebp_256 - 0x0000002C
	word32 esi_354
	word32 eax_356 = fn1002EC33(ecx_342, 0x10003304, ebx_150, es_267, ds_268, dwArg00, out esi_354, out edi_104)
	esi_321 = eax_356
	branch eax_356 < 0x00000000 l1000E811
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E7A3:
	Mem374[ebp_256 - 0x00000020:word32] = 0x00000000
	Mem375[ebp_256 - 0x0000001C:word32] = 0x00000000
	Mem376[ebp_256 - 0x00000018:word32] = 0x00000000
	Mem377[ebp_256 - 0x00000038:word32] = 0x00000000
	Mem378[ebp_256 - 0x00000034:word32] = 0x00000000
	Mem379[ebp_256 - 0x00000030:word32] = 0x00000000
	fn1000F2EE(ebp_256 - 0x00000020)
	Mem384[ebp_256 - 0x0000001C:word32] = eax_356 | 0xFFFFFFFF
	Mem385[ebp_256 - 0x00000018:word32] = eax_356 | 0xFFFFFFFF
	fn1000F2EE(ebp_256 - 0x00000038)
	word32 edx_386 = Mem385[ebp_256 - 0x0000002C:word32]
	Mem389[esp_254 - 0x00000004:word32] = ebp_256 - 0x00000020
	Mem391[ebp_256 - 0x00000034:word32] = eax_356 | 0xFFFFFFFF
	Mem393[esp_254 - 0x00000008:word32] = ebp_256 - 0x00000038
	Mem395[esp_254 - 0x0000000C:word32] = 0x00000001
	Mem397[esp_254 - 0x00000010:word32] = ebp_256 - 0x00000038
	Mem398[ebp_256 - 0x00000030:word32] = eax_356 | 0xFFFFFFFF
	word32 ecx_400
	word32 edx_401
	word32 eax_402 = fn10028B5D(edx_386, eax_356 | 0xFFFFFFFF, edi_104, es_267, ds_268, bArg04, dwArg08, dwArg0C, out ecx_400, out edx_401)
	esi_321 = eax_402
	branch eax_402 < 0x00000000 l1000E801
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x10003304 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:0x04 -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E7EF:
	Mem415[esp_254 - 0x00000004:word32] = Mem398[ebp_256 + 0x00000010:word32]
	Mem418[esp_254 - 0x00000008:word32] = Mem415[ebp_256 - 0x00000020:word32]
	Mem420[esp_254 - 0x0000000C:word32] = 0x00000000
	Mem423[esp_254 - 0x00000010:word32] = Mem420[ebp_256 + 0x00000008:word32]
	esi_321 = fn1000E53F(ecx_400, dwArg00, bArg04, dwArg08, dwArg0C)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E801:
	fn1000F2EE(ebp_256 - 0x00000038)
	fn1000F2EE(ebp_256 - 0x00000020)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E811:
	fn1000F2EE(ebp_256 - 0x0000002C)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E819:
	word32 edx_332
	word32 esi_333
	fn1000C640(ebp_256 - 0x0000000C, ebx_150, esi_321, edi_104, es_267, ds_268, out edx_332, out esi_333)
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E821:
	esp_208 = esp_254
	branch Mem18[ebp_256 - 0x00000044:word32] == 0x00000000 l1000E830
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E827:
	Mem289[esp_254 - 0x00000004:word32] = Mem18[ebp_256 - 0x00000044:word32]
	LocalFree(Mem289[esp_254 - 0x00000004:HLOCAL])
	esp_208 = esp_254
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):fp - 0x00000048 -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E830:
	word32 esp_234 = esp_208 - 0x00000004
	Mem235[esp_234:word32] = ebx_150
	LocalFree(Mem235[esp_234:HLOCAL])
	esp_149 = esp_234 + 0x00000004
// DataOut: ebp edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):fp - 0x0000000C -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E837:
	word32 esp_187 = esp_149 - 0x00000004
	Mem188[esp_187:word32] = edi_104
	LocalFree(Mem188[esp_187:HLOCAL])
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E83E:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):edi -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E67E:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000050 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -104(fp):<invalid> -100(fp):0x00000000 -96(fp):fp - 0x0000000C -92(fp):0x00000000 -88(fp):fp - 0x00000008 -84(fp):fp - 0x00000014 -80(fp):esi -76(fp):ebx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1000E83F:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn1000E64C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):esi -76(fp):ebx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000010 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



void fn1000E849(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
// Stack args: Stack +0008(32)
fn1000E849_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1000E849:
	Mem21[dwArg08:word32] = 0x00000000
	fn1000F2EE(fp - 0x00000010)
	word32 ecx_37
	word32 ebp_38
	word32 esi_39
	word32 eax_40 = fn1000E8A5(edx, fp - 0x00000004, es, ds, fp - 0x00000010, out ecx_37, out ebp_38, out esi_39)
	Mem43[fp - 0x0000001C:word32] = esi_39
	branch eax_40 < 0x00000000 l1000E886
// DataOut: ebp ecx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1000E886:
	Mem71[fp - 0x00000020:word32] = 0x00000000
// DataOut: ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E881:
	Mem69[fp - 0x00000020:word32] = Mem43[ebp_38 - 0x0000000C:word32]
// DataOut: ebp ecx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E887:
	Mem49[fp - 0x00000024:word32] = 0x00000001
	Mem52[fp - 0x00000028:word32] = Mem49[ebp_38 + 0x00000008:word32]
	fn1000E53F(ecx_37, dwArg00, bArg04, dwArg08, dwArg0C)
	fn1000F2EE(ebp_38 - 0x0000000C)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):0x00000000 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp

fn1000E849_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):0x00000001 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp



word32 fn1000E8A5(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & ecxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax ebp ecx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi
// Stack args: Stack +0004(32)
fn1000E8A5_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000E8A5:
	word32 ecx_1018
	Mem38[dwArg04:word32] = 0x00000000
	word32 edi_42
	word32 ebp_43
	byte SCZO_44
	word32 eax_45
	byte SZO_46
	byte C_47
	word32 ebx_48
	word32 esi_49
	byte S_50
	word32 ecx_51
	byte Z_52
	word32 edx_53
	word16 cx_54
	word16 ax_55
	selector es_56
	selector ds_57
	word32 esp_1085
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsCreateStringReference (retsize: 4; depth: 120)
		uses: ax_27,C_30,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_39,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_26,ebp_7,ebx_17,edi_3,esi_28,esp_35,SZO_29
		defs: ax_55,C_47,cx_54,ds_57,eax_45,ebp_43,ebx_48,ecx_51,edi_42,edx_53,es_56,esi_49,esp_41,S_50,SCZO_44,SZO_46,Z_52
	branch (fp - 0x00000020 & fp - 0x00000020) < 0x00000000 l1000EBBA
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1000EBBA:
	*ecxOut = eax_45
// DataOut: ebp ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:0x00000000 -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l1000E8E7:
	branch 0x00000000 == 0x00000000 l1000E906
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:0x00000000 -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000E8F1:
	Mem1065[esp_1085 - 0x00000004:word32] = 0x00000000
	word32 esp_1068
	word32 edi_1069
	word32 ebp_1070
	byte SCZO_1071
	word32 eax_1072
	byte SZO_1073
	byte C_1074
	word32 ebx_1075
	word32 esi_1076
	byte S_1077
	word32 ecx_1078
	byte Z_1079
	word32 edx_1080
	word16 cx_1081
	word16 ax_1082
	selector es_1083
	selector ds_1084
	call Mem1065[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_55,C_110,cx_54,ds_57,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_1062,dwLoc50,dwLoc54,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_1063,ebp_43,ebx_48,ecx_1067,edi_107,edx_53,es_56,esi_1066,esp_1064,S_59,SCZO_44,SZO_108,Z_109
		defs: ax_1082,C_1074,cx_1081,ds_1084,eax_1072,ebp_1070,ebx_1075,ecx_1078,edi_1069,edx_1080,es_1083,esi_1076,esp_1068,S_1077,SCZO_1071,SZO_1073,Z_1079
	word32 edi_1086
	word32 ebp_1087
	byte SCZO_1088
	word32 eax_1089
	byte SZO_1090
	byte C_1091
	word32 ebx_1092
	word32 esi_1093
	byte S_1094
	word32 ecx_1095
	byte Z_1096
	word32 edx_1097
	word16 cx_1098
	word16 ax_1099
	selector es_1100
	selector ds_1101
	call esi_1076 (retsize: 4; depth: 4)
		uses: ax_1082,C_1074,cx_1081,ds_1084,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_1062,dwLoc50,dwLoc54,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_1072,ebp_1070,ebx_1075,ecx_1078,edi_1069,edx_1080,es_1083,esi_1076,esp_1068,S_1077,SCZO_1071,SZO_1073,Z_1079
		defs: ax_1099,C_1091,cx_1098,ds_1101,eax_1089,ebp_1087,ebx_1092,ecx_1095,edi_1086,edx_1097,es_1100,esi_1093,esp_1085,S_1094,SCZO_1088,SZO_1090,Z_1096
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:0x00000000 ecx:0x00000000 -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000E906:
	word32 ebx_1059
	word32 esp_114 = esp_1085 - 0x00000004
	Mem115[esp_114:word32] = fp - 0x0000003C
	Mem117[esp_114 - 0x00000004:word32] = 0x1000384C
	Mem119[esp_114 - 0x00000008:word32] = 0x00000000
	word32 edi_123
	byte SCZO_125
	word32 eax_126
	byte SZO_127
	byte C_128
	word32 ebx_129
	word32 esi_130
	byte S_131
	word32 ecx_132
	byte Z_133
	word16 cx_135
	word16 ax_136
	selector ds_138
	selector es_137
	word32 edx_1050
	word32 ebp_124
	word32 esp_122
	call api-ms-win-core-winrt-l1-1-0.dll!RoGetActivationFactory (retsize: 4; depth: 4)
		uses: ax_55,C_110,cx_54,ds_57,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50,dwLoc54,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_113,ebp_43,ebx_48,ecx_106,edi_107,edx_53,es_56,esi_49,esp_118,S_59,SCZO_44,SZO_108,Z_109
		defs: ax_136,C_128,cx_135,ds_138,eax_126,ebp_124,ebx_129,ecx_132,edi_123,edx_134,es_137,esi_130,esp_122,S_131,SCZO_125,SZO_127,Z_133
	word32 edi_1054 = fp - 0x0000003C
	branch (fp - 0x0000003C & fp - 0x0000003C) < 0x00000000 l1000EB89
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1000EB89:
	ebx_1059 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l1000E920:
	Mem233[esp_122 - 0x00000004:word32] = fp - 0x00000054
	Mem235[esp_122 - 0x00000008:word32] = 0x00000000
	word32 esp_240
	word32 edi_241
	word32 ebp_242
	byte SCZO_243
	word32 eax_244
	byte SZO_245
	byte C_246
	word32 ebx_247
	word32 esi_248
	byte S_249
	word32 ecx_250
	byte Z_251
	word32 edx_252
	word16 cx_253
	word16 ax_254
	selector es_255
	selector ds_256
	call Mem235[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_136,C_142,cx_239,ds_138,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_229,ebp_124,ebx_129,ecx_238,edi_139,edx_230,es_137,esi_237,esp_234,S_141,SCZO_125,SZO_140,Z_133
		defs: ax_254,C_246,cx_253,ds_256,eax_244,ebp_242,ebx_247,ecx_250,edi_241,edx_252,es_255,esi_248,esp_240,S_249,SCZO_243,SZO_245,Z_251
	word32 edi_258
	byte SCZO_260
	word32 eax_261
	byte SZO_262
	byte C_263
	word32 ebx_264
	word32 esi_265
	byte S_266
	word32 ecx_267
	byte Z_268
	word16 cx_270
	word16 ax_271
	call esi_248 (retsize: 4; depth: 4)
		uses: ax_254,C_246,cx_253,ds_256,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_244,ebp_242,ebx_247,ecx_250,edi_241,edx_252,es_255,esi_248,esp_240,S_249,SCZO_243,SZO_245,Z_251
		defs: ax_271,C_263,cx_270,ds_273,eax_261,ebp_259,ebx_264,ecx_267,edi_258,edx_269,es_272,esi_265,esp_257,S_266,SCZO_260,SZO_262,Z_268
	edi_1054 = eax_261
	branch eax_261 < 0x00000000 l1000E9CD
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32) Local -0054(32)

l1000E944:
	word32 ebx_360
	Mem341[esp_122 - 0x00000004:word32] = ecx_267
	word32 ebx_345
	word32 esi_346
	word32 eax_347 = fn1000FCE3(esi_130, edx_1050, ebp_124, eax_261, es_137, ds_138, out edx_1050, out ebx_345, out esi_346)
	edi_1054 = eax_347
	branch eax_347 < 0x00000000 l1000E9B1
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E95A:
	Mem430[esp_122 - 0x00000004:word32] = ebp_124 - 0x0000004C
	Mem432[esp_122 - 0x00000008:word32] = esi_346
	word32 esp_435
	word32 edi_436
	word32 ebp_437
	byte SCZO_438
	word32 eax_439
	byte SZO_440
	byte C_441
	word32 ebx_442
	word32 esi_443
	byte S_444
	word32 ecx_445
	byte Z_446
	word32 edx_447
	word16 cx_448
	word16 ax_449
	selector es_450
	selector ds_451
	call Mem432[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_271,C_352,cx_270,ds_273,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_427,ebp_259,ebx_345,ecx_434,edi_349,edx_344,es_272,esi_433,esp_431,S_351,SCZO_260,SZO_350,Z_268
		defs: ax_449,C_441,cx_448,ds_451,eax_439,ebp_437,ebx_442,ecx_445,edi_436,edx_447,es_450,esi_443,esp_435,S_444,SCZO_438,SZO_440,Z_446
	word32 edi_453
	byte SCZO_455
	word32 eax_456
	byte SZO_457
	byte C_458
	word32 ebx_459
	word32 esi_460
	byte S_461
	word32 ecx_462
	byte Z_463
	word16 cx_465
	word16 ax_466
	call esi_443 (retsize: 4; depth: 4)
		uses: ax_449,C_441,cx_448,ds_451,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_439,ebp_437,ebx_442,ecx_445,edi_436,edx_447,es_450,esi_443,esp_435,S_444,SCZO_438,SZO_440,Z_446
		defs: ax_466,C_458,cx_465,ds_468,eax_456,ebp_454,ebx_459,ecx_462,edi_453,edx_464,es_467,esi_460,esp_452,S_461,SCZO_455,SZO_457,Z_463
	edi_1054 = eax_456
	branch eax_456 < 0x00000000 l1000E9B1
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E974:
	word32 eax_473 = Mem432[ebp_124 - 0x0000004C:word32]
	branch eax_473 != 0x00000000 l1000E982
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E982:
	Mem483[ebp_124 - 0x00000048:word32] = 0x00000000
	Mem486[esp_122 - 0x00000004:word32] = ebp_124 - 0x00000048
	Mem488[esp_122 - 0x00000008:word32] = eax_473
	word32 esp_491
	word32 edi_492
	word32 ebp_493
	byte SCZO_494
	word32 eax_495
	byte SZO_496
	byte C_497
	word32 ebx_498
	word32 esi_499
	byte S_500
	word32 ecx_501
	byte Z_502
	word32 edx_503
	word16 cx_504
	word16 ax_505
	selector es_506
	selector ds_507
	call Mem488[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_474,C_481,cx_465,ds_468,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_473,ebp_454,ebx_459,ecx_490,edi_469,edx_482,es_467,esi_489,esp_487,S_471,SCZO_455,SZO_480,Z_476
		defs: ax_505,C_497,cx_504,ds_507,eax_495,ebp_493,ebx_498,ecx_501,edi_492,edx_503,es_506,esi_499,esp_491,S_500,SCZO_494,SZO_496,Z_502
	word32 edi_509
	byte SCZO_511
	word32 eax_512
	byte SZO_513
	byte C_514
	word32 ebx_515
	word32 esi_516
	byte S_517
	word32 ecx_518
	byte Z_519
	word16 cx_521
	word16 ax_522
	call esi_499 (retsize: 4; depth: 4)
		uses: ax_505,C_497,cx_504,ds_507,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_495,ebp_493,ebx_498,ecx_501,edi_492,edx_503,es_506,esi_499,esp_491,S_500,SCZO_494,SZO_496,Z_502
		defs: ax_522,C_514,cx_521,ds_524,eax_512,ebp_510,ebx_515,ecx_518,edi_509,edx_520,es_523,esi_516,esp_508,S_517,SCZO_511,SZO_513,Z_519
	edi_1054 = eax_512
	branch eax_512 < 0x00000000 l1000EB64
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E9A5:
	word32 eax_589 = Mem488[ebp_124 - 0x00000048:word32]
	branch eax_589 != 0x00000000 l1000E9F2
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000E9F2:
	word32 ebx_1056
	Mem598[ebp_124 - 0x00000044:word32] = 0x00000000
	Mem602[esp_122 - 0x00000004:word32] = ebp_124 - 0x00000044
	Mem604[esp_122 - 0x00000008:word32] = 0x1000308C
	Mem606[esp_122 - 0x0000000C:word32] = eax_589
	word32 esp_608
	word32 edi_609
	word32 ebp_610
	byte SCZO_611
	word32 eax_612
	byte SZO_613
	byte C_614
	word32 ebx_615
	word32 esi_616
	byte S_617
	word32 ecx_618
	byte Z_619
	word32 edx_620
	word16 cx_621
	word16 ax_622
	selector es_623
	selector ds_624
	call Mem606[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_590,C_597,cx_521,ds_524,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_589,ebp_510,ebx_515,ecx_607,edi_525,edx_520,es_523,esi_600,esp_605,S_527,SCZO_511,SZO_596,Z_592
		defs: ax_622,C_614,cx_621,ds_624,eax_612,ebp_610,ebx_615,ecx_618,edi_609,edx_620,es_623,esi_616,esp_608,S_617,SCZO_611,SZO_613,Z_619
	word32 edi_626
	byte SCZO_628
	word32 eax_629
	byte SZO_630
	byte C_631
	word32 ebx_632
	word32 esi_633
	byte S_634
	word32 ecx_635
	byte Z_636
	word16 cx_638
	word16 ax_639
	call Mem606[esi_616:word32] (retsize: 4; depth: 4)
		uses: ax_622,C_614,cx_621,ds_624,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_612,ebp_610,ebx_615,ecx_618,edi_609,edx_620,es_623,esi_616,esp_608,S_617,SCZO_611,SZO_613,Z_619
		defs: ax_639,C_631,cx_638,ds_641,eax_629,ebp_627,ebx_632,ecx_635,edi_626,edx_637,es_640,esi_633,esp_625,S_634,SCZO_628,SZO_630,Z_636
	edi_1054 = eax_629
	branch eax_629 < 0x00000000 l1000EB48
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EB48:
	ebx_1056 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l1000EA17:
	Mem707[ebp_124 - 0x00000040:word32] = 0x00000000
	word32 eax_708 = Mem707[ebp_124 - 0x00000044:word32]
	Mem710[esp_122 - 0x00000004:word32] = ebp_124 - 0x00000040
	Mem712[esp_122 - 0x00000008:word32] = eax_708
	word32 esp_716
	word32 edi_717
	word32 ebp_718
	byte SCZO_719
	word32 eax_720
	byte SZO_721
	byte C_722
	word32 ebx_723
	word32 esi_724
	byte S_725
	word32 ecx_726
	byte Z_727
	word32 edx_728
	word16 cx_729
	word16 ax_730
	selector es_731
	selector ds_732
	call Mem712[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_639,C_705,cx_638,ds_641,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_708,ebp_627,ebx_632,ecx_715,edi_642,edx_706,es_640,esi_714,esp_711,S_644,SCZO_628,SZO_704,Z_636
		defs: ax_730,C_722,cx_729,ds_732,eax_720,ebp_718,ebx_723,ecx_726,edi_717,edx_728,es_731,esi_724,esp_716,S_725,SCZO_719,SZO_721,Z_727
	word32 edi_734
	byte SCZO_736
	word32 eax_737
	byte SZO_738
	byte C_739
	word32 ebx_740
	word32 esi_741
	byte S_742
	word32 ecx_743
	byte Z_744
	word16 cx_746
	word16 ax_747
	call esi_724 (retsize: 4; depth: 4)
		uses: ax_730,C_722,cx_729,ds_732,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_720,ebp_718,ebx_723,ecx_726,edi_717,edx_728,es_731,esi_724,esp_716,S_725,SCZO_719,SZO_721,Z_727
		defs: ax_747,C_739,cx_746,ds_749,eax_737,ebp_735,ebx_740,ecx_743,edi_734,edx_745,es_748,esi_741,esp_733,S_742,SCZO_736,SZO_738,Z_744
	edi_1054 = eax_737
	branch eax_737 < 0x00000000 l1000EB23
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA3D:
	Mem814[esp_122 - 0x00000004:word32] = 0x00000000
	Mem816[esp_122 - 0x00000008:word32] = 0x00000008
	Mem818[esp_122 - 0x0000000C:word32] = 0x00000006
	Mem820[ebp_124 - 0x0000000C:word32] = 0x00000000
	Mem822[esp_122 - 0x00000010:word32] = 0x10000000
	Mem823[ebp_124 - 0x00000010:word32] = 0x00000000
	Mem824[ebp_124 - 0x00000008:word32] = 0x00000000
	edi_1054 = 0x80004005
	word32 eax_825 = FindResourceExW(Mem824[esp_122 - 0x00000010:HMODULE], Mem824[esp_122 - 0x0000000C:LPCWSTR], Mem824[esp_122 - 0x00000008:LPCWSTR], Mem824[esp_122 - 0x00000004:WORD])
	branch eax_825 == 0x00000000 l1000EA9D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA63:
	Mem1021[esp_122 - 0x00000004:word32] = eax_825
	Mem1023[esp_122 - 0x00000008:word32] = 0x10000000
	word32 eax_1024 = LoadResource(Mem1023[esp_122 - 0x00000008:HMODULE], Mem1023[esp_122 - 0x00000004:HRSRC])
	branch eax_1024 == 0x00000000 l1000EA9D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80004005 ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA73:
	Mem1031[esp_122 - 0x00000004:word32] = eax_1024
	word32 eax_1032 = LockResource(Mem1031[esp_122 - 0x00000004:HGLOBAL])
	branch eax_1032 == 0x00000000 l1000EA9D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80004005 ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA7E:
	word32 ecx_1038 = (word32) Mem1031[eax_1032:word16]
	word32 edx_1040 = eax_1032 + 0x00000002
	branch (word16) ecx_1038 != 0x0000 l1000EA8E
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80004005 ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA89:
	edx_1040 = 0x10003338
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80004005 ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA8E:
	Mem1046[esp_122 - 0x00000004:word32] = ecx_1038
	Mem1048[esp_122 - 0x00000008:word32] = edx_1040
	edi_1054 = fn1000F30D(ebp_124 - 0x00000010, dwArg00, dwArg04, out edx_1050)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80004005 ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EA9D:
	branch edi_1054 < 0x00000000 l1000EB1B
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EAA1:
	Mem865[esp_122 - 0x00000004:word32] = 0x00000000
	Mem866[ebp_124 - 0x0000003C:word32] = 0x00000000
	word32 esp_867
	word32 edi_868
	word32 ebp_869
	byte SCZO_870
	word32 eax_871
	byte SZO_872
	byte C_873
	word32 ebx_874
	word32 esi_875
	byte S_876
	word32 ecx_877
	byte Z_878
	word32 edx_879
	word16 cx_880
	word16 ax_881
	selector es_882
	selector ds_883
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsDeleteString (retsize: 4; depth: 4)
		uses: ax_838,C_863,cx_835,ds_749,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_861,ebp_735,ebx_740,ecx_836,edi_860,edx_831,es_748,esi_834,esp_864,S_841,SCZO_736,SZO_862,Z_832
		defs: ax_881,C_873,cx_880,ds_883,eax_871,ebp_869,ebx_874,ecx_877,edi_868,edx_879,es_882,esi_875,esp_867,S_876,SCZO_870,SZO_872,Z_878
	Mem889[ebp_869 - 0x0000003C:word32] = 0x00000000
	Mem890[ebp_869 - 0x00000020:word32] = 0x00000000
	word32 ecx_884 = esi_875
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -60(fp):0x00000000 -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EABD:
	ecx_884 = ecx_1107 + 0x00000002
	word32 ecx_1107 = ecx_884
	branch Mem890[ecx_1107:word16] != Mem890[ebp_869 - 0x00000054:word16] l1000EABD
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EAC9:
	word32 ecx_898 = ecx_884 - (esi_875 + 0x00000002)
	word32 eax_901 = (ecx_898 >> 0x00000001) + 0x00000001
	branch eax_901 <u ecx_898 >> 0x00000001 l1000EB41
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000EB41:
	*ecxOut = 0x80070216
// DataOut: ebp ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EBBC:
	fn100103D7(ecx_1018)
	int3()
// DataOut: ebp ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EBC1_thunk_fn1000EBC2:
	return fn1000EBC2(ecx_1018)
// DataOut: eax ebp ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EAD4:
	Mem906[esp_867 - 0x00000004:word32] = ecx_898 >> 0x00000001
	Mem908[esp_867 - 0x00000008:word32] = eax_901
	Mem910[esp_867 - 0x0000000C:word32] = esi_875
	word32 ebp_914
	word32 edx_915 = fn100103E5(ebp_869 - 0x00000034, ebp_869, dwArg00, dwArg04, dwArg08, out ebp_914)
	Mem920[esp_867 - 0x00000004:word32] = ebp_914 - 0x0000003C
	Mem923[esp_867 - 0x00000008:word32] = Mem920[ebp_914 - 0x00000020:word32]
	Mem926[esp_867 - 0x0000000C:word32] = edi_868
	word32 esp_927
	word32 edi_928
	word32 ebp_929
	byte SCZO_930
	word32 eax_931
	byte SZO_932
	byte C_933
	word32 ebx_934
	word32 esi_935
	byte S_936
	word32 ecx_937
	byte Z_938
	word32 edx_939
	word16 cx_940
	word16 ax_941
	selector es_942
	selector ds_943
	call Mem926[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_902,C_904,cx_900,ds_883,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_918,ebp_914,ebx_874,ecx_924,edi_868,edx_915,es_882,esi_917,esp_925,S_876,SCZO_903,SZO_887,Z_897
		defs: ax_941,C_933,cx_940,ds_943,eax_931,ebp_929,ebx_934,ecx_937,edi_928,edx_939,es_942,esi_935,esp_927,S_936,SCZO_930,SZO_932,Z_938
	word32 edi_945
	byte SCZO_947
	word32 eax_948
	byte SZO_949
	byte C_950
	word32 ebx_951
	word32 esi_952
	byte S_953
	word32 ecx_954
	byte Z_955
	word32 edx_956
	word16 cx_957
	word16 ax_958
	selector es_959
	selector ds_960
	word32 ebp_946
	word32 esp_944
	call Mem926[esi_935 + 0x00000018:word32] (retsize: 4; depth: 4)
		uses: ax_941,C_933,cx_940,ds_943,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_931,ebp_929,ebx_934,ecx_937,edi_928,edx_939,es_942,esi_935,esp_927,S_936,SCZO_930,SZO_932,Z_938
		defs: ax_958,C_950,cx_957,ds_960,eax_948,ebp_946,ebx_951,ecx_954,edi_945,edx_956,es_959,esi_952,esp_944,S_953,SCZO_947,SZO_949,Z_955
	branch eax_948 < 0x00000000 l1000EB12
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EAFB:
	Mem991[esp_944 - 0x00000004:word32] = 0x00000000
	Mem994[esp_944 - 0x00000008:word32] = Mem991[ebp_946 - 0x0000003C:word32]
	word32 edi_996
	byte SCZO_998
	word32 eax_999
	byte SZO_1000
	byte C_1001
	word32 ebx_1002
	word32 esi_1003
	byte S_1004
	word32 ecx_1005
	byte Z_1006
	word32 edx_1007
	word16 cx_1008
	word16 ax_1009
	selector es_1010
	selector ds_1011
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsGetStringRawBuffer (retsize: 4; depth: 4)
		uses: ax_958,C_989,cx_957,ds_960,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_987,ebp_946,ebx_951,ecx_954,edi_961,edx_956,es_959,esi_952,esp_993,S_963,SCZO_947,SZO_988,Z_955
		defs: ax_1009,C_1001,cx_1008,ds_1011,eax_999,ebp_997,ebx_1002,ecx_1005,edi_996,edx_1007,es_1010,esi_1003,esp_995,S_1004,SCZO_998,SZO_1000,Z_1006
	word32 ecx_1014
	word32 edx_1015
	fn1000CECD(0x00000000, ebx_1002, es_1010, ds_1011, out ecx_1014, out edx_1015)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB12:
	word32 esp_968 = esp_944 - 0x00000004
	Mem969[esp_968:word32] = Mem926[ebp_946 - 0x0000003C:word32]
	byte SCZO_973
	word32 eax_974
	byte SZO_975
	byte C_976
	word32 ebx_977
	word32 esi_978
	byte S_979
	word32 ecx_980
	byte Z_981
	word16 cx_983
	word16 ax_984
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsDeleteString (retsize: 4; depth: 4)
		uses: ax_958,C_964,cx_957,ds_960,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_948,ebp_965,ebx_951,ecx_954,edi_961,edx_956,es_959,esi_952,esp_968,S_963,SCZO_947,SZO_962,Z_955
		defs: ax_984,C_976,cx_983,ds_986,eax_974,ebp_972,ebx_977,ecx_980,edi_971,edx_982,es_985,esi_978,esp_970,S_979,SCZO_973,SZO_975,Z_981
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB1B:
	fn1000F2EE(ebp_124 - 0x00000010)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB23:
	word32 ecx_765 = Mem712[ebp_124 - 0x00000040:word32]
	ebx_1056 = 0x00000000
	branch ecx_765 == 0x00000000 l1000EB4A
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB2C:
	Mem771[ebp_124 - 0x00000040:word32] = 0x00000000
	word32 esp_773 = esp_122 - 0x00000004
	Mem774[esp_773:word32] = ecx_765
	word32 esp_777
	word32 edi_778
	word32 ebp_779
	byte SCZO_780
	word32 eax_781
	byte SZO_782
	byte C_783
	word32 ebx_784
	word32 esi_785
	byte S_786
	word32 ecx_787
	byte Z_788
	word32 edx_789
	word16 cx_790
	word16 ax_791
	selector es_792
	selector ds_793
	call Mem774[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_762,C_770,cx_766,ds_754,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_772,ebp_763,ebx_767,ecx_776,edi_759,edx_756,es_755,esi_775,esp_773,S_757,SCZO_758,SZO_768,Z_769
		defs: ax_791,C_783,cx_790,ds_793,eax_781,ebp_779,ebx_784,ecx_787,edi_778,edx_789,es_792,esi_785,esp_777,S_786,SCZO_780,SZO_782,Z_788
	byte SCZO_797
	word32 eax_798
	byte SZO_799
	byte C_800
	word32 esi_802
	byte S_803
	word32 ecx_804
	byte Z_805
	word16 cx_807
	word16 ax_808
	call esi_785 (retsize: 4; depth: 4)
		uses: ax_791,C_783,cx_790,ds_793,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_781,ebp_779,ebx_784,ecx_787,edi_778,edx_789,es_792,esi_785,esp_777,S_786,SCZO_780,SZO_782,Z_788
		defs: ax_808,C_800,cx_807,ds_810,eax_798,ebp_796,ebx_801,ecx_804,edi_795,edx_806,es_809,esi_802,esp_794,S_803,SCZO_797,SZO_799,Z_805
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB4A:
	word32 ecx_658 = Mem606[ebp_124 - 0x00000044:word32]
	branch ecx_658 == 0x00000000 l1000EB64
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB51:
	Mem663[ebp_124 - 0x00000044:word32] = ebx_1056
	word32 esp_665 = esp_122 - 0x00000004
	Mem666[esp_665:word32] = ecx_658
	word32 esp_669
	word32 edi_670
	word32 ebp_671
	byte SCZO_672
	word32 eax_673
	byte SZO_674
	byte C_675
	word32 ebx_676
	word32 esi_677
	byte S_678
	word32 ecx_679
	byte Z_680
	word32 edx_681
	word16 cx_682
	word16 ax_683
	selector es_684
	selector ds_685
	call Mem666[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_655,C_662,cx_659,ds_646,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_664,ebp_656,ebx_653,ecx_668,edi_651,edx_648,es_647,esi_667,esp_665,S_649,SCZO_650,SZO_660,Z_661
		defs: ax_683,C_675,cx_682,ds_685,eax_673,ebp_671,ebx_676,ecx_679,edi_670,edx_681,es_684,esi_677,esp_669,S_678,SCZO_672,SZO_674,Z_680
	byte SCZO_689
	word32 eax_690
	byte SZO_691
	byte C_692
	word32 ebx_693
	word32 esi_694
	byte S_695
	word32 ecx_696
	byte Z_697
	word16 cx_699
	word16 ax_700
	call esi_677 (retsize: 4; depth: 4)
		uses: ax_683,C_675,cx_682,ds_685,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_673,ebp_671,ebx_676,ecx_679,edi_670,edx_681,es_684,esi_677,esp_669,S_678,SCZO_672,SZO_674,Z_680
		defs: ax_700,C_692,cx_699,ds_702,eax_690,ebp_688,ebx_693,ecx_696,edi_687,edx_698,es_701,esi_694,esp_686,S_695,SCZO_689,SZO_691,Z_697
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB64:
	word32 ecx_541 = Mem488[ebp_124 - 0x00000048:word32]
	branch ecx_541 == 0x00000000 l1000E9B1
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB6F:
	Mem549[ebp_124 - 0x00000048:word32] = 0x00000000
	word32 esp_551 = esp_122 - 0x00000004
	Mem552[esp_551:word32] = ecx_541
	word32 esp_555
	word32 edi_556
	word32 ebp_557
	byte SCZO_558
	word32 eax_559
	byte SZO_560
	byte C_561
	word32 ebx_562
	word32 esi_563
	byte S_564
	word32 ecx_565
	byte Z_566
	word32 edx_567
	word16 cx_568
	word16 ax_569
	selector es_570
	selector ds_571
	call Mem552[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_538,C_548,cx_542,ds_529,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_550,ebp_539,ebx_546,ecx_554,edi_534,edx_531,es_530,esi_553,esp_551,S_532,SCZO_533,SZO_547,Z_544
		defs: ax_569,C_561,cx_568,ds_571,eax_559,ebp_557,ebx_562,ecx_565,edi_556,edx_567,es_570,esi_563,esp_555,S_564,SCZO_558,SZO_560,Z_566
	byte SCZO_575
	word32 eax_576
	byte SZO_577
	byte C_578
	word32 esi_580
	byte S_581
	word32 ecx_582
	byte Z_583
	word16 cx_585
	word16 ax_586
	call esi_563 (retsize: 4; depth: 4)
		uses: ax_569,C_561,cx_568,ds_571,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_559,ebp_557,ebx_562,ecx_565,edi_556,edx_567,es_570,esi_563,esp_555,S_564,SCZO_558,SZO_560,Z_566
		defs: ax_586,C_578,cx_585,ds_588,eax_576,ebp_574,ebx_579,ecx_582,edi_573,edx_584,es_587,esi_580,esp_572,S_581,SCZO_575,SZO_577,Z_583
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000E9AC:
	edi_1054 = 0x80070490
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l1000E9B1:
	ebx_360 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000E9B3:
	word32 ecx_365 = Mem341[ebp_124 - 0x0000004C:word32]
	branch ecx_365 == 0x00000000 l1000E9CD
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000E9BA:
	Mem370[ebp_124 - 0x0000004C:word32] = ebx_360
	word32 esp_372 = esp_122 - 0x00000004
	Mem373[esp_372:word32] = ecx_365
	word32 esp_376
	word32 edi_377
	word32 ebp_378
	byte SCZO_379
	word32 eax_380
	byte SZO_381
	byte C_382
	word32 ebx_383
	word32 esi_384
	byte S_385
	word32 ecx_386
	byte Z_387
	word32 edx_388
	word16 cx_389
	word16 ax_390
	selector es_391
	selector ds_392
	call Mem373[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_362,C_369,cx_366,ds_353,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_371,ebp_363,ebx_360,ecx_375,edi_358,edx_355,es_354,esi_374,esp_372,S_356,SCZO_357,SZO_367,Z_368
		defs: ax_390,C_382,cx_389,ds_392,eax_380,ebp_378,ebx_383,ecx_386,edi_377,edx_388,es_391,esi_384,esp_376,S_385,SCZO_379,SZO_381,Z_387
	byte SCZO_396
	word32 eax_397
	byte SZO_398
	byte C_399
	word32 ebx_400
	word32 esi_401
	byte S_402
	word32 ecx_403
	byte Z_404
	word16 cx_406
	word16 ax_407
	call esi_384 (retsize: 4; depth: 4)
		uses: ax_390,C_382,cx_389,ds_392,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_343,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_380,ebp_378,ebx_383,ecx_386,edi_377,edx_388,es_391,esi_384,esp_376,S_385,SCZO_379,SZO_381,Z_387
		defs: ax_407,C_399,cx_406,ds_409,eax_397,ebp_395,ebx_400,ecx_403,edi_394,edx_405,es_408,esi_401,esp_393,S_402,SCZO_396,SZO_398,Z_404
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000E97B:
	edi_1054 = 0x80070490
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -60(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l1000E9CD:
	word32 ecx_290 = Mem235[ebp_124 - 0x00000050:word32]
	ebx_1059 = 0x00000000
	branch ecx_290 == 0x00000000 l1000EB8B
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000E9DA:
	Mem296[ebp_124 - 0x00000050:word32] = 0x00000000
	word32 esp_298 = esp_122 - 0x00000004
	Mem299[esp_298:word32] = ecx_290
	word32 esp_302
	word32 edi_303
	word32 ebp_304
	byte SCZO_305
	word32 eax_306
	byte SZO_307
	byte C_308
	word32 ebx_309
	word32 esi_310
	byte S_311
	word32 ecx_312
	byte Z_313
	word32 edx_314
	word16 cx_315
	word16 ax_316
	selector es_317
	selector ds_318
	call Mem299[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_287,C_295,cx_291,ds_279,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_278,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_297,ebp_288,ebx_292,ecx_301,edi_284,edx_281,es_280,esi_300,esp_298,S_282,SCZO_283,SZO_293,Z_294
		defs: ax_316,C_308,cx_315,ds_318,eax_306,ebp_304,ebx_309,ecx_312,edi_303,edx_314,es_317,esi_310,esp_302,S_311,SCZO_305,SZO_307,Z_313
	byte SCZO_322
	word32 eax_323
	byte SZO_324
	byte C_325
	word32 esi_327
	byte S_328
	word32 ecx_329
	byte Z_330
	word16 cx_332
	word16 ax_333
	call esi_310 (retsize: 4; depth: 4)
		uses: ax_316,C_308,cx_315,ds_318,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_278,dwLoc54_231,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_306,ebp_304,ebx_309,ecx_312,edi_303,edx_314,es_317,esi_310,esp_302,S_311,SCZO_305,SZO_307,Z_313
		defs: ax_333,C_325,cx_332,ds_335,eax_323,ebp_321,ebx_326,ecx_329,edi_320,edx_331,es_334,esi_327,esp_319,S_328,SCZO_322,SZO_324,Z_330
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB8B:
	word32 ecx_157 = Mem119[ebp_124 - 0x00000038:word32]
	branch ecx_157 == 0x00000000 l1000EBA5
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EB92:
	Mem189[ebp_124 - 0x00000038:word32] = ebx_1059
	word32 esp_191 = esp_122 - 0x00000004
	Mem192[esp_191:word32] = ecx_157
	word32 esp_195
	word32 edi_196
	word32 ebp_197
	byte SCZO_198
	word32 eax_199
	byte SZO_200
	byte C_201
	word32 ebx_202
	word32 esi_203
	byte S_204
	word32 ecx_205
	byte Z_206
	word32 edx_207
	word16 cx_208
	word16 ax_209
	selector es_210
	selector ds_211
	call Mem192[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_154,C_161,cx_158,ds_145,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_144,dwLoc54_143,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_190,ebp_155,ebx_152,ecx_194,edi_150,edx_147,es_146,esi_193,esp_191,S_148,SCZO_149,SZO_159,Z_160
		defs: ax_209,C_201,cx_208,ds_211,eax_199,ebp_197,ebx_202,ecx_205,edi_196,edx_207,es_210,esi_203,esp_195,S_204,SCZO_198,SZO_200,Z_206
	byte SCZO_215
	word32 eax_216
	byte SZO_217
	byte C_218
	word32 ebx_219
	word32 esi_220
	byte S_221
	word32 ecx_222
	byte Z_223
	word16 cx_225
	word16 ax_226
	call esi_203 (retsize: 4; depth: 4)
		uses: ax_209,C_201,cx_208,ds_211,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc3C_111,dwLoc50_144,dwLoc54_143,dwLoc58_37,dwLoc5C_15,dwLoc60_21,dwLoc64_23,dwLoc68_25,dwLoc6C_32,dwLoc70_34,dwLoc74_36,eax_199,ebp_197,ebx_202,ecx_205,edi_196,edx_207,es_210,esi_203,esp_195,S_204,SCZO_198,SZO_200,Z_206
		defs: ax_226,C_218,cx_225,ds_228,eax_216,ebp_214,ebx_219,ecx_222,edi_213,edx_224,es_227,esi_220,esp_212,S_221,SCZO_215,SZO_217,Z_223
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):0x00000000 -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000EBA5:
	word32 esp_174 = esp_122 + 0x00000004
	word32 esi_175 = Mem119[esp_174:word32]
	*esiOut = esi_175
	word32 ecx_183
	word32 eax_184 = fn1002F420(edi_1054, Mem119[ebp_124 - 0x00000004:word32] ^ ebp_124, edx_1050, Mem119[esp_174 + 0x00000004:word32], ebp_124, esi_175, Mem119[esp_122:word32], es_137, ds_138, out ecx_183)
	word32 ebp_187
	*ebpOut = Mem119[ebp_124:word32]
	return eax_184
// DataOut: eax ebp ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000E8A5_exit:
// DataOut: eax ebp ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -116(fp):0x100037C8 -112(fp):0x00000040 -108(fp):fp - 0x00000020 -104(fp):fp - 0x0000000C -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):0x00000000 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -36(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000EBC2(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: edi esi esp
fn1000EBC2_entry:
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000EBC2:
	word32 esi_22
	AcquireSRWLockShared(ecx + 0x0000004C)
	word32 eax_16 = Mem0[ecx + 0x00000050:word32]
	branch eax_16 == 0x00000001 l1000EBEA
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000EBEA:
	esi_22 = 0x8000000A
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:ecx eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000EBDA:
	branch eax_16 == 0x00000002 l1000EBE6
// DataOut: cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:ecx eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000EBE6:
	esi_22 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:ecx eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000EBDF:
	esi_22 = 0x8007139F
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:ecx eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000EBEF:
	branch ecx == 0x0000004C l1000EBFA
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:<invalid> eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000EBF3:
	ReleaseSRWLockShared(ecx + 0x0000004C)
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:<invalid> eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000EBFA:
	return esi_22
// DataOut: cs ds eax ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000004C esi:<invalid> eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi

fn1000EBC2_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi eax:<invalid> -12(fp):ecx + 0x0000004C -8(fp):edi -4(fp):esi



word32 fn1000EF25(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
fn1000EF25_entry:
	*esiOut = esi
// DataOut: bl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000EF25:
	word32 edi_17 = Mem0[ecx:word32]
	word32 ebp_38 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 eax_18 = Mem0[edi_17:word32]
	branch eax_18 == 0x00000000 l1000EF53
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000EF3E:
	Mem55[edi_17:word32] = Mem0[edi_17:word32] & 0x00000000
	word32 esp_65
	word32 edi_66
	word32 ebp_67
	word32 ecx_68
	word32 eax_69
	byte SZO_70
	byte C_71
	byte Z_72
	word32 esi_73
	word32 edx_74
	word32 ebx_75
	selector es_76
	selector ds_77
	call Mem55[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_57,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_60,dwLoc14_62,eax_18,ebp_7,ebx,ecx_64,edi_17,edx,es,esi_63,esp_61,SZO_56,Z_20
		defs: C_71,ds_77,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_74,es_76,esi_73,esp_65,SZO_70,Z_72
	word32 esp_78
	word32 ecx_81
	word32 eax_82
	byte SZO_83
	byte C_84
	byte Z_85
	word32 esi_86
	call esi_73 (retsize: 4; depth: 4)
		uses: C_71,ds_77,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_60,dwLoc14_62,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_74,es_76,esi_73,esp_65,SZO_70,Z_72
		defs: C_84,ds_90,eax_82,ebp_80,ebx_88,ecx_81,edi_79,edx_87,es_89,esi_86,esp_78,SZO_83,Z_85
	*esiOut = Mem55[esp_78:word32]
	esp_15 = esp_78 + 0x00000004
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000EF53:
	word32 edi_45 = Mem0[esp_15:word32]
	*ediOut = edi_45
	word32 ecx_47
	return fn1002F420(edi_17, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_38, esi, edi_45, es, ds, out ecx_47)
// DataOut: bl cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1000EF25_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



void fn1000EF70(word32 edx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn1000EF70_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000EF70:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	__lock()
	Mem23[dwArg04 + 0x00000034:word32] = __xadd(Mem0[dwArg04 + 0x00000034:word32], ebx | 0xFFFFFFFF)
	word32 ebp_105 = fp - 0x00000004
	word32 esp_118 = fp - 0x00000010
	word32 ebx_110 = (ebx | 0xFFFFFFFF) - 0x00000001
	branch ebx_110 != 0x00000000 l1000EFB9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000EF90:
	branch dwArg04 == 0x00000000 l1000EFA9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000EF94:
	word32 esp_88
	word32 edi_89
	word32 ebp_90
	word32 ecx_91
	word32 eax_92
	byte SZO_93
	byte C_94
	word32 ebx_95
	byte SCZO_96
	byte Z_97
	word32 esi_98
	word32 edx_99
	selector es_100
	selector ds_101
	call Mem23[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_61,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_83,dwLoc18_85,eax_81,ebp_7,ebx_25,ecx_87,edi_21,edx,es,esi_86,esp_84,SCZO_24,SZO_59,Z_60
		defs: C_94,ds_101,eax_92,ebp_90,ebx_95,ecx_91,edi_89,edx_99,es_100,esi_98,esp_88,SCZO_96,SZO_93,Z_97
	word32 esp_103
	word32 edi_104
	word32 ecx_106
	word32 eax_107
	byte SZO_108
	byte C_109
	byte SCZO_111
	byte Z_112
	word32 esi_113
	call esi_98 (retsize: 4; depth: 4)
		uses: C_94,ds_101,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_83,dwLoc18_85,eax_92,ebp_90,ebx_95,ecx_102,edi_89,edx_99,es_100,esi_98,esp_88,SCZO_96,SZO_93,Z_97
		defs: C_109,ds_116,eax_107,ebp_105,ebx_110,ecx_106,edi_104,edx_114,es_115,esi_113,esp_103,SCZO_111,SZO_108,Z_112
	esi = Mem23[esp_103:word32]
	esp_118 = esp_103 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000EFA9:
	branch Mem23[0x10031478:word32] == 0x00000000 l1000EFB9
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:<invalid> ecx:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000EFB2:
	__lock()
	Mem79[0x1003147C:word32] = Mem23[0x1003147C:word32] - 0x00000001
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:<invalid> ecx:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000EFB9:
	word32 ecx_54
	fn1002F420(ebx_110, eax_13 ^ fp - 0x00000004, edx, Mem23[esp_118 + 0x00000004:word32], ebp_105, esi, Mem23[esp_118:word32], es, ds, out ecx_54)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:<invalid> ecx:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1000EF70_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn1000EFF0(word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edi es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx esi rax rbx rcx rdx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1000EFF0_entry:
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1000EFF0:
	word32 esp_144
	word32 ebx_102
	word32 edx_101
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem33[dwArg0C:word32] = 0x00000000
	word32 edi_3 = edi
	word32 ebp_49 = fp - 0x00000004
	word32 eax_34 = fn100103B2(dwArg08, 0x10003794)
	branch eax_34 != 0x00000000 l1000F054
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0009(0) Stack +0004(32)

l1000F054:
	Mem153[dwArg0C:word32] = dwArg04
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x10003794 esi:<invalid> ebx:0x00000000 -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F01E:
	branch fn100103B2(dwArg08, 0x10003784) == 0x00000000 l1000F033
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x10003794 esi:<invalid> ebx:0x00000000 -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0009(0) Stack +0004(32)

l1000F033:
	word32 eax_143 = fn1000FAF1(dwArg04 + 0x00000004, dwArg08, dwArg0C, out edx_101)
	esp_144 = fp - 0x00000014
	ebx_102 = eax_143
	branch eax_143 < 0x00000000 l1000F069
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x10003784 esi:<invalid> ebx:0x00000000 -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0009(0)

l1000F047:
	branch false l1000F069
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F02C:
	Mem131[dwArg0C:word32] = dwArg04
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x10003784 esi:<invalid> ebx:0x00000000 -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F04D:
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F05C:
	word32 esp_78
	word32 edi_79
	word32 ebp_80
	word32 ecx_81
	word32 eax_82
	byte SZO_83
	byte C_84
	word32 edx_85
	word32 ebx_86
	word32 esi_87
	byte bl_88
	byte Z_89
	byte S_90
	byte SCZO_91
	selector es_92
	selector ds_93
	call Mem33[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: bl_29,bLoc09_32,C_37,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_22,dwLoc14_25,dwLoc18_70,dwLoc1C_68,dwLoc20_69,eax_34,ebp_7,ebx_28,ecx_73,edi_3,edx_19,es,esi_72,esp_23,S,SCZO,SZO_35,Z_36
		defs: bl_88,C_84,ds_93,eax_82,ebp_80,ebx_86,ecx_81,edi_79,edx_85,es_92,esi_87,esp_78,S_90,SCZO_91,SZO_83,Z_89
	word32 ecx_97
	word32 eax_98
	byte SZO_99
	byte C_100
	word32 esi_103
	byte bl_104
	byte Z_105
	byte S_106
	byte SCZO_107
	call esi_87 (retsize: 4; depth: 4)
		uses: bl_88,bLoc09_32,C_84,ds_93,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_22,dwLoc14_25,dwLoc18_70,dwLoc1C_68,dwLoc20_69,eax_82,ebp_80,ebx_86,ecx_81,edi_79,edx_85,es_92,esi_87,esp_78,S_90,SCZO_91,SZO_83,Z_89
		defs: bl_104,C_100,ds_109,eax_98,ebp_96,ebx_102,ecx_97,edi_95,edx_101,es_108,esi_103,esp_94,S_106,SCZO_107,SZO_99,Z_105
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F069:
	word32 ebx_58 = Mem33[esp_144 + 0x00000004:word32]
	*ebxOut = ebx_58
	word32 ecx_61
	return fn1002F420(ebx_102, eax_15 ^ fp - 0x00000004, edx_101, ebx_58, ebp_49, Mem33[esp_144:word32], edi_3, es, ds, out ecx_61)
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp

fn1000EFF0_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -9(fp):bl -8(fp):<invalid> -4(fp):ebp



word32 fn1000F07D(word32 ecx, word32 edx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn1000F07D_entry:
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F07D:
	word32 ebp_106 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebx_111 = ecx
	word32 esp_119 = fp - 0x00000014
	word32 edi_105 = dwArg04
	branch Mem0[ecx:word32] == dwArg04 l1000F0BE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000F099:
	branch dwArg04 == 0x00000000 l1000F0AF
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F09D:
	word32 esp_90
	word32 edi_91
	word32 ebp_92
	word32 ecx_93
	word32 eax_94
	byte SZO_95
	byte C_96
	word32 ebx_97
	byte SCZO_98
	byte Z_99
	word32 esi_100
	word32 edx_101
	selector es_102
	selector ds_103
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_61,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_19,dwLoc14_22,dwLoc18_85,dwLoc1C_87,eax_83,ebp_7,ebx_20,ecx_89,edi_24,edx,es,esi_88,esp_86,SCZO_25,SZO_59,Z_60
		defs: C_96,ds_103,eax_94,ebp_92,ebx_97,ecx_93,edi_91,edx_101,es_102,esi_100,esp_90,SCZO_98,SZO_95,Z_99
	word32 esp_104
	word32 ecx_107
	word32 eax_108
	byte SZO_109
	byte C_110
	byte SCZO_112
	byte Z_113
	word32 esi_114
	word32 edx_115
	call esi_100 (retsize: 4; depth: 4)
		uses: C_96,ds_103,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_19,dwLoc14_22,dwLoc18_85,dwLoc1C_87,eax_94,ebp_92,ebx_97,ecx_93,edi_91,edx_101,es_102,esi_100,esp_90,SCZO_98,SZO_95,Z_99
		defs: C_110,ds_117,eax_108,ebp_106,ebx_111,ecx_107,edi_105,edx_115,es_116,esi_114,esp_104,SCZO_112,SZO_109,Z_113
	esi = Mem0[esp_104:word32]
	esp_119 = esp_104 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F0AF:
	Mem78[ebx_111:word32] = edi_105
	word32 ecx_79
	fn1000F276(fp - 0x0000000C, ebx_111, esi, edi_105, es, ds, out ecx_79, out edx, out esi)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F0BE:
	word32 ecx_54
	fn1002F420(ebx_111, eax_15 ^ fp - 0x00000004, edx, Mem0[esp_119 + 0x00000004:word32], ebp_106, esi, Mem0[esp_119:word32], es, ds, out ecx_54)
	return esi
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000F07D_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000F0D2(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ecx edi esi esp
// Stack args: Stack +0004(32)
fn1000F0D2_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F0D2:
	word32 eax_13 = 0x00000000
	word32 ecx_15 = Mem0[ecx + 0x00000004:word32]
	branch ecx_15 != Mem0[ecx + 0x0000000C:word32] l1000F0F4
// DataOut: cs ds eax ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F0E4:
	word32 edx_84
	eax_13 = fn1000FA33(ecx, es, ds, ecx_15 + 0x00000001, out edx_84)
	branch eax_13 < 0x00000000 l1000F10F
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx eax:0x00000000 ecx:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1000F0F4:
	Mem45[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] + 0x00000001
	word32 edx_46 = Mem45[ecx + 0x00000004:word32]
	word32 edx_50
	*edxOut = edx_46 << 0x00000004
	word32 edi_52 = Mem45[ecx:word32] + 0xFFFFFFF0 + (edx_46 << 0x00000004)
	branch edi_52 == 0x00000000 l1000F10E
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1000F107:
	Mem61[edi_52:word32] = Mem45[dwArg04:word32]
	Mem65[edi_52 + 0x00000004:word32] = Mem61[dwArg04 + 0x00000004:word32]
	Mem69[edi_52 + 0x00000008:word32] = Mem65[dwArg04 + 0x00000008:word32]
	Mem73[edi_52 + 0x0000000C:word32] = Mem69[dwArg04 + 0x0000000C:word32]
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000F10E:
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000F10F:
	return eax_13
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1000F0D2_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



void fn1000F114(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx rax rcx rdi rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1000F114_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F114:
	branch Mem0[ecx:word32] == dwArg04 l1000F13D
// DataOut: cs ds eax ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F124:
	word32 edx_38
	word32 esi_39
	word32 edi_40
	word32 eax_41 = fn1000F629(fp - 0x00000008, ebx, ecx, es, ds, dwArg04, out edx_38, out esi_39, out edi_40)
	word32 edx_44 = Mem0[eax_41:word32]
	Mem45[eax_41:word32] = Mem0[esi_39:word32]
	Mem47[esi_39:word32] = edx_44
	word32 ecx_48
	word32 edx_49
	word32 esi_50
	fn1000F276(fp - 0x00000008, ebx, esi_39, edi_40, es, ds, out ecx_48, out edx_49, out esi_50)
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:ecx -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000F13D:
	return
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ecx -4(fp):ebp

fn1000F114_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:esi ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ecx -4(fp):ebp



word32 fn1000F146(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(16)
fn1000F146_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(16)

l1000F146:
	word32 edi_135 = 0x80004005
	word32 eax_40 = FindResourceExW(dwArg08, 0x00000006, (word32) (word16) ((dwArg0C >>u 0x00000004) + 0x00000001), 0x0000)
	branch eax_40 == 0x00000000 l1000F1CD
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32) Stack +0008(32)

l1000F17E:
	word32 eax_97 = LoadResource(dwArg08, eax_40)
	branch eax_97 == 0x00000000 l1000F1CD
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):(word32) ax -36(fp):0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F18C:
	word32 eax_105 = LockResource(eax_97)
	word32 ecx_107 = eax_105
	branch eax_105 == 0x00000000 l1000F1CD
// DataOut: cs ds ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F199:
	word32 esi_111 = dwArg0C & 0x0000000F
	branch false l1000F1AC
// DataOut: cs ds ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F19E:
	ecx_107 = ecx_107 + (word32) Mem0[ecx_107:word16] * 0x00000002 + 0x00000002
	esi_111 = esi_111 - 0x00000001
	branch esi_111 != 0x00000000 l1000F19E
// DataOut: cs ds ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F1AC:
	word32 ecx_125
	word32 eax_119 = (word32) Mem0[ecx_107:word16]
	branch (word16) eax_119 == 0x0000 l1000F1B9
// DataOut: cs ds eax ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F1B9:
	ecx_125 = 0x10003338
// DataOut: cs ds eax ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F1B4:
	ecx_125 = ecx_107 + 0x00000002
// DataOut: cs ds eax ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32) Local -0030(32) Stack +0004(32)

l1000F1BE:
	word32 edx_131
	edi_135 = fn1000F30D(fp - 0x00000010, ecx_125, eax_119, out edx_131)
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x80004005 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32)

l1000F1CD:
	branch edi_135 < 0x00000000 l1000F1E1
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0030(32) Stack +0004(32)

l1000F1D1:
	fn1000F6EE(dwArg04, 0x00000000, fp + 0x00000010)
	edi_135 = fp + 0x00000010
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -48(fp):<invalid> -44(fp):0x00000006 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1000F1E1:
	fn1000F2EE(fp - 0x00000010)
	return edi_135
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn1000F146_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ebx:ebx eax:<invalid> ecx:fp - 0x00000010 edx:<invalid> ax:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn1000F1F2(word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1000F1F2_entry:
	*ebxOut = ebx
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F1F2:
	word32 edx_20
	return fn1000F78A(dwArg04, fp - 0x00000004, out edx_20)
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1000F1F2_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> al:<invalid> ebx:<invalid> esi:<invalid> ax:<invalid> -16(fp):<invalid> -12(fp):fp + 0x0000000C -8(fp):ecx -4(fp):ebp



word32 fn1000F23B(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut: eax ebp edx esp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi
fn1000F23B_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: v3(32)

l1000F23B:
	Mem6[v3 - 0x00000004:word32] = ebp
	Mem10[v3 - 0x00000008:word32] = ecx
	word32 eax_12 = Mem10[0x10031078:word32] ^ v3 - 0x00000004
	Mem13[v3 - 0x00000008:word32] = eax_12
	word32 edi_27 = edi
	word32 ebp_30 = v3 - 0x00000004
	word32 edx_14 = Mem13[ecx + 0x00000010:word32]
	*edxOut = edx_14
	branch edx_14 == 0x00000000 l1000F268
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000F252:
	Mem43[ecx + 0x00000010:word32] = Mem13[ecx + 0x00000010:word32] & 0x00000000
	Mem48[v3 - 0x0000000C:word32] = esi
	Mem50[v3 - 0x00000010:word32] = edx_14
	word32 esp_53
	word32 edi_54
	word32 ebp_55
	word32 ecx_56
	word32 eax_57
	byte SZO_58
	byte C_59
	word32 edx_60
	byte Z_61
	word32 esi_62
	word32 ebx_63
	selector es_64
	selector ds_65
	call Mem50[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_45,ds,eax_46,ebp_7,ebx,ecx_52,edi_3,edx_14,es,esi_51,esp_49,SZO_44,Z_16
		defs: C_59,ds_65,eax_57,ebp_55,ebx_63,ecx_56,edi_54,edx_60,es_64,esi_62,esp_53,SZO_58,Z_61
	word32 esp_66
	word32 ecx_69
	byte SZO_71
	byte C_72
	byte Z_74
	word32 esi_75
	call esi_62 (retsize: 4; depth: 4)
		uses: C_59,ds_65,eax_57,ebp_55,ebx_63,ecx_56,edi_54,edx_60,es_64,esi_62,esp_53,SZO_58,Z_61
		defs: C_72,ds_78,eax_70,ebp_68,ebx_76,ecx_69,edi_67,edx_73,es_77,esi_75,esp_66,SZO_71,Z_74
	esi = Mem50[esp_66:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 - 0x00000008 edi:edi ebp:v3 - 0x00000004 eax:<invalid> edx:<invalid>

l1000F268:
	word32 ecx_35
	word32 eax_36 = fn1002F420(eax_12, Mem13[ebp_30 - 0x00000004:word32] ^ ebp_30, edx_14, ebx, ebp_30, esi, edi_27, es, ds, out ecx_35)
	word32 ebp_38
	*ebpOut = Mem13[ebp_30:word32]
	return eax_36
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:v3 - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid>

fn1000F23B_exit:
// DataOut: eax ebp edx esp
// DataOut (flags): 
// SymbolicIn: esp:v3 edi:edi ebp:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid>



word32 fn1000F276(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: eax ecx edx esi
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi rax rcx rdx rsi si sil
// Preserved: ebp edi esp
fn1000F276_entry:
	*esiOut = esi
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F276:
	word32 edi_3 = edi
	word32 ebp_36 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edx_15 = Mem0[ecx:word32]
	*edxOut = edx_15
	word32 eax_16 = 0x00000000
	branch edx_15 == 0x00000000 l1000F2A2
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000F28E:
	Mem49[ecx:word32] = 0x00000000
	word32 esp_57
	word32 edi_58
	word32 ebp_59
	word32 ecx_60
	word32 eax_61
	byte SZO_62
	byte C_63
	word32 edx_64
	byte Z_65
	word32 esi_66
	word32 ebx_67
	selector es_68
	selector ds_69
	call Mem49[0x100323BC:word32] (retsize: 4; depth: 20)
		uses: C_19,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_52,dwLoc10_54,eax_50,ebp_7,ebx,ecx_56,edi_3,edx_15,es,esi_55,esp_53,SZO_17,Z_18
		defs: C_63,ds_69,eax_61,ebp_59,ebx_67,ecx_60,edi_58,edx_64,es_68,esi_66,esp_57,SZO_62,Z_65
	word32 esp_70
	word32 ecx_73
	byte SZO_75
	byte C_76
	byte Z_78
	word32 esi_79
	call esi_66 (retsize: 4; depth: 4)
		uses: C_63,ds_69,dwLoc04_6,dwLoc08_14,dwLoc0C_52,dwLoc10_54,eax_61,ebp_59,ebx_67,ecx_60,edi_58,edx_64,es_68,esi_66,esp_57,SZO_62,Z_65
		defs: C_76,ds_82,eax_74,ebp_72,ebx_80,ecx_73,edi_71,edx_77,es_81,esi_79,esp_70,SZO_75,Z_78
	*esiOut = Mem49[esp_70:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F2A2:
	word32 ecx_41
	return fn1002F420(eax_16, eax_13 ^ fp - 0x00000004, edx_15, ebx, ebp_36, esi, edi_3, es, ds, out ecx_41)
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1000F276_exit:
// DataOut: eax ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp



void fn1000F2B0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO
// Preserved: edi esi esp
fn1000F2B0_entry:
// DataOut: cs ds eax ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F2B0:
	branch Mem0[ecx:word32] == 0x00000000 l1000F2C5
// DataOut: cs ds eax ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F2BA:
	CoTaskMemFree(Mem0[ecx:word32])
	Mem28[ecx:word32] = Mem0[ecx:word32] & 0x00000000
// DataOut: cs ds eax ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi

l1000F2C5:
	Mem15[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] & 0x00000000
	Mem18[ecx + 0x0000000C:word32] = Mem15[ecx + 0x0000000C:word32] & 0x00000000
	return
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -8(fp):<invalid> -4(fp):esi

fn1000F2B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi -8(fp):<invalid> -4(fp):esi



void fn1000F2CF(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: edi esi esp
fn1000F2CF_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F2CF:
	branch Mem0[ecx:word32] == 0x00000000 l1000F2E4
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F2D9:
	LocalFree(Mem0[ecx:word32])
	Mem31[ecx:word32] = Mem0[ecx:word32] & 0x00000000
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi

l1000F2E4:
	Mem17[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] & 0x00000000
	Mem20[ecx + 0x00000008:word32] = Mem17[ecx + 0x00000008:word32] & 0x00000000
	return
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx eax:<invalid> -8(fp):<invalid> -4(fp):esi

fn1000F2CF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi eax:<invalid> -8(fp):<invalid> -4(fp):esi



void fn1000F2EE(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO
// Preserved: edi esi esp
fn1000F2EE_entry:
// DataOut: bl bx cs ds eax ebp ebx ecx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F2EE:
	branch Mem0[ecx:word32] == 0x00000000 l1000F303
// DataOut: bl bx cs ds eax ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(16)

l1000F2F8:
	CoTaskMemFree(Mem0[ecx:word32])
	Mem28[ecx:word32] = Mem0[ecx:word32] & 0x00000000
// DataOut: bl bx cs ds eax ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi
// LocalsOut: Local -0004(16)

l1000F303:
	Mem15[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] & 0x00000000
	Mem18[ecx + 0x00000008:word32] = Mem15[ecx + 0x00000008:word32] & 0x00000000
	return
// DataOut: bl bx cs ds eax ebp ebx ecx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -8(fp):<invalid> -4(fp):esi

fn1000F2EE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi -8(fp):<invalid> -4(fp):esi



word32 fn1000F30D(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000F30D_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l1000F30D:
	word32 edx_12
	*edxOut = dwArg04
	word32 ebx_20 = 0x00000000
	branch dwArg04 == 0x00000000 l1000F397
// DataOut: bx cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l1000F397:
	fn1000F2EE(ecx)
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:ecx ebx:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000F324:
	word32 edi_119
	word32 esi_51 = dwArg08
	branch dwArg08 != 0xFFFFFFFF l1000F342
// DataOut: bx cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:ecx ebx:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F342:
	word32 ecx_100 = dwArg04
// DataOut: bx cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:ecx ebx:0x00000000 esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F347:
	ecx_100 = ecx_125 + 0x00000002
	word32 ecx_125 = ecx_100
	branch Mem0[ecx_125:word16] != 0x0000 l1000F347
// DataOut: bx cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F352:
	branch dwArg08 >=u ecx_100 - (dwArg04 + 0x00000002) >> 0x00000001 l1000F35E
// DataOut: bx cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F35E:
	word32 edi_111 = dwArg04
// DataOut: bx cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F363:
	edi_111 = edi_126 + 0x00000002
	word32 edi_126 = edi_111
	branch Mem0[edi_126:word16] != 0x0000 l1000F363
// DataOut: bx cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F36E:
	edi_119 = edi_111 - (dwArg04 + 0x00000002) >> 0x00000001
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F32C:
	word32 esi_90 = dwArg04
// DataOut: bx cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:ecx ebx:0x00000000 esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F331:
	esi_90 = esi_124 + 0x00000002
	word32 esi_124 = esi_90
	branch Mem0[esi_124:word16] != 0x0000 l1000F331
// DataOut: bx cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F33C:
	esi_51 = esi_90 - (dwArg04 + 0x00000002) >> 0x00000001
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F35A:
	edi_119 = esi_51
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32) Stack +0004(32)

l1000F372:
	word32 edx_62
	word32 eax_63 = fn1000F3A7(ecx, 0x00000000, esi_51, out edx_62)
	ebx_20 = eax_63
	branch eax_63 < 0x00000000 l1000F39C
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1000F381:
	word32 edx_80
	*edxOut = fn1001049F(Mem0[ecx:word32], esi_51 + 0x00000001, dwArg04, edi_119)
	Mem82[ecx + 0x00000004:word32] = edi_119
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000F39C:
	return ebx_20
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn1000F30D_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp edx:<invalid> eax:<invalid> ebx:ebx esi:esi ecx:<invalid> ax:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



word32 fn1000F3A7(word32 ecx, word32 ebx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1000F3A7_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F3A7:
	word32 ebx_177
	word32 dwLoc08_178
	branch dwArg04 + 0x00000001 <u dwArg04 l1000F3C4
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32)

l1000F3C4:
	ebx_177 = ebx | 0xFFFFFFFF
	dwLoc08_178 = ebx | 0xFFFFFFFF
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3BD:
	ebx_177 = dwArg04 + 0x00000001
	dwLoc08_178 = dwArg04 + 0x00000001
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3CA:
	word32 edi_102 = 0x00000000 - (dwArg04 + 0x00000001 <u dwArg04) & 0x80070216
	branch dwArg04 + 0x00000001 <u dwArg04 l1000F47E
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3DC:
	branch Mem0[ecx + 0x00000008:word32] != 0xFFFFFFFF l1000F3F6
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3E2:
	word32 edx_167
	*edxOut = fn1000F489(ecx)
	word32 eax_168 = 0x00000000
	branch Mem0[ecx:word32] == 0x00000000 l1000F3F3
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3EF:
	eax_168 = Mem0[ecx + 0x00000004:word32] + 0x00000001
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:ecx eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3F3:
	Mem173[ecx + 0x00000008:word32] = eax_168
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:ecx eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F3F6:
	word32 eax_71 = Mem0[ecx + 0x00000008:word32]
	branch eax_71 != 0x00000000 l1000F42A
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F42A:
	branch ebx_177 <=u eax_71 l1000F47E
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F42E:
	word32 ecx_131
	word32 edx_132
	word32 eax_133 = fn10010416(eax_71, 0x00000002, fp - 0x0000000C, out ecx_131, out edx_132)
	edi_102 = eax_133
	branch eax_133 < 0x00000000 l1000F47E
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000F442:
	word32 ecx_141 = Mem0[ecx + 0x00000008:word32]
	word32 ebx_139 = ecx
	branch ecx - ecx_141 <=u 0x00000800 l1000F459
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F453:
	ebx_139 = ecx_141 + 0x00000800
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:ecx edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F459:
	branch dwLoc08_178 <=u ebx_139 l1000F462
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F460:
	ebx_139 = dwLoc08_178
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F462:
	word32 eax_157 = CoTaskMemRealloc(Mem0[ecx:word32], ebx_139 * 0x00000002)
	branch eax_157 == 0x00000000 l1000F479
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F472:
	Mem162[ecx + 0x00000008:word32] = ebx_139
	Mem163[ecx:word32] = eax_157
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F3FD:
	word32 ecx_98
	word32 edx_99
	word32 eax_100 = fn10010416(ebx_177, 0x00000002, fp - 0x00000008, out ecx_98, out edx_99)
	edi_102 = eax_100
	branch eax_100 < 0x00000000 l1000F47E
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F411:
	word32 eax_109 = CoTaskMemAlloc(dwLoc08_178)
	branch eax_109 == 0x00000000 l1000F479
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F479:
	edi_102 = 0x8007000E
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F41E:
	Mem118[ecx + 0x00000008:word32] = ebx_177
	Mem119[ecx:word32] = eax_109
	Mem120[eax_109:word16] = 0x0000
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):0x00000002 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F47E:
	return edi_102
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1000F3A7_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ecx:<invalid> eax:<invalid> ebx:ebx edx:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1000F489(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: edx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: edi esi esp
fn1000F489_entry:
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F489:
	branch Mem0[ecx + 0x00000004:word32] != 0xFFFFFFFF l1000F4B4
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F48F:
	word32 edx_27 = Mem0[ecx:word32]
	branch edx_27 == 0x00000000 l1000F4AF
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F4AF:
	edx = 0x00000000
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid>

l1000F495:
	edx_53 = edx_27
// DataOut: bl cs di ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid>
// LocalsOut: fp(32)

l1000F49C:
	word32 edx_53
	edx_53 = edx_68 + 0x00000002
	word32 edx_68 = edx_53
	branch Mem0[edx_68:word16] != 0x0000 l1000F49C
// DataOut: bl cs di ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> esi:<invalid> edi:0x00000000 ax:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000F4A7:
	edx = edx_53 - (edx_27 + 0x00000002) >> 0x00000001
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edx:<invalid> esi:<invalid> edi:0x00000000 ax:<invalid> -8(fp):edi -4(fp):esi

l1000F4B1:
	Mem43[ecx + 0x00000004:word32] = edx
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> esi:esi edi:edi ax:<invalid> -8(fp):edi -4(fp):esi

l1000F4B4:
	return edx
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> esi:esi edi:edi ax:<invalid> -8(fp):edi -4(fp):esi

fn1000F489_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> esi:esi edi:edi ax:<invalid> -8(fp):edi -4(fp):esi



void fn1000F592(word32 edx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1000F592_entry:
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F592:
	word32 esp_151 = fp - 0x0000001C
	word32 edi_152 = dwArg04
	word32 ebx_158 = 0x00000000
	branch Mem0[dwArg04:word32] == 0x00000000 l1000F5C7
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F5B5:
	Mem131[dwArg04:word32] = 0x00000000
	word32 esp_137
	word32 edi_138
	word32 ebp_139
	byte SCZO_140
	word32 eax_141
	byte SZO_142
	byte C_143
	word32 ebx_144
	word32 esi_145
	word32 ecx_146
	byte Z_147
	word32 edx_148
	selector es_149
	selector ds_150
	call Mem131[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: C_28,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_24,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_134,eax_132,ebp_7,ebx_23,ecx_136,edi_22,edx,es,esi_135,esp_133,SCZO,SZO_26,Z_27
		defs: C_143,ds_150,eax_141,ebp_139,ebx_144,ecx_146,edi_138,edx_148,es_149,esi_145,esp_137,SCZO_140,SZO_142,Z_147
	word32 ebp_153
	byte SCZO_154
	word32 eax_155
	byte SZO_156
	byte C_157
	word32 ecx_160
	byte Z_161
	call esi_145 (retsize: 4; depth: 4)
		uses: C_143,ds_150,dwLoc04_6,dwLoc08_12,dwLoc0C_24,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_134,eax_141,ebp_139,ebx_144,ecx_146,edi_138,edx_148,es_149,esi_145,esp_137,SCZO_140,SZO_142,Z_147
		defs: C_157,ds_164,eax_155,ebp_153,ebx_158,ecx_160,edi_152,edx_162,es_163,esi_159,esp_151,SCZO_154,SZO_156,Z_161
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F5C7:
	word32 ebx_118
	word32 esp_43 = esp_151 - 0x00000004
	Mem44[esp_43:word32] = 0x10002F5C
	Mem46[esp_43 - 0x00000004:word32] = 0x00000020
	Mem47[edi_152:word32] = 0x00000000
	word32 ebx_48
	word32 esi_50
	word32 edi_51
	word32 ebp_113
	word32 eax_52 = fn1002FF64(ebx_158, esi, edi_152, out ebx_48, out ebp_113, out esi_50, out edi_51)
	word32 esp_111 = esp_43 + 0x00000004
	branch eax_52 != 0x00000000 l1000F5E4
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F5E4:
	word32 ebx_87
	word32 edx_88 = fn1001524F(eax_52, edx, es, ds, out ebx_87)
	Mem89[eax_52:word32] = 0x1000148C
	Mem90[eax_52 + 0x0000001C:word32] = ebx_87
	Mem93[esp_43:word32] = eax_52
	Mem94[ebp_113 - 0x0000000C:word32] = eax_52
	word32 esp_97
	word32 edi_98
	word32 ebp_99
	byte SCZO_100
	word32 eax_101
	byte SZO_102
	byte C_103
	word32 ebx_104
	word32 esi_105
	word32 ecx_106
	byte Z_107
	word32 edx_108
	selector es_109
	selector ds_110
	call Mem94[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_60,ds_35,dwLoc04_6,dwLoc08_12,dwLoc0C_24,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_34,eax_91,ebp_49,ebx_87,ecx_96,edi_95,edx_88,es_36,esi_53,esp_92,SCZO_37,SZO_58,Z_59
		defs: C_103,ds_110,eax_101,ebp_99,ebx_104,ecx_106,edi_98,edx_108,es_109,esi_105,esp_97,SCZO_100,SZO_102,Z_107
	word32 edi_112
	byte SCZO_114
	word32 eax_115
	byte SZO_116
	byte C_117
	word32 esi_119
	word32 ecx_120
	byte Z_121
	word32 edx_122
	call edi_98 (retsize: 4; depth: 4)
		uses: C_103,ds_110,dwLoc04_6,dwLoc08_12,dwLoc0C_24,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_34,eax_101,ebp_99,ebx_104,ecx_106,edi_98,edx_108,es_109,esi_105,esp_97,SCZO_100,SZO_102,Z_107
		defs: C_117,ds_124,eax_115,ebp_113,ebx_118,ecx_120,edi_112,edx_122,es_123,esi_119,esp_111,SCZO_114,SZO_116,Z_121
	Mem127[Mem94[ebp_113 - 0x00000008:word32]:word32] = esi_119
	word32 esi_129
	fn1000C640(ebp_113 - 0x0000000C, ebx_118, esi_119, edi_112, es, ds, out edx, out esi_129)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F5DD:
	ebx_118 = 0x8007000E
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F614:
	word32 esp_72 = esp_111 + 0x00000004
	word32 ecx_80
	fn1002F420(ebx_118, Mem47[ebp_113 - 0x00000004:word32] ^ ebp_113, edx, Mem47[esp_72 + 0x00000004:word32], ebp_113, Mem47[esp_72:word32], Mem47[esp_111:word32], es, ds, out ecx_80)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000F592_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1000F629(word32 ecx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es esi fs gs ss
// LiveOut: eax edi edx esi
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1000F629_entry:
	*esiOut = esi
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F629:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem20[ecx:word32] = dwArg04
	word32 ebp_39 = fp - 0x00000004
	word32 edx_16 = dwArg04
	*edxOut = edx_16
	word32 esp_17 = fp - 0x0000000C
	word32 edi_19 = ecx
	branch dwArg04 == 0x00000000 l1000F657
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000F645:
	word32 esp_63
	word32 edi_64
	word32 ebp_65
	word32 ecx_66
	word32 eax_67
	byte SZO_68
	byte C_69
	word32 edx_70
	byte Z_71
	word32 esi_72
	word32 ebx_73
	selector es_74
	selector ds_75
	call Mem20[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_23,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_18,dwLoc10_58,dwLoc14_60,eax_56,ebp_7,ebx,ecx_62,edi_19,edx_16,es,esi_61,esp_59,SZO_21,Z_22
		defs: C_69,ds_75,eax_67,ebp_65,ebx_73,ecx_66,edi_64,edx_70,es_74,esi_72,esp_63,SZO_68,Z_71
	word32 esp_76
	word32 ecx_79
	word32 eax_80
	byte SZO_81
	byte C_82
	byte Z_84
	word32 esi_85
	call esi_72 (retsize: 4; depth: 4)
		uses: C_69,ds_75,dwLoc04_6,dwLoc08_14,dwLoc0C_18,dwLoc10_58,dwLoc14_60,eax_67,ebp_65,ebx_73,ecx_66,edi_64,edx_70,es_74,esi_72,esp_63,SZO_68,Z_71
		defs: C_82,ds_88,eax_80,ebp_78,ebx_86,ecx_79,edi_77,edx_83,es_87,esi_85,esp_76,SZO_81,Z_84
	*esiOut = Mem20[esp_76:word32]
	esp_17 = esp_76 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000F657:
	word32 edi_46 = Mem20[esp_17:word32]
	*ediOut = edi_46
	word32 ecx_48
	return fn1002F420(edi_19, eax_13 ^ fp - 0x00000004, edx_16, ebx, ebp_39, esi, edi_46, es, ds, out ecx_48)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1000F629_exit:
// DataOut: eax edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



void fn1000F66A(word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1000F66A_entry:
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000F66A:
	word32 ebx_131
	word32 ecx_27
	word32 esi_29
	word32 edx_100
	fn1000F276(dwArg04, ebx, dwArg04, edi, es, ds, out ecx_27, out edx_100, out esi_29)
	Mem38[esi_29:word32] = 0x00000000
	word32 ebx_39
	word32 edi_103
	word32 esi_138
	word32 ebp_126
	word32 eax_43 = fn1002FF64(0x00000000, esi_29, edi, out ebx_39, out ebp_126, out esi_138, out edi_103)
	word32 esp_104 = fp - 0x00000018
	branch eax_43 != 0x00000000 l1000F6AB
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1000F6AB:
	Mem77[fp - 0x0000001C:word32] = edi_103
	word32 eax_80 = fn10013658(eax_43, edx_100, es, ds, out ebx_131)
	Mem82[ebp_126 - 0x0000000C:word32] = eax_80
	word32 esp_124 = fp - 0x0000001C
	word32 edi_125 = eax_80
	branch eax_80 == 0x00000000 l1000F6CF
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):0x000000B4 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F6BC:
	Mem107[fp - 0x00000020:word32] = eax_80
	word32 esp_110
	word32 edi_111
	word32 ebp_112
	byte SCZO_113
	word32 eax_114
	byte SZO_115
	byte C_116
	word32 ebx_117
	word32 esi_118
	word32 ecx_119
	byte Z_120
	selector es_121
	selector ds_122
	word32 edx_123
	call Mem107[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_85,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_24,dwLoc14_17,dwLoc18_20,dwLoc1C_32,dwLoc20_37,eax_80,ebp_40,ebx_79,ecx_109,edi_81,edx_28,es,esi_108,esp_106,SCZO,SZO_83,Z_84
		defs: C_116,ds_122,eax_114,ebp_112,ebx_117,ecx_119,edi_111,edx_123,es_121,esi_118,esp_110,SCZO_113,SZO_115,Z_120
	byte SCZO_127
	word32 eax_128
	byte SZO_129
	byte C_130
	word32 esi_132
	word32 ecx_133
	byte Z_134
	word32 edx_137
	call esi_118 (retsize: 4; depth: 4)
		uses: C_116,ds_122,dwLoc04_6,dwLoc08_14,dwLoc0C_24,dwLoc14_17,dwLoc18_20,dwLoc1C_32,dwLoc20_37,eax_114,ebp_112,ebx_117,ecx_119,edi_111,edx_123,es_121,esi_118,esp_110,SCZO_113,SZO_115,Z_120
		defs: C_130,ds_136,eax_128,ebp_126,ebx_131,ecx_133,edi_125,edx_137,es_135,esi_132,esp_124,SCZO_127,SZO_129,Z_134
	esi_138 = Mem107[ebp_126 - 0x00000008:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):0x000000B4 -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F6CF:
	Mem98[esi_138:word32] = edi_125
	word32 ecx_99
	word32 esi_101
	fn1000F276(ebp_126 - 0x0000000C, ebx_131, esi_138, edi_125, es, ds, out ecx_99, out edx_100, out esi_101)
	edi_103 = Mem98[esp_124:word32]
	esp_104 = esp_124 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F6A4:
	ebx_131 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):0x000000B4 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1000F6DA:
	word32 ecx_69
	fn1002F420(ebx_131, Mem38[ebp_126 - 0x00000004:word32] ^ ebp_126, edx_100, Mem38[esp_104 + 0x00000004:word32], ebp_126, Mem38[esp_104:word32], edi_103, es, ds, out ecx_69)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1000F66A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1000F6EE(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: eax ebp ebx ecx edi esi esp
// Stack args: Stack +0004(32)
fn1000F6EE_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F6EE:
	word32 ebx_144 = 0x00000020
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F6FD:
	word32 edx_49
	branch fn1000F3A7(ecx, ebx_144, ebx_144, out edx_49) < 0x00000000 l1000F778
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1000F70B:
	word32 esi_131
	branch FormatMessageW(0x00000400, dwArg04, 0x00000000, 0x00000000, Mem0[ecx:word32], Mem0[ecx + 0x00000008:word32], fp - 0x00000008) == 0x00000000 l1000F734
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F734:
	esi_131 = fn100107F1()
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F730:
	esi_131 = 0x00000000
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F73B:
	byte al_135 = esi_131 == 0x8007007A
	branch esi_131 != 0x8007007A l1000F76A
// DataOut: al cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F749:
	word32 ecx_155 = Mem0[ecx + 0x00000008:word32]
	branch ecx_155 + 0x00000020 <u ecx_155 l1000F757
// DataOut: cs ds eax ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:0x8007007A esi:<invalid> eax:<invalid> al:Test(EQ,Z) edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F757:
	ebx_144 = ebx_144 | 0xFFFFFFFF
// DataOut: cs ds eax ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F753:
	ebx_144 = ecx_155 + 0x00000020
// DataOut: cs ds eax ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F75A:
	esi_131 = 0x00000000 - (ecx_155 + 0x00000020 <u ecx_155) & 0x80070216
	al_135 = 0x00 - (ecx_155 + 0x00000020 <u ecx_155) + 0x01
// DataOut: al cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F76A:
	branch al_135 != 0x00 l1000F6FD
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l1000F76E:
	branch esi_131 < 0x00000000 l1000F778
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F778:
	fn1000F2EE(ecx)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F772:
	Mem152[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] | 0xFFFFFFFF
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000F77F:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1000F6EE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx ecx:<invalid> esi:esi eax:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x00000400 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1000F78A(word32 ecx, word32 ebp, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx ecx edi esi esp
fn1000F78A_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000F78A:
	word32 eax_129 = 0x00000020
	word32 ebx_26 = ecx
// DataOut: cs ds eax ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1000F79C:
	Mem38[fp - 0x0000001C:word32] = eax_129
	word32 edx_41
	word32 eax_42 = fn1000F3A7(ebx_26, ebx_26, dwArg00, out edx_41)
	word32 esi_102 = eax_42
	branch eax_42 < 0x00000000 l1000F82F
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7AE:
	word32 esi_81 = Mem38[ebx_26 + 0x00000008:word32]
	word32 edi_82 = Mem38[ebx_26:word32]
	Mem84[fp - 0x0000001C:word32] = 0x00000000
	_set_errno(Mem84[fp - 0x0000001C:int32])
	Mem90[fp - 0x0000001C:word32] = Mem84[fp + 0x00000008:word32]
	Mem95[fp - 0x00000020:word32] = Mem90[fp + 0x00000004:word32]
	word32 edx_97
	word32 esi_99
	word32 eax_100 = fn100107BA(edi_82, esi_81, dwArg00, dwArg04, out edx_97, out ebx_26, out esi_99)
	esi_102 = eax_100
	byte Z_108 = cond(eax_100 - 0x8007007A)
	branch eax_100 != 0x8007007A l1000F7EE
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): Z
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7D6:
	Mem162[fp - 0x0000001C:word32] = fp - 0x0000000C
	_get_errno(Mem162[fp - 0x0000001C:(ptr int32)])
	esi_102 = 0x80070057
	branch Mem162[fp - 0x0000000C:word32] == 0x00000016 l1000F7EC
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7EA:
	esi_102 = 0x8007007A
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:0x80070057 edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7EC:
	Z_108 = cond(esi_102 - 0x8007007A) (alias)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): Z
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7EE:
	byte al_117 = Z_108
	branch esi_102 != 0x8007007A l1000F81A
// DataOut: al cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7F5:
	word32 ecx_138 = Mem95[ebx_26 + 0x00000008:word32]
	branch ecx_138 + 0x00000020 <u ecx_138 l1000F804
// DataOut: cs ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:Test(EQ,Z) ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F804:
	Mem159[fp - 0x00000008:word32] = edx_97 | 0xFFFFFFFF
	word32 edx_156
	*edxOut = edx_97 | 0xFFFFFFFF
// DataOut: cs ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F7FF:
	Mem155[fp - 0x00000008:word32] = ecx_138 + 0x00000020
// DataOut: cs ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F80A:
	esi_102 = 0x00000000 - (ecx_138 + 0x00000020 <u ecx_138) & 0x80070216
	al_117 = 0x00 - (ecx_138 + 0x00000020 <u ecx_138) + 0x01
// DataOut: al cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F81A:
	eax_129 = Mem95[fp - 0x00000008:word32]
	branch al_117 != 0x00 l1000F79C
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000F825:
	branch esi_102 < 0x00000000 l1000F82F
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1000F82F:
	fn1000F2EE(ebx_26)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1000F829:
	Mem135[ebx_26 + 0x00000004:word32] = Mem95[ebx_26 + 0x00000004:word32] | 0xFFFFFFFF
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x8007007A ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1000F836:
	return esi_102
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1000F78A_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1000FA33(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1000FA33_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000FA33:
	word32 eax_127 = 0x8007007A
	branch dwArg04 >u 0xFFFFFFFE l1000FAEA
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000FA4F:
	word32 ecx_56 = Mem0[ecx + 0x0000000C:word32]
	eax_127 = 0x00000000
	branch dwArg04 <=u ecx_56 l1000FAE9
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:0x8007007A -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000FA5F:
	word32 ecx_89
	word32 edx_90
	eax_127 = fn10010416(ecx_56, 0x00000002, fp - 0x0000000C, out ecx_89, out edx_90)
	branch eax_127 < 0x00000000 l1000FAE9
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:0x00000000 ecx:<invalid> ebx:0x00000000 -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1000FA6F:
	word32 ecx_101 = Mem0[ecx + 0x0000000C:word32]
	word32 esi_106 = ecx
	branch ecx - ecx_101 <=u 0x00001000 l1000FA8A
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> -28(fp):0x00000002 -24(fp):fp - 0x0000000C -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FA84:
	esi_106 = ecx_101 + 0x00001000
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:ecx -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FA8A:
	word32 eax_107 = dwArg04
	branch dwArg04 >u esi_106 l1000FA92
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FA90:
	eax_107 = esi_106
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FA92:
	branch eax_107 <=u 0xFFFFFFFE l1000FA9C
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FA9C:
	branch dwArg04 <=u esi_106 l1000FAA2
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FAA0:
	esi_106 = dwArg04
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FA97:
	esi_106 = 0xFFFFFFFE
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FAA2:
	word32 ecx_125
	word32 edx_126
	eax_127 = fn10010416(esi_106, 0x00000010, fp - 0x00000008, out ecx_125, out edx_126)
	branch eax_127 < 0x00000000 l1000FAE8
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FAB6:
	word32 eax_152 = CoTaskMemRealloc(Mem0[ecx:word32], ecx)
	branch eax_152 == 0x00000000 l1000FADA
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> esi:<invalid> -32(fp):0x00000010 -28(fp):fp - 0x00000008 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32)

l1000FADA:
	eax_127 = 0x8007000E
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000FACA:
	word32 edx_181
	eax_127 = fn1000CE99(0x01, fp - 0x0000000C, eax_152, es, ds, ecx, out edx_181)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000FADF:
	branch eax_127 < 0x00000000 l1000FAE8
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000FAE3:
	Mem168[ecx + 0x0000000C:word32] = esi_106
	Mem169[ecx:word32] = eax_152
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000FAE8:
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000FAE9:
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1000FAEA:
	return eax_127
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ebx edx:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

fn1000FA33_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> ebx:ebx edx:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp



word32 fn1000FAF1(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000FAF1_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000FAF1:
	word32 eax_28
	word32 esi_12 = ecx
	word32 edx_13
	*edxOut = 0x10003764
	branch fn100103B2(dwArg04, 0x10003764) != 0x00000000 l1000FB2C
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1000FB0A:
	word32 edx_49
	*edxOut = 0x10003754
	esi_12 = ecx + 0x00000004
	branch fn100103B2(dwArg04, 0x10003754) != 0x00000000 l1000FB2C
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10003764 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1000FB1B:
	word32 edx_56
	*edxOut = 0x10003744
	esi_12 = ecx + 0x00000008
	branch fn100103B2(dwArg04, 0x10003744) == 0x00000000 l1000FB35
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000004 edx:0x10003754 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1000FB35:
	word32 edx_71
	eax_28 = fn1000FB47(ecx + 0x0000000C, dwArg04, dwArg08, out edx_71)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:0x10003744 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000FB2C:
	Mem42[dwArg08:word32] = esi_12
	eax_28 = 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000FB42:
	return eax_28
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1000FAF1_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn1000FB47(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1000FB47_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1000FB47:
	word32 eax_28
	word32 esi_12 = ecx
	word32 edx_13
	*edxOut = 0x10003734
	branch fn100103B2(dwArg04, 0x10003734) != 0x00000000 l1000FB82
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1000FB60:
	word32 edx_60
	*edxOut = 0x10003724
	esi_12 = ecx + 0x00000004
	branch fn100103B2(dwArg04, 0x10003724) != 0x00000000 l1000FB82
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10003734 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1000FB71:
	word32 edx_67
	*edxOut = 0x10003714
	esi_12 = ecx + 0x00000008
	branch fn100103B2(dwArg04, 0x10003714) == 0x00000000 l1000FB89
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000004 edx:0x10003724 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1000FB89:
	word32 edx_80
	branch fn1001036A(ecx + 0x0000000C, dwArg04, dwArg08, out edx_80) < 0x00000000 l1000FB9D
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:0x10003714 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000FB9D:
	eax_28 = 0x80004002
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000FB82:
	Mem56[dwArg08:word32] = esi_12
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000FB99:
	eax_28 = 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1000FBA2:
	return eax_28
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1000FB47_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn1000FBA7(word32 ecx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg10, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +0010(32)
fn1000FBA7_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +0010(32)

l1000FBA7:
	word32 ecx_135
	word32 dwLoc08_137
	Mem27[dwArg10:word32] = Mem0[dwArg10:word32] & 0x00000000
	branch dwArg08 + 0x00000001 <u dwArg08 l1000FBC8
// DataOut: cs ds eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +0004(32)

l1000FBC8:
	*ecxOut = ecx | 0xFFFFFFFF
	dwLoc08_137 = ecx | 0xFFFFFFFF
// DataOut: cs ds eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32)

l1000FBC1:
	*ecxOut = dwArg08 + 0x00000001
	dwLoc08_137 = dwArg08 + 0x00000001
// DataOut: cs ds eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32)

l1000FBCE:
	word32 esi_105 = 0x00000000 - (dwArg08 + 0x00000001 <u dwArg08) & 0x80070216
	branch dwArg08 + 0x00000001 <u dwArg08 l1000FC27
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32)

l1000FBDC:
	Mem74[dwArg10:word32] = Mem27[dwArg10:word32] & 0x00000000
	word32 ecx_84
	word32 edx_85
	word32 eax_86 = fn10010416(ecx_135, 0x00000002, fp - 0x0000000C, out ecx_84, out edx_85)
	esi_105 = eax_86
	branch eax_86 < 0x00000000 l1000FC27
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32)

l1000FBF1:
	word32 eax_95 = CoTaskMemAlloc(ecx)
	Mem97[dwArg10:word32] = eax_95
	branch eax_95 == 0x00000000 l1000FC0D
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000002 -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1000FC0D:
	esi_105 = 0x8007000E
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000002 -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1000FC00:
	word32 ecx_130
	word32 edx_131
	esi_105 = fn1000CE77(0x00, dwArg10, dwArg10, es, ds, out ecx_130, out edx_131)
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000002 -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1000FC12:
	branch esi_105 < 0x00000000 l1000FC27
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000002 -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1000FC16:
	word32 edx_119
	word32 ecx_120
	*ecxOut = fn100102AA(Mem97[dwArg10:word32], dwLoc08_137, dwArg04, dwArg08, out edx_119)
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000002 -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1000FC27:
	return esi_105
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):0x00000002 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1000FBA7_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx eax:<invalid> ecx:<invalid> esi:esi edx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):0x00000002 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1000FC32(word32 edx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es esi fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1000FC32_entry:
	*esiOut = esi
// DataOut: bl cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1000FC32:
	word32 ebp_39 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 edi_18 = dwArg04
	word32 eax_19 = Mem0[dwArg04:word32]
	branch eax_19 == 0x00000000 l1000FC61
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1000FC4C:
	Mem56[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_66
	word32 edi_67
	word32 ebp_68
	word32 ecx_69
	word32 eax_70
	byte SZO_71
	byte C_72
	byte Z_73
	word32 esi_74
	word32 edx_75
	word32 ebx_76
	selector es_77
	selector ds_78
	call Mem56[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_58,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_61,dwLoc14_63,eax_19,ebp_7,ebx,ecx_65,edi_18,edx,es,esi_64,esp_62,SZO_57,Z_21
		defs: C_72,ds_78,eax_70,ebp_68,ebx_76,ecx_69,edi_67,edx_75,es_77,esi_74,esp_66,SZO_71,Z_73
	word32 esp_79
	word32 ecx_82
	word32 eax_83
	byte SZO_84
	byte C_85
	byte Z_86
	word32 esi_87
	call esi_74 (retsize: 4; depth: 4)
		uses: C_72,ds_78,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_61,dwLoc14_63,eax_70,ebp_68,ebx_76,ecx_69,edi_67,edx_75,es_77,esi_74,esp_66,SZO_71,Z_73
		defs: C_85,ds_91,eax_83,ebp_81,ebx_89,ecx_82,edi_80,edx_88,es_90,esi_87,esp_79,SZO_84,Z_86
	*esiOut = Mem56[esp_79:word32]
	esp_15 = esp_79 + 0x00000004
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1000FC61:
	word32 edi_46 = Mem0[esp_15:word32]
	*ediOut = edi_46
	word32 ecx_48
	return fn1002F420(edi_18, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_39, esi, edi_46, es, ds, out ecx_48)
// DataOut: bl cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1000FC32_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



void fn1000FC74(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn1000FC74_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000FC74:
	Mem15[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 ebx_19
	word32 ebp_20
	word32 esi_21
	word32 edi_22
	word32 eax_23 = fn1002FF64(ebx, ecx, edi, out ebx_19, out ebp_20, out esi_21, out edi_22)
	branch eax_23 != 0x00000000 l1000FC95
// DataOut: cs ds eax edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1000FC95:
	Mem46[fp - 0x00000008:word32] = edi_22
	word32 eax_50 = fn1000CF35(eax_23, edx, es, ds)
	Mem52[fp - 0x0000000C:word32] = esi_21
	Mem55[fp - 0x00000010:word32] = 0x10003794
	Mem57[fp - 0x00000014:word32] = eax_50
	word32 edx_61
	word32 ebx_62
	word32 eax_63 = fn1000EFF0(eax_50, es, ds, dwArg00, dwArg04, dwArg08, out edx_61, out ebx_62)
	branch eax_50 == 0x00000000 l1000FCB7
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> ebp:<invalid> -12(fp):0x0000005C -8(fp):0x10002F5C -4(fp):esi
// LocalsOut: Local -0004(32)

l1000FCB1:
	Mem73[fp - 0x0000000C:word32] = eax_50
	fn1000EF70(edx_61, ebx_62, eax_63, es, ds, dwArg00)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ebp:<invalid> -20(fp):<invalid> -16(fp):0x10003794 -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l1000FCB7:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ebp:<invalid> -20(fp):<invalid> -16(fp):0x10003794 -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

l1000FC8E:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> ebp:<invalid> -12(fp):0x0000005C -8(fp):0x10002F5C -4(fp):esi

l1000FCB8:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ebp:<invalid> -20(fp):<invalid> -16(fp):0x10003794 -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

fn1000FC74_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ebp:<invalid> -20(fp):<invalid> -16(fp):0x10003794 -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn1000FCE3(word32 ecx, word32 edx, word32 ebp, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi edx es fs gs ss
// LiveOut: eax ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
fn1000FCE3_entry:
// DataOut: cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32)

l1000FCE3:
	word32 edi_3 = edi
	word32 ebp_102 = fp - 0x00000004
	word32 ebx_17 = ecx
	word32 esp_103 = fp - 0x00000030
	branch ecx == 0x00000000 l1000FD0E
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0018(32)

l1000FCFE:
	word32 esp_614
	word32 edi_615
	word32 ebp_616
	byte SCZO_617
	word32 eax_618
	byte SZO_619
	byte C_620
	word32 ebx_621
	word32 ecx_622
	word32 esi_623
	byte Z_624
	byte S_625
	bcuiposr0 None_626
	byte al_627
	word32 edx_628
	selector es_629
	selector ds_630
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: al,C_25,ds,dwLoc04_6,dwLoc08_12,dwLoc18,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_610,eax_608,ebp_7,ebx_17,ecx_612,edi_3,edx,es,esi_611,esp_609,None,S,SCZO,SZO_23,Z_24
		defs: al_627,C_620,ds_630,eax_618,ebp_616,ebx_621,ecx_622,edi_615,edx_628,es_629,esi_623,esp_614,None_626,S_625,SCZO_617,SZO_619,Z_624
	byte SCZO_634
	word32 eax_635
	byte SZO_636
	byte C_637
	word32 ecx_639
	word32 esi_640
	byte Z_641
	byte S_642
	bcuiposr0 None_643
	byte al_644
	call esi_623 (retsize: 4; depth: 4)
		uses: al_627,C_620,ds_630,dwLoc04_6,dwLoc08_12,dwLoc18,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_610,eax_618,ebp_616,ebx_621,ecx_622,edi_615,edx_628,es_629,esi_623,esp_614,None_626,S_625,SCZO_617,SZO_619,Z_624
		defs: al_644,C_637,ds_647,eax_635,ebp_633,ebx_638,ecx_639,edi_632,edx_645,es_646,esi_640,esp_631,None_643,S_642,SCZO_634,SZO_636,Z_641
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -48(fp):edi -44(fp):esi -40(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0018(32)

l1000FD0E:
	word32 edx_160
	word32 ebx_196
	word32 eax_54 = fn1001007B(fp - 0x00000018, edx, ebx_17, edi_3, es, ds, out edx_160, out ebx_196)
	Mem56[ebp_102 - 0x00000010:word32] = eax_54
	word32 edi_101 = eax_54
	branch eax_54 < 0x00000000 l1000FE35
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD27:
	word32 esp_208 = esp_103 - 0x00000004
	Mem209[esp_208:word32] = Mem56[ebp_102 - 0x00000014:word32]
	Mem211[esp_208 - 0x00000004:word32] = ebx_196
	word32 esp_214
	word32 edi_215
	word32 ebp_216
	byte SCZO_217
	word32 eax_218
	byte SZO_219
	byte C_220
	word32 ebx_221
	word32 ecx_222
	word32 esi_223
	byte Z_224
	byte S_225
	bcuiposr0 None_226
	byte al_227
	word32 edx_228
	selector es_229
	selector ds_230
	call Mem211[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_43,C_59,ds_34,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_206,ebp_44,ebx_53,ecx_213,edi_55,edx_52,es_35,esi_212,esp_210,None_37,S_58,SCZO_39,SZO_57,Z_38
		defs: al_227,C_220,ds_230,eax_218,ebp_216,ebx_221,ecx_222,edi_215,edx_228,es_229,esi_223,esp_214,None_226,S_225,SCZO_217,SZO_219,Z_224
	word32 edi_232
	byte SCZO_234
	word32 eax_235
	byte SZO_236
	byte C_237
	word32 ecx_239
	word32 esi_240
	byte Z_241
	byte S_242
	bcuiposr0 None_243
	byte al_244
	call esi_223 (retsize: 4; depth: 4)
		uses: al_227,C_220,ds_230,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_218,ebp_216,ebx_221,ecx_222,edi_215,edx_228,es_229,esi_223,esp_214,None_226,S_225,SCZO_217,SZO_219,Z_224
		defs: al_244,C_237,ds_247,eax_235,ebp_233,ebx_238,ecx_239,edi_232,edx_245,es_246,esi_240,esp_231,None_243,S_242,SCZO_234,SZO_236,Z_241
	Mem249[ebp_102 - 0x00000010:word32] = eax_235
	edi_101 = eax_235
	branch eax_235 < 0x00000000 l1000FE35
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD47:
	byte al_282
	word32 eax_253 = Mem249[ebp_102 - 0x00000014:word32]
	Mem254[ebp_102 - 0x00000005:byte] = 0x00
	word32 eax_255 = Mem254[eax_253 + 0x00000024:word32]
	Mem257[ebp_102 - 0x0000001C:word32] = Mem254[ebp_102 - 0x0000001C:word32] & 0x00000000
	Mem259[ebp_102 - 0x00000020:word32] = eax_255
	Mem262[esp_103 - 0x00000004:word32] = ebp_102 - 0x00000018
	Mem265[esp_103 - 0x00000008:word32] = ebp_102 - 0x00000020
	Mem267[esp_103 - 0x0000000C:word32] = 0x00000001
	Mem269[esp_103 - 0x00000010:word32] = 0xFFFFFFFF
	Mem271[esp_103 - 0x00000014:word32] = 0x00000008
	word32 eax_272 = CoWaitForMultipleHandles(Mem271[esp_103 - 0x00000014:DWORD], Mem271[esp_103 - 0x00000010:DWORD], Mem271[esp_103 - 0x0000000C:ULONG], Mem271[esp_103 - 0x00000008:LPHANDLE], Mem271[esp_103 - 0x00000004:LPDWORD])
	Mem275[ebp_102 - 0x00000010:word32] = eax_272
	edi_101 = eax_272
	branch eax_272 < 0x00000000 l1000FD87
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD75:
	branch Mem275[ebp_102 - 0x00000018:word32] == 0x00000000 l1000FD87
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD87:
	al_282 = Mem275[ebp_102 - 0x00000005:byte]
// DataOut: al cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD7B:
	Mem607[ebp_102 - 0x00000010:word32] = 0x800704C7
	edi_101 = 0x800704C7
	al_282 = 0x01
// DataOut: al cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD8A:
	Mem284[ebp_102 - 0x0000000C:word32] = 0x00000000
	word32 ecx_283 = 0x00000000
	branch al_282 == 0x00 l1000FDCC
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FD93:
	word32 esi_489 = Mem284[ebx_196:word32]
	Mem492[esp_103 - 0x00000004:word32] = ebp_102 - 0x0000000C
	word32 esi_493
	word32 edi_494
	word32 eax_495 = fn1000FC32(edx_160, ebx_196, esi_489, es, ds, dwArg00, out esi_493, out edi_494)
	Mem499[esp_103 - 0x00000004:word32] = eax_495
	Mem501[esp_103 - 0x00000008:word32] = 0x100037A4
	Mem503[esp_103 - 0x0000000C:word32] = ebx_196
	word32 esp_504
	word32 edi_505
	word32 ebp_506
	byte SCZO_507
	word32 eax_508
	byte SZO_509
	byte C_510
	word32 ebx_511
	word32 ecx_512
	word32 esi_513
	byte Z_514
	byte S_515
	bcuiposr0 None_516
	byte al_517
	word32 edx_518
	selector es_519
	selector ds_520
	call Mem503[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_282,C_287,ds_247,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_495,ebp_233,ebx_238,ecx_497,edi_494,edx_245,es_246,esi_493,esp_502,None_243,S_277,SCZO_279,SZO_285,Z_286
		defs: al_517,C_510,ds_520,eax_508,ebp_506,ebx_511,ecx_512,edi_505,edx_518,es_519,esi_513,esp_504,None_516,S_515,SCZO_507,SZO_509,Z_514
	word32 edi_522
	byte SCZO_524
	word32 eax_525
	byte SZO_526
	byte C_527
	word32 ecx_529
	word32 esi_530
	byte Z_531
	byte S_532
	bcuiposr0 None_533
	byte al_534
	call Mem503[esi_513:word32] (retsize: 4; depth: 4)
		uses: al_517,C_510,ds_520,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_508,ebp_506,ebx_511,ecx_512,edi_505,edx_518,es_519,esi_513,esp_504,None_516,S_515,SCZO_507,SZO_509,Z_514
		defs: al_534,C_527,ds_537,eax_525,ebp_523,ebx_528,ecx_529,edi_522,edx_535,es_536,esi_530,esp_521,None_533,S_532,SCZO_524,SZO_526,Z_531
	branch eax_525 < 0x00000000 l1000FDC6
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FDB3:
	word32 eax_558 = Mem503[ebp_102 - 0x0000000C:word32]
	Mem560[esp_103 - 0x00000004:word32] = eax_558
	word32 esp_564
	word32 edi_565
	word32 ebp_566
	byte SCZO_567
	word32 eax_568
	byte SZO_569
	byte C_570
	word32 ebx_571
	word32 ecx_572
	word32 esi_573
	byte Z_574
	byte S_575
	bcuiposr0 None_576
	byte al_577
	word32 edx_578
	selector es_579
	selector ds_580
	call Mem560[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_534,C_540,ds_537,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_558,ebp_523,ebx_528,ecx_563,edi_522,edx_535,es_536,esi_562,esp_559,None_533,S_539,SCZO_524,SZO_538,Z_531
		defs: al_577,C_570,ds_580,eax_568,ebp_566,ebx_571,ecx_572,edi_565,edx_578,es_579,esi_573,esp_564,None_576,S_575,SCZO_567,SZO_569,Z_574
	word32 edi_582
	byte SCZO_584
	word32 eax_585
	byte SZO_586
	byte C_587
	word32 ecx_589
	word32 esi_590
	byte Z_591
	byte S_592
	bcuiposr0 None_593
	byte al_594
	call esi_573 (retsize: 4; depth: 4)
		uses: al_577,C_570,ds_580,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_568,ebp_566,ebx_571,ecx_572,edi_565,edx_578,es_579,esi_573,esp_564,None_576,S_575,SCZO_567,SZO_569,Z_574
		defs: al_594,C_587,ds_597,eax_585,ebp_583,ebx_588,ecx_589,edi_582,edx_595,es_596,esi_590,esp_581,None_593,S_592,SCZO_584,SZO_586,Z_591
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FDC6:
	ecx_283 = Mem503[ebp_102 - 0x0000000C:word32]
	edi_101 = Mem503[ebp_102 - 0x00000010:word32]
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FDCC:
	branch edi_101 < 0x00000000 l1000FE1A
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FDD0:
	branch Mem284[Mem284[ebp_102 - 0x00000014:word32] + 0x00000020:word32] == 0x00000001 l1000FE1A
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FDD9:
	branch ecx_283 != 0x00000000 l1000FE00
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1000FDDD:
	word32 esi_435 = Mem284[ebx_196:word32]
	word32 esp_437 = esp_103 - 0x00000004
	Mem438[esp_437:word32] = ebp_102 - 0x0000000C
	word32 esi_440
	word32 edi_441
	word32 eax_442 = fn1000FC32(edx_160, ebx_196, esi_435, es, ds, dwArg00, out esi_440, out edi_441)
	Mem446[esp_437:word32] = eax_442
	Mem448[esp_437 - 0x00000004:word32] = 0x100037A4
	Mem450[esp_437 - 0x00000008:word32] = ebx_196
	word32 esp_451
	word32 edi_452
	word32 ebp_453
	byte SCZO_454
	word32 eax_455
	byte SZO_456
	byte C_457
	word32 ebx_458
	word32 ecx_459
	word32 esi_460
	byte Z_461
	byte S_462
	bcuiposr0 None_463
	byte al_464
	word32 edx_465
	selector es_466
	selector ds_467
	call Mem450[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_299,C_371,ds_288,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_442,ebp_300,ebx_296,ecx_444,edi_441,edx_290,es_289,esi_440,esp_449,None_291,S_303,SCZO_367,SZO_369,Z_370
		defs: al_464,C_457,ds_467,eax_455,ebp_453,ebx_458,ecx_459,edi_452,edx_465,es_466,esi_460,esp_451,None_463,S_462,SCZO_454,SZO_456,Z_461
	word32 edi_469
	byte SCZO_471
	word32 eax_472
	byte SZO_473
	byte C_474
	word32 ecx_476
	word32 esi_477
	byte Z_478
	byte S_479
	bcuiposr0 None_480
	byte al_481
	call Mem450[esi_460:word32] (retsize: 4; depth: 4)
		uses: al_464,C_457,ds_467,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_455,ebp_453,ebx_458,ecx_459,edi_452,edx_465,es_466,esi_460,esp_451,None_463,S_462,SCZO_454,SZO_456,Z_461
		defs: al_481,C_474,ds_484,eax_472,ebp_470,ebx_475,ecx_476,edi_469,edx_482,es_483,esi_477,esp_468,None_480,S_479,SCZO_471,SZO_473,Z_478
	ecx_283 = Mem450[ebp_102 - 0x0000000C:word32]
	branch eax_472 < 0x00000000 l1000FE17
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE00:
	word32 edx_393 = ebp_102 - 0x00000010
	word32 esp_394 = esp_103 - 0x00000004
	Mem395[esp_394:word32] = edx_393
	Mem397[esp_394 - 0x00000004:word32] = ecx_283
	word32 esp_400
	word32 edi_401
	word32 ebp_402
	byte SCZO_403
	word32 eax_404
	byte SZO_405
	byte C_406
	word32 ebx_407
	word32 ecx_408
	word32 esi_409
	byte Z_410
	byte S_411
	bcuiposr0 None_412
	byte al_413
	word32 edx_414
	selector es_415
	selector ds_416
	call Mem397[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_299,C_371,ds_288,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_392,ebp_390,ebx_296,ecx_399,edi_294,edx_393,es_289,esi_398,esp_396,None_291,S_303,SCZO_367,SZO_369,Z_370
		defs: al_413,C_406,ds_416,eax_404,ebp_402,ebx_407,ecx_408,edi_401,edx_414,es_415,esi_409,esp_400,None_412,S_411,SCZO_403,SZO_405,Z_410
	word32 edi_418
	byte SCZO_420
	word32 eax_421
	byte SZO_422
	byte C_423
	word32 ecx_425
	word32 esi_426
	byte Z_427
	byte S_428
	bcuiposr0 None_429
	byte al_430
	call esi_409 (retsize: 4; depth: 4)
		uses: al_413,C_406,ds_416,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_404,ebp_402,ebx_407,ecx_408,edi_401,edx_414,es_415,esi_409,esp_400,None_412,S_411,SCZO_403,SZO_405,Z_410
		defs: al_430,C_423,ds_433,eax_421,ebp_419,ebx_424,ecx_425,edi_418,edx_431,es_432,esi_426,esp_417,None_429,S_428,SCZO_420,SZO_422,Z_427
	ecx_283 = Mem397[ebp_102 - 0x0000000C:word32]
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE17:
	edi_101 = Mem284[ebp_102 - 0x00000010:word32]
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE1A:
	branch ecx_283 == 0x00000000 l1000FE35
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE1E:
	Mem323[ebp_102 - 0x0000000C:word32] = Mem284[ebp_102 - 0x0000000C:word32] & 0x00000000
	word32 esp_327 = esp_103 - 0x00000004
	Mem328[esp_327:word32] = ecx_283
	word32 esp_331
	word32 edi_332
	word32 ebp_333
	byte SCZO_334
	word32 eax_335
	byte SZO_336
	byte C_337
	word32 ebx_338
	word32 ecx_339
	word32 esi_340
	byte Z_341
	byte S_342
	bcuiposr0 None_343
	byte al_344
	word32 edx_345
	selector es_346
	selector ds_347
	call Mem328[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_316,C_325,ds_305,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_326,ebp_317,ebx_313,ecx_330,edi_311,edx_307,es_306,esi_329,esp_327,None_308,S_309,SCZO_310,SZO_324,Z_320
		defs: al_344,C_337,ds_347,eax_335,ebp_333,ebx_338,ecx_339,edi_332,edx_345,es_346,esi_340,esp_331,None_343,S_342,SCZO_334,SZO_336,Z_341
	word32 edi_349
	byte SCZO_351
	word32 eax_352
	byte SZO_353
	byte C_354
	word32 ecx_356
	word32 esi_357
	byte Z_358
	byte S_359
	bcuiposr0 None_360
	byte al_361
	call esi_340 (retsize: 4; depth: 4)
		uses: al_344,C_337,ds_347,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_335,ebp_333,ebx_338,ecx_339,edi_332,edx_345,es_346,esi_340,esp_331,None_343,S_342,SCZO_334,SZO_336,Z_341
		defs: al_361,C_354,ds_364,eax_352,ebp_350,ebx_355,ecx_356,edi_349,edx_362,es_363,esi_357,esp_348,None_360,S_359,SCZO_351,SZO_353,Z_358
	edi_101 = Mem328[ebp_102 - 0x00000010:word32]
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE35:
	word32 ecx_73 = Mem56[ebp_102 - 0x00000014:word32]
	branch ecx_73 == 0x00000000 l1000FE50
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE3C:
	Mem164[ebp_102 - 0x00000014:word32] = Mem56[ebp_102 - 0x00000014:word32] & 0x00000000
	word32 esp_168 = esp_103 - 0x00000004
	Mem169[esp_168:word32] = ecx_73
	word32 esp_172
	word32 edi_173
	word32 ebp_174
	byte SCZO_175
	word32 eax_176
	byte SZO_177
	byte C_178
	word32 ebx_179
	word32 ecx_180
	word32 esi_181
	byte Z_182
	byte S_183
	bcuiposr0 None_184
	byte al_185
	word32 edx_186
	selector es_187
	selector ds_188
	call Mem169[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_70,C_166,ds_60,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_167,ebp_71,ebx_68,ecx_171,edi_66,edx_62,es_61,esi_170,esp_168,None_63,S_64,SCZO_65,SZO_165,Z_75
		defs: al_185,C_178,ds_188,eax_176,ebp_174,ebx_179,ecx_180,edi_173,edx_186,es_187,esi_181,esp_172,None_184,S_183,SCZO_175,SZO_177,Z_182
	byte SCZO_192
	word32 eax_193
	byte SZO_194
	byte C_195
	word32 ecx_197
	word32 esi_198
	byte Z_199
	byte S_200
	bcuiposr0 None_201
	byte al_202
	call esi_181 (retsize: 4; depth: 4)
		uses: al_185,C_178,ds_188,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_176,ebp_174,ebx_179,ecx_180,edi_173,edx_186,es_187,esi_181,esp_172,None_184,S_183,SCZO_175,SZO_177,Z_182
		defs: al_202,C_195,ds_205,eax_193,ebp_191,ebx_196,ecx_197,edi_190,edx_203,es_204,esi_198,esp_189,None_201,S_200,SCZO_192,SZO_194,Z_199
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE50:
	branch ebx_196 == 0x00000000 l1000FE64
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE54:
	word32 esp_125 = esp_103 - 0x00000004
	Mem126[esp_125:word32] = ebx_196
	word32 esp_129
	word32 edi_130
	word32 ebp_131
	byte SCZO_132
	word32 eax_133
	byte SZO_134
	byte C_135
	word32 ebx_136
	word32 ecx_137
	word32 esi_138
	byte Z_139
	byte S_140
	bcuiposr0 None_141
	byte al_142
	word32 edx_143
	selector es_144
	selector ds_145
	call Mem126[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_88,C_93,ds_77,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_87,ebp_89,ebx_85,ecx_128,edi_83,edx_79,es_78,esi_127,esp_125,None_80,S_81,SCZO_82,SZO_91,Z_92
		defs: al_142,C_135,ds_145,eax_133,ebp_131,ebx_136,ecx_137,edi_130,edx_143,es_144,esi_138,esp_129,None_141,S_140,SCZO_132,SZO_134,Z_139
	byte SCZO_149
	word32 eax_150
	byte SZO_151
	byte C_152
	word32 ebx_153
	word32 ecx_154
	word32 esi_155
	byte Z_156
	byte S_157
	bcuiposr0 None_158
	byte al_159
	call esi_138 (retsize: 4; depth: 4)
		uses: al_142,C_135,ds_145,dwLoc04_6,dwLoc08_12,dwLoc18_48,dwLoc28_15,dwLoc2C_20,dwLoc30_22,dwLoc34_33,eax_133,ebp_131,ebx_136,ecx_137,edi_130,edx_143,es_144,esi_138,esp_129,None_141,S_140,SCZO_132,SZO_134,Z_139
		defs: al_159,C_152,ds_162,eax_150,ebp_148,ebx_153,ecx_154,edi_147,edx_160,es_161,esi_155,esp_146,None_158,S_157,SCZO_149,SZO_151,Z_156
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

l1000FE64:
	word32 esp_107 = esp_103 + 0x00000004
	word32 esi_108 = Mem56[esp_107:word32]
	*esiOut = esi_108
	word32 ebx_113 = Mem56[esp_107 + 0x00000004:word32]
	*ebxOut = ebx_113
	word32 ecx_115
	return fn1002F420(edi_101, Mem56[ebp_102 - 0x00000004:word32] ^ ebp_102, edx_160, ebx_113, ebp_102, esi_108, Mem56[esp_103:word32], es, ds, out ecx_115)
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp

fn1000FCE3_exit:
// DataOut: eax ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -52(fp):ecx -48(fp):edi -44(fp):esi -40(fp):ebx -36(fp):<invalid> -32(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -9(fp):0x00 -8(fp):<invalid> -4(fp):ebp



word32 fn1000FE79(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn1000FE79_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000FE79:
	Mem12[ecx:word32] = 0x100010AC
	word32 edx_17
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x100010BC
	Mem22[ecx + 0x00000004:word32] = 0x100010D0
	branch Mem12[0x10031478:word32] == 0x00000000 l1000FEB2
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1000FEAB:
	__lock()
	Mem39[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1000FEB2:
	Mem24[ecx + 0x00000020:word32] = Mem22[ecx + 0x00000020:word32] & 0x00000000
	Mem28[ecx + 0x00000024:word32] = Mem24[ecx + 0x00000024:word32] & 0x00000000
	Mem31[ecx + 0x00000004:word32] = 0x100010D0
	Mem34[ecx:word32] = 0x100010F4
	return ecx
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn1000FE79_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn1001007B(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn1001007B_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001007B:
	word32 edi_127
	Mem31[ecx:word32] = 0x00000000
	word32 esi_35
	word32 edi_36
	word32 ebx_141
	word32 ebp_128
	word32 eax_37 = fn1002FF64(ebx, 0x00000000, edi, out ebx_141, out ebp_128, out esi_35, out edi_36)
	word32 esp_142 = fp - 0x00000014
	branch eax_37 != 0x00000000 l100100B0
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100100B0:
	word32 edi_185
	byte S_189
	Mem78[fp - 0x00000018:word32] = ebx_141
	word32 edx_80
	word32 eax_81 = fn1000FE79(eax_37, edx, es, ds, out edx_80)
	Mem83[fp - 0x0000001C:word32] = 0x001F0003
	Mem85[fp - 0x00000020:word32] = esi_35
	Mem87[fp - 0x00000024:word32] = esi_35
	Mem89[fp - 0x00000028:word32] = esi_35
	word32 eax_91 = CreateEventExW(Mem89[fp - 0x00000028:LPSECURITY_ATTRIBUTES], Mem89[fp - 0x00000024:LPCWSTR], Mem89[fp - 0x00000020:DWORD], Mem89[fp - 0x0000001C:DWORD])
	Mem93[eax_81 + 0x00000024:word32] = eax_91
	word32 ebx_104 = eax_81
	word32 esp_105 = fp - 0x00000018
	branch eax_91 != 0x00000000 l100100E6
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -28(fp):0x00000028 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100E6:
	edi_185 = esi_35
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100CF:
	word32 eax_191 = GetLastError()
	word16 di_193 = (word16) eax_191
	S_189 = cond(eax_191) (alias)
	branch eax_191 <= 0x00000000 l100100EA
// DataOut: cs di ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100DB:
	edi_185 = (word32) di_193 | 0x80070000
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100E8:
	S_189 = cond(edi_185) (alias)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100EA:
	branch S_189 l10010103
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100EC:
	Mem145[fp - 0x0000001C:word32] = eax_81
	word32 esp_148
	word32 edi_149
	word32 ebp_150
	word32 ecx_151
	word32 eax_152
	byte SZO_153
	byte C_154
	word32 esi_155
	byte Z_156
	word32 ebx_157
	word16 di_158
	byte S_159
	word32 edx_160
	selector es_161
	selector ds_162
	call Mem145[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_102,di_99,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_30,dwLoc10_19,dwLoc14_25,dwLoc18_27,dwLoc1C_29,eax_143,ebp_34,ebx_90,ecx_147,edi_100,edx_80,es,esi_146,esp_144,S_97,SZO_101,Z_98
		defs: C_154,di_158,ds_162,eax_152,ebp_150,ebx_157,ecx_151,edi_149,edx_160,es_161,esi_155,esp_148,S_159,SZO_153,Z_156
	word32 edi_164
	word32 ebp_165
	word32 ecx_166
	word32 eax_167
	byte SZO_168
	byte C_169
	word32 esi_170
	byte Z_171
	word16 di_173
	byte S_174
	word32 edx_175
	selector es_176
	selector ds_177
	call esi_155 (retsize: 4; depth: 4)
		uses: C_154,di_158,ds_162,dwLoc04_6,dwLoc08_16,dwLoc0C_30,dwLoc10_19,dwLoc14_25,dwLoc18_27,dwLoc1C_29,eax_152,ebp_150,ebx_157,ecx_151,edi_149,edx_160,es_161,esi_155,esp_148,S_159,SZO_153,Z_156
		defs: C_169,di_173,ds_177,eax_167,ebp_165,ebx_172,ecx_166,edi_164,edx_175,es_176,esi_170,esp_163,S_174,SZO_168,Z_171
	Mem183[Mem145[ebp_165 - 0x00000008:word32]:word32] = ebx_104
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10010103:
	word32 esp_107 = esp_105 - 0x00000004
	Mem108[esp_107:word32] = ebx_104
	word32 esp_111
	word32 edi_112
	word32 ebp_113
	word32 ecx_114
	word32 eax_115
	byte SZO_116
	byte C_117
	word32 esi_118
	byte Z_119
	word32 ebx_120
	word16 di_121
	byte S_122
	word32 edx_123
	selector es_124
	selector ds_125
	call Mem108[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_102,di_99,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_30,dwLoc10_19,dwLoc14_25,dwLoc18_27,dwLoc1C_29,eax_103,ebp_34,ebx_104,ecx_110,edi_100,edx_80,es,esi_109,esp_107,S_97,SZO_101,Z_98
		defs: C_117,di_121,ds_125,eax_115,ebp_113,ebx_120,ecx_114,edi_112,edx_123,es_124,esi_118,esp_111,S_122,SZO_116,Z_119
	word32 esp_126
	word32 ecx_129
	word32 eax_130
	byte SZO_131
	byte C_132
	word32 esi_133
	byte Z_134
	word32 ebx_135
	word16 di_136
	byte S_137
	call esi_118 (retsize: 4; depth: 4)
		uses: C_117,di_121,ds_125,dwLoc04_6,dwLoc08_16,dwLoc0C_30,dwLoc10_19,dwLoc14_25,dwLoc18_27,dwLoc1C_29,eax_115,ebp_113,ebx_120,ecx_114,edi_112,edx_123,es_124,esi_118,esp_111,S_122,SZO_116,Z_119
		defs: C_132,di_136,ds_140,eax_130,ebp_128,ebx_135,ecx_129,edi_127,edx_138,es_139,esi_133,esp_126,S_137,SZO_131,Z_134
	*ebxOut = Mem108[esp_126:word32]
	esp_142 = esp_126 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100100A9:
	edi_127 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -28(fp):0x00000028 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10010114:
	word32 ecx_64
	return fn1002F420(edi_127, Mem31[ebp_128 - 0x00000004:word32] ^ ebp_128, edx, ebx_141, ebp_128, Mem31[esp_142 + 0x00000004:word32], Mem31[esp_142:word32], es, ds, out ecx_64)
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1001007B_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn100102AA(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100102AA_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100102AA:
	word32 ecx_121 = dwArg04
	word32 edx_24
	*edxOut = 0x00000000
	word32 esi_151 = 0x00000000
	branch ecx != 0x00000000 l100102C8
// DataOut: cs ds dx eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l100102C4:
	branch edx != 0x00000000 l100102D0
// DataOut: cs ds dx eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100102C8:
	branch edx <=u 0x7FFFFFFF l100102D5
// DataOut: cs ds dx eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100102D0:
	esi_151 = 0x80070057
// DataOut: cs ds dx eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100102D5:
	branch esi_151 < 0x00000000 l100102E7
// DataOut: cs ds dx eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100102D9:
	branch dwArg08 <u 0x7FFFFFFF l100102FB
// DataOut: cs ds dx eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100102FB:
	branch dwArg04 != 0x00000000 l10010304
// DataOut: cs ds dx eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100102FF:
	ecx_121 = 0x10003338
// DataOut: cs ds dx eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10010304:
	word32 eax_89 = 0x00000000 - (-dwArg04 == 0x00000000) & dwArg08
	branch edx != 0x00000000 l1001032B
// DataOut: cs ds dx eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001032B:
	ecx_121 = 0x00000000
	word32 edx_118
	branch fn10010448(ecx, edx, fp - 0x00000008, ecx_121, eax_89, out edx_118) < 0x00000000 l100102F0
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10010348:
	branch edx <=u 0x00000001 l100102F0
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 edx:<invalid> eax:<invalid> esi:<invalid> -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001034D:
	branch edx * 0x00000002 <=u 0x00000002 l100102F0
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 edx:<invalid> eax:<invalid> esi:<invalid> -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10010355:
	memset(ecx + 0x00000002, 0x00000000, edx * 0x00000002 + 0xFFFFFFFE)
	ecx_121 = 0x00000001
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 edx:<invalid> eax:<invalid> esi:<invalid> -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10010311:
	branch eax_89 == 0x00000000 l100102F0
// DataOut: cs ds dx ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10010315:
	branch Mem0[ecx_121:word16] == 0x0000 l100102F0
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001031A:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100102E2:
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100102E7:
	branch edx == 0x00000000 l100102F0
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100102EB:
	Mem76[ecx:word16] = 0x0000
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:0x00000000 eax:<invalid> esi:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100102F0:
	return ecx_121
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> edx:<invalid> eax:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100102AA_exit:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx ecx:<invalid> edx:<invalid> eax:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn1001036A(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001036A_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1001036A:
	word32 eax_24
	word32 edx_13
	*edxOut = 0x10003774
	branch fn100103B2(dwArg04, 0x10003774) == 0x00000000 l1001038C
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1001038C:
	word32 edx_39
	*edxOut = 0x100037B4
	word32 eax_40 = fn100103B2(dwArg04, 0x100037B4)
	branch eax_40 == 0x00000000 l1001039F
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10003774 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1001039A:
	Mem52[dwArg08:word32] = ecx
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x100037B4 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001039F:
	eax_24 = (0x00000000 - (-eax_40 == 0x00000000) & 0x7FFFBFFE) + 0x80004002
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x100037B4 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10010383:
	Mem34[dwArg08:word32] = ecx
	eax_24 = 0x00000000
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10003774 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100103AD:
	return eax_24
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp

fn1001036A_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp



word32 fn100103B2(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn100103B2_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100103B2:
	branch Mem0[ecx:word32] != Mem0[edx:word32] l100103D4
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100103B8:
	branch Mem0[ecx + 0x00000004:word32] != Mem0[edx + 0x00000004:word32] l100103D4
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l100103C0:
	branch Mem0[ecx + 0x00000008:word32] != Mem0[edx + 0x00000008:word32] l100103D4
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l100103C8:
	branch Mem0[ecx + 0x0000000C:word32] != Mem0[edx + 0x0000000C:word32] l100103D4
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l100103D4:
	return 0x00000000
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l100103D0:
	return 0x00000001
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

fn100103B2_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>



void fn100103D7(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed:
// Preserved: esp
fn100103D7_entry:
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100103D7:
	RaiseException(ecx, 0x00000001, 0x00000000, 0x00000000)
	return
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn100103D7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp -16(fp):ecx -12(fp):0x00000001 -8(fp):0x00000000 -4(fp):0x00000000



word32 fn100103E5(word32 ecx, word32 ebp, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp ecx
// LiveOut: ebp edx esp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esp rax rbp rcx rdx rsp sp spl
// Preserved: edi
// Stack args: Stack +0008(32) Stack +000C(32)
fn100103E5_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l100103E5:
	branch dwArg0C <u dwArg08 l100103F7
// DataOut: cs ds eax ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(0)

l100103F4:
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0)

l100103F7:
	word32 esp_27
	word32 edi_28
	word32 ebp_29
	word32 edx_30
	word32 eax_31
	byte SCZO_32
	byte C_33
	word32 ecx_34
	byte SZO_35
	byte S_36
	call api-ms-win-core-winrt-string-l1-1-0.dll!WindowsCreateStringReference (retsize: 4; depth: 24)
		uses: C_13,dwLoc04_6,dwLoc08_18,dwLoc0C_20,dwLoc10_22,dwLoc14_26,eax_16,ebp_7,ecx,edi_3,edx_14,esp_25,SCZO_12
		defs: C_33,eax_31,ebp_29,ecx_34,edi_28,edx_30,esp_27,S_36,SCZO_32,SZO_35
	branch eax_31 < 0x00000000 l1001040E
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1001040E:
	fn100103D7(eax_31)
	int3()
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):ecx + 0x00000014 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10010415_thunk_fn10010416:
	word32 ecx_51
	word32 edx_52
	fn10010416(eax_31, edx_30, dwArg00, out ecx_51, out edx_52)
	return edx_52
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):ecx + 0x00000014 -4(fp):ebp

l1001040A:
	word32 ebp_47
	*ebpOut = Mem0[esp_27:word32]
	return edx_30
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):ecx + 0x00000014 -4(fp):ebp

fn100103E5_exit:
// DataOut: ebp edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):ecx + 0x00000014 -4(fp):ebp



word32 fn10010416(word32 ecx, word32 edx, word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn10010416_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10010416:
	word32 ecx_10
	*ecxOut = 0x00000000
	word32 edx_14 = SLICE(edx *u ecx, word32, 32)
	*edxOut = edx_14
	branch edx_14 >u 0x00000000 l10010436
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): C
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10010428:
	branch edx_14 <u 0x00000000 l1001042F
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:ecx ecx:0x00000000 Sequence edx:eax:edx *u 0x00000000 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1001042A:
	branch false l10010436
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:ecx ecx:0x00000000 Sequence edx:eax:edx *u 0x00000000 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10010436:
	Mem44[dwArg04:word32] = Mem0[dwArg04:word32] | 0xFFFFFFFF
	*ecxOut = 0x80070216
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:ecx ecx:0x00000000 Sequence edx:eax:edx *u 0x00000000 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001042F:
	Mem51[dwArg04:word32] = 0x00000000
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:ecx ecx:0x00000000 Sequence edx:eax:edx *u 0x00000000 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10010441:
	return ecx_10
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> Sequence edx:eax:edx *u 0x00000000 esi:0x00000000 -8(fp):esi -4(fp):ebp

fn10010416_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> Sequence edx:eax:edx *u 0x00000000 esi:esi -8(fp):esi -4(fp):ebp



word32 fn10010448(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn10010448_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10010448:
	word32 eax_27
	word32 esi_111 = 0x00000000
	branch edx == 0x00000000 l10010483
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10010456:
	word32 ebx_110 = dwArg0C
	word32 edi_71 = dwArg08 - ecx
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:0x00000000 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10010460:
	branch ebx_110 == 0x00000000 l1001047A
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10010464:
	word16 ax_104 = (word16) (word32) Mem0[edi_71 + ecx:word16]
	branch ax_104 == 0x0000 l1001047A
// DataOut: ax cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1001046D:
	Mem108[ecx:word16] = ax_104
	ecx = ecx + 0x00000002
	ebx_110 = ebx_110 - 0x00000001
	esi_111 = esi_111 + 0x00000001
	edx = edx - 0x00000001
	branch edx != 0x00000000 l10010460
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1001047A:
	eax_27 = 0x00000000
	branch edx != 0x00000000 l1001048C
// DataOut: cs ds eax ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10010483:
	ecx = ecx - 0x00000002
	eax_27 = 0x8007007A
	esi_111 = esi_111 - 0x00000001
// DataOut: cs ds eax ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:0x00000000 esi:<invalid> ebx:ebx ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1001048C:
	Mem34[ecx:word16] = 0x0000
	word32 edx_32
	*edxOut = 0x00000000
	branch dwArg04 == 0x00000000 l1001049A
// DataOut: cs ds eax ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:ebx edx:<invalid> -16(fp):edi -12(fp):0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10010498:
	Mem45[dwArg04:word32] = esi_111
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:ebx -16(fp):edi -12(fp):0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001049A:
	return eax_27
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:ebx -16(fp):edi -12(fp):0x00000000 -8(fp):esi -4(fp):ebp

fn10010448_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> edx:<invalid> ebx:ebx -16(fp):edi -12(fp):0x00000000 -8(fp):esi -4(fp):ebp



word32 fn1001049F(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001049F_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1001049F:
	word32 eax_17 = 0x00000000
	branch edx == 0x00000000 l100104B2
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100104AA:
	branch edx <=u 0x7FFFFFFF l100104B7
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100104B2:
	eax_17 = 0x80070057
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100104B7:
	branch eax_17 < 0x00000000 l100104DA
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100104DA:
	branch edx == 0x00000000 l100104E3
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100104BB:
	branch dwArg08 <=u 0x7FFFFFFE l100104CB
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100104CB:
	fn10010448(ecx, edx, 0x00000000, dwArg04, dwArg08, out edx)
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100104C4:
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100104DE:
	Mem42[ecx:word16] = 0x0000
	edx = 0x00000000
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100104E3:
	return edx
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001049F_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100106F6(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
fn100106F6_entry:
	*esiOut = esi
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100106F6:
	word32 ebp_38 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 edi_17 = ecx
	branch Mem0[ecx:word32] == 0x00000000 l10010724
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001070F:
	Mem55[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 esp_65
	word32 edi_66
	word32 ebp_67
	word32 ecx_68
	word32 eax_69
	byte SZO_70
	byte C_71
	byte Z_72
	word32 esi_73
	word32 edx_74
	word32 ebx_75
	selector es_76
	selector ds_77
	call Mem55[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_57,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_60,dwLoc14_62,eax_58,ebp_7,ebx,ecx_64,edi_17,edx,es,esi_63,esp_61,SZO_56,Z_20
		defs: C_71,ds_77,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_74,es_76,esi_73,esp_65,SZO_70,Z_72
	word32 esp_78
	word32 ecx_81
	word32 eax_82
	byte SZO_83
	byte C_84
	byte Z_85
	word32 esi_86
	call esi_73 (retsize: 4; depth: 4)
		uses: C_71,ds_77,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_60,dwLoc14_62,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_74,es_76,esi_73,esp_65,SZO_70,Z_72
		defs: C_84,ds_90,eax_82,ebp_80,ebx_88,ecx_81,edi_79,edx_87,es_89,esi_86,esp_78,SZO_83,Z_85
	*esiOut = Mem55[esp_78:word32]
	esp_15 = esp_78 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10010724:
	word32 edi_45 = Mem0[esp_15:word32]
	*ediOut = edi_45
	word32 ecx_47
	return fn1002F420(edi_17, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_38, esi, edi_45, es, ds, out ecx_47)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn100106F6_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



word32 fn10010735(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn10010735_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10010735:
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem30[ecx:word32] = 0x10001120
	Mem32[ecx + 0x00000010:word32] = 0x00000000
	word32 esi_119
	word32 edi_112
	word32 eax_39 = fn100106F6(fp - 0x0000000C, edx, ecx, 0x00000000, es, ds, out esi_119, out edi_112)
	word32 ebp_113 = fp - 0x00000004
	word32 ebx_118 = ecx
	word32 esp_111 = fp - 0x00000018
	branch CoCreateFreeThreadedMarshaler(esi_119, eax_39) < 0x00000000 l1001079F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001076F:
	branch Mem32[edi_112:word32] == 0x00000000 l10010787
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp 4(fp):0x00000000
// LocalsOut: fp(32) Local -0008(32)

l10010775:
	Mem125[edi_112:word32] = esi_119
	word32 esp_131
	word32 edi_132
	word32 ebp_133
	word32 ecx_134
	word32 eax_135
	byte SZO_136
	byte C_137
	word32 ebx_138
	word32 esi_139
	byte S_140
	byte Z_141
	word32 edx_142
	selector es_143
	selector ds_144
	call Mem125[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_83,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_33,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_128,dwLoc20_43,eax_126,ebp_7,ebx_20,ecx_130,edi_38,edx,es,esi_129,esp_127,S_47,SZO_81,Z_82
		defs: C_137,ds_144,eax_135,ebp_133,ebx_138,ecx_134,edi_132,edx_142,es_143,esi_139,esp_131,S_140,SZO_136,Z_141
	word32 ebp_147
	word32 ecx_148
	word32 eax_149
	byte SZO_150
	byte C_151
	word32 ebx_152
	word32 esi_153
	byte S_154
	byte Z_155
	word32 edx_156
	selector es_157
	selector ds_158
	call esi_139 (retsize: 4; depth: 4)
		uses: C_137,ds_144,dwLoc04_6,dwLoc08_16,dwLoc0C_33,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_128,dwLoc20_43,eax_135,ebp_133,ebx_138,ecx_134,edi_132,edx_142,es_143,esi_139,esp_131,S_140,SZO_136,Z_141
		defs: C_151,ds_158,eax_149,ebp_147,ebx_152,ecx_148,edi_146,edx_156,es_157,esi_153,esp_145,S_154,SZO_150,Z_155
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp 4(fp):0x00000000
// LocalsOut: fp(32) Local -0008(32)

l10010787:
	word32 esp_88 = esp_111 - 0x00000004
	Mem89[esp_88:word32] = edi_112
	Mem91[esp_88 - 0x00000004:word32] = 0x100037B4
	Mem93[esp_88 - 0x00000008:word32] = 0x00000000
	word32 esp_97
	word32 edi_98
	word32 ebp_99
	word32 ecx_100
	word32 eax_101
	byte SZO_102
	byte C_103
	word32 ebx_104
	word32 esi_105
	byte S_106
	byte Z_107
	word32 edx_108
	selector es_109
	selector ds_110
	call Mem93[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_83,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_33,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_84,dwLoc20_43,eax_87,ebp_7,ebx_20,ecx_96,edi_85,edx,es,esi_95,esp_92,S_47,SZO_81,Z_82
		defs: C_103,ds_110,eax_101,ebp_99,ebx_104,ecx_100,edi_98,edx_108,es_109,esi_105,esp_97,S_106,SZO_102,Z_107
	word32 ecx_114
	word32 eax_115
	byte SZO_116
	byte C_117
	byte S_120
	byte Z_121
	word32 edx_122
	call esi_105 (retsize: 4; depth: 4)
		uses: C_103,ds_110,dwLoc04_6,dwLoc08_16,dwLoc0C_33,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_84,dwLoc20_43,eax_101,ebp_99,ebx_104,ecx_100,edi_98,edx_108,es_109,esi_105,esp_97,S_106,SZO_102,Z_107
		defs: C_117,ds_124,eax_115,ebp_113,ebx_118,ecx_114,edi_112,edx_122,es_123,esi_119,esp_111,S_120,SZO_116,Z_121
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp 4(fp):0x00000000
// LocalsOut: fp(32) Local -0008(32)

l1001079F:
	word32 edx_61
	word32 esi_62
	fn1000C640(fp - 0x0000000C, ebx_118, esi_119, edi_112, es, ds, out edx_61, out esi_62)
	word32 esp_67 = esp_111 + 0x00000004
	word32 ecx_75
	fn1002F420(ebx_118, eax_15 ^ fp - 0x00000004, edx_61, Mem32[esp_67 + 0x00000004:word32], ebp_113, Mem32[esp_67:word32], Mem32[esp_111:word32], es, ds, out ecx_75)
	return edx_61
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp 4(fp):0x00000000

fn10010735_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp 4(fp):0x00000000



word32 fn100107BA(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx dh di dil dl dx eax ebp ebx edi edx esi esp rax rbp rbx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100107BA_entry:
	*edxOut = edx
	*ebxOut = ebx
	*esiOut = esi
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100107BA:
	word32 eax_17 = 0x00000000
	branch edx == 0x00000000 l100107CD
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100107C5:
	branch edx <=u 0x7FFFFFFF l100107D2
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100107CD:
	eax_17 = 0x80070057
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100107D2:
	branch eax_17 < 0x00000000 l100107E4
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100107E4:
	branch edx == 0x00000000 l100107ED
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100107E8:
	Mem67[ecx:word16] = 0x0000
	word32 edx_63
	*edxOut = 0x00000000
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100107D6:
	word32 ebx_50
	word32 esi_51
	eax_17 = fn1001080D(eax_17, ecx, edx, dwArg04, dwArg08, out ebx_50, out esi_51)
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -4(fp):ebp

l100107ED:
	return eax_17
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> edx:0x00000000 esi:<invalid> ebx:<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100107BA_exit:
// DataOut: eax ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> edx:0x00000000 esi:<invalid> ebx:<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100107F1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn100107F1_entry:
// DataOut: bl cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100107F1:
	word32 eax_10 = GetLastError()
	word16 ax_3 = (word16) eax_10
	byte S_20 = cond(eax_10)
	branch eax_10 <= 0x00000000 l10010805
// DataOut: ax bl cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp

l100107FB:
	word32 eax_16 = (word32) ax_3
	eax_10 = eax_16 | 0x80070000
	S_20 = cond(eax_16 | 0x80070000) (alias)
// DataOut: bl cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp eax:<invalid>

l10010805:
	branch S_20 l1001080C
// DataOut: bl cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l10010807:
	eax_10 = 0x80004005
// DataOut: bl cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l1001080C:
	return eax_10
// DataOut: bl cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

fn100107F1_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>



word32 fn1001080D(word32 eax, word32 ecx, word32 edx, word32 dwArg08, word32 dwArg0C, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax ecx edx
// LiveOut: eax ebx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx di dil eax ebp ebx edi esi esp rax rbp rbx rdi rsi rsp si sil sp spl
// Preserved:
fn1001080D_entry:
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001080D:
	word32 esp_35
	word32 edi_36
	word32 ebp_37
	word32 esi_39
	word32 edx_40
	word32 ecx_41
	byte SZO_42
	byte C_43
	byte SCZO_44
	word32 eax_45
	byte S_46
	byte CZ_47
	byte Z_48
	word16 ax_49
	word32 ebx_38
	call vsnwprintf (retsize: 4; depth: 36)
		uses: C_30,dwLoc04_6,dwLoc08_10,dwLoc0C_13,dwLoc10_15,dwLoc14_19,dwLoc18_27,dwLoc1C_32,dwLoc20_34,ebp_7,ebx_28,ecx,edi_23,edx,esi_21,esp_33,SZO_29
		defs: ax_49,C_43,CZ_47,eax_45,ebp_37,ebx_38,ecx_41,edi_36,edx_40,esi_39,esp_35,S_46,SCZO_44,SZO_42,Z_48
	branch eax_45 < 0x00000000 l10010839
// DataOut: cs ds eax ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10010831:
	branch eax_45 >u esi_39 l10010839
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): Z
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 esi:edx - 0x00000001 ebx:0x00000000 -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10010839:
	ebx_38 = 0x8007007A
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 esi:edx - 0x00000001 ebx:0x00000000 -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10010835:
	branch eax_45 != esi_39 l10010844
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 esi:edx - 0x00000001 ebx:0x00000000 -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10010837:
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 esi:edx - 0x00000001 ebx:0x00000000 -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1001083E:
	Mem83[edi_36 + esi_39 * 0x00000002:word16] = 0x0000
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 esi:edx - 0x00000001 ebx:<invalid> -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10010844:
	word32 esi_64
	*esiOut = Mem0[fp - 0x0000000C:word32]
	word32 ebx_68
	*ebxOut = Mem0[fp - 0x00000008:word32]
	return ebx_38
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 esi:edx - 0x00000001 ebx:<invalid> eax:0x00000000 -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1001080D_exit:
// DataOut: eax ebx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> -32(fp):ecx -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn1001084D(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1001084D_entry:
	*edxOut = edx
	*ebxOut = ebx
	*esiOut = esi
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001084D:
	word32 ecx_10 = 0x00000000
	branch dwArg08 == 0x00000000 l10010862
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l1001085B:
	branch dwArg08 <=u 0x7FFFFFFF l10010867
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l10010862:
	ecx_10 = 0x80070057
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l10010867:
	branch ecx_10 < 0x00000000 l10010881
// DataOut: cs ds eax ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l10010881:
	branch dwArg08 == 0x00000000 l1001088D
// DataOut: cs ds ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp
// LocalsOut: Stack +0004(32)

l10010885:
	Mem74[dwArg04:word16] = 0x0000
	word32 edx_70
	*edxOut = 0x00000000
// DataOut: cs ds ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp

l1001086B:
	word32 edx_42
	*edxOut = dwArg08
	word32 ebx_54
	word32 esi_55
	ecx_10 = fn1001080D(dwArg08, dwArg04, dwArg08, dwArg0C, fp + 0x00000010, out ebx_54, out esi_55)
// DataOut: cs ds ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp

l1001088D:
	return ecx_10
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -16(fp):fp + 0x00000010 -12(fp):<invalid> -8(fp):fp + 0x00000010 -4(fp):ebp

fn1001084D_exit:
// DataOut: eax ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> -16(fp):fp + 0x00000010 -12(fp):<invalid> -8(fp):fp + 0x00000010 -4(fp):ebp



void fn10010C73(word32 ecx, word32 edx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10010C73_entry:
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10010C73:
	word32 edi_142
	Mem29[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 ebx_32
	word32 esi_34
	word32 edi_35
	word32 ebp_143
	word32 eax_36 = fn1002FF64(ecx, esi, edi, out ebx_32, out ebp_143, out esi_34, out edi_35)
	word32 esp_141 = fp - 0x00000014
	branch eax_36 != 0x00000000 l10010CA6
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10010CA6:
	word32 edx_76 = fn10010735(eax_36 + 0x00000004, edx, es, ds)
	Mem79[eax_36 + 0x0000001C:word32] = 0x00000001
	Mem80[eax_36:word32] = 0x10001328
	Mem81[eax_36 + 0x00000004:word32] = 0x1000133C
	branch Mem29[0x10031478:word32] == 0x00000000 l10010CD3
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -28(fp):0x00000020 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10010CCC:
	__lock()
	Mem156[0x1003147C:word32] = Mem81[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000020 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10010CD3:
	Mem82[eax_36 + 0x00000004:word32] = 0x1000133C
	Mem83[eax_36:word32] = 0x10001360
	Mem86[fp - 0x00000018:word32] = ebx_32
	Mem88[fp - 0x0000001C:word32] = 0x10003794
	Mem90[fp - 0x00000020:word32] = eax_36
	word32 esp_93
	word32 edi_94
	word32 ebp_95
	word32 ecx_96
	word32 eax_97
	byte SZO_98
	byte C_99
	word32 ebx_100
	word32 esi_101
	byte Z_102
	byte SCZO_103
	word32 edx_104
	selector es_105
	selector ds_106
	call Mem90[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_44,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_25,dwLoc1C_27,eax_84,ebp_33,ebx_32,ecx_92,edi_91,edx_76,es,esi_37,esp_89,SCZO_77,SZO_42,Z_78
		defs: C_99,ds_106,eax_97,ebp_95,ebx_100,ecx_96,edi_94,edx_104,es_105,esi_101,esp_93,SCZO_103,SZO_98,Z_102
	word32 esp_107
	word32 edi_108
	word32 ebp_109
	word32 ecx_110
	word32 eax_111
	byte SZO_112
	byte C_113
	word32 ebx_114
	word32 esi_115
	byte Z_116
	byte SCZO_117
	word32 edx_118
	selector es_119
	selector ds_120
	call edi_94 (retsize: 4; depth: 4)
		uses: C_99,ds_106,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_25,dwLoc1C_27,eax_97,ebp_95,ebx_100,ecx_96,edi_94,edx_104,es_105,esi_101,esp_93,SCZO_103,SZO_98,Z_102
		defs: C_113,ds_120,eax_111,ebp_109,ebx_114,ecx_110,edi_108,edx_118,es_119,esi_115,esp_107,SCZO_117,SZO_112,Z_116
	Mem124[esp_107 - 0x00000004:word32] = esi_115
	word32 esp_127
	word32 edi_128
	word32 ebp_129
	word32 ecx_130
	word32 eax_131
	byte SZO_132
	byte C_133
	word32 ebx_134
	word32 esi_135
	byte Z_136
	byte SCZO_137
	word32 edx_138
	selector es_139
	selector ds_140
	call Mem124[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_113,ds_120,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_25,dwLoc1C_27,eax_111,ebp_109,ebx_114,ecx_126,edi_122,edx_118,es_119,esi_125,esp_123,SCZO_117,SZO_112,Z_116
		defs: C_133,ds_140,eax_131,ebp_129,ebx_134,ecx_130,edi_128,edx_138,es_139,esi_135,esp_127,SCZO_137,SZO_132,Z_136
	word32 ecx_144
	word32 eax_145
	byte SZO_146
	byte C_147
	word32 ebx_148
	word32 esi_149
	byte Z_150
	byte SCZO_151
	call esi_135 (retsize: 4; depth: 4)
		uses: C_133,ds_140,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_25,dwLoc1C_27,eax_131,ebp_129,ebx_134,ecx_130,edi_128,edx_138,es_139,esi_135,esp_127,SCZO_137,SZO_132,Z_136
		defs: C_147,ds_154,eax_145,ebp_143,ebx_148,ecx_144,edi_142,edx_152,es_153,esi_149,esp_141,SCZO_151,SZO_146,Z_150
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000020 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10010C9F:
	edi_142 = 0x8007000E
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -28(fp):0x00000020 -24(fp):0x10002F5C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10010D06:
	word32 esp_56 = esp_141 + 0x00000004
	word32 ecx_64
	fn1002F420(edi_142, Mem29[ebp_143 - 0x00000004:word32] ^ ebp_143, edx, Mem29[esp_56 + 0x00000004:word32], ebp_143, Mem29[esp_56:word32], Mem29[esp_141:word32], es, ds, out ecx_64)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn10010C73_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10010D2A(word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es fs gs ss
// LiveOut: eax ecx edx si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10010D2A_entry:
	*edxOut = edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10010D2A:
	Mem31[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 eax_41 = RegOpenKeyExW(0x80000002, 0x10003350, 0x00000000, 0x00000008, fp - 0x0000001C)
	word32 esi_105 = eax_41
	word16 si_44 = (word16) eax_41
	byte S_142 = cond(eax_41)
	branch eax_41 <= 0x00000000 l10010D73
// DataOut: cs ds ebp edx es esi esp fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0040(32)

l10010D68:
	word32 esi_138 = (word32) si_44
	esi_105 = esi_138 | 0x80070000
	S_142 = cond(esi_138 | 0x80070000) (alias)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> -64(fp):0x80000002 -60(fp):0x10003350 -56(fp):0x00000000 -52(fp):0x00000008 -48(fp):fp - 0x0000001C -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0040(32)

l10010D73:
	branch S_142 l10010DBA
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> -64(fp):0x80000002 -60(fp):0x10003350 -56(fp):0x00000000 -52(fp):0x00000008 -48(fp):fp - 0x0000001C -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0040(32)

l10010D75:
	word32 ebx_96
	word32 esi_97
	word32 eax_98 = fn1001084D(fp - 0x00000018, 0x00000008, 0x100033EC, out edx, out ebx_96, out esi_97)
	esi_105 = eax_98
	branch eax_98 < 0x00000000 l10010DB1
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> -64(fp):0x80000002 -60(fp):0x10003350 -56(fp):0x00000000 -52(fp):0x00000008 -48(fp):fp - 0x0000001C -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10010D91:
	Mem116[fp - 0x00000030:word32] = dwArg04
	Mem118[fp - 0x00000034:word32] = ebx_96
	Mem120[fp - 0x00000038:word32] = 0x00000000
	Mem123[fp - 0x0000003C:word32] = fp - 0x00000018
	Mem126[fp - 0x00000040:word32] = Mem123[fp - 0x0000001C:word32]
	word32 eax_127 = RegOpenKeyExW(Mem126[fp - 0x00000040:HKEY], Mem126[fp - 0x0000003C:LPCWSTR], Mem126[fp - 0x00000038:DWORD], Mem126[fp - 0x00000034:REGSAM], Mem126[fp - 0x00000030:PHKEY])
	esi_105 = eax_127
	word16 si_130 = (word16) eax_127
	branch eax_127 <= 0x00000000 l10010DB1
// DataOut: cs ds ebp edx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -64(fp):0x80000002 -60(fp):fp - 0x00000018 -56(fp):0x00000008 -52(fp):0x100033EC -48(fp):ecx -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10010DA8:
	esi_105 = (word32) si_130 | 0x80070000
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -64(fp):<invalid> -60(fp):fp - 0x00000018 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10010DB1:
	Mem112[fp - 0x00000030:word32] = Mem31[fp - 0x0000001C:word32]
	RegCloseKey(Mem112[fp - 0x00000030:HKEY])
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -64(fp):<invalid> -60(fp):fp - 0x00000018 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10010DBA:
	word32 esi_67 = Mem31[fp - 0x00000028:word32]
	word16 si_68
	*siOut = (word16) esi_67
	word32 ecx_77
	return fn1002F420(esi_105, Mem31[fp - 0x00000008:word32] ^ fp - 0x00000004, edx, Mem31[fp - 0x00000024:word32], fp - 0x00000004, esi_67, Mem31[fp - 0x0000002C:word32], es, ds, out ecx_77)
// DataOut: cs ds eax ecx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn10010D2A_exit:
// DataOut: eax ecx edx si
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):ecx -8(fp):<invalid> -4(fp):ebp



void fn10010DD0(word32 ecx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn10010DD0_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0220(32) Local -0248(32)

l10010DD0:
	word32 esp_117
	word32 edx_240
	word32 ebp_225 = fp - 0x00000004
	word32 esi_154 = 0x00000000
	branch ecx == 0x00000000 l10010F54
// DataOut: cs ds edi es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0220(32) Local -0248(32)

l10010DF3:
	branch Mem0[ecx:word16] == 0x0000 l10010F54
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0220(32) Local -0248(32)

l10010F54:
	branch GetSystemMetrics(0x00001000) != 0x00000000 l10010FB1
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0220(32)

l10010FB1:
	esi_154 = 0x80004005
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -576(fp):0x00001000 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10010F63:
	branch RegOpenKeyExW(0x80000002, 0x10003880, 0x00000000, 0x00000002, fp - 0x00000220) != 0x00000000 l10010FB6
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -576(fp):0x00001000 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0220(32)

l10010F81:
	RegDeleteValueW(dwLoc0220, 0x10003904)
	RegDeleteValueW(dwLoc0220, 0x1000392C)
	RegCloseKey(dwLoc0220)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -592(fp):0x80000002 -588(fp):0x10003880 -584(fp):0x00000000 -580(fp):0x00000002 -576(fp):fp - 0x00000220 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10010FB6:
	esp_117 = fp - 0x0000023C
	word32 ecx_86
	word16 si_88
	branch fn10010D2A(0x00000002, es, ds, fp - 0x00000224, out ecx_86, out edx_240, out si_88) < 0x00000000 l10011004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -592(fp):0x80000002 -588(fp):0x10003880 -584(fp):0x00000000 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp

l10010FD6:
	Mem100[fp - 0x00000240:word32] = 0x10003954
	Mem103[fp - 0x00000244:word32] = Mem100[fp - 0x00000224:word32]
	RegDeleteValueW(Mem103[fp - 0x00000244:HKEY], Mem103[fp - 0x00000240:LPCWSTR])
	Mem107[fp - 0x00000240:word32] = 0x10003974
	Mem110[fp - 0x00000244:word32] = Mem107[fp - 0x00000224:word32]
	RegDeleteValueW(Mem110[fp - 0x00000244:HKEY], Mem110[fp - 0x00000240:LPCWSTR])
	Mem115[fp - 0x00000240:word32] = Mem110[fp - 0x00000224:word32]
	RegCloseKey(Mem115[fp - 0x00000240:HKEY])
	esp_117 = fp - 0x0000023C
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -592(fp):0x80000002 -588(fp):0x10003880 -584(fp):0x00000000 -580(fp):0x00000002 -576(fp):fp - 0x00000224 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp

l10010DFC:
	fn1000F2EE(fp - 0x00000230)
	fn10028EB3(ecx, es, ds, fp - 0x00000230)
	Mem179[fp - 0x00000240:word32] = 0x00000208
	Mem181[fp - 0x00000218:word32] = 0x00000000
	Mem183[fp - 0x00000244:word32] = 0x00000000
	Mem185[fp - 0x00000248:word32] = fp - 0x00000210
	Mem186[fp - 0x00000214:word32] = 0x00000000
	memset(Mem186[fp - 0x00000248:(ptr void)], Mem186[fp - 0x00000244:int32], Mem186[fp - 0x00000240:size_t])
	Mem189[fp - 0x0000021C:word32] = 0x00000104
	Mem192[fp - 0x00000240:word32] = fp - 0x00000234
	Mem195[fp - 0x00000244:word32] = fp - 0x0000021C
	Mem198[fp - 0x00000248:word32] = fp - 0x00000210
	Mem201[fp - 0x0000024C:word32] = fp - 0x00000214
	Mem203[fp - 0x00000250:word32] = 0x00000000
	Mem206[fp - 0x00000254:word32] = Mem203[fp - 0x00000230:word32]
	word32 esp_208 = fp - 0x0000023C
	branch LookupAccountNameLocalW(Mem206[fp - 0x00000254:LPCWSTR], Mem206[fp - 0x00000250:PSID], Mem206[fp - 0x0000024C:LPDWORD], Mem206[fp - 0x00000248:LPWSTR], Mem206[fp - 0x00000244:LPDWORD], Mem206[fp - 0x00000240:PSID_NAME_USE]) != 0x00000000 l10010F00
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000023C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -572(fp):edi -568(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010E8E:
	branch GetLastError() != 0x0000007A l10010F00
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):0x00000000 -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010E99:
	branch Mem206[fp - 0x00000214:word32] <=u 0x00000000 l10010F00
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):0x00000000 -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010EA1:
	Mem262[fp - 0x00000240:word32] = Mem206[fp - 0x00000214:word32]
	Mem264[fp - 0x00000244:word32] = 0x00000000
	word32 eax_265 = LocalAlloc(Mem264[fp - 0x00000244:UINT], Mem264[fp - 0x00000240:SIZE_T])
	Mem268[fp - 0x0000021C:word32] = 0x00000104
	esp_208 = fp - 0x0000023C
	branch eax_265 == 0x00000000 l10010F00
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):0x00000000 -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010EBE:
	Mem274[fp - 0x00000240:word32] = fp - 0x00000234
	Mem277[fp - 0x00000244:word32] = fp - 0x0000021C
	Mem280[fp - 0x00000248:word32] = fp - 0x00000210
	Mem283[fp - 0x0000024C:word32] = fp - 0x00000214
	Mem285[fp - 0x00000250:word32] = eax_265
	Mem288[fp - 0x00000254:word32] = Mem285[fp - 0x00000230:word32]
	esp_208 = fp - 0x0000023C
	branch LookupAccountNameLocalW(Mem288[fp - 0x00000254:LPCWSTR], Mem288[fp - 0x00000250:PSID], Mem288[fp - 0x0000024C:LPDWORD], Mem288[fp - 0x00000248:LPWSTR], Mem288[fp - 0x00000244:LPDWORD], Mem288[fp - 0x00000240:PSID_NAME_USE]) == 0x00000000 l10010F00
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):0x00000000 -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010EEB:
	Mem296[fp - 0x00000240:word32] = fp - 0x00000218
	Mem298[fp - 0x00000244:word32] = eax_265
	word32 esp_299
	word32 edi_300
	byte SCZO_302
	word32 eax_303
	byte SZO_304
	byte C_305
	word32 ecx_307
	byte Z_308
	word16 si_309
	word32 edx_310
	byte CZ_311
	selector fs_312
	byte S_313
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertSidToStringSidW (retsize: 4; depth: 4)
		uses: C_293,CZ_259,ds,dwLoc0220,dwLoc0228_169,dwLoc022C_165,dwLoc0230_161,dwLoc0238_15,dwLoc023C_17,dwLoc0240_174,dwLoc0244_176,dwLoc0248,dwLoc024C,dwLoc0250,dwLoc04_6,dwLoc08_12,eax_294,ebp_7,ebx,ecx_160,edi_267,edx_172,es,esi_20,esp_297,fs,S,SCZO_258,si_21,SZO_291,Z_292
		defs: C_305,CZ_311,ds_315,eax_303,ebp_301,ebx_316,ecx_307,edi_300,edx_310,es_314,esi_306,esp_299,fs_312,S_313,SCZO_302,si_309,SZO_304,Z_308
	Mem318[esp_299 - 0x00000004:word32] = edi_300
	LocalFree(Mem318[esp_299 - 0x00000004:HLOCAL])
	esp_208 = esp_299
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010F00:
	word32 esp_227 = esp_208 - 0x00000004
	Mem228[esp_227:word32] = 0x00001000
	branch GetSystemMetrics(Mem228[esp_227:int32]) != 0x00000000 l10010F22
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10010F22:
	esi_154 = 0x80004005
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l10010F0F:
	Mem250[esp_227:word32] = Mem228[ebp_225 - 0x00000214:word32]
	fn10029472(Mem250[ebp_225 - 0x0000022C:word32], dwArg00)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l10010F27:
	word32 esp_237 = esp_208 - 0x00000004
	Mem238[esp_237:word32] = Mem228[ebp_225 - 0x00000214:word32]
	edx_240 = fn10029517(Mem238[ebp_225 - 0x0000022C:word32], ebp_225, es, ds)
	Mem244[esp_237:word32] = Mem238[ebp_225 - 0x00000214:word32]
	LocalFree(Mem244[esp_237:HLOCAL])
	fn1000F2EE(ebp_225 - 0x0000022C)
	esp_117 = esp_237 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ebx:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):fp - 0x00000214 -584(fp):fp - 0x00000210 -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l10011004:
	word32 ecx_56
	fn1002F420(esi_154, Mem0[ebp_225 - 0x00000004:word32] ^ ebp_225, edx_240, ebx, ebp_225, Mem0[esp_117 + 0x00000004:word32], Mem0[esp_117:word32], es, ds, out ecx_56)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> ebx:<invalid> bl:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn10010DD0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> ebx:<invalid> bl:<invalid> -596(fp):0x00000000 -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -576(fp):<invalid> -572(fp):edi -568(fp):esi -560(fp):0x00000000 -556(fp):0xFFFFFFFF -552(fp):0xFFFFFFFF -540(fp):0x00000104 -536(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10011080(word32 edx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es esi fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn10011080_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10011080:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	__lock()
	Mem23[dwArg04 + 0x00000008:word32] = __xadd(Mem0[dwArg04 + 0x00000008:word32], ebx | 0xFFFFFFFF)
	word32 ebp_105 = fp - 0x00000004
	word32 esp_118 = fp - 0x00000010
	word32 ebx_110 = (ebx | 0xFFFFFFFF) - 0x00000001
	branch ebx_110 != 0x00000000 l100110C9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100110A0:
	branch dwArg04 == 0x00000000 l100110B9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100110A4:
	word32 esp_88
	word32 edi_89
	word32 ebp_90
	word32 ecx_91
	word32 eax_92
	byte SZO_93
	byte C_94
	word32 ebx_95
	byte SCZO_96
	byte Z_97
	word32 esi_98
	word32 edx_99
	selector es_100
	selector ds_101
	call Mem23[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_61,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_83,dwLoc18_85,eax_81,ebp_7,ebx_25,ecx_87,edi_21,edx,es,esi_86,esp_84,SCZO_24,SZO_59,Z_60
		defs: C_94,ds_101,eax_92,ebp_90,ebx_95,ecx_91,edi_89,edx_99,es_100,esi_98,esp_88,SCZO_96,SZO_93,Z_97
	word32 esp_103
	word32 edi_104
	word32 ecx_106
	word32 eax_107
	byte SZO_108
	byte C_109
	byte SCZO_111
	byte Z_112
	word32 esi_113
	call esi_98 (retsize: 4; depth: 4)
		uses: C_94,ds_101,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_83,dwLoc18_85,eax_92,ebp_90,ebx_95,ecx_102,edi_89,edx_99,es_100,esi_98,esp_88,SCZO_96,SZO_93,Z_97
		defs: C_109,ds_116,eax_107,ebp_105,ebx_110,ecx_106,edi_104,edx_114,es_115,esi_113,esp_103,SCZO_111,SZO_108,Z_112
	esi = Mem23[esp_103:word32]
	esp_118 = esp_103 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100110B9:
	branch Mem23[0x10031478:word32] == 0x00000000 l100110C9
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:<invalid> ecx:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100110C2:
	__lock()
	Mem79[0x1003147C:word32] = Mem23[0x1003147C:word32] - 0x00000001
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:<invalid> ecx:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100110C9:
	word32 ecx_54
	fn1002F420(ebx_110, eax_13 ^ fp - 0x00000004, edx, Mem23[esp_118 + 0x00000004:word32], ebp_105, esi, Mem23[esp_118:word32], es, ds, out ecx_54)
	return esi
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:(ebx | 0xFFFFFFFF | 0xFFFFFFFF) - 0x00000001 esi:<invalid> ecx:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn10011080_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -24(fp):0x00000001 -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn100112E3(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp esp
fn100112E3_entry:
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100112E3:
	word32 ebx_134
	Mem27[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 ebx_30
	word32 esi_32
	word32 edi_140
	word32 ebp_129
	word32 eax_34 = fn1002FF64(ebx, ecx, edi, out ebx_30, out ebp_129, out esi_32, out edi_140)
	word32 esp_141 = fp - 0x00000010
	branch eax_34 != 0x00000000 l10011313
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011313:
	Mem69[fp - 0x00000014:word32] = edi_140
	word32 eax_71 = fn10011357(eax_34)
	Mem74[fp - 0x00000018:word32] = esi_32
	Mem76[fp - 0x0000001C:word32] = 0x10003794
	Mem78[fp - 0x00000020:word32] = eax_71
	word32 esp_82
	word32 edi_83
	word32 ebp_84
	word32 ecx_85
	word32 eax_86
	byte SZO_87
	byte C_88
	word32 ebx_89
	word32 esi_90
	byte Z_91
	word32 edx_92
	selector es_93
	selector ds_94
	call Mem78[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_41,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_23,dwLoc18_25,eax_71,ebp_31,ebx_30,ecx_81,edi_72,edx,es,esi_80,esp_77,SZO_39,Z_40
		defs: C_88,ds_94,eax_86,ebp_84,ebx_89,ecx_85,edi_83,edx_92,es_93,esi_90,esp_82,SZO_87,Z_91
	word32 esp_95
	word32 edi_96
	word32 ebp_97
	word32 ecx_98
	word32 eax_99
	byte SZO_100
	byte C_101
	word32 ebx_102
	word32 esi_103
	byte Z_104
	word32 edx_105
	selector es_106
	selector ds_107
	call esi_90 (retsize: 4; depth: 4)
		uses: C_88,ds_94,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_23,dwLoc18_25,eax_86,ebp_84,ebx_89,ecx_85,edi_83,edx_92,es_93,esi_90,esp_82,SZO_87,Z_91
		defs: C_101,ds_107,eax_99,ebp_97,ebx_102,ecx_98,edi_96,edx_105,es_106,esi_103,esp_95,SZO_100,Z_104
	Mem111[esp_95 - 0x00000004:word32] = edi_96
	word32 esp_114
	word32 edi_115
	word32 ebp_116
	word32 ecx_117
	word32 eax_118
	byte SZO_119
	byte C_120
	word32 ebx_121
	word32 esi_122
	byte Z_123
	word32 edx_124
	selector es_125
	selector ds_126
	call Mem111[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_101,ds_107,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_23,dwLoc18_25,eax_99,ebp_97,ebx_109,ecx_113,edi_96,edx_105,es_106,esi_112,esp_110,SZO_100,Z_104
		defs: C_120,ds_126,eax_118,ebp_116,ebx_121,ecx_117,edi_115,edx_124,es_125,esi_122,esp_114,SZO_119,Z_123
	word32 esp_127
	word32 edi_128
	word32 ecx_130
	word32 eax_131
	byte SZO_132
	byte C_133
	word32 esi_135
	byte Z_136
	call esi_122 (retsize: 4; depth: 4)
		uses: C_120,ds_126,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_23,dwLoc18_25,eax_118,ebp_116,ebx_121,ecx_117,edi_115,edx_124,es_125,esi_122,esp_114,SZO_119,Z_123
		defs: C_133,ds_139,eax_131,ebp_129,ebx_134,ecx_130,edi_128,edx_137,es_138,esi_135,esp_127,SZO_132,Z_136
	edi_140 = Mem111[esp_127:word32]
	esp_141 = esp_127 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):0x0000000C -20(fp):0x10002F5C -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1001130C:
	ebx_134 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):0x0000000C -20(fp):0x10002F5C -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10011345:
	word32 ecx_59
	fn1002F420(ebx_134, Mem27[ebp_129 - 0x00000004:word32] ^ ebp_129, edx, Mem27[esp_141 + 0x00000004:word32], ebp_129, Mem27[esp_141:word32], edi_140, es, ds, out ecx_59)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):0x10003794 -24(fp):<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100112E3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):0x10003794 -24(fp):<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10011357(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn10011357_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011357:
	Mem5[ecx + 0x00000008:word32] = 0x00000001
	Mem7[ecx:word32] = 0x100013A0
	branch Mem0[0x10031478:word32] == 0x00000000 l10011374
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001136D:
	__lock()
	Mem13[0x1003147C:word32] = Mem7[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011374:
	Mem10[ecx:word32] = 0x100013B4
	return ecx
// DataOut: cs ds eax ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011357_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:ecx



word32 fn1001137D(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: ax eax
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn1001137D_entry:
// DataOut: bx cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1001137D:
	word32 esi_131 = 0x00000000
	branch edx == 0x00000000 l100113AF
// DataOut: bx cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(16) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10011390:
	branch Mem0[edx:word16] == 0x0000 l100113AF
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(16) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l100113AF:
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0) Local -000C(16) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10011395:
	esi_131 = RegCreateKeyExW(ecx, edx, 0x00000000, 0x00000000, 0x00000000, 0x00000002, 0x00000000, fp - 0x00000008, 0x00000000)
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0) Local -000C(16) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l100113B4:
	branch esi_131 != 0x00000000 l100113DC
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> eax:ecx -56(fp):ecx -52(fp):edx -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000002 -32(fp):0x00000000 -28(fp):fp - 0x00000008 -24(fp):0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0) Local -000C(16) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l100113B8:
	esi_131 = RegSetValueExW(ecx, dwArg04, 0x00000000, dwArg08, dwArg0C, dwArg10)
	branch ecx == ecx l100113DC
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> eax:ecx -56(fp):ecx -52(fp):edx -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000002 -32(fp):0x00000000 -28(fp):fp - 0x00000008 -24(fp):0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(16)

l100113D3:
	RegCloseKey(ecx)
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> eax:<invalid> -56(fp):ecx -52(fp):edx -48(fp):0x00000000 -44(fp):ecx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(16)

l100113DC:
	return esi_131
// DataOut: ax bx cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> eax:<invalid> -56(fp):ecx -52(fp):edx -48(fp):0x00000000 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn1001137D_exit:
// DataOut: ax eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx esi:esi eax:<invalid> -56(fp):ecx -52(fp):edx -48(fp):0x00000000 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



void fn100113E7(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100113E7_entry:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100113E7:
	branch fn1001137D(ecx, edx, dwArg04, 0x00000004, fp - 0x00000008, 0x00000004) <= 0x00000000 l10011414
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001140C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> al:<invalid> -24(fp):<invalid> -20(fp):0x00000004 -16(fp):fp - 0x00000008 -12(fp):0x00000004 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10011414:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> al:<invalid> -24(fp):<invalid> -20(fp):0x00000004 -16(fp):fp - 0x00000008 -12(fp):0x00000004 -8(fp):<invalid> -4(fp):ebp

fn100113E7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> al:<invalid> -24(fp):<invalid> -20(fp):0x00000004 -16(fp):fp - 0x00000008 -12(fp):0x00000004 -8(fp):<invalid> -4(fp):ebp



void fn1001141A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn1001141A_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001141A:
	branch Mem0[0x10031554:word32] != 0x00000000 l10011433
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10011423:
	Mem15[0x10031554:word32] = GetModuleHandleW(0x100039B4)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l10011433:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -4(fp):0x100039B4

fn1001141A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -4(fp):0x100039B4



word32 fn10011434(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn10011434_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10011434:
	word32 edx_26
	word32 ebx_27
	word32 esi_28
	fn100107BA(dwArg04, dwArg08 - dwArg04 >> 0x00000001, dwArg0C, fp + 0x00000010, out edx_26, out ebx_27, out esi_28)
	branch Mem0[fp + 0x00000008:word32] == esi_28 l1001146E
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011457:
	word32 ecx_50 = esi_28
	word32 edx_51
	*edxOut = esi_28 + 0x00000002
// DataOut: cs ds ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -16(fp):<invalid> -12(fp):fp + 0x00000010 -8(fp):esi -4(fp):ebp

l1001145C:
	ecx_50 = ecx_62 + 0x00000002
	word32 ecx_62 = ecx_50
	branch Mem0[ecx_62:word16] != 0x0000 l1001145C
// DataOut: cs ds ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> ebx:<invalid> -16(fp):<invalid> -12(fp):fp + 0x00000010 -8(fp):esi -4(fp):ebp

l10011467:
	esi_28 = esi_28 + (ecx_50 - (esi_28 + 0x00000002) >> 0x00000001) * 0x00000002
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> ebx:<invalid> -16(fp):<invalid> -12(fp):fp + 0x00000010 -8(fp):esi -4(fp):ebp

l1001146E:
	return esi_28
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> ebx:<invalid> -16(fp):<invalid> -12(fp):fp + 0x00000010 -8(fp):esi -4(fp):ebp

fn10011434_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> ebx:<invalid> -16(fp):<invalid> -12(fp):fp + 0x00000010 -8(fp):esi -4(fp):ebp



word32 fn10011473(word32 ecx, word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi edx es fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10011473_entry:
// DataOut: cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10011473:
	word32 edi_106 = edi
	word32 ebp_104 = fp - 0x00000004
	word32 ebx_120 = ecx
	word32 esp_107 = fp - 0x00000218
	word32 esi_117 = dwArg04
	branch edx == 0x00000000 l10011669
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l1001149F:
	branch ecx == 0x00000000 l10011669
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000218 edi:edi ebp:fp - 0x00000004 eax:edx ebx:ecx esi:<invalid> -536(fp):esi -532(fp):ebx -528(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114A7:
	word32 edi_77 = Mem0[0x10031550:word32]
	Mem81[ecx:word16] = 0x0000
	word32 esp_105 = fp - 0x0000021C
	branch edi_77 == 0x00000000 l100114D7
// DataOut: cl cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000218 edi:edi ebp:fp - 0x00000004 eax:edx ebx:ecx esi:<invalid> -536(fp):esi -532(fp):ebx -528(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114B7:
	branch Mem81[0x10031548:byte] == 0x00 l100114D7
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx esi:<invalid> ecx:0x00000000 -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114BF:
	word32 esp_366
	word32 edi_367
	word32 ebp_368
	byte SCZO_369
	word32 eax_370
	byte SZO_371
	byte C_372
	word32 ebx_373
	word32 edx_374
	word32 ecx_375
	word32 esi_376
	byte Z_377
	word16 cx_378
	byte cl_379
	word16 ax_380
	selector es_381
	selector ds_382
	call Mem81[0x100323BC:word32] (retsize: 4; depth: 556)
		uses: ax,C_84,cl_80,cx_79,ds,dwLoc020C,dwLoc0210_20,dwLoc0214_15,dwLoc0218_23,dwLoc021C_76,dwLoc0220_360,dwLoc0224_362,dwLoc0228_364,dwLoc04_6,dwLoc08_12,eax_17,ebp_7,ebx_19,ecx_365,edi_77,edx,es,esi_25,esp_363,SCZO_357,SZO_82,wLoc0208,Z_358
		defs: ax_380,C_372,cl_379,cx_378,ds_382,eax_370,ebp_368,ebx_373,ecx_375,edi_367,edx_374,es_381,esi_376,esp_366,SCZO_369,SZO_371,Z_377
	word32 edi_384
	byte SCZO_386
	word32 eax_387
	byte SZO_388
	byte C_389
	word32 ecx_392
	byte Z_394
	word16 cx_395
	byte cl_396
	word16 ax_397
	call edi_367 (retsize: 4; depth: 4)
		uses: ax_380,C_372,cl_379,cx_378,ds_382,dwLoc020C,dwLoc0210_20,dwLoc0214_15,dwLoc0218_23,dwLoc021C_76,dwLoc0220_360,dwLoc0224_362,dwLoc0228_364,dwLoc04_6,dwLoc08_12,eax_370,ebp_368,ebx_373,ecx_375,edi_367,edx_374,es_381,esi_376,esp_366,SCZO_369,SZO_371,wLoc0208,Z_377
		defs: ax_397,C_389,cl_396,cx_395,ds_399,eax_387,ebp_385,ebx_390,ecx_392,edi_384,edx_391,es_398,esi_393,esp_383,SCZO_386,SZO_388,Z_394
	branch Mem81[ebx_120:word16] != 0x0000 l10011668
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx esi:<invalid> ecx:0x00000000 -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114D7:
	word32 eax_124 = Mem81[esi_117:word32]
	branch eax_124 == 0x00000000 l1001151A
// DataOut: cs ds eax ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l1001151A:
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114E7:
	branch eax_124 == 0x00000001 l1001150E
// DataOut: cs ds eax ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l1001150E:
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114EC:
	branch eax_124 == 0x00000002 l10011502
// DataOut: cs ds eax ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l10011502:
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114F1:
	branch eax_124 != 0x00000003 l10011524
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l100114F6:
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):0x10003088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0210(32)

l10011524:
	word32 eax_164
	word32 esp_131 = esp_105 - 0x00000004
	Mem132[esp_131:word32] = 0x00000000
	Mem136[esp_131 - 0x00000004:word32] = 0x00000100
	Mem140[esp_131 - 0x00000008:word32] = fp - 0x00000208
	Mem142[esp_131 - 0x0000000C:word32] = 0x00000400
	Mem145[esp_131 - 0x00000010:word32] = Mem142[esi_117 + 0x00000004:word32]
	Mem147[esp_131 - 0x00000014:word32] = 0x00000000
	Mem149[esp_131 - 0x00000018:word32] = 0x00001200
	FormatMessageW(Mem149[esp_131 - 0x00000018:DWORD], Mem149[esp_131 - 0x00000014:LPCVOID], Mem149[esp_131 - 0x00000010:DWORD], Mem149[esp_131 - 0x0000000C:DWORD], Mem149[esp_131 - 0x00000008:LPWSTR], Mem149[esp_131 - 0x00000004:DWORD], Mem149[esp_131:(ptr va_list)])
	Mem157[esp_131:word32] = Mem149[esi_117 + 0x00000048:word32]
	Mem160[esp_131 - 0x00000004:word32] = Mem157[esi_117 + 0x00000044:word32]
	word32 edi_161 = ebx_120 + edx * 0x00000002
	branch Mem149[esi_117 + 0x0000001C:word32] == 0x00000000 l1001157A
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -552(fp):<invalid> -548(fp):0x00000000 -544(fp):edx -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001157A:
	Mem332[esp_131 - 0x00000008:word32] = 0x10003A18
	Mem334[esp_131 - 0x0000000C:word32] = edi_161
	Mem336[esp_131 - 0x00000010:word32] = ebx_120
	word32 edx_337
	eax_164 = fn10011434(dwArg00, dwArg04, dwArg08, out edx_337)
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx esi:<invalid> ecx:<invalid> -568(fp):0x00001200 -564(fp):0x00000000 -560(fp):<invalid> -556(fp):0x00000400 -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011563:
	Mem316[esp_131 - 0x00000008:word32] = Mem160[esi_117 + 0x00000020:word32]
	Mem319[esp_131 - 0x0000000C:word32] = Mem316[esi_117 + 0x0000001C:word32]
	Mem321[esp_131 - 0x00000010:word32] = 0x100039F4
	Mem323[esp_131 - 0x00000014:word32] = edi_161
	Mem325[esp_131 - 0x00000018:word32] = ebx_120
	word32 edx_326
	eax_164 = fn10011434(dwArg00, dwArg04, dwArg08, out edx_326)
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx esi:<invalid> ecx:<invalid> -568(fp):0x00001200 -564(fp):0x00000000 -560(fp):<invalid> -556(fp):0x00000400 -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011589:
	word32 ebx_168 = eax_164
	branch Mem160[esi_117 + 0x0000004C:word32] == 0x00000000 l100115A5
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011591:
	word32 esp_301 = esp_105 - 0x00000004
	Mem302[esp_301:word32] = Mem160[esi_117 + 0x0000004C:word32]
	Mem304[esp_301 - 0x00000004:word32] = 0x10003A2C
	Mem306[esp_301 - 0x00000008:word32] = edi_161
	Mem308[esp_301 - 0x0000000C:word32] = eax_164
	word32 edx_309
	ebx_168 = fn10011434(dwArg00, dwArg04, dwArg08, out edx_309)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100115A5:
	word32 esp_172 = esp_105 - 0x00000004
	Mem173[esp_172:word32] = ebp_104 - 0x00000204
	Mem176[esp_172 - 0x00000004:word32] = Mem173[esi_117 + 0x00000004:word32]
	Mem179[esp_172 - 0x00000008:word32] = GetCurrentThreadId()
	Mem182[esp_172 - 0x0000000C:word32] = Mem179[esi_117 + 0x00000024:word32]
	Mem185[esp_172 - 0x00000010:word32] = Mem182[ebp_104 - 0x00000208:word32]
	Mem187[esp_172 - 0x00000014:word32] = 0x10003A48
	Mem189[esp_172 - 0x00000018:word32] = edi_161
	Mem191[esp_172 - 0x0000001C:word32] = ebx_168
	word32 eax_195 = fn10011434(dwArg00, dwArg04, dwArg08, out edx)
	esp_105 = esp_172 + 0x00000004
	branch Mem191[esi_117 + 0x0000000C:word32] != 0x00000000 l100115E3
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100115D5:
	branch Mem191[esi_117 + 0x00000028:word32] != 0x00000000 l100115E3
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100115DA:
	branch Mem191[esi_117 + 0x00000018:word32] == 0x00000000 l10011668
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100115E3:
	Mem204[esp_172:word32] = 0x10003A7C
	Mem206[esp_172 - 0x00000004:word32] = edi_161
	Mem208[esp_172 - 0x00000008:word32] = eax_195
	word32 edx_209
	word32 eax_210 = fn10011434(dwArg00, dwArg04, dwArg08, out edx_209)
	branch Mem208[esi_117 + 0x0000000C:word32] == 0x00000000 l1001160A
// DataOut: cs ds eax edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100115F8:
	Mem284[esp_172:word32] = Mem208[esi_117 + 0x0000000C:word32]
	Mem286[esp_172 - 0x00000004:word32] = 0x10003A88
	Mem288[esp_172 - 0x00000008:word32] = edi_161
	Mem290[esp_172 - 0x0000000C:word32] = eax_210
	word32 edx_291
	eax_210 = fn10011434(dwArg00, dwArg04, dwArg08, out edx_291)
// DataOut: cs ds eax edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001160A:
	branch Mem208[esi_117 + 0x00000028:word32] == 0x00000000 l10011622
// DataOut: cs ds eax edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011610:
	word32 esp_269 = esp_105 - 0x00000004
	Mem270[esp_269:word32] = Mem208[esi_117 + 0x00000028:word32]
	Mem272[esp_269 - 0x00000004:word32] = 0x10003AA0
	Mem274[esp_269 - 0x00000008:word32] = edi_161
	Mem276[esp_269 - 0x0000000C:word32] = eax_210
	word32 edx_277
	eax_210 = fn10011434(dwArg00, dwArg04, dwArg08, out edx_277)
// DataOut: cs ds eax edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011622:
	branch Mem208[esi_117 + 0x00000014:word32] == 0x00000000 l1001163F
// DataOut: cs ds eax edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001163F:
	branch Mem208[esi_117 + 0x00000018:word32] == 0x00000000 l10011659
// DataOut: cs ds eax edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011659:
	word32 esp_258 = esp_105 - 0x00000004
	Mem259[esp_258:word32] = 0x10003AF0
	Mem261[esp_258 - 0x00000004:word32] = edi_161
	Mem263[esp_258 - 0x00000008:word32] = eax_210
	fn10011434(dwArg00, dwArg04, dwArg08, out edx)
	esp_105 = esp_258 + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp

l10011645:
	word32 esp_246 = esp_105 - 0x00000004
	Mem247[esp_246:word32] = Mem208[esi_117 + 0x00000018:word32]
	Mem249[esp_246 - 0x00000004:word32] = 0x10003AE0
	Mem251[esp_246 - 0x00000008:word32] = edi_161
	Mem253[esp_246 - 0x0000000C:word32] = eax_210
	fn10011434(dwArg00, dwArg04, dwArg08, out edx)
	esp_105 = esp_246 + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp

l10011628:
	word32 esp_228 = esp_105 - 0x00000004
	Mem229[esp_228:word32] = Mem208[esi_117 + 0x00000014:word32]
	Mem232[esp_228 - 0x00000004:word32] = Mem229[esi_117 + 0x00000018:word32]
	Mem234[esp_228 - 0x00000008:word32] = 0x10003AC8
	Mem236[esp_228 - 0x0000000C:word32] = edi_161
	Mem238[esp_228 - 0x00000010:word32] = eax_210
	fn10011434(dwArg00, dwArg04, dwArg08, out edx)
	esp_105 = esp_228 + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp

l10011668:
	edi_106 = Mem81[esp_105:word32]
	esp_107 = esp_105 + 0x00000004
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp

l10011669:
	word32 ecx_67
	fn1002F420(0x00000000, Mem0[ebp_104 - 0x00000004:word32] ^ ebp_104, edx, Mem0[esp_107 + 0x00000004:word32], ebp_104, Mem0[esp_107:word32], edi_106, es, ds, out ecx_67)
	return edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp

fn10011473_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -532(fp):ebx -528(fp):edx -524(fp):<invalid> -520(fp):ax -8(fp):<invalid> -4(fp):ebp



word32 fn1001167D(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn1001167D_entry:
// DataOut: cs ds ebp ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001167D:
	Mem4[0x1003151C:word32] = ecx
	__lock()
	Mem6[0x10031518:word32] = __xadd(Mem4[0x10031518:word32], 0x00000001)
	return 0x00000002
// DataOut: cs ds eax ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1001167D_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:0x00000002



word32 fn10011690(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn10011690_entry:
// DataOut: cs ds ebp ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011690:
	Mem4[0x10031514:word32] = ecx
	__lock()
	Mem6[0x10031510:word32] = __xadd(Mem4[0x10031510:word32], 0x00000001)
	return 0x00000002
// DataOut: cs ds eax ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011690_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:0x00000002



word32 fn100116A3(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn100116A3_entry:
// DataOut: cs ds ebp ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100116A3:
	Mem4[0x1003150C:word32] = ecx
	__lock()
	Mem6[0x10031508:word32] = __xadd(Mem4[0x10031508:word32], 0x00000001)
	return 0x00000002
// DataOut: cs ds eax ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn100116A3_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:0x00000002



word32 fn100116C0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn100116C0_entry:
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100116C0:
	Mem10[0x10031504:word32] = dwArg04
	return 0x00000001
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn100116C0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> -4(fp):ebp



void fn100116D4(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn100116D4_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l100116D4:
	word32 eax_100
	word32 eax_103
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	eax_100 = eax_11
	branch dwArg04 == 0x00000000 l1001171F
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Stack +0010(32)

l10011701:
	eax_100 = GetModuleHandleExW(0x00000006, dwArg04, fp - 0x00000110)
	branch eax_100 != 0x00000000 l10011719
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Stack +0010(32)

l10011719:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):0x00000006 -292(fp):<invalid> -288(fp):fp - 0x00000110 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Stack +0010(32)

l1001171F:
	branch dwArg08 == 0x00000000 l1001172F
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):0x00000006 -292(fp):<invalid> -288(fp):fp - 0x00000110 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Stack +0010(32)

l10011723:
	Mem158[dwArg08:word32] = 0x00000000 - (-dwArg04 == 0x00000000) & dwArg04
	eax_100 = dwArg04
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):0x00000006 -292(fp):<invalid> -288(fp):fp - 0x00000110 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Stack +0010(32)

l1001172F:
	branch dwArg0C == 0x00000000 l10011782
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):0x00000006 -292(fp):<invalid> -288(fp):fp - 0x00000110 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Stack +0010(32)

l10011733:
	eax_100 = GetModuleFileNameA(0x00000000, fp - 0x0000010C, 0x00000104)
	branch eax_100 == 0x00000000 l10011715
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):0x00000006 -292(fp):<invalid> -288(fp):fp - 0x00000110 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l1001174A:
	word32 ecx_116 = fp - 0x0000010C
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l10011753:
	ecx_116 = ecx_172 + 0x00000001
	word32 ecx_172 = ecx_116
	branch Mem0[ecx_172:byte] != 0x00 l10011753
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:fp - 0x0000010B al:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l1001175A:
	eax_100 = fp - 0x0000010C + (ecx_116 - (fp - 0x0000010B))
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:fp - 0x0000010B al:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l1001176D:
	branch eax_100 >u fp - 0x0000010C l10011766
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:fp - 0x0000010B al:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l10011766:
	branch Mem0[eax_100 - 0x00000001:byte] == 0x5C l10011777
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:fp - 0x0000010C esi:<invalid> edx:fp - 0x0000010B al:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l1001176C:
	eax_100 = eax_100 - 0x00000001
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:fp - 0x0000010C esi:<invalid> edx:fp - 0x0000010B al:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32) Local -0124(32) Stack +0010(32)

l10011777:
	edx = fn10013122(dwArg0C, dwArg10, eax_100)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:fp - 0x0000010C esi:<invalid> edx:fp - 0x0000010B al:<invalid> -296(fp):0x00000000 -292(fp):fp - 0x0000010C -288(fp):0x00000104 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10011782:
	eax_103 = DPB(eax_100, 0x01, 0) (alias)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10011715:
	eax_103 = DPB(eax_100, 0x00, 0) (alias)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10011784:
	word32 ecx_56
	fn1002F420(eax_103, eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_56)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn100116D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:<invalid> esi:esi al:<invalid> edx:<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10011835(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg10, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi edx esi esp
// Stack args: Stack +0004(32) Stack +0010(32)
fn10011835_entry:
	*ebxOut = ebx
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0010(32)

l10011835:
	word32 eax_17 = GetLastError()
	branch eax_17 != 0x00000000 l10011867
// DataOut: cs ds eax ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0010(32)

l1001184A:
	word32 ecx_67
	word32 edx_68
	word32 ebx_69
	word32 esi_70
	fn10011BD1(ecx, ebx, edx, ecx, es, ds, dwArg04, eax_17, eax_17, dwArg10, 0x00000002, 0x8007029C, out ecx_67, out edx_68, out ebx_69, out esi_70)
	eax_17 = 0x0000029C
// DataOut: cs ds eax ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 esi:edx eax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

l10011867:
	return eax_17
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:0x029C al:0x9C -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000002 -16(fp):0x8007029C -12(fp):edi -8(fp):esi -4(fp):ebp

fn10011835_exit:
// DataOut: eax ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:0x029C al:0x9C -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000002 -16(fp):0x8007029C -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn1001186D(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg00, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0000(32)
fn1001186D_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l1001186D:
	word32 edx_12
	*edxOut = 0x00000000
	word32 ebx_26
	word32 eax_27 = fn10011835(0x00000000, 0x00000000, ebx, es, ds, 0x00000000, dwArg00, out ebx_26)
	branch eax_27 <= 0x00000000 l1001188E
// DataOut: cs ds eax edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011886:
	eax_27 = 0x8007029C
// DataOut: cs ds eax edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ax:0x029C al:0x9C -20(fp):0x00000000 -16(fp):ecx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001188E:
	return eax_27
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ax:0x029C al:0x9C -20(fp):0x00000000 -16(fp):ecx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1001186D_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ax:0x029C al:0x9C -20(fp):0x00000000 -16(fp):ecx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn10011890(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esp
fn10011890_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10011890:
	branch ecx != 0x00000000 l10011898
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10011898:
	ecx_24 = ecx
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001189B:
	word32 ecx_24
	ecx_24 = ecx_37 + 0x00000002
	word32 ecx_37 = ecx_24
	branch Mem0[ecx_37:word16] != 0x0000 l1001189B
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx + 0x00000002 ax:<invalid> ecx:<invalid>

l100118A6:
	return (ecx_24 - (ecx + 0x00000002) >> 0x00000001) * 0x00000002 + 0x00000002
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx + 0x00000002 ax:<invalid> ecx:<invalid>

l10011894:
	return 0x00000002
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011890_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> edx:ecx + 0x00000002 ax:<invalid> ecx:<invalid> -4(fp):0x00000002



word32 fn100118B2(word32 ecx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg24, word32 dwArg2C, ptr32 & edxOut, ptr32 & blOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es esi fs gs ss
// LiveOut: bl eax ebp edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +0024(32) Stack +002C(32)
fn100118B2_entry:
// DataOut: cs ds ebp ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -002C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +0024(32) Stack +002C(32)

l100118B2:
	word32 eax_780
	Mem28[dwArg24:word16] = 0x0000
	Mem35[dwArg2C:byte] = 0x00
	word32 ebp_137 = fp - 0x00000004
	word32 ebx_132 = dwArg24
	byte bl_18 = (byte) dwArg24
	*blOut = bl_18
	word32 esp_24 = fp - 0x00000024
	word32 edi_27 = dwArg18
	branch dwArg14 == 0x00000000 l10011931
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10011931:
	eax_780 = fn1001167D(dwArg18)
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100118EB:
	branch dwArg14 == 0x00000001 l10011928
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10011928:
	eax_780 = fn10011690(dwArg18)
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100118F0:
	branch dwArg14 == 0x00000002 l10011902
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10011902:
	branch dwArg18 < 0x00000000 l1001191F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10011906:
	word32 ecx_850
	word32 edx_851
	word32 esi_853
	fn10011BD1(ecx, dwArg24, esi, 0x8007029C, es, ds, dwArg04, dwArg08, dwArg0C, dwArg10, 0x00000002, 0x8007029C, out ecx_850, out edx_851, out ebx_132, out esi_853)
	edi_27 = 0x8007029C
	esp_24 = fp - 0x0000003C
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001191F:
	eax_780 = fn100116A3(edi_27)
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):0x8007029C -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100118F5:
	branch dwArg14 != 0x00000003 l1001193B
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32)

l100118FA:
	eax_780 = fn100116C0(dwArg18)
	esp_24 = fp - 0x00000024
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011938:
	Mem786[fp - 0x0000000C:word32] = eax_780
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001193B:
	word32 esi_131 = Mem35[fp + 0x00000034:word32]
	Mem59[esi_131:word32] = Mem35[fp + 0x00000014:word32]
	Mem62[esi_131 + 0x00000004:word32] = edi_27
	Mem63[fp - 0x00000010:word32] = 0x00000001
	__lock()
	Mem64[0x100314B8:word32] = __xadd(Mem63[0x100314B8:word32], 0x00000001)
	Mem67[esi_131 + 0x00000008:word32] = 0x00000002
	word32 eax_68 = Mem67[fp + 0x0000001C:word32]
	branch eax_68 == 0x00000000 l10011966
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001195F:
	branch Mem67[eax_68:word16] != 0x0000 l10011968
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011966:
	eax_68 = 0x00000000
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011968:
	Mem78[esi_131 + 0x0000000C:word32] = eax_68
	Mem80[esi_131 + 0x00000010:word32] = GetCurrentThreadId()
	Mem84[esi_131 + 0x0000001C:word32] = Mem80[fp + 0x00000004:word32]
	Mem86[esi_131 + 0x00000020:word32] = Mem84[fp - 0x00000014:word32]
	Mem88[esi_131 + 0x00000024:word32] = Mem86[fp - 0x0000000C:word32]
	Mem90[esi_131 + 0x00000014:word32] = Mem88[fp + 0x0000000C:word32]
	Mem92[esi_131 + 0x00000018:word32] = Mem90[fp + 0x00000008:word32]
	Mem94[esi_131 + 0x00000048:word32] = Mem92[fp + 0x00000010:word32]
	Mem96[esi_131 + 0x0000004C:word32] = Mem94[fp - 0x00000018:word32]
	word32 esp_102 = esp_24 - 0x00000004
	Mem103[esp_102:word32] = 0x00000006
	word32 ecx_104 = Mem103[esp_102:word32]
	Mem108[esi_131 + 0x00000028:word32] = 0x00000000
	word32 edi_109 = esi_131 + 0x0000002C
	word32 edx_129 = 0x00000000
	*edxOut = edx_129
	word32 eax_134 = 0x00000000
	word32 esp_107 = esp_102 + 0x00000004
// DataOut: al cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119AB:
	branch ecx_104 == 0x00000000 l100119AD
// DataOut: al cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119AD:
	word32 edi_118 = Mem108[0x10031538:word32]
	branch edi_118 == 0x00000000 l100119C1
// DataOut: al cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119B7:
	word32 esp_711
	word32 edi_712
	word32 ebp_713
	byte SCZO_714
	word32 eax_715
	byte SZO_716
	byte C_717
	word32 ebx_718
	word32 esi_719
	word16 ax_720
	word32 edx_721
	word32 ecx_722
	byte Z_723
	word16 cx_724
	byte S_725
	byte SO_726
	byte cl_727
	byte al_728
	selector es_729
	selector ds_730
	byte bl_731
	call Mem108[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_99,ax_98,bl_18,C_121,cl_112,cx_111,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_97,ebp_7,ebx_53,ecx_710,edi_118,edx_83,es,esi_57,esp_107,S_51,SCZO_76,SO,SZO_119,Z_120
		defs: al_728,ax_720,bl_731,C_717,cl_727,cx_724,ds_730,eax_715,ebp_713,ebx_718,ecx_722,edi_712,edx_721,es_729,esi_719,esp_711,S_725,SCZO_714,SO_726,SZO_716,Z_723
	word32 edi_733
	byte SCZO_735
	byte SZO_737
	byte C_738
	word16 ax_741
	word32 ecx_743
	byte Z_744
	word16 cx_745
	byte S_746
	byte SO_747
	byte cl_748
	byte al_749
	byte bl_752
	call edi_712 (retsize: 4; depth: 4)
		uses: al_728,ax_720,bl_731,C_717,cl_727,cx_724,ds_730,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_715,ebp_713,ebx_718,ecx_722,edi_712,edx_721,es_729,esi_719,esp_711,S_725,SCZO_714,SO_726,SZO_716,Z_723
		defs: al_749,ax_741,bl_752,C_738,cl_748,cx_745,ds_751,eax_736,ebp_734,ebx_739,ecx_743,edi_733,edx_742,es_750,esi_740,esp_732,S_746,SCZO_735,SO_747,SZO_737,Z_744
// DataOut: al cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119C1:
	word32 edi_142 = Mem108[0x10031540:word32]
	Mem143[esi_131 + 0x00000044:word32] = eax_134
	branch edi_142 == 0x00000000 l100119E1
// DataOut: al cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119CE:
	word32 esp_660 = esp_107 - 0x00000004
	Mem661[esp_660:word32] = 0x00000400
	Mem664[esp_660 - 0x00000004:word32] = Mem661[ebp_137 + 0x00000030:word32]
	Mem667[esp_660 - 0x00000008:word32] = esi_131
	word32 esp_668
	word32 edi_669
	word32 ebp_670
	byte SCZO_671
	word32 eax_672
	byte SZO_673
	byte C_674
	word32 ebx_675
	word32 esi_676
	word16 ax_677
	word32 edx_678
	word32 ecx_679
	byte Z_680
	word16 cx_681
	byte S_682
	byte SO_683
	byte cl_684
	byte al_685
	selector es_686
	selector ds_687
	byte bl_688
	call Mem667[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_136,ax_135,bl_133,C_146,cl_141,cx_140,ds_125,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_134,ebp_137,ebx_132,ecx_665,edi_142,edx_129,es_126,esi_131,esp_666,S_128,SCZO_130,SO_127,SZO_144,Z_145
		defs: al_685,ax_677,bl_688,C_674,cl_684,cx_681,ds_687,eax_672,ebp_670,ebx_675,ecx_679,edi_669,edx_678,es_686,esi_676,esp_668,S_682,SCZO_671,SO_683,SZO_673,Z_680
	word32 edi_690
	byte SCZO_692
	word32 eax_693
	byte SZO_694
	byte C_695
	word16 ax_698
	word32 ecx_700
	byte Z_701
	word16 cx_702
	byte S_703
	byte SO_704
	byte cl_705
	byte al_706
	byte bl_709
	call edi_669 (retsize: 4; depth: 4)
		uses: al_685,ax_677,bl_688,C_674,cl_684,cx_681,ds_687,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_672,ebp_670,ebx_675,ecx_679,edi_669,edx_678,es_686,esi_676,esp_668,S_682,SCZO_671,SO_683,SZO_673,Z_680
		defs: al_706,ax_698,bl_709,C_695,cl_705,cx_702,ds_708,eax_693,ebp_691,ebx_696,ecx_700,edi_690,edx_699,es_707,esi_697,esp_689,S_703,SCZO_692,SO_704,SZO_694,Z_701
// DataOut: al cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119E1:
	word32 edi_164 = Mem143[0x1003153C:word32]
	branch edi_164 == 0x00000000 l100119F6
// DataOut: al cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119EB:
	word32 esp_615 = esp_107 - 0x00000004
	Mem616[esp_615:word32] = esi_131
	word32 esp_618
	word32 edi_619
	word32 ebp_620
	byte SCZO_621
	word32 eax_622
	byte SZO_623
	byte C_624
	word32 ebx_625
	word32 esi_626
	word16 ax_627
	word32 edx_628
	word32 ecx_629
	byte Z_630
	word16 cx_631
	byte S_632
	byte SO_633
	byte cl_634
	byte al_635
	selector es_636
	selector ds_637
	byte bl_638
	call Mem616[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_158,ax_157,bl_155,C_167,cl_163,cx_162,ds_147,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_156,ebp_159,ebx_154,ecx_617,edi_164,edx_151,es_148,esi_153,esp_615,S_150,SCZO_152,SO_149,SZO_165,Z_166
		defs: al_635,ax_627,bl_638,C_624,cl_634,cx_631,ds_637,eax_622,ebp_620,ebx_625,ecx_629,edi_619,edx_628,es_636,esi_626,esp_618,S_632,SCZO_621,SO_633,SZO_623,Z_630
	byte SCZO_642
	word32 eax_643
	byte SZO_644
	byte C_645
	word16 ax_648
	word32 ecx_650
	byte Z_651
	word16 cx_652
	byte S_653
	byte SO_654
	byte cl_655
	byte al_656
	byte bl_659
	call edi_619 (retsize: 4; depth: 4)
		uses: al_635,ax_627,bl_638,C_624,cl_634,cx_631,ds_637,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_622,ebp_620,ebx_625,ecx_629,edi_619,edx_628,es_636,esi_626,esp_618,S_632,SCZO_621,SO_633,SZO_623,Z_630
		defs: al_656,ax_648,bl_659,C_645,cl_655,cx_652,ds_658,eax_643,ebp_641,ebx_646,ecx_650,edi_640,edx_649,es_657,esi_647,esp_639,S_653,SCZO_642,SO_654,SZO_644,Z_651
// DataOut: al cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119F6:
	branch Mem143[esi_131 + 0x00000004:word32] < 0x00000000 l10011A0E
// DataOut: al cl cs cx ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100119FD:
	branch Mem143[ebp_137 + 0x00000018:word32] != 0x00000003 l10011AEC
// DataOut: al cl cs cx ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011AEC:
	fn10011DCD()
	int3()
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011AF1_thunk_fn10011AF2:
	word32 ecx_606
	word32 edx_607
	word32 ebx_608
	word32 ebp_609
	word32 esi_610
	word32 edi_611
	return fn10011AF2(0x00000000, ebx_132, ebp_137, esi_131, edi_164, es, ds, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, out ecx_606, out edx_607, out ebx_608, out ebp_609, out esi_610, out edi_611)
// DataOut: bl cs ds eax ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011A07:
	Mem601[esi_131 + 0x00000004:word32] = 0x8000FFFF
// DataOut: al cl cs cx ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A0E:
	word32 eax_226
	byte al_228
	branch Mem143[0x1003154A:byte] != 0x00 l10011A48
// DataOut: al cs cx ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A16:
	word32 eax_528
	word32 edi_515 = Mem143[0x1003154C:word32]
	branch edi_515 == 0x00000000 l10011A2F
// DataOut: al cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A2F:
	eax_528 = -IsDebuggerPresent() == 0x00000000
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A20:
	word32 esp_545
	word32 edi_546
	word32 ebp_547
	byte SCZO_548
	word32 eax_549
	byte SZO_550
	byte C_551
	word32 ebx_552
	word32 esi_553
	word16 ax_554
	word32 edx_555
	word32 ecx_556
	byte Z_557
	word16 cx_558
	byte S_559
	byte SO_560
	byte cl_561
	byte al_562
	selector es_563
	selector ds_564
	byte bl_565
	call Mem143[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_180,ax_179,bl_177,C_518,cl_186,cx_185,ds_168,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_178,ebp_181,ebx_176,ecx_544,edi_515,edx_172,es_169,esi_173,esp_182,S_170,SCZO_214,SO_188,SZO_516,Z_517
		defs: al_562,ax_554,bl_565,C_551,cl_561,cx_558,ds_564,eax_549,ebp_547,ebx_552,ecx_556,edi_546,edx_555,es_563,esi_553,esp_545,S_559,SCZO_548,SO_560,SZO_550,Z_557
	word32 edi_567
	byte SCZO_569
	word32 eax_570
	byte SZO_571
	byte C_572
	word16 ax_575
	word32 ecx_577
	byte Z_578
	word16 cx_579
	byte S_580
	byte SO_581
	byte cl_582
	byte al_583
	byte bl_586
	call edi_546 (retsize: 4; depth: 4)
		uses: al_562,ax_554,bl_565,C_551,cl_561,cx_558,ds_564,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_549,ebp_547,ebx_552,ecx_556,edi_546,edx_555,es_563,esi_553,esp_545,S_559,SCZO_548,SO_560,SZO_550,Z_557
		defs: al_583,ax_575,bl_586,C_572,cl_582,cx_579,ds_585,eax_570,ebp_568,ebx_573,ecx_577,edi_567,edx_576,es_584,esi_574,esp_566,S_580,SCZO_569,SO_581,SZO_571,Z_578
	eax_528 = (word32) al_583
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A3B:
	branch eax_528 != 0x00000000 l10011A48
// DataOut: cl cs cx ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A48:
	eax_226 = 0x00000001
	al_228 = 0x01 (alias)
// DataOut: al cs cx ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A41:
	eax_226 = DPB(eax_528, 0x00, 0) (alias)
	Mem543[ebp_137 - 0x0000000C:word32] = eax_226
	al_228 = 0x00
// DataOut: al cs cx ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A4B:
	branch Mem143[ebp_137 + 0x00000024:byte] != 0x00 l10011A76
// DataOut: al cs cx ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A51:
	branch al_228 != 0x00 l10011A76
// DataOut: al cs cx ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A76:
	word32 edi_335 = Mem143[0x10031550:word32]
	branch edi_335 == 0x00000000 l10011A9C
// DataOut: cs cx ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A80:
	branch Mem143[0x10031548:byte] != 0x00 l10011A9C
// DataOut: cs cx ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A89:
	word32 esp_381 = esp_107 - 0x00000004
	Mem382[esp_381:word32] = 0x00000800
	Mem384[esp_381 - 0x00000004:word32] = ebx_132
	Mem386[esp_381 - 0x00000008:word32] = esi_131
	word32 esp_388
	word32 edi_389
	word32 ebp_390
	byte SCZO_391
	word32 eax_392
	byte SZO_393
	byte C_394
	word32 ebx_395
	word32 esi_396
	word16 ax_397
	word32 edx_398
	word32 ecx_399
	byte Z_400
	word16 cx_401
	byte S_402
	byte SO_403
	byte cl_404
	byte al_405
	selector es_406
	selector ds_407
	byte bl_408
	call Mem386[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_228,ax_227,bl_225,C_338,cl_234,cx_233,ds_216,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_226,ebp_229,ebx_224,ecx_387,edi_335,edx_220,es_217,esi_221,esp_385,S_219,SCZO_379,SO_218,SZO_336,Z_380
		defs: al_405,ax_397,bl_408,C_394,cl_404,cx_401,ds_407,eax_392,ebp_390,ebx_395,ecx_399,edi_389,edx_398,es_406,esi_396,esp_388,S_402,SCZO_391,SO_403,SZO_393,Z_400
	byte SCZO_412
	word32 eax_413
	byte SZO_414
	byte C_415
	word16 ax_418
	word32 ecx_420
	byte Z_421
	word16 cx_422
	byte S_423
	byte SO_424
	byte cl_425
	byte al_426
	byte bl_429
	call edi_389 (retsize: 4; depth: 4)
		uses: al_405,ax_397,bl_408,C_394,cl_404,cx_401,ds_407,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_392,ebp_390,ebx_395,ecx_399,edi_389,edx_398,es_406,esi_396,esp_388,S_402,SCZO_391,SO_403,SZO_393,Z_400
		defs: al_426,ax_418,bl_429,C_415,cl_425,cx_422,ds_428,eax_413,ebp_411,ebx_416,ecx_420,edi_410,edx_419,es_427,esi_417,esp_409,S_423,SCZO_412,SO_424,SZO_414,Z_421
// DataOut: cs cx ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011A9C:
	branch Mem143[ebx_132:word16] != 0x0000 l10011AAE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011AA1:
	Mem373[esp_107 - 0x00000004:word32] = esi_131
	*edxOut = fn10011473(ebx_132, 0x00000800, ebp_137, edi_335, es, ds, dwArg00)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011AAE:
	eax_226 = Mem143[ebp_137 - 0x0000000C:word32]
	branch (byte) eax_226 == 0x00 l10011ABC
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011AB5:
	word32 esp_369 = esp_107 - 0x00000004
	Mem370[esp_369:word32] = ebx_132
	OutputDebugStringW(Mem370[esp_369:LPCWSTR])
	esp_107 = esp_369 + 0x00000004
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011A55:
	word32 edi_438 = Mem143[0x10031550:word32]
	branch edi_438 == 0x00000000 l10011ABC
// DataOut: al cs ds eax ebp ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011A5F:
	branch Mem143[0x10031548:byte] != al_228 l10011ABC
// DataOut: cs ds eax ebp ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011A67:
	word32 esp_444 = esp_107 - 0x00000004
	Mem445[esp_444:word32] = 0x00000000
	Mem447[esp_444 - 0x00000004:word32] = 0x00000000
	Mem449[esp_444 - 0x00000008:word32] = esi_131
	word32 esp_451
	word32 edi_452
	word32 ebp_453
	byte SCZO_454
	word32 eax_455
	byte SZO_456
	byte C_457
	word32 ebx_458
	word32 esi_459
	word16 ax_460
	word32 edx_461
	word32 ecx_462
	byte Z_463
	word16 cx_464
	byte S_465
	byte SO_466
	byte cl_467
	byte al_468
	selector es_469
	selector ds_470
	byte bl_471
	call Mem449[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_228,ax_227,bl_225,C_441,cl_234,cx_233,ds_216,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_226,ebp_229,ebx_224,ecx_450,edi_438,edx_220,es_217,esi_221,esp_448,S_219,SCZO_442,SO_218,SZO_439,Z_443
		defs: al_468,ax_460,bl_471,C_457,cl_467,cx_464,ds_470,eax_455,ebp_453,ebx_458,ecx_462,edi_452,edx_461,es_469,esi_459,esp_451,S_465,SCZO_454,SO_466,SZO_456,Z_463
	word32 edi_473
	byte SCZO_475
	byte SZO_477
	byte C_478
	word32 ebx_479
	word32 esi_480
	word16 ax_481
	word32 ecx_483
	byte Z_484
	word16 cx_485
	byte S_486
	byte SO_487
	byte cl_488
	byte al_489
	byte bl_492
	call edi_452 (retsize: 4; depth: 4)
		uses: al_468,ax_460,bl_471,C_457,cl_467,cx_464,ds_470,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_455,ebp_453,ebx_458,ecx_462,edi_452,edx_461,es_469,esi_459,esp_451,S_465,SCZO_454,SO_466,SZO_456,Z_463
		defs: al_489,ax_481,bl_492,C_478,cl_488,cx_485,ds_491,eax_476,ebp_474,ebx_479,ecx_483,edi_473,edx_482,es_490,esi_480,esp_472,S_486,SCZO_475,SO_487,SZO_477,Z_484
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011ABC:
	branch Mem143[0x10031549:byte] == 0x00 l10011AD9
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011AC5:
	word32 esi_288 = Mem143[0x10031534:word32]
	branch esi_288 == 0x00000000 l10011AD9
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011ACF:
	word32 esp_293
	word32 edi_294
	word32 ebp_295
	byte SCZO_296
	word32 eax_297
	byte SZO_298
	byte C_299
	word32 ebx_300
	word32 esi_301
	word16 ax_302
	word32 edx_303
	word32 ecx_304
	byte Z_305
	word16 cx_306
	byte S_307
	byte SO_308
	byte cl_309
	byte al_310
	selector es_311
	selector ds_312
	byte bl_313
	call Mem143[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_249,ax_248,bl_246,C_291,cl_255,cx_254,ds_237,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_247,ebp_250,ebx_245,ecx_292,edi_252,edx_241,es_238,esi_288,esp_251,S_240,SCZO_256,SO_239,SZO_289,Z_290
		defs: al_310,ax_302,bl_313,C_299,cl_309,cx_306,ds_312,eax_297,ebp_295,ebx_300,ecx_304,edi_294,edx_303,es_311,esi_301,esp_293,S_307,SCZO_296,SO_308,SZO_298,Z_305
	word32 edi_315
	byte SCZO_317
	byte SZO_319
	byte C_320
	word32 ebx_321
	word32 esi_322
	word16 ax_323
	word32 ecx_325
	byte Z_326
	word16 cx_327
	byte S_328
	byte SO_329
	byte cl_330
	byte al_331
	byte bl_334
	call esi_301 (retsize: 4; depth: 4)
		uses: al_310,ax_302,bl_313,C_299,cl_309,cx_306,ds_312,dwLoc04_6,dwLoc08_12,dwLoc0C_37,dwLoc14_32,dwLoc18_34,dwLoc1C_15,dwLoc20_23,dwLoc24_25,dwLoc28_50,dwLoc2C_45,dwLoc30_46,dwLoc34_47,dwLoc38_48,dwLoc3C_49,eax_297,ebp_295,ebx_300,ecx_304,edi_294,edx_303,es_311,esi_301,esp_293,S_307,SCZO_296,SO_308,SZO_298,Z_305
		defs: al_331,ax_323,bl_334,C_320,cl_330,cx_327,ds_333,eax_318,ebp_316,ebx_321,ecx_325,edi_315,edx_324,es_332,esi_322,esp_314,S_328,SCZO_317,SO_329,SZO_319,Z_326
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10011AD9:
	word32 esp_272 = esp_107 + 0x00000004
	word32 ebx_278 = Mem143[esp_272 + 0x00000004:word32]
	word32 esi_273 = Mem143[esp_272:word32]
	*esiOut = esi_273
	word32 ecx_281
	word32 eax_282 = fn1002F420(eax_226, Mem143[ebp_137 - 0x00000004:word32] ^ ebp_137, edx_129, ebx_278, ebp_137, esi_273, Mem143[esp_107:word32], es, ds, out ecx_281)
	byte bl_279
	*blOut = (byte) ebx_278
	word32 ebp_286
	*ebpOut = Mem143[ebp_137:word32]
	return eax_282
// DataOut: bl cs ds eax ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100118B2_exit:
// DataOut: bl eax ebp edx esi
// DataOut (flags): 
// SymbolicIn: edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> esp:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100119AB_1:
	Mem113[edi_109:word32] = 0x00000000
	edi_109 = edi_109 + 0x00000004
	ecx_104 = ecx_104 - 0x00000001
// DataOut: al cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000002 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):ecx -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)



word32 fn10011AF2(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut: bl eax ebp ebx ecx edi edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)
fn10011AF2_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)

l10011AF2:
	byte bl_227
	__align(fp - 0x00000004)
	fn10030210(0x00001464, dwLoc08)
	Mem13[fp + 0x0000145C:word32] = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem18[fp - 0x00000008:word32] = ebx
	Mem23[fp - 0x0000000C:word32] = esi
	Mem26[fp + 0x00000004:word32] = dwArg0C
	Mem29[fp:word32] = dwArg10
	Mem31[fp - 0x00000010:word32] = edi
	branch dwArg14 != 0x00000000 l10011B3C
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32) Stack +0014(32) Stack +0018(32)

l10011B30:
	branch Mem31[0x10031524:word32] == dwArg14 l10011B3C
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>
// LocalsOut: Local -0004(32) Stack +0014(32) Stack +0018(32)

l10011B3C:
	bl_227 = 0x00
// DataOut: bl cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>
// LocalsOut: Local -0004(32) Stack +0014(32) Stack +0018(32)

l10011B38:
	bl_227 = 0x01
// DataOut: bl cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>
// LocalsOut: Local -0004(32) Stack +0014(32) Stack +0018(32)

l10011B3E:
	Mem43[fp - 0x00000004:byte] = bl_227
	Mem45[fp - 0x00000014:word32] = fp + 0x00000008
	Mem48[fp - 0x00000018:word32] = ecx
	Mem51[fp - 0x0000001C:word32] = fp + 0x00000058
	Mem53[fp - 0x00000020:word32] = ecx
	Mem56[fp - 0x00000024:word32] = fp + 0x00000458
	Mem59[fp - 0x00000028:word32] = Mem56[fp - 0x00000004:word32]
	Mem62[fp - 0x0000002C:word32] = 0x00000000
	Mem66[fp - 0x00000030:word32] = dwArg18
	Mem68[fp - 0x00000034:word32] = dwArg14
	Mem71[fp - 0x00000038:word32] = Mem68[fp:word32]
	Mem74[fp - 0x0000003C:word32] = Mem71[fp + 0x00000004:word32]
	Mem76[fp - 0x00000040:word32] = dwArg08
	Mem78[fp - 0x00000044:word32] = dwArg04
	word32 edx_84
	byte bl_85
	word32 ebp_86
	word32 esi_87
	word32 eax_88 = fn100118B2(ecx, fp - 0x00000004, dwArg14, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg20, dwArg28, out edx_84, out bl_85, out ebp_86, out esi_87)
	word32 esp_105 = fp - 0x0000000C
	branch esi_87 == 0x00000003 l10011BB5
// DataOut: bl cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011B77:
	branch esi_87 != 0x00000000 l10011BBA
// DataOut: bl cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):fp + 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011BBA:
	word32 edi_204 = Mem78[fp - 0x0000000C:word32]
	*ediOut = edi_204
	word32 esi_206 = Mem78[fp - 0x00000008:word32]
	*esiOut = esi_206
	word32 ebx_208 = Mem78[fp - 0x00000004:word32]
	*ebxOut = ebx_208
	word32 ecx_214
	word32 eax_215 = fn1002F420(eax_88, Mem78[fp + 0x00001460:word32] ^ fp, edx_84, ebx_208, ebp_86, esi_206, edi_204, es, ds, out ecx_214)
	word32 ebp_217
	*ebpOut = Mem78[ebp_86:word32]
	return eax_215
// DataOut: bl cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):fp + 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

fn10011AF2_exit:
// DataOut: bl eax ebp ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):fp + 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011B7B:
	branch bl_85 == 0x00 l10011B9C
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):fp + 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011B7F:
	Mem168[fp - 0x00000010:word32] = fp + 0x0000045C
	Mem172[fp - 0x00000014:word32] = fp + 0x0000000C
	word32 esp_173
	word32 edi_174
	word32 ebp_175
	word32 eax_176
	byte SZO_177
	byte C_178
	word32 ebx_179
	word32 esi_180
	byte Z_181
	byte SCZO_182
	byte bl_183
	word32 ecx_184
	selector es_185
	selector ds_186
	word32 edx_187
	call Mem172[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: bl_85,C_115,ds,dwLoc04_6,dwLoc08,eax_169,ebp_86,ebx_39,ecx_170,edi_33,edx_84,es,esi_165,esp_171,SCZO_90,SZO_113,Z_114
		defs: bl_183,C_178,ds_186,eax_176,ebp_175,ebx_179,ecx_184,edi_174,edx_187,es_185,esi_180,esp_173,SCZO_182,SZO_177,Z_181
	word32 edi_189
	word32 ebp_190
	word32 eax_191
	byte SZO_192
	byte C_193
	word32 ebx_194
	word32 esi_195
	byte Z_196
	byte SCZO_197
	byte bl_198
	word32 ecx_199
	selector es_200
	selector ds_201
	word32 edx_202
	call esi_180 (retsize: 4; depth: 4)
		uses: bl_183,C_178,ds_186,dwLoc04_6,dwLoc08,eax_176,ebp_175,ebx_179,ecx_184,edi_174,edx_187,es_185,esi_180,esp_173,SCZO_182,SZO_177,Z_181
		defs: bl_198,C_193,ds_201,eax_191,ebp_190,ebx_194,ecx_199,edi_189,edx_202,es_200,esi_195,esp_188,SCZO_197,SZO_192,Z_196
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):fp + 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011B9C:
	word32 esi_127 = Mem78[0x10031528:word32]
	branch esi_127 == 0x00000000 l10011BB5
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011BA6:
	word32 eax_131 = esp_105 + 0x00000018
	word32 esp_133 = esp_105 - 0x00000004
	Mem134[esp_133:word32] = eax_131
	word32 esp_135
	word32 edi_136
	word32 ebp_137
	word32 eax_138
	byte SZO_139
	byte C_140
	word32 ebx_141
	word32 esi_142
	byte Z_143
	byte SCZO_144
	byte bl_145
	word32 ecx_146
	selector es_147
	selector ds_148
	word32 edx_149
	call Mem134[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: bl_119,C_130,ds_117,dwLoc04_6,dwLoc08,eax_131,ebp_123,ebx_121,ecx_132,edi_124,edx_116,es_118,esi_127,esp_133,SCZO_120,SZO_128,Z_129
		defs: bl_145,C_140,ds_148,eax_138,ebp_137,ebx_141,ecx_146,edi_136,edx_149,es_147,esi_142,esp_135,SCZO_144,SZO_139,Z_143
	word32 edi_151
	word32 ebp_152
	word32 eax_153
	byte SZO_154
	byte C_155
	word32 ebx_156
	word32 esi_157
	byte Z_158
	byte SCZO_159
	byte bl_160
	word32 ecx_161
	selector es_162
	selector ds_163
	word32 edx_164
	call esi_142 (retsize: 4; depth: 4)
		uses: bl_145,C_140,ds_148,dwLoc04_6,dwLoc08,eax_138,ebp_137,ebx_141,ecx_146,edi_136,edx_149,es_147,esi_142,esp_135,SCZO_144,SZO_139,Z_143
		defs: bl_160,C_155,ds_163,eax_153,ebp_152,ebx_156,ecx_161,edi_151,edx_164,es_162,esi_157,esp_150,SCZO_159,SZO_154,Z_158
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>

l10011BB5:
	word32 esp_106 = esp_105 - 0x00000004
	Mem107[esp_106:word32] = 0x00000007
	__fastfail(Mem107[esp_106:word32])
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):fp + 0x00000458 -32(fp):ecx -28(fp):fp + 0x00000058 -24(fp):ecx -20(fp):<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ebx -4(fp):<invalid> 0(fp):<invalid> 4(fp):<invalid> 5212(fp):<invalid>



word32 fn10011BD1(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: eax ebx ecx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)
fn10011BD1_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)

l10011BD1:
	__align(fp - 0x00000004)
	word32 ecx_41
	word32 edx_42
	word32 ebx_43
	word32 ebp_44
	word32 esi_45
	word32 edi_46
	return fn10011AF2(ecx, ebx, fp - 0x00000004, esi, edi, es, ds, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, out ecx_41, out edx_42, out ebx_43, out ebp_44, out esi_45, out edi_46)
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011BD1_exit:
// DataOut: eax ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp



word32 fn10011BF8(word32 ecx, word32 edx, word32 ebx, word32 ebp, selector es, selector ds, word32 dwArg10, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edx es fs gs ss
// LiveOut: ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edx esp
// Stack args: Stack +0010(32)
fn10011BF8_entry:
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0010(32)

l10011BF8:
	word32 esi_141
	word32 ebx_40
	word32 eax_41 = fn10011835(ecx, edx, ebx, es, ds, 0x10003B38, dwArg10, out ebx_40)
	word32 ebp_135 = fp - 0x00000004
	word32 esp_133 = fp - 0x00000020
	word32 edi_134 = eax_41
	word16 di_44 = (word16) eax_41
	branch eax_41 > 0x00000000 l10011C2E
// DataOut: cs di ds ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l10011C2E:
	esi_141 = (word32) di_44 | 0x80070000
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -48(fp):0x10003B38 -44(fp):ecx -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011C2A:
	esi_141 = eax_41
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -48(fp):0x10003B38 -44(fp):ecx -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011C37:
	word32 ebx_140 = Mem0[0x10031520:word32]
	branch ebx_140 == 0x00000000 l10011C4E
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -48(fp):0x10003B38 -44(fp):ecx -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011C41:
	Mem114[fp - 0x00000024:word32] = esi_141
	Mem116[fp - 0x00000028:word32] = 0x00000003
	word32 esp_118
	word32 edi_119
	word32 ebp_120
	byte SCZO_121
	word32 eax_122
	byte SZO_123
	byte C_124
	word32 ebx_125
	word32 esi_126
	word32 edx_127
	word32 ecx_128
	word16 di_129
	byte Z_130
	selector es_131
	selector ds_132
	call Mem116[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_51,di_44,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_37,dwLoc10_30,dwLoc18_17,dwLoc1C_20,dwLoc20_22,dwLoc24_26,dwLoc28_32,dwLoc2C_34,dwLoc30_36,eax_41,ebp_7,ebx_48,ecx_117,edi_43,edx,es,esi_47,esp_115,SCZO,SZO_49,Z_50
		defs: C_124,di_129,ds_132,eax_122,ebp_120,ebx_125,ecx_128,edi_119,edx_127,es_131,esi_126,esp_118,SCZO_121,SZO_123,Z_130
	byte SCZO_136
	word32 eax_137
	byte SZO_138
	byte C_139
	word32 edx_142
	word16 di_144
	byte Z_145
	call ebx_125 (retsize: 4; depth: 4)
		uses: C_124,di_129,ds_132,dwLoc04_6,dwLoc08_14,dwLoc0C_37,dwLoc10_30,dwLoc18_17,dwLoc1C_20,dwLoc20_22,dwLoc24_26,dwLoc28_32,dwLoc2C_34,dwLoc30_36,eax_122,ebp_120,ebx_125,ecx_128,edi_119,edx_127,es_131,esi_126,esp_118,SCZO_121,SZO_123,Z_130
		defs: C_139,di_144,ds_147,eax_137,ebp_135,ebx_140,ecx_143,edi_134,edx_142,es_146,esi_141,esp_133,SCZO_136,SZO_138,Z_145
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -48(fp):0x10003B38 -44(fp):ecx -40(fp):ecx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011C4E:
	word32 esp_65 = esp_133 - 0x00000004
	Mem66[esp_65:word32] = ecx
	Mem68[esp_65 - 0x00000004:word32] = ecx
	word32 ecx_69 = Mem68[ebp_135 - 0x0000000C:word32]
	Mem71[esp_65 - 0x00000008:word32] = esi_141
	Mem73[esp_65 - 0x0000000C:word32] = 0x00000003
	Mem76[esp_65 - 0x00000010:word32] = Mem73[ebp_135 + 0x00000014:word32]
	Mem78[esp_65 - 0x00000014:word32] = 0x00000000
	Mem80[esp_65 - 0x00000018:word32] = 0x00000000
	Mem82[esp_65 - 0x0000001C:word32] = 0x10003B38
	word32 ecx_88
	word32 edx_89
	word32 ebx_90
	word32 ebp_91
	word32 esi_92
	word32 edi_93
	fn10011AF2(ecx_69, ebx_140, ebp_135, esi_141, edi_134, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, out ecx_88, out edx_89, out ebx_90, out ebp_91, out esi_92, out edi_93)
	word32 esi_100 = Mem82[esp_65 + 0x00000008:word32]
	*esiOut = esi_100
	word32 ebx_105 = Mem82[esp_65 + 0x0000000C:word32]
	word32 ecx_107
	fn1002F420(edi_93, Mem82[ebp_91 - 0x00000004:word32] ^ ebp_91, edx_89, ebx_105, ebp_91, esi_100, Mem82[esp_65 + 0x00000004:word32], es, ds, out ecx_107)
	return ebx_105
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10003B38 -44(fp):ecx -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn10011BF8_exit:
// DataOut: ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10003B38 -44(fp):ecx -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



word32 fn10011C7F(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg10, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edx esp
// Stack args: Stack +0004(32) Stack +0010(32)
fn10011C7F_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0010(32)

l10011C7F:
	word32 ebx_144
	word32 eax_46 = fn10011835(ecx, edx, edx, es, ds, dwArg04, dwArg10, out ebx_144)
	word32 ebp_139 = fp - 0x00000004
	word32 esp_137 = fp - 0x00000018
	word32 esi_145 = eax_46
	word16 si_49 = (word16) eax_46
	branch eax_46 <= 0x00000000 l10011CB6
// DataOut: cs ds ebp ebx ecx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l10011CAD:
	esi_145 = (word32) si_49 | 0x80070000
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -40(fp):<invalid> -36(fp):ecx -32(fp):ecx -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011CB6:
	word32 edi_138 = Mem0[0x10031520:word32]
	branch edi_138 == 0x00000000 l10011CCD
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -40(fp):<invalid> -36(fp):ecx -32(fp):ecx -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011CC0:
	Mem119[fp - 0x0000001C:word32] = esi_145
	Mem121[fp - 0x00000020:word32] = 0x00000001
	word32 esp_123
	word32 edi_124
	word32 ebp_125
	word32 ecx_126
	word32 eax_127
	byte SZO_128
	byte C_129
	word32 ebx_130
	word32 esi_131
	word32 edx_132
	word16 si_133
	byte Z_134
	selector es_135
	selector ds_136
	call Mem121[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_57,ds,dwLoc04_6,dwLoc08_18,dwLoc0C_42,dwLoc10_21,dwLoc14_24,dwLoc18_26,dwLoc1C_30,dwLoc20_35,dwLoc24_37,dwLoc28_41,eax_46,ebp_7,ebx_45,ecx_122,edi_54,edx,es,esi_52,esp_120,si_53,SZO_55,Z_56
		defs: C_129,ds_136,eax_127,ebp_125,ebx_130,ecx_126,edi_124,edx_132,es_135,esi_131,esp_123,si_133,SZO_128,Z_134
	word32 eax_141
	byte SZO_142
	byte C_143
	word32 edx_146
	word16 si_147
	byte Z_148
	call edi_124 (retsize: 4; depth: 4)
		uses: C_129,ds_136,dwLoc04_6,dwLoc08_18,dwLoc0C_42,dwLoc10_21,dwLoc14_24,dwLoc18_26,dwLoc1C_30,dwLoc20_35,dwLoc24_37,dwLoc28_41,eax_127,ebp_125,ebx_130,ecx_126,edi_124,edx_132,es_135,esi_131,esp_123,si_133,SZO_128,Z_134
		defs: C_143,ds_150,eax_141,ebp_139,ebx_144,ecx_140,edi_138,edx_146,es_149,esi_145,esp_137,si_147,SZO_142,Z_148
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ax:0x029C al:0x9C -40(fp):<invalid> -36(fp):ecx -32(fp):ecx -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011CCD:
	word32 esp_67 = esp_137 - 0x00000004
	Mem68[esp_67:word32] = ecx
	Mem70[esp_67 - 0x00000004:word32] = ecx
	word32 ecx_71 = Mem70[ebp_139 - 0x00000008:word32]
	Mem74[esp_67 - 0x00000008:word32] = esi_145
	Mem76[esp_67 - 0x0000000C:word32] = 0x00000001
	Mem79[esp_67 - 0x00000010:word32] = Mem76[ebp_139 + 0x00000014:word32]
	Mem81[esp_67 - 0x00000014:word32] = 0x00000000
	Mem83[esp_67 - 0x00000018:word32] = 0x00000000
	Mem86[esp_67 - 0x0000001C:word32] = Mem83[ebp_139 + 0x00000008:word32]
	word32 ecx_91
	word32 edx_92
	word32 ebx_93
	word32 ebp_94
	word32 esi_95
	word32 edi_96
	fn10011AF2(ecx_71, ebx_144, ebp_139, esi_145, edi_138, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, out ecx_91, out edx_92, out ebx_93, out ebp_94, out esi_95, out edi_96)
	word32 esi_103 = Mem86[esp_67 + 0x00000008:word32]
	*esiOut = esi_103
	word32 ebx_109 = Mem86[esp_67 + 0x0000000C:word32]
	*ebxOut = ebx_109
	word32 ecx_111
	return fn1002F420(esi_95, Mem86[ebp_94 - 0x00000004:word32] ^ ebp_94, edx_92, ebx_109, ebp_94, esi_103, Mem86[esp_67 + 0x00000004:word32], es, ds, out ecx_111)
// DataOut: cs ds eax ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):<invalid> -36(fp):ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn10011C7F_exit:
// DataOut: eax ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -40(fp):<invalid> -36(fp):ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn10011CFB(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg00, word32 dwArg08, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: ecx edi esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edx esp
// Stack args: Stack +0000(32) Stack +0008(32)
fn10011CFB_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32)

l10011CFB:
	word32 ebp_110 = fp - 0x00000004
	word32 esi_116 = Mem0[0x10031520:word32]
	word32 ebx_115 = ecx
	word32 esp_108 = fp - 0x00000014
	word32 edi_109 = edx
	branch esi_116 == 0x00000000 l10011D2B
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0000(32) Stack +0008(32)

l10011D1C:
	word32 esp_95
	word32 edi_96
	word32 ebp_97
	word32 ecx_98
	word32 eax_99
	byte SZO_100
	byte C_101
	word32 ebx_102
	word32 esi_103
	word32 edx_104
	byte Z_105
	selector es_106
	selector ds_107
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_29,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_24,dwLoc18_91,dwLoc1C_94,eax_13,ebp_7,ebx_22,ecx_92,edi_26,edx,es,esi_21,esp_93,SZO_27,Z_28
		defs: C_101,ds_107,eax_99,ebp_97,ebx_102,ecx_98,edi_96,edx_104,es_106,esi_103,esp_95,SZO_100,Z_105
	word32 ecx_111
	word32 eax_112
	byte SZO_113
	byte C_114
	word32 edx_117
	byte Z_118
	call esi_103 (retsize: 4; depth: 4)
		uses: C_101,ds_107,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_24,dwLoc18_91,dwLoc1C_94,eax_99,ebp_97,ebx_102,ecx_98,edi_96,edx_104,es_106,esi_103,esp_95,SZO_100,Z_105
		defs: C_114,ds_120,eax_112,ebp_110,ebx_115,ecx_111,edi_109,edx_117,es_119,esi_116,esp_108,SZO_113,Z_118
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32) Stack +0000(32) Stack +0008(32)

l10011D2B:
	word32 esp_46 = esp_108 - 0x00000004
	Mem47[esp_46:word32] = dwArg08
	Mem51[esp_46 - 0x00000004:word32] = 0x00000001
	Mem55[esp_46 - 0x00000008:word32] = dwArg00
	Mem57[esp_46 - 0x0000000C:word32] = 0x00000000
	Mem59[esp_46 - 0x00000010:word32] = 0x00000000
	Mem61[esp_46 - 0x00000014:word32] = 0x10003B10
	word32 ecx_66
	word32 edx_67
	word32 ebx_68
	word32 esi_69
	word32 eax_70 = fn10011BD1(ebx_115, ebx_115, esi_116, edi_109, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, out ecx_66, out edx_67, out ebx_68, out esi_69)
	word32 edi_73 = Mem61[esp_46 + 0x00000004:word32]
	*ediOut = edi_73
	word32 esi_75 = Mem61[esp_46 + 0x00000008:word32]
	*esiOut = esi_75
	word32 ecx_82
	fn1002F420(eax_70, Mem61[ebp_110 - 0x00000004:word32] ^ ebp_110, edx_67, Mem61[esp_46 + 0x0000000C:word32], ebp_110, esi_75, edi_73, es, ds, out ecx_82)
	return ecx_82
// DataOut: cs ds ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> -28(fp):0x00000001 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn10011CFB_exit:
// DataOut: ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -28(fp):0x00000001 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10011D58(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: ebx ecx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0000(32) Stack +0008(32)
fn10011D58_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32)

l10011D58:
	word32 ecx_29
	word32 edx_30
	word32 ebx_31
	word32 esi_32
	fn10011BD1(ecx, ebx, esi, edi, es, ds, 0x10003B10, 0x00000000, 0x00000000, dwArg00, 0x00000001, dwArg08, out ecx_29, out edx_30, out ebx_31, out esi_32)
	return ecx_29
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011D58_exit:
// DataOut: ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):0x10003B10 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000001 -8(fp):<invalid> -4(fp):ebp



word32 fn10011D77(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg00, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0000(32) Stack +0004(32)
fn10011D77_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l10011D77:
	word32 ebx_28
	word32 esi_29
	return fn10011C7F(ecx, edx, fp - 0x00000004, es, ds, dwArg04, dwArg00, out ebx_28, out esi_29)
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011D77_exit:
// DataOut: eax ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):ecx -16(fp):<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp



word32 fn10011D90(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg00, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0000(32)
fn10011D90_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l10011D90:
	word32 esi_23
	word32 ebx_24
	*ebxOut = fn10011BF8(ecx, edx, ebx, fp - 0x00000004, es, ds, dwArg00, out esi_23)
	return edx
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011D90_exit:
// DataOut: ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp



word32 fn10011DA7(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: ebx ecx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0000(32)
fn10011DA7_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l10011DA7:
	word32 ecx_28
	word32 edx_29
	word32 ebx_30
	word32 esi_31
	fn10011BD1(ecx, ebx, esi, edi, es, ds, 0x10003B38, 0x00000000, 0x00000000, dwArg00, 0x00000003, 0x8000FFFF, out ecx_28, out edx_29, out ebx_30, out esi_31)
	return ecx_28
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10011DA7_exit:
// DataOut: ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> -28(fp):0x10003B38 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000003 -8(fp):0x8000FFFF -4(fp):ebp



void fn10011DCD()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn10011DCD_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn10011DCD_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10011DCD:
	__fastfail(0x00000007)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn10011DD3(word32 ebx, selector es, selector ds, word32 dwArg00, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx es fs gs ss
// LiveOut: ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0000(32) Stack +0004(32)
fn10011DD3_entry:
	*ebxOut = ebx
	*esiOut = esi
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l10011DD3:
	branch CloseHandle(dwArg04) == 0x00000000 l10011DEB
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l10011DEB:
	word32 ebx_49
	word32 esi_50
	word32 edx_51 = fn10011D90(dwArg00, 0x00000878, ebx, es, ds, dwLoc10, out ebx_49, out esi_50)
	int3()
	Mem55[fp - 0x0000000C:word32] = fp - 0x00000004
	Mem59[fp - 0x00000010:word32] = Mem55[fp - 0x00000004:word32]
	branch ReleaseMutex(Mem59[fp - 0x00000010:HANDLE]) == 0x00000000 l10011E10
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

l10011E0A_thunk_fn10011E10:
	word32 ebx_67
	word32 ebp_68
	word32 esi_69
	return fn10011E10(dwArg00, ebx_49, fp - 0x0000000C, es, ds, out ebx_67, out ebp_68, out esi_69)
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -16(fp):fp - 0x0000000C -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

l10011E0C:
	return edx_51
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -16(fp):fp - 0x0000000C -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

l10011DE6:
	return edx
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

fn10011DD3_exit:
// DataOut: ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -16(fp):fp - 0x0000000C -12(fp):<invalid> -8(fp):ecx -4(fp):ebp



word32 fn10011DFA(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut: ebp ebx edx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi
// Stack args: Stack +0004(32)
fn10011DFA_entry:
	*ebxOut = ebx
	*esiOut = esi
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10011DFA:
	branch ReleaseMutex(dwArg04) == 0x00000000 l10011E0A_thunk_fn10011E10
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10011E0C_in_fn10011DFA:
	word32 ebp_37
	*ebpOut = ebp
	return edx
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -8(fp):<invalid> -4(fp):ebp

l10011E0A_thunk_fn10011E10:
	word32 ebx_33
	word32 ebp_34
	word32 esi_35
	return fn10011E10(ecx, ebx, fp - 0x00000004, es, ds, out ebx_33, out ebp_34, out esi_35)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -8(fp):<invalid> -4(fp):ebp

l10011E0C_in_fn10011DFA:
	word32 ebp_25
	*ebpOut = ebp
	return edx
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> -8(fp):<invalid> -4(fp):ebp

fn10011DFA_exit:
// DataOut: ebp ebx edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10011E10(word32 ecx, word32 ebx, word32 ebp, selector es, selector ds, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx es fs gs ss
// LiveOut: ebp ebx edx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10011E10_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: v3(32)

l10011E10:
	Mem4[v3 - 0x00000004:word32] = ecx
	word32 ecx_6 = Mem4[ebp + 0x00000004:word32]
	word32 ebx_12
	word32 esi_13
	word32 edx_14 = fn10011D90(ecx_6, 0x00000882, ebx, es, ds, dwLoc04, out ebx_12, out esi_13)
	int3()
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011E1E_thunk_fn10011E1F:
	word32 ecx_19
	word32 edx_20
	word32 ebx_21
	word32 ebp_22
	word32 esi_23
	fn10011E1F(ecx_6, edx_14, ebp, es, ds, dwArg04, dwArg0C, dwArg10, out ecx_19, out edx_20, out ebx_21, out ebp_22, out esi_23)
	return edx_20
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid> bl:<invalid> ax:<invalid> al:<invalid>

fn10011E10_exit:
// DataOut: ebp ebx edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:<invalid> edx:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid>



word32 fn10011E1F(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg0C, word32 dwArg10, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebp ebx ecx edx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(32) Stack +000C(32) Stack +0010(32)
fn10011E1F_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -022C(32) Local -0234(32) Stack +0004(32) Stack +000C(32) Stack +0010(32)

l10011E1F:
	branch (dwArg0C & 0x80000000 | dwArg10) != 0x00000000 l10011EBF
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -022C(32) Local -0234(32) Stack +0004(32)

l10011EBF:
	fn10011DCD()
	int3()
	word32 eax_166 = WaitForSingleObject(ecx, 0x00000000)
	branch eax_166 != 0xFFFFFFFF l10011EFA
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp
// Terminates process

l10011EE1_thunk_fn10011EFA:
	word32 ecx_182
	word32 edx_183
	word32 ebx_184
	word32 ebp_185
	word32 esi_186
	word32 edi_187
	return fn10011EFA(eax_166, ecx, 0x00000000, fp - 0x00000220, ecx, edx, es, ds, out ecx_182, out edx_183, out ebx_184, out ebp_185, out esi_186, out edi_187)
// DataOut: cs ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: edi:edx esp:esp - 0x000005F0 ebp:esp - 0x00000008 ebx:0x00000000 esi:ecx eax:<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp

l10011EE1_thunk_fn10011EE3:
	word32 ecx_170
	word32 edx_171
	word32 ebx_172
	word32 ebp_173
	word32 esi_174
	word32 edi_175
	return fn10011EE3(eax_166, ecx, 0x00000000, fp - 0x00000220, ecx, edx, es, ds, out ecx_170, out edx_171, out ebx_172, out ebp_173, out esi_174, out edi_175)
// DataOut: cs ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: edi:edx esp:esp - 0x000005F0 ebp:esp - 0x00000008 ebx:0x00000000 esi:ecx eax:<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp

l10011E47:
	word32 eax_141
	word32 edx_67
	fn10013061(fp - 0x00000214, 0x00000104, dwArg04, out edx_67)
	word32 edx_74
	fn100130AC(fp - 0x00000214, 0x00000104, 0x10003B58, out edx_74)
	branch false l10011E7D
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0234(32)

l10011E7D:
	eax_141 = 0x00000001
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -552(fp):ecx -548(fp):<invalid> -544(fp):0x10003B58 -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0234(32)

l10011E79:
	eax_141 = dwArg0C & 0x7FFFFFFF
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -552(fp):ecx -548(fp):<invalid> -544(fp):0x10003B58 -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0234(32)

l10011E80:
	word32 eax_107
	word32 edx_105
	word32 ebx_106
	word32 eax_99 = fn100128E3(ecx, es, ds, dwLoc0234, dwArg0C & 0x7FFFFFFF, eax_141, fp - 0x00000214, out edx_105, out ebx_106)
	branch eax_99 >= 0x00000000 l10011EAB
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000021C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -552(fp):ecx -548(fp):<invalid> -544(fp):0x10003B58 -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10011EAB:
	eax_107 = 0x00000000
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):fp - 0x00000214 -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp

l10011E98:
	Mem127[fp - 0x00000220:word32] = eax_99
	Mem129[fp - 0x00000224:word32] = ecx
	word32 esi_134
	fn10011D58(Mem129[fp:word32], ebx_106, eax_99, ecx, es, ds, ebp, dwArg04, out edx_105, out ebx_106, out esi_134)
	eax_107 = esi_134
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):fp - 0x00000214 -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp

l10011EAD:
	word32 esi_115 = Mem0[fp - 0x00000218:word32]
	*esiOut = esi_115
	word32 ecx_117
	word32 eax_118 = fn1002F420(eax_107, Mem0[fp - 0x00000008:word32] ^ fp - 0x00000004, edx_105, ebx_106, fp - 0x00000004, esi_115, Mem0[fp - 0x0000021C:word32], es, ds, out ecx_117)
	word32 ebp_120
	*ebpOut = Mem0[fp - 0x00000004:word32]
	return eax_118
// DataOut: cs ds eax ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):fp - 0x00000214 -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp

fn10011E1F_exit:
// DataOut: eax ebp ebx ecx edx esi esp
// DataOut (flags): 
// SymbolicIn: edi:<invalid> esp:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -560(fp):<invalid> -556(fp):<invalid> -552(fp):fp - 0x00000214 -548(fp):<invalid> -544(fp):<invalid> -540(fp):edi -536(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn10011EC5(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ecxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebp ecx edi esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10011EC5_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10011EC5:
	word32 eax_26 = WaitForSingleObject(ecx, 0x00000000)
	branch eax_26 != 0xFFFFFFFF l10011EE1_thunk_fn10011EFA
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011EE1_thunk_fn10011EE3:
	word32 ecx_57
	word32 edx_58
	word32 ebx_59
	word32 ebp_60
	word32 esi_61
	word32 edi_62
	return fn10011EE3(eax_26, ecx, 0x00000000, fp - 0x00000004, ecx, edx, es, ds, out ecx_57, out edx_58, out ebx_59, out ebp_60, out esi_61, out edi_62)
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -36(fp):ecx -32(fp):0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -4(fp):ebp

l10011EE1_thunk_fn10011EFA:
	word32 ecx_50
	word32 edx_51
	word32 ebx_52
	word32 ebp_53
	word32 esi_54
	word32 edi_55
	return fn10011EFA(eax_26, ecx, 0x00000000, fp - 0x00000004, ecx, edx, es, ds, out ecx_50, out edx_51, out ebx_52, out ebp_53, out esi_54, out edi_55)
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -36(fp):ecx -32(fp):0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -4(fp):ebp

l10011EE1_thunk_fn10011EE3:
	word32 ecx_43
	word32 edx_44
	word32 ebx_45
	word32 ebp_46
	word32 esi_47
	word32 edi_48
	return fn10011EE3(eax_26, ecx, 0x00000000, fp - 0x00000004, ecx, edx, es, ds, out ecx_43, out edx_44, out ebx_45, out ebp_46, out esi_47, out edi_48)
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -36(fp):ecx -32(fp):0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -4(fp):ebp

fn10011EC5_exit:
// DataOut: eax ebp ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -36(fp):ecx -32(fp):0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -4(fp):ebp



word32 fn10011EE3(word32 eax, word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds eax ebp ebx ecx edi es esi fs gs ss
// LiveOut: eax ebp ebx ecx edi edx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10011EE3_entry:
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011EE3:
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011EE3_thunk_fn10011EFA:
	word32 ecx_11
	word32 edx_12
	word32 ebx_13
	word32 ebp_14
	word32 esi_15
	word32 edi_16
	return fn10011EFA(eax, ecx, ebx, ebp, esi, edi, es, ds, out ecx_11, out edx_12, out ebx_13, out ebp_14, out esi_15, out edi_16)
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 edx:0x00000094

fn10011EE3_exit:
// DataOut: eax ebp ebx ecx edi edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> eax:<invalid> ebx:<invalid> ebp:<invalid> bl:<invalid> ax:<invalid> al:<invalid>



word32 fn10011EFA(word32 eax, word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds eax ebp ebx ecx edi es esi fs gs ss
// LiveOut: eax ebp ebx ecx edi edx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10011EFA_entry:
	*ecxOut = ecx
	*edxOut = edx
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: v3(32)

l10011EFA:
	word32 edx_114
	word32 eax_13
	branch eax == 0x00000000 l10011F0F
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10011EFE:
	branch eax == 0x00000102 l10011F0F
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3

l10011F0F:
	word32 edx_131
	Mem55[ebp - 0x00000004:word32] = ebx
	branch eax != 0x00000000 l10011F53
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3

l10011F53:
	Mem119[ebp - 0x00000008:word32] = ebx
	Mem121[v3 - 0x00000004:word32] = ebp - 0x00000008
	Mem123[v3 - 0x00000008:word32] = 0x00000001
	Mem125[v3 - 0x0000000C:word32] = esi
	branch ReleaseSemaphore(Mem125[v3 - 0x0000000C:HANDLE], Mem125[v3 - 0x00000008:LONG], Mem125[v3 - 0x00000004:LPLONG]) != 0x00000000 l10011F71
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3

l10011F71:
	branch Mem125[ebp - 0x00000008:word32] == ebx l10011F7D
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F7D:
	Mem136[v3 - 0x00000004:word32] = ebx
	Mem138[v3 - 0x00000008:word32] = 0x00000001
	Mem140[v3 - 0x0000000C:word32] = esi
	branch ReleaseSemaphore(Mem140[v3 - 0x0000000C:HANDLE], Mem140[v3 - 0x00000008:LONG], Mem140[v3 - 0x00000004:LPLONG]) != 0x00000000 l10011FC3
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F8B:
	branch GetLastError() != 0x0000012A l10011FC3
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011FC3:
	*edxOut = 0x000000B0
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F98:
	Mem154[v3 - 0x00000004:word32] = ebx
	Mem156[v3 - 0x00000008:word32] = esi
	word32 eax_157 = WaitForSingleObject(Mem156[v3 - 0x00000008:HANDLE], Mem156[v3 - 0x00000004:DWORD])
	branch eax_157 != 0xFFFFFFFF l10011FAF
// DataOut: cs ds eax ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011FAF:
	branch eax_157 == 0x00000000 l10011FBA
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011FB3:
	*edxOut = 0x000000B4
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011FA5:
	edx_131 = 0x000000B3
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F76:
	*edxOut = 0x000000AD
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F67:
	edx_131 = 0x000000AC
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F16:
	Mem86[v3 - 0x00000004:word32] = ebp - 0x00000004
	Mem88[v3 - 0x00000008:word32] = 0x00000001
	Mem91[v3 - 0x0000000C:word32] = esi
	branch ReleaseSemaphore(Mem91[v3 - 0x0000000C:HANDLE], Mem91[v3 - 0x00000008:LONG], Mem91[v3 - 0x00000004:LPLONG]) != 0x00000000 l10011F2E
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3

l10011F2E:
	Mem99[ebp - 0x00000004:word32] = Mem91[ebp - 0x00000004:word32] + 0x00000001
	Mem101[v3 - 0x00000004:word32] = ebx
	Mem103[v3 - 0x00000008:word32] = 0x00000001
	Mem105[v3 - 0x0000000C:word32] = esi
	branch ReleaseSemaphore(Mem105[v3 - 0x0000000C:HANDLE], Mem105[v3 - 0x00000008:LONG], Mem105[v3 - 0x00000004:LPLONG]) != 0x00000000 l10011F4C
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F3F:
	branch GetLastError() == 0x0000012A l10011FBA
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011FBA:
	Mem78[edi:word32] = Mem55[ebp - 0x00000004:word32]
	eax_13 = 0x00000000
// DataOut: cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F4C:
	*edxOut = 0x000000A2
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011F27:
	edx_131 = 0x0000009D
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid>

l10011EE8:
	word32 ecx_65 = Mem55[ebp + 0x00000004:word32]
	*ecxOut = ecx_65
	Mem67[v3 - 0x00000004:word32] = 0x10003B10
	word32 edx_69
	word32 ebx_70
	word32 esi_71
	eax_13 = fn10011D77(ecx_65, edx_131, es, ds, dwLoc04, dwArg00, out edx_69, out ebx_70, out esi_71)
// DataOut: cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 eax:<invalid> edx:<invalid>

l10011F05:
	*edxOut = 0x00000095
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3

l10011FC8:
	Mem39[v3 - 0x00000004:word32] = 0x8000FFFF
	Mem42[v3 - 0x00000008:word32] = ecx
	word32 esi_48
	word32 edi_49
	word32 ecx_50
	*ecxOut = fn10011CFB(Mem42[ebp + 0x00000004:word32], edx_114, ebp, es, ds, dwLoc04, dwArg04, out esi_48, out edi_49)
	eax_13 = esi_48
// DataOut: cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:v3 edx:<invalid> eax:<invalid>

l10011FD9:
	word32 edi_16
	*ediOut = Mem0[v3:word32]
	word32 esi_18
	*esiOut = Mem0[v3 + 0x00000004:word32]
	word32 ebx_20
	*ebxOut = Mem0[v3 + 0x00000008:word32]
	word32 ebp_23
	*ebpOut = Mem0[ebp:word32]
	return eax_13
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> eax:<invalid> ebx:<invalid> ebp:<invalid> bl:<invalid> ax:<invalid> al:<invalid>

fn10011EFA_exit:
// DataOut: eax ebp ebx ecx edi edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> edi:<invalid> eax:<invalid> ebx:<invalid> ebp:<invalid> bl:<invalid> ax:<invalid> al:<invalid>



word32 fn10011FE0(word32 ecx, word32 ebx, word32 ebp, selector es, selector ds, word32 dwArg00, word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx es fs gs ss
// LiveOut: eax ebp ebx ecx edi edx esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32)
fn10011FE0_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l10011FE0:
	__align(fp - 0x00000004)
	Mem35[dwArg04:word32] = 0x00000000
	Mem37[dwArg04 + 0x00000004:word32] = 0x00000000
	word32 edx_39
	fn10013061(fp - 0x00000214, 0x00000104, ecx, out edx_39)
	word32 edx_110
	fn100130AC(fp - 0x00000214, 0x00000104, 0x10003B58, out edx_110)
	word32 eax_56 = OpenSemaphoreW(0x001F0003, 0x00000000, fp - 0x00000214)
	word32 ebp_134 = fp - 0x00000004
	word32 edi_129 = 0x00000000
	word32 esi_125 = eax_56
	branch eax_56 != 0x00000000 l10012068
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0234(32) Stack +0000(32)

l10012068:
	word32 ecx_133
	word32 eax_137 = fn10011EC5(eax_56, fp - 0x0000021C, es, ds, out ecx_133, out ebp_134, out esi_125, out edi_129)
	ebx = eax_137
	branch eax_137 >= 0x00000000 l10012090
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000022C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -568(fp):0x001F0003 -564(fp):0x00000000 -560(fp):fp - 0x00000214 -556(fp):edi -552(fp):esi -548(fp):ebx -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012090:
	int64 edx_eax_158 = (int64) Mem37[fp - 0x0000021C:word32]
	word32 ecx_156 = Mem37[fp - 0x00000218:word32]
	Mem161[ecx_156:word32] = (word32) edx_eax_158
	edx_110 = SLICE(edx_eax_158, word32, 32) (alias)
	*edxOut = edx_110
	Mem162[ecx_156 + 0x00000004:word32] = edx_110
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -568(fp):0x001F0003 -564(fp):0x00000000 -560(fp):fp - 0x00000214 -556(fp):edi -552(fp):esi -548(fp):ebx -540(fp):0x00000000 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001207D:
	Mem143[fp - 0x00000230:word32] = eax_137
	Mem145[fp - 0x00000234:word32] = ecx_133
	fn10011D58(Mem145[ebp_134 + 0x00000004:word32], eax_137, esi_125, edi_129, es, ds, ebp, dwArg04, out edx_110, out ebx, out esi_125)
	edi_129 = ebx
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -568(fp):0x001F0003 -564(fp):0x00000000 -560(fp):fp - 0x00000214 -556(fp):edi -552(fp):esi -548(fp):ebx -540(fp):0x00000000 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012047:
	branch GetLastError() == 0x00000002 l1001209E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000022C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -568(fp):0x001F0003 -564(fp):0x00000000 -560(fp):fp - 0x00000214 -556(fp):edi -552(fp):esi -548(fp):ebx -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0234(32) Stack +0000(32)

l10012052:
	edi_129 = fn10011D77(dwArg00, 0x000000C8, es, ds, 0x00000000, 0x10003B10, out edx_110, out ebx, out esi_125)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000022C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -568(fp):0x001F0003 -564(fp):0x00000000 -560(fp):fp - 0x00000214 -556(fp):edi -552(fp):esi -548(fp):ebx -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001209E:
	branch esi_125 == 0x00000000 l100120A8
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> Sequence edx:eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -568(fp):0x001F0003 -564(fp):<invalid> -560(fp):<invalid> -556(fp):edi -552(fp):esi -548(fp):ebx -540(fp):0x00000000 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100120A2:
	Mem106[fp - 0x00000230:word32] = esi_125
	word32 ebx_108
	word32 esi_109
	*edxOut = fn10011DD3(ebx, es, ds, ebp, dwArg00, out ebx_108, out esi_109)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> Sequence edx:eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -568(fp):0x001F0003 -564(fp):<invalid> -560(fp):<invalid> -556(fp):edi -552(fp):esi -548(fp):ebx -540(fp):0x00000000 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100120A8:
	word32 edi_83 = Mem37[fp - 0x0000022C:word32]
	*ediOut = edi_83
	word32 ebx_87 = Mem37[fp - 0x00000224:word32]
	*ebxOut = ebx_87
	word32 ecx_94
	word32 eax_95 = fn1002F420(edi_129, Mem37[fp - 0x00000008:word32] ^ fp - 0x00000220, edx_110, ebx_87, ebp_134, Mem37[fp - 0x00000228:word32], edi_83, es, ds, out ecx_94)
	word32 ebp_98
	*ebpOut = Mem37[ebp_134:word32]
	return eax_95
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> Sequence edx:eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -568(fp):0x001F0003 -564(fp):<invalid> -560(fp):<invalid> -556(fp):edi -552(fp):esi -548(fp):ebx -540(fp):0x00000000 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10011FE0_exit:
// DataOut: eax ebp ebx ecx edi edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> Sequence edx:eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -568(fp):0x001F0003 -564(fp):<invalid> -560(fp):<invalid> -556(fp):edi -552(fp):esi -548(fp):ebx -540(fp):0x00000000 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn100120C1(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100120C1_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -002C(32) Stack +0004(32) Stack +0008(32)

l100120C1:
	Mem22[ecx + 0x00000004:word32] = dwArg08
	Mem24[ecx + 0x00000008:word32] = Mem22[dwArg04 + 0x00000004:word32]
	Mem26[ecx + 0x0000000C:word32] = 0x00000000
	Mem29[ecx + 0x00000010:word16] = Mem26[dwArg04 + 0x00000020:word16]
	Mem31[ecx + 0x00000014:word32] = Mem29[dwArg04:word32]
	Mem33[ecx + 0x0000001C:word32] = 0x00000000
	Mem36[ecx + 0x00000020:word32] = Mem33[dwArg04 + 0x00000048:word32]
	Mem38[ecx + 0x00000024:word32] = Mem36[dwArg04 + 0x0000004C:word32]
	Mem40[ecx + 0x00000028:word32] = 0x00000000
	word32 ecx_41 = Mem40[dwArg04 + 0x0000001C:word32]
	word32 eax_185 = 0x00000001
	word32 dwLoc08_175 = 0x00000001
	branch ecx_41 == 0x00000000 l1001212B
// DataOut: eax ebx ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32)

l1001211C:
	ecx_177 = ecx_41
// DataOut: ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:0x00000001 ebx:<invalid> esi:ecx ecx:<invalid> ax:0x0001 -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32)

l1001211F:
	word32 ecx_177
	ecx_177 = ecx_189 + 0x00000001
	word32 ecx_189 = ecx_177
	branch Mem40[ecx_189:byte] != 0x00 l1001211F
// DataOut: ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32)

l10012126:
	eax_185 = ecx_177 - (ecx_41 + 0x00000001) + 0x00000001
// DataOut: eax ebx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32)

l1001212B:
	word32 ecx_58 = Mem40[dwArg04 + 0x00000044:word32]
	branch ecx_58 == 0x00000000 l10012147
// DataOut: ebx ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -002C(32)

l10012135:
	ecx_166 = ecx_58
// DataOut: ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -002C(32)

l10012138:
	word32 ecx_166
	ecx_166 = ecx_188 + 0x00000001
	word32 ecx_188 = ecx_166
	branch Mem40[ecx_188:byte] != 0x00 l10012138
// DataOut: ebx ecx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -002C(32)

l1001213F:
	dwLoc08_175 = ecx_166 - (ecx_58 + 0x00000001) + 0x00000001
// DataOut: ebx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):0x00000001 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -002C(32)

l10012147:
	word32 edi_74 = fn10011890(Mem40[dwArg04 + 0x0000000C:word32]) + dwLoc08_175 + eax_185
	branch Mem40[ecx + 0x0000002C:word32] == 0x00000000 l10012163
// DataOut: ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l1001215E:
	branch Mem40[ecx + 0x00000030:word32] >=u edi_74 l10012195
// DataOut: ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l10012163:
	word32 eax_141 = HeapAlloc(GetProcessHeap(), 0x00000008, edi_74)
	branch eax_141 == 0x00000000 l10012195
// DataOut: ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -002C(32)

l1001217A:
	HeapFree(GetProcessHeap(), 0x00000000, Mem40[ecx + 0x0000002C:word32])
	Mem158[ecx + 0x0000002C:word32] = eax_141
	Mem159[ecx + 0x00000030:word32] = edi_74
// DataOut: ebx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):0x00000008 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l10012195:
	word32 ecx_83 = Mem40[ecx + 0x0000002C:word32]
	branch ecx_83 == 0x00000000 l100121CD
// DataOut: ebx ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l1001219D:
	word32 esi_105 = Mem40[ecx + 0x00000030:word32] + ecx_83
	fn10012D8A(fn10012E06(fn10012E06(ecx_83, esi_105, Mem40[dwArg04 + 0x0000001C:word32], 0x0000000C), esi_105, Mem40[dwArg04 + 0x00000044:word32], 0x0000001C), esi_105, Mem40[dwArg04 + 0x0000000C:word32], 0x00000028)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100121CD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100120C1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx esi:esi ecx:<invalid> ax:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):0x00000028 -20(fp):0x0000001C -16(fp):0x0000000C -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn100121D5(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebx edi esi esp
fn100121D5_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100121D5:
	word32 esi_16 = Mem0[ecx + 0x00000010:word32]
	word32 ebx_18 = (word32) Mem0[ecx + 0x00000014:word16] *s 0x00000034 + esi_16
	branch esi_16 == ebx_18 l10012211
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100121EC:
	word32 esi_45 = esi_16 + 0x0000002C
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx eax:<invalid> esi:<invalid> ebx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100121EF:
	HeapFree(GetProcessHeap(), 0x00000000, Mem0[esi_45:word32])
	Mem59[esi_45:word32] = Mem0[esi_45:word32] & 0x00000000
	esi_45 = esi_45 + 0x00000034
	Mem63[esi_45 - 0x00000030:word32] = Mem59[esi_45 - 0x00000030:word32] & 0x00000000
	branch esi_45 - 0x0000002C != ebx_18 l100121EF
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx eax:<invalid> esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10012211:
	HeapFree(GetProcessHeap(), 0x00000000, Mem0[ecx + 0x00000010:word32])
	Mem35[ecx + 0x00000010:word32] = Mem0[ecx + 0x00000010:word32] & 0x00000000
	Mem38[ecx + 0x00000014:word32] = 0x00000000
	return
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx eax:<invalid> esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn100121D5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi eax:<invalid> esi:esi ebx:ebx -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn1001222F(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1001222F_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l1001222F:
	word32 edi_26 = Mem0[ecx + 0x0000000C:word32]
	branch Mem0[ecx + 0x00000010:word32] != 0x00000000 l10012282
// DataOut: bx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l10012245:
	branch edi_26 == 0x00000000 l10012282
// DataOut: bx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 -20(fp):0x00000034 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l10012249:
	word32 eax_142 = HeapAlloc(GetProcessHeap(), 0x00000008, 0x00000104)
	Mem145[ecx + 0x00000010:word32] = eax_142
	branch eax_142 == 0x00000000 l10012282
// DataOut: bx eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 -20(fp):0x00000034 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l10012264:
	Mem154[ecx + 0x00000014:word16] = 0x0005
	Mem159[ecx + 0x00000016:word16] = 0x0000
	eax_163 = eax_142
// DataOut: bx eax ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 eax:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):0x00000104 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l1001227E:
	word32 eax_163
	branch eax_163 != eax_142 + 0x00000104 l10012279
// DataOut: bx eax ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):0x00000005 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l10012279:
	Mem166[eax_163:word16] = 0x0034
	eax_163 = eax_163 + 0x00000034
// DataOut: bx eax ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):0x00000005 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l10012282:
	word32 ecx_38 = Mem0[ecx + 0x00000010:word32]
	branch ecx_38 == 0x00000000 l100122E6
// DataOut: ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32)

l10012289:
	branch edi_26 == 0x00000000 l100122B9
// DataOut: ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 ecx:<invalid> eax:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32)

l10012290:
	word32 edx_105 = (word32) Mem0[ecx + 0x00000014:word16] *s 0x00000034 + ecx_38
	branch ecx_38 == edx_105 l100122B9
// DataOut: ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 ecx:<invalid> eax:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32)

l1001229D:
	word32 ebx_110 = Mem0[ecx + 0x0000000C:word32]
	word32 ecx_112 = ecx_38 + 0x00000008
// DataOut: ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:0x00000034 ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32)

l100122A3:
	branch Mem0[ecx_112 - 0x00000004:word32] <=u ebx_110 l100122AF
// DataOut: ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32)

l100122A8:
	branch Mem0[ecx_112:word32] == Mem0[dwArg04 + 0x00000004:word32] l100122E6
// DataOut: ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32)

l100122AF:
	ecx_112 = ecx_112 + 0x00000034
	branch ecx_112 - 0x00000008 != edx_105 l100122A3
// DataOut: ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32)

l100122B9:
	word32 eax_87 = Mem0[ecx + 0x00000008:word32]
	Mem89[ecx + 0x00000016:word16] = (word16) (uint32) ((uint64) (uint32) ((word32) Mem0[ecx + 0x00000016:word16] + 0x00000001) % (word32) Mem0[ecx + 0x00000014:word16])
	__lock()
	Mem91[eax_87:word32] = __xadd(Mem89[eax_87:word32], 0x00000001)
	fn100120C1((word32) Mem91[ecx + 0x00000016:word16] *s 0x00000034 + Mem91[ecx + 0x00000010:word32], dwArg04, 0x00000002)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):0x00000008 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100122E6:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1001222F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ebx:ebx ecx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



void fn100122ED(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn100122ED_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100122ED:
	word32 edi_20 = Mem0[0x100314B4:word32]
	branch edi_20 == 0x00000000 l10012365
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012304:
	branch Mem0[edi_20 + 0x00000004:word32] != 0x00000000 l10012325
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10012309:
	branch fn10012961(fp - 0x00000008, fp - 0x00000004, es, ds) < 0x00000000 l10012325
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

l1001231A:
	branch Mem0[edi_20 + 0x00000004:word32] != 0x00000000 l10012325
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l1001231F:
	Mem109[edi_20 + 0x00000004:word32] = Mem0[fp - 0x00000008:word32]
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l10012325:
	word32 edi_57 = Mem0[edi_20 + 0x00000004:word32]
	word32 edi_62 = 0x00000000 - (-edi_57 == 0x00000000) & edi_57 + 0x00000010
	branch edi_62 == 0x00000000 l10012365
// DataOut: ebp ebx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10012333:
	word32 eax_66 = GetCurrentThreadId()
	Mem68[fp - 0x00000018:word32] = 0x0000000A
	word32 esi_78 = Mem68[edi_62 + 0x00000008 + (uint32) ((uint64) ((uint32) eax_66) % Mem68[fp - 0x00000018:word32]) * 0x00000004:word32]
// DataOut: ebp ebx ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10012350:
	branch esi_78 != 0x00000000 l10012348
// DataOut: ebp ebx ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10012348:
	branch Mem68[esi_78 + 0x00000018:word32] == eax_66 l10012356
// DataOut: ebp ebx ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1001234D:
	esi_78 = Mem68[esi_78 + 0x0000001C:word32]
// DataOut: ebp ebx ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10012354:
	esi_78 = 0x00000000
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10012356:
	branch esi_78 == 0x00000000 l10012365
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1001235A:
	branch Mem68[esi_78 + 0x00000008:word32] != 0x00000000 l10012365
// DataOut: ebp edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1001235F:
	Mem92[esi_78 + 0x00000008:word32] = edi_62 + 0x00000004
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10012365:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100122ED_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x0000000A -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



byte fn1001236E(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: al bl ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001236E_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(0) Stack +0004(32) Stack +0008(32)

l1001236E:
	Mem28[dwArg04:byte] = 0x00
	byte al_133 = 0x00
	word32 esp_132 = fp - 0x00000014
	branch edx == 0x00000000 l1001241F
// DataOut: al cs ds ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0020(0) Stack +0008(32)

l1001238E:
	word32 edx_73
	word32 ebx_74
	word32 esi_75
	word32 edi_179
	al_133 = fn1001236E(ecx, Mem28[edx + 0x00000008:word32], dwArg04, dwArg08, out edx_73, out ebx_74, out esi_75, out edi_179)
	esp_132 = fp - 0x0000001C
	word32 edx_79 = Mem28[esi_75 + 0x00000010:word32]
	*edxOut = edx_79
	branch edx_79 == 0x00000000 l1001241F
// DataOut: al cs ds ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> al:0x00 esi:edx -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l100123A1:
	branch Mem28[edx_79:word32] != 0x00000000 l100123B4
// DataOut: cs ds ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l100123A6:
	__lock()
	Mem182[0x10031080:word32] = __xadd(Mem28[0x10031080:word32], 0x00000001)
	Mem186[edx_79:word32] = 0x00000002
// DataOut: cs ds ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l100123B4:
	branch Mem28[edi_179 + 0x0000002C:word32] != 0x00000000 l100123C5
// DataOut: cs ds ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l100123BA:
	Mem169[edi_179 + 0x0000002C:word32] = Mem28[edx_79:word32]
	Mem173[edi_179 + 0x00000030:word32] = Mem169[edx_79 + 0x00000004:word32]
	Mem177[edi_179 + 0x00000034:word32] = Mem173[edx_79 + 0x00000008:word32]
	edi_179 = ecx
// DataOut: cs ds ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100123C5:
	word32 edi_90 = edi_179 + 0x00000038
	Mem94[edi_90:word32] = Mem28[edx_79:word32]
	Mem98[edi_90 + 0x00000004:word32] = Mem94[edx_79 + 0x00000004:word32]
	Mem102[edi_90 + 0x00000008:word32] = Mem98[edx_79 + 0x00000008:word32]
	word32 ecx_107 = ebx_74
	word32 esi_105 = dwArg08 + ebx_74
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100123D7:
	ecx_107 = ecx_187 + 0x00000001
	word32 ecx_187 = ecx_107
	branch Mem102[ecx_187:byte] != 0x00 l100123D7
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100123DE:
	word32 ebx_115 = ebx_74 + (ecx_107 - (ebx_74 + 0x00000001))
	branch esi_105 - ebx_115 <= 0x00000002 l1001241D
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100123EB:
	Mem135[ebx_115:byte] = 0x5C
	word32 ecx_138 = Mem135[edx_79 + 0x00000004:word32]
	ecx_140 = ecx_138
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100123F5:
	word32 ecx_140
	ecx_140 = ecx_188 + 0x00000001
	word32 ecx_188 = ecx_140
	branch Mem135[ecx_188:byte] != 0x00 l100123F5
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100123FC:
	word32 ecx_146 = ecx_140 - (ecx_138 + 0x00000001)
	word32 esi_147 = esi_105 - (ebx_115 + 0x00000001)
	word32 edi_148 = ecx_146 + 0x00000001
	branch ecx_146 + 0x00000001 <u esi_147 l10012409
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10012407:
	edi_148 = esi_147
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10012409:
	memcpy_s(ebx_115 + 0x00000001, esi_147, Mem135[edx_79 + 0x00000004:word32], edi_148)
	Mem164[edi_148 - 0x00000001 + (ebx_115 + 0x00000001):byte] = 0x00
// DataOut: cs ds edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001241D:
	esp_132 = fp - 0x0000001C
	al_133 = 0x01
// DataOut: al cs ds edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001241F:
	word32 esp_55 = esp_132 + 0x00000004
	word32 edi_54
	*ediOut = Mem28[esp_132:word32]
	word32 esi_56
	*esiOut = Mem28[esp_55:word32]
	word32 ebx_58
	*ebxOut = Mem28[esp_55 + 0x00000004:word32]
	return al_133
// DataOut: al bl cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn1001236E_exit:
// DataOut: al bl ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp ebx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



void fn10012428(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10012428_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10012428:
	word32 esi_232
	word32 edx_132
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem31[edx:byte] = 0x00
	word32 ebp_125 = fp - 0x00000004
	word32 esp_123 = fp - 0x00000020
	word32 esi_32 = Mem31[0x100314A8:word32]
	edx_132 = edx
	branch esi_32 == 0x00000000 l10012481
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l10012455:
	word32 eax_233 = GetCurrentThreadId()
	edx_132 = (uint32) ((uint64) (uint32) eax_233 % 0x0000000A)
	esi_232 = Mem31[esi_32 + edx_132 * 0x00000004:word32]
// DataOut: bl cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:ecx ebx:0x00000000 esi:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l1001247A:
	branch esi_232 != 0x00000000 l1001246E
// DataOut: bl cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l1001246E:
	branch Mem31[esi_232 + 0x00000004:word32] == eax_233 l100124FF
// DataOut: bl cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l100124FF:
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l10012477:
	esi_232 = Mem31[esi_232 + 0x00000008:word32]
// DataOut: bl cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l1001247E:
// DataOut: bl cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l10012481:
	esi_232 = 0x00000000
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:ecx ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l10012483:
	word32 eax_127 = ecx
	branch esi_232 == 0x00000000 l100124D2
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:ecx ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l10012487:
	branch Mem31[esi_232:word32] == 0x00000000 l100124D2
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:ecx ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32) Stack +0004(32)

l1001248B:
	Mem145[edx:byte] = 0x00
	esp_123 = fp - 0x00000020
	word32 edx_150
	word32 ebx_151
	word32 esi_152
	word32 edi_153
	branch fn1001236E(ecx, Mem145[esi_232:word32], edx, dwArg04, out edx_150, out ebx_151, out esi_152, out edi_153) == 0x00 l100124A4
// DataOut: bl cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edx ebp:fp - 0x00000004 eax:ecx ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100124A1:
	Mem221[ecx + 0x00000028:word32] = edi_153
// DataOut: bl cs ds ebp ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:ecx edx:<invalid> al:<invalid> -40(fp):edx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100124A4:
	word32 dwLoc10_164 = Mem145[esi_152:word32]
// DataOut: bl cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:ecx edx:<invalid> al:<invalid> -40(fp):edx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):bl -16(fp):0x0000000A -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l100124A9:
	word32 esp_170 = esp_123 - 0x00000004
	Mem171[esp_170:word32] = ecx
	word32 esp_176
	word32 edi_177
	word32 ebp_178
	byte SCZO_179
	word32 eax_180
	byte SZO_181
	byte C_182
	word32 ebx_183
	word32 esi_184
	word32 edx_185
	word32 ecx_186
	byte bl_187
	byte Z_188
	byte al_189
	selector es_190
	selector ds_191
	call Mem171[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_173,bl_24,bLoc14_29,C_160,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_165,dwLoc14,dwLoc18_15,dwLoc1C_18,dwLoc20_20,dwLoc24_144,dwLoc28_149,eax_172,ebp_7,ebx_151,ecx_175,edi_169,edx_150,es,esi_174,esp_170,SCZO_139,SZO_158,Z_159
		defs: al_189,bl_187,C_182,ds_191,eax_180,ebp_178,ebx_183,ecx_186,edi_177,edx_185,es_190,esi_184,esp_176,SCZO_179,SZO_181,Z_188
	word32 edi_194
	byte SCZO_196
	word32 eax_197
	byte SZO_198
	byte C_199
	word32 ebx_200
	word32 esi_201
	word32 ecx_203
	byte bl_204
	byte Z_205
	byte al_206
	call esi_184 (retsize: 4; depth: 4)
		uses: al_189,bl_187,bLoc14_29,C_182,ds_191,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_165,dwLoc14,dwLoc18_15,dwLoc1C_18,dwLoc20_20,dwLoc24_144,dwLoc28_149,eax_180,ebp_178,ebx_183,ecx_192,edi_177,edx_185,es_190,esi_184,esp_176,SCZO_179,SZO_181,Z_188
		defs: al_206,bl_204,C_199,ds_208,eax_197,ebp_195,ebx_200,ecx_203,edi_194,edx_202,es_207,esi_201,esp_193,SCZO_196,SZO_198,Z_205
	eax_127 = Mem171[dwLoc10_164 + 0x00000008:word32]
	dwLoc10_164 = eax_127
	branch eax_127 != 0x00000000 l100124A9
// DataOut: bl cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:ecx edx:<invalid> al:<invalid> bl:<invalid> -40(fp):edx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32)

l100124D2:
	word32 esi_70 = Mem31[0x10031544:word32]
	branch esi_70 == 0x00000000 l100124EC
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -40(fp):edx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32)

l100124DC:
	word32 esp_100 = esp_123 - 0x00000004
	Mem101[esp_100:word32] = ecx
	Mem106[esp_100 - 0x00000004:word32] = dwLoc14
	word32 esp_107
	word32 edi_108
	word32 ebp_109
	byte SCZO_110
	word32 eax_111
	byte SZO_112
	byte C_113
	word32 ebx_114
	word32 esi_115
	word32 edx_116
	word32 ecx_117
	byte bl_118
	byte Z_119
	byte al_120
	selector es_121
	selector ds_122
	call Mem106[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_60,bl_61,bLoc14_55,C_73,ds_58,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_57,dwLoc14,dwLoc18_15,dwLoc1C_18,dwLoc20_20,dwLoc24_53,dwLoc28_54,eax_67,ebp_68,ebx_65,ecx_102,edi_64,edx_62,es_59,esi_70,esp_105,SCZO_63,SZO_71,Z_72
		defs: al_120,bl_118,C_113,ds_122,eax_111,ebp_109,ebx_114,ecx_117,edi_108,edx_116,es_121,esi_115,esp_107,SCZO_110,SZO_112,Z_119
	word32 edi_124
	byte SCZO_126
	byte SZO_128
	byte C_129
	word32 ebx_130
	word32 esi_131
	word32 ecx_133
	byte bl_134
	byte Z_135
	byte al_136
	call esi_115 (retsize: 4; depth: 4)
		uses: al_120,bl_118,bLoc14_55,C_113,ds_122,dwLoc04_6,dwLoc08_12,dwLoc0C_30,dwLoc10_57,dwLoc14,dwLoc18_15,dwLoc1C_18,dwLoc20_20,dwLoc24_53,dwLoc28_54,eax_111,ebp_109,ebx_114,ecx_117,edi_108,edx_116,es_121,esi_115,esp_107,SCZO_110,SZO_112,Z_119
		defs: al_136,bl_134,C_129,ds_138,eax_127,ebp_125,ebx_130,ecx_133,edi_124,edx_132,es_137,esi_131,esp_123,SCZO_126,SZO_128,Z_135
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -40(fp):edx -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100124EC:
	word32 esp_86 = esp_123 + 0x00000004
	word32 ecx_94
	fn1002F420(eax_127, eax_11 ^ fp - 0x00000004, edx_132, Mem31[esp_86 + 0x00000004:word32], ebp_125, Mem31[esp_86:word32], Mem31[esp_123:word32], es, ds, out ecx_94)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn10012428_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



byte fn1001256F(word32 ecx, ptr32 & blOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: al bl
// Trashed: SCZO ah al ax bl bx eax ebx rax rbx
// Preserved: ebp ebx edi esi esp
fn1001256F_entry:
// DataOut: bl cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001256F:
	word32 eax_23 = OpenSCManagerW(0x00000000, 0x00000000, 0x00000001)
	branch eax_23 == 0x00000000 l100125F1
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(8)

l1001258A:
	word32 eax_64 = OpenServiceW(eax_23, 0x10003B6C, 0x00000001)
	branch eax_64 == 0x00000000 l100125E7
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000001 -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(8)

l1001259F:
	QueryServiceConfigW(eax_64, 0x00000000, 0x00000000, fp - 0x00000008)
	word32 eax_106 = LocalAlloc(0x00000000, ecx)
	branch eax_106 == 0x00000000 l100125DF
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):0x10003B6C -24(fp):0x00000001 -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(8)

l100125BD:
	branch QueryServiceConfigW(eax_64, eax_106, ecx, fp - 0x00000008) == 0x00000000 l100125D8
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> esi:<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(8)

l100125D0:
	branch Mem0[eax_106 + 0x00000004:word32] != 0x00000004 l100125D8
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> esi:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ecx -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(8)

l100125D6:
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> esi:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ecx -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(8)

l100125D8:
	LocalFree(eax_106)
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> bl:0x01 -40(fp):<invalid> -36(fp):<invalid> -32(fp):ecx -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(8)

l100125DF:
	CloseServiceHandle(eax_64)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> bl:0x01 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(8)

l100125E7:
	CloseServiceHandle(eax_23)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> bl:0x01 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0010(8)

l100125F1:
	byte bl_51
	*blOut = (byte) ebx
	return 0x01
// DataOut: al bl cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:esi bl:0x01 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

fn1001256F_exit:
// DataOut: al bl
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx eax:<invalid> al:<invalid> esi:esi bl:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -4(fp):ebp



void fn100125F8(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: ebp ebx edi esi esp
fn100125F8_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100125F8:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	memset(fp - 0x00000124, 0x00000000, 0x0000011C)
	byte bl_24 = 0x00
	word32 eax_60 = VerifyVersionInfoW(fp - 0x00000124, 0x00000040, DPB(tLoc0134, VerSetConditionMask(DPB(tLoc013C, 0x00000000, 0), 0x00000040, 0x07), 0))
	branch eax_60 == 0x00000000 l10012660
// DataOut: bl cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0128(32) Local -012C(32)

l10012655:
	branch fn1001256F(ecx, out bl_24) != 0x00 l10012660
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000012C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x0000011C ebx:0x00000000 -316(fp):fp - 0x00000124 -312(fp):0x00000040 -308(fp):<invalid> -304(fp):edx -300(fp):esi -296(fp):ebx -292(fp):0x0000011C -12(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0128(32) Local -012C(32)

l1001265E:
	bl_24 = 0x01
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000012C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x0000011C ebx:0x00000000 al:<invalid> bl:<invalid> -316(fp):fp - 0x00000124 -312(fp):0x00000040 -308(fp):<invalid> -304(fp):edx -300(fp):esi -296(fp):ebx -292(fp):0x0000011C -12(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0128(32) Local -012C(32)

l10012660:
	word32 ecx_79
	fn1002F420(DPB(eax_60, bl_24, 0), eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_79)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000012C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x0000011C ebx:<invalid> bl:<invalid> al:<invalid> -316(fp):fp - 0x00000124 -312(fp):0x00000040 -308(fp):<invalid> -304(fp):edx -300(fp):esi -296(fp):ebx -292(fp):0x0000011C -12(fp):ax -8(fp):<invalid> -4(fp):ebp

fn100125F8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx ecx:<invalid> al:<invalid> bl:<invalid> -316(fp):fp - 0x00000124 -312(fp):0x00000040 -308(fp):<invalid> -304(fp):edx -300(fp):esi -296(fp):ebx -292(fp):0x0000011C -12(fp):ax -8(fp):<invalid> -4(fp):ebp



word32 fn100128E3(word32 ecx, selector es, selector ds, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esi esp
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn100128E3_entry:
	*ebxOut = ebx
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l100128E3:
	word32 esi_18 = 0x00000000
	branch CreateSemaphoreExW(0x00000000, dwArg04, dwArg08, dwArg0C, 0x00000000, 0x001F0003) == 0x00000000 l10012913
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0000(32)

l10012913:
	word32 edx_72
	word32 ebx_73
	word32 esi_74
	esi_18 = fn10011D77(dwArg00, 0x000015E3, es, ds, 0x00000000, 0x10003B14, out edx_72, out ebx_73, out esi_74)
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000000 -20(fp):0x001F0003 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

l10012909:
	word32 edx_63
	fn10012930(ecx, es, ds, out edx_63)
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000000 -20(fp):0x001F0003 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

l10012927:
	return esi_18
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000000 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

fn100128E3_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -40(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x00000000 -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp



word32 fn10012930(word32 ecx, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: ecx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10012930_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012930:
	word32 ebx_19 = Mem0[ecx:word32]
	branch ebx_19 == 0x00000000 l10012955
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012940:
	GetLastError()
	word32 ebx_46
	word32 esi_47
	word32 edx_48
	*edxOut = fn10011DD3(ebx_19, es, ds, dwLoc18, ebx_19, out ebx_46, out esi_47)
	Mem51[fp - 0x00000014:word32] = esi_47
	SetLastError(Mem51[fp - 0x00000014:DWORD])
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10012955:
	Mem29[ecx:word32] = Mem0[fp + 0x00000004:word32]
	return ecx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn10012930_exit:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn10012961(word32 edx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10012961_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012961:
	word32 edx_118
	word32 esi_148
	Mem29[edx:word32] = 0x00000000
	GetCurrentProcessId()
	word32 edx_40
	word32 ebx_41
	word32 esi_42
	fn1001084D(fp - 0x00000210, 0x00000104, 0x10003D0C, out edx_40, out ebx_41, out esi_42)
	Mem46[fp - 0x00000214:word32] = esi_42
	Mem49[fp - 0x00000230:word32] = 0x001F0001
	Mem51[fp - 0x00000234:word32] = esi_42
	Mem53[fp - 0x00000238:word32] = fp - 0x00000210
	Mem55[fp - 0x0000023C:word32] = esi_42
	Mem59[fp - 0x00000230:word32] = CreateMutexExW(Mem55[fp - 0x0000023C:LPSECURITY_ATTRIBUTES], Mem55[fp - 0x00000238:LPCWSTR], Mem55[fp - 0x00000234:DWORD], Mem55[fp - 0x00000230:DWORD])
	word32 edi_157 = edi
	word32 ebp_120 = fp - 0x00000004
	word32 edx_63
	word32 ecx_64 = fn10012930(fp - 0x00000214, es, ds, out edx_63)
	word32 esp_158 = fp - 0x0000022C
	branch Mem59[fp - 0x00000214:word32] != esi_42 l100129DB
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l100129DB:
	word32 eax_132
	word32 esi_129
	Mem95[fp - 0x00000230:word32] = edi
	Mem101[fp - 0x00000240:word32] = fp - 0x00000218
	word32 ebx_103
	word32 ebp_104
	word32 esi_105
	Mem109[fp - 0x00000234:word32] = fn10012D42(fp - 0x00000214, ebx_41, fp - 0x00000004, es, ds, ebp, dwArg00, out ebx_103, out ebp_104, out esi_105)
	Mem111[ebp_104 - 0x00000220:word32] = esi_105
	Mem113[fp - 0x00000238:word32] = ebp_104 - 0x00000220
	Mem115[ebp_104 - 0x0000021C:word32] = esi_105
	word32 edi_121
	word32 ebx_119
	word32 ecx_117
	word32 eax_122 = fn10011FE0(ebp_104 - 0x0000020C, ebx_103, ebp_104, es, ds, ebp, dwArg00, out ecx_117, out edx_118, out ebx_119, out ebp_120, out edi_121)
	branch eax_122 >= 0x00000000 l10012A29
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):0x00000104 -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A29:
	eax_132 = Mem115[ebp_120 - 0x00000220:word32]
	esi_129 = 0x00000000
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A18:
	Mem250[fp - 0x00000234:word32] = eax_122
	Mem252[fp - 0x00000238:word32] = ecx_117
	word32 ecx_253 = Mem252[ebp_120 + 0x00000004:word32]
	Mem255[fp - 0x0000023C:word32] = 0x00000061
	ecx_117 = fn10011D58(ecx_253, ebx_119, eax_122, edi_121, es, ds, ebp, dwArg04, out edx_118, out ebx_119, out esi_129)
	eax_132 = edi_121
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A31:
	word32 esi_139
	branch esi_129 >= 0x00000000 l10012A44
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A44:
	edi_121 = eax_132 << 0x00000002
	esi_139 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A35:
	Mem231[fp - 0x00000234:word32] = esi_129
	Mem233[fp - 0x00000238:word32] = ecx_117
	word32 ecx_234 = Mem233[ebp_120 + 0x00000004:word32]
	Mem236[fp - 0x0000023C:word32] = 0x0000006A
	ecx_117 = fn10011D58(ecx_234, ebx_119, esi_129, edi_121, es, ds, ebp, dwArg04, out edx_118, out ebx_119, out esi_139)
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A4B:
	branch esi_139 >= 0x00000000 l10012A56
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A56:
	branch edi_121 == 0x00000000 l10012AA0
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012AA0:
	Mem218[fp - 0x00000234:word32] = ebx_119
	word32 eax_223 = fn10012BBF(ebp_120 - 0x0000020C, ebp_120 - 0x00000210, ebp_120, es, ds, ebp, dwArg00, out ecx_117, out edx_118)
	esi_139 = eax_223
	branch eax_223 >= 0x00000000 l10012A63
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10012AB8:
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A5A:
	Mem211[ebx_119:word32] = edi_121
	word32 ecx_212 = Mem211[edi_121:word32]
	Mem216[Mem211[ebx_119:word32]:word32] = ecx_212 + 0x00000001
	ecx_117 = ecx_212 + 0x00000001
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10012A63:
	esi_148 = 0x00000000
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10012A4F:
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012ABD:
	Mem189[fp - 0x00000234:word32] = esi_139
	Mem191[fp - 0x00000238:word32] = ecx_117
	ecx_117 = fn10011D58(Mem191[ebp_120 + 0x00000004:word32], ebx_119, esi_139, edi_121, es, ds, ebp, dwArg04, out edx_118, out ebx_119, out esi_148)
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10012A65:
	edi_157 = Mem115[fp - 0x00000230:word32]
	esp_158 = fp - 0x0000022C
	branch Mem115[ebp_120 - 0x00000214:word32] == 0x00000000 l10012A7A
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10012A6F:
	Mem175[fp - 0x00000230:word32] = Mem115[ebp_120 - 0x00000214:word32]
	esp_158 = fp - 0x00000230
	edx_118 = fn10011DFA(ecx_117, ebx_119, es, ds, dwArg00, out ebx_119, out ebp_120, out esi_148)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A7A:
	branch Mem115[ebp_120 - 0x00000210:word32] == 0x00000000 l10012A8E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012A83:
	word32 esp_167 = esp_158 - 0x00000004
	Mem168[esp_167:word32] = Mem115[ebp_120 - 0x00000210:word32]
	word32 ebx_169
	edx_118 = fn10011DD3(ebx_119, es, ds, ebp, dwArg00, out ebx_169, out esi_148)
	esp_158 = esp_167 + 0x00000004
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l100129CF:
	esi_148 = fn1001186D(ecx_64, ebx_41, es, ds, ebp, out edx_118)
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):0x00000104 -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l10012A8E:
	word32 ecx_85
	return fn1002F420(esi_148, Mem59[ebp_120 - 0x00000004:word32] ^ ebp_120, edx_118, Mem59[esp_158 + 0x00000004:word32], ebp_120, Mem59[esp_158:word32], edi_157, es, ds, out ecx_85)
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn10012961_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -580(fp):fp - 0x00000210 -576(fp):<invalid> -572(fp):<invalid> -568(fp):<invalid> -564(fp):<invalid> -560(fp):<invalid> -556(fp):esi -552(fp):ebx -548(fp):0x00000000 -544(fp):0x00000000 -532(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



void fn10012B9E(word32 ecx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn10012B9E_entry:
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012B9E:
	word32 esi_18 = ecx
	branch Mem0[ecx + 0x00000004:word32] == 0x00000000 l10012BB1
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10012BA9:
	fn10011DD3(ebx, es, ds, dwLoc0C, Mem0[ecx + 0x00000004:word32], out ebx, out esi_18)
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi
// LocalsOut: Local -0004(32)

l10012BB1:
	branch Mem0[esi_18:word32] == 0x00000000 l10012BBD
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -8(fp):<invalid> -4(fp):esi
// LocalsOut: Local -0004(32)

l10012BB6:
	Mem29[fp - 0x00000008:word32] = Mem0[esi_18:word32]
	word32 ebx_33
	word32 esi_34
	fn10011DD3(ebx, es, ds, esi, dwArg00, out ebx_33, out esi_34)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -8(fp):<invalid> -4(fp):esi

l10012BBD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -8(fp):<invalid> -4(fp):esi

fn10012B9E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn10012BBF(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg00, word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0000(32) Stack +0004(32)
fn10012BBF_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l10012BBF:
	word32 edi_101
	__align(fp - 0x00000004)
	Mem29[dwArg04:word32] = 0x00000000
	word32 eax_30 = GetProcessHeap()
	word32 eax_33 = HeapAlloc(eax_30, 0x00000008, 0x00000040)
	byte al_34 = (byte) eax_33
	branch eax_33 != 0x00000000 l10012C0A
// DataOut: al cs ds eax ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0030(32) Stack +0000(32)

l10012C0A:
	branch (al_34 & 0x03) != 0x00 l10012CE6
// DataOut: cs ds eax ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:ecx -48(fp):<invalid> -44(fp):0x00000008 -40(fp):0x00000040 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10012CE6:
	fn10011DCD()
	int3()
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:ecx -48(fp):<invalid> -44(fp):0x00000008 -40(fp):0x00000040 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// Terminates process

l10012CEB_thunk_fn10012CEC:
	word32 ecx_254
	return fn10012CEC(ecx, out ecx_254)
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: -48(fp):<invalid> -44(fp):0x00000008 -40(fp):0x00000040 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10012C1A:
	word32 esi_141
	word32 ebx_142
	word32 eax_138
	word32 ecx_125
	word32 edx_126
	word32 ebx_127
	word32 ebp_128
	word32 esi_129
	word32 eax_130 = fn10011E1F(fp - 0x0000000C, edx, fp - 0x00000004, es, ds, ecx, eax_33 >>u 0x00000002, 0x00000000, out ecx_125, out edx_126, out ebx_127, out ebp_128, out esi_129)
	edi_101 = eax_130
	branch eax_130 >= 0x00000000 l10012C4D
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:ecx -48(fp):<invalid> -44(fp):0x00000008 -40(fp):0x00000040 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012C4D:
	word32 eax_198 = Mem29[fp - 0x00000024:word32]
	Mem200[fp - 0x00000038:word32] = 0x00000030
	word32 esi_201 = Mem200[fp - 0x00000038:word32]
	Mem205[fp - 0x00000038:word32] = esi_201
	Mem206[eax_198:word32] = 0x00000001
	Mem209[eax_198 + 0x00000004:word32] = Mem206[ebx_127:word32]
	Mem211[ebx_127:word32] = Mem209[ebx_127:word32] & 0x00000000
	Mem215[eax_198 + 0x00000008:word32] = Mem211[fp - 0x0000001C:word32]
	Mem217[eax_198 + 0x0000000C:word32] = Mem215[fp - 0x00000018:word32]
	Mem220[fp - 0x0000003C:word32] = 0x00000000
	Mem222[fp - 0x00000040:word32] = eax_198 + 0x00000010
	Mem223[fp - 0x0000001C:word32] = 0x00000000
	Mem224[fp - 0x00000020:word32] = 0x00000000
	Mem225[fp - 0x00000018:word32] = 0x00000000
	memset(Mem225[fp - 0x00000040:(ptr void)], Mem225[fp - 0x0000003C:int32], Mem225[fp - 0x00000038:size_t])
	Mem228[eax_198 + 0x00000010:word16] = (word16) esi_201
	Mem229[eax_198 + 0x00000014:word32] = 0x00000001
	Mem238[fp - 0x00000038:word32] = 0x0000000A
	ebx_142 = 0x00000000
	word32 edi_232 = eax_198 + 0x00000018
	esi_141 = 0x00000000
	word32 ecx_239 = Mem238[fp - 0x00000038:word32]
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CA2:
	branch ecx_239 == 0x00000000 l10012CA4
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):0x0000000A -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CA4:
	word32 ecx_246 = Mem238[ebp_128 + 0x00000008:word32]
	*ecxOut = ecx_246
	Mem251[ecx_246:word32] = Mem238[fp - 0x00000024:word32]
	edi_101 = 0x00000000
	eax_138 = Mem251[fp - 0x00000020:word32]
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):0x0000000A -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CA2_1:
	Mem243[edi_232:word32] = 0x00000000
	edi_232 = edi_232 + 0x00000004
	ecx_239 = ecx_239 - 0x00000001
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):0x0000000A -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012C30:
	Mem183[fp - 0x00000038:word32] = eax_130
	Mem185[fp - 0x0000003C:word32] = ecx_125
	word32 edx_188
	word32 ebx_189
	word32 esi_190
	word32 ecx_191
	*ecxOut = fn10011D58(Mem185[ebp_128 + 0x00000004:word32], ebx_127, esi_129, eax_130, es, ds, ebp, dwArg04, out edx_188, out ebx_189, out esi_190)
	eax_138 = Mem185[fp - 0x00000018:word32]
	ebx_142 = Mem185[fp - 0x0000001C:word32]
	esi_141 = Mem185[fp - 0x00000024:word32]
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CB3:
	branch eax_138 == 0x00000000 l10012CBD
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CB7:
	Mem177[fp - 0x00000038:word32] = eax_138
	word32 edx_180
	*edxOut = fn10011DD3(ebx_142, es, ds, ebp, dwArg00, out ebx_142, out esi_141)
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CBD:
	branch ebx_142 == 0x00000000 l10012CC7
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012CC1:
	Mem171[fp - 0x00000038:word32] = ebx_142
	word32 ebx_172
	word32 edx_174
	*edxOut = fn10011DD3(ebx_142, es, ds, ebp, dwArg00, out ebx_172, out esi_141)
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10012CC7:
	branch esi_141 == 0x00000000 l10012CDB
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10012CCB:
	Mem162[fp - 0x00000038:word32] = esi_141
	Mem164[fp - 0x0000003C:word32] = 0x00000000
	Mem167[fp - 0x00000040:word32] = GetProcessHeap()
	HeapFree(Mem167[fp - 0x00000040:HANDLE], Mem167[fp - 0x0000003C:DWORD], Mem167[fp - 0x00000038:LPVOID])
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):ecx -44(fp):<invalid> -40(fp):0x00000000 -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10012BF1:
	word32 edx_91
	*edxOut = 0x0000013D
	word32 esi_100
	word32 ecx_102
	*ecxOut = fn10011CFB(dwArg00, 0x0000013D, fp - 0x00000004, es, ds, eax_30, 0x8007000E, out esi_100, out edi_101)
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:ecx -48(fp):<invalid> -44(fp):0x00000008 -40(fp):0x00000040 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -4(fp):ebp

l10012CDB:
	return edi_101
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn10012BBF_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -64(fp):edi + 0x00000020 -60(fp):<invalid> -56(fp):<invalid> -52(fp):ecx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn10012CEC(word32 ecx, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax ecx
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ebx edi esi esp
fn10012CEC_entry:
	*ecxOut = ecx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012CEC:
	word32 eax_12 = ecx + 0x00000028
	word32 edi_15 = ecx
	branch ecx == ecx + 0x00000028 l10012D3D
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l10012D03:
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:ecx + 0x00000028 -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10012D05:
	word32 ebx_60 = Mem0[edi_15:word32]
	branch ebx_60 == 0x00000000 l10012D2E
// DataOut: cs ds eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:ecx + 0x00000028 ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10012D0B:
	ebx_60 = Mem0[ebx_60 + 0x0000001C:word32]
	fn100121D5(ebx_60)
	HeapFree(GetProcessHeap(), 0x00000000, ebx_60)
	word32 ecx_85
	*ecxOut = ebx_60
	branch ebx_60 != 0x00000000 l10012D0B
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10012D2B:
	eax_12 = ecx + 0x00000028
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10012D2E:
	Mem74[edi_15:word32] = 0x00000000
	edi_15 = edi_15 + 0x00000004
	branch edi_15 != eax_12 l10012D05
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:ecx + 0x00000028 ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10012D3B:
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:ecx + 0x00000028 ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l10012D3D:
	return eax_12
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:ecx + 0x00000028 ebx:ebx esi:esi ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp

fn10012CEC_exit:
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:ecx + 0x00000028 ebx:ebx esi:esi ecx:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edi -8(fp):ecx + 0x00000028 -4(fp):ebp



word32 fn10012D42(word32 ecx, word32 ebx, word32 ebp, selector es, selector ds, word32 dwArg00, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx es fs gs ss
// LiveOut: ebp ebx ecx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32)
fn10012D42_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l10012D42:
	word32 edi_15 = Mem0[ecx:word32]
	word32 ebp_7
	*ebpOut = fp - 0x00000004
	word32 esi_16 = 0x00000000
	word32 eax_23 = WaitForSingleObjectEx(edi_15, 0xFFFFFFFF, 0x00000000)
	branch eax_23 == 0x00000102 l10012D6B
// DataOut: cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32) Stack +0000(32) Stack +0004(32)

l10012D63:
	branch eax_23 == 0x00000000 l10012D73
// DataOut: cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32) Stack +0000(32) Stack +0004(32)

l10012D67:
	branch eax_23 != 0x00000080 l10012D80
// DataOut: cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32) Stack +0000(32) Stack +0004(32)

l10012D80:
	word32 edx_82
	word32 ebx_83
	word32 esi_84
	word32 ecx_85 = fn10011DA7(dwArg00, ebx, 0x00000000, edi_15, es, ds, 0xFFFFFFFF, out edx_82, out ebx_83, out esi_84)
	int3()
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: Local -0004(32)

l10012D89_thunk_fn10012D8A:
	return fn10012D8A(ecx_85, edx_82, dwArg00, dwArg04)
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000080 -12(fp):edi -8(fp):esi -4(fp):ebp

l10012D6B:
	branch eax_23 == 0x00000000 l10012D73
// DataOut: cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32)

l10012D6F:
	branch eax_23 != 0x00000080 l10012D75
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32)

l10012D73:
	esi_16 = edi_15
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Stack +0004(32)

l10012D75:
	Mem53[dwArg04:word32] = esi_16
	word32 esi_54
	*esiOut = esi
	word32 ebp_56
	*ebpOut = ebp
	return 0x00000080
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:0x00000080 -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebp

fn10012D42_exit:
// DataOut: ebp ebx ecx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn10012D8A(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: ecx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10012D8A_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10012D8A:
	word32 eax_24 = dwArg04
	branch dwArg04 != 0x00000000 l10012DAB
// DataOut: cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10012DA5:
	eax_24 = fp - 0x00000008
// DataOut: cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ax -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10012DAB:
	word32 eax_37 = fn10011890(eax_24)
	word32 edi_38 = edx - ecx
	word32 esi_41 = eax_37 >>u 0x00000001
	branch eax_37 >>u 0x00000001 <u edi_38 >>u 0x00000001 l10012DC3
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32) Local -000C(0) Stack +0008(32)

l10012DC1:
	esi_41 = edi_38 >>u 0x00000001
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32) Local -000C(0) Stack +0008(32)

l10012DC3:
	memcpy_s(ecx, (edi_38 >>u 0x00000001) * 0x00000002, fp - 0x00000008, esi_41 * 0x00000002)
	branch dwArg08 == 0x00000000 l10012DEA
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32) Local -000C(0)

l10012DDF:
	Mem95[dwArg08:word32] = 0x00000000 - (0x00000001 <u esi_41) & ecx
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -40(fp):ecx -36(fp):(edx - ecx >>u 0x00000001) + (edx - ecx >>u 0x00000001) -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32) Local -000C(0)

l10012DEA:
	branch esi_41 >=u eax_37 >>u 0x00000001 l10012DFA
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -40(fp):ecx -36(fp):(edx - ecx >>u 0x00000001) + (edx - ecx >>u 0x00000001) -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32)

l10012DEF:
	branch esi_41 == 0x00000000 l10012DFA
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -40(fp):ecx -36(fp):(edx - ecx >>u 0x00000001) + (edx - ecx >>u 0x00000001) -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32)

l10012DF3:
	Mem86[ecx - 0x00000002 + esi_41 * 0x00000002:word16] = 0x0000
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -40(fp):ecx -36(fp):(edx - ecx >>u 0x00000001) + (edx - ecx >>u 0x00000001) -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008
// LocalsOut: fp(32)

l10012DFA:
	return dwArg08
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx - ecx >>u 0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -40(fp):ecx -36(fp):(edx - ecx >>u 0x00000001) + (edx - ecx >>u 0x00000001) -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008

fn10012D8A_exit:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:<invalid> esi:esi edx:<invalid> ax:<invalid> -40(fp):ecx -36(fp):(edx - ecx >>u 0x00000001) + (edx - ecx >>u 0x00000001) -32(fp):fp - 0x00000008 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ax -4(fp):ebp 4(fp):fp - 0x00000008



word32 fn10012E06(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10012E06_entry:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10012E06:
	word32 edx_23 = dwArg04
	branch dwArg04 != 0x00000000 l10012E22
// DataOut: ebx edi edx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10012E1F:
	edx_23 = fp - 0x00000005
// DataOut: ebx edi edx
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10012E22:
	word32 ecx_31 = edx_23
	word32 esi_32 = edx_23 + 0x00000001
// DataOut: ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10012E27:
	ecx_31 = ecx_95 + 0x00000001
	word32 ecx_95 = ecx_31
	branch Mem0[ecx_95:byte] != 0x00 l10012E27
// DataOut: ebx ecx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10012E2E:
	word32 ecx_40 = ecx_31 - esi_32
	word32 ebx_41 = edx - ecx
	word32 esi_44 = ecx_40 + 0x00000001
	branch ecx_40 + 0x00000001 <u ebx_41 l10012E40
// DataOut: ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Stack +0008(32)

l10012E3E:
	esi_44 = ebx_41
// DataOut: ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Stack +0008(32)

l10012E40:
	memcpy_s(ecx, ebx_41, edx_23, esi_44)
	branch dwArg08 == 0x00000000 l10012E5F
// DataOut: ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0)

l10012E54:
	Mem92[dwArg08:word32] = 0x00000000 - (0x00000001 <u esi_44) & ecx
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx - ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0)

l10012E5F:
	branch esi_44 >=u ecx_40 + 0x00000001 l10012E6D
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx - ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l10012E64:
	branch esi_44 == 0x00000000 l10012E6D
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx - ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l10012E68:
	Mem83[esi_44 - 0x00000001 + ecx:byte] = 0x00
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx - ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l10012E6D:
	return esi_44 + ecx
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 ebx:edx - ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx - ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn10012E06_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx edx:<invalid> ecx:<invalid> esi:esi al:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx - ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):ecx -5(fp):0x00 -4(fp):ebp



void fn10012FD3(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn10012FD3_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10012FD3:
	word32 edi_134
	Mem26[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 esi_32
	word32 edi_33
	word32 ebx_144
	word32 ebp_135
	word32 eax_34 = fn1002FF64(ebx, esi, ecx, out ebx_144, out ebp_135, out esi_32, out edi_33)
	word32 esp_133 = fp - 0x00000010
	branch eax_34 != 0x00000000 l10013005
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10013005:
	Mem73[eax_34 + 0x00000008:word32] = 0x00000001
	Mem74[eax_34:word32] = 0x100013F4
	branch Mem26[0x10031478:word32] == 0x00000000 l10013022
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):0x0000000C -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

l1001301B:
	__lock()
	Mem148[0x1003147C:word32] = Mem74[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):0x0000000C -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

l10013022:
	Mem75[eax_34:word32] = 0x1000141C
	Mem78[fp - 0x00000014:word32] = edi_33
	Mem80[fp - 0x00000018:word32] = 0x10003794
	Mem82[fp - 0x0000001C:word32] = eax_34
	word32 esp_85
	word32 edi_86
	word32 ebp_87
	word32 ecx_88
	word32 eax_89
	byte SZO_90
	byte C_91
	word32 esi_92
	byte Z_93
	byte SCZO_94
	word32 edx_95
	word32 ebx_96
	selector es_97
	selector ds_98
	call Mem82[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_42,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_22,dwLoc18_24,eax_76,ebp_31,ebx_30,ecx_84,edi_83,edx,es,esi_35,esp_81,SCZO_71,SZO_40,Z_72
		defs: C_91,ds_98,eax_89,ebp_87,ebx_96,ecx_88,edi_86,edx_95,es_97,esi_92,esp_85,SCZO_94,SZO_90,Z_93
	word32 esp_99
	word32 edi_100
	word32 ebp_101
	word32 ecx_102
	word32 eax_103
	byte SZO_104
	byte C_105
	word32 esi_106
	byte Z_107
	byte SCZO_108
	word32 edx_109
	word32 ebx_110
	selector es_111
	selector ds_112
	call edi_86 (retsize: 4; depth: 4)
		uses: C_91,ds_98,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_22,dwLoc18_24,eax_89,ebp_87,ebx_96,ecx_88,edi_86,edx_95,es_97,esi_92,esp_85,SCZO_94,SZO_90,Z_93
		defs: C_105,ds_112,eax_103,ebp_101,ebx_110,ecx_102,edi_100,edx_109,es_111,esi_106,esp_99,SCZO_108,SZO_104,Z_107
	Mem116[esp_99 - 0x00000004:word32] = esi_106
	word32 esp_119
	word32 edi_120
	word32 ebp_121
	word32 ecx_122
	word32 eax_123
	byte SZO_124
	byte C_125
	word32 esi_126
	byte Z_127
	byte SCZO_128
	word32 edx_129
	word32 ebx_130
	selector es_131
	selector ds_132
	call Mem116[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_105,ds_112,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_22,dwLoc18_24,eax_103,ebp_101,ebx_110,ecx_118,edi_114,edx_109,es_111,esi_117,esp_115,SCZO_108,SZO_104,Z_107
		defs: C_125,ds_132,eax_123,ebp_121,ebx_130,ecx_122,edi_120,edx_129,es_131,esi_126,esp_119,SCZO_128,SZO_124,Z_127
	word32 ecx_136
	word32 eax_137
	byte SZO_138
	byte C_139
	word32 esi_140
	byte Z_141
	byte SCZO_142
	call esi_126 (retsize: 4; depth: 4)
		uses: C_125,ds_132,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_19,dwLoc14_22,dwLoc18_24,eax_123,ebp_121,ebx_130,ecx_122,edi_120,edx_129,es_131,esi_126,esp_119,SCZO_128,SZO_124,Z_127
		defs: C_139,ds_146,eax_137,ebp_135,ebx_144,ecx_136,edi_134,edx_143,es_145,esi_140,esp_133,SCZO_142,SZO_138,Z_141
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):0x0000000C -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

l10012FFE:
	edi_134 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):0x0000000C -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

l1001304F:
	word32 ecx_61
	fn1002F420(edi_134, Mem26[ebp_135 - 0x00000004:word32] ^ ebp_135, edx, ebx_144, ebp_135, Mem26[esp_133 + 0x00000004:word32], Mem26[esp_133:word32], es, ds, out ecx_61)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn10012FD3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn10013061(word32 ecx, word32 edx, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32)
fn10013061_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10013061:
	word32 edi_10 = 0x00000000
	branch edx == 0x00000000 l10013098
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1001306D:
	word32 esi_67 = 0x7FFFFFFE
	word32 eax_68 = dwArg08 - ecx
// DataOut: cs ds eax ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x00000000 ebp:fp - 0x00000004 -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l10013079:
	branch esi_67 == 0x00000000 l10013092
// DataOut: cs ds eax ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l1001307D:
	word16 bx_93 = (word16) (word32) Mem0[eax_68 + ecx:word16]
	branch bx_93 == 0x0000 l10013092
// DataOut: bx cs ds eax ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l10013086:
	Mem97[ecx:word16] = bx_93
	ecx = ecx + 0x00000002
	esi_67 = esi_67 - 0x00000001
	edx = edx - 0x00000001
	*edxOut = edx
	branch edx != 0x00000000 l10013079
// DataOut: cs ds eax ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l10013092:
	branch edx != 0x00000000 l100130A0
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l10013098:
	ecx = ecx - 0x00000002
	edi_10 = 0x8007007A
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:esi ebx:ebx ecx:<invalid> edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp
// LocalsOut: fp(32)

l100130A0:
	Mem37[ecx:word16] = 0x0000
	return edi_10
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:esi ebx:ebx edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp

fn10013061_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ecx:<invalid> eax:<invalid> esi:esi ebx:ebx edx:<invalid> -16(fp):esi -12(fp):ebx -8(fp):edi -4(fp):ebp



word32 fn100130AC(word32 ecx, word32 edx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn100130AC_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100130AC:
	word32 esi_111 = 0x00000000
	branch edx == 0x00000000 l100130C6
// DataOut: bx cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100130BE:
	branch edx <=u 0x7FFFFFFF l100130CB
// DataOut: bx cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100130C6:
	esi_111 = 0x80070057
// DataOut: bx cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100130CB:
	word32 ecx_107
	branch esi_111 < 0x00000000 l10013102
// DataOut: bx cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10013102:
	ecx_107 = 0x00000000
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100130CF:
	word32 ecx_104 = edx
	word32 eax_103 = ecx
	branch edx == 0x00000000 l100130E4
// DataOut: bx cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100130D7:
	branch Mem0[eax_103:word16] == 0x0000 l100130E4
// DataOut: bx cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100130DC:
	eax_103 = eax_103 + 0x00000002
	ecx_104 = ecx_104 - 0x00000001
	branch ecx_104 != 0x00000000 l100130D7
// DataOut: bx cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100130E4:
	esi_111 = (0x00000000 - (-ecx_104 == 0x00000000) & 0x7FF8FFA9) + 0x80070057
	ecx_107 = 0x00000000 - (-ecx_104 == 0x00000000) & edx - ecx_104
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10013104:
	branch esi_111 < 0x00000000 l10013119
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10013108:
	word32 edx_72
	esi_111 = fn10013061(ecx + ecx_107 * 0x00000002, edx - ecx_107, dwArg04, out edx_72)
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10013119:
	return esi_111
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn100130AC_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn10013122(word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10013122_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10013122:
	word32 esi_11 = 0x00000000
	branch edx == 0x00000000 l10013136
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001312E:
	branch edx <=u 0x7FFFFFFF l1001313B
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10013136:
	esi_11 = 0x80070057
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:0x00000000 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1001313B:
	branch esi_11 < 0x00000000 l10013177
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10013177:
	branch edx == 0x00000000 l1001317E
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001313F:
	branch edx == 0x00000000 l1001316F
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10013145:
	word32 edi_88 = 0x7FFFFFFE - edx
	word32 ebx_89 = dwArg04 - ecx
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10013153:
	branch edi_88 + edx == 0x00000000 l10013169
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x7FFFFFFE - edx ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001315A:
	byte al_112 = Mem0[ebx_89 + ecx:byte]
	branch al_112 == 0x00 l10013169
// DataOut: al cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x7FFFFFFE - edx ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10013161:
	Mem117[ecx:byte] = al_112
	ecx = ecx + 0x00000001
	edx = edx - 0x00000001
	branch edx != 0x00000000 l10013153
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x7FFFFFFE - edx ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10013169:
	branch edx != 0x00000000 l1001317B
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x7FFFFFFE - edx ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001316F:
	ecx = ecx - 0x00000001
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ebx:ebx eax:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001317B:
	Mem55[ecx:byte] = 0x00
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> ebx:ebx eax:<invalid> al:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001317E:
	return edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> ebx:ebx eax:<invalid> al:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp

fn10013122_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ecx:<invalid> eax:<invalid> ebx:ebx al:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp



void fn100131B2(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn100131B2_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100131B2:
	Mem12[ecx:word32] = 0x10001564
	Mem13[ecx + 0x00000004:word32] = 0x10001540
	fn100150E0(ecx + 0x00000024, es, ds)
	Mem16[ecx + 0x0000001C:word32] = 0xC0000001
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100131D9_thunk_fn1000F23B:
	word32 edx_24
	word32 ebp_25
	fn1000F23B(ecx + 0x00000004, ebx, ebp, esi, edi, es, ds, out edx_24, out ebp_25)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ecx:<invalid> esi:esi eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn100131B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ecx:<invalid> esi:<invalid> ebp:<invalid> eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn10013201(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ebp ebx edi esi esp
fn10013201_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013201:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem30[ecx + 0x00000090:word32] = 0x00000040
	CoCreateGuid(fp - 0x00000018)
	Mem40[ecx + 0x00000084:word32] = 0x00000011
	Mem64[ecx + 0x00000088:word32] = 0x00000000
	Mem65[ecx + 0x0000008C:word32] = 0x00000013
	memset(ecx, 0x00000000, 0x00000081)
	word32 edx_72 = fn1001583A(fp - 0x00000028, (byte) ecx, ecx)
	*edxOut = edx_72
	Mem80[ecx + 0x00000010:word16] = 0x002E
	word32 ecx_88
	return fn1002F420(ecx, eax_11 ^ fp - 0x00000004, edx_72, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_88)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10013201_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx esi:esi ecx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> edx:<invalid> al:<invalid> -64(fp):ecx -60(fp):0x00000000 -56(fp):fp - 0x00000028 -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001328F(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax ecx
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001328F_entry:
	*ecxOut = ecx
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1001328F:
	word32 eax_35 = RegGetValueW(ecx, edx, dwArg04, 0x00000002, 0x00000000, dwArg08, fp - 0x00000008)
	word16 ax_36 = (word16) eax_35
	branch eax_35 == 0x00000000 l100132BD
// DataOut: ax cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100132B8:
	Mem65[dwArg08:word16] = 0x0000
	word32 ecx_61
	*ecxOut = 0x00000000
// DataOut: ax cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> -40(fp):ecx -36(fp):edx -32(fp):<invalid> -28(fp):0x00000002 -24(fp):0x00000000 -20(fp):<invalid> -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):0x00000208 -4(fp):ebp
// LocalsOut: fp(32)

l100132BD:
	branch eax_35 <= 0x00000000 l100132CA
// DataOut: ax cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:0x00000000 -40(fp):ecx -36(fp):edx -32(fp):<invalid> -28(fp):0x00000002 -24(fp):0x00000000 -20(fp):<invalid> -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):0x00000208 -4(fp):ebp
// LocalsOut: fp(32)

l100132C2:
	eax_35 = (word32) ax_36 | 0x80070000
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:esi eax:<invalid> ecx:0x00000000 -40(fp):ecx -36(fp):edx -32(fp):<invalid> -28(fp):0x00000002 -24(fp):0x00000000 -20(fp):<invalid> -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):0x00000208 -4(fp):ebp
// LocalsOut: fp(32)

l100132CA:
	return eax_35
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:esi eax:<invalid> ecx:0x00000000 -40(fp):ecx -36(fp):edx -32(fp):<invalid> -28(fp):0x00000002 -24(fp):0x00000000 -20(fp):<invalid> -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):0x00000208 -4(fp):ebp

fn1001328F_exit:
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ecx:0x00000000 -40(fp):ecx -36(fp):edx -32(fp):<invalid> -28(fp):0x00000002 -24(fp):0x00000000 -20(fp):<invalid> -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):0x00000208 -4(fp):ebp



word32 fn10013317(word32 edx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10013317_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013317:
	Mem31[edx:word32] = Mem0[edx:word32] & 0x00000000
	word32 ebx_34
	word32 ebp_35
	word32 esi_36
	word32 edi_126
	word32 eax_38 = fn1002FF64(ebx, esi, edx, out ebx_34, out ebp_35, out esi_36, out edi_126)
	word32 ebx_129 = eax_38
	branch eax_38 == 0x00000000 l10013359
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10013359:
	ebx_129 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -32(fp):0x0000000C -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l10013340:
	Mem121[eax_38:word32] = 0x00000000
	Mem123[eax_38 + 0x00000004:word32] = 0x00000000
	Mem125[eax_38 + 0x00000008:word32] = 0x00000000
	edi_126 = Mem125[ebp_35 - 0x00000004:word32]
	Mem127[eax_38 + 0x00000004:word32] = 0x00000001
	Mem128[eax_38:word32] = 0x10001538
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -32(fp):0x0000000C -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l1001335B:
	word32 esi_103 = (0x00000000 - (-ebx_129 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch ebx_129 == 0x00000000 l100133AC
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -32(fp):0x0000000C -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l10013371:
	word32 eax_76 = GetCurrentProcess()
	Mem78[fp - 0x0000001C:word32] = 0x00000002
	Mem80[fp - 0x00000020:word32] = 0x00000000
	Mem84[fp - 0x00000024:word32] = 0x00000000
	Mem86[fp - 0x00000028:word32] = ebx_129 + 0x00000008
	Mem88[fp - 0x0000002C:word32] = eax_76
	Mem91[fp - 0x00000030:word32] = Mem88[ebp_35 - 0x00000008:word32]
	Mem93[fp - 0x00000034:word32] = eax_76
	branch DuplicateHandle(Mem93[fp - 0x00000034:HANDLE], Mem93[fp - 0x00000030:HANDLE], Mem93[fp - 0x0000002C:HANDLE], Mem93[fp - 0x00000028:LPHANDLE], Mem93[fp - 0x00000024:DWORD], Mem93[fp - 0x00000020:BOOL], Mem93[fp - 0x0000001C:DWORD]) == 0x00000000 l10013396
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -32(fp):0x0000000C -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l10013396:
	word32 eax_108 = fn10015AC3()
	esi_103 = eax_108
	branch eax_108 < 0x00000000 l100133A5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):ecx -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l100133A5:
	esi_103 = fn1000CEF1(ebx_129, edx, ebx_129, eax_108, es, ds)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):ecx -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l10013392:
	esi_103 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):ecx -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l100133A1:
	Mem104[edi_126:word32] = ebx_129
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):ecx -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

l100133AC:
	return esi_103
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):ecx -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp

fn10013317_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):ecx -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):edx -4(fp):ebp



word32 fn100133FA(word32 ecx, word32 edx, word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, byte bArg10, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut: eax ebx edi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(8)
fn100133FA_entry:
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(8)

l100133FA:
	Mem30[ecx + 0x0000001C:word32] = dwArg04
	word32 ebp_130 = fp - 0x00000004
	word32 ebx_135 = ecx
	word32 esp_128 = fp - 0x00000018
	word32 edi_152 = dwArg08
	branch Mem30[ecx + 0x00000020:word32] == dwArg08 l10013443
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(8)

l1001341E:
	branch dwArg08 == 0x00000000 l10013432
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(8)

l10013422:
	word32 esp_172
	word32 edi_173
	word32 ebp_174
	word32 ecx_175
	word32 eax_176
	byte SZO_177
	byte C_178
	word32 ebx_179
	word32 esi_180
	byte SCZO_181
	byte Z_182
	byte al_183
	word32 edx_184
	selector es_185
	selector ds_186
	call Mem30[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: al,C_145,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_25,dwLoc18_27,dwLoc1C_169,eax_167,ebp_7,ebx_22,ecx_171,edi_29,edx,es,esi_170,esp_168,SCZO_31,SZO_143,Z_144
		defs: al_183,C_178,ds_186,eax_176,ebp_174,ebx_179,ecx_175,edi_173,edx_184,es_185,esi_180,esp_172,SCZO_181,SZO_177,Z_182
	word32 ecx_190
	word32 eax_191
	byte SZO_192
	byte C_193
	byte SCZO_196
	byte Z_197
	byte al_198
	word32 edx_199
	call esi_180 (retsize: 4; depth: 4)
		uses: al_183,C_178,ds_186,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_25,dwLoc18_27,dwLoc1C_169,eax_176,ebp_174,ebx_179,ecx_175,edi_173,edx_184,es_185,esi_180,esp_172,SCZO_181,SZO_177,Z_182
		defs: al_198,C_193,ds_201,eax_191,ebp_189,ebx_194,ecx_190,edi_188,edx_199,es_200,esi_195,esp_187,SCZO_196,SZO_192,Z_197
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(8)

l10013432:
	Mem163[ebx_135 + 0x00000020:word32] = edi_152
	word32 esi_165
	fn1000C640(fp - 0x0000000C, ebx_135, esi, edi_152, es, ds, out edx, out esi_165)
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Stack +000C(32) Stack +0010(8)

l10013443:
	word32 edi_49 = ebx_135 + 0x00000024
	Mem53[edi_49:word32] = Mem30[dwArg0C:word32]
	Mem57[edi_49 + 0x00000004:word32] = Mem53[dwArg0C + 0x00000004:word32]
	Mem61[edi_49 + 0x00000008:word32] = Mem57[dwArg0C + 0x00000008:word32]
	Mem65[edi_49 + 0x0000000C:word32] = Mem61[dwArg0C + 0x0000000C:word32]
	Mem68[ebx_135 + 0x00000035:byte] = bArg10
	word32 esi_136 = dwArg0C + 0x00000010
	word32 edi_129 = edi_49 + 0x00000010
	word32 ecx_69 = Mem68[ebx_135 + 0x00000038:word32]
	branch ecx_69 == 0x00000000 l1001346E
// DataOut: cs ds ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001345A:
	Mem105[ebx_135 + 0x00000038:word32] = Mem68[ebx_135 + 0x00000038:word32] & 0x00000000
	word32 esp_109 = esp_128 - 0x00000004
	Mem110[esp_109:word32] = ecx_69
	word32 esp_113
	word32 edi_114
	word32 ebp_115
	word32 ecx_116
	word32 eax_117
	byte SZO_118
	byte C_119
	word32 ebx_120
	word32 esi_121
	byte SCZO_122
	byte Z_123
	byte al_124
	word32 edx_125
	selector es_126
	selector ds_127
	call Mem110[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_51,C_107,ds_39,dwLoc04_6,dwLoc08_16,dwLoc0C_38,dwLoc10_21,dwLoc14_25,dwLoc18_27,dwLoc1C_37,eax_108,ebp_45,ebx_43,ecx_112,edi_67,edx_42,es_40,esi_111,esp_109,SCZO_41,SZO_106,Z_71
		defs: al_124,C_119,ds_127,eax_117,ebp_115,ebx_120,ecx_116,edi_114,edx_125,es_126,esi_121,esp_113,SCZO_122,SZO_118,Z_123
	word32 ecx_131
	word32 eax_132
	byte SZO_133
	byte C_134
	byte SCZO_137
	byte Z_138
	byte al_139
	call esi_121 (retsize: 4; depth: 4)
		uses: al_124,C_119,ds_127,dwLoc04_6,dwLoc08_16,dwLoc0C_38,dwLoc10_21,dwLoc14_25,dwLoc18_27,dwLoc1C_37,eax_117,ebp_115,ebx_120,ecx_116,edi_114,edx_125,es_126,esi_121,esp_113,SCZO_122,SZO_118,Z_123
		defs: al_139,C_134,ds_142,eax_132,ebp_130,ebx_135,ecx_131,edi_129,edx_140,es_141,esi_136,esp_128,SCZO_137,SZO_133,Z_138
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000034 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001346E:
	word32 edx_84
	word32 eax_85 = fn100158CD(ebx_135 + 0x00000038, edx, esi_136, edi_129, es, ds, out edx_84)
	word32 esp_88 = esp_128 + 0x00000004
	word32 edi_87 = Mem68[esp_128:word32]
	*ediOut = edi_87
	word32 ebx_94 = Mem68[esp_88 + 0x00000004:word32]
	*ebxOut = ebx_94
	word32 ecx_96
	return fn1002F420(eax_85, Mem68[ebp_130 - 0x00000004:word32] ^ ebp_130, edx_84, ebx_94, ebp_130, Mem68[esp_88:word32], edi_87, es, ds, out ecx_96)
// DataOut: cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000034 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100133FA_exit:
// DataOut: eax ebx edi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10013489(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: edi esi esp
fn10013489_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013489:
	word32 esi_9 = Mem0[ecx + 0x00000038:word32]
	AcquireSRWLockExclusive(esi_9 + 0x00000020)
	fn100150E0(esi_9 + 0x00000024, es, ds)
	branch esi_9 == 0x00000020 l100134AD
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100134A6:
	ReleaseSRWLockExclusive(esi_9 + 0x00000020)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l100134AD:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi

fn10013489_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi



void fn100134B0(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn100134B0_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100134B0:
	word32 dwLoc08_10 = ecx
	word32 ebx_101 = ecx
	branch fn10022359(Mem0[ecx + 0x00000038:word32]) == 0x00000000 l1001350A
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100134C9:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100134D0:
	word32 v12_62 = dwLoc08_10 & 0x00000000
	word32 esi_70
	word32 edi_100
	word32 eax_72 = fn1000EF25(fp - 0x0000000C, edx, ebx_101, Mem0[ebx_101 + 0x00000038:word32], es, ds, out esi_70, out edi_100)
	dwLoc08_10 = v12_62
	branch fn100222FE(esi_70, edx, es, ds, edi_100, eax_72) < 0x00000000 l100134F4
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100134EC:
	ebx_101 = fn1001FB08(v12_62, es, ds, out esi_70, out edi_100)
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100134F4:
	word32 esi_88
	fn1000C640(fp - 0x00000008, ebx_101, esi_70, edi_100, es, ds, out edx, out esi_88)
	branch edi_100 + 0x00000001 <u fn10022359(Mem0[ebx_101 + 0x00000038:word32]) l100134D0
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10013509:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001350A:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> eax:<invalid> esi:esi edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100134B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx ecx:<invalid> eax:<invalid> esi:esi edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10013510(word32 ecx, word32 edx, selector es, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(8)
fn10013510_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(8)

l10013510:
	word32 dwLoc08_10 = ecx
	branch fn10022359(Mem0[ecx + 0x00000038:word32]) == 0x00000000 l10013574
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l10013529:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l10013530:
	word32 v12_66 = dwLoc08_10 & 0x00000000
	word32 esi_74
	word32 edi_75
	word32 eax_76 = fn1000EF25(fp - 0x0000000C, edx, ecx, Mem0[ecx + 0x00000038:word32], es, ds, out esi_74, out edi_75)
	dwLoc08_10 = v12_66
	branch fn100222FE(esi_74, edx, es, ds, edi_75, eax_76) < 0x00000000 l1001355E
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001354C:
	Mem104[v12_66 + 0x00000078:byte] = bArg04
	branch bArg04 != 0x00 l1001355E
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l10013559:
	fn1001FBFA(v12_66)
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001355E:
	word32 esi_91
	fn1000C640(fp - 0x00000008, ecx, esi_74, edi_75, es, ds, out edx, out esi_91)
	branch edi_75 + 0x00000001 <u fn10022359(Mem0[ecx + 0x00000038:word32]) l10013530
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l10013573:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):fp - 0x00000008 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10013574:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:esi al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10013510_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx ecx:<invalid> eax:<invalid> esi:esi al:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001357C(word32 ecx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es esi fs gs ss
// LiveOut: dx eax ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001357C_entry:
	*esiOut = esi
// DataOut: cs ds ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001357C:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem24[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 ebp_44 = fp - 0x00000004
	word32 ebx_19 = dwArg04
	word32 esp_100 = fp - 0x00000010
	word32 edi_22 = ecx
	word32 edx_26 = Mem24[ecx + 0x00000020:word32]
	*edxOut = edx_26
	branch edx_26 == 0x00000000 l100135AF
// DataOut: cs ds dx ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001359D:
	word32 esp_73
	word32 edi_74
	word32 ebp_75
	word32 ecx_76
	word32 eax_77
	byte SZO_78
	byte C_79
	word32 ebx_80
	word32 edx_81
	byte Z_82
	word32 esi_83
	selector es_84
	selector ds_85
	call Mem24[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_29,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_21,dwLoc14_68,dwLoc18_70,eax_66,ebp_7,ebx_19,ecx_72,edi_22,edx_26,es,esi_71,esp_69,SZO_27,Z_28
		defs: C_79,ds_85,eax_77,ebp_75,ebx_80,ecx_76,edi_74,edx_81,es_84,esi_83,esp_73,SZO_78,Z_82
	word32 esp_86
	word32 ecx_89
	word32 eax_90
	byte SZO_91
	byte C_92
	byte Z_95
	word32 esi_96
	call esi_83 (retsize: 4; depth: 4)
		uses: C_79,ds_85,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_21,dwLoc14_68,dwLoc18_70,eax_77,ebp_75,ebx_80,ecx_76,edi_74,edx_81,es_84,esi_83,esp_73,SZO_78,Z_82
		defs: C_92,ds_98,eax_90,ebp_88,ebx_93,ecx_89,edi_87,edx_94,es_97,esi_96,esp_86,SZO_91,Z_95
	*esiOut = Mem24[esp_86:word32]
	esp_100 = esp_86 + 0x00000004
// DataOut: cs ds dx ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100135AF:
	Mem48[ebx_19:word32] = Mem24[edi_22 + 0x00000020:word32]
	word32 edi_50 = Mem48[esp_100:word32]
	*ediOut = edi_50
	word32 ebx_55 = Mem48[esp_100 + 0x00000004:word32]
	*ebxOut = ebx_55
	word32 ecx_57
	return fn1002F420(0x00000000, eax_13 ^ fp - 0x00000004, edx_26, ebx_55, ebp_44, esi, edi_50, es, ds, out ecx_57)
// DataOut: cs ds dx eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1001357C_exit:
// DataOut: dx eax ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):edi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn100135C8(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100135C8_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100135C8:
	Mem18[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
	return fn100222FE(Mem18[ecx + 0x00000038:word32], edx, es, ds, dwArg04, dwArg08)
// DataOut: cs ds eax ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn100135C8_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn100135E3(word32 ecx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi rax rcx rdx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn100135E3_entry:
// DataOut: cs ds ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100135E3:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem25[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_34
	word32 edi_35
	word32 ebp_36
	word32 ecx_37
	word32 eax_38
	byte SZO_39
	byte C_40
	word32 esi_41
	word32 edx_42
	word32 ebx_43
	selector es_44
	selector ds_45
	call Mem25[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_27,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_21,dwLoc14_23,dwLoc18_30,eax_16,ebp_7,ecx_33,edi_3,edx_31,esi_32,esp_29,SZO_26
		defs: C_40,ds_45,eax_38,ebp_36,ebx_43,ecx_37,edi_35,edx_42,es_44,esi_41,esp_34,SZO_39
	word32 esp_46
	word32 edi_47
	word32 ebp_48
	word32 ecx_49
	word32 eax_50
	byte SZO_51
	byte C_52
	word32 esi_53
	word32 edx_54
	word32 ebx_55
	selector es_56
	selector ds_57
	call esi_41 (retsize: 4; depth: 4)
		uses: C_40,ds_45,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_21,dwLoc14_23,dwLoc18_30,eax_38,ebp_36,ebx_43,ecx_37,edi_35,edx_42,es_44,esi_41,esp_34,SZO_39
		defs: C_52,ds_57,eax_50,ebp_48,ebx_55,ecx_49,edi_47,edx_54,es_56,esi_53,esp_46,SZO_51
	word32 ecx_64
	fn1002F420(eax_50, eax_13 ^ fp - 0x00000004, edx_54, ebx_55, ebp_48, Mem25[esp_46:word32], edi_47, es_56, ds_57, out ecx_64)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn100135E3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -24(fp):<invalid> -20(fp):0x10003F60 -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn10013658(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn10013658_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013658:
	fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x100014D8
	Mem22[ecx + 0x00000004:word32] = 0x100014B4
	branch Mem0[0x10031478:word32] == 0x00000000 l1001368B
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013684:
	__lock()
	Mem77[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1001368B:
	Mem25[ecx:word32] = 0x100014F4
	Mem26[ecx + 0x00000004:word32] = 0x100014B4
	Mem31[ecx + 0x00000024:word16] = 0x0000
	Mem34[ecx + 0x00000020:word32] = 0x00000000
	Mem35[ecx + 0x00000028:word32] = 0x00000000
	Mem36[ecx + 0x0000002C:byte] = 0x00
	Mem37[ecx + 0x00000030:word32] = 0x00000000
	Mem38[ecx + 0x00000034:word32] = 0x00000000
	Mem39[ecx + 0x00000038:word32] = 0x00000000
	Mem40[ecx + 0x0000003C:word32] = 0x00000000
	Mem41[ecx + 0x00000040:word32] = 0x00000000
	Mem42[ecx + 0x00000044:word32] = 0x00000000
	Mem43[ecx + 0x00000048:word32] = 0x00000000
	Mem44[ecx + 0x0000004C:word32] = 0x00000000
	Mem45[ecx + 0x00000050:word32] = 0x00000000
	Mem46[ecx + 0x00000054:word32] = 0x00000000
	Mem47[ecx + 0x00000058:word32] = 0x00000000
	Mem48[ecx + 0x0000005C:word32] = 0x00000000
	Mem49[ecx + 0x00000060:word32] = 0x00000000
	Mem50[ecx + 0x00000064:word32] = 0x00000000
	Mem51[ecx + 0x00000068:word32] = 0x00000000
	Mem52[ecx + 0x0000006C:word32] = 0x00000000
	Mem53[ecx + 0x00000070:word32] = 0x00000000
	Mem54[ecx + 0x00000074:word32] = 0x00000000
	Mem55[ecx + 0x00000078:word32] = 0x00000000
	Mem56[ecx + 0x0000007C:word32] = 0x00000000
	Mem57[ecx + 0x00000080:word32] = 0x00000000
	Mem58[ecx + 0x00000084:word32] = 0x00000000
	Mem59[ecx + 0x00000088:word32] = 0x00000000
	Mem60[ecx + 0x0000008C:word32] = 0x00000000
	Mem61[ecx + 0x00000090:word32] = 0x00000000
	Mem62[ecx + 0x00000094:word32] = 0x00000000
	Mem63[ecx + 0x00000098:word32] = 0x00000000
	Mem64[ecx + 0x0000009C:word32] = 0x00000000
	Mem65[ecx + 0x000000A0:word32] = 0x00000000
	Mem66[ecx + 0x000000A4:word32] = 0x00000000
	Mem67[ecx + 0x000000A8:word32] = 0x00000000
	Mem68[ecx + 0x000000AC:word32] = 0x00000000
	Mem71[ecx + 0x000000B0:word32] = 0x00000000
	return ecx
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn10013658_exit:
// DataOut: eax ebx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



void fn10013761(word32 ecx, word32 ebx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: edi esi esp
fn10013761_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013761:
	word32 eax_13 = Mem0[ecx + 0x0000006C:word32]
	Mem14[ecx + 0x0000006C:word32] = 0x00000000
	branch eax_13 == 0x00000000 l1001377A
// DataOut: cs ds eax ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013773:
	fn1002EEC6(eax_13)
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x00000000 esi:ecx eax:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1001377A:
	word32 ecx_25
	word32 edx_26
	word32 esi_27
	fn1000F276(ecx + 0x00000068, ebx, ecx, 0x00000000, es, ds, out ecx_25, out edx_26, out esi_27)
	branch Mem14[esi_27 + 0x0000004C:word32] == 0x00000000 l10013793
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x00000000 esi:ecx eax:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l10013787:
	CoTaskMemFree(Mem14[esi_27 + 0x0000004C:word32])
	Mem49[esi_27 + 0x0000004C:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x00000000 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l10013793:
	Mem33[esi_27 + 0x00000050:word32] = 0x00000000
	Mem34[esi_27 + 0x00000058:word32] = 0x00000000
	word32 ecx_35
	word32 edx_36
	word32 esi_37
	fn1000F276(esi_27 + 0x00000020, ebx, esi_27, 0x00000000, es, ds, out ecx_35, out edx_36, out esi_37)
	fn1000F2B0(esi_37 + 0x00000010)
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:0x00000000 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi

l100137AD_thunk_fn100150E0:
	fn100150E0(esi_37, es, ds)
	return
// DataOut: cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi

fn10013761_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi



void fn100137B2(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn100137B2_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100137B2:
	__align(fp - 0x00000004)
	Mem26[ecx:word32] = 0x100014F4
	Mem27[ecx + 0x00000004:word32] = 0x100014B4
	word32 edi_119 = ecx
	branch Mem0[ecx + 0x0000005C:word32] == 0x00000000 l100137EF
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100137E2:
	CloseHandle(Mem27[ecx + 0x0000005C:word32])
	Mem161[ecx + 0x0000005C:word32] = Mem27[ecx + 0x0000005C:word32] & 0x00000000
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:ecx + 0x00000004 -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100137EF:
	branch Mem27[ecx + 0x00000030:word32] == 0x00000000 l10013802
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:ecx + 0x00000004 -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100137F5:
	CloseHandle(Mem27[ecx + 0x00000030:word32])
	Mem152[ecx + 0x00000030:word32] = Mem27[ecx + 0x00000030:word32] & 0x00000000
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:ecx + 0x00000004 -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10013802:
	word32 ebx_41 = Mem27[ecx + 0x00000034:word32]
	branch ebx_41 == 0x00000000 l1001382D
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:ecx + 0x00000004 -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10013809:
	EnterCriticalSection(ebx_41 + 0x0000000C)
	Mem136[ebx_41 + 0x00000038:byte] = 0x01
	LeaveCriticalSection(ebx_41 + 0x0000000C)
	fn1000CEF1(Mem136[ecx + 0x00000034:word32], edx, ebx_41, ebx_41 + 0x0000000C, es, ds)
	Mem142[ecx + 0x00000034:word32] = Mem136[ecx + 0x00000034:word32] & 0x00000000
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:ecx + 0x00000004 ebx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001382D:
	word32 esi_118 = ecx + 0x00000004
	word32 eax_49 = Mem27[ecx + 0x000000A8:word32]
	branch eax_49 == 0x00000000 l10013845
// DataOut: cs ds eax ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10013837:
	CloseHandle(eax_49)
	Mem127[ecx + 0x000000A8:word32] = Mem27[ecx + 0x000000A8:word32] & 0x00000000
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10013845:
	branch Mem27[0x10031000:word32] <=u 0x00000004 l10013884
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001384E:
	fn1000C51D(fp - 0x0000002C, 0x10003428)
	fn1000C51D(fp - 0x0000001C, 0x10003D54)
	word32 ecx_116
	word32 edx_117
	fn1000C491(0x10031000, 0x10008376, 0x00000000, 0x00000000, 0x00000004, fp - 0x0000004C, out ecx_116, out edx_117, out esi_118, out edi_119)
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10013884:
	word32 edx_72
	word32 esi_73
	fn1000C640(edi_119 + 0x000000B0, ebx_41, esi_118, edi_119, es, ds, out edx_72, out esi_73)
	word32 edx_76
	word32 esi_77
	fn1000C640(edi_119 + 0x000000AC, ebx_41, esi_73, edi_119, es, ds, out edx_76, out esi_77)
	fn10013761(edi_119 + 0x00000038, ebx_41, es, ds)
	Mem82[edi_119 + 0x0000001C:word32] = 0xC0000001
	word32 edx_83
	word32 ebp_84
	word32 eax_85 = fn1000F23B(esi_77, ebx_41, fp - 0x00000004, esi_77, edi_119, es, ds, out edx_83, out ebp_84)
	word32 ecx_96
	fn1002F420(eax_85, Mem82[fp - 0x0000000C:word32] ^ fp - 0x00000054, edx_83, Mem82[fp - 0x00000058:word32], ebp_84, Mem82[fp - 0x0000005C:word32], Mem82[fp - 0x00000060:word32], es, ds, out ecx_96)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000004 -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100137B2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000004 -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn100138C2(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, word16 wArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(16) Stack +000C(32) Stack +0010(32)
fn100138C2_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(16) Stack +000C(32) Stack +0010(32)

l100138C2:
	Mem27[ecx + 0x00000020:word32] = dwArg04
	Mem30[ecx + 0x00000024:word16] = wArg08
	word32 ebp_275 = fp - 0x00000004
	word32 ebx_19 = dwArg0C
	word32 esp_23 = fp - 0x00000074
	word32 edi_26 = ecx
	branch Mem30[ecx + 0x000000AC:word32] == dwArg0C l10013926
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0010(32)

l100138F2:
	branch dwArg0C == 0x00000000 l10013906
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000074 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0010(32)

l100138F6:
	word32 esp_395
	word32 edi_396
	word32 ebp_397
	byte SCZO_398
	word32 eax_399
	byte SZO_400
	byte C_401
	word32 ebx_402
	word32 esi_403
	word32 ecx_404
	word16 ax_405
	byte Z_406
	byte al_407
	word32 edx_408
	byte S_409
	byte CZ_410
	selector es_411
	selector ds_412
	call Mem30[0x100323BC:word32] (retsize: 4; depth: 124)
		uses: al,ax_29,C_328,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc60,dwLoc64,dwLoc6C_17,dwLoc70_22,dwLoc74_24,dwLoc78_392,eax_390,ebp_7,ebx_19,ecx_394,edi_26,edx,es,esi_393,esp_391,S,SCZO_31,SZO_326,Z_327
		defs: al_407,ax_405,C_401,CZ_410,ds_412,eax_399,ebp_397,ebx_402,ecx_404,edi_396,edx_408,es_411,esi_403,esp_395,S_409,SCZO_398,SZO_400,Z_406
	byte SCZO_416
	word32 eax_417
	byte SZO_418
	byte C_419
	word32 ecx_422
	word16 ax_423
	byte Z_424
	byte al_425
	byte S_427
	byte CZ_428
	call esi_403 (retsize: 4; depth: 4)
		uses: al_407,ax_405,C_401,CZ_410,ds_412,dwLoc04_6,dwLoc08_12,dwLoc60,dwLoc64,dwLoc6C_17,dwLoc70_22,dwLoc74_24,dwLoc78_392,eax_399,ebp_397,ebx_402,ecx_404,edi_396,edx_408,es_411,esi_403,esp_395,S_409,SCZO_398,SZO_400,Z_406
		defs: al_425,ax_423,C_419,CZ_428,ds_430,eax_417,ebp_415,ebx_420,ecx_422,edi_414,edx_426,es_429,esi_421,esp_413,S_427,SCZO_416,SZO_418,Z_424
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000074 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0010(32)

l10013906:
	word32 eax_342 = Mem30[edi_26 + 0x000000AC:word32]
	Mem345[edi_26 + 0x000000AC:word32] = ebx_19
	branch eax_342 == 0x00000000 l10013926
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0010(32)

l10013916:
	word32 esp_350 = esp_23 - 0x00000004
	Mem351[esp_350:word32] = eax_342
	word32 esp_354
	word32 edi_355
	word32 ebp_356
	byte SCZO_357
	word32 eax_358
	byte SZO_359
	byte C_360
	word32 ebx_361
	word32 esi_362
	word32 ecx_363
	word16 ax_364
	byte Z_365
	byte al_366
	word32 edx_367
	byte S_368
	byte CZ_369
	selector es_370
	selector ds_371
	call Mem351[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_344,ax_343,C_348,CZ_334,ds_330,dwLoc04_6,dwLoc08_12,dwLoc60,dwLoc64,dwLoc6C_17,dwLoc70_22,dwLoc74_24,dwLoc78_329,eax_342,ebp_340,ebx_338,ecx_353,edi_336,edx_335,es_331,esi_352,esp_350,S_332,SCZO_333,SZO_346,Z_347
		defs: al_366,ax_364,C_360,CZ_369,ds_371,eax_358,ebp_356,ebx_361,ecx_363,edi_355,edx_367,es_370,esi_362,esp_354,S_368,SCZO_357,SZO_359,Z_365
	byte SCZO_375
	word32 eax_376
	byte SZO_377
	byte C_378
	word32 ebx_379
	word32 ecx_381
	word16 ax_382
	byte Z_383
	byte al_384
	byte S_386
	byte CZ_387
	call esi_362 (retsize: 4; depth: 4)
		uses: al_366,ax_364,C_360,CZ_369,ds_371,dwLoc04_6,dwLoc08_12,dwLoc60,dwLoc64,dwLoc6C_17,dwLoc70_22,dwLoc74_24,dwLoc78_329,eax_358,ebp_356,ebx_361,ecx_363,edi_355,edx_367,es_370,esi_362,esp_354,S_368,SCZO_357,SZO_359,Z_365
		defs: al_384,ax_382,C_378,CZ_387,ds_389,eax_376,ebp_374,ebx_379,ecx_381,edi_373,edx_385,es_388,esi_380,esp_372,S_386,SCZO_375,SZO_377,Z_383
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0010(32)

l10013926:
	word32 ebx_274 = dwArg10
	branch Mem30[edi_26 + 0x000000B0:word32] == dwArg10 l1001395C
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013931:
	branch dwArg10 == 0x00000000 l10013945
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013935:
	word32 esp_285 = esp_23 - 0x00000004
	Mem286[esp_285:word32] = dwArg10
	word32 esp_290
	word32 edi_291
	word32 ebp_292
	byte SCZO_293
	word32 eax_294
	byte SZO_295
	byte C_296
	word32 ebx_297
	word32 esi_298
	word32 ecx_299
	word16 ax_300
	byte Z_301
	byte al_302
	word32 edx_303
	byte S_304
	byte CZ_305
	selector es_306
	selector ds_307
	call Mem286[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_49,ax_48,C_261,CZ_46,ds_43,dwLoc04_6,dwLoc08_12,dwLoc60,dwLoc64,dwLoc6C_17,dwLoc70_22,dwLoc74_24,dwLoc78_42,eax_284,ebp_56,ebx_59,ecx_288,edi_50,edx_47,es_44,esi_287,esp_285,S_45,SCZO_60,SZO_259,Z_260
		defs: al_302,ax_300,C_296,CZ_305,ds_307,eax_294,ebp_292,ebx_297,ecx_299,edi_291,edx_303,es_306,esi_298,esp_290,S_304,SCZO_293,SZO_295,Z_301
	byte SCZO_311
	word32 eax_312
	byte SZO_313
	byte C_314
	word32 ecx_317
	word16 ax_318
	byte Z_319
	byte al_320
	word32 edx_321
	byte S_322
	byte CZ_323
	call esi_298 (retsize: 4; depth: 4)
		uses: al_302,ax_300,C_296,CZ_305,ds_307,dwLoc04_6,dwLoc08_12,dwLoc60,dwLoc64,dwLoc6C_17,dwLoc70_22,dwLoc74_24,dwLoc78_42,eax_294,ebp_292,ebx_297,ecx_299,edi_291,edx_303,es_306,esi_298,esp_290,S_304,SCZO_293,SZO_295,Z_301
		defs: al_320,ax_318,C_314,CZ_323,ds_325,eax_312,ebp_310,ebx_315,ecx_317,edi_309,edx_321,es_324,esi_316,esp_308,S_322,SCZO_311,SZO_313,Z_319
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013945:
	Mem280[edi_26 + 0x000000B0:word32] = ebx_274
	fn1000C640(fp - 0x00000064, ebx_274, esi, edi_26, es, ds, out edx, out esi)
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001395C:
	branch fn1002FE08() == 0x00 l10013975
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013965:
	word32 esp_254 = esp_23 - 0x00000004
	Mem255[esp_254:word32] = GetCurrentThreadId()
	Mem258[edi_26 + 0x00000028:word32] = GetThreadDesktop(Mem255[esp_254:DWORD])
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013975:
	word32 eax_107
	word32 esp_84 = esp_23 - 0x00000004
	Mem85[esp_84:word32] = 0x00000000
	Mem87[esp_84 - 0x00000004:word32] = 0x00000000
	Mem89[esp_84 - 0x00000008:word32] = 0x00000000
	Mem91[esp_84 - 0x0000000C:word32] = 0x00000000
	word32 eax_92 = CreateEventW(Mem91[esp_84 - 0x0000000C:LPSECURITY_ATTRIBUTES], Mem91[esp_84 - 0x00000008:BOOL], Mem91[esp_84 - 0x00000004:BOOL], Mem91[esp_84:LPCWSTR])
	Mem94[edi_26 + 0x00000030:word32] = eax_92
	branch eax_92 == 0x00000000 l1001398D
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001398D:
	eax_107 = GetLastError()
	word16 ax_236 = (word16) eax_107
	branch eax_107 <= 0x00000000 l1001399F
// DataOut: ax cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013997:
	eax_107 = (word32) ax_236 | 0x80070000
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001399F:
	branch eax_107 < 0x00000000 l10013A15
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10013988:
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l100139A6:
	eax_107 = fn10013317(fp - 0x00000064, 0x00000000, esi, es, ds)
	Mem172[ebp_275 - 0x0000005C:word32] = eax_107
	edx = fp - 0x00000064
	branch eax_107 < 0x00000000 l10013A15
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100139B8:
	word32 eax_179 = fn10015489(edi_26 + 0x00000034, ebp_275, es, ds, out edx)
	Mem180[ebp_275 - 0x0000005C:word32] = eax_179
	branch eax_179 < 0x00000000 l10013A0A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:fp - 0x00000064 esi:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100139CA:
	Mem196[esp_84:word32] = 0x00000000
	Mem198[esp_84 - 0x00000004:word32] = 0x00000000
	Mem200[esp_84 - 0x00000008:word32] = edi_26
	Mem202[esp_84 - 0x0000000C:word32] = 0x10014560
	Mem204[esp_84 - 0x00000010:word32] = 0x00000000
	Mem206[esp_84 - 0x00000014:word32] = 0x00000000
	word32 eax_207 = CreateThread(Mem206[esp_84 - 0x00000014:LPSECURITY_ATTRIBUTES], Mem206[esp_84 - 0x00000010:SIZE_T], Mem206[esp_84 - 0x0000000C:LPTHREAD_START_ROUTINE], Mem206[esp_84 - 0x00000008:LPVOID], Mem206[esp_84 - 0x00000004:DWORD], Mem206[esp_84:LPDWORD])
	Mem209[edi_26 + 0x000000A8:word32] = eax_207
	branch eax_207 == 0x00000000 l100139E9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100139E9:
	word32 eax_214 = GetLastError()
	word16 ax_215 = (word16) eax_214
	branch eax_214 <= 0x00000000 l100139FB
// DataOut: ax cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100139F3:
	eax_214 = (word32) ax_215 | 0x80070000
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100139FB:
	Mem222[ebp_275 - 0x0000005C:word32] = eax_214
	branch eax_214 >= 0x00000000 l10013A0A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10013A02:
	esi = fn1000CEF1(Mem222[edi_26 + 0x00000034:word32], edx, 0x00000000, esi, es, ds)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100139E4:
	Mem213[ebp_275 - 0x0000005C:word32] = 0x00000000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10013A0A:
	fn1000CEF1(Mem180[ebp_275 - 0x00000060:word32], edx, 0x00000000, esi, es, ds)
	eax_107 = Mem180[ebp_275 - 0x0000005C:word32]
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10013A15:
	word32 esp_109 = esp_23 - 0x00000004
	Mem110[esp_109:word32] = 0x00000004
	word32 esi_111 = Mem110[esp_109:word32]
	branch Mem110[0x10031000:word32] <=u esi_111 l10013A63
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10013A20:
	fn1000C51D(ebp_275 - 0x00000038, 0x10003428)
	fn1000C51D(ebp_275 - 0x00000028, 0x10003D54)
	Mem140[ebp_275 - 0x00000014:word32] = 0x00000000
	Mem141[ebp_275 - 0x00000018:word32] = ebp_275 - 0x0000005C
	Mem142[ebp_275 - 0x00000010:word32] = esi_111
	Mem143[ebp_275 - 0x0000000C:word32] = 0x00000000
	Mem147[esp_109:word32] = ebp_275 - 0x00000058
	Mem149[esp_109 - 0x00000004:word32] = 0x00000005
	Mem151[esp_109 - 0x00000008:word32] = 0x00000000
	Mem153[esp_109 - 0x0000000C:word32] = 0x00000000
	word32 ecx_157
	word32 esi_159
	word32 edi_160
	fn1000C491(0x10031000, 0x1000831E, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_157, out edx, out esi_159, out edi_160)
	eax_107 = Mem153[ebp_275 - 0x0000005C:word32]
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10013A63:
	word32 esp_122 = esp_23 + 0x00000004
	word32 ecx_130
	fn1002F420(eax_107, Mem110[ebp_275 - 0x00000004:word32] ^ ebp_275, edx, Mem110[esp_122 + 0x00000004:word32], ebp_275, Mem110[esp_122:word32], Mem110[esp_23:word32], es, ds, out ecx_130)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100138C2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):edi -112(fp):esi -108(fp):ebx -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10013A76(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn10013A76_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10013A76:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch Mem0[0x10031000:word32] <=u 0x00000004 l10013ACF
// DataOut: cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013A99:
	fn1000C51D(fp - 0x0000007C, 0x10003428)
	fn1000C51D(fp - 0x0000006C, 0x10003D5C)
	word32 ecx_174
	word32 edx_175
	word32 esi_176
	word32 edi_177
	fn1000C491(0x10031000, 0x100082D2, 0x00000000, 0x00000000, 0x00000004, fp - 0x0000009C, out ecx_174, out edx_175, out esi_176, out edi_177)
// DataOut: cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -236(fp):edi -232(fp):esi -228(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013ACF:
	word32 esi_32 = Mem0[ecx + 0x00000034:word32]
	EnterCriticalSection(esi_32 + 0x0000000C)
	Mem39[esi_32 + 0x00000038:byte] = 0x01
	LeaveCriticalSection(esi_32 + 0x0000000C)
	word32 v14_41 = Mem39[ecx + 0x00000030:word32]
	Mem44[ecx + 0x0000002C:byte] = 0x01
	SetEvent(v14_41)
	word32 edx_125
	word32 eax_128 = fn10013BDD(ecx, ecx, esi_32, esi_32 + 0x0000000C, es, ds, out edx_125)
	branch eax_128 != 0x80010115 l10013B54
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):0x00000004 -240(fp):fp - 0x0000009C -236(fp):edi -232(fp):esi -228(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013B54:
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):0x00000004 -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013B09:
	branch Mem44[0x10031000:word32] <=u 0x00000004 l10013BA6
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):0x00000004 -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013B16:
	fn1000C51D(fp - 0x000000BC, 0x10003428)
	fn1000C51D(fp - 0x000000AC, 0x10003D64)
	word32 ecx_150
	word32 esi_152
	word32 edi_153
	eax_128 = fn1000C491(0x10031000, 0x100082D2, 0x00000000, 0x00000000, 0x00000004, fp - 0x000000DC, out ecx_150, out edx_125, out esi_152, out edi_153)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):0x00000004 -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013B56:
	branch Mem44[0x10031000:word32] <=u 0x00000004 l10013BA6
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):0x00000004 -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013B5F:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003D54)
	word32 ecx_124
	word32 esi_126
	word32 edi_127
	eax_128 = fn1000C491(0x10031000, 0x10008279, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000005C, out ecx_124, out edx_125, out esi_126, out edi_127)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):0x00000004 -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -00E4(32) Local -00E8(32) Local -00EC(32)

l10013BA6:
	word32 ecx_80
	fn1002F420(eax_128, eax_11 ^ fp - 0x00000004, edx_125, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_80)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000EC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):<invalid> -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -28(fp):fp - 0x000000E0 -24(fp):0x00000000 -20(fp):0x00000004 -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn10013A76_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx edx:<invalid> ecx:<invalid> al:<invalid> esi:esi -252(fp):0x00000000 -248(fp):0x00000000 -244(fp):<invalid> -240(fp):<invalid> -236(fp):edi -232(fp):esi -228(fp):ebx -224(fp):<invalid> -28(fp):fp - 0x000000E0 -24(fp):0x00000000 -20(fp):0x00000004 -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10013BB7(word32 ecx, word32 edx, word32 ebx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10013BB7_entry:
	*edxOut = edx
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10013BB7:
	word32 ecx_10 = Mem0[ecx + 0x00000034:word32]
	word32 eax_16 = (0x00000000 - (-ecx_10 == 0x00000000) & 0x7FF8EC61) + 0x8007139F
	branch ecx_10 == 0x00000000 l10013BD9
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10013BD9:
	return eax_16
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -4(fp):ebp

l10013BD3:
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10015394:
	word32 eax_56 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	EnterCriticalSection(ecx_10 + 0x0000000C)
	word32 ebp_143 = fp - 0x00000004
	word32 esi_139 = 0x8007009D
	word32 esp_146 = fp - 0x0000001C
	branch Mem0[ecx_10 + 0x00000038:byte] != 0x00 l1001546C
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ecx:<invalid> eax:<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l100153C9:
	word32 esp_144
	__lock()
	Mem119[dwArg04 + 0x00000004:word32] = Mem0[dwArg04 + 0x00000004:word32] + 0x00000001
	*edxOut = 0x00000000
	word32 eax_122 = Mem119[ecx_10 + 0x0000002C:word32]
	word32 dwLoc0C_124 = 0x00000000
	branch eax_122 != Mem119[ecx_10 + 0x00000034:word32] l100153F4
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:0x8007009D -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l100153E1:
	word32 edx_293
	word32 eax_294 = fn10015655(ecx_10 + 0x00000028, es, ds, eax_122 + 0x00000001, out edx_293)
	edx = eax_294
	*edxOut = edx
	dwLoc0C_124 = eax_294
	branch eax_294 < 0x00000000 l10015461
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:0x00000000 -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l100153F4:
	Mem189[ecx_10 + 0x0000002C:word32] = Mem119[ecx_10 + 0x0000002C:word32] + 0x00000001
	word32 eax_192 = Mem189[ecx_10 + 0x00000028:word32] + Mem189[ecx_10 + 0x0000002C:word32] * 0x00000004
	branch eax_192 == 0xFFFFFFFC l10015406
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l10015404:
	Mem285[eax_192 + 0xFFFFFFFC:word32] = dwArg04
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l10015406:
	branch edx < 0x00000000 l10015461
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l10015461:
	fn1000CEF1(dwArg04, edx, ecx_10 + 0x00000028, dwArg04, es, ds)
	esp_144 = fp - 0x00000020
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(32)

l1001540A:
	word32 esp_205
	word32 edi_206
	word32 ebp_207
	word32 ecx_208
	word32 eax_209
	byte SCZO_210
	byte C_211
	byte SZO_212
	byte Z_213
	word32 esi_214
	word32 ebx_215
	word32 edx_216
	byte S_217
	byte al_218
	selector es_219
	selector ds_220
	call Mem189[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: al_202,C_199,ds,dwLoc04_52,dwLoc08_57,dwLoc0C_182,dwLoc10_65,dwLoc14_69,dwLoc18_60,dwLoc1C_62,dwLoc20_117,dwLoc24_180,dwLoc28_181,eax_201,ebp_53,ebx_120,ecx_204,edi_200,edx_183,es,esi_203,esp_187,S_198,SCZO_195,SZO_197,Z_196
		defs: al_218,C_211,ds_220,eax_209,ebp_207,ebx_215,ecx_208,edi_206,edx_216,es_219,esi_214,esp_205,S_217,SCZO_210,SZO_212,Z_213
	word32 edi_223
	word32 ecx_225
	word32 eax_226
	byte SCZO_227
	byte C_228
	byte SZO_229
	byte Z_230
	word32 esi_231
	word32 ebx_232
	byte S_234
	byte al_235
	call esi_214 (retsize: 4; depth: 4)
		uses: al_218,C_211,ds_220,dwLoc04_52,dwLoc08_57,dwLoc0C_182,dwLoc10_65,dwLoc14_69,dwLoc18_60,dwLoc1C_62,dwLoc20_117,dwLoc24_180,dwLoc28_181,eax_209,ebp_207,ebx_215,ecx_221,edi_206,edx_216,es_219,esi_214,esp_205,S_217,SCZO_210,SZO_212,Z_213
		defs: al_235,C_228,ds_237,eax_226,ebp_224,ebx_232,ecx_225,edi_223,edx_233,es_236,esi_231,esp_222,S_234,SCZO_227,SZO_229,Z_230
	branch al_235 != 0x00 l10015468
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +0004(32)

l10015468:
	esi_139 = dwLoc0C_124
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l10015422:
	edx = Mem189[ecx_10 + 0x0000002C:word32]
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32)

l1001542B:
	edx = edx - 0x00000001
	*edxOut = edx
	branch edx < 0x00000000 l1001545D
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32)

l1001545D:
	esi_139 = 0x00000000
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l10015430:
	word32 eax_251 = Mem189[ebx_232:word32]
	branch Mem189[eax_251 + edx * 0x00000004:word32] != dwArg04 l1001542B
// DataOut: cs ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32)

l10015437:
	branch edx >=u Mem189[ebx_232 + 0x00000004:word32] l10015456
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32)

l1001543C:
	word32 esi_266 = Mem189[eax_251 + edx * 0x00000004:word32]
	Mem269[esp_144 - 0x00000004:word32] = edx
	branch fn1001560C(ebx_232, dwArg00, out edx) < 0x00000000 l10015456
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l1001544B:
	branch esi_266 == 0x00000000 l10015456
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l1001544F:
	fn1000CEF1(esi_266, edx, ebx_232, esi_266, es, ds)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l10015456:
	esi_139 = 0x80004005
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l1001546B:
	ebx = Mem119[esp_144:word32]
	esp_146 = esp_144 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l1001546C:
	word32 esp_96 = esp_146 - 0x00000004
	Mem97[esp_96:word32] = ecx_10 + 0x0000000C
	LeaveCriticalSection(Mem97[esp_96:LPCRITICAL_SECTION])
	word32 ecx_108
	return fn1002F420(esi_139, eax_56 ^ fp - 0x00000004, edx, ebx, ebp_143, Mem97[esp_96 + 0x00000008:word32], Mem97[esp_96 + 0x00000004:word32], es, ds, out ecx_108)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10013BB7_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10013BDD(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
fn10013BDD_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0098(32)

l10013BDD:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edx_14 = Mem0[ecx + 0x000000A8:word32]
	*edxOut = edx_14
	word32 eax_107 = 0x00000000
	branch edx_14 == 0x00000000 l10013C97
// DataOut: cs ds eax ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0098(32)

l10013C0C:
	word32 ecx_83 = Mem0[ecx + 0x0000005C:word32]
	branch ecx_83 == 0x00000000 l10013C19
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edi ebp:fp - 0x00000004 eax:0x00000000 edx:<invalid> esi:0x00000000 -136(fp):edi -132(fp):esi -128(fp):0x00000000 -124(fp):0x00000000 -116(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0098(32)

l10013C16:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edi ebp:fp - 0x00000004 eax:0x00000000 edx:<invalid> esi:0x00000000 ecx:<invalid> -136(fp):edi -132(fp):esi -128(fp):<invalid> -124(fp):0x00000000 -116(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0098(32)

l10013C19:
	*edxOut = 0x0003A980
	eax_107 = fn10022ADA(0x0003A980, DPB(fp - 0x00000080 ^ fp - 0x00000080, ecx_83 != 0x00000000, 0) + 0x00000001, fp - 0x00000080, fp - 0x00000078)
	branch Mem0[0x10031000:word32] <=u 0x00000004 l10013C97
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edi ebp:fp - 0x00000004 eax:0x00000000 edx:<invalid> esi:0x00000000 ecx:<invalid> -136(fp):edi -132(fp):esi -128(fp):<invalid> -124(fp):<invalid> -116(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0074(32) Local -0084(32) Local -0088(32)

l10013C45:
	fn1000C51D(fp - 0x00000050, 0x10003428)
	fn1000C51D(fp - 0x00000040, 0x10003D88)
	word32 ecx_142
	word32 esi_144
	word32 edi_145
	fn1000C491(0x10031000, 0x1000820A, 0x00000000, 0x00000000, 0x00000006, fp - 0x00000070, out ecx_142, out edx_14, out esi_144, out edi_145)
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:0x00000004 ebp:fp - 0x00000004 eax:<invalid> edx:0x0003A980 esi:0x00000000 ecx:<invalid> al:<invalid> -148(fp):<invalid> -144(fp):fp - 0x00000080 -140(fp):0x00000004 -136(fp):edi -132(fp):esi -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32)

l10013C97:
	word32 ecx_76
	return fn1002F420(eax_107, eax_11 ^ fp - 0x00000004, edx_14, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_76)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -48(fp):fp - 0x00000078 -44(fp):0x00000000 -40(fp):0x00000004 -36(fp):0x00000000 -32(fp):fp - 0x00000074 -28(fp):0x00000000 -24(fp):0x00000004 -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp

fn10013BDD_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> esi:esi ecx:<invalid> al:<invalid> -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -48(fp):fp - 0x00000078 -44(fp):0x00000000 -40(fp):0x00000004 -36(fp):0x00000000 -32(fp):fp - 0x00000074 -28(fp):0x00000000 -24(fp):0x00000004 -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp



word32 fn10013CA9(word32 ecx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, byte bArg08, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi es fs gs ss
// LiveOut: eax ebx ecx edi esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(8)
fn10013CA9_entry:
// DataOut: cs ds ebp ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0078(32) Local -0084(0) Local -0088(32) Local -0094(32) Stack +0004(32) Stack +0008(8)

l10013CA9:
	word32 ecx_35
	word32 edx_36
	word32 esi_37
	fn1000F276(fp - 0x00000088, dwArg04, Mem0[ecx + 0x000000AC:word32], edi, es, ds, out ecx_35, out edx_36, out esi_37)
	word32 esp_47
	word32 edi_48
	word32 ebp_49
	byte SCZO_50
	word32 eax_51
	byte SZO_52
	byte C_53
	word32 ecx_54
	word32 ebx_55
	word32 esi_56
	bcuiposr0 None_57
	byte S_58
	word32 edx_59
	byte Z_60
	byte CZ_61
	word16 di_62
	byte dl_63
	byte al_64
	selector es_65
	selector ds_66
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 200)
		uses: C_17,ds,dwLoc04_6,dwLoc08_12,dwLoc7C_32,dwLoc88_15,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_39,ebp_7,ebx_24,ecx_46,edi_3,edx_36,es,esi_45,esp_43,SZO_16
		defs: al_64,C_53,CZ_61,di_62,dl_63,ds_66,eax_51,ebp_49,ebx_55,ecx_54,edi_48,edx_59,es_65,esi_56,esp_47,None_57,S_58,SCZO_50,SZO_52,Z_60
	word32 edi_68
	byte SCZO_70
	word32 eax_71
	byte SZO_72
	byte C_73
	word32 ecx_74
	bcuiposr0 None_77
	byte S_78
	word32 edx_79
	byte Z_80
	byte CZ_81
	word16 di_82
	byte dl_83
	byte al_84
	selector ds_1022
	selector es_1021
	word32 ebx_1011
	word32 ebp_1005
	word32 esp_1003
	word32 esi_1023
	call esi_56 (retsize: 4; depth: 4)
		uses: al_64,C_53,CZ_61,di_62,dl_63,ds_66,dwLoc04_6,dwLoc08_12,dwLoc7C_32,dwLoc88_15,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_51,ebp_49,ebx_55,ecx_54,edi_48,edx_59,es_65,esi_56,esp_47,None_57,S_58,SCZO_50,SZO_52,Z_60
		defs: al_84,C_73,CZ_81,di_82,dl_83,ds_86,eax_71,ebp_69,ebx_75,ecx_74,edi_68,edx_79,es_85,esi_76,esp_67,None_77,S_78,SCZO_70,SZO_72,Z_80
	word32 edi_1004 = eax_71
	branch eax_71 < 0x00000000 l100142A6
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0078(32) Local -007C(32) Local -0084(0) Local -0094(32) Stack +0008(8)

l10013D02:
	byte bLoc6D_1366
	Mem161[esp_1003 - 0x00000004:word32] = fp - 0x00000088
	word32 ecx_165 = fn10015089(fp - 0x00000030, edx_79, ecx, es_1021, ds_1022, dwArg00, out esi_1023)
	Mem179[esp_1003 - 0x00000004:word32] = fp - 0x00000084
	Mem181[esp_1003 - 0x00000008:word32] = ecx_165
	Mem183[esp_1003 - 0x0000000C:word32] = 0x100034D4
	word32 edi_1361 = 0x80000002
	word32 edx_1359
	word32 ecx_1082
	branch fn1000CAD8(0x80000002, 0x100034F8, dwArg00, dwArg08, out ecx_1082, out edx_1359) < 0x00000000 l10013D57
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -136(fp):<invalid> -124(fp):fp - 0x00000088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0078(32) Local -007C(32) Local -0084(0) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013D57:
	bLoc6D_1366 = 0x00
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013D4D:
	bLoc6D_1366 = dwLoc84 != 0x00000000
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013D5B:
	branch Mem183[0x10031000:word32] <=u 0x00000004 l10013DB4
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013D64:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x10003DAC)
	fn1000C58C(fp - 0x0000002C, ebx_1011)
	Mem1350[esp_1003 - 0x00000004:word32] = fp - 0x0000006C
	Mem1352[esp_1003 - 0x00000008:word32] = 0x00000006
	word32 ecx_1339 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem1354[esp_1003 - 0x0000000C:word32] = ecx_1339
	Mem1356[esp_1003 - 0x00000010:word32] = ecx_1339
	fn1000C491(0x10031000, 0x1000817E, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1082, out edx_1359, out esi_1023, out edi_1361)
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DB4:
	branch Mem183[esi_1023 + 0x00000020:word32] == 0x00000002 l10013DD6
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DBA:
	Mem1322[esp_1003 - 0x00000004:word32] = 0x00000043
	branch GetSystemMetrics(Mem1322[esp_1003 - 0x00000004:int32]) == 0x00000000 l10013DD6
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DC6:
	branch bLoc6D_1366 != 0x00 l10013DD6
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DD6:
	Mem1249[esp_1003 - 0x00000004:word32] = fp - 0x00000078
	Mem1251[esp_1003 - 0x00000008:word32] = 0x00000009
	Mem1253[esp_1003 - 0x0000000C:word32] = 0x00000000
	Mem1255[esp_1003 - 0x00000010:word32] = ebx_1011
	Mem1257[esp_1003 - 0x00000014:word32] = edi_1361
	word32 eax_1258 = RegOpenKeyExW(Mem1257[esp_1003 - 0x00000014:HKEY], Mem1257[esp_1003 - 0x00000010:LPCWSTR], Mem1257[esp_1003 - 0x0000000C:DWORD], Mem1257[esp_1003 - 0x00000008:REGSAM], Mem1257[esp_1003 - 0x00000004:PHKEY])
	edi_1004 = eax_1258
	word16 di_1261 = (word16) eax_1258
	byte S_1265 = cond(eax_1258)
	branch eax_1258 <= 0x00000000 l10013DFD
// DataOut: cs di ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DEF:
	word32 edi_1311 = (word32) di_1261
	edi_1004 = edi_1311 | 0x80070000
	S_1265 = cond(edi_1311 | 0x80070000) (alias)
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DFD:
	branch S_1265 l10013E3F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DFF:
	Mem1284[esp_1003 - 0x00000004:word32] = fp - 0x000000A4
	word32 edx_1288
	word32 eax_1289 = fn1002927E(dwLoc78, DPB(edx_1359, Mem1257[esi_1023 + 0x00000020:word32] == 0x00000002, 0), es_1021, ds_1022, dwArg00, out ecx_1082, out edx_1288)
	Mem1293[esp_1003 - 0x00000004:word32] = dwLoc78
	RegCloseKey(Mem1293[esp_1003 - 0x00000004:HKEY])
	edi_1004 = eax_1289
	branch eax_1289 < 0x00000000 l10013E3F
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013E27:
	word32 eax_1304 = fn1001F7BA(fp - 0x000000A4, edx_1288, ebx_1011, esi_1023, eax_1289, es_1021, ds_1022, out ecx_1082)
	edi_1004 = eax_1304
	branch eax_1304 >= 0x00000000 l10013F8F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:Test(EQ,Z) ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013DCC:
	edi_1004 = 0x80004005
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013E3F:
	branch bArg08 != 0x00 l10013F8F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:Test(EQ,Z) ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -006D(0) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013E49:
	branch bLoc6D_1366 != 0x00 l10013F8F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:Test(EQ,Z) ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013E53:
	Mem1090[esp_1003 - 0x00000004:word32] = ecx_1082
	Mem1094[esp_1003 - 0x00000008:word32] = 0x10007638
	word32 edx_1095
	word32 eax_1096 = fn1000F0D2(fp - 0x000000A4, es_1021, ds_1022, dwArg00, out edx_1095)
	ebx_1011 = 0x10007638
	word32 ecx_1092 = fp - 0x000000A4
	edi_1004 = eax_1096
	branch eax_1096 < 0x00000000 l10013EBA
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:Test(EQ,Z) ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013E6E:
	branch Mem1094[0x10031000:word32] <=u 0x00000004 l10013EBA
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007638 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:Test(EQ,Z) ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013E77:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003DBC)
	Mem1232[esp_1003 - 0x00000004:word32] = fp - 0x0000005C
	Mem1234[esp_1003 - 0x00000008:word32] = 0x00000005
	word32 ecx_1222 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem1236[esp_1003 - 0x0000000C:word32] = ecx_1222
	Mem1238[esp_1003 - 0x00000010:word32] = ecx_1222
	word32 edx_1241
	fn1000C491(0x10031000, 0x1000810C, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1092, out edx_1241, out esi_1023, out edi_1004)
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007638 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:Test(EQ,Z) ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):fp - 0x0000006D -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000001 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013EBA:
	Mem1117[esp_1003 - 0x00000004:word32] = 0x00000043
	branch GetSystemMetrics(Mem1117[esp_1003 - 0x00000004:int32]) != 0x00000002 l10013F8F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007638 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013ECB:
	Mem1123[esp_1003 - 0x00000004:word32] = ecx_1092
	Mem1127[esp_1003 - 0x00000008:word32] = 0x10007628
	word32 ecx_1125 = fp - 0x000000A4
	word32 edx_1128
	branch fn1000F0D2(fp - 0x000000A4, es_1021, ds_1022, dwArg00, out edx_1128) < 0x00000000 l10013F2D
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007638 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013EE1:
	branch Mem1127[0x10031000:word32] <=u 0x00000004 l10013F2D
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007628 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013EEA:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003DBC)
	Mem1202[esp_1003 - 0x00000004:word32] = fp - 0x0000005C
	Mem1204[esp_1003 - 0x00000008:word32] = 0x00000005
	word32 ecx_1192 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem1206[esp_1003 - 0x0000000C:word32] = ecx_1192
	Mem1208[esp_1003 - 0x00000010:word32] = ecx_1192
	word32 edx_1211
	fn1000C491(0x10031000, 0x1000810C, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1125, out edx_1211, out esi_1023, out edi_1004)
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007628 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013F2D:
	Mem1145[esp_1003 - 0x00000004:word32] = ecx_1125
	Mem1149[esp_1003 - 0x00000008:word32] = 0x10007618
	ebx_1011 = 0x10007618
	word32 edx_1150
	branch fn1000F0D2(fp - 0x000000A4, es_1021, ds_1022, dwArg00, out edx_1150) < 0x00000000 l10013F8F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007628 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013F43:
	branch Mem1149[0x10031000:word32] <=u 0x00000004 l10013F8F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007618 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013F4C:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003DBC)
	Mem1172[esp_1003 - 0x00000004:word32] = fp - 0x0000005C
	Mem1174[esp_1003 - 0x00000008:word32] = 0x00000005
	word32 ecx_1162 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem1176[esp_1003 - 0x0000000C:word32] = ecx_1162
	Mem1178[esp_1003 - 0x00000010:word32] = ecx_1162
	word32 ecx_1180
	word32 edx_1181
	fn1000C491(0x10031000, 0x1000810C, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1180, out edx_1181, out esi_1023, out edi_1004)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x10007618 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32) Local -0094(32) Local -00A0(0) Stack +0008(8)

l10013F8F:
	branch bArg08 != 0x00 l10014002
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0074(32) Local -007C(32) Local -0094(32) Local -00A0(0)

l10013FA0:
	Mem926[esp_1003 - 0x00000004:word32] = fp - 0x00000094
	Mem932[esp_1003 - 0x00000004:word32] = fn1000FC32(0x00000000, ebx_1011, esi_1023, es_1021, ds_1022, dwArg00, out esi_1023, out edi_1004)
	Mem934[esp_1003 - 0x00000008:word32] = 0x10003F50
	Mem936[esp_1003 - 0x0000000C:word32] = 0x00000001
	Mem938[esp_1003 - 0x00000010:word32] = 0x00000000
	Mem940[esp_1003 - 0x00000014:word32] = 0x10003F70
	branch CoCreateInstance(Mem940[esp_1003 - 0x00000014:(ptr IID)], Mem940[esp_1003 - 0x00000010:LPUNKNOWN], Mem940[esp_1003 - 0x0000000C:DWORD], Mem940[esp_1003 - 0x00000008:(ptr IID)], Mem940[esp_1003 - 0x00000004:(ptr LPVOID)]) < 0x00000000 l10013FFF
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0074(32) Local -007C(32) Local -0094(32) Local -00A0(0)

l10013FC5:
	branch 0x00000000 == 0x00000000 l10013FE0
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0074(32) Local -007C(32) Local -0094(32) Local -00A0(0)

l10013FCC:
	Mem1030[esp_1003 - 0x00000004:word32] = 0x00000000
	word32 esp_1033
	word32 edi_1034
	word32 ebp_1035
	byte SCZO_1036
	word32 eax_1037
	byte SZO_1038
	byte C_1039
	word32 ecx_1040
	word32 ebx_1041
	word32 esi_1042
	bcuiposr0 None_1043
	byte S_1044
	word32 edx_1045
	byte Z_1046
	byte CZ_1047
	word16 di_1048
	byte dl_1049
	byte al_1050
	selector es_1051
	selector ds_1052
	call Mem1030[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_84,bLoc6D_193,C_1027,CZ_216,di_219,dl_230,ds_86,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_1025,dwLoc7C_32,dwLoc80_211,dwLoc84,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_1028,ebp_69,ebx_221,ecx_1032,edi_928,edx_229,es_85,esi_1031,esp_1029,None_77,S_944,SCZO_233,SZO_1026,Z_969
		defs: al_1050,C_1039,CZ_1047,di_1048,dl_1049,ds_1052,eax_1037,ebp_1035,ebx_1041,ecx_1040,edi_1034,edx_1045,es_1051,esi_1042,esp_1033,None_1043,S_1044,SCZO_1036,SZO_1038,Z_1046
	word32 edi_1054
	word32 ebp_1055
	byte SCZO_1056
	word32 eax_1057
	byte SZO_1058
	byte C_1059
	word32 ecx_1060
	word32 ebx_1061
	word32 esi_1062
	bcuiposr0 None_1063
	byte S_1064
	word32 edx_1065
	byte Z_1066
	byte CZ_1067
	word16 di_1068
	byte dl_1069
	byte al_1070
	selector es_1071
	selector ds_1072
	call esi_1042 (retsize: 4; depth: 4)
		uses: al_1050,bLoc6D_193,C_1039,CZ_1047,di_1048,dl_1049,ds_1052,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_1025,dwLoc7C_32,dwLoc80_211,dwLoc84,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_1037,ebp_1035,ebx_1041,ecx_1040,edi_1034,edx_1045,es_1051,esi_1042,esp_1033,None_1043,S_1044,SCZO_1036,SZO_1038,Z_1046
		defs: al_1070,C_1059,CZ_1067,di_1068,dl_1069,ds_1072,eax_1057,ebp_1055,ebx_1061,ecx_1060,edi_1054,edx_1065,es_1071,esi_1062,esp_1053,None_1063,S_1064,SCZO_1056,SZO_1058,Z_1066
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0074(32) Local -007C(32) Local -0094(32) Local -00A0(0)

l10013FE0:
	word32 esp_975 = esp_1003 - 0x00000004
	Mem976[esp_975:word32] = fp - 0x00000074
	Mem978[esp_975 - 0x00000004:word32] = 0x10003F00
	Mem980[esp_975 - 0x00000008:word32] = dwLoc94 & 0x00000000
	word32 esp_983
	word32 edi_984
	word32 ebp_985
	byte SCZO_986
	word32 eax_987
	byte SZO_988
	byte C_989
	word32 ecx_990
	word32 ebx_991
	word32 esi_992
	bcuiposr0 None_993
	byte S_994
	word32 edx_995
	byte Z_996
	byte CZ_997
	word16 di_998
	byte dl_999
	byte al_1000
	selector es_1001
	selector ds_1002
	call Mem980[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_84,bLoc6D_193,C_970,CZ_216,di_219,dl_230,ds_86,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_971,dwLoc7C_32,dwLoc80_211,dwLoc84,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_973,ebp_69,ebx_221,ecx_982,edi_928,edx_229,es_85,esi_981,esp_979,None_77,S_944,SCZO_233,SZO_968,Z_969
		defs: al_1000,C_989,CZ_997,di_998,dl_999,ds_1002,eax_987,ebp_985,ebx_991,ecx_990,edi_984,edx_995,es_1001,esi_992,esp_983,None_993,S_994,SCZO_986,SZO_988,Z_996
	byte SCZO_1006
	word32 eax_1007
	byte SZO_1008
	byte C_1009
	word32 ecx_1010
	word32 esi_1012
	bcuiposr0 None_1013
	byte S_1014
	word32 edx_1015
	byte Z_1016
	byte CZ_1017
	word16 di_1018
	byte dl_1019
	byte al_1020
	call Mem980[esi_992:word32] (retsize: 4; depth: 4)
		uses: al_1000,bLoc6D_193,C_989,CZ_997,di_998,dl_999,ds_1002,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_971,dwLoc7C_32,dwLoc80_211,dwLoc84,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_987,ebp_985,ebx_991,ecx_990,edi_984,edx_995,es_1001,esi_992,esp_983,None_993,S_994,SCZO_986,SZO_988,Z_996
		defs: al_1020,C_1009,CZ_1017,di_1018,dl_1019,ds_1022,eax_1007,ebp_1005,ebx_1011,ecx_1010,edi_1004,edx_1015,es_1021,esi_1012,esp_1003,None_1013,S_1014,SCZO_1006,SZO_1008,Z_1016
	esi_1023 = ecx
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32) Local -0074(32) Local -00A0(0)

l10013FFF:
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32) Local -00A0(0)

l10014002:
	word32 edx_243 = 0x00000000
	branch edi_1004 < 0x00000000 l10014262
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32) Local -00A0(0)

l1001400A:
	word32 eax_419 = (word32) (Mem183[esi_1023 + 0x00000020:word32] == 0x00000002)
	ebx_1011 = 0x00000000
	branch true l10014262
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014024:
	word32 edi_424 = eax_419
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:Test(EQ,Z) dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -116(fp):<invalid> -109(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014026:
	Mem443[ebp_1005 - 0x00000080:word32] = 0x00000001
	branch edx_243 == 0x00000000 l100140BF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014035:
	word32 eax_832 = Mem443[ebp_1005 - 0x000000A0:word32] + (ebx_1011 << 0x00000004)
	word32 esp_835 = esp_1003 - 0x00000004
	Mem836[esp_835:word32] = ebp_1005 - 0x00000080
	Mem839[esp_835 - 0x00000004:word32] = eax_832
	Mem841[esp_835 - 0x00000008:word32] = edi_424
	Mem843[esp_835 - 0x0000000C:word32] = edx_243
	Mem844[ebp_1005 - 0x00000074:word32] = eax_832
	word32 esp_845
	word32 edi_846
	word32 ebp_847
	byte SCZO_848
	word32 eax_849
	byte SZO_850
	byte C_851
	word32 ecx_852
	word32 ebx_853
	word32 esi_854
	bcuiposr0 None_855
	byte S_856
	word32 edx_857
	byte Z_858
	byte CZ_859
	word16 di_860
	byte dl_861
	byte al_862
	selector es_863
	selector ds_864
	call Mem844[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_439,bLoc6D_193,C_446,CZ_429,di_435,dl_428,ds_426,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_832,ebp_440,ebx_436,ecx_837,edi_434,edx_433,es_427,esi_830,esp_842,None_431,S_430,SCZO_833,SZO_444,Z_445
		defs: al_862,C_851,CZ_859,di_860,dl_861,ds_864,eax_849,ebp_847,ebx_853,ecx_852,edi_846,edx_857,es_863,esi_854,esp_845,None_855,S_856,SCZO_848,SZO_850,Z_858
	byte SCZO_868
	word32 eax_869
	byte SZO_870
	byte C_871
	word32 ecx_872
	bcuiposr0 None_875
	byte S_876
	word32 edx_877
	byte Z_878
	byte CZ_879
	word16 di_880
	byte dl_881
	byte al_882
	call Mem844[esi_854 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: al_862,bLoc6D_193,C_851,CZ_859,di_860,dl_861,ds_864,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_849,ebp_847,ebx_853,ecx_852,edi_846,edx_857,es_863,esi_854,esp_845,None_855,S_856,SCZO_848,SZO_850,Z_858
		defs: al_882,C_871,CZ_879,di_880,dl_881,ds_884,eax_869,ebp_867,ebx_873,ecx_872,edi_866,edx_877,es_883,esi_874,esp_865,None_875,S_876,SCZO_868,SZO_870,Z_878
	branch eax_869 < 0x00000000 l100140BC
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001405E:
	branch Mem844[ebp_1005 - 0x00000080:word32] != 0x00000000 l100140BC
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100140BC:
	esi_1023 = Mem844[ebp_1005 - 0x00000078:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100140BF:
	word32 eax_485 = Mem443[esi_1023 + 0x000000B0:word32]
	__lock()
	Mem488[eax_485 + 0x0000001C:word32] = __xadd(Mem443[eax_485 + 0x0000001C:word32], 0x00000001)
	Mem492[ebp_1005 - 0x0000008C:word32] = Mem488[ebp_1005 - 0x0000008C:word32] & 0x00000000
	word32 esp_495 = esp_1003 - 0x00000004
	Mem496[esp_495:word32] = ebp_1005 - 0x0000008C
	Mem498[esp_495 - 0x00000004:word32] = 0x10003F40
	Mem500[ebp_1005 - 0x000000A8:word32] = 0x00000002
	Mem502[esp_495 - 0x00000008:word32] = 0x00000001
	word32 esi_504 = (ebx_1011 << 0x00000004) + Mem502[ebp_1005 - 0x000000A0:word32]
	Mem506[esp_495 - 0x0000000C:word32] = 0x00000000
	Mem508[esp_495 - 0x00000010:word32] = esi_504
	word32 eax_509 = CoCreateInstance(Mem508[esp_495 - 0x00000010:(ptr IID)], Mem508[esp_495 - 0x0000000C:LPUNKNOWN], Mem508[esp_495 - 0x00000008:DWORD], Mem508[esp_495 - 0x00000004:(ptr IID)], Mem508[esp_495:(ptr LPVOID)])
	Mem511[ebp_1005 - 0x000000AC:word32] = eax_509
	esp_1003 = esp_495 + 0x00000004
	branch eax_509 < 0x00000000 l100141DE
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100141DE:
	branch Mem511[0x10031000:word32] <=u 0x00000004 l10014240
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100141E7:
	fn1000C51D(ebp_1005 - 0x00000048, 0x10003428)
	fn1000C51D(ebp_1005 - 0x00000038, 0x10003DFC)
	Mem801[ebp_1005 - 0x00000028:word32] = esi_504
	Mem803[ebp_1005 - 0x00000024:word32] = 0x00000000
	Mem804[ebp_1005 - 0x00000020:word32] = 0x00000010
	Mem805[ebp_1005 - 0x0000001C:word32] = 0x00000000
	Mem806[ebp_1005 - 0x00000018:word32] = ebp_1005 - 0x000000AC
	Mem807[ebp_1005 - 0x00000014:word32] = 0x00000000
	Mem808[ebp_1005 - 0x00000010:word32] = 0x00000004
	Mem809[ebp_1005 - 0x0000000C:word32] = 0x00000000
	Mem813[esp_495:word32] = ebp_1005 - 0x00000068
	Mem815[esp_495 - 0x00000004:word32] = 0x00000006
	Mem817[esp_495 - 0x00000008:word32] = 0x00000000
	Mem819[esp_495 - 0x0000000C:word32] = 0x00000000
	word32 ecx_822
	word32 edx_823
	fn1000C491(0x10031000, 0x1000808D, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_822, out edx_823, out esi_504, out edi_424)
	esp_1003 = esp_495 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001410B:
	word32 eax_536 = Mem511[ebp_1005 - 0x0000008C:word32]
	Mem539[ebp_1005 - 0x00000074:word32] = Mem511[ebp_1005 - 0x00000074:word32] & 0x00000000
	Mem543[ebp_1005 - 0x000000A4:word32] = eax_536
	Mem546[esp_495:word32] = ebp_1005 + 0x0000000C
	Mem548[esp_495 - 0x00000004:word32] = esi_504
	Mem551[esp_495 - 0x00000008:word32] = ebp_1005 - 0x000000A4
	word32 edx_537 = ebp_1005 - 0x000000A8
	word32 ecx_552
	branch fn1001596F(ebp_1005 - 0x00000074, edx_537, ebp_1005, esi_504, edi_424, es_1021, ds_1022, out ecx_552) < 0x00000000 l1001416D
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014139:
	word32 esi_755 = Mem551[ebp_1005 - 0x00000078:word32]
	word32 eax_756 = Mem551[esi_755 + 0x0000003C:word32]
	branch eax_756 != Mem551[esi_755 + 0x00000044:word32] l10014153
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014144:
	Mem780[esp_495:word32] = ecx_552
	Mem785[esp_495 - 0x00000004:word32] = eax_756 + 0x00000001
	word32 edx_786
	branch fn10015655(esi_755 + 0x00000038, es_1021, ds_1022, dwArg00, out edx_786) < 0x00000000 l1001416D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014153:
	Mem764[esi_755 + 0x0000003C:word32] = Mem551[esi_755 + 0x0000003C:word32] + 0x00000001
	word32 ecx_768 = Mem764[esi_755 + 0x00000038:word32] + (Mem764[esi_755 + 0x0000003C:word32] - 0x00000001) * 0x00000004
	branch ecx_768 == 0x00000000 l1001416D
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014164:
	Mem774[esp_1003 - 0x00000004:word32] = ebp_1005 - 0x00000074
	word32 esi_775
	word32 edi_776
	fn10015118(ecx_768, ebx_1011, esi_755, es_1021, ds_1022, dwArg00, out esi_775, out edi_776)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001416D:
	word32 eax_559 = Mem551[ebp_1005 - 0x0000008C:word32]
	Mem562[ebp_1005 - 0x00000088:word32] = Mem551[ebp_1005 - 0x00000088:word32] & 0x00000000
	word32 esp_565 = esp_1003 - 0x00000004
	Mem566[esp_565:word32] = ebp_1005 - 0x00000088
	Mem568[esp_565 - 0x00000004:word32] = 0x10003EF0
	Mem571[esp_565 - 0x00000008:word32] = eax_559
	word32 esp_573
	word32 edi_574
	word32 ebp_575
	byte SCZO_576
	word32 eax_577
	byte SZO_578
	byte C_579
	word32 ecx_580
	word32 ebx_581
	word32 esi_582
	bcuiposr0 None_583
	byte S_584
	word32 edx_585
	byte Z_586
	byte CZ_587
	word16 di_588
	byte dl_589
	byte al_590
	selector es_591
	selector ds_592
	call Mem571[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_481,bLoc6D_193,C_564,CZ_474,di_479,dl_473,ds_471,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_559,ebp_482,ebx_480,ecx_572,edi_478,edx_537,es_472,esi_569,esp_570,None_476,S_556,SCZO_489,SZO_563,Z_475
		defs: al_590,C_579,CZ_587,di_588,dl_589,ds_592,eax_577,ebp_575,ebx_581,ecx_580,edi_574,edx_585,es_591,esi_582,esp_573,None_583,S_584,SCZO_576,SZO_578,Z_586
	byte SCZO_596
	word32 eax_597
	byte SZO_598
	byte C_599
	word32 ecx_600
	bcuiposr0 None_603
	byte S_604
	word32 edx_605
	byte Z_606
	byte CZ_607
	word16 di_608
	byte dl_609
	byte al_610
	word32 esi_602
	call Mem571[esi_582:word32] (retsize: 4; depth: 4)
		uses: al_590,bLoc6D_193,C_579,CZ_587,di_588,dl_589,ds_592,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_577,ebp_575,ebx_581,ecx_580,edi_574,edx_585,es_591,esi_582,esp_573,None_583,S_584,SCZO_576,SZO_578,Z_586
		defs: al_610,C_599,CZ_607,di_608,dl_609,ds_612,eax_597,ebp_595,ebx_601,ecx_600,edi_594,edx_605,es_611,esi_602,esp_593,None_603,S_604,SCZO_596,SZO_598,Z_606
	branch eax_597 < 0x00000000 l100141B3
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014197:
	word32 eax_706 = Mem571[ebp_1005 - 0x00000088:word32]
	Mem709[esp_1003 - 0x00000004:word32] = Mem571[ebp_1005 - 0x00000084:word32]
	Mem711[esp_1003 - 0x00000008:word32] = eax_706
	word32 esp_715
	word32 edi_716
	word32 ebp_717
	byte SCZO_718
	word32 eax_719
	byte SZO_720
	byte C_721
	word32 ecx_722
	word32 ebx_723
	word32 esi_724
	bcuiposr0 None_725
	byte S_726
	word32 edx_727
	byte Z_728
	byte CZ_729
	word16 di_730
	byte dl_731
	byte al_732
	selector es_733
	selector ds_734
	call Mem711[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_610,bLoc6D_193,C_615,CZ_607,di_608,dl_609,ds_612,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_706,ebp_595,ebx_601,ecx_714,edi_594,edx_605,es_611,esi_713,esp_710,None_603,S_614,SCZO_596,SZO_613,Z_606
		defs: al_732,C_721,CZ_729,di_730,dl_731,ds_734,eax_719,ebp_717,ebx_723,ecx_722,edi_716,edx_727,es_733,esi_724,esp_715,None_725,S_726,SCZO_718,SZO_720,Z_728
	byte SCZO_738
	word32 eax_739
	byte SZO_740
	byte C_741
	word32 ecx_742
	bcuiposr0 None_745
	byte S_746
	word32 edx_747
	byte Z_748
	byte CZ_749
	word16 di_750
	byte dl_751
	byte al_752
	call esi_724 (retsize: 4; depth: 4)
		uses: al_732,bLoc6D_193,C_721,CZ_729,di_730,dl_731,ds_734,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_719,ebp_717,ebx_723,ecx_722,edi_716,edx_727,es_733,esi_724,esp_715,None_725,S_726,SCZO_718,SZO_720,Z_728
		defs: al_752,C_741,CZ_749,di_750,dl_751,ds_754,eax_739,ebp_737,ebx_743,ecx_742,edi_736,edx_747,es_753,esi_744,esp_735,None_745,S_746,SCZO_738,SZO_740,Z_748
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100141B3:
	word32 ecx_632 = Mem571[ebp_1005 - 0x00000088:word32]
	branch ecx_632 == 0x00000000 l100141D4
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100141BD:
	Mem658[ebp_1005 - 0x00000088:word32] = Mem571[ebp_1005 - 0x00000088:word32] & 0x00000000
	word32 esp_662 = esp_1003 - 0x00000004
	Mem663[esp_662:word32] = ecx_632
	word32 esp_666
	word32 edi_667
	word32 ebp_668
	byte SCZO_669
	word32 eax_670
	byte SZO_671
	byte C_672
	word32 ecx_673
	word32 ebx_674
	word32 esi_675
	bcuiposr0 None_676
	byte S_677
	word32 edx_678
	byte Z_679
	byte CZ_680
	word16 di_681
	byte dl_682
	byte al_683
	selector es_684
	selector ds_685
	call Mem663[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_628,bLoc6D_193,C_660,CZ_619,di_625,dl_618,ds_616,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_661,ebp_629,ebx_626,ecx_665,edi_624,edx_623,es_617,esi_664,esp_662,None_621,S_620,SCZO_622,SZO_659,Z_634
		defs: al_683,C_672,CZ_680,di_681,dl_682,ds_685,eax_670,ebp_668,ebx_674,ecx_673,edi_667,edx_678,es_684,esi_675,esp_666,None_676,S_677,SCZO_669,SZO_671,Z_679
	byte SCZO_689
	word32 eax_690
	byte SZO_691
	byte C_692
	word32 ecx_693
	bcuiposr0 None_696
	byte S_697
	word32 edx_698
	byte Z_699
	byte CZ_700
	word16 di_701
	byte dl_702
	byte al_703
	call esi_675 (retsize: 4; depth: 4)
		uses: al_683,bLoc6D_193,C_672,CZ_680,di_681,dl_682,ds_685,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_421,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_670,ebp_668,ebx_674,ecx_673,edi_667,edx_678,es_684,esi_675,esp_666,None_676,S_677,SCZO_669,SZO_671,Z_679
		defs: al_703,C_692,CZ_700,di_701,dl_702,ds_705,eax_690,ebp_688,ebx_694,ecx_693,edi_687,edx_698,es_704,esi_695,esp_686,None_696,S_697,SCZO_689,SZO_691,Z_699
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100141D4:
	word32 edx_654
	fn1000C640(ebp_1005 - 0x00000074, ebx_1011, esi_602, edi_424, es_1021, ds_1022, out edx_654, out esi_504)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014240:
	word32 edx_533
	fn1000C640(ebp_1005 - 0x0000008C, ebx_1011, esi_504, edi_424, es_1021, ds_1022, out edx_533, out esi_1023)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014064:
	branch Mem844[0x10031000:word32] <=u 0x00000004 l1001424B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014071:
	fn1000C51D(ebp_1005 - 0x00000038, 0x10003428)
	fn1000C51D(ebp_1005 - 0x00000028, 0x10003DDC)
	Mem903[ebp_1005 - 0x00000018:word32] = Mem844[ebp_1005 - 0x00000074:word32]
	Mem904[ebp_1005 - 0x00000014:word32] = 0x00000000
	Mem905[ebp_1005 - 0x00000010:word32] = 0x00000010
	Mem906[ebp_1005 - 0x0000000C:word32] = 0x00000000
	Mem910[esp_1003 - 0x00000004:word32] = ebp_1005 - 0x00000058
	Mem912[esp_1003 - 0x00000008:word32] = 0x00000005
	Mem914[esp_1003 - 0x0000000C:word32] = 0x00000000
	Mem916[esp_1003 - 0x00000010:word32] = 0x00000000
	word32 ecx_918
	word32 edx_919
	fn1000C491(0x10031000, 0x1000810C, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_918, out edx_919, out esi_1023, out edi_424)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001424B:
	edx_243 = Mem443[ebp_1005 - 0x00000070:word32]
	ebx_1011 = ebx_1011 + 0x00000001
	branch ebx_1011 >=u Mem443[ebp_1005 - 0x0000009C:word32] l1001425F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001425F:
	edi_1004 = Mem443[ebp_1005 - 0x0000007C:word32]
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10014262:
	branch edx_243 == 0x00000000 l1001427A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10014266:
	Mem367[ebp_1005 - 0x00000070:word32] = Mem183[ebp_1005 - 0x00000070:word32] & 0x00000000
	word32 esp_371 = esp_1003 - 0x00000004
	Mem372[esp_371:word32] = edx_243
	word32 esp_375
	word32 edi_376
	word32 ebp_377
	byte SCZO_378
	word32 eax_379
	byte SZO_380
	byte C_381
	word32 ecx_382
	word32 ebx_383
	word32 esi_384
	bcuiposr0 None_385
	byte S_386
	word32 edx_387
	byte Z_388
	byte CZ_389
	word16 di_390
	byte dl_391
	byte al_392
	selector es_393
	selector ds_394
	call Mem372[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_270,bLoc6D_193,C_369,CZ_260,di_266,dl_259,ds_257,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_256,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_370,ebp_271,ebx_267,ecx_374,edi_265,edx_264,es_258,esi_373,esp_371,None_262,S_261,SCZO_263,SZO_368,Z_275
		defs: al_392,C_381,CZ_389,di_390,dl_391,ds_394,eax_379,ebp_377,ebx_383,ecx_382,edi_376,edx_387,es_393,esi_384,esp_375,None_385,S_386,SCZO_378,SZO_380,Z_388
	byte SCZO_398
	word32 eax_399
	byte SZO_400
	byte C_401
	word32 ecx_402
	bcuiposr0 None_405
	byte S_406
	word32 edx_407
	byte Z_408
	byte CZ_409
	word16 di_410
	byte dl_411
	byte al_412
	call esi_384 (retsize: 4; depth: 4)
		uses: al_392,bLoc6D_193,C_381,CZ_389,di_390,dl_391,ds_394,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_256,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_379,ebp_377,ebx_383,ecx_382,edi_376,edx_387,es_393,esi_384,esp_375,None_385,S_386,SCZO_378,SZO_380,Z_388
		defs: al_412,C_401,CZ_409,di_410,dl_411,ds_414,eax_399,ebp_397,ebx_403,ecx_402,edi_396,edx_407,es_413,esi_404,esp_395,None_405,S_406,SCZO_398,SZO_400,Z_408
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001427A:
	word32 ecx_293 = Mem183[ebp_1005 - 0x00000090:word32]
	branch ecx_293 == 0x00000000 l1001429B
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10014284:
	Mem318[ebp_1005 - 0x00000090:word32] = Mem183[ebp_1005 - 0x00000090:word32] & 0x00000000
	word32 esp_322 = esp_1003 - 0x00000004
	Mem323[esp_322:word32] = ecx_293
	word32 esp_326
	word32 edi_327
	word32 ebp_328
	byte SCZO_329
	word32 eax_330
	byte SZO_331
	byte C_332
	word32 ecx_333
	word32 ebx_334
	word32 esi_335
	bcuiposr0 None_336
	byte S_337
	word32 edx_338
	byte Z_339
	byte CZ_340
	word16 di_341
	byte dl_342
	byte al_343
	selector es_344
	selector ds_345
	call Mem323[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_289,bLoc6D_193,C_320,CZ_280,di_286,dl_279,ds_277,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_256,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_321,ebp_290,ebx_287,ecx_325,edi_285,edx_284,es_278,esi_324,esp_322,None_282,S_281,SCZO_283,SZO_319,Z_295
		defs: al_343,C_332,CZ_340,di_341,dl_342,ds_345,eax_330,ebp_328,ebx_334,ecx_333,edi_327,edx_338,es_344,esi_335,esp_326,None_336,S_337,SCZO_329,SZO_331,Z_339
	byte SCZO_349
	word32 eax_350
	byte SZO_351
	byte C_352
	word32 ecx_353
	bcuiposr0 None_356
	byte S_357
	word32 edx_358
	byte Z_359
	byte CZ_360
	word16 di_361
	byte dl_362
	byte al_363
	call esi_335 (retsize: 4; depth: 4)
		uses: al_343,bLoc6D_193,C_332,CZ_340,di_341,dl_342,ds_345,dwLoc04_6,dwLoc08_12,dwLoc10_215,dwLoc14_214,dwLoc18_213,dwLoc1C_212,dwLoc74_235,dwLoc7C_32,dwLoc80_211,dwLoc84_256,dwLoc88_15,dwLoc94_227,dwLoc98_176,dwLoc9C_175,dwLocA0_174,dwLocA4_172,dwLocB4_22,dwLocB8_28,dwLocBC_31,dwLocC0_42,dwLocC4_44,eax_330,ebp_328,ebx_334,ecx_333,edi_327,edx_338,es_344,esi_335,esp_326,None_336,S_337,SCZO_329,SZO_331,Z_339
		defs: al_363,C_352,CZ_360,di_361,dl_362,ds_365,eax_350,ebp_348,ebx_354,ecx_353,edi_347,edx_358,es_364,esi_355,esp_346,None_356,S_357,SCZO_349,SZO_351,Z_359
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001429B:
	fn1000F2B0(ebp_1005 - 0x000000A0)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100142A6:
	word32 ecx_132
	word32 edx_133
	word32 esi_134
	fn1000F276(ebp_1005 - 0x00000084, ebx_1011, esi_1023, edi_1004, es_1021, ds_1022, out ecx_132, out edx_133, out esi_134)
	word32 esp_140 = esp_1003 + 0x00000004
	word32 edi_138 = Mem0[esp_1003:word32]
	*ediOut = edi_138
	word32 esi_141 = Mem0[esp_140:word32]
	*esiOut = esi_141
	word32 ebx_146 = Mem0[esp_140 + 0x00000004:word32]
	*ebxOut = ebx_146
	word32 ecx_148
	return fn1002F420(edi_1004, Mem0[ebp_1005 - 0x00000004:word32] ^ ebp_1005, edx_133, ebx_146, ebp_1005, esi_141, edi_138, es_1021, ds_1022, out ecx_148)
// DataOut: cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10013CA9_exit:
// DataOut: eax ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10014257:
	esi_1023 = Mem443[ebp_1005 - 0x00000078:word32]
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -196(fp):<invalid> -192(fp):fp - 0x00000088 -188(fp):edi -184(fp):esi -180(fp):ebx -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):fp - 0x00000088 -120(fp):<invalid> -116(fp):<invalid> -109(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):0x00000010 -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)



word32 fn100142C6(word32 ecx, word32 ebp, selector es, selector ds, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax ebx edi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
fn100142C6_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100142C6:
	word32 esp_132
	word32 edx_118
	word32 esi_35
	word32 edi_127
	word32 ebx_129
	word32 ecx_130
	word32 eax_357 = fn10013CA9(ecx, fp - 0x00000004, ecx, es, ds, 0x100034F8, 0x00, out ecx_130, out ebx_129, out esi_35, out edi_127)
	Mem40[fp - 0x00000278:word32] = eax_357
	Mem42[fp - 0x00000290:word32] = 0x00000004
	word32 ebp_199 = fp - 0x00000004
	word32 esi_128 = Mem42[fp - 0x00000290:word32]
	branch eax_357 < 0x00000000 l10014386
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l100142FE:
	branch Mem42[edi_127 + 0x00000020:word32] != 0x00000001 l10014318
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -660(fp):0x100034F8 -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014304:
	Mem441[fp - 0x00000290:word32] = 0x00000001
	Mem443[fp - 0x00000294:word32] = 0x100035A0
	fn10013CA9(edi_127, fp - 0x00000004, edi_127, es, ds, dwArg00, bArg04, out ecx_130, out ebx_129, out esi_128, out edi_127)
	eax_357 = Mem443[fp - 0x00000278:word32]
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -660(fp):0x100034F8 -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014318:
	branch eax_357 < 0x00000000 l10014386
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001431C:
	Mem365[fp - 0x00000290:word32] = fp - 0x0000027C
	Mem367[fp - 0x00000294:word32] = 0x00000009
	Mem369[fp - 0x00000298:word32] = ebx_129
	Mem371[fp - 0x0000029C:word32] = 0x10003648
	Mem373[fp - 0x000002A0:word32] = 0x80000002
	word32 eax_374 = RegOpenKeyExW(Mem373[fp - 0x000002A0:HKEY], Mem373[fp - 0x0000029C:LPCWSTR], Mem373[fp - 0x00000298:DWORD], Mem373[fp - 0x00000294:REGSAM], Mem373[fp - 0x00000290:PHKEY])
	word16 ax_375 = (word16) eax_374
	byte S_379 = cond(eax_374)
	branch eax_374 <= 0x00000000 l10014344
// DataOut: ax cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001433A:
	S_379 = cond((word32) ax_375 | 0x80070000) (alias)
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014344:
	branch S_379 l10014368
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014346:
	word32 ecx_417 = Mem373[fp - 0x0000027C:word32]
	Mem419[fp - 0x00000290:word32] = edi_127 + 0x00000048
	word32 edx_423
	fn1002927E(ecx_417, DPB(edx, Mem373[edi_127 + 0x00000020:word32] == 0x00000002, 0), es, ds, dwArg00, out ecx_130, out edx_423)
	Mem428[fp - 0x00000290:word32] = Mem419[fp - 0x0000027C:word32]
	RegCloseKey(Mem428[fp - 0x00000290:HKEY])
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> cl:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014368:
	esp_132 = fp - 0x0000028C
	word32 eax_399 = Mem373[fp - 0x00000278:word32]
	branch eax_399 < 0x00000000 l10014386
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> dl:<invalid> edx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014372:
	branch Mem373[edi_127 + 0x0000003C:word32] != ebx_129 l10014382
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> dl:<invalid> edx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014377:
	Mem413[fp - 0x00000278:word32] = 0x80004005
	eax_399 = 0x80004005
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> dl:<invalid> edx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014382:
	branch eax_399 >= 0x00000000 l10014399
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> dl:<invalid> edx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014386:
	ecx_130 = fn10014536(edi_127, ebx_129, esi_128, edi_127, es, ds, out edx_118)
	esp_132 = fp - 0x00000290
	branch Mem42[fp - 0x00000278:word32] < ebx_129 l100144BF
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014399:
	word32 esp_133 = esp_132 - 0x00000004
	Mem134[esp_133:word32] = ecx_130
	Mem139[esp_133 - 0x00000004:word32] = fp - 0x00000214
	Mem141[esp_133 - 0x00000008:word32] = 0x10003E10
	edx_118 = 0x100034F8
	esp_132 = esp_133 + 0x00000004
	word32 ecx_143
	branch fn1001328F(0x80000002, 0x100034F8, dwArg00, dwArg04, out ecx_143) < 0x00000000 l100144BF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -672(fp):0x80000002 -668(fp):0x10003648 -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100143BD:
	Mem151[esp_133:word32] = fp - 0x00000274
	Mem154[esp_133 - 0x00000004:word32] = fp - 0x00000214
	esp_132 = esp_133 + 0x00000004
	branch CLSIDFromString(Mem154[esp_133 - 0x00000004:LPCOLESTR], Mem154[esp_133:LPCLSID]) < 0x00000000 l100144BF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x100034F8 dl:0xF8 al:<invalid> cl:0x02 ax:<invalid> -672(fp):0x80000002 -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100143D9:
	Mem161[fp - 0x0000027C:word32] = ebx_129
	word32 ecx_162
	word32 edx_163
	word32 esi_164
	fn1000F276(fp - 0x0000027C, ebx_129, esi_128, edi_127, es, ds, out ecx_162, out edx_163, out esi_164)
	Mem168[esp_133:word32] = fp - 0x0000027C
	Mem170[esp_133 - 0x00000004:word32] = 0x10003F30
	Mem172[esp_133 - 0x00000008:word32] = 0x00000001
	Mem174[esp_133 - 0x0000000C:word32] = ebx_129
	Mem177[esp_133 - 0x00000010:word32] = fp - 0x00000274
	word32 eax_178 = CoCreateInstance(Mem177[esp_133 - 0x00000010:(ptr IID)], Mem177[esp_133 - 0x0000000C:LPUNKNOWN], Mem177[esp_133 - 0x00000008:DWORD], Mem177[esp_133 - 0x00000004:(ptr IID)], Mem177[esp_133:(ptr LPVOID)])
	Mem180[fp - 0x00000278:word32] = eax_178
	word32 esp_179 = esp_133 + 0x00000004
	branch eax_178 < 0x00000000 l10014454
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x100034F8 dl:0xF8 al:<invalid> cl:0x02 ax:<invalid> -672(fp):0x80000002 -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014410:
	word32 ebx_237 = Mem180[fp - 0x0000027C:word32]
	branch Mem180[edi_127 + 0x000000A0:word32] == ebx_237 l10014452
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:0xF8 al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001441E:
	branch ebx_237 == 0x00000000 l10014435
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:0xF8 al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014422:
	Mem288[esp_133:word32] = ebx_237
	word32 esp_291
	word32 edi_292
	word32 ebp_293
	byte SCZO_294
	word32 eax_295
	byte SZO_296
	byte C_297
	word32 ebx_298
	word32 esi_299
	word32 ecx_300
	byte S_301
	byte Z_302
	byte SO_303
	word32 edx_304
	byte CZ_305
	word16 ax_306
	byte dl_307
	selector es_308
	selector ds_309
	call Mem288[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_131,bLoc0290_28,C_261,CZ_126,dl_137,ds,dwLoc0284_15,dwLoc0288_18,dwLoc028C_20,dwLoc0290_27,dwLoc0294_30,dwLoc04_6,dwLoc08_12,eax_286,ebp_7,ebx_237,ecx_290,edi_127,edx_163,es,esi_289,esp_287,S_182,SCZO_238,SO_123,SZO_259,Z_260
		defs: ax_306,C_297,CZ_305,dl_307,ds_309,eax_295,ebp_293,ebx_298,ecx_300,edi_292,edx_304,es_308,esi_299,esp_291,S_301,SCZO_294,SO_303,SZO_296,Z_302
	word32 esp_310
	byte SCZO_313
	word32 eax_314
	byte SZO_315
	byte C_316
	word32 esi_318
	word32 ecx_319
	byte S_320
	byte Z_321
	byte SO_322
	word32 edx_323
	byte CZ_324
	word16 ax_325
	byte dl_326
	call esi_299 (retsize: 4; depth: 4)
		uses: ax_306,bLoc0290_28,C_297,CZ_305,dl_307,ds_309,dwLoc0284_15,dwLoc0288_18,dwLoc028C_20,dwLoc0290_27,dwLoc0294_30,dwLoc04_6,dwLoc08_12,eax_295,ebp_293,ebx_298,ecx_300,edi_292,edx_304,es_308,esi_299,esp_291,S_301,SCZO_294,SO_303,SZO_296,Z_302
		defs: ax_325,C_316,CZ_324,dl_326,ds_328,eax_314,ebp_312,ebx_317,ecx_319,edi_311,edx_323,es_327,esi_318,esp_310,S_320,SCZO_313,SO_322,SZO_315,Z_321
	Mem330[esp_310 - 0x00000004:word32] = 0x00000004
	esi_164 = Mem330[esp_310 - 0x00000004:word32]
	esp_179 = esp_310
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:0xF8 al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014435:
	Mem280[ebp_199 - 0x0000027C:word32] = Mem180[edi_127 + 0x000000A0:word32]
	Mem281[edi_127 + 0x000000A0:word32] = ebx_237
	word32 ecx_282
	word32 edx_283
	fn1000F276(ebp_199 - 0x0000027C, ebx_237, esi_164, edi_127, es, ds, out ecx_282, out edx_283, out esi_164)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014452:
	ebx_129 = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014454:
	branch Mem180[0x10031000:word32] <=u esi_164 l100144B4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001445C:
	fn1000C51D(ebp_199 - 0x00000240, 0x10003428)
	fn1000C51D(ebp_199 - 0x00000230, 0x10003E24)
	Mem216[ebp_199 - 0x0000021C:word32] = ebx_129
	Mem217[ebp_199 - 0x00000220:word32] = ebp_199 - 0x00000274
	Mem218[ebp_199 - 0x00000218:word32] = esi_164
	Mem219[ebp_199 - 0x00000214:word32] = ebx_129
	word32 esp_222 = esp_179 - 0x00000004
	Mem223[esp_222:word32] = ebp_199 - 0x00000260
	Mem225[esp_222 - 0x00000004:word32] = 0x00000005
	Mem227[esp_222 - 0x00000008:word32] = ebx_129
	Mem229[esp_222 - 0x0000000C:word32] = ebx_129
	word32 ecx_231
	word32 edx_232
	fn1000C491(0x10031000, 0x10008027, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_231, out edx_232, out esi_164, out edi_127)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100144B4:
	word32 ecx_207
	fn1000F276(ebp_199 - 0x00000278, ebx_129, esi_164, edi_127, es, ds, out ecx_207, out edx_118, out esi_128)
	esp_132 = esp_179
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -548(fp):fp - 0x00000278 -544(fp):<invalid> -540(fp):<invalid> -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100144BF:
	branch Mem42[0x10031000:word32] <=u esi_128 l1001451F
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -548(fp):fp - 0x00000278 -544(fp):<invalid> -540(fp):<invalid> -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100144C7:
	fn1000C51D(ebp_199 - 0x00000240, 0x10003428)
	fn1000C51D(ebp_199 - 0x00000230, 0x10003D54)
	Mem97[ebp_199 - 0x0000021C:word32] = ebx_129
	Mem98[ebp_199 - 0x00000220:word32] = ebp_199 - 0x00000274
	Mem99[ebp_199 - 0x00000218:word32] = esi_128
	Mem100[ebp_199 - 0x00000214:word32] = ebx_129
	word32 esp_104 = esp_132 - 0x00000004
	Mem105[esp_104:word32] = ebp_199 - 0x00000260
	Mem107[esp_104 - 0x00000004:word32] = 0x00000005
	Mem109[esp_104 - 0x00000008:word32] = ebx_129
	Mem111[esp_104 - 0x0000000C:word32] = ebx_129
	word32 ecx_117
	word32 esi_119
	word32 edi_120
	fn1000C491(0x10031000, 0x10008027, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_117, out edx_118, out esi_119, out edi_120)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> dl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -548(fp):fp - 0x00000278 -544(fp):<invalid> -540(fp):<invalid> -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001451F:
	word32 esp_79 = esp_132 + 0x00000004
	word32 edi_78 = Mem42[esp_132:word32]
	*ediOut = edi_78
	word32 ebx_82 = Mem42[esp_79 + 0x00000004:word32]
	*ebxOut = ebx_82
	word32 ecx_84
	return fn1002F420(Mem42[ebp_199 - 0x00000274:word32], Mem42[ebp_199 - 0x00000004:word32] ^ ebp_199, edx_118, ebx_82, ebp_199, Mem42[esp_79:word32], edi_78, es, ds, out ecx_84)
// DataOut: cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -548(fp):fp - 0x00000278 -544(fp):<invalid> -540(fp):<invalid> -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100142C6_exit:
// DataOut: eax ebx edi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> dl:<invalid> cl:<invalid> ax:<invalid> -676(fp):fp - 0x00000274 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -660(fp):<invalid> -656(fp):<invalid> -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):<invalid> -636(fp):<invalid> -632(fp):<invalid> -548(fp):fp - 0x00000278 -544(fp):<invalid> -540(fp):<invalid> -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10014536(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi rax rcx rdx rsi si sil
// Preserved: edi esi esp
fn10014536_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10014536:
	fn100150E0(ecx + 0x00000038, es, ds)
	fn1000F2B0(ecx + 0x00000048)
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001454F_thunk_fn1000F276:
	word32 ecx_17
	word32 edx_18
	word32 esi_19
	fn1000F276(ecx + 0x00000058, ebx, esi, edi, es, ds, out ecx_17, out edx_18, out esi_19)
	return ecx_17
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -4(fp):esi

fn10014536_exit:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -4(fp):esi



void fn10014693(word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
fn10014693_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10014693:
	word32 ebx_30
	word32 edi_31
	fn10014F27(fp - 0x000001D4, out ebx_30, out edi_31)
	word32 esi_35 = 0x10031000
	branch Mem0[0x10031000:word32] <=u 0x00000005 l1001470D
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l100146D4:
	Mem801[fp - 0x00000228:word32] = 0x00002000
	Mem803[fp - 0x0000022C:word32] = ebx_30
	word32 edx_805
	branch (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_805) == 0x00 l1001470D
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:0x10031000 al:<invalid> edx:<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l100146E5:
	Mem814[fp - 0x00000228:word32] = fp - 0x000001AC
	Mem816[fp - 0x0000022C:word32] = 0x00000002
	Mem820[fp - 0x00000230:word32] = fn10014F7C(fp - 0x000001D4)
	Mem824[fp - 0x00000234:word32] = fp - 0x000001CC
	word32 ecx_826
	word32 edx_827
	fn1000C491(0x10031000, 0x10007F59, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_826, out edx_827, out esi_35, out edi_31)
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x10031000 esi:0x10031000 al:<invalid> edx:<invalid> -556(fp):0x00000000 -552(fp):0x00002000 -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1001470D:
	word32 esi_796
	word32 eax_41 = Mem0[fs:0x00000030:word32]
	Mem45[fp - 0x00000228:word32] = 0x00001000
	word32 ebx_42 = edi_31 + 0x00000064
	Mem47[ebx_42:word32] = Mem45[eax_41 + 0x000001D4:word32]
	Mem51[edi_31 + 0x00000060:word32] = Mem47[Mem47[fs:0x00000030:word32] + 0x00000010:word32] + 0x00000038
	word32 eax_54 = -GetSystemMetrics(Mem51[fp - 0x00000228:int32])
	Mem57[fp - 0x00000228:word32] = 0x10002F5C
	Mem60[edi_31 + 0x00000068:word32] = eax_54 == 0x00000000
	Mem65[fp - 0x0000022C:word32] = 0x00000098
	Mem68[edi_31 + 0x0000007C:word32] = (word32) (Mem60[edi_31 + 0x00000020:word32] == 0x00000002)
	word32 ebx_69
	word32 ebp_70
	word32 esi_71
	word32 edi_72
	word32 eax_73 = fn1002FF64(ebx_42, esi_35, edi_31, out ebx_69, out ebp_70, out esi_71, out edi_72)
	branch eax_73 == 0x00000000 l1001476D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1001476D:
	esi_796 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:Test(EQ,Z) edx:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10014762:
	word32 edx_794
	esi_796 = fn10013201(eax_73, ebx_69, esi_71, edi_72, es, ds, out edx_794)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:Test(EQ,Z) edx:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1001476F:
	word32 eax_85 = Mem68[edi_72 + 0x000000A4:word32]
	Mem88[edi_72 + 0x000000A4:word32] = Mem68[edi_72 + 0x000000A4:word32] & 0x00000000
	branch eax_85 == 0x00000000 l10014787
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10014780:
	Mem788[fp - 0x00000228:word32] = eax_85
	fn1002EEC6(dwArg00)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014787:
	Mem94[edi_72 + 0x000000A4:word32] = esi_796
	Mem100[fp - 0x00000228:word32] = 0x00000000
	Mem102[fp - 0x0000022C:word32] = ebp_70 - 0x000001DC
	Mem104[fp - 0x00000230:word32] = 0x00000000
	Mem105[ebp_70 - 0x000001DC:word32] = 0x00000000
	word32 esp_106
	word32 edi_107
	byte SCZO_109
	word32 eax_110
	byte SZO_111
	byte C_112
	word32 ebx_113
	word32 ecx_115
	byte bl_116
	byte CZ_117
	byte al_118
	byte Z_119
	selector fs_121
	byte S_122
	word32 edx_120
	word32 esi_114
	selector ds_124
	selector es_123
	word32 ebp_108
	call ntdll.dll!RtlGetDeviceFamilyInfoEnum (retsize: 4; depth: 4)
		uses: al_86,bl_43,bLoc01D0_29,C_98,CZ_34,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_95,ebp_70,ebx_69,ecx_84,edi_72,edx_82,esi_96,esp_103,fs,SCZO_62,SZO_97,Z_91
		defs: al_118,bl_116,C_112,CZ_117,ds_124,eax_110,ebp_108,ebx_113,ecx_115,edi_107,edx_120,es_123,esi_114,esp_106,fs_121,S_122,SCZO_109,SZO_111,Z_119
	branch Mem105[ebp_108 - 0x000001DC:word32] != 0x00000004 l10014845
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100147B1:
	branch Mem105[edi_107 + 0x00000020:word32] != 0x00000001 l10014845
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -480(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100147BB:
	Mem737[esp_106 - 0x00000004:word32] = esi_114
	Mem739[esp_106 - 0x00000008:word32] = esi_114
	Mem741[esp_106 - 0x0000000C:word32] = esi_114
	Mem743[esp_106 - 0x00000010:word32] = esi_114
	word32 eax_744 = CreateEventW(Mem743[esp_106 - 0x00000010:LPSECURITY_ATTRIBUTES], Mem743[esp_106 - 0x0000000C:BOOL], Mem743[esp_106 - 0x00000008:BOOL], Mem743[esp_106 - 0x00000004:LPCWSTR])
	Mem746[edi_107 + 0x0000005C:word32] = eax_744
	branch eax_744 != 0x00000000 l10014845
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -480(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100147CC:
	word32 eax_750 = GetLastError()
	branch Mem746[0x10031000:word32] <=u 0x00000003 l10014843
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -480(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014843:
	esi_114 = 0x00000000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -480(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100147DD:
	fn1000C51D(ebp_108 - 0x00000118, 0x10003E54)
	fn1000C51D(ebp_108 - 0x00000108, 0x10003E5C)
	Mem758[ebp_108 - 0x000001E0:word32] = eax_750
	Mem763[ebp_108 - 0x000000F8:word32] = ebp_108 - 0x000001E0
	Mem764[ebp_108 - 0x000000F4:word32] = 0x00000000
	Mem765[ebp_108 - 0x000000F0:word32] = 0x00000004
	Mem766[ebp_108 - 0x000000EC:word32] = 0x00000000
	Mem770[esp_106 - 0x00000004:word32] = ebp_108 - 0x00000138
	Mem772[esp_106 - 0x00000008:word32] = 0x00000005
	Mem774[esp_106 - 0x0000000C:word32] = 0x00000000
	Mem776[esp_106 - 0x00000010:word32] = 0x00000000
	word32 ecx_778
	word32 edi_781
	fn1000C491(0x10031000, 0x10007EFE, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_778, out edx_120, out esi_114, out edi_781)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -480(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014845:
	Mem134[ebp_108 - 0x000001D8:word32] = esi_114
	Mem136[ebp_108 - 0x000001E4:word32] = ebp_108 - 0x000001D8
	word32 edi_138
	word32 esi_137
	word32 eax_141 = fn10015AAA(fn1000EF25(ebp_108 - 0x000001E4, edx_120, ebx_113, esi_114, es_123, ds_124, out esi_137, out edi_138))
	Mem142[ebp_108 - 0x000001D4:word32] = eax_141
	word32 esp_132 = esp_106
	branch eax_141 < 0x00000000 l10014912
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -484(fp):<invalid> -480(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014877:
	word32 eax_647 = Mem142[ebp_108 - 0x000001D8:word32]
	Mem650[esp_106 - 0x00000004:word32] = edi_138 + 0x00000080
	Mem652[esp_106 - 0x00000008:word32] = 0x10003F10
	Mem654[esp_106 - 0x0000000C:word32] = edi_138
	Mem657[esp_106 - 0x00000010:word32] = eax_647
	word32 esp_659
	word32 edi_660
	word32 ebp_661
	byte SCZO_662
	word32 eax_663
	byte SZO_664
	byte C_665
	word32 ebx_666
	word32 esi_667
	word32 ecx_668
	byte bl_669
	byte CZ_670
	byte al_671
	byte Z_672
	word32 edx_673
	selector fs_674
	byte S_675
	selector es_676
	selector ds_677
	call Mem657[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_118,bl_116,bLoc01D0_29,C_145,CZ_128,ds_124,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_647,ebp_108,ebx_113,ecx_658,edi_138,edx_130,es_123,esi_655,esp_656,fs_121,S_144,SCZO_129,SZO_143,Z_127
		defs: al_671,bl_669,C_665,CZ_670,ds_677,eax_663,ebp_661,ebx_666,ecx_668,edi_660,edx_673,es_676,esi_667,esp_659,fs_674,S_675,SCZO_662,SZO_664,Z_672
	byte SCZO_681
	word32 eax_682
	byte SZO_683
	byte C_684
	word32 ebx_685
	word32 esi_686
	word32 ecx_687
	byte bl_688
	byte CZ_689
	byte al_690
	byte Z_691
	word32 edx_692
	selector fs_693
	byte S_694
	call Mem657[esi_667 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: al_671,bl_669,bLoc01D0_29,C_665,CZ_670,ds_677,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_663,ebp_661,ebx_666,ecx_668,edi_660,edx_673,es_676,esi_667,esp_659,fs_674,S_675,SCZO_662,SZO_664,Z_672
		defs: al_690,bl_688,C_684,CZ_689,ds_696,eax_682,ebp_680,ebx_685,ecx_687,edi_679,edx_692,es_695,esi_686,esp_678,fs_693,S_694,SCZO_681,SZO_683,Z_691
	Mem700[ebp_108 - 0x000001D4:word32] = eax_682
	branch Mem657[0x10031000:word32] <=u 0x00000004 l10014910
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014910:
	esi_137 = 0x00000000
// DataOut: cs ds ebp edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100148AA:
	fn1000C51D(ebp_108 - 0x00000168, 0x10003428)
	fn1000C51D(ebp_108 - 0x00000158, 0x10003E74)
	Mem705[ebp_108 - 0x000001E8:word32] = eax_682
	Mem710[ebp_108 - 0x00000148:word32] = ebp_108 - 0x000001E8
	Mem711[ebp_108 - 0x00000144:word32] = 0x00000000
	Mem712[ebp_108 - 0x00000140:word32] = 0x00000004
	Mem713[ebp_108 - 0x0000013C:word32] = 0x00000000
	Mem717[esp_132 - 0x00000004:word32] = ebp_108 - 0x00000188
	Mem719[esp_132 - 0x00000008:word32] = 0x00000005
	Mem721[esp_132 - 0x0000000C:word32] = 0x00000000
	Mem723[esp_132 - 0x00000010:word32] = 0x00000000
	word32 ecx_725
	word32 edx_726
	fn1000C491(0x10031000, 0x10007EA6, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_725, out edx_726, out esi_137, out edi_138)
// DataOut: cs ds ebp edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014912:
	word32 ebp_180
	word32 ebx_178
	selector es_169
	selector ds_168
	Mem159[ebp_108 - 0x000001D4:word32] = esi_137
	word32 ebx_160
	word32 edi_161
	word32 eax_162 = fn100142C6(edi_138, ebp_108, es_123, ds_124, out ebx_160, out edi_161)
	Mem164[ebp_108 - 0x000001D4:word32] = eax_162
	word32 edx_163 = eax_162
	branch eax_162 < 0x00000000 l10014A5E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001492F:
	word32 eax_439 = Mem164[edi_161 + 0x000000AC:word32]
	word32 esp_440 = esp_132 - 0x00000004
	Mem441[esp_440:word32] = eax_439
	word32 esp_445
	word32 edi_446
	word32 ebp_447
	byte SCZO_448
	word32 eax_449
	byte SZO_450
	byte C_451
	word32 ebx_452
	word32 esi_453
	word32 ecx_454
	byte bl_455
	byte CZ_456
	byte al_457
	byte Z_458
	word32 edx_459
	selector fs_460
	byte S_461
	selector es_462
	selector ds_463
	call Mem441[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_150,bl_152,bLoc01D0_29,C_167,CZ_151,ds_146,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_439,ebp_156,ebx_160,ecx_444,edi_161,edx_163,es_147,esi_443,esp_440,fs_148,S_166,SCZO_153,SZO_165,Z_149
		defs: al_457,bl_455,C_451,CZ_456,ds_463,eax_449,ebp_447,ebx_452,ecx_454,edi_446,edx_459,es_462,esi_453,esp_445,fs_460,S_461,SCZO_448,SZO_450,Z_458
	word32 esp_464
	byte SCZO_467
	word32 eax_468
	byte SZO_469
	byte C_470
	word32 ebx_471
	word32 esi_472
	word32 ecx_473
	byte bl_474
	byte CZ_475
	byte al_476
	byte Z_477
	selector fs_479
	byte S_480
	word32 edx_478
	word32 edi_465
	call esi_453 (retsize: 4; depth: 4)
		uses: al_457,bl_455,bLoc01D0_29,C_451,CZ_456,ds_463,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_449,ebp_447,ebx_452,ecx_454,edi_446,edx_459,es_462,esi_453,esp_445,fs_460,S_461,SCZO_448,SZO_450,Z_458
		defs: al_476,bl_474,C_470,CZ_475,ds_482,eax_468,ebp_466,ebx_471,ecx_473,edi_465,edx_478,es_481,esi_472,esp_464,fs_479,S_480,SCZO_467,SZO_469,Z_477
	Mem484[ebp_180 - 0x000001EC:word32] = Mem441[edi_465 + 0x00000030:word32]
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014A35:
	branch Mem484[edi_465 + 0x0000002C:byte] == 0x00 l10014953
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014953:
	Mem525[esp_464 - 0x00000004:word32] = 0x00000004
	Mem527[esp_464 - 0x00000008:word32] = 0x00001CFF
	Mem529[esp_464 - 0x0000000C:word32] = 0xFFFFFFFF
	Mem532[esp_464 - 0x00000010:word32] = ebp_180 - 0x000001EC
	Mem534[esp_464 - 0x00000014:word32] = 0x00000001
	word32 eax_535 = MsgWaitForMultipleObjectsEx(Mem534[esp_464 - 0x00000014:DWORD], Mem534[esp_464 - 0x00000010:(ptr HANDLE)], Mem534[esp_464 - 0x0000000C:DWORD], Mem534[esp_464 - 0x00000008:DWORD], Mem534[esp_464 - 0x00000004:DWORD])
	Mem538[ebp_180 - 0x000001F0:word32] = eax_535
	branch eax_535 != 0x00000000 l10014996
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014996:
	branch eax_535 == 0x00000001 l10014BC6
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014BC6:
	branch Mem538[edi_465 + 0x0000002C:byte] == 0x00 l10014B90
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014B90:
	Mem621[esp_464 - 0x00000004:word32] = 0x00000001
	Mem624[esp_464 - 0x00000008:word32] = 0x00000000
	Mem626[esp_464 - 0x0000000C:word32] = 0x00000000
	Mem628[esp_464 - 0x00000010:word32] = 0x00000000
	Mem631[esp_464 - 0x00000014:word32] = ebp_180 - 0x00000214
	branch PeekMessageW(Mem631[esp_464 - 0x00000014:LPMSG], Mem631[esp_464 - 0x00000010:HWND], Mem631[esp_464 - 0x0000000C:UINT], Mem631[esp_464 - 0x00000008:UINT], Mem631[esp_464 - 0x00000004:UINT]) == 0x00000000 l10014A35
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014BAC:
	Mem639[esp_464 - 0x00000004:word32] = ebp_180 - 0x00000214
	TranslateMessage(Mem639[esp_464 - 0x00000004:(ptr MSG)])
	Mem644[esp_464 - 0x00000004:word32] = ebp_180 - 0x00000214
	DispatchMessageW(Mem644[esp_464 - 0x00000004:(ptr MSG)])
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014BCC:
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001499F:
	word32 eax_571 = GetLastError()
	branch Mem538[0x10031000:word32] <=u 0x00000002 l10014A35
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100149B4:
	fn1000C51D(ebp_180 - 0x000000C8, 0x10002FCC)
	fn1000C51D(ebp_180 - 0x000000B8, 0x10003E90)
	Mem580[ebp_180 - 0x000001F4:word32] = eax_571
	Mem584[ebp_180 - 0x000000A8:word32] = ebp_180 - 0x000001F0
	Mem586[esp_464 - 0x00000004:word32] = 0x00000004
	word32 edx_587 = Mem586[esp_464 - 0x00000004:word32]
	Mem590[ebp_180 - 0x000000A4:word32] = 0x00000000
	Mem591[ebp_180 - 0x000000A0:word32] = edx_587
	Mem592[ebp_180 - 0x0000009C:word32] = 0x00000000
	Mem593[ebp_180 - 0x00000098:word32] = ebp_180 - 0x000001F4
	Mem594[ebp_180 - 0x00000094:word32] = 0x00000000
	Mem595[ebp_180 - 0x00000090:word32] = edx_587
	Mem596[ebp_180 - 0x0000008C:word32] = 0x00000000
	Mem600[esp_464 - 0x00000004:word32] = ebp_180 - 0x000000E8
	Mem602[esp_464 - 0x00000008:word32] = 0x00000006
	Mem604[esp_464 - 0x0000000C:word32] = 0x00000000
	Mem606[esp_464 - 0x00000010:word32] = 0x00000000
	word32 ecx_608
	word32 esi_610
	fn1000C491(0x10031000, 0x10007E41, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_608, out edx_478, out esi_610, out edi_465)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014975:
	branch Mem538[edi_465 + 0x0000002C:byte] != 0x00 l10014A3F
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001497F:
	word32 ecx_554 = Mem538[edi_465 + 0x00000034:word32]
	Mem557[esp_464 - 0x00000004:word32] = 0x00000000
	Mem559[esp_464 - 0x00000008:word32] = edi_465 + 0x00000038
	word32 edx_832 = edx_478
	word32 ebx_561
	word32 esi_562
	branch fn10015767(ecx_554, edx_832, es_169, ds_168, dwArg00, bArg04, out edx_478, out ebx_561, out esi_562, out edi_465) != 0x00 l10014975
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014991:
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014A3F:
	word32 ecx_503 = Mem484[edi_465 + 0x00000034:word32]
	Mem506[esp_464 - 0x00000004:word32] = 0x00000001
	Mem508[esp_464 - 0x00000008:word32] = edi_465 + 0x00000038
	word32 edx_510
	word32 esi_512
	fn10015767(ecx_503, edx_478, es_169, ds_168, dwArg00, bArg04, out edx_510, out ebx_178, out esi_512, out edi_161)
	word32 edx_517
	fn10014536(edi_161, ebx_178, esi_512, edi_161, es_169, ds_168, out edx_517)
	esp_132 = esp_464 - 0x00000004
	edx_163 = Mem508[ebp_180 - 0x000001D4:word32]
	branch edx_163 >= 0x00000000 l10014A75
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014A5E:
	word32 eax_393 = Mem164[edi_161 + 0x000000AC:word32]
	word32 esp_394 = esp_132 - 0x00000004
	Mem395[esp_394:word32] = edx_163
	Mem397[esp_394 - 0x00000004:word32] = eax_393
	word32 esp_401
	word32 edi_402
	word32 ebp_403
	byte SCZO_404
	word32 eax_405
	byte SZO_406
	byte C_407
	word32 ebx_408
	word32 esi_409
	word32 ecx_410
	byte bl_411
	byte CZ_412
	byte al_413
	byte Z_414
	word32 edx_415
	selector fs_416
	byte S_417
	selector es_418
	selector ds_419
	call Mem397[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_150,bl_152,bLoc01D0_29,C_167,CZ_151,ds_146,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_393,ebp_156,ebx_160,ecx_400,edi_391,edx_390,es_147,esi_399,esp_396,fs_148,S_166,SCZO_153,SZO_165,Z_149
		defs: al_413,bl_411,C_407,CZ_412,ds_419,eax_405,ebp_403,ebx_408,ecx_410,edi_402,edx_415,es_418,esi_409,esp_401,fs_416,S_417,SCZO_404,SZO_406,Z_414
	byte SCZO_423
	word32 eax_424
	byte SZO_425
	byte C_426
	word32 esi_428
	word32 ecx_429
	byte bl_430
	byte CZ_431
	byte al_432
	byte Z_433
	word32 edx_434
	selector fs_435
	byte S_436
	call esi_409 (retsize: 4; depth: 4)
		uses: al_413,bl_411,bLoc01D0_29,C_407,CZ_412,ds_419,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_405,ebp_403,ebx_408,ecx_410,edi_402,edx_415,es_418,esi_409,esp_401,fs_416,S_417,SCZO_404,SZO_406,Z_414
		defs: al_432,bl_430,C_426,CZ_431,ds_438,eax_424,ebp_422,ebx_427,ecx_429,edi_421,edx_434,es_437,esi_428,esp_420,fs_435,S_436,SCZO_423,SZO_425,Z_433
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014A75:
	word32 eax_182 = Mem164[ebp_180 - 0x000001D8:word32]
	branch eax_182 == 0x00000000 l10014AA1
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014A7F:
	word32 edx_337 = Mem164[edi_161 + 0x00000080:word32]
	branch edx_337 == 0x00000000 l10014AA1
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014A89:
	word32 esp_342 = esp_132 - 0x00000004
	Mem343[esp_342:word32] = edx_337
	Mem345[esp_342 - 0x00000004:word32] = eax_182
	word32 esp_348
	word32 edi_349
	word32 ebp_350
	byte SCZO_351
	word32 eax_352
	byte SZO_353
	byte C_354
	word32 ebx_355
	word32 esi_356
	word32 ecx_357
	byte bl_358
	byte CZ_359
	byte al_360
	byte Z_361
	word32 edx_362
	selector fs_363
	byte S_364
	selector es_365
	selector ds_366
	call Mem345[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_183,bl_173,bLoc01D0_29,C_340,CZ_172,ds_168,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_182,ebp_180,ebx_178,ecx_347,edi_176,edx_337,es_169,esi_346,esp_344,fs_171,S_170,SCZO_174,SZO_338,Z_339
		defs: al_360,bl_358,C_354,CZ_359,ds_366,eax_352,ebp_350,ebx_355,ecx_357,edi_349,edx_362,es_365,esi_356,esp_348,fs_363,S_364,SCZO_351,SZO_353,Z_361
	byte SCZO_370
	word32 eax_371
	byte SZO_372
	byte C_373
	word32 esi_375
	word32 ecx_376
	byte bl_377
	byte CZ_378
	byte al_379
	byte Z_380
	word32 edx_381
	selector fs_382
	byte S_383
	call esi_356 (retsize: 4; depth: 4)
		uses: al_360,bl_358,bLoc01D0_29,C_354,CZ_359,ds_366,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_352,ebp_350,ebx_355,ecx_357,edi_349,edx_362,es_365,esi_356,esp_348,fs_363,S_364,SCZO_351,SZO_353,Z_361
		defs: al_379,bl_377,C_373,CZ_378,ds_385,eax_371,ebp_369,ebx_374,ecx_376,edi_368,edx_381,es_384,esi_375,esp_367,fs_382,S_383,SCZO_370,SZO_372,Z_380
	Mem387[edi_161 + 0x00000080:word32] = Mem345[edi_161 + 0x00000080:word32] & 0x00000000
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014AA1:
	Mem201[edi_161 + 0x00000020:word32] = Mem164[edi_161 + 0x00000020:word32] & 0x00000000
	word32 esi_205 = fn10014F08(ebp_180 - 0x000001D0)
	branch Mem201[0x10031000:word32] <=u 0x00000005 l10014B69
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014ABD:
	word32 esp_244 = esp_132 - 0x00000004
	Mem245[esp_244:word32] = 0x00002000
	Mem248[esp_244 - 0x00000004:word32] = 0x00000000
	esi_205 = 0x10031000
	word32 edx_252
	byte al_254 = (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_252)
	esp_132 = esp_244 + 0x00000004
	branch al_254 == 0x00 l10014B69
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10014AD8:
	Mem263[ebp_180 - 0x00000068:word32] = ebp_180 - 0x000001D4
	Mem265[ebp_180 - 0x000001F8:word32] = (word32) Mem263[edi_161 + 0x0000002C:byte]
	Mem267[ebp_180 - 0x00000058:word32] = ebp_180 - 0x000001F8
	Mem269[ebp_180 - 0x00000048:word32] = edi_161 + 0x00000078
	Mem271[ebp_180 - 0x00000028:word32] = edi_161 + 0x00000068
	word32 eax_272 = Mem271[edi_161 + 0x00000060:word32]
	Mem274[esp_244:word32] = 0x00000004
	word32 edx_275 = Mem274[esp_244:word32]
	Mem277[ebp_180 - 0x00000064:word32] = 0x00000000
	Mem278[ebp_180 - 0x00000060:word32] = edx_275
	Mem279[ebp_180 - 0x0000005C:word32] = 0x00000000
	Mem280[ebp_180 - 0x00000054:word32] = 0x00000000
	Mem281[ebp_180 - 0x00000050:word32] = edx_275
	Mem282[ebp_180 - 0x0000004C:word32] = 0x00000000
	Mem283[ebp_180 - 0x00000044:word32] = 0x00000000
	Mem284[ebp_180 - 0x00000040:word32] = edx_275
	Mem285[ebp_180 - 0x0000003C:word32] = 0x00000000
	Mem286[ebp_180 - 0x00000038:word32] = ebx_178
	Mem287[ebp_180 - 0x00000034:word32] = 0x00000000
	Mem288[ebp_180 - 0x00000030:word32] = edx_275
	Mem289[ebp_180 - 0x0000002C:word32] = 0x00000000
	Mem290[ebp_180 - 0x00000024:word32] = 0x00000000
	Mem291[ebp_180 - 0x00000020:word32] = edx_275
	Mem292[ebp_180 - 0x0000001C:word32] = 0x00000000
	Mem295[esp_244:word32] = Mem292[eax_272 + 0x00000004:word32]
	word32 esp_296
	word32 edi_297
	byte SCZO_299
	word32 eax_300
	byte SZO_301
	byte C_302
	word32 esi_304
	word32 ecx_305
	byte bl_306
	byte CZ_307
	byte al_308
	byte Z_309
	word32 edx_310
	selector fs_311
	byte S_312
	call api-ms-win-core-shlwapi-legacy-l1-1-0.dll!PathFindFileNameW (retsize: 4; depth: 4)
		uses: al_254,bl_193,bLoc01D0_29,C_262,CZ_207,ds_187,dwLoc01D4_28,dwLoc021C_15,dwLoc0220_18,dwLoc0224_20,dwLoc04_6,dwLoc08_12,eax_272,ebp_198,ebx_196,ecx_260,edi_195,edx_275,es_188,esi_246,esp_294,fs_190,S_189,SCZO_206,SZO_261,Z_257
		defs: al_308,bl_306,C_302,CZ_307,ds_314,eax_300,ebp_298,ebx_303,ecx_305,edi_297,edx_310,es_313,esi_304,esp_296,fs_311,S_312,SCZO_299,SZO_301,Z_309
	fn1000C58C(ebp_180 - 0x00000018, eax_300)
	Mem320[esp_296 - 0x00000004:word32] = ebp_180 - 0x00000088
	Mem322[esp_296 - 0x00000008:word32] = 0x00000008
	Mem324[esp_296 - 0x0000000C:word32] = 0x00000000
	Mem328[esp_296 - 0x00000010:word32] = ebp_180 - 0x000001C8
	word32 ecx_331
	word32 edx_332
	fn1000C491(0x10031000, 0x10007DC8, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_331, out edx_332, out esi_205, out edi_161)
	esp_132 = esp_296
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:0x10031000 esi:0x10031000 al:<invalid> edx:<invalid> bl:<invalid> dl:<invalid> bh:<invalid> cl:0x00 ax:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -8(fp):<invalid> -4(fp):ebp

l10014B69:
	word32 edx_223
	word32 esi_224
	fn1000C640(ebp_180 - 0x000001D8, ebx_178, esi_205, edi_161, es_169, ds_168, out edx_223, out esi_224)
	word32 edx_227
	word32 eax_228 = fn10014BD1(ebp_180 - 0x000001D0, ebx_178, edi_161, es_169, ds_168, out edx_227)
	word32 esp_231 = esp_132 + 0x00000004
	word32 ecx_239
	fn1002F420(eax_228, Mem201[ebp_180 - 0x00000004:word32] ^ ebp_180, edx_227, Mem201[esp_231 + 0x00000004:word32], ebp_180, Mem201[esp_231:word32], Mem201[esp_132:word32], es_169, ds_168, out ecx_239)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -508(fp):<invalid> -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -108(fp):fp - 0x000001D8 -104(fp):0x00000000 -100(fp):<invalid> -96(fp):0x00000000 -92(fp):fp - 0x000001FC -88(fp):0x00000000 -84(fp):<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):0x00000000 -68(fp):<invalid> -64(fp):0x00000000 -60(fp):<invalid> -56(fp):0x00000000 -52(fp):<invalid> -48(fp):0x00000000 -44(fp):<invalid> -40(fp):0x00000000 -36(fp):<invalid> -32(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn10014693_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> dl:<invalid> bh:<invalid> cl:<invalid> -564(fp):fp - 0x000001CC -560(fp):<invalid> -556(fp):<invalid> -552(fp):<invalid> -548(fp):edi -544(fp):esi -540(fp):ebx -508(fp):<invalid> -504(fp):<invalid> -500(fp):<invalid> -496(fp):<invalid> -492(fp):<invalid> -488(fp):fp - 0x000001DC -484(fp):<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):0x00000000 -464(fp):bl -332(fp):fp - 0x000001EC -328(fp):<invalid> -324(fp):0x00000004 -320(fp):<invalid> -252(fp):fp - 0x000001E4 -248(fp):<invalid> -244(fp):0x00000004 -240(fp):<invalid> -172(fp):fp - 0x000001F4 -168(fp):fp - 0x000000BC ^ fp - 0x000000BC -164(fp):<invalid> -160(fp):fp - 0x000000BC ^ fp - 0x000000BC -156(fp):fp - 0x000001F8 -152(fp):fp - 0x000000BC ^ fp - 0x000000BC -148(fp):<invalid> -144(fp):fp - 0x000000BC ^ fp - 0x000000BC -108(fp):fp - 0x000001D8 -104(fp):0x00000000 -100(fp):<invalid> -96(fp):0x00000000 -92(fp):fp - 0x000001FC -88(fp):0x00000000 -84(fp):<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):0x00000000 -68(fp):<invalid> -64(fp):0x00000000 -60(fp):<invalid> -56(fp):0x00000000 -52(fp):<invalid> -48(fp):0x00000000 -44(fp):<invalid> -40(fp):0x00000000 -36(fp):<invalid> -32(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10014BD1(word32 ecx, word32 ebx, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi esp rax rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn10014BD1_entry:
	*edxOut = edx
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10014BD1:
	word32 esi_17 = ecx
	branch Mem0[ecx:word32] != 0x00000001 l10014BED
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10014BDB:
	esi_17 = fn10014F08(ecx)
	word32 edx_28
	eax = fn1001550A(0x10031000, esi_17 + 0x00000008, ebx, esi_17, edi, es, ds, out edx_28)
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi

l10014BED:
	Mem18[esi_17:word32] = 0x00000003
	return eax
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -4(fp):esi

fn10014BD1_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -4(fp):esi



word32 fn10014F08(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: esi esp
// Trashed: SCZO ah al ax eax esi esp rax rsi rsp si sil sp spl
// Preserved: edi
fn10014F08_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10014F08:
	word32 esp_23 = fp - 0x00000004
	word32 esi_22 = ecx
	branch Mem0[ecx + 0x00000004:byte] == 0x00 l10014F1F
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10014F13:
	word32 edi_33
	word32 ecx_35
	byte SCZO_36
	byte Z_37
	word32 eax_38
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 16)
		uses: dwLoc04_6,dwLoc08_29,dwLoc0C_31,eax_27,ecx,edi_3,esi_8,esp_30,SCZO_10,Z_11
		defs: eax_38,ecx_35,edi_33,esi_34,esp_32,SCZO_36,Z_37
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi

l10014F1F:
	Mem24[esi_22:word32] = 0x00000002
	return Mem24[esp_23:word32]
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi esi:ecx eax:<invalid> -12(fp):0x00000004 -8(fp):ecx + 0x00000018 -4(fp):esi

fn10014F08_exit:
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi esi:<invalid> eax:<invalid> -12(fp):0x00000004 -8(fp):ecx + 0x00000018 -4(fp):esi



word32 fn10014F27(word32 ecx, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: ebx edi edx esp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn10014F27_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32)

l10014F27:
	word32 esp_112
	word32 ebx_114 = ecx
	branch Mem0[0x10031000:word32] <=u 0x00000005 l10014F6E
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32)

l10014F35:
	word32 eax_66 = fn1000C54F(0x10031000, 0x00000000, 0x00002000, out edx)
	byte al_67 = (byte) eax_66
	branch al_67 == 0x00 l10014F6E
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10014F6E:
	Mem55[ecx + 0x00000008:word32] = Mem0[ecx + 0x00000008:word32] & 0x00000000
	esp_112 = fp - 0x0000000C
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx ecx:0x10031000 eax:<invalid> al:<invalid> edx:<invalid> -20(fp):0x00000000 -16(fp):0x00002000 -12(fp):edi -8(fp):esi -4(fp):ebx

l10014F4A:
	word32 esp_77
	byte SCZO_78
	word32 ebx_79
	word32 esi_80
	word32 edi_81
	word32 ecx_82
	byte CZ_83
	byte al_84
	byte SZO_85
	byte C_86
	byte Z_87
	word32 eax_88
	word32 edx_89
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 24)
		uses: al_67,C_71,CZ_4,dwLoc04_7,dwLoc08_10,dwLoc0C_13,dwLoc10_74,dwLoc14_76,dwLoc18,dwLoc1C,eax_66,ebx_15,ecx_64,edi,edx_65,esi_72,esp_75,SCZO_3,SZO_69,Z_70
		defs: al_84,C_86,CZ_83,eax_88,ebx_79,ecx_82,edi_81,edx_89,esi_80,esp_77,SCZO_78,SZO_85,Z_87
	Mem97[ebx_79 + 0x00000018:word32] = Mem0[esi_80:word32]
	Mem101[ebx_79 + 0x0000001C:word32] = Mem97[esi_80 + 0x00000004:word32]
	Mem105[ebx_79 + 0x00000020:word32] = Mem101[esi_80 + 0x00000008:word32]
	Mem109[ebx_79 + 0x00000024:word32] = Mem105[esi_80 + 0x0000000C:word32]
	byte SCZO_113
	word32 esi_115
	word32 edi_116
	word32 ecx_117
	byte CZ_118
	byte al_119
	byte SZO_120
	byte C_121
	byte Z_122
	word32 eax_123
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 32)
		uses: al_84,C_86,CZ_83,dwLoc04_7,dwLoc08_10,dwLoc0C_13,dwLoc10_74,dwLoc14_76,dwLoc18_93,dwLoc1C_95,eax_90,ebx_79,ecx_82,edi_111,edx_89,esi_110,esp_94,SCZO_78,SZO_85,Z_87
		defs: al_119,C_121,CZ_118,eax_123,ebx_114,ecx_117,edi_116,edx_124,esi_115,esp_112,SCZO_113,SZO_120,Z_122
	Mem125[ebx_114 + 0x00000004:byte] = 0x01
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx ecx:0x10031000 eax:<invalid> al:<invalid> edx:<invalid> -20(fp):0x00000000 -16(fp):0x00002000 -12(fp):edi -8(fp):esi -4(fp):ebx

l10014F72:
	word32 edi_37
	*ediOut = Mem0[esp_112:word32]
	Mem41[ebx_114:word32] = 0x00000001
	word32 ebx_42
	*ebxOut = Mem41[esp_112 + 0x00000008:word32]
	return edx
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebx:ecx ecx:<invalid> esi:0x10031018 eax:<invalid> edi:ecx + 0x00000028 al:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn10014F27_exit:
// DataOut: ebx edi edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edi:<invalid> al:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn10014F7C(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: esp
fn10014F7C_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10014F7C:
	word32 eax_10
	branch Mem0[ecx + 0x00000004:byte] == 0x00 l10014F99
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10014F83:
	eax_10 = ecx + 0x00000018
	branch Mem0[ecx + 0x00000018:word32] != 0x00000000 l10014F9B
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000

l10014F8A:
	branch Mem0[ecx + 0x0000001C:word32] != 0x00000000 l10014F9B
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:ecx + 0x00000018

l10014F8F:
	branch Mem0[ecx + 0x00000020:word32] != 0x00000000 l10014F9B
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:ecx + 0x00000018

l10014F94:
	branch Mem0[ecx + 0x00000024:word32] != 0x00000000 l10014F9B
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:ecx + 0x00000018

l10014F99:
	eax_10 = 0x00000000
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:ecx + 0x00000018

l10014F9B:
	return eax_10
// DataOut: cs ds eax ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:<invalid>

fn10014F7C_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edx:0x00000000 eax:<invalid>



word32 fn10015089(word32 ecx, word32 edx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut: ecx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn10015089_entry:
	*esiOut = esi
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015089:
	word32 ebp_108 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebx_113 = ecx
	word32 esp_121 = fp - 0x00000014
	word32 edi_107 = Mem0[dwArg04:word32]
	branch Mem0[ecx:word32] == edi_107 l100150CC
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100150A7:
	branch edi_107 == 0x00000000 l100150BD
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100150AB:
	word32 esp_92
	word32 edi_93
	word32 ebp_94
	word32 ecx_95
	word32 eax_96
	byte SZO_97
	byte C_98
	word32 ebx_99
	byte SCZO_100
	byte Z_101
	word32 esi_102
	word32 edx_103
	selector es_104
	selector ds_105
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_63,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_24,dwLoc18_87,dwLoc1C_89,eax_85,ebp_7,ebx_22,ecx_91,edi_25,edx,es,esi_90,esp_88,SCZO_26,SZO_61,Z_62
		defs: C_98,ds_105,eax_96,ebp_94,ebx_99,ecx_95,edi_93,edx_103,es_104,esi_102,esp_92,SCZO_100,SZO_97,Z_101
	word32 esp_106
	word32 ecx_109
	word32 eax_110
	byte SZO_111
	byte C_112
	byte SCZO_114
	byte Z_115
	word32 esi_116
	word32 edx_117
	call esi_102 (retsize: 4; depth: 4)
		uses: C_98,ds_105,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_24,dwLoc18_87,dwLoc1C_89,eax_96,ebp_94,ebx_99,ecx_95,edi_93,edx_103,es_104,esi_102,esp_92,SCZO_100,SZO_97,Z_101
		defs: C_112,ds_119,eax_110,ebp_108,ebx_113,ecx_109,edi_107,edx_117,es_118,esi_116,esp_106,SCZO_114,SZO_111,Z_115
	esi = Mem0[esp_106:word32]
	esp_121 = esp_106 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100150BD:
	Mem80[ebx_113:word32] = edi_107
	word32 ecx_81
	fn1000F276(fp - 0x0000000C, ebx_113, esi, edi_107, es, ds, out ecx_81, out edx, out esi)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100150CC:
	word32 ecx_55
	fn1002F420(ebx_113, eax_15 ^ fp - 0x00000004, edx, Mem0[esp_121 + 0x00000004:word32], ebp_108, esi, Mem0[esp_121:word32], es, ds, out ecx_55)
	return ecx_55
// DataOut: cs ds ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10015089_exit:
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn100150E0(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
fn100150E0_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100150E0:
	word32 esi_11 = ecx
	branch Mem0[ecx:word32] == 0x00000000 l1001510F
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100150EC:
	word32 edi_40 = 0x00000000
	branch Mem0[ecx + 0x00000004:word32] <=u 0x00000000 l10015104
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi esi:ecx ebx:0x00000000 -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100150F4:
	word32 edx_62
	fn1000C640(Mem0[esi_11:word32] + edi_40 * 0x00000004, 0x00000000, esi_11, edi_40, es, ds, out edx_62, out esi_11)
	edi_40 = edi_40 + 0x00000001
	branch edi_40 <u Mem0[esi_11 + 0x00000004:word32] l100150F4
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10015104:
	CoTaskMemFree(Mem0[esi_11:word32])
	Mem53[esi_11:word32] = 0x00000000
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1001510F:
	Mem32[esi_11 + 0x00000004:word32] = 0x00000000
	Mem33[esi_11 + 0x0000000C:word32] = 0x00000000
	return
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn100150E0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ebx:ebx eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn10015118(word32 ecx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es esi fs gs ss
// LiveOut: edi edx esi
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10015118_entry:
	*esiOut = esi
// DataOut: bx cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015118:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edx_20 = Mem0[dwArg04:word32]
	Mem21[ecx:word32] = edx_20
	word32 ebp_40 = fp - 0x00000004
	word32 esp_17 = fp - 0x0000000C
	word32 edi_19 = ecx
	branch edx_20 == 0x00000000 l10015148
// DataOut: bx cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l10015136:
	word32 esp_63
	word32 edi_64
	word32 ebp_65
	word32 ecx_66
	word32 eax_67
	byte SZO_68
	byte C_69
	word32 edx_70
	byte Z_71
	word32 esi_72
	word32 ebx_73
	selector es_74
	selector ds_75
	call Mem21[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_24,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_18,dwLoc10_58,dwLoc14_60,eax_56,ebp_7,ebx,ecx_62,edi_19,edx_20,es,esi_61,esp_59,SZO_22,Z_23
		defs: C_69,ds_75,eax_67,ebp_65,ebx_73,ecx_66,edi_64,edx_70,es_74,esi_72,esp_63,SZO_68,Z_71
	word32 esp_76
	word32 ecx_79
	word32 eax_80
	byte SZO_81
	byte C_82
	byte Z_84
	word32 esi_85
	call esi_72 (retsize: 4; depth: 4)
		uses: C_69,ds_75,dwLoc04_6,dwLoc08_14,dwLoc0C_18,dwLoc10_58,dwLoc14_60,eax_67,ebp_65,ebx_73,ecx_66,edi_64,edx_70,es_74,esi_72,esp_63,SZO_68,Z_71
		defs: C_82,ds_88,eax_80,ebp_78,ebx_86,ecx_79,edi_77,edx_83,es_87,esi_85,esp_76,SZO_81,Z_84
	*esiOut = Mem21[esp_76:word32]
	esp_17 = esp_76 + 0x00000004
// DataOut: bx cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10015148:
	word32 edi_47 = Mem21[esp_17:word32]
	*ediOut = edi_47
	word32 ecx_49
	fn1002F420(edi_19, eax_13 ^ fp - 0x00000004, edx_20, ebx, ebp_40, esi, edi_47, es, ds, out ecx_49)
	return edx_20
// DataOut: bx cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn10015118_exit:
// DataOut: edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



word32 fn1001524F(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx rax rbx rcx rdi rdx
// Preserved: edi esi esp
fn1001524F_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001524F:
	word32 edx_12 = fn10010735(ecx, edx, es, ds)
	Mem16[ecx + 0x00000018:word32] = 0x00000001
	Mem17[ecx:word32] = 0x1000148C
	branch Mem0[0x10031478:word32] == 0x00000000 l10015276
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001526F:
	__lock()
	Mem26[0x1003147C:word32] = Mem17[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -4(fp):esi

l10015276:
	return edx_12
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -4(fp):esi

fn1001524F_exit:
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> esi:esi eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -4(fp):esi



word32 fn10015369(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esi esp
fn10015369_entry:
// DataOut: cs ds ebp ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015369:
	word32 edx_18 = Mem0[ecx + 0x00000004:word32]
	branch edx_18 != 0xFFFFFFFF l10015391
// DataOut: cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015371:
	word32 edx_24 = Mem0[ecx:word32]
	branch edx_24 == 0x00000000 l1001538F
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid>
// LocalsOut: fp(32)

l1001538F:
	edx_18 = 0x00000000
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid>

l10015377:
	edx_35 = edx_24
// DataOut: cs ds ebp ecx edi edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid>

l1001537D:
	word32 edx_35
	edx_35 = edx_48 + 0x00000002
	word32 edx_48 = edx_35
	branch Mem0[edx_48:word16] != 0x0000 l1001537D
// DataOut: cs ds ebp ecx edi edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edx:<invalid> ecx:<invalid> esi:0x00000000 ax:<invalid> -4(fp):esi

l10015388:
	edx_18 = edx_35 - (edx_24 + 0x00000002) >> 0x00000001
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edx:<invalid> ecx:<invalid> esi:0x00000000 ax:<invalid> -4(fp):esi

l10015391:
	return edx_18
// DataOut: cs ds eax ebp edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> ecx:<invalid> esi:esi ax:<invalid> -4(fp):esi

fn10015369_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edx:<invalid> eax:<invalid> ecx:<invalid> esi:esi ax:<invalid> -4(fp):esi



word32 fn10015489(word32 edx, word32 ebp, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10015489_entry:
	*edxOut = edx
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015489:
	Mem26[edx:word32] = Mem0[edx:word32] & 0x00000000
	word32 eax_29 = fn1002FF3B(0x0000003C)
	word32 esi_30 = eax_29
	branch eax_29 == 0x00000000 l100154CE
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l100154CE:
	esi_30 = 0x00000000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l100154A8:
	Mem88[eax_29 + 0x00000004:word32] = 0x00000001
	Mem89[eax_29:word32] = 0x10001488
	Mem90[eax_29 + 0x00000008:word32] = 0x00000000
	Mem91[eax_29 + 0x00000024:byte] = 0x00
	Mem92[eax_29 + 0x00000028:word32] = 0x00000000
	Mem93[eax_29 + 0x0000002C:word32] = 0x00000000
	Mem94[eax_29 + 0x00000030:word32] = 0x00000000
	Mem95[eax_29 + 0x00000034:word32] = 0x00000000
	Mem96[eax_29 + 0x00000038:byte] = 0x00
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l100154D0:
	word32 edi_44 = (0x00000000 - (-esi_30 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch esi_30 == 0x00000000 l10015501
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l100154E6:
	Mem69[fp - 0x00000018:word32] = Mem26[fp - 0x00000008:word32]
	word32 edx_74
	word32 eax_75 = fn10015713(esi_30, es, ds, dwArg00, out edx_74)
	edi_44 = eax_75
	branch eax_75 < 0x00000000 l100154FA
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

l100154FA:
	fn1000CEF1(esi_30, edx_74, edx, esi_30, es, ds)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

l100154F6:
	Mem81[edx:word32] = esi_30
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

l10015501:
	return edi_44
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:edx esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn10015489_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -24(fp):0x0000003C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



word32 fn1001550A(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx rax rcx rdi rdx
// Preserved: ebp edi esi esp
fn1001550A_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0040(32)

l1001550A:
	word32 eax_34
	__align(fp - 0x00000004)
	word32 edi_3 = edi
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000030
	eax_34 = eax_11
	branch Mem0[ecx:word32] <=u 0x00000005 l1001554C
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0034(32) Local -0040(32)

l10015528:
	eax_34 = fn1000C54F(ecx, 0x00000000, 0x00002000, out edx)
	branch (byte) eax_34 == 0x00 l1001554C
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:edx -52(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0034(32)

l10015538:
	word32 ecx_72
	word32 esi_74
	eax_34 = fn1000C491(ecx, 0x10007D2F, edx, 0x00000000, 0x00000002, fp - 0x0000002C, out ecx_72, out edx, out esi_74, out edi_3)
// DataOut: cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:edx al:<invalid> edx:<invalid> -60(fp):0x00000000 -56(fp):0x00002000 -52(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0034(32)

l1001554C:
	word32 ecx_44
	return fn1002F420(eax_34, eax_11 ^ fp - 0x00000030, edx, ebx, fp - 0x00000004, esi, edi_3, es, ds, out ecx_44)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ecx:<invalid> -68(fp):0x10007D2F -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1001550A_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:esi ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):0x10007D2F -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):esi -8(fp):<invalid> -4(fp):ebp



void fn100155D0(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebx edi esi esp
fn100155D0_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100155D0:
	word32 esi_11 = ecx
	word32 edi_15 = 0x00000000
	branch Mem0[ecx + 0x00000004:word32] <=u 0x00000000 l100155F4
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100155E0:
	word32 ecx_49 = Mem0[Mem0[esi_11:word32] + edi_15 * 0x00000004:word32]
	branch ecx_49 == 0x00000000 l100155EE
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100155E9:
	esi_11 = fn1000CEF1(ecx_49, edx, 0x00000000, esi_11, es, ds)
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100155EE:
	edi_15 = edi_15 + 0x00000001
	branch edi_15 <u Mem0[esi_11 + 0x00000004:word32] l100155E0
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100155F4:
	branch Mem0[esi_11:word32] == 0x00000000 l10015602
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100155F8:
	CoTaskMemFree(Mem0[esi_11:word32])
	Mem44[esi_11:word32] = 0x00000000
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10015602:
	Mem34[esi_11 + 0x00000004:word32] = 0x00000000
	Mem35[esi_11 + 0x0000000C:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn100155D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ebx:ebx eax:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn1001560C(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1001560C_entry:
// DataOut: bl cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001560C:
	word32 eax_30
	word32 edx_18 = Mem0[ecx + 0x00000004:word32]
	*edxOut = edx_18
	branch dwArg04 <u edx_18 l10015626
// DataOut: bl cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015626:
	branch dwArg04 == edx_18 - 0x00000001 l1001564A
// DataOut: bl cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001562D:
	word32 edx_60 = edx_18 - dwArg04
	*edxOut = edx_60
	word32 ecx_61 = Mem0[ecx:word32] + dwArg04 * 0x00000004
	memmove(ecx_61, ecx_61 + 0x00000004, edx_60 * 0x00000004 + 0xFFFFFFFC)
// DataOut: bl cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx edx:<invalid> eax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001564A:
	Mem55[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] - 0x00000001
	eax_30 = 0x00000000
// DataOut: bl cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx edx:<invalid> eax:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001561F:
	eax_30 = 0x80028CA1
// DataOut: bl cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001564F:
	return eax_30
// DataOut: bl cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx edx:<invalid> eax:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn1001560C_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> eax:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn10015655(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10015655_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015655:
	word32 eax_127 = 0x8007007A
	branch dwArg04 >u 0xFFFFFFFE l1001570C
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10015671:
	word32 ecx_56 = Mem0[ecx + 0x0000000C:word32]
	eax_127 = 0x00000000
	branch dwArg04 <=u ecx_56 l1001570B
// DataOut: cs ds eax ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:0x8007007A -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10015681:
	word32 ecx_89
	word32 edx_90
	eax_127 = fn10010416(ecx_56, 0x00000002, fp - 0x0000000C, out ecx_89, out edx_90)
	branch eax_127 < 0x00000000 l1001570B
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:0x00000000 ecx:<invalid> ebx:0x00000000 -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10015691:
	word32 ecx_101 = Mem0[ecx + 0x0000000C:word32]
	word32 esi_106 = ecx
	branch ecx - ecx_101 <=u 0x00001000 l100156AC
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> -28(fp):0x00000002 -24(fp):fp - 0x0000000C -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156A6:
	esi_106 = ecx_101 + 0x00001000
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:ecx -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156AC:
	word32 eax_107 = dwArg04
	branch dwArg04 >u esi_106 l100156B4
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156B2:
	eax_107 = esi_106
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156B4:
	branch eax_107 <=u 0xFFFFFFFE l100156BE
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156BE:
	branch dwArg04 <=u esi_106 l100156C4
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156C2:
	esi_106 = dwArg04
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156B9:
	esi_106 = 0xFFFFFFFE
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156C4:
	word32 ecx_125
	word32 edx_126
	eax_127 = fn10010416(esi_106, 0x00000004, fp - 0x00000008, out ecx_125, out edx_126)
	branch eax_127 < 0x00000000 l1001570A
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:ecx esi:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100156D8:
	word32 eax_152 = CoTaskMemRealloc(Mem0[ecx:word32], ecx)
	branch eax_152 == 0x00000000 l100156FC
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> esi:<invalid> -32(fp):0x00000004 -28(fp):fp - 0x00000008 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32)

l100156FC:
	eax_127 = 0x8007000E
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100156EC:
	word32 edx_181
	eax_127 = fn1000CE99(0x01, fp - 0x0000000C, eax_152, es, ds, ecx, out edx_181)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10015701:
	branch eax_127 < 0x00000000 l1001570A
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10015705:
	Mem168[ecx + 0x0000000C:word32] = esi_106
	Mem169[ecx:word32] = eax_152
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001570A:
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001570B:
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001570C:
	return eax_127
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ebx edx:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp

fn10015655_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> ebx:ebx edx:<invalid> esi:esi -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):ecx -4(fp):ebp



word32 fn10015713(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10015713_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015713:
	word32 edi_40
	Mem20[ecx + 0x00000008:word32] = dwArg04
	__lock()
	Mem22[dwArg04 + 0x00000004:word32] = Mem20[dwArg04 + 0x00000004:word32] + 0x00000001
	branch InitializeCriticalSectionAndSpinCount(ecx + 0x0000000C, 0x00000000) == 0x00000000 l10015757
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015757:
	edi_40 = fn10015AC3()
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:ecx + 0x0000000C -24(fp):ecx + 0x0000000C -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10015737:
	word32 edx_58
	word32 eax_59 = fn10015655(ecx + 0x00000028, es, ds, 0x00000008, out edx_58)
	edi_40 = eax_59
	branch eax_59 < 0x00000000 l1001574E
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:ecx + 0x0000000C -24(fp):ecx + 0x0000000C -20(fp):0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1001574E:
	DeleteCriticalSection(ecx + 0x0000000C)
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:ecx + 0x0000000C ecx:<invalid> edx:<invalid> -24(fp):0x00000008 -20(fp):ecx -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10015748:
	Mem65[ecx + 0x00000024:byte] = 0x01
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:ecx + 0x0000000C ecx:<invalid> edx:<invalid> -24(fp):0x00000008 -20(fp):ecx -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1001575E:
	return edi_40
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:ecx + 0x0000000C ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn10015713_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



byte fn10015767(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, byte bArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: al ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0008(8)
fn10015767_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(8)

l10015767:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	EnterCriticalSection(ecx + 0x0000000C)
	word32 eax_31 = Mem0[ecx + 0x0000002C:word32]
	word32 ebp_130 = fp - 0x00000004
	byte bl_149 = 0x00
	word32 edi_209 = 0x00000000
	word32 dwLoc0C_218 = eax_31
	branch eax_31 <= 0x00000000 l100157D8
// DataOut: bl cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32) Stack +0008(8)

l10015799:
	branch bArg08 == 0x00 l100157B8
// DataOut: bl cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157B8:
	branch Mem0[ecx + 0x00000038:byte] != 0x00 l100157D5
// DataOut: bl cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157D5:
	dwLoc0C_218 = 0x00000000
// DataOut: bl cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157BD:
	branch Mem0[ecx + 0x0000002C:word32] <=u 0x00000000 l100157D8
// DataOut: bl cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157C5:
	edi_209 = Mem0[Mem0[ecx + 0x00000028:word32]:word32]
	branch edi_209 == 0x00000000 l100157D8
// DataOut: bl cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 ecx:ecx + 0x00000028 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157CD:
	fn1001560C(ecx + 0x00000028, 0x00000000, out edx)
// DataOut: bl cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 ecx:ecx + 0x00000028 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l1001579E:
	*edxOut = eax_31 - 0x00000001
	branch eax_31 - 0x00000001 >=u Mem0[ecx + 0x0000002C:word32] l100157D8
// DataOut: bl cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157D8:
	LeaveCriticalSection(ecx + 0x0000000C)
	word32 eax_132 = ecx + 0x0000000C
	word32 esp_128 = fp - 0x0000001C
	branch edi_209 == 0x00000000 l10015804
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 edx:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l100157E6:
	word32 esp_158
	word32 edi_159
	word32 ebp_160
	byte SCZO_161
	word32 eax_162
	byte SZO_163
	byte C_164
	word32 ebx_165
	word32 esi_166
	word32 ecx_167
	byte bl_168
	byte Z_169
	word32 edx_170
	byte al_171
	byte CZ_172
	selector es_173
	selector ds_174
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: al_32,bl_22,C_51,CZ_40,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_39,dwLoc10_25,dwLoc14_15,dwLoc18_18,dwLoc1C_24,dwLoc20_155,eax_151,ebp_7,ebx_21,ecx_157,edi_43,edx_41,es,esi_156,esp_154,SCZO_42,SZO_49,Z_50
		defs: al_171,bl_168,C_164,CZ_172,ds_174,eax_162,ebp_160,ebx_165,ecx_167,edi_159,edx_170,es_173,esi_166,esp_158,SCZO_161,SZO_163,Z_169
	word32 edi_177
	byte SCZO_179
	byte SZO_181
	byte C_182
	word32 ebx_183
	word32 esi_184
	word32 ecx_185
	byte Z_187
	byte al_189
	byte CZ_190
	call esi_166 (retsize: 4; depth: 4)
		uses: al_171,bl_168,C_164,CZ_172,ds_174,dwLoc04_6,dwLoc08_12,dwLoc0C_39,dwLoc10_25,dwLoc14_15,dwLoc18_18,dwLoc1C_24,dwLoc20_155,eax_162,ebp_160,ebx_165,ecx_175,edi_159,edx_170,es_173,esi_166,esp_158,SCZO_161,SZO_163,Z_169
		defs: al_189,bl_186,C_182,CZ_190,ds_192,eax_180,ebp_178,ebx_183,ecx_185,edi_177,edx_188,es_191,esi_184,esp_176,SCZO_179,SZO_181,Z_187
	fn1000CEF1(edi_177, edx, ebx_183, esi_184, es, ds)
// DataOut: bl cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 edx:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0)

l10015804:
	branch dwLoc0C_218 <= 0x00000001 l10015825
// DataOut: bl cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001580A:
	word32 esp_110
	word32 edi_111
	word32 ebp_112
	byte SCZO_113
	word32 eax_114
	byte SZO_115
	byte C_116
	word32 ebx_117
	word32 esi_118
	word32 ecx_119
	byte bl_120
	byte Z_121
	word32 edx_122
	byte al_123
	byte CZ_124
	selector es_125
	selector ds_126
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_107,bl_64,C_62,CZ_57,ds_55,dwLoc04_6,dwLoc08_12,dwLoc0C_39,dwLoc10_25,dwLoc14_15,dwLoc18_18,dwLoc1C_24,dwLoc20_54,eax_106,ebp_68,ebx_63,ecx_109,edi_105,edx_58,es_56,esi_108,esp_69,SCZO_70,SZO_71,Z_59
		defs: al_123,bl_120,C_116,CZ_124,ds_126,eax_114,ebp_112,ebx_117,ecx_119,edi_111,edx_122,es_125,esi_118,esp_110,SCZO_113,SZO_115,Z_121
	word32 edi_129
	byte SCZO_131
	byte SZO_133
	byte C_134
	word32 ebx_135
	word32 esi_136
	word32 ecx_137
	byte bl_138
	byte Z_139
	byte al_141
	byte CZ_142
	call esi_118 (retsize: 4; depth: 4)
		uses: al_123,bl_120,C_116,CZ_124,ds_126,dwLoc04_6,dwLoc08_12,dwLoc0C_39,dwLoc10_25,dwLoc14_15,dwLoc18_18,dwLoc1C_24,dwLoc20_54,eax_114,ebp_112,ebx_117,ecx_127,edi_111,edx_122,es_125,esi_118,esp_110,SCZO_113,SZO_115,Z_121
		defs: al_141,bl_138,C_134,CZ_142,ds_144,eax_132,ebp_130,ebx_135,ecx_137,edi_129,edx_140,es_143,esi_136,esp_128,SCZO_131,SZO_133,Z_139
	bl_149 = al_141 == 0x00
// DataOut: bl cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10015825:
	word32 esp_86 = esp_128 + 0x00000004
	word32 edi_85 = Mem0[esp_128:word32]
	*ediOut = edi_85
	word32 esi_87 = Mem0[esp_86:word32]
	*esiOut = esi_87
	word32 ebx_92 = Mem0[esp_86 + 0x00000004:word32]
	*ebxOut = ebx_92
	word32 ecx_95
	return (byte) fn1002F420(DPB(eax_132, bl_149, 0), eax_11 ^ fp - 0x00000004, edx, ebx_92, ebp_130, esi_87, edi_85, es, ds, out ecx_95)
// DataOut: al cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:Test(EQ,Z) edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10015767_exit:
// DataOut: al ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:<invalid> al:Test(EQ,Z) edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100157A9:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 edx:<invalid> ecx:ecx + 0x00000028 -32(fp):ecx + 0x0000000C -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001583A(word32 ecx, byte bl, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl ecx
// LiveOut: edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1001583A_entry:
// DataOut: bl cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001583A:
	word32 eax_23 = ecx
	word32 esi_25 = 0x00000000
	word32 dwLoc08_28 = 0x00000004
// DataOut: bl cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l10015852:
	byte dl_34 = Mem0[eax_23:byte]
	byte bh_35 = Mem0[eax_23 + 0x00000001:byte]
	word32 edx_44 = (word32) Mem0[eax_23 + 0x00000002:byte]
	Mem46[esi_25 + dwArg04:byte] = Mem0[((word32) dl_34 >>u 0x00000002) + 0x10003EB0:byte]
	esi_25 = esi_25 + 0x00000004
	Mem55[esi_25 - 0x00000003 + dwArg04:byte] = Mem46[((word32) ((dl_34 & 0x03) << 0x04) | (word32) bh_35 >>u 0x00000004) + 0x10003EB0:byte]
	Mem67[esi_25 - 0x00000002 + dwArg04:byte] = Mem55[((word32) ((bh_35 & 0x0F) << 0x02) | edx_44 >>u 0x00000006) + 0x10003EB0:byte]
	Mem69[esi_25 - 0x00000001 + dwArg04:byte] = Mem67[(edx_44 & 0x0000003F) + 0x10003EB0:byte]
	word32 v17_62 = dwLoc08_28 - 0x00000001
	dwLoc08_28 = v17_62
	eax_23 = eax_23 + 0x00000003
	branch v17_62 != 0x00000000 l10015852
// DataOut: bl cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100158C0:
	Mem72[esi_25 + dwArg04:byte] = 0x00
	return edx_44 & 0x0000003F
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> dl:<invalid> bh:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001583A_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi dl:<invalid> bh:<invalid> bl:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ebx:ebx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100158CD(word32 ecx, word32 edx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn100158CD_entry:
	*edxOut = edx
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100158CD:
	word32 ebx_128
	Mem32[ecx:word32] = 0x00000000
	word32 ebx_33
	word32 esi_35
	word32 edi_122
	word32 ebp_123
	word32 eax_37 = fn1002FF64(0x00000000, esi, edi, out ebx_33, out ebp_123, out esi_35, out edi_122)
	word32 esi_162 = eax_37
	word32 esp_121 = fp - 0x00000014
	branch eax_37 != 0x00000000 l10015904
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10015904:
	edx = fn10015A31(eax_37, edx, es, ds, out ebx_128)
	*edxOut = edx
	Mem77[eax_37:word32] = 0x10001564
	Mem79[fp - 0x00000018:word32] = eax_37 + 0x00000020
	Mem80[eax_37 + 0x00000004:word32] = 0x10001540
	InitializeSRWLock(Mem80[fp - 0x00000018:PSRWLOCK])
	Mem82[eax_37 + 0x00000024:word32] = ebx_128
	Mem83[eax_37 + 0x00000028:word32] = ebx_128
	Mem84[eax_37 + 0x0000002C:word32] = ebx_128
	Mem85[eax_37 + 0x00000030:word32] = ebx_128
	esp_121 = fp - 0x00000014
	branch eax_37 == 0x00000000 l10015944
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -28(fp):0x00000034 -24(fp):0x10002F5C -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10015932:
	Mem136[fp - 0x00000018:word32] = edi_122
	Mem138[fp - 0x0000001C:word32] = eax_37
	word32 esp_141
	word32 edi_142
	word32 ebp_143
	word32 ecx_144
	word32 eax_145
	byte SZO_146
	byte C_147
	word32 ebx_148
	word32 esi_149
	byte Z_150
	word32 edx_151
	selector es_152
	selector ds_153
	call Mem138[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_88,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_31,dwLoc10_19,dwLoc14_26,dwLoc18_28,dwLoc1C_30,eax_134,ebp_34,ebx_74,ecx_140,edi_139,edx_75,es,esi_38,esp_137,SZO_86,Z_87
		defs: C_147,ds_153,eax_145,ebp_143,ebx_148,ecx_144,edi_142,edx_151,es_152,esi_149,esp_141,SZO_146,Z_150
	word32 esp_154
	word32 edi_155
	word32 ecx_157
	word32 eax_158
	byte SZO_159
	byte C_160
	byte Z_163
	call edi_142 (retsize: 4; depth: 4)
		uses: C_147,ds_153,dwLoc04_6,dwLoc08_16,dwLoc0C_31,dwLoc10_19,dwLoc14_26,dwLoc18_28,dwLoc1C_30,eax_145,ebp_143,ebx_148,ecx_144,edi_142,edx_151,es_152,esi_149,esp_141,SZO_146,Z_150
		defs: C_160,ds_166,eax_158,ebp_156,ebx_161,ecx_157,edi_155,edx_164,es_165,esi_162,esp_154,SZO_159,Z_163
	edi_122 = Mem138[esp_154:word32]
	esp_121 = esp_154 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000034 -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10015944:
	word32 eax_98 = Mem85[ebp_123 - 0x00000008:word32]
	Mem99[eax_98:word32] = esi_162
	branch esi_162 == 0x00000000 l1001595D
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001594D:
	word32 esp_104 = esp_121 - 0x00000004
	Mem105[esp_104:word32] = esi_162
	word32 esp_108
	word32 edi_109
	word32 ebp_110
	word32 ecx_111
	word32 eax_112
	byte SZO_113
	byte C_114
	word32 ebx_115
	word32 esi_116
	byte Z_117
	word32 edx_118
	selector es_119
	selector ds_120
	call Mem105[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_102,ds_89,dwLoc04_6,dwLoc08_16,dwLoc0C_31,dwLoc10_19,dwLoc14_26,dwLoc18_28,dwLoc1C_30,eax_98,ebp_96,ebx_94,ecx_107,edi_92,edx_91,es_90,esi_106,esp_104,SZO_100,Z_101
		defs: C_114,ds_120,eax_112,ebp_110,ebx_115,ecx_111,edi_109,edx_118,es_119,esi_116,esp_108,SZO_113,Z_117
	word32 ecx_124
	word32 eax_125
	byte SZO_126
	byte C_127
	word32 esi_129
	byte Z_130
	call esi_116 (retsize: 4; depth: 4)
		uses: C_114,ds_120,dwLoc04_6,dwLoc08_16,dwLoc0C_31,dwLoc10_19,dwLoc14_26,dwLoc18_28,dwLoc1C_30,eax_112,ebp_110,ebx_115,ecx_111,edi_109,edx_118,es_119,esi_116,esp_108,SZO_113,Z_117
		defs: C_127,ds_133,eax_125,ebp_123,ebx_128,ecx_124,edi_122,edx_131,es_132,esi_129,esp_121,SZO_126,Z_130
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l100158FD:
	ebx_128 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -28(fp):0x00000034 -24(fp):0x10002F5C -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001595D:
	word32 ecx_63
	return fn1002F420(ebx_128, Mem32[ebp_123 - 0x00000004:word32] ^ ebp_123, edx, Mem32[esp_121 + 0x00000004:word32], ebp_123, Mem32[esp_121:word32], edi_122, es, ds, out ecx_63)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn100158CD_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1001596F(word32 ecx, word32 edx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi edx es esi fs gs ss
// LiveOut: eax ecx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1001596F_entry:
// DataOut: cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001596F:
	word32 esi_153
	Mem28[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 ebx_31
	word32 esi_33
	word32 edi_155
	word32 ebp_149
	word32 eax_35 = fn1002FF64(ecx, esi, edi, out ebx_31, out ebp_149, out esi_33, out edi_155)
	Mem37[ebp_149 - 0x00000008:word32] = eax_35
	word32 esp_156 = fp - 0x0000001C
	branch eax_35 != 0x00000000 l100159A9
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l100159A9:
	Mem77[fp - 0x00000020:word32] = edi_155
	word32 ebx_79
	word32 edx_80 = fn1001524F(eax_35, edx, es, ds, out ebx_79)
	word32 eax_81 = Mem77[ebp_149 - 0x00000008:word32]
	Mem86[ebp_149 - 0x00000010:word32] = eax_81
	Mem87[eax_81 + 0x0000001C:word32] = 0x00000000
	Mem89[eax_81:word32] = 0x10001510
	Mem90[eax_81 + 0x00000020:word32] = 0x00000000
	Mem92[eax_81 + 0x00000024:word32] = Mem90[0x100075F8:word32]
	Mem96[eax_81 + 0x00000028:word32] = Mem92[0x100075FC:word32]
	Mem100[eax_81 + 0x0000002C:word32] = Mem96[0x10007600:word32]
	Mem104[eax_81 + 0x00000030:word32] = Mem100[0x10007604:word32]
	Mem107[eax_81 + 0x00000034:word16] = 0x0000
	Mem108[eax_81 + 0x00000038:word32] = 0x00000000
	Mem112[fp - 0x00000024:word32] = (word32) Mem108[Mem108[ebp_149 + 0x00000010:word32]:byte]
	word32 ecx_113 = Mem112[ebp_149 + 0x00000008:word32]
	Mem116[fp - 0x00000028:word32] = Mem112[ebp_149 + 0x0000000C:word32]
	Mem119[fp - 0x0000002C:word32] = Mem116[ecx_113:word32]
	Mem123[fp - 0x00000030:word32] = Mem119[Mem119[ebp_149 - 0x0000000C:word32]:word32]
	word32 edi_130
	word32 ebx_129
	word32 eax_131 = fn100133FA(eax_81, edx_80, 0x10007608, es, ds, dwArg00, dwArg04, dwArg08, bArg0C, out ebx_129, out edi_130)
	word32 esp_132 = fp - 0x00000020
	word32 esi_133 = eax_131
	branch eax_131 < 0x00000000 l10015A14
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):0x0000003C -32(fp):0x10002F5C -28(fp):esi -24(fp):ebx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100159F9:
	word32 esi_157 = Mem123[ebp_149 - 0x00000008:word32]
	branch esi_157 == 0x00000000 l10015A10
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10015A00:
	Mem181[fp - 0x00000024:word32] = esi_157
	word32 esp_184
	word32 edi_185
	word32 ebp_186
	byte SCZO_187
	word32 eax_188
	byte SZO_189
	byte C_190
	word32 ebx_191
	word32 esi_192
	word32 ecx_193
	word32 edx_194
	byte Z_195
	word16 cx_196
	byte S_197
	selector es_198
	selector ds_199
	call Mem181[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_160,cx,ds,dwLoc04_6,dwLoc08_12,dwLoc10_22,dwLoc18_15,dwLoc1C_18,dwLoc20_24,dwLoc24_26,eax_179,ebp_32,ebx_129,ecx_183,edi_182,edx_80,es,esi_157,esp_180,S_135,SCZO,SZO_158,Z_159
		defs: C_190,cx_196,ds_199,eax_188,ebp_186,ebx_191,ecx_193,edi_185,edx_194,es_198,esi_192,esp_184,S_197,SCZO_187,SZO_189,Z_195
	byte SCZO_203
	word32 eax_204
	byte SZO_205
	byte C_206
	word32 ecx_209
	word32 edx_210
	byte Z_211
	word16 cx_212
	byte S_213
	call edi_185 (retsize: 4; depth: 4)
		uses: C_190,cx_196,ds_199,dwLoc04_6,dwLoc08_12,dwLoc10_22,dwLoc18_15,dwLoc1C_18,dwLoc20_24,dwLoc24_26,eax_188,ebp_186,ebx_191,ecx_193,edi_185,edx_194,es_198,esi_192,esp_184,S_197,SCZO_187,SZO_189,Z_195
		defs: C_206,cx_212,ds_215,eax_204,ebp_202,ebx_207,ecx_209,edi_201,edx_210,es_214,esi_208,esp_200,S_213,SCZO_203,SZO_205,Z_211
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10015A10:
	Mem175[ebx_129:word32] = esi_157
	esi_133 = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10015A14:
	fn1000C640(ebp_149 - 0x00000010, ebx_129, esi_133, edi_130, es, ds, out edx, out esi_153)
	edi_155 = Mem123[esp_132:word32]
	esp_156 = esp_132 + 0x00000004
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100159A2:
	esi_153 = 0x8007000E
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):0x0000003C -32(fp):0x10002F5C -28(fp):esi -24(fp):ebx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10015A1D:
	word32 ecx_65
	return fn1002F420(esi_153, Mem37[ebp_149 - 0x00000004:word32] ^ ebp_149, edx, Mem37[esp_156 + 0x00000004:word32], ebp_149, Mem37[esp_156:word32], edi_155, es, ds, out ecx_65)
// DataOut: cs ds eax ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001596F_exit:
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10015A31(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn10015A31_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015A31:
	word32 edx_15 = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem19[ecx + 0x0000001C:word32] = 0x00000001
	Mem20[ecx:word32] = 0x10001470
	Mem21[ecx + 0x00000004:word32] = 0x10001540
	branch Mem0[0x10031478:word32] == 0x00000000 l10015A63
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015A5C:
	__lock()
	Mem32[0x1003147C:word32] = Mem21[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l10015A63:
	return edx_15
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn10015A31_exit:
// DataOut: ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ecx:<invalid> eax:<invalid> esi:esi ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn10015AAA(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn10015AAA_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015AAA:
	Mem5[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	return CoCreateInstance(0x100075E8, 0x00000000, 0x00000001, 0x10003F20, ecx)
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10015AAA_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -20(fp):0x100075E8 -16(fp):0x00000000 -12(fp):0x00000001 -8(fp):0x10003F20 -4(fp):ecx



word32 fn10015AC3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn10015AC3_entry:
// DataOut: bl cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10015AC3:
	word32 eax_11 = GetLastError()
	word16 ax_3 = (word16) eax_11
	branch eax_11 <= 0x00000000 l10015AD5
// DataOut: ax bl cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10015ACD:
	eax_11 = (word32) ax_3 | 0x80070000
// DataOut: bl cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

l10015AD5:
	return eax_11
// DataOut: bl cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>

fn10015AC3_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid>



void fn10015AD6(word32 ecx, word16 dx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx ecx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0004(32)
// Terminates process
fn10015AD6_entry:
// DataOut: cs ds dx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015AD6:
	fn10015B47(ecx)
	branch dwArg04 != 0x00000000 l10015AF5
// DataOut: cs ds dx ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// Terminates process

l10015AF5:
	Mem59[fp - 0x0000001C:word32] = (word32) dx
	Mem61[fp - 0x00000020:word32] = ecx
	Mem62[dwArg04:byte] = 0x00
	Mem65[fp - 0x00000024:word32] = Mem62[ecx + 0x00000090:word32]
	Mem67[fp - 0x00000028:word32] = dwArg04
	branch memcpy_s(Mem67[fp - 0x00000028:(ptr void)], Mem67[fp - 0x00000024:rsize_t], Mem67[fp - 0x00000020:(ptr void)], Mem67[fp - 0x0000001C:rsize_t]) != 0x00000000 l10015B3C
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: edi:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp

l10015B12:
	Mem75[fp - 0x0000001C:word32] = Mem67[fp - 0x00000008:word32]
	word32 ecx_76 = Mem75[ecx + 0x00000084:word32]
	word32 eax_78 = Mem75[ecx + 0x00000090:word32] - ecx_76
	Mem81[fp - 0x00000020:word32] = 0x10003F80
	Mem83[fp - 0x00000024:word32] = eax_78
	word32 eax_84 = ecx_76 + dwArg04
	Mem86[fp - 0x00000028:word32] = eax_84
	word32 esp_88
	word32 edi_89
	word32 ebp_90
	word32 ecx_91
	word32 ebx_92
	word32 esi_93
	word32 eax_94
	byte SZO_95
	byte C_96
	byte Z_97
	byte bl_98
	word16 dx_99
	byte SCZO_100
	byte al_101
	call msvcrt.dll!sprintf_s (retsize: 4; depth: 4)
		uses: al,bl_57,C_72,dwLoc04_6,dwLoc08_25,dwLoc0C_12,dwLoc10_15,dwLoc14_18,dwLoc18_20,dx,eax_84,ebp_7,ebx_56,ecx_76,edi_23,esi_21,esp_85,SCZO_79,SZO_70,Z_71
		defs: al_101,bl_98,C_96,dx_99,eax_94,ebp_90,ebx_92,ecx_91,edi_89,esi_93,esp_88,SCZO_100,SZO_95,Z_97
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: edi:<invalid> eax:<invalid> ebx:0x00000000 esp:esp - 0x00000068 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp

l10015AF1:
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: edi:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp

l10015B3C:
	return
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: edi:<invalid> bl:<invalid> eax:<invalid> ebx:<invalid> esp:<invalid> ecx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp

fn10015AD6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: edi:<invalid> bl:<invalid> eax:<invalid> ebx:<invalid> esp:ebp + 0x00000004 esi:<invalid> al:<invalid> ebp:<invalid> ecx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp



void fn10015B47(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn10015B47_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn10015B47_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015B47:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp

l10015B64:
	__lock()
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:ecx + 0x00000088 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):ecx -8(fp):ecx + 0x00000088 -4(fp):ebp



void fn10015C5D(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10015C5D_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015C5D:
	word32 esi_13 = Mem0[ecx + 0x00000050:word32]
	word32 esi_14 = esi_13 - 0x00000002
	branch esi_13 < 0x00000002 l10015C95
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015C6B:
	word32 ecx_46 = dwArg04
	word32 edi_47 = esi_13 - 0x00000002 << 0x00000004
// DataOut: ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10015C78:
	branch Mem0[Mem0[ecx + 0x0000004C:word32] + 0x00000004 + edi_47:word32] != ecx_46 l10015C8B
// DataOut: ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:ecx + 0x0000004C ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10015C80:
	word32 edx_75
	fn1001DCB9(ecx + 0x0000004C, esi_14, out edx_75)
	ecx_46 = dwArg04
// DataOut: ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:ecx + 0x0000004C ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10015C8B:
	edi_47 = edi_47 - 0x00000010
	esi_14 = esi_14 - 0x00000001
	branch esi_14 >= 0x00000000 l10015C78
// DataOut: ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:ecx + 0x0000004C ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l10015C93:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:ecx + 0x0000004C ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10015C95:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ebx:ebx ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp

fn10015C5D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ebx:ebx ecx:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):ebx -8(fp):esi -4(fp):ebp



word32 fn10015C9A(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10015C9A_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10015C9A:
	Mem23[ecx + 0x00000030:word32] = Mem0[dwArg04:word32]
	Mem28[ecx + 0x00000034:word32] = Mem23[dwArg04 + 0x00000004:word32]
	Mem32[ecx + 0x00000038:word32] = Mem28[dwArg04 + 0x00000008:word32]
	Mem36[ecx + 0x0000003C:word32] = Mem32[dwArg04 + 0x0000000C:word32]
	Mem40[ecx + 0x00000040:word32] = Mem36[dwArg04 + 0x00000010:word32]
	word32 ecx_42 = Mem40[dwArg04 + 0x00000014:word32]
	Mem45[ecx + 0x0000002C:word32] = ecx_42
	Mem46[ecx + 0x00000044:word32] = dwArg08
	word32 eax_47 = CoTaskMemAlloc(ecx_42)
	word32 ecx_49 = Mem46[ecx + 0x00000028:word32]
	Mem52[ecx + 0x00000028:word32] = Mem46[ecx + 0x00000028:word32] & 0x00000000
	CoTaskMemFree(ecx_49)
	Mem58[ecx + 0x00000028:word32] = eax_47
	word32 esi_61 = 0x00000000 - (-eax_47 == 0x00000000)
	branch eax_47 == 0x00000000 l10015CFE
// DataOut: cs ds eax edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10015CEC:
	memcpy(eax_47, Mem58[dwArg04 + 0x00000018:word32], Mem58[dwArg04 + 0x00000014:word32])
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000044 ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10015CFE:
	return (esi_61 & 0x7FF8FFF2) + 0x8007000E
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000044 ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> esi:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn10015C9A_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx ecx:<invalid> eax:<invalid> esi:esi -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn10015DDD(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10015DDD_entry:
// DataOut: bx cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10015DDD:
	word32 esi_12 = dwArg08
// DataOut: bx cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10015DEA:
	esi_12 = esi_73 + 0x00000002
	word32 esi_73 = esi_12
	branch Mem0[esi_73:word16] != 0x0000 l10015DEA
// DataOut: bx cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10015DF5:
	word32 eax_31
	word16 ax_32
	word32 esi_23 = esi_12 - (dwArg08 + 0x00000002)
	branch esi_23 >> 0x00000001 >=u 0x7FFFFFFF l10015E18
// DataOut: bx cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10015E18:
	eax_31 = 0x00000216
	ax_32 = 0x0216 (alias)
// DataOut: ax bx cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10015E01:
	eax_31 = fn1001137D(ecx, edx, dwArg04, 0x00000001, dwArg08, (esi_23 >> 0x00000001) * 0x00000002 + 0x00000002)
	ax_32 = (word16) eax_31 (alias)
// DataOut: ax bx cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10015E1D:
	branch eax_31 <= 0x00000000 l10015E2B
// DataOut: ax bx cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ax:<invalid> eax:<invalid> -28(fp):<invalid> -24(fp):0x00000001 -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

l10015E23:
	eax_31 = (word32) ax_32 | 0x80070000
// DataOut: bx cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 esi:esi ax:<invalid> eax:<invalid> -28(fp):<invalid> -24(fp):0x00000001 -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

l10015E2B:
	return eax_31
// DataOut: bx cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 esi:esi ax:<invalid> eax:<invalid> -28(fp):<invalid> -24(fp):0x00000001 -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn10015DDD_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ax:<invalid> eax:<invalid> -28(fp):<invalid> -24(fp):0x00000001 -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn10015E2F(word32 ecx, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: ebx esi esp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi
fn10015E2F_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015E2F:
	word32 edx_9
	fn10015F5E(ecx, out edx_9)
	fn1000F2EE(ecx + 0x00000014)
	word32 esp_17 = fp - 0x00000004
	branch Mem0[ecx + 0x00000010:word32] == 0x00000000 l10015E4F
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015E47:
	fn1001DFDA(Mem0[ecx + 0x00000010:word32])
	esp_17 = fp - 0x00000008
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> -4(fp):esi

l10015E4F:
	word32 esi_18
	*esiOut = Mem0[esp_17:word32]
	return ebx
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi

fn10015E2F_exit:
// DataOut: ebx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn10015E51(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10015E51_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0028(32) Stack +0004(32) Stack +0008(32)

l10015E51:
	word32 edx_27
	fn1000F30D(ecx + 0x00000014, dwArg04, 0xFFFFFFFF, out edx_27)
	Mem33[ecx:word32] = 0x000003E8
	Mem36[ecx + 0x00000020:word32] = Mem33[dwArg08:word32]
	Mem40[ecx + 0x00000024:word32] = Mem36[dwArg08 + 0x00000004:word32]
	Mem44[ecx + 0x00000028:word32] = Mem40[dwArg08 + 0x00000008:word32]
	Mem48[ecx + 0x0000002C:word32] = Mem44[dwArg08 + 0x0000000C:word32]
	word32 ebp_68
	word32 esi_69
	word32 edi_70
	word32 ebx_71 = fn1001D989(ecx + 0x00000010, CreateThreadpoolTimer(0x10015ED0, ecx, 0x00000000), out ebp_68, out esi_69, out edi_70)
	branch Mem48[esi_69:word32] == edi_70 l10015EB5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10015EA7:
	Mem90[fp - 0x00000020:word32] = edi_70
	Mem92[fp - 0x00000024:word32] = edi_70
	Mem95[fp - 0x00000028:word32] = ebp_68 - 0x00000008
	Mem98[fp - 0x0000002C:word32] = Mem95[esi_69:word32]
	SetThreadpoolTimer(Mem98[fp - 0x0000002C:PTP_TIMER], Mem98[fp - 0x00000028:PFILETIME], Mem98[fp - 0x00000024:DWORD], Mem98[fp - 0x00000020:DWORD])
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> -40(fp):0x10015ED0 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):0xFF676980 -8(fp):<invalid> -4(fp):ebp

l10015EB5:
	Mem78[fp - 0x00000020:word32] = ebx_71 + 0x00000008
	QueryPerformanceCounter(Mem78[fp - 0x00000020:(ptr LARGE_INTEGER)])
	return edx_27
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):0xFF676980 -8(fp):<invalid> -4(fp):ebp

fn10015E51_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):0xFF676980 -8(fp):<invalid> -4(fp):ebp



word32 fn10015F5E(word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn10015F5E_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32)

l10015F5E:
	QueryPerformanceCounter(fp - 0x00000014)
	QueryPerformanceFrequency(fp - 0x0000001C)
	ui64 eax_edx_37 = SEQ(dwLoc10, dwLoc14 - Mem0[ecx + 0x00000008:word32]) - Mem0[ecx + 0x00000008:ui64]
	word32 edx_49
	word32 eax_50 = fn100301D0((word32) eax_edx_37, SLICE(eax_edx_37, word32, 32), 0x000003E8, 0x00000000, out edx_49)
	word32 edx_64
	word32 eax_65 = fn10030120(eax_50, edx_49, dwLoc1C, dwLoc18, out edx_64)
	branch Mem0[ecx + 0x00000010:word32] == 0x00000000 l10015FEE
// DataOut: cs ds eax ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0034(32)

l10015FB4:
	word32 ebx_95 = Mem0[ecx + 0x00000010:word32]
	branch ebx_95 == 0x00000000 l10015FD0
// DataOut: cs ds ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0034(32)

l10015FBB:
	word32 eax_129 = GetLastError()
	fn1001DFDA(ebx_95)
	SetLastError(eax_129)
// DataOut: cs ds edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10015FD0:
	Mem103[ecx + 0x00000010:word32] = Mem0[ecx + 0x00000010:word32] & 0x00000000
	fn1000F2EE(ecx + 0x00000014)
	Mem114[ecx + 0x00000020:word32] = Mem103[0x100075F8:word32]
	Mem118[ecx + 0x00000024:word32] = Mem114[0x100075FC:word32]
	Mem122[ecx + 0x00000028:word32] = Mem118[0x10007600:word32]
	Mem126[ecx + 0x0000002C:word32] = Mem122[0x10007604:word32]
// DataOut: cs ds eax ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10015FEE:
	word32 edx_88
	*edxOut = edx_64
	return eax_65
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:0x10007608 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10015F5E_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10015FF7(word32 ecx, word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi edx es fs gs ss
// LiveOut: ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
fn10015FF7_entry:
// DataOut: cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10015FF7:
	__align(fp - 0x00000004)
	word32 edx_137
	word32 eax_40 = fn100158CD(fp - 0x000006F0, edx, ecx, edi, es, ds, out edx_137)
	word32 ebp_129 = fp - 0x00000004
	word32 esp_127 = fp - 0x000006FC
	word32 ebx_134 = eax_40
	branch eax_40 < 0x00000000 l1001659F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l10016047:
	Mem149[fp - 0x00000700:word32] = fp - 0x000006CC
	Mem151[fp - 0x00000704:word32] = ecx
	word32 esp_156
	word32 edi_157
	word32 ebp_158
	byte SCZO_159
	word32 eax_160
	byte SZO_161
	byte C_162
	word32 ebx_163
	word32 esi_164
	word32 ecx_165
	word32 edx_166
	byte S_167
	byte CZ_168
	byte Z_169
	byte al_170
	word16 ax_171
	word16 cx_172
	selector es_173
	selector ds_174
	call Mem151[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al,ax,C_44,cx_154,CZ,ds,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_146,ebp_7,ebx_41,ecx_153,edi_3,edx_39,es,esi_152,esp_150,S_43,SCZO,SZO_42,Z
		defs: al_170,ax_171,C_162,cx_172,CZ_168,ds_174,eax_160,ebp_158,ebx_163,ecx_165,edi_157,edx_166,es_173,esi_164,esp_156,S_167,SCZO_159,SZO_161,Z_169
	word32 edi_176
	word32 ebp_177
	byte SCZO_178
	word32 eax_179
	byte SZO_180
	byte C_181
	word32 ebx_182
	word32 esi_183
	word32 ecx_184
	word32 edx_185
	byte S_186
	byte CZ_187
	byte Z_188
	byte al_189
	word16 ax_190
	word16 cx_191
	selector es_192
	selector ds_193
	word32 esp_1027
	call esi_164 (retsize: 4; depth: 4)
		uses: al_170,ax_171,C_162,cx_172,CZ_168,ds_174,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_160,ebp_158,ebx_163,ecx_165,edi_157,edx_166,es_173,esi_164,esp_156,S_167,SCZO_159,SZO_161,Z_169
		defs: al_189,ax_190,C_181,cx_191,CZ_187,ds_193,eax_179,ebp_177,ebx_182,ecx_184,edi_176,edx_185,es_192,esi_183,esp_175,S_186,SCZO_178,SZO_180,Z_188
	Mem196[esp_1027 + 0x0000007C:word32] = eax_179
	Mem197[esp_1027 + 0x00000060:word32] = 0x00000000
	Mem198[esp_1027 + 0x00000064:word32] = 0x00000000
	Mem199[esp_1027 + 0x00000068:word32] = 0x00000000
	Mem200[esp_1027 + 0x0000006C:word32] = 0x00000000
	Mem201[esp_1027 + 0x00000070:word32] = 0x00000000
	Mem202[esp_1027 + 0x00000074:word32] = 0x00000000
	branch eax_179 < 0x00000000 l100162CA
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016084:
	Mem906[esp_1027 - 0x00000004:word32] = ecx_184
	Mem908[esp_1027 + 0x00000017:byte] = 0x01
	Mem910[esp_1027 - 0x00000008:word32] = esp_1027 + 0x000002E0
	Mem912[esp_1027 - 0x0000000C:word32] = 0x10003F84
	word32 ecx_915
	fn1001328F(0x80000002, 0x10002F60, dwArg00, dwArg04, out ecx_915)
	Mem922[esp_1027 + 0x00000054:word32] = 0x00000000
	Mem923[esp_1027 + 0x00000058:word32] = 0x00000000
	Mem924[esp_1027 + 0x0000005C:word32] = 0x00000000
	fn1000F2EE(esp_1027 + 0x00000054)
	Mem926[esp_1027 + 0x00000058:word32] = Mem924[esp_1027 + 0x00000058:word32] | 0xFFFFFFFF
	Mem930[esp_1027 + 0x0000005C:word32] = Mem926[esp_1027 + 0x0000005C:word32] | 0xFFFFFFFF
	fn1002A01B(esp_1027 + 0x00000054, 0x10002F60, ebp_177, esi_183, es_192, ds_193)
	word32 edi_1050 = 0x00000000
	branch Mem930[esp_1027 + 0x00000030:word32] <=u 0x00000000 l100162C1
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100160DE:
	word32 ebx_1024 = Mem930[esp_1027 + 0x0000001C:word32]
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100160E6:
	Mem964[esp_1027 + 0x00000010:word32] = 0x00000000
	word32 eax_965 = esp_1027 + 0x00000010
	word32 esp_966 = esp_1027 - 0x00000004
	Mem967[esp_966:word32] = eax_965
	Mem969[esp_966 - 0x00000004:word32] = edi_1050
	Mem972[esp_966 - 0x00000008:word32] = ebx_1024
	word32 esp_973
	word32 edi_974
	word32 ebp_975
	byte SCZO_976
	word32 eax_977
	byte SZO_978
	byte C_979
	word32 ebx_980
	word32 esi_981
	word32 ecx_982
	word32 edx_983
	byte S_984
	byte CZ_985
	byte Z_986
	byte al_987
	word16 ax_988
	word16 cx_989
	selector es_990
	selector ds_991
	call Mem972[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_934,ax_935,C_932,cx_191,CZ_938,ds_193,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_965,ebp_177,ebx_960,ecx_970,edi_959,edx_913,es_192,esi_963,esp_971,S_204,SCZO_937,SZO_931,Z_188
		defs: al_987,ax_988,C_979,cx_989,CZ_985,ds_991,eax_977,ebp_975,ebx_980,ecx_982,edi_974,edx_983,es_990,esi_981,esp_973,S_984,SCZO_976,SZO_978,Z_986
	word32 ebp_994
	byte SCZO_995
	word32 eax_996
	byte SZO_997
	byte C_998
	word32 esi_1000
	word32 ecx_1001
	word32 edx_1002
	byte S_1003
	byte CZ_1004
	byte Z_1005
	byte al_1006
	word16 ax_1007
	word16 cx_1008
	word32 edi_1022
	selector ds_1010
	selector es_1009
	call Mem972[esi_981 + 0x00000018:word32] (retsize: 4; depth: 4)
		uses: al_987,ax_988,C_979,cx_989,CZ_985,ds_991,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_977,ebp_975,ebx_980,ecx_982,edi_974,edx_983,es_990,esi_981,esp_973,S_984,SCZO_976,SZO_978,Z_986
		defs: al_1006,ax_1007,C_998,cx_1008,CZ_1004,ds_1010,eax_996,ebp_994,ebx_999,ecx_1001,edi_993,edx_1002,es_1009,esi_1000,esp_992,S_1003,SCZO_995,SZO_997,Z_1005
	branch eax_996 < 0x00000000 l10016294
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016107:
	Mem1108[esp_1027 + 0x00000078:word32] = Mem972[esp_1027 + 0x00000010:word32]
	Mem1113[esp_1027 + 0x00000018:word32] = 0x00000000
	Mem1115[esp_1027 - 0x00000004:word32] = esp_1027 + 0x00000017
	Mem1118[esp_1027 - 0x00000008:word32] = esp_1027 + 0x00000018
	word32 esi_1121
	branch fn1001E04E(esp_1027 + 0x00000054, ebp_994, edi_1022, es_1009, ds_1010, dwArg00, out ebx_1024, out esi_1121, out edi_1022) < 0x00000000 l1001628B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016137:
	word32 ecx_1148 = Mem1118[esp_1027 + 0x00000038:word32]
	Mem1152[esp_1027 + 0x00000024:word32] = 0x00000000
	Mem1153[esp_1027 + 0x00000028:word32] = 0x00000000
	Mem1154[esp_1027 + 0x0000002C:word32] = 0x00000000
	Mem1157[esp_1027 - 0x00000004:word32] = ecx_1148
	word32 esp_1160
	word32 edi_1161
	word32 ebp_1162
	byte SCZO_1163
	word32 eax_1164
	byte SZO_1165
	byte C_1166
	word32 ebx_1167
	word32 esi_1168
	word32 ecx_1169
	word32 edx_1170
	byte S_1171
	byte CZ_1172
	byte Z_1173
	byte al_1174
	word16 ax_1175
	word16 cx_1176
	selector es_1177
	selector ds_1178
	call Mem1157[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1006,ax_1007,C_1151,cx_1008,CZ_1004,ds_1010,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1155,ebp_994,ebx_1120,ecx_1159,edi_1122,edx_1107,es_1009,esi_1158,esp_1156,S_1126,SCZO_995,SZO_1150,Z_1005
		defs: al_1174,ax_1175,C_1166,cx_1176,CZ_1172,ds_1178,eax_1164,ebp_1162,ebx_1167,ecx_1169,edi_1161,edx_1170,es_1177,esi_1168,esp_1160,S_1171,SCZO_1163,SZO_1165,Z_1173
	byte SCZO_1182
	word32 eax_1183
	byte SZO_1184
	byte C_1185
	word32 ebx_1186
	word32 esi_1187
	word32 ecx_1188
	word32 edx_1189
	byte S_1190
	byte CZ_1191
	byte Z_1192
	byte al_1193
	word16 ax_1194
	word16 cx_1195
	word32 edi_1180
	word32 ebp_1181
	word32 esp_1179
	call esi_1168 (retsize: 4; depth: 4)
		uses: al_1174,ax_1175,C_1166,cx_1176,CZ_1172,ds_1178,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1164,ebp_1162,ebx_1167,ecx_1169,edi_1161,edx_1170,es_1177,esi_1168,esp_1160,S_1171,SCZO_1163,SZO_1165,Z_1173
		defs: al_1193,ax_1194,C_1185,cx_1195,CZ_1191,ds_1197,eax_1183,ebp_1181,ebx_1186,ecx_1188,edi_1180,edx_1189,es_1196,esi_1187,esp_1179,S_1190,SCZO_1182,SZO_1184,Z_1192
	branch eax_1183 == 0x00000000 l10016275
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016161:
	word32 esi_1226 = Mem1157[esp_1179 + 0x00000010:word32]
	fn1000F2EE(esp_1179 + 0x00000024)
	Mem1229[esp_1179 + 0x00000028:word32] = Mem1157[esp_1179 + 0x00000028:word32] | 0xFFFFFFFF
	Mem1233[esp_1179 + 0x0000002C:word32] = Mem1229[esp_1179 + 0x0000002C:word32] | 0xFFFFFFFF
	Mem1238[esp_1179 - 0x00000004:word32] = esp_1179 + 0x00000024
	Mem1240[esp_1179 - 0x00000008:word32] = esi_1226
	word32 esp_1243
	word32 edi_1244
	word32 ebp_1245
	byte SCZO_1246
	word32 eax_1247
	byte SZO_1248
	byte C_1249
	word32 ebx_1250
	word32 esi_1251
	word32 ecx_1252
	word32 edx_1253
	byte S_1254
	byte CZ_1255
	byte Z_1256
	byte al_1257
	word16 ax_1258
	word16 cx_1259
	selector es_1260
	selector ds_1261
	call Mem1240[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1193,ax_1194,C_1235,cx_1195,CZ_1191,ds_1197,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1236,ebp_1181,ebx_1186,ecx_1242,edi_1180,edx_1189,es_1196,esi_1241,esp_1239,S_1190,SCZO_1182,SZO_1234,Z_1199
		defs: al_1257,ax_1258,C_1249,cx_1259,CZ_1255,ds_1261,eax_1247,ebp_1245,ebx_1250,ecx_1252,edi_1244,edx_1253,es_1260,esi_1251,esp_1243,S_1254,SCZO_1246,SZO_1248,Z_1256
	byte SCZO_1265
	word32 eax_1266
	byte SZO_1267
	byte C_1268
	word32 ebx_1269
	word32 esi_1270
	word32 ecx_1271
	word32 edx_1272
	byte S_1273
	byte CZ_1274
	byte Z_1275
	byte al_1276
	word16 ax_1277
	word16 cx_1278
	call esi_1251 (retsize: 4; depth: 4)
		uses: al_1257,ax_1258,C_1249,cx_1259,CZ_1255,ds_1261,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1247,ebp_1245,ebx_1250,ecx_1252,edi_1244,edx_1253,es_1260,esi_1251,esp_1243,S_1254,SCZO_1246,SZO_1248,Z_1256
		defs: al_1276,ax_1277,C_1268,cx_1278,CZ_1274,ds_1280,eax_1266,ebp_1264,ebx_1269,ecx_1271,edi_1263,edx_1272,es_1279,esi_1270,esp_1262,S_1273,SCZO_1265,SZO_1267,Z_1275
	branch eax_1266 < 0x00000000 l10016275
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016195:
	word32 esi_1284 = Mem1240[esp_1179 + 0x00000024:word32]
	branch esi_1284 != 0x00000000 l100161A2
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001619D:
	esi_1284 = 0x10003338
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100161A2:
	Mem1294[esp_1179 - 0x00000004:word32] = 0x00000000
	Mem1296[esp_1179 - 0x00000008:word32] = 0xFFFFFFFF
	Mem1298[esp_1179 - 0x0000000C:word32] = esp_1179 + 0x000002E0
	Mem1302[esp_1179 - 0x00000010:word32] = fn10015369(esp_1179 + 0x00000024)
	Mem1304[esp_1179 - 0x00000014:word32] = esi_1284
	branch CompareStringOrdinal(Mem1304[esp_1179 - 0x00000014:LPCWSTR], Mem1304[esp_1179 - 0x00000010:int32], Mem1304[esp_1179 - 0x0000000C:LPCWSTR], Mem1304[esp_1179 - 0x00000008:int32], Mem1304[esp_1179 - 0x00000004:BOOL]) != 0x00000002 l10016275
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100161C9:
	word32 esi_1309 = Mem1304[esp_1179 + 0x00000018:word32]
	Mem1314[esp_1179 + 0x00000048:word32] = 0x00000000
	Mem1315[esp_1179 + 0x0000004C:word32] = 0x00000000
	Mem1316[esp_1179 + 0x00000050:word32] = 0x00000000
	fn1000F2EE(esp_1179 + 0x00000048)
	Mem1318[esp_1179 + 0x0000004C:word32] = Mem1316[esp_1179 + 0x0000004C:word32] | 0xFFFFFFFF
	Mem1322[esp_1179 + 0x00000050:word32] = Mem1318[esp_1179 + 0x00000050:word32] | 0xFFFFFFFF
	Mem1327[esp_1179 - 0x00000004:word32] = esp_1179 + 0x00000048
	Mem1329[esp_1179 - 0x00000008:word32] = esi_1309
	word32 esp_1332
	word32 edi_1333
	word32 ebp_1334
	byte SCZO_1335
	word32 eax_1336
	byte SZO_1337
	byte C_1338
	word32 ebx_1339
	word32 esi_1340
	word32 ecx_1341
	word32 edx_1342
	byte S_1343
	byte CZ_1344
	byte Z_1345
	byte al_1346
	word16 ax_1347
	word16 cx_1348
	selector es_1349
	selector ds_1350
	call Mem1329[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1276,ax_1277,C_1324,cx_1278,CZ_1274,ds_1280,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1325,ebp_1264,ebx_1269,ecx_1331,edi_1263,edx_1272,es_1279,esi_1330,esp_1328,S_1282,SCZO_1307,SZO_1323,Z_1308
		defs: al_1346,ax_1347,C_1338,cx_1348,CZ_1344,ds_1350,eax_1336,ebp_1334,ebx_1339,ecx_1341,edi_1333,edx_1342,es_1349,esi_1340,esp_1332,S_1343,SCZO_1335,SZO_1337,Z_1345
	word32 esp_1351
	word32 edi_1352
	word32 ebp_1353
	byte SCZO_1354
	word32 eax_1355
	byte SZO_1356
	byte C_1357
	word32 ebx_1358
	word32 esi_1359
	word32 ecx_1360
	word32 edx_1361
	byte S_1362
	byte CZ_1363
	byte Z_1364
	byte al_1365
	word16 ax_1366
	word16 cx_1367
	selector es_1368
	selector ds_1369
	call esi_1340 (retsize: 4; depth: 4)
		uses: al_1346,ax_1347,C_1338,cx_1348,CZ_1344,ds_1350,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1336,ebp_1334,ebx_1339,ecx_1341,edi_1333,edx_1342,es_1349,esi_1340,esp_1332,S_1343,SCZO_1335,SZO_1337,Z_1345
		defs: al_1365,ax_1366,C_1357,cx_1367,CZ_1363,ds_1369,eax_1355,ebp_1353,ebx_1358,ecx_1360,edi_1352,edx_1361,es_1368,esi_1359,esp_1351,S_1362,SCZO_1354,SZO_1356,Z_1364
	branch eax_1355 < 0x00000000 l10016216
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016207:
	Mem1453[esp_1351 - 0x00000004:word32] = 0xFFFFFFFF
	Mem1456[esp_1351 - 0x00000008:word32] = Mem1453[esp_1351 + 0x00000048:word32]
	word32 edx_1458
	fn1000F30D(esp_1351 + 0x00000060, dwArg00, dwArg04, out edx_1458)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016216:
	word32 esi_1374 = Mem1329[esp_1351 + 0x00000018:word32]
	Mem1379[esp_1351 + 0x0000003C:word32] = 0x00000000
	Mem1380[esp_1351 + 0x00000040:word32] = 0x00000000
	Mem1381[esp_1351 + 0x00000044:word32] = 0x00000000
	fn1000F2EE(esp_1351 + 0x0000003C)
	Mem1383[esp_1351 + 0x00000040:word32] = Mem1381[esp_1351 + 0x00000040:word32] | 0xFFFFFFFF
	Mem1387[esp_1351 + 0x00000044:word32] = Mem1383[esp_1351 + 0x00000044:word32] | 0xFFFFFFFF
	Mem1392[esp_1351 - 0x00000004:word32] = esp_1351 + 0x0000003C
	Mem1394[esp_1351 - 0x00000008:word32] = esi_1374
	word32 esp_1397
	word32 edi_1398
	word32 ebp_1399
	byte SCZO_1400
	word32 eax_1401
	byte SZO_1402
	byte C_1403
	word32 ebx_1404
	word32 esi_1405
	word32 ecx_1406
	word32 edx_1407
	byte S_1408
	byte CZ_1409
	byte Z_1410
	byte al_1411
	word16 ax_1412
	word16 cx_1413
	selector es_1414
	selector ds_1415
	call Mem1394[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1365,ax_1366,C_1389,cx_1367,CZ_1363,ds_1369,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1390,ebp_1353,ebx_1358,ecx_1396,edi_1352,edx_1361,es_1368,esi_1395,esp_1393,S_1371,SCZO_1354,SZO_1388,Z_1364
		defs: al_1411,ax_1412,C_1403,cx_1413,CZ_1409,ds_1415,eax_1401,ebp_1399,ebx_1404,ecx_1406,edi_1398,edx_1407,es_1414,esi_1405,esp_1397,S_1408,SCZO_1400,SZO_1402,Z_1410
	word32 esp_1416
	byte SCZO_1419
	word32 eax_1420
	byte SZO_1421
	byte C_1422
	word32 ebx_1423
	word32 esi_1424
	word32 ecx_1425
	word32 edx_1426
	byte S_1427
	byte CZ_1428
	byte Z_1429
	byte al_1430
	word16 ax_1431
	word16 cx_1432
	call esi_1405 (retsize: 4; depth: 4)
		uses: al_1411,ax_1412,C_1403,cx_1413,CZ_1409,ds_1415,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1401,ebp_1399,ebx_1404,ecx_1406,edi_1398,edx_1407,es_1414,esi_1405,esp_1397,S_1408,SCZO_1400,SZO_1402,Z_1410
		defs: al_1430,ax_1431,C_1422,cx_1432,CZ_1428,ds_1434,eax_1420,ebp_1418,ebx_1423,ecx_1425,edi_1417,edx_1426,es_1433,esi_1424,esp_1416,S_1427,SCZO_1419,SZO_1421,Z_1429
	branch eax_1420 < 0x00000000 l10016263
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016254:
	Mem1444[esp_1416 - 0x00000004:word32] = 0xFFFFFFFF
	Mem1447[esp_1416 - 0x00000008:word32] = Mem1444[esp_1416 + 0x0000003C:word32]
	word32 edx_1449
	fn1000F30D(esp_1416 + 0x0000006C, dwArg00, dwArg04, out edx_1449)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016263:
	fn1000F2EE(esp_1416 + 0x0000003C)
	fn1000F2EE(esp_1416 + 0x00000048)
	esp_1179 = esp_1416
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016275:
	word32 esp_1218 = esp_1179 - 0x00000004
	Mem1219[esp_1218:word32] = Mem1157[esp_1179 + 0x00000018:word32]
	ebx_1024 = fn100233E3(Mem1219[esp_1218 + 0x00000010:word32], ebp_1181, edi_1180, es_1009, ds_1010, dwArg00, out esi_1121, out edi_1022)
	fn1000F2EE(esp_1218 + 0x00000028)
	esp_1027 = esp_1218 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001628B:
	word32 edx_1145
	word32 esi_1146
	fn1000C640(esp_1027 + 0x00000018, ebx_1024, esi_1121, edi_1022, es_1009, ds_1010, out edx_1145, out esi_1146)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016294:
	word32 ecx_1028 = Mem972[esp_1027 + 0x00000010:word32]
	branch ecx_1028 == 0x00000000 l100162B2
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001629C:
	Mem1062[esp_1027 + 0x00000010:word32] = 0x00000000
	word32 esp_1064 = esp_1027 - 0x00000004
	Mem1065[esp_1064:word32] = ecx_1028
	word32 esp_1068
	word32 edi_1069
	word32 ebp_1070
	byte SCZO_1071
	word32 eax_1072
	byte SZO_1073
	byte C_1074
	word32 ebx_1075
	word32 esi_1076
	word32 ecx_1077
	word32 edx_1078
	byte S_1079
	byte CZ_1080
	byte Z_1081
	byte al_1082
	word16 ax_1083
	word16 cx_1084
	selector es_1085
	selector ds_1086
	call Mem1065[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1017,ax_1016,C_1061,cx_1029,CZ_1018,ds_1014,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1063,ebp_1026,ebx_1024,ecx_1067,edi_1022,edx_1020,es_1015,esi_1066,esp_1064,S_1019,SCZO_1021,SZO_1060,Z_1031
		defs: al_1082,ax_1083,C_1074,cx_1084,CZ_1080,ds_1086,eax_1072,ebp_1070,ebx_1075,ecx_1077,edi_1069,edx_1078,es_1085,esi_1076,esp_1068,S_1079,SCZO_1071,SZO_1073,Z_1081
	word32 ebp_1089
	byte SCZO_1090
	word32 eax_1091
	byte SZO_1092
	byte C_1093
	word32 esi_1095
	word32 ecx_1096
	word32 edx_1097
	byte S_1098
	byte CZ_1099
	byte Z_1100
	byte al_1101
	word16 ax_1102
	word16 cx_1103
	selector es_1104
	selector ds_1105
	call esi_1076 (retsize: 4; depth: 4)
		uses: al_1082,ax_1083,C_1074,cx_1084,CZ_1080,ds_1086,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_1072,ebp_1070,ebx_1075,ecx_1077,edi_1069,edx_1078,es_1085,esi_1076,esp_1068,S_1079,SCZO_1071,SZO_1073,Z_1081
		defs: al_1101,ax_1102,C_1093,cx_1103,CZ_1099,ds_1105,eax_1091,ebp_1089,ebx_1094,ecx_1096,edi_1088,edx_1097,es_1104,esi_1095,esp_1087,S_1098,SCZO_1090,SZO_1092,Z_1100
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100162B2:
	edi_1050 = edi_1022 + 0x00000001
	branch edi_1050 <u Mem972[esp_1027 + 0x00000030:word32] l100160E4
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100160E4:
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100162BD:
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100162C1:
	fn1000F2EE(esp_1027 + 0x00000054)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100162CA:
	word32 eax_207 = Mem202[esp_1027 + 0x0000000C:word32]
	word32 edx_208 = esp_1027 + 0x00000020
	word32 esp_209 = esp_1027 - 0x00000004
	Mem210[esp_209:word32] = edx_208
	Mem212[esp_209 - 0x00000004:word32] = eax_207
	word32 esp_217
	word32 edi_218
	word32 ebp_219
	byte SCZO_220
	word32 eax_221
	byte SZO_222
	byte C_223
	word32 ebx_224
	word32 esi_225
	word32 ecx_226
	word32 edx_227
	byte S_228
	byte CZ_229
	byte Z_230
	byte al_231
	word16 ax_232
	word16 cx_233
	selector es_234
	selector ds_235
	call Mem212[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_189,ax_190,C_205,cx_216,CZ_187,ds_193,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_207,ebp_177,ebx_194,ecx_215,edi_176,edx_208,es_192,esi_214,esp_211,S_204,SCZO_178,SZO_203,Z_188
		defs: al_231,ax_232,C_223,cx_233,CZ_229,ds_235,eax_221,ebp_219,ebx_224,ecx_226,edi_218,edx_227,es_234,esi_225,esp_217,S_228,SCZO_220,SZO_222,Z_230
	word32 edi_237
	word32 ebp_238
	byte SCZO_239
	word32 eax_240
	byte SZO_241
	byte C_242
	word32 ebx_243
	word32 ecx_245
	word32 edx_246
	byte S_247
	byte CZ_248
	byte Z_249
	byte al_250
	word16 ax_251
	word16 cx_252
	selector es_253
	selector ds_254
	word32 esi_244
	word32 esp_236
	call esi_225 (retsize: 4; depth: 4)
		uses: al_231,ax_232,C_223,cx_233,CZ_229,ds_235,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_221,ebp_219,ebx_224,ecx_226,edi_218,edx_227,es_234,esi_225,esp_217,S_228,SCZO_220,SZO_222,Z_230
		defs: al_250,ax_251,C_242,cx_252,CZ_248,ds_254,eax_240,ebp_238,ebx_243,ecx_245,edi_237,edx_246,es_253,esi_244,esp_236,S_247,SCZO_239,SZO_241,Z_249
	branch Mem212[esp_236 + 0x00000034:word32] != 0x00000003 l10016367
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100162EA:
	branch Mem212[esp_236 + 0x00000020:word32] <=u 0x00000000 l10016367
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100162F1:
	word32 ebx_826
	word32 edi_824
	selector es_816
	selector ds_815
	Mem802[esp_236 - 0x00000004:word32] = 0x00000104
	Mem803[esp_236 + 0x00000010:word32] = 0x00000000
	Mem806[esp_236 - 0x00000008:word32] = esp_236 + 0x000000D8
	Mem808[esp_236 - 0x0000000C:word32] = 0x00000066
	Mem810[esp_236 - 0x00000010:word32] = 0x10000000
	ds_815 = ds_254
	es_816 = es_253
	edi_824 = edi_237
	ebx_826 = ebx_243
	branch LoadStringW(Mem810[esp_236 - 0x00000010:HINSTANCE], Mem810[esp_236 - 0x0000000C:UINT], Mem810[esp_236 - 0x00000008:LPWSTR], Mem810[esp_236 - 0x00000004:int32]) <= 0x00000000 l1001635E
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016315:
	Mem837[esp_236 - 0x00000004:word32] = esp_236 + 0x00000010
	Mem839[esp_236 - 0x00000008:word32] = ecx_245
	ds_815 = ds_254
	es_816 = es_253
	edi_824 = edi_237
	ebx_826 = ebx_243
	branch fn100234C0(Mem839[esp_236 + 0x0000000C:word32], edx_246, es_253, ds_254, dwArg04) < 0x00000000 l1001635E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016328:
	word32 esi_846 = Mem839[esp_236 + 0x00000010:word32]
	Mem849[esp_236 - 0x00000004:word32] = esp_236 + 0x000000D8
	Mem851[esp_236 - 0x00000008:word32] = esi_846
	word32 esp_855
	word32 edi_856
	word32 ebp_857
	byte SCZO_858
	word32 eax_859
	byte SZO_860
	byte C_861
	word32 ebx_862
	word32 esi_863
	word32 ecx_864
	word32 edx_865
	byte S_866
	byte CZ_867
	byte Z_868
	byte al_869
	word16 ax_870
	word16 cx_871
	selector es_872
	selector ds_873
	call Mem851[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_250,ax_251,C_845,cx_252,CZ_799,ds_254,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_852,ebp_238,ebx_243,ecx_854,edi_853,edx_246,es_253,esi_846,esp_850,S_844,SCZO_798,SZO_843,Z_256
		defs: al_869,ax_870,C_861,cx_871,CZ_867,ds_873,eax_859,ebp_857,ebx_862,ecx_864,edi_856,edx_865,es_872,esi_863,esp_855,S_866,SCZO_858,SZO_860,Z_868
	word32 esp_874
	word32 edi_875
	word32 ebp_876
	byte SCZO_877
	word32 eax_878
	byte SZO_879
	byte C_880
	word32 ecx_883
	word32 edx_884
	byte S_885
	byte CZ_886
	byte Z_887
	byte al_888
	word16 ax_889
	word16 cx_890
	call edi_856 (retsize: 4; depth: 4)
		uses: al_869,ax_870,C_861,cx_871,CZ_867,ds_873,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_859,ebp_857,ebx_862,ecx_864,edi_856,edx_865,es_872,esi_863,esp_855,S_866,SCZO_858,SZO_860,Z_868
		defs: al_888,ax_889,C_880,cx_890,CZ_886,ds_892,eax_878,ebp_876,ebx_881,ecx_883,edi_875,edx_884,es_891,esi_882,esp_874,S_885,SCZO_877,SZO_879,Z_887
	Mem895[esp_874 - 0x00000004:word32] = esi_244 + 0x00000054
	AcquireSRWLockExclusive(Mem895[esp_874 - 0x00000004:PSRWLOCK])
	Mem898[esi_244 + 0x00000058:byte] = 0x00
	edi_824 = esi_244 + 0x00000054
	esp_236 = esp_874
	branch esi_244 == 0x00000054 l1001635E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016357:
	Mem903[esp_874 - 0x00000004:word32] = esi_244 + 0x00000054
	ReleaseSRWLockExclusive(Mem903[esp_874 - 0x00000004:PSRWLOCK])
	esp_236 = esp_874
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001635E:
	word32 edx_832
	word32 esi_833
	fn1000C640(esp_236 + 0x00000010, ebx_826, esi_244, edi_824, es_816, ds_815, out edx_832, out esi_833)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016367:
	word32 ecx_258 = Mem212[esp_236 + 0x0000001C:word32]
	word32 edx_259 = esp_236 + 0x00000080
	word32 esp_260 = esp_236 - 0x00000004
	Mem261[esp_260:word32] = edx_259
	Mem263[esp_260 - 0x00000004:word32] = ecx_258
	word32 esp_267
	word32 edi_268
	word32 ebp_269
	byte SCZO_270
	word32 eax_271
	byte SZO_272
	byte C_273
	word32 ebx_274
	word32 esi_275
	word32 ecx_276
	word32 edx_277
	byte S_278
	byte CZ_279
	byte Z_280
	byte al_281
	word16 ax_282
	word16 cx_283
	selector es_284
	selector ds_285
	call Mem263[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_250,ax_251,C_242,cx_252,CZ_248,ds_254,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_264,ebp_238,ebx_243,ecx_266,edi_237,edx_259,es_253,esi_265,esp_262,S_247,SCZO_255,SZO_241,Z_256
		defs: al_281,ax_282,C_273,cx_283,CZ_279,ds_285,eax_271,ebp_269,ebx_274,ecx_276,edi_268,edx_277,es_284,esi_275,esp_267,S_278,SCZO_270,SZO_272,Z_280
	word32 edi_287
	word32 ebp_288
	byte SCZO_289
	word32 eax_290
	byte SZO_291
	byte C_292
	word32 ebx_293
	word32 esi_294
	word32 ecx_295
	word32 edx_296
	byte S_297
	byte CZ_298
	byte Z_299
	byte al_300
	word16 ax_301
	word16 cx_302
	selector es_303
	selector ds_304
	word32 esp_286
	call esi_275 (retsize: 4; depth: 4)
		uses: al_281,ax_282,C_273,cx_283,CZ_279,ds_285,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_271,ebp_269,ebx_274,ecx_276,edi_268,edx_277,es_284,esi_275,esp_267,S_278,SCZO_270,SZO_272,Z_280
		defs: al_300,ax_301,C_292,cx_302,CZ_298,ds_304,eax_290,ebp_288,ebx_293,ecx_295,edi_287,edx_296,es_303,esi_294,esp_286,S_297,SCZO_289,SZO_291,Z_299
	branch eax_290 < 0x00000000 l100164D9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001638B:
	branch Mem263[esp_286 + 0x00000080:word32] == 0x00000000 l100164D9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016399:
	selector es_503
	selector ds_502
	Mem484[esp_286 - 0x00000004:word32] = 0x10002F5C
	Mem486[esp_286 - 0x00000008:word32] = 0x00000074
	Mem487[esp_286 + 0x0000001C:word32] = 0x00000000
	word32 ebp_489
	word32 edi_491
	word32 esi_490
	word32 ebx_488
	word32 eax_492 = fn1002FF64(ebx_293, esi_294, edi_287, out ebx_488, out ebp_489, out esi_490, out edi_491)
	ds_502 = ds_304
	es_503 = es_303
	branch eax_492 == 0x00000000 l100164D0
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163B5:
	word32 edx_523
	word32 eax_524 = fn10022BB1(eax_492, edx_296, es_303, ds_304, out edx_523)
	Mem526[esp_286 + 0x0000001C:word32] = eax_524
	edi_491 = eax_524
	ds_502 = ds_304
	es_503 = es_303
	branch eax_524 == 0x00000000 l100164D0
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163CA:
	word32 eax_530 = Mem526[esp_286 + 0x00000034:word32]
	branch eax_530 == 0x00000001 l100163E1
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163D6:
	branch eax_530 == 0x00000002 l10016451
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016451:
	Mem797[esp_286 - 0x00000004:word32] = 0x00000065
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163DB:
	branch eax_530 != 0x00000004 l100163E4
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163E1:
	Mem786[esp_286 - 0x00000004:word32] = 0x00000064
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163E3:
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100163E4:
	Mem540[esp_286 - 0x00000004:word32] = Mem526[esp_286 + 0x00000038:word32]
	word32 esp_545
	word32 edi_546
	word32 ebp_547
	byte SCZO_548
	word32 eax_549
	byte SZO_550
	byte C_551
	word32 ebx_552
	word32 esi_553
	word32 ecx_554
	word32 edx_555
	byte S_556
	byte CZ_557
	byte Z_558
	byte al_559
	word16 ax_560
	word16 cx_561
	selector es_562
	selector ds_563
	call Mem540[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_533,ax_534,C_529,cx_544,CZ_298,ds_304,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_541,ebp_489,ebx_531,ecx_543,edi_525,edx_523,es_303,esi_542,esp_539,S_306,SCZO_535,SZO_527,Z_536
		defs: al_559,ax_560,C_551,cx_561,CZ_557,ds_563,eax_549,ebp_547,ebx_552,ecx_554,edi_546,edx_555,es_562,esi_553,esp_545,S_556,SCZO_548,SZO_550,Z_558
	word32 esp_564
	byte SCZO_567
	word32 eax_568
	byte SZO_569
	byte C_570
	word32 ebx_571
	word32 esi_572
	word32 ecx_573
	word32 edx_574
	byte S_575
	byte CZ_576
	byte Z_577
	byte al_578
	word16 ax_579
	word16 cx_580
	word32 edi_565
	word32 ebp_566
	call esi_553 (retsize: 4; depth: 4)
		uses: al_559,ax_560,C_551,cx_561,CZ_557,ds_563,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_549,ebp_547,ebx_552,ecx_554,edi_546,edx_555,es_562,esi_553,esp_545,S_556,SCZO_548,SZO_550,Z_558
		defs: al_578,ax_579,C_570,cx_580,CZ_576,ds_582,eax_568,ebp_566,ebx_571,ecx_573,edi_565,edx_574,es_581,esi_572,esp_564,S_575,SCZO_567,SZO_569,Z_577
	word32 esi_583 = Mem540[esp_564 + 0x00000060:word32]
	branch eax_568 == 0x00000000 l10016443
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016400:
	branch esi_583 == 0x00000000 l1001640B
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016404:
	branch Mem540[esi_583:word16] != 0x0000 l10016445
// DataOut: ax cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001640B:
	Mem743[esp_564 - 0x00000004:word32] = ecx_573
	Mem747[esp_564 - 0x00000008:word32] = esp_564 + 0x000000D8
	Mem749[esp_564 - 0x0000000C:word32] = 0x10003FA0
	word32 ecx_751
	branch fn1001328F(0x80000002, 0x10002F60, dwArg00, dwArg04, out ecx_751) < 0x00000000 l10016443
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001642C:
	Mem758[esp_564 - 0x00000004:word32] = 0xFFFFFFFF
	Mem761[esp_564 - 0x00000008:word32] = esp_564 + 0x000000D8
	word32 edx_763
	fn1000F30D(esp_564 + 0x00000060, dwArg00, dwArg04, out edx_763)
	esi_583 = Mem761[esp_564 + 0x00000060:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:0x00000000 ebx:<invalid> edx:0x10002F60 ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016443:
// DataOut: ax cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016445:
	word32 esp_611
	branch esi_583 == 0x00000000 l10016455
// DataOut: ax cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016449:
	branch Mem540[esi_583:word16] == 0x0000 l10016455
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016455:
	Mem704[esp_564 - 0x00000004:word32] = 0x00000104
	Mem707[esp_564 - 0x00000008:word32] = esp_564 + 0x000004E8
	Mem709[esp_564 - 0x0000000C:word32] = ebx_571
	Mem711[esp_564 - 0x00000010:word32] = 0x10000000
	esp_611 = esp_564
	branch LoadStringW(Mem711[esp_564 - 0x00000010:HINSTANCE], Mem711[esp_564 - 0x0000000C:UINT], Mem711[esp_564 - 0x00000008:LPWSTR], Mem711[esp_564 - 0x00000004:int32]) <= 0x00000000 l1001648A
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016472:
	Mem718[esp_564 - 0x00000004:word32] = esp_564 + 0x000004E8
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001644E:
	Mem722[esp_564 - 0x00000004:word32] = esi_583
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001647A:
	Mem660[esp_564 - 0x00000008:word32] = edi_565
	word32 esp_663
	word32 edi_664
	word32 ebp_665
	byte SCZO_666
	word32 eax_667
	byte SZO_668
	byte C_669
	word32 ebx_670
	word32 esi_671
	word32 ecx_672
	word32 edx_673
	byte S_674
	byte CZ_675
	byte Z_676
	byte al_677
	word16 ax_678
	word16 cx_679
	selector es_680
	selector ds_681
	call Mem660[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_588,ax_587,C_598,cx_580,CZ_576,ds_582,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_658,ebp_566,ebx_571,ecx_662,edi_565,edx_590,es_581,esi_661,esp_659,S_589,SCZO_591,SZO_596,Z_597
		defs: al_677,ax_678,C_669,cx_679,CZ_675,ds_681,eax_667,ebp_665,ebx_670,ecx_672,edi_664,edx_673,es_680,esi_671,esp_663,S_674,SCZO_666,SZO_668,Z_676
	byte SCZO_685
	word32 eax_686
	byte SZO_687
	byte C_688
	word32 ebx_689
	word32 esi_690
	word32 ecx_691
	word32 edx_692
	byte S_693
	byte CZ_694
	byte Z_695
	byte al_696
	word16 ax_697
	word16 cx_698
	call esi_671 (retsize: 4; depth: 4)
		uses: al_677,ax_678,C_669,cx_679,CZ_675,ds_681,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_667,ebp_665,ebx_670,ecx_672,edi_664,edx_673,es_680,esi_671,esp_663,S_674,SCZO_666,SZO_668,Z_676
		defs: al_696,ax_697,C_688,cx_698,CZ_694,ds_700,eax_686,ebp_684,ebx_689,ecx_691,edi_683,edx_692,es_699,esi_690,esp_682,S_693,SCZO_685,SZO_687,Z_695
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001648A:
	word32 eax_612 = Mem540[esp_611 + 0x0000006C:word32]
	branch eax_612 == 0x00000000 l100164C4
// DataOut: cs ds eax ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016492:
	branch Mem540[eax_612:word16] == 0x0000 l100164C4
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016499:
	word32 ebx_637 = edi_565 + 0x00000054
	word32 esp_638 = esp_611 - 0x00000004
	Mem639[esp_638:word32] = ebx_637
	AcquireSRWLockExclusive(Mem639[esp_638:PSRWLOCK])
	fn1000F2EE(edi_565 + 0x00000068)
	Mem643[esp_638:word32] = 0xFFFFFFFF
	Mem646[esp_638 - 0x00000004:word32] = Mem643[esp_638 + 0x00000070:word32]
	word32 edx_648
	fn1000F30D(edi_565 + 0x00000068, dwArg00, dwArg04, out edx_648)
	branch ebx_637 == 0x00000000 l100164C4
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100164BD:
	Mem655[esp_638:word32] = ebx_637
	ReleaseSRWLockExclusive(Mem655[esp_638:PSRWLOCK])
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100164C4:
	word32 ecx_625 = Mem540[esp_611 + 0x0000000C:word32]
	word32 esp_626 = esp_611 - 0x00000004
	Mem627[esp_626:word32] = edi_565
	esp_286 = esp_626 + 0x00000004
	ebx_488 = fn10023347(ecx_625, ebp_566, es_503, ds_502, dwArg00, out esi_490, out edi_491)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100164D0:
	word32 edx_519
	word32 esi_520
	fn1000C640(esp_286 + 0x0000001C, ebx_488, esi_490, edi_491, es_503, ds_502, out edx_519, out esi_520)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100164D9:
	word32 eax_309 = Mem263[esp_286 + 0x0000000C:word32]
	word32 edx_310 = esp_286 + 0x00000020
	word32 esp_311 = esp_286 - 0x00000004
	Mem312[esp_311:word32] = edx_310
	Mem314[esp_311 - 0x00000004:word32] = eax_309
	word32 esp_318
	word32 edi_319
	word32 ebp_320
	byte SCZO_321
	word32 eax_322
	byte SZO_323
	byte C_324
	word32 ebx_325
	word32 esi_326
	word32 ecx_327
	word32 edx_328
	byte S_329
	byte CZ_330
	byte Z_331
	byte al_332
	word16 ax_333
	word16 cx_334
	selector es_335
	selector ds_336
	call Mem314[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_300,ax_301,C_307,cx_302,CZ_298,ds_304,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_309,ebp_288,ebx_293,ecx_317,edi_287,edx_310,es_303,esi_316,esp_313,S_306,SCZO_289,SZO_305,Z_299
		defs: al_332,ax_333,C_324,cx_334,CZ_330,ds_336,eax_322,ebp_320,ebx_325,ecx_327,edi_319,edx_328,es_335,esi_326,esp_318,S_329,SCZO_321,SZO_323,Z_331
	word32 esp_337
	word32 edi_338
	byte SCZO_340
	word32 eax_341
	byte SZO_342
	byte C_343
	word32 esi_345
	word32 ecx_346
	byte S_348
	byte CZ_349
	byte Z_350
	byte al_351
	word16 ax_352
	word16 cx_353
	call esi_326 (retsize: 4; depth: 4)
		uses: al_332,ax_333,C_324,cx_334,CZ_330,ds_336,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_322,ebp_320,ebx_325,ecx_327,edi_319,edx_328,es_335,esi_326,esp_318,S_329,SCZO_321,SZO_323,Z_331
		defs: al_351,ax_352,C_343,cx_353,CZ_349,ds_355,eax_341,ebp_339,ebx_344,ecx_346,edi_338,edx_347,es_354,esi_345,esp_337,S_348,SCZO_340,SZO_342,Z_350
	Mem357[esp_337 - 0x00000004:word32] = 0x00000004
	word32 esi_358 = Mem357[esp_337 - 0x00000004:word32]
	branch Mem357[0x10031000:word32] <=u esi_358 l1001655C
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100164FD:
	fn1000C51D(esp_337 + 0x000000A8, 0x10003428)
	fn1000C51D(esp_337 + 0x000000B8, 0x10003FC0)
	Mem454[esp_337 + 0x000000D0:word32] = esi_358
	Mem456[esp_337 + 0x000000CC:word32] = 0x00000000
	Mem457[esp_337 + 0x000000C8:word32] = esp_337 + 0x00000020
	Mem458[esp_337 + 0x000000D4:word32] = 0x00000000
	Mem462[esp_337 - 0x00000004:word32] = esp_337 + 0x00000088
	Mem464[esp_337 - 0x00000008:word32] = 0x00000005
	Mem466[esp_337 - 0x0000000C:word32] = 0x00000000
	Mem468[esp_337 - 0x00000010:word32] = 0x00000000
	word32 ecx_472
	word32 esi_474
	word32 edi_475
	fn1000C491(0x10031000, 0x1000A004, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_472, out edx_137, out esi_474, out edi_475)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001655C:
	esp_127 = esp_337
	branch Mem357[esp_337 + 0x00000020:word32] <=u 0x00000000 l10016584
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10016584:
	branch ebx_134 < 0x00000000 l1001658D
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10016588:
	ebx_134 = 0x80004005
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10016563:
	word32 ecx_392 = Mem357[esp_337 + 0x00000084:word32]
	Mem398[esp_337 - 0x00000004:word32] = Mem357[esp_337 + 0x0000000C:word32]
	Mem401[esp_337 - 0x00000008:word32] = ecx_392
	word32 esp_405
	word32 edi_406
	word32 ebp_407
	byte SCZO_408
	word32 eax_409
	byte SZO_410
	byte C_411
	word32 ebx_412
	word32 esi_413
	word32 ecx_414
	word32 edx_415
	byte S_416
	byte CZ_417
	byte Z_418
	byte al_419
	word16 ax_420
	word16 cx_421
	selector es_422
	selector ds_423
	call Mem401[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_351,ax_352,C_395,cx_353,CZ_371,ds_355,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_402,ebp_339,ebx_399,ecx_404,edi_363,edx_362,es_354,esi_403,esp_400,S_348,SCZO_370,SZO_394,Z_350
		defs: al_419,ax_420,C_411,cx_421,CZ_417,ds_423,eax_409,ebp_407,ebx_412,ecx_414,edi_406,edx_415,es_422,esi_413,esp_405,S_416,SCZO_408,SZO_410,Z_418
	word32 edi_425
	byte SCZO_427
	word32 eax_428
	byte SZO_429
	byte C_430
	word32 esi_432
	word32 ecx_433
	byte S_435
	byte CZ_436
	byte Z_437
	byte al_438
	word16 ax_439
	word16 cx_440
	call esi_413 (retsize: 4; depth: 4)
		uses: al_419,ax_420,C_411,cx_421,CZ_417,ds_423,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_409,ebp_407,ebx_412,ecx_414,edi_406,edx_415,es_422,esi_413,esp_405,S_416,SCZO_408,SZO_410,Z_418
		defs: al_438,ax_439,C_430,cx_440,CZ_436,ds_442,eax_428,ebp_426,ebx_431,ecx_433,edi_425,edx_434,es_441,esi_432,esp_424,S_435,SCZO_427,SZO_429,Z_437
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001658D:
	fn1000F2EE(esp_127 + 0x0000006C)
	fn1000F2EE(esp_127 + 0x00000060)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001659F:
	word32 ecx_63 = Mem0[esp_127 + 0x0000000C:word32]
	branch ecx_63 == 0x00000000 l100165BD
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100165A7:
	Mem102[esp_127 + 0x0000000C:word32] = 0x00000000
	word32 esp_104 = esp_127 - 0x00000004
	Mem105[esp_104:word32] = ecx_63
	word32 esp_108
	word32 edi_109
	word32 ebp_110
	byte SCZO_111
	word32 eax_112
	byte SZO_113
	byte C_114
	word32 ebx_115
	word32 esi_116
	word32 ecx_117
	word32 edx_118
	byte S_119
	byte CZ_120
	byte Z_121
	byte al_122
	word16 ax_123
	word16 cx_124
	selector es_125
	selector ds_126
	call Mem105[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_52,ax_51,C_101,cx_64,CZ_53,ds_49,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_103,ebp_61,ebx_59,ecx_107,edi_57,edx_55,es_50,esi_106,esp_104,S_54,SCZO_56,SZO_100,Z_66
		defs: al_122,ax_123,C_114,cx_124,CZ_120,ds_126,eax_112,ebp_110,ebx_115,ecx_117,edi_109,edx_118,es_125,esi_116,esp_108,S_119,SCZO_111,SZO_113,Z_121
	word32 edi_128
	byte SCZO_130
	word32 eax_131
	byte SZO_132
	byte C_133
	word32 esi_135
	word32 ecx_136
	byte S_138
	byte CZ_139
	byte Z_140
	byte al_141
	word16 ax_142
	word16 cx_143
	call esi_116 (retsize: 4; depth: 4)
		uses: al_122,ax_123,C_114,cx_124,CZ_120,ds_126,dwLoc04_6,dwLoc0678_18,dwLoc06C4_26,dwLoc06C8_31,dwLoc06E0_35,dwLoc06F0_36,dwLoc06F4_17,dwLoc06F8_23,dwLoc06FC_33,dwLoc08_12,eax_112,ebp_110,ebx_115,ecx_117,edi_109,edx_118,es_125,esi_116,esp_108,S_119,SCZO_111,SZO_113,Z_121
		defs: al_141,ax_142,C_133,cx_143,CZ_139,ds_145,eax_131,ebp_129,ebx_134,ecx_136,edi_128,edx_137,es_144,esi_135,esp_127,S_138,SCZO_130,SZO_132,Z_140
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):fp - 0x000006CC -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100165BD:
	word32 esp_84 = esp_127 + 0x00000004
	word32 esi_85 = Mem0[esp_84:word32]
	*esiOut = esi_85
	word32 ebx_87 = Mem0[esp_84 + 0x00000004:word32]
	*ebxOut = ebx_87
	word32 ecx_92
	fn1002F420(ebx_134, Mem0[esp_127 + 0x000006F4:word32] ^ esp_84 + 0x00000008, edx_137, ebx_87, ebp_129, esi_85, Mem0[esp_127:word32], es, ds, out ecx_92)
	return edx_137
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):<invalid> -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10015FF7_exit:
// DataOut: ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -1796(fp):<invalid> -1792(fp):<invalid> -1788(fp):edi -1784(fp):esi -1780(fp):ebx -1776(fp):<invalid> -1760(fp):fp - 0x000006F0 -1736(fp):edx -1732(fp):<invalid> -1656(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn100165D6(word32 ecx, word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn100165D6_entry:
// DataOut: cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -032D(0) Local -03D8(32) Stack +0004(32)

l100165D6:
	word32 esp_1104
	word32 eax_142
	word32 edi_110 = edi
	word32 ebp_1103 = fp - 0x00000004
	word32 ebx_25 = Mem0[dwArg04 + 0x00000004:word32]
	word32 esi_1846 = 0x00000000
	branch ebx_25 == 0x00000000 l10016679
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0340(32) Local -0364(32) Local -03D8(32)

l10016679:
	esi_1846 = 0x80004005
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:<invalid> esi:0x00000000 -972(fp):edi -968(fp):esi -964(fp):ebx -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0364(32)

l10016620:
	word32 dwLoc0350_1853 = 0x00000000
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:<invalid> esi:0x00000000 -972(fp):edi -968(fp):esi -964(fp):ebx -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0340(32) Local -0350(32) Local -0364(32) Local -03D8(32)

l10016626:
	branch esi_1846 < 0x00000000 l1001666C
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0340(32) Local -0350(32) Local -0364(32) Local -03D8(32)

l1001662A:
	word32 eax_1928 = fn1000F0D2(fp - 0x00000388, es, ds, fp - 0x000003C0, out edx)
	word32 ecx_1935 = dwLoc0350_1853 + 0x00000001
	edi_110 = fp - 0x000003B0
	esi_1846 = eax_1928
	dwLoc0350_1853 = ecx_1935
	branch ecx_1935 <u ebx_25 l10016626
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0340(32) Local -0350(32) Local -0364(32) Local -03D8(32)

l10016668:
	branch eax_1928 >= 0x00000000 l10016686
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:fp - 0x000003B0 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0364(32)

l1001666C:
	fn1000F2B0(fp - 0x00000388)
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0364(32)

l1001667E:
	eax_142 = dwArg04
	esp_1104 = fp - 0x000003CC
	branch esi_1846 < 0x00000000 l10017080
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0) Local -0364(32)

l10016686:
	word32 esp_113 = fp - 0x000003CC
	word32 ebx_111 = ecx
	branch Mem0[ecx + 0x00000008:word32] == 0x00000001 l1001669C
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0)

l10016692:
	branch Mem0[ecx + 0x00000008:word32] != 0x00000002 l10016730
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ecx esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0)

l1001669C:
	branch fn1002FEAA() == 0x00 l100166CB
// DataOut: cs ds ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ecx esi:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0)

l100166A5:
	word32 edi_1804
	byte SCZO_1806
	word32 eax_1807
	byte SZO_1808
	byte C_1809
	word32 esi_1811
	word32 ecx_1812
	byte Z_1813
	byte S_1814
	byte al_1815
	word32 edx_1816
	byte CZ_1817
	selector fs_1818
	bcuiposr0 None_1819
	byte SO_1820
	byte dl_1823
	word16 si_1824
	call ext-ms-win-session-winsta-l1-1-0.dll!WinStationIsSessionRemoteable (retsize: 4; depth: 988)
		uses: al_1796,C_1721,CZ,dl,ds,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_1798,dwLoc03D4_1800,dwLoc03D8_1802,dwLoc04_6,dwLoc08_12,eax_1795,ebp_7,ebx_96,ecx_93,edi_89,edx_87,es,esi_90,esp_1801,fs,None,S_85,SCZO_1717,si_86,SO,SZO_1719,Z_1720
		defs: al_1815,C_1809,CZ_1817,dl_1823,ds_1822,eax_1807,ebp_1805,ebx_1810,ecx_1812,edi_1804,edx_1816,es_1821,esi_1811,esp_1803,fs_1818,None_1819,S_1814,SCZO_1806,si_1824,SO_1820,SZO_1808,Z_1813
	branch al_1815 == 0x00 l100166CB
// DataOut: cs ds ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000003CC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ecx esi:<invalid> al:<invalid> cl:<invalid> edx:<invalid> -980(fp):fp - 0x000003C0 -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -032D(0)

l100166BA:
	branch bLoc032D == 0x00 l100166CB
// DataOut: cs ds ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ecx esi:<invalid> al:<invalid> cl:<invalid> edx:<invalid> -984(fp):0x00000000 -980(fp):0xFFFFFFFF -976(fp):fp - 0x0000032D -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l100166C3:
	fn1001EDDC(ebx_111 + 0x00000010)
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:ecx esi:<invalid> al:<invalid> cl:<invalid> edx:<invalid> -984(fp):0x00000000 -980(fp):0xFFFFFFFF -976(fp):fp - 0x0000032D -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l100166CB:
	word32 esp_1750 = esp_113 - 0x00000004
	Mem1751[esp_1750:word32] = fp - 0x00000344
	word32 ecx_1754
	word32 edx_1755
	word16 si_1756
	branch fn10010D2A(0x00020006, es, ds, dwArg00, out ecx_1754, out edx_1755, out si_1756) < 0x00000000 l1001670C
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> -984(fp):0x00000000 -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100166ED:
	Mem1782[esp_1750:word32] = 0x10003FDC
	Mem1784[esp_1750 - 0x00000004:word32] = 0x00000000
	Mem1787[esp_1750 - 0x00000008:word32] = Mem1784[ebp_1103 - 0x00000340:word32]
	RegDeleteKeyValueW(Mem1787[esp_1750 - 0x00000008:HKEY], Mem1787[esp_1750 - 0x00000004:LPCWSTR], Mem1787[esp_1750:LPCWSTR])
	Mem1792[esp_1750:word32] = Mem1787[ebp_1103 - 0x00000340:word32]
	RegCloseKey(Mem1792[esp_1750:HKEY])
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> -984(fp):0x00000000 -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001670C:
	word32 esp_1763 = esp_113 - 0x00000004
	Mem1764[esp_1763:word32] = 0x10003FFC
	Mem1768[esp_1763 - 0x00000004:word32] = 0x10003350
	Mem1770[esp_1763 - 0x00000008:word32] = 0x80000002
	RegDeleteKeyValueW(Mem1770[esp_1763 - 0x00000008:HKEY], Mem1770[esp_1763 - 0x00000004:LPCWSTR], Mem1770[esp_1763:LPCWSTR])
	Mem1774[esp_1763:word32] = 0x10004018
	Mem1776[esp_1763 - 0x00000004:word32] = 0x10003350
	Mem1778[esp_1763 - 0x00000008:word32] = 0x80000002
	RegDeleteKeyValueW(Mem1778[esp_1763 - 0x00000008:HKEY], Mem1778[esp_1763 - 0x00000004:LPCWSTR], Mem1778[esp_1763:LPCWSTR])
	edi_110 = 0x10003350
	esp_113 = esp_1763 + 0x00000004
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> -984(fp):0x00000000 -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016730:
	word32 esi_114 = Mem0[ebp_1103 - 0x0000033C:word32]
	word32 ecx_117 = Mem0[ebp_1103 + 0x0000000C:word32]
	Mem121[ebp_1103 - 0x00000374:word32] = 0x00000000
	Mem122[ebp_1103 - 0x00000370:word32] = 0x00000000
	Mem123[ebp_1103 - 0x0000036C:word32] = 0x00000000
	Mem124[ebp_1103 - 0x00000368:word32] = 0x00000000
	word32 esp_126 = esp_113 - 0x00000004
	Mem127[esp_126:word32] = ebp_1103 - 0x00000374
	byte dl_129 = (byte) Mem127[ebx_111 + 0x0000000C:word32]
	Mem131[esp_126 - 0x00000004:word32] = ebx_111 + 0x00000010
	Mem134[esp_126 - 0x00000008:word32] = esi_114 + 0x00000010
	Mem137[esp_126 - 0x0000000C:word32] = ebp_1103 - 0x00000384
	eax_142 = fn1001F3C0(ecx_117, dl_129, ebx_111, esi_114, edi_110, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, out edx)
	esp_1104 = esp_126 + 0x00000004
	branch eax_142 < 0x00000000 l1001706A
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> -984(fp):0x00000000 -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016779:
	word32 eax_171 = Mem137[esi_114 + 0x00000004:word32]
	Mem173[esp_126:word32] = 0x00000004
	word32 edi_1011 = Mem173[esp_126:word32]
	Mem176[ebp_1103 - 0x0000034C:word32] = eax_171
	Mem178[ebp_1103 - 0x00000364:word32] = Mem176[ebp_1103 - 0x00000370:word32]
	branch Mem178[0x10031000:word32] <=u edi_1011 l10016811
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> -988(fp):fp - 0x00000388 -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016799:
	fn1000C51D(ebp_1103 - 0x00000288, 0x10003428)
	fn1000C51D(ebp_1103 - 0x00000278, 0x10004044)
	Mem1688[ebp_1103 - 0x00000260:word32] = edi_1011
	Mem1692[ebp_1103 - 0x00000268:word32] = ebp_1103 - 0x0000034C
	Mem1694[ebp_1103 - 0x00000264:word32] = 0x00000000
	Mem1695[ebp_1103 - 0x0000025C:word32] = 0x00000000
	Mem1696[ebp_1103 - 0x00000258:word32] = ebp_1103 - 0x00000364
	Mem1697[ebp_1103 - 0x00000254:word32] = 0x00000000
	Mem1698[ebp_1103 - 0x00000250:word32] = edi_1011
	Mem1699[ebp_1103 - 0x0000024C:word32] = 0x00000000
	Mem1703[esp_126:word32] = ebp_1103 - 0x000002A8
	Mem1705[esp_126 - 0x00000004:word32] = 0x00000006
	Mem1707[esp_126 - 0x00000008:word32] = 0x00000000
	Mem1709[esp_126 - 0x0000000C:word32] = 0x00000000
	word32 ecx_1711
	word32 edx_1712
	fn1000C491(0x10031000, 0x10009F7B, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1711, out edx_1712, out esi_114, out edi_1011)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> -988(fp):fp - 0x00000388 -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016811:
	Mem188[ebp_1103 - 0x00000348:word32] = Mem178[ebp_1103 - 0x00000348:word32] & 0x00000000
	Mem191[ebp_1103 - 0x00000340:word32] = 0x00000000
	esp_1104 = esp_113
	word32 ecx_1680 = 0x00000000
	branch Mem191[ebp_1103 - 0x0000034C:word32] <=u 0x00000000 l10017054
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -832(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001682C:
	edi_1011 = 0x00000000
	branch Mem191[ebp_1103 - 0x00000364:word32] <=u 0x00000000 l10017041
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001683A:
	Mem265[ebp_1103 - 0x00000338:word32] = Mem191[ebp_1103 - 0x00000374:word32]
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016846:
	word32 esp_273 = esp_1104 - 0x00000004
	Mem274[esp_273:word32] = Mem265[esi_114:word32] + ecx_1680 * 0x00000004
	word32 esi_276
	fn10015118(ebp_1103 - 0x00000358, ebx_111, esi_114, es, ds, dwArg00, out esi_276, out edi_1011)
	esp_1104 = esp_273 + 0x00000004
	word32 esi_280 = Mem274[ebp_1103 - 0x00000358:word32]
	word32 ecx_282 = 0x00000000
	word32 edx_285 = Mem274[ebp_1103 - 0x00000338:word32]
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016865:
	branch Mem274[esi_280 + 0x00000024 + ecx_282 * 0x00000004:word32] != Mem274[edx_285 + ecx_282 * 0x00000004:word32] l100169F4
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100169F4:
	word32 edx_1672
	word32 esi_1673
	fn1000C640(ebp_1103 - 0x00000358, ebx_111, esi_280, edi_1011, es, ds, out edx_1672, out esi_1673)
	Mem1676[ebp_1103 - 0x00000338:word32] = Mem274[ebp_1103 - 0x00000338:word32] + 0x00000010
	edi_1011 = edi_1011 + 0x00000001
	esi_114 = Mem1676[ebp_1103 - 0x0000033C:word32]
	ecx_1680 = Mem1676[ebp_1103 - 0x00000340:word32]
	branch edi_1011 + 0x00000001 >=u Mem1676[ebp_1103 - 0x00000364:word32] l10017041
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016A1F:
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016872:
	ecx_282 = ecx_282 + 0x00000001
	branch ecx_282 != 0x00000004 l10016865
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016878:
	branch Mem274[ebp_1103 + 0x0000000C:word32] != 0x00000005 l10016888
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001687E:
	branch Mem274[esi_280 + 0x00000035:byte] == 0x00 l1001702A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016888:
	Mem324[ebp_1103 - 0x00000334:word32] = Mem274[ebp_1103 - 0x00000334:word32] & 0x00000000
	Mem329[ebp_1103 - 0x00000329:byte] = 0x00
	Mem330[ebp_1103 - 0x000003A8:word32] = ebp_1103 - 0x00000334
	word32 esi_331
	word32 edi_332
	Mem335[esp_273:word32] = fn1000EF25(ebp_1103 - 0x000003A8, edx_285, ebx_111, esi_280, es, ds, out esi_331, out edi_332)
	word32 edx_337
	word32 esi_339
	word32 eax_341 = fn1001357C(esi_331, esi_331, es, ds, dwArg00, out edx_337, out ebx_111, out esi_339, out edi_1011)
	Mem343[ebp_1103 - 0x00000344:word32] = eax_341
	esp_1104 = esp_273 + 0x00000004
	branch eax_341 < 0x00000000 l1001701F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100168C3:
	word32 edi_1519
	Mem374[ebp_1103 - 0x00000328:word32] = 0x00000000
	Mem375[ebp_1103 - 0x00000318:word32] = 0x00000000
	Mem376[ebp_1103 - 0x00000314:word32] = 0x00000000
	Mem377[ebp_1103 - 0x00000310:word32] = 0x00000000
	Mem378[ebp_1103 - 0x0000030C:word32] = 0x00000000
	Mem381[esp_273:word32] = esi_339 + 0x00000024
	Mem383[esp_273 - 0x00000004:word32] = 0x10004068
	word32 edx_384 = fn10015E51(ebp_1103 - 0x00000328, dwArg00, dwArg04)
	word32 eax_386 = Mem383[ebp_1103 - 0x00000334:word32]
	Mem389[esp_273:word32] = Mem383[ebx_111 + 0x0000000C:word32]
	Mem392[esp_273 - 0x00000004:word32] = Mem389[ebp_1103 + 0x0000000C:word32]
	Mem395[esp_273 - 0x00000008:word32] = eax_386
	word32 esp_398
	word32 edi_399
	word32 ebp_400
	byte SCZO_401
	word32 eax_402
	byte SZO_403
	byte C_404
	word32 ebx_405
	word32 esi_406
	word32 ecx_407
	byte Z_408
	byte S_409
	byte al_410
	word32 edx_411
	byte CZ_412
	selector fs_413
	bcuiposr0 None_414
	byte SO_415
	selector es_416
	selector ds_417
	byte dl_418
	word16 si_419
	call Mem395[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_228,C_372,CZ_239,dl_286,ds_219,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_386,ebp_235,ebx_338,ecx_397,edi_396,edx_384,es_220,esi_339,esp_394,fs_222,None_221,S_345,SCZO_322,si_281,SO_224,SZO_371,Z_321
		defs: al_410,C_404,CZ_412,dl_418,ds_417,eax_402,ebp_400,ebx_405,ecx_407,edi_399,edx_411,es_416,esi_406,esp_398,fs_413,None_414,S_409,SCZO_401,si_419,SO_415,SZO_403,Z_408
	word32 esp_420
	word32 edi_421
	byte SCZO_423
	word32 eax_424
	byte SZO_425
	byte C_426
	word32 ebx_427
	word32 ecx_429
	byte Z_430
	byte S_431
	byte al_432
	word32 edx_433
	byte CZ_434
	selector fs_435
	bcuiposr0 None_436
	byte SO_437
	selector es_438
	selector ds_439
	byte dl_440
	word16 si_441
	word32 esi_1509
	call edi_399 (retsize: 4; depth: 4)
		uses: al_410,C_404,CZ_412,dl_418,ds_417,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_402,ebp_400,ebx_405,ecx_407,edi_399,edx_411,es_416,esi_406,esp_398,fs_413,None_414,S_409,SCZO_401,si_419,SO_415,SZO_403,Z_408
		defs: al_432,C_426,CZ_434,dl_440,ds_439,eax_424,ebp_422,ebx_427,ecx_429,edi_421,edx_433,es_438,esi_428,esp_420,fs_435,None_436,S_431,SCZO_423,si_441,SO_437,SZO_425,Z_430
	Mem443[ebp_1103 - 0x00000344:word32] = eax_424
	word32 edx_444
	word32 eax_445 = fn10015F5E(ebp_1103 - 0x00000328, out edx_444)
	Mem447[ebp_1103 - 0x000003A0:word32] = eax_445
	Mem448[ebp_1103 - 0x0000039C:word32] = edx_444
	branch edx_444 != 0x00000000 l1001693D
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016934:
	branch eax_445 <=u 0x00000064 l10016A24
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001693D:
	branch Mem448[0x10031000:word32] <=u 0x00000004 l10016B3D
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001694A:
	Mem1619[esp_420 - 0x00000004:word32] = 0x00004000
	Mem1621[esp_420 - 0x00000008:word32] = 0x00000000
	word32 edx_1623
	branch (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_1623) == 0x00 l10016A24
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016A24:
	edi_1519 = esi_1509 + 0x00000024
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016963:
	fn1000C58C(ebp_1103 - 0x00000108, 0x10004068)
	Mem1635[ebp_1103 - 0x000000F0:word32] = 0x00000010
	Mem1637[ebp_1103 - 0x000000F4:word32] = 0x00000000
	Mem1638[ebp_1103 - 0x000000E8:word32] = ebp_1103 - 0x000003A0
	Mem1641[ebp_1103 - 0x000000F8:word32] = esi_1509 + 0x00000024
	Mem1642[ebp_1103 - 0x000000EC:word32] = 0x00000000
	Mem1643[ebp_1103 - 0x000000E4:word32] = 0x00000000
	Mem1644[ebp_1103 - 0x000000E0:word32] = 0x00000008
	Mem1645[ebp_1103 - 0x000000DC:word32] = 0x00000000
	Mem1646[ebp_1103 - 0x000000D8:word32] = ebp_1103 - 0x00000344
	Mem1647[ebp_1103 - 0x000000D4:word32] = 0x00000000
	Mem1648[ebp_1103 - 0x000000D0:word32] = 0x00000004
	Mem1649[ebp_1103 - 0x000000CC:word32] = 0x00000000
	Mem1653[esp_420 - 0x00000004:word32] = ebp_1103 - 0x00000128
	Mem1655[esp_420 - 0x00000008:word32] = 0x00000006
	Mem1657[esp_420 - 0x0000000C:word32] = 0x00000000
	Mem1659[esp_420 - 0x00000010:word32] = 0x00000000
	word32 ecx_1661
	word32 edx_1662
	fn1000C491(0x10031000, 0x10009C38, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1661, out edx_1662, out esi_1509, out edi_1519)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:0x10031000 ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:0x00 bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016A27:
	branch Mem448[0x10031000:word32] <=u 0x00000004 l10016B3D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B3D:
	edi_1011 = Mem448[ebp_1103 + 0x0000000C:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016A34:
	fn1000C51D(ebp_1103 - 0x000000A8, 0x10003428)
	fn1000C51D(ebp_1103 - 0x00000098, 0x100040B4)
	Mem1536[ebp_1103 - 0x000003A4:word32] = Mem448[esi_1509 + 0x0000001C:word32]
	Mem1538[ebp_1103 - 0x00000088:word32] = ebp_1103 - 0x000003A4
	Mem1540[ebp_1103 - 0x000003AC:word32] = Mem1538[ebp_1103 - 0x00000334:word32]
	Mem1542[ebp_1103 - 0x00000078:word32] = ebp_1103 - 0x000003AC
	Mem1544[ebp_1103 - 0x00000388:word32] = Mem1542[ebx_427 + 0x00000008:word32]
	Mem1546[ebp_1103 - 0x00000058:word32] = ebp_1103 - 0x00000388
	Mem1548[ebp_1103 - 0x0000038C:word32] = Mem1546[ebx_427 + 0x0000000C:word32]
	Mem1550[ebp_1103 - 0x00000048:word32] = ebp_1103 - 0x0000038C
	Mem1552[ebp_1103 - 0x00000038:word32] = ebp_1103 - 0x00000390
	Mem1555[esp_420 - 0x00000004:word32] = 0x00000004
	word32 edx_1556 = Mem1555[esp_420 - 0x00000004:word32]
	Mem1558[ebp_1103 - 0x00000028:word32] = ebp_1103 - 0x00000344
	Mem1560[ebp_1103 - 0x00000068:word32] = edi_1519
	word32 edi_1561 = Mem1560[ebp_1103 + 0x0000000C:word32]
	Mem1562[ebp_1103 - 0x00000084:word32] = 0x00000000
	Mem1563[ebp_1103 - 0x00000080:word32] = edx_1556
	Mem1564[ebp_1103 - 0x0000007C:word32] = 0x00000000
	Mem1565[ebp_1103 - 0x00000074:word32] = 0x00000000
	Mem1566[ebp_1103 - 0x00000070:word32] = edx_1556
	Mem1567[ebp_1103 - 0x0000006C:word32] = 0x00000000
	Mem1568[ebp_1103 - 0x00000064:word32] = 0x00000000
	Mem1569[ebp_1103 - 0x00000060:word32] = 0x00000010
	Mem1570[ebp_1103 - 0x0000005C:word32] = 0x00000000
	Mem1571[ebp_1103 - 0x00000054:word32] = 0x00000000
	Mem1572[ebp_1103 - 0x00000050:word32] = edx_1556
	Mem1573[ebp_1103 - 0x0000004C:word32] = 0x00000000
	Mem1574[ebp_1103 - 0x00000044:word32] = 0x00000000
	Mem1575[ebp_1103 - 0x00000040:word32] = edx_1556
	Mem1576[ebp_1103 - 0x0000003C:word32] = 0x00000000
	Mem1577[ebp_1103 - 0x00000390:word32] = edi_1561
	Mem1578[ebp_1103 - 0x00000034:word32] = 0x00000000
	Mem1579[ebp_1103 - 0x00000030:word32] = edx_1556
	Mem1580[ebp_1103 - 0x0000002C:word32] = 0x00000000
	Mem1581[ebp_1103 - 0x00000024:word32] = 0x00000000
	Mem1582[ebp_1103 - 0x00000020:word32] = edx_1556
	Mem1583[ebp_1103 - 0x0000001C:word32] = 0x00000000
	Mem1584[ebp_1103 - 0x00000018:word32] = ebp_1103 - 0x000003A0
	Mem1585[ebp_1103 - 0x00000014:word32] = 0x00000000
	Mem1586[ebp_1103 - 0x00000010:word32] = 0x00000008
	Mem1587[ebp_1103 - 0x0000000C:word32] = 0x00000000
	Mem1591[esp_420 - 0x00000004:word32] = ebp_1103 - 0x000000C8
	Mem1593[esp_420 - 0x00000008:word32] = 0x0000000C
	Mem1595[esp_420 - 0x0000000C:word32] = 0x00000000
	Mem1597[esp_420 - 0x00000010:word32] = 0x00000000
	word32 ecx_1599
	word32 edx_1600
	fn1000C491(0x10031000, 0x10009EAC, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1599, out edx_1600, out esi_1509, out edi_1011)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B40:
	word32 esi_1026
	byte al_477
	esp_1104 = esp_420
	branch Mem448[ebp_1103 - 0x00000344:word32] < 0x00000000 l10016FF5
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B4D:
	word32 ebx_1291
	word32 esi_1292
	selector es_1302
	selector ds_1303
	ds_1303 = ds_439
	es_1302 = es_438
	esi_1292 = esi_1509
	ebx_1291 = ebx_427
	branch edi_1011 != 0x00000004 l10016C70
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B5B:
	word32 ecx_1234 = 0x00000000
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B60:
	branch Mem448[ebx_427 + 0x0000002C + ecx_1234 * 0x00000004:word32] != Mem448[ecx_1234 * 0x00000004 + 0x100075F8:word32] l10016B76
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B76:
	word32 eax_1248 = Mem448[ebp_1103 - 0x00000334:word32]
	Mem1251[ebp_1103 - 0x00000350:word32] = Mem448[ebp_1103 - 0x00000350:word32] & 0x00000000
	Mem1255[esp_420 - 0x00000004:word32] = ebp_1103 - 0x00000350
	Mem1257[esp_420 - 0x00000008:word32] = 0x10004C40
	Mem1260[esp_420 - 0x0000000C:word32] = eax_1248
	word32 esp_1262
	word32 edi_1263
	word32 ebp_1264
	byte SCZO_1265
	word32 eax_1266
	byte SZO_1267
	byte C_1268
	word32 ebx_1269
	word32 esi_1270
	word32 ecx_1271
	byte Z_1272
	byte S_1273
	byte al_1274
	word32 edx_1275
	byte CZ_1276
	selector fs_1277
	bcuiposr0 None_1278
	byte SO_1279
	selector es_1280
	selector ds_1281
	byte dl_1282
	word16 si_1283
	call Mem1260[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1237,C_1253,CZ_452,dl_565,ds_439,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1248,ebp_422,ebx_427,ecx_1261,edi_1258,edx_564,es_438,esi_457,esp_1259,fs_435,None_436,S_431,SCZO_1241,si_441,SO_464,SZO_1252,Z_1242
		defs: al_1274,C_1268,CZ_1276,dl_1282,ds_1281,eax_1266,ebp_1264,ebx_1269,ecx_1271,edi_1263,edx_1275,es_1280,esi_1270,esp_1262,fs_1277,None_1278,S_1273,SCZO_1265,si_1283,SO_1279,SZO_1267,Z_1272
	word32 edi_1285
	byte SCZO_1287
	word32 eax_1288
	byte SZO_1289
	byte C_1290
	word32 ecx_1293
	byte Z_1294
	byte S_1295
	byte al_1296
	word32 edx_1297
	byte CZ_1298
	selector fs_1299
	bcuiposr0 None_1300
	byte SO_1301
	byte dl_1304
	word16 si_1305
	call Mem1260[edi_1263:word32] (retsize: 4; depth: 4)
		uses: al_1274,C_1268,CZ_1276,dl_1282,ds_1281,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1266,ebp_1264,ebx_1269,ecx_1271,edi_1263,edx_1275,es_1280,esi_1270,esp_1262,fs_1277,None_1278,S_1273,SCZO_1265,si_1283,SO_1279,SZO_1267,Z_1272
		defs: al_1296,C_1290,CZ_1298,dl_1304,ds_1303,eax_1288,ebp_1286,ebx_1291,ecx_1293,edi_1285,edx_1297,es_1302,esi_1292,esp_1284,fs_1299,None_1300,S_1295,SCZO_1287,si_1305,SO_1301,SZO_1289,Z_1294
	branch eax_1288 < 0x00000000 l10016C47
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016BA4:
	word32 eax_1406 = Mem1260[ebp_1103 - 0x00000350:word32]
	Mem1410[esp_1104 - 0x00000004:word32] = Mem1260[ebx_1291 + 0x00000040:word32]
	Mem1413[esp_1104 - 0x00000008:word32] = Mem1410[ebx_1291 + 0x0000003C:word32]
	Mem1416[esp_1104 - 0x0000000C:word32] = ebx_1291 + 0x0000002C
	Mem1418[esp_1104 - 0x00000010:word32] = eax_1406
	word32 esp_1420
	word32 edi_1421
	word32 ebp_1422
	byte SCZO_1423
	word32 eax_1424
	byte SZO_1425
	byte C_1426
	word32 ebx_1427
	word32 esi_1428
	word32 ecx_1429
	byte Z_1430
	byte S_1431
	byte al_1432
	word32 edx_1433
	byte CZ_1434
	selector fs_1435
	bcuiposr0 None_1436
	byte SO_1437
	selector es_1438
	selector ds_1439
	byte dl_1440
	word16 si_1441
	call Mem1418[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1296,C_1308,CZ_1298,dl_1304,ds_1303,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1406,ebp_1286,ebx_1291,ecx_1419,edi_1414,edx_1297,es_1302,esi_1292,esp_1417,fs_1299,None_1300,S_1307,SCZO_1287,si_1305,SO_1301,SZO_1306,Z_1294
		defs: al_1432,C_1426,CZ_1434,dl_1440,ds_1439,eax_1424,ebp_1422,ebx_1427,ecx_1429,edi_1421,edx_1433,es_1438,esi_1428,esp_1420,fs_1435,None_1436,S_1431,SCZO_1423,si_1441,SO_1437,SZO_1425,Z_1430
	word32 esp_1442
	word32 edi_1443
	byte SCZO_1445
	word32 eax_1446
	byte SZO_1447
	byte C_1448
	word32 ecx_1451
	byte Z_1452
	byte S_1453
	byte al_1454
	word32 edx_1455
	byte CZ_1456
	selector fs_1457
	bcuiposr0 None_1458
	byte SO_1459
	byte dl_1462
	word16 si_1463
	call Mem1418[edi_1421 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: al_1432,C_1426,CZ_1434,dl_1440,ds_1439,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1424,ebp_1422,ebx_1427,ecx_1429,edi_1421,edx_1433,es_1438,esi_1428,esp_1420,fs_1435,None_1436,S_1431,SCZO_1423,si_1441,SO_1437,SZO_1425,Z_1430
		defs: al_1454,C_1448,CZ_1456,dl_1462,ds_1461,eax_1446,ebp_1444,ebx_1449,ecx_1451,edi_1443,edx_1455,es_1460,esi_1450,esp_1442,fs_1457,None_1458,S_1453,SCZO_1445,si_1463,SO_1459,SZO_1447,Z_1452
	Mem1465[esp_1442 - 0x00000004:word32] = 0x00000004
	word32 edi_1466 = Mem1465[esp_1442 - 0x00000004:word32]
	esp_1104 = esp_1442
	branch Mem1465[0x10031000:word32] <=u edi_1466 l10016C47
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016BCE:
	fn1000C51D(ebp_1103 - 0x00000228, 0x10003428)
	fn1000C51D(ebp_1103 - 0x00000218, 0x100040DC)
	Mem1475[ebp_1103 - 0x00000200:word32] = 0x00000010
	Mem1479[ebp_1103 - 0x00000208:word32] = esi_1292 + 0x00000024
	Mem1481[ebp_1103 - 0x00000204:word32] = 0x00000000
	Mem1482[ebp_1103 - 0x000001FC:word32] = 0x00000000
	Mem1483[ebp_1103 - 0x000001F8:word32] = ebp_1103 - 0x00000344
	Mem1484[ebp_1103 - 0x000001F4:word32] = 0x00000000
	Mem1485[ebp_1103 - 0x000001F0:word32] = edi_1466
	Mem1486[ebp_1103 - 0x000001EC:word32] = 0x00000000
	Mem1490[esp_1442 - 0x00000004:word32] = ebp_1103 - 0x00000248
	Mem1492[esp_1442 - 0x00000008:word32] = 0x00000006
	Mem1494[esp_1442 - 0x0000000C:word32] = 0x00000000
	Mem1496[esp_1442 - 0x00000010:word32] = 0x00000000
	word32 ecx_1498
	word32 edx_1499
	word32 edi_1501
	fn1000C491(0x10031000, 0x10009E39, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1498, out edx_1499, out esi_1292, out edi_1501)
	esp_1104 = esp_1442
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C47:
	word32 ecx_1327 = Mem1260[ebp_1103 - 0x00000350:word32]
	branch ecx_1327 == 0x00000000 l10016C68
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C51:
	Mem1354[ebp_1103 - 0x00000350:word32] = Mem1260[ebp_1103 - 0x00000350:word32] & 0x00000000
	word32 esp_1358 = esp_1104 - 0x00000004
	Mem1359[esp_1358:word32] = ecx_1327
	word32 esp_1362
	word32 edi_1363
	word32 ebp_1364
	byte SCZO_1365
	word32 eax_1366
	byte SZO_1367
	byte C_1368
	word32 ebx_1369
	word32 esi_1370
	word32 ecx_1371
	byte Z_1372
	byte S_1373
	byte al_1374
	word32 edx_1375
	byte CZ_1376
	selector fs_1377
	bcuiposr0 None_1378
	byte SO_1379
	selector es_1380
	selector ds_1381
	byte dl_1382
	word16 si_1383
	call Mem1359[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1320,C_1356,CZ_1314,dl_1309,ds_1310,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1357,ebp_1325,ebx_1323,ecx_1361,edi_1360,edx_1319,es_1311,esi_1322,esp_1358,fs_1313,None_1312,S_1315,SCZO_1318,si_1317,SO_1316,SZO_1355,Z_1329
		defs: al_1374,C_1368,CZ_1376,dl_1382,ds_1381,eax_1366,ebp_1364,ebx_1369,ecx_1371,edi_1363,edx_1375,es_1380,esi_1370,esp_1362,fs_1377,None_1378,S_1373,SCZO_1365,si_1383,SO_1379,SZO_1367,Z_1372
	word32 edi_1385
	byte SCZO_1387
	word32 eax_1388
	byte SZO_1389
	byte C_1390
	word32 ecx_1393
	byte Z_1394
	byte S_1395
	byte al_1396
	word32 edx_1397
	byte CZ_1398
	selector fs_1399
	bcuiposr0 None_1400
	byte SO_1401
	byte dl_1404
	word16 si_1405
	call edi_1363 (retsize: 4; depth: 4)
		uses: al_1374,C_1368,CZ_1376,dl_1382,ds_1381,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1366,ebp_1364,ebx_1369,ecx_1371,edi_1363,edx_1375,es_1380,esi_1370,esp_1362,fs_1377,None_1378,S_1373,SCZO_1365,si_1383,SO_1379,SZO_1367,Z_1372
		defs: al_1396,C_1390,CZ_1398,dl_1404,ds_1403,eax_1388,ebp_1386,ebx_1391,ecx_1393,edi_1385,edx_1397,es_1402,esi_1392,esp_1384,fs_1399,None_1400,S_1395,SCZO_1387,si_1405,SO_1401,SZO_1389,Z_1394
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C68:
	edi_1011 = Mem1260[ebp_1103 + 0x0000000C:word32]
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B68:
	ecx_1234 = ecx_1234 + 0x00000001
	branch ecx_1234 != 0x00000004 l10016B60
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016B71:
	ds_1303 = ds_439
	es_1302 = es_438
	esi_1292 = esi_1509
	ebx_1291 = ebx_427
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C70:
	branch Mem448[ebp_1103 - 0x00000344:word32] < 0x00000000 l10016FF5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FF5:
	word32 eax_514 = Mem448[ebp_1103 - 0x00000334:word32]
	word32 esp_515 = esp_1104 - 0x00000004
	Mem516[esp_515:word32] = eax_514
	word32 esp_520
	word32 edi_521
	word32 ebp_522
	byte SCZO_523
	word32 eax_524
	byte SZO_525
	byte C_526
	word32 ebx_527
	word32 esi_528
	word32 ecx_529
	byte Z_530
	byte S_531
	byte al_532
	word32 edx_533
	byte CZ_534
	selector fs_535
	bcuiposr0 None_536
	byte SO_537
	selector es_538
	selector ds_539
	byte dl_540
	word16 si_541
	call Mem516[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_455,C_459,CZ_452,dl_440,ds_439,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_514,ebp_512,ebx_427,ecx_519,edi_518,edx_454,es_438,esi_457,esp_515,fs_435,None_436,S_431,SCZO_463,si_441,SO_464,SZO_458,Z_453
		defs: al_532,C_526,CZ_534,dl_540,ds_539,eax_524,ebp_522,ebx_527,ecx_529,edi_521,edx_533,es_538,esi_528,esp_520,fs_535,None_536,S_531,SCZO_523,si_541,SO_537,SZO_525,Z_530
	byte SCZO_545
	word32 eax_546
	byte SZO_547
	byte C_548
	word32 ebx_549
	word32 ecx_551
	byte Z_552
	byte S_553
	byte al_554
	word32 edx_555
	byte CZ_556
	selector fs_557
	bcuiposr0 None_558
	byte SO_559
	byte dl_562
	word16 si_563
	call edi_521 (retsize: 4; depth: 4)
		uses: al_532,C_526,CZ_534,dl_540,ds_539,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_524,ebp_522,ebx_527,ecx_529,edi_521,edx_533,es_538,esi_528,esp_520,fs_535,None_536,S_531,SCZO_523,si_541,SO_537,SZO_525,Z_530
		defs: al_554,C_548,CZ_556,dl_562,ds_561,eax_546,ebp_544,ebx_549,ecx_551,edi_543,edx_555,es_560,esi_550,esp_542,fs_557,None_558,S_553,SCZO_545,si_563,SO_559,SZO_547,Z_552
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C7D:
	word32 ebx_1000
	word32 eax_1105
	Mem591[ebp_1103 - 0x00000338:word32] = Mem448[ebp_1103 - 0x00000338:word32] & 0x00000000
	branch Mem591[ebx_1291 + 0x00000024:word32] >u 0x00000000 l10016C9D
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C8A:
	ds = ds_1303
	es = es_1302
	esi_1026 = esi_1292
	ebx_1000 = ebx_1291
	branch edi_1011 != 0x00000004 l10016D6A
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C93:
	branch (Mem591[ebx_1291 + 0x0000000C:byte] & 0x10) == 0x00 l10016D76
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C9D:
	word32 ecx_1111 = 0x00000000
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016C9F:
	branch Mem591[ecx_1111 * 0x00000004 + 0x100075F8:word32] != Mem591[(ebx_1291 + 0x00000014) + ecx_1111 * 0x00000004:word32] l10016CB0
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CB0:
	word32 ecx_1217 = 0x00000000
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CB2:
	ds = ds_1303
	es = es_1302
	esi_1026 = esi_1292
	ebx_1000 = ebx_1291
	branch Mem591[esi_1292 + 0x00000024 + ecx_1217 * 0x00000004:word32] != Mem591[(ebx_1291 + 0x00000014) + ecx_1217 * 0x00000004:word32] l10016D6A
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CC0:
	ecx_1217 = ecx_1217 + 0x00000001
	branch ecx_1217 != 0x00000004 l10016CB2
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CA8:
	ecx_1111 = ecx_1111 + 0x00000001
	branch ecx_1111 != 0x00000004 l10016C9F
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CAE:
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CC6:
	word32 eax_1118 = Mem591[ebp_1103 - 0x00000334:word32]
	word32 edx_1119 = ebx_1291 + 0x00000010
	word32 esp_1121 = esp_1104 - 0x00000004
	Mem1122[esp_1121:word32] = edx_1119
	Mem1124[esp_1121 - 0x00000004:word32] = eax_1118
	word32 esp_1128
	word32 edi_1129
	word32 ebp_1130
	byte SCZO_1131
	word32 eax_1132
	byte SZO_1133
	byte C_1134
	word32 ebx_1135
	word32 esi_1136
	word32 ecx_1137
	byte Z_1138
	byte S_1139
	byte al_1140
	word32 edx_1141
	byte CZ_1142
	selector fs_1143
	bcuiposr0 None_1144
	byte SO_1145
	selector es_1146
	selector ds_1147
	byte dl_1148
	word16 si_1149
	call Mem1124[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_578,C_1113,CZ_594,dl_1120,ds_569,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1118,ebp_586,ebx_583,ecx_1127,edi_1126,edx_1119,es_570,esi_580,esp_1123,fs_572,None_571,S_574,SCZO_1116,si_576,SO_589,SZO_1112,Z_1117
		defs: al_1140,C_1134,CZ_1142,dl_1148,ds_1147,eax_1132,ebp_1130,ebx_1135,ecx_1137,edi_1129,edx_1141,es_1146,esi_1136,esp_1128,fs_1143,None_1144,S_1139,SCZO_1131,si_1149,SO_1145,SZO_1133,Z_1138
	word32 esp_1150
	word32 edi_1151
	byte SCZO_1153
	word32 eax_1154
	byte SZO_1155
	byte C_1156
	word32 ecx_1159
	byte Z_1160
	byte S_1161
	byte al_1162
	word32 edx_1163
	byte CZ_1164
	selector fs_1165
	bcuiposr0 None_1166
	byte SO_1167
	byte dl_1170
	word16 si_1171
	call edi_1129 (retsize: 4; depth: 4)
		uses: al_1140,C_1134,CZ_1142,dl_1148,ds_1147,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_1132,ebp_1130,ebx_1135,ecx_1137,edi_1129,edx_1141,es_1146,esi_1136,esp_1128,fs_1143,None_1144,S_1139,SCZO_1131,si_1149,SO_1145,SZO_1133,Z_1138
		defs: al_1162,C_1156,CZ_1164,dl_1170,ds_1169,eax_1154,ebp_1152,ebx_1157,ecx_1159,edi_1151,edx_1163,es_1168,esi_1158,esp_1150,fs_1165,None_1166,S_1161,SCZO_1153,si_1171,SO_1167,SZO_1155,Z_1160
	Mem1173[esp_1150 - 0x00000004:word32] = 0x00000004
	edi_1011 = Mem1173[esp_1150 - 0x00000004:word32]
	Mem1176[ebp_1103 - 0x00000338:word32] = eax_1154
	esp_1104 = esp_1150
	branch Mem1176[0x10031000:word32] <=u edi_1011 l10016D6A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x100075F8 al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:0xF8 -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016CF1:
	fn1000C51D(ebp_1103 - 0x000001C8, 0x10003428)
	fn1000C51D(ebp_1103 - 0x000001B8, 0x1000410C)
	Mem1184[ebp_1103 - 0x000001A0:word32] = 0x00000010
	Mem1188[ebp_1103 - 0x000001A8:word32] = esi_1026 + 0x00000024
	Mem1190[ebp_1103 - 0x000001A4:word32] = 0x00000000
	Mem1191[ebp_1103 - 0x0000019C:word32] = 0x00000000
	Mem1192[ebp_1103 - 0x00000198:word32] = ebp_1103 - 0x00000338
	Mem1193[ebp_1103 - 0x00000194:word32] = 0x00000000
	Mem1194[ebp_1103 - 0x00000190:word32] = edi_1011
	Mem1195[ebp_1103 - 0x0000018C:word32] = 0x00000000
	Mem1200[esp_1150 - 0x00000004:word32] = ebp_1103 - 0x000001E8
	Mem1202[esp_1150 - 0x00000008:word32] = 0x00000006
	Mem1204[esp_1150 - 0x0000000C:word32] = 0x00000000
	Mem1206[esp_1150 - 0x00000010:word32] = 0x00000000
	word32 ecx_1208
	word32 edx_1209
	fn1000C491(0x10031000, 0x10009E39, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1208, out edx_1209, out esi_1026, out edi_1011)
	esp_1104 = esp_1150
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016D6A:
	eax_1105 = Mem591[ebp_1103 + 0x0000000C:word32]
	branch eax_1105 == 0x00000005 l10016FC8
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016D76:
	word32 eax_645 = Mem591[ebp_1103 - 0x00000334:word32]
	Mem649[ebp_1103 - 0x00000354:word32] = Mem591[ebp_1103 - 0x00000354:word32] & 0x00000000
	word32 esp_652 = esp_1104 - 0x00000004
	Mem653[esp_652:word32] = ebp_1103 - 0x00000354
	Mem655[esp_652 - 0x00000004:word32] = 0x10004C30
	Mem658[esp_652 - 0x00000008:word32] = eax_645
	word32 esp_660
	word32 edi_661
	word32 ebp_662
	byte SCZO_663
	word32 eax_664
	byte SZO_665
	byte C_666
	word32 ebx_667
	word32 esi_668
	word32 ecx_669
	byte Z_670
	byte S_671
	byte al_672
	word32 edx_673
	byte CZ_674
	selector fs_675
	bcuiposr0 None_676
	byte SO_677
	selector es_678
	selector ds_679
	byte dl_680
	word16 si_681
	call Mem658[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_646,C_651,CZ_594,dl_568,ds_569,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_645,ebp_643,ebx_583,ecx_659,edi_656,edx_577,es_570,esi_580,esp_657,fs_572,None_571,S_574,SCZO_593,si_576,SO_589,SZO_650,Z_575
		defs: al_672,C_666,CZ_674,dl_680,ds_679,eax_664,ebp_662,ebx_667,ecx_669,edi_661,edx_673,es_678,esi_668,esp_660,fs_675,None_676,S_671,SCZO_663,si_681,SO_677,SZO_665,Z_670
	byte SCZO_685
	byte SZO_687
	byte C_688
	word32 ecx_691
	byte Z_692
	byte S_693
	byte al_694
	byte CZ_696
	selector fs_697
	bcuiposr0 None_698
	byte SO_699
	byte dl_702
	word16 si_703
	word32 eax_1003
	word32 edx_1027
	call Mem658[edi_661:word32] (retsize: 4; depth: 4)
		uses: al_672,C_666,CZ_674,dl_680,ds_679,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_664,ebp_662,ebx_667,ecx_669,edi_661,edx_673,es_678,esi_668,esp_660,fs_675,None_676,S_671,SCZO_663,si_681,SO_677,SZO_665,Z_670
		defs: al_694,C_688,CZ_696,dl_702,ds_701,eax_686,ebp_684,ebx_689,ecx_691,edi_683,edx_695,es_700,esi_690,esp_682,fs_697,None_698,S_693,SCZO_685,si_703,SO_699,SZO_687,Z_692
	Mem704[ebp_1103 - 0x00000330:word32] = eax_1003
	branch eax_1003 < 0x00000000 l10016FA4
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016DAA:
	branch Mem704[ebp_1103 - 0x00000348:word32] != 0x00000000 l10016EC4
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016DB7:
	Mem957[ebp_1103 - 0x00000394:word32] = Mem704[Mem704[ebp_1103 - 0x0000033C:word32] + 0x00000020:word32]
	Mem960[esp_1104 - 0x00000004:word32] = ebp_1103 - 0x00000394
	Mem963[esp_1104 - 0x00000008:word32] = ebp_1103 - 0x00000348
	word32 eax_1085 = fn1001E10A(ebx_1000 + 0x0000000C, ebp_1103, edi_1011, es, ds, dwArg00, out ebx_1000, out esi_1026)
	Mem970[esp_1104 - 0x00000004:word32] = 0x00000004
	edi_1011 = Mem970[esp_1104 - 0x00000004:word32]
	Mem973[ebp_1103 - 0x00000330:word32] = eax_1085
	branch Mem973[0x10031000:word32] <=u edi_1011 l10016E50
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016DF0:
	fn1000C51D(ebp_1103 - 0x000002D8, 0x10003428)
	fn1000C51D(ebp_1103 - 0x000002C8, 0x10004134)
	Mem1063[ebp_1103 - 0x000002B0:word32] = edi_1011
	Mem1065[ebp_1103 - 0x000002B4:word32] = 0x00000000
	Mem1066[ebp_1103 - 0x000002B8:word32] = ebp_1103 - 0x00000330
	Mem1067[ebp_1103 - 0x000002AC:word32] = 0x00000000
	Mem1071[esp_1104 - 0x00000004:word32] = ebp_1103 - 0x000002F8
	Mem1073[esp_1104 - 0x00000008:word32] = 0x00000005
	Mem1075[esp_1104 - 0x0000000C:word32] = 0x00000000
	Mem1077[esp_1104 - 0x00000010:word32] = 0x00000000
	word32 ecx_1079
	word32 edx_1080
	fn1000C491(0x10031000, 0x10009DD5, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1079, out edx_1080, out esi_1026, out edi_1011)
	eax_1085 = Mem1077[ebp_1103 - 0x00000330:word32]
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E50:
	branch eax_1085 < 0x00000000 l10016FA4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E58:
	branch fn1000CDE4(out edx_1027) != 0x00 l10016E66
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E61:
	branch Mem973[ebx_1000 + 0x00000008:word32] == edi_1011 l10016EBE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x10002FE8 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E66:
	branch Mem973[ebx_1000 + 0x00000024:word32] <=u 0x00000000 l10016EA4
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x10002FE8 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E6C:
	word32 ebx_1031 = Mem973[ebp_1103 - 0x00000348:word32]
	edi_1011 = Mem973[Mem973[ebx_1000 + 0x00000028:word32]:word32]
	Mem1035[esp_1104 - 0x00000004:word32] = ebx_1031 + 0x00000034
	AcquireSRWLockExclusive(Mem1035[esp_1104 - 0x00000004:PSRWLOCK])
	Mem1043[ebx_1031 + 0x00000038:word32] = (word32) (edi_1011 == 0x00000201) + 0x00000001
	branch ebx_1031 == 0x00000034 l10016E9E
// DataOut: cs ds eax ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x10002FE8 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E97:
	Mem1052[esp_1104 - 0x00000004:word32] = ebx_1031 + 0x00000034
	ReleaseSRWLockExclusive(Mem1052[esp_1104 - 0x00000004:PSRWLOCK])
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x10002FE8 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016E9E:
	ebx_1000 = Mem1043[ebp_1103 - 0x00000360:word32]
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x10002FE8 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016EA4:
	word32 edx_1017 = Mem973[ebx_1000 + 0x00000008:word32]
	word32 ecx_1018 = Mem973[ebp_1103 - 0x00000348:word32]
	Mem1021[esp_1104 - 0x00000004:word32] = Mem973[Mem973[ebp_1103 - 0x0000033C:word32] + 0x00000020:word32]
	Mem1024[esp_1104 - 0x00000008:word32] = Mem1021[ebx_1000 + 0x00000044:word32]
	edx_1027 = fn10015FF7(ecx_1018, edx_1017, ebp_1103, edi_1011, es, ds, dwArg00, dwArg04, out ebx_1000, out esi_1026)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:0x10002FE8 al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016EBE:
	eax_1003 = Mem973[ebp_1103 - 0x00000330:word32]
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016EC4:
	branch eax_1003 < 0x00000000 l10016FA4
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016ECC:
	word32 ecx_822 = Mem704[ebp_1103 - 0x00000348:word32]
	Mem825[ebp_1103 - 0x0000035C:word32] = Mem704[ebp_1103 - 0x0000035C:word32] & 0x00000000
	Mem829[esp_1104 - 0x00000004:word32] = ebp_1103 - 0x0000035C
	word32 eax_830 = fn1002E26A(ecx_822, edx_1027, ebp_1103, esi_1026, es, ds, dwArg00)
	Mem832[ebp_1103 - 0x00000330:word32] = eax_830
	branch eax_830 < 0x00000000 l10016F99
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016EF3:
	word32 eax_859 = Mem832[ebp_1103 - 0x00000354:word32]
	Mem862[esp_1104 - 0x00000004:word32] = Mem832[ebp_1103 - 0x0000035C:word32]
	Mem864[esp_1104 - 0x00000008:word32] = eax_859
	word32 esp_868
	word32 edi_869
	word32 ebp_870
	byte SCZO_871
	word32 eax_872
	byte SZO_873
	byte C_874
	word32 ebx_875
	word32 esi_876
	word32 ecx_877
	byte Z_878
	byte S_879
	byte al_880
	word32 edx_881
	byte CZ_882
	selector fs_883
	bcuiposr0 None_884
	byte SO_885
	selector es_886
	selector ds_887
	byte dl_888
	word16 si_889
	call Mem864[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_812,C_835,CZ_808,dl_807,ds_701,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_859,ebp_684,ebx_815,ecx_867,edi_866,edx_811,es_700,esi_814,esp_863,fs_697,None_698,S_834,SCZO_810,si_703,SO_699,SZO_833,Z_809
		defs: al_880,C_874,CZ_882,dl_888,ds_887,eax_872,ebp_870,ebx_875,ecx_877,edi_869,edx_881,es_886,esi_876,esp_868,fs_883,None_884,S_879,SCZO_871,si_889,SO_885,SZO_873,Z_878
	word32 esp_890
	word32 edi_891
	byte SCZO_893
	word32 eax_894
	byte SZO_895
	byte C_896
	word32 ecx_899
	byte Z_900
	byte S_901
	byte al_902
	word32 edx_903
	byte CZ_904
	selector fs_905
	bcuiposr0 None_906
	byte SO_907
	byte dl_910
	word16 si_911
	call edi_869 (retsize: 4; depth: 4)
		uses: al_880,C_874,CZ_882,dl_888,ds_887,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_872,ebp_870,ebx_875,ecx_877,edi_869,edx_881,es_886,esi_876,esp_868,fs_883,None_884,S_879,SCZO_871,si_889,SO_885,SZO_873,Z_878
		defs: al_902,C_896,CZ_904,dl_910,ds_909,eax_894,ebp_892,ebx_897,ecx_899,edi_891,edx_903,es_908,esi_898,esp_890,fs_905,None_906,S_901,SCZO_893,si_911,SO_907,SZO_895,Z_900
	Mem913[esp_890 - 0x00000004:word32] = 0x00000004
	edi_1011 = Mem913[esp_890 - 0x00000004:word32]
	Mem916[ebp_1103 - 0x00000330:word32] = eax_894
	esp_1104 = esp_890
	branch Mem916[0x10031000:word32] <=u edi_1011 l10016F99
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016F20:
	fn1000C51D(ebp_1103 - 0x00000168, 0x10003428)
	fn1000C51D(ebp_1103 - 0x00000158, 0x10004160)
	Mem924[ebp_1103 - 0x00000140:word32] = 0x00000010
	Mem928[ebp_1103 - 0x00000148:word32] = esi_1026 + 0x00000024
	Mem930[ebp_1103 - 0x00000144:word32] = 0x00000000
	Mem931[ebp_1103 - 0x0000013C:word32] = 0x00000000
	Mem932[ebp_1103 - 0x00000138:word32] = ebp_1103 - 0x00000330
	Mem933[ebp_1103 - 0x00000134:word32] = 0x00000000
	Mem934[ebp_1103 - 0x00000130:word32] = edi_1011
	Mem935[ebp_1103 - 0x0000012C:word32] = 0x00000000
	Mem939[esp_890 - 0x00000004:word32] = ebp_1103 - 0x00000188
	Mem941[esp_890 - 0x00000008:word32] = 0x00000006
	Mem943[esp_890 - 0x0000000C:word32] = 0x00000000
	Mem945[esp_890 - 0x00000010:word32] = 0x00000000
	word32 ecx_947
	word32 edx_948
	fn1000C491(0x10031000, 0x10009E39, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_947, out edx_948, out esi_1026, out edi_1011)
	esp_1104 = esp_890
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016F99:
	word32 edx_856
	fn1000C640(ebp_1103 - 0x0000035C, ebx_1000, esi_1026, edi_1011, es, ds, out edx_856, out esi_1026)
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FA4:
	word32 ecx_726 = Mem704[ebp_1103 - 0x00000354:word32]
	branch ecx_726 == 0x00000000 l10016FC5
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FAE:
	Mem753[ebp_1103 - 0x00000354:word32] = Mem704[ebp_1103 - 0x00000354:word32] & 0x00000000
	word32 esp_757 = esp_1104 - 0x00000004
	Mem758[esp_757:word32] = ecx_726
	word32 esp_761
	word32 edi_762
	word32 ebp_763
	byte SCZO_764
	word32 eax_765
	byte SZO_766
	byte C_767
	word32 ebx_768
	word32 esi_769
	word32 ecx_770
	byte Z_771
	byte S_772
	byte al_773
	word32 edx_774
	byte CZ_775
	selector fs_776
	bcuiposr0 None_777
	byte SO_778
	selector es_779
	selector ds_780
	byte dl_781
	word16 si_782
	call Mem758[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_719,C_755,CZ_713,dl_708,ds_709,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_756,ebp_724,ebx_722,ecx_760,edi_759,edx_718,es_710,esi_721,esp_757,fs_712,None_711,S_714,SCZO_717,si_716,SO_715,SZO_754,Z_728
		defs: al_773,C_767,CZ_775,dl_781,ds_780,eax_765,ebp_763,ebx_768,ecx_770,edi_762,edx_774,es_779,esi_769,esp_761,fs_776,None_777,S_772,SCZO_764,si_782,SO_778,SZO_766,Z_771
	byte SCZO_786
	word32 eax_787
	byte SZO_788
	byte C_789
	word32 ecx_792
	byte Z_793
	byte S_794
	byte al_795
	word32 edx_796
	byte CZ_797
	selector fs_798
	bcuiposr0 None_799
	byte SO_800
	byte dl_803
	word16 si_804
	call edi_762 (retsize: 4; depth: 4)
		uses: al_773,C_767,CZ_775,dl_781,ds_780,dwLoc0340_28,dwLoc0350_82,dwLoc0364_23,dwLoc037C_32,dwLoc0380_31,dwLoc0384_30,dwLoc0388_29,dwLoc03B4_81,dwLoc03B8_80,dwLoc03BC_79,dwLoc03C0_78,dwLoc03C4_18,dwLoc03C8_21,dwLoc03CC_34,dwLoc03D0_99,dwLoc03D4_100,dwLoc03D8_101,dwLoc04_6,dwLoc08_12,eax_765,ebp_763,ebx_768,ecx_770,edi_762,edx_774,es_779,esi_769,esp_761,fs_776,None_777,S_772,SCZO_764,si_782,SO_778,SZO_766,Z_771
		defs: al_795,C_789,CZ_797,dl_803,ds_802,eax_787,ebp_785,ebx_790,ecx_792,edi_784,edx_796,es_801,esi_791,esp_783,fs_798,None_799,S_794,SCZO_786,si_804,SO_800,SZO_788,Z_793
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FC5:
	eax_1105 = Mem704[ebp_1103 + 0x0000000C:word32]
// DataOut: cs ds eax ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FC8:
	branch eax_1105 != 0x00000004 l10016FF1
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FCD:
	word32 eax_625 = ebx_1000 + 0x0000000C
	branch (Mem591[eax_625:byte] & 0x20) == 0x00 l10016FDE
// DataOut: cs ds eax ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FD5:
	branch Mem591[ebp_1103 - 0x00000338:word32] == 0x00000000 l10016FF1
// DataOut: cs ds eax ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FDE:
	branch (Mem591[eax_625:byte] & 0x10) == 0x00 l10016FEC
// DataOut: cs ds eax ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FE3:
	branch Mem591[ebp_1103 - 0x00000338:word32] >= 0x00000000 l10016FF1
// DataOut: cs ds eax ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FEC:
	branch (Mem591[eax_625:byte] & 0x30) != 0x00 l1001700B
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001700B:
	al_477 = Mem448[ebp_1103 - 0x00000329:byte]
// DataOut: al cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10016FF1:
	al_477 = 0x01
// DataOut: al cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017011:
	Mem486[esi_1026 + 0x00000034:byte] = al_477
	ebx_111 = fn10015E2F(ebp_1103 - 0x00000328, out esi_339)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001701F:
	word32 edx_367
	fn1000C640(ebp_1103 - 0x00000334, ebx_111, esi_339, edi_1011, es, ds, out edx_367, out esi_280)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001702A:
	word32 edx_315
	word32 esi_316
	fn1000C640(ebp_1103 - 0x00000358, ebx_111, esi_280, edi_1011, es, ds, out edx_315, out esi_316)
	esi_114 = Mem274[ebp_1103 - 0x0000033C:word32]
	ecx_1680 = Mem274[ebp_1103 - 0x00000340:word32]
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017041:
	ecx_1680 = ecx_1680 + 0x00000001
	Mem261[ebp_1103 - 0x00000340:word32] = ecx_1680
	branch ecx_1680 <u Mem261[ebp_1103 - 0x0000034C:word32] l1001682C
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017054:
	fn1000F2B0(ebp_1103 - 0x00000374)
	word32 esi_215
	eax_142 = fn1000C640(ebp_1103 - 0x00000348, ebx_111, esi_114, edi_1011, es, ds, out edx, out esi_215)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp

l1001706A:
	fn1000F2B0(ebp_1103 - 0x00000384)
	fn1000F2B0(ebp_1103 - 0x00000374)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp

l10017080:
	fn1000F2B0(ebp_1103 - 0x00000384)
	word32 esp_65 = esp_1104 + 0x00000004
	word32 ecx_73
	fn1002F420(eax_142, Mem0[ebp_1103 - 0x00000004:word32] ^ ebp_1103, edx, Mem0[esp_65 + 0x00000004:word32], ebp_1103, Mem0[esp_65:word32], Mem0[esp_1104:word32], es, ds, out ecx_73)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp

fn100165D6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -988(fp):<invalid> -984(fp):<invalid> -980(fp):<invalid> -976(fp):<invalid> -972(fp):edi -968(fp):esi -964(fp):ebx -960(fp):<invalid> -956(fp):<invalid> -952(fp):<invalid> -948(fp):<invalid> -940(fp):fp - 0x00000338 -904(fp):0x00000000 -900(fp):0x00000000 -896(fp):0x00000000 -892(fp):0x00000000 -888(fp):<invalid> -884(fp):<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):ecx -848(fp):<invalid> -844(fp):<invalid> -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):<invalid> -813(fp):0x00 -812(fp):<invalid> -796(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -620(fp):fp - 0x00000350 -616(fp):fp - 0x0000027C ^ fp - 0x0000027C -612(fp):<invalid> -608(fp):fp - 0x0000027C ^ fp - 0x0000027C -604(fp):fp - 0x00000368 -600(fp):fp - 0x0000027C ^ fp - 0x0000027C -596(fp):<invalid> -592(fp):fp - 0x0000027C ^ fp - 0x0000027C -8(fp):<invalid> -4(fp):ebp



word32 fn10017312(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn10017312_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10017312:
	word32 eax_30 = CoTaskMemAlloc(Mem0[ecx + 0x00000014:word32])
	Mem34[edx + 0x00000018:word32] = eax_30
	word32 ebx_37 = 0x00000000 - (-eax_30 == 0x00000000)
	branch eax_30 == 0x00000000 l1001736B
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10017344:
	Mem61[edx:word32] = Mem34[ecx:word32]
	Mem65[edx + 0x00000004:word32] = Mem61[ecx + 0x00000004:word32]
	Mem69[edx + 0x00000008:word32] = Mem65[ecx + 0x00000008:word32]
	Mem73[edx + 0x0000000C:word32] = Mem69[ecx + 0x0000000C:word32]
	Mem77[edx + 0x00000010:word32] = Mem73[ecx + 0x00000010:word32]
	word32 ecx_80 = Mem77[ecx + 0x00000014:word32]
	Mem83[edx + 0x00000014:word32] = ecx_80
	memcpy(eax_30, Mem83[ecx + 0x00000018:word32], ecx_80)
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 esi:ecx eax:<invalid> edx:<invalid> ebx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001736B:
	return (ebx_37 & 0x7FF8FFF2) + 0x8007000E
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp

fn10017312_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> edx:<invalid> ebx:ebx ecx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp



void fn100173DE(word32 ecx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)
fn100173DE_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l100173DE:
	Mem25[ecx + 0x0000000C:word32] = dwArg08
	Mem30[ecx + 0x00000008:word32] = dwArg04
	byte cl_19 = (byte) dwArg08
	word32 esi_180 = 0x00000000
	branch dwArg0C == 0x00000000 l10017426
// DataOut: cl cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017401:
	branch Mem30[dwArg0C + 0x00000014:word32] <=u 0x00000000 l10017417
// DataOut: cl cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017417:
	branch dwArg04 != 0x00000004 l10017426
// DataOut: cl cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l1001741C:
	branch (cl_19 & 0x10) == 0x00 l10017426
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017421:
	Mem188[ecx + 0x00000010:word32] = Mem30[dwArg0C:word32]
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017406:
	esi_180 = fn10017312(dwArg0C, ecx + 0x00000010)
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017426:
	word32 eax_44 = Mem30[ecx + 0x0000003C:word32]
	Mem46[ecx + 0x0000003C:word32] = Mem30[ecx + 0x0000003C:word32] & 0x00000000
	CoTaskMemFree(eax_44)
	branch esi_180 < 0x00000000 l100174A0
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017438:
	branch dwArg04 != 0x00000004 l100174A0
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l1001743D:
	branch dwArg10 == 0x00000000 l100174A0
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017443:
	branch dwArg14 == 0x00000000 l100174A0
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017449:
	branch dwArg18 == 0x00000000 l100174A0
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017450:
	word32 eax_125 = CoTaskMemAlloc(dwArg18)
	word32 ecx_127 = Mem46[ecx + 0x0000003C:word32]
	Mem130[ecx + 0x0000003C:word32] = Mem46[ecx + 0x0000003C:word32] & 0x00000000
	CoTaskMemFree(ecx_127)
	Mem136[ecx + 0x0000003C:word32] = eax_125
	branch eax_125 == 0x00000000 l100174A0
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10017483:
	Mem149[ecx + 0x0000002C:word32] = Mem136[dwArg10:word32]
	Mem153[ecx + 0x00000030:word32] = Mem149[dwArg10 + 0x00000004:word32]
	Mem157[ecx + 0x00000034:word32] = Mem153[dwArg10 + 0x00000008:word32]
	Mem161[ecx + 0x00000038:word32] = Mem157[dwArg10 + 0x0000000C:word32]
	memcpy(eax_125, dwArg14, dwArg18)
	Mem174[ecx + 0x00000040:word32] = dwArg18
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +001C(32)

l100174A0:
	branch Mem46[ecx + 0x0000003C:word32] != 0x00000000 l100174B6
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +001C(32)

l100174A6:
	Mem89[ecx + 0x00000040:word32] = Mem46[ecx + 0x00000040:word32] & 0x00000000
	Mem95[ecx + 0x0000002C:word32] = Mem89[0x100075F8:word32]
	Mem99[ecx + 0x00000030:word32] = Mem95[0x100075FC:word32]
	Mem103[ecx + 0x00000034:word32] = Mem99[0x10007600:word32]
	Mem107[ecx + 0x00000038:word32] = Mem103[0x10007604:word32]
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -001C(32) Stack +001C(32)

l100174B6:
	fn1000F114(ecx + 0x00000044, ecx, es, ds, dwArg1C)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100173DE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:<invalid> esi:esi edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn100174CD(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(8)
fn100174CD_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(8)

l100174CD:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem20[ecx + 0x00000004:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001738
	Mem22[ecx + 0x00000008:word32] = dwArg04
	word32 ebp_42 = fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 edi_17 = ecx
	branch dwArg04 == 0x00000000 l10017509
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(8)

l100174F7:
	word32 esp_67
	word32 edi_68
	word32 ebp_69
	word32 ecx_70
	word32 eax_71
	byte SZO_72
	byte C_73
	byte Z_74
	word32 esi_75
	byte al_76
	word32 edx_77
	word32 ebx_78
	selector es_79
	selector ds_80
	call Mem22[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: al,C_25,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_61,dwLoc14_63,eax_59,ebp_7,ebx,ecx_65,edi_17,edx,es,esi_64,esp_62,SZO_23,Z_24
		defs: al_76,C_73,ds_80,eax_71,ebp_69,ebx_78,ecx_70,edi_68,edx_77,es_79,esi_75,esp_67,SZO_72,Z_74
	word32 esp_81
	word32 ecx_84
	word32 eax_85
	byte SZO_86
	byte C_87
	byte Z_88
	word32 esi_89
	byte al_90
	call esi_75 (retsize: 4; depth: 4)
		uses: al_76,C_73,ds_80,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_61,dwLoc14_63,eax_71,ebp_69,ebx_78,ecx_70,edi_68,edx_77,es_79,esi_75,esp_67,SZO_72,Z_74
		defs: al_90,C_87,ds_94,eax_85,ebp_83,ebx_92,ecx_84,edi_82,edx_91,es_93,esi_89,esp_81,SZO_86,Z_88
	esi = Mem22[esp_81:word32]
	esp_15 = esp_81 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(8)

l10017509:
	Mem47[edi_17 + 0x0000000C:byte] = bArg08
	word32 ecx_54
	fn1002F420(edi_17, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_42, esi, Mem47[esp_15:word32], es, ds, out ecx_54)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn100174CD_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



void fn10017A4A(word32 ecx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi esp rax rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn10017A4A_entry:
// DataOut: cs ds ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10017A4A:
	word32 esi_15 = ecx
	branch Mem0[ecx:word32] != 0x00000001 l10017A66
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10017A54:
	word32 esi_19 = fn10014F08(ecx)
	esi_15 = fn1001E54D(0x10031000, esi_19 + 0x00000008, ebx, esi_19, edi, es, ds)
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi

l10017A66:
	Mem16[esi_15:word32] = 0x00000003
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -4(fp):esi

fn10017A4A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -4(fp):esi



word32 fn10017E3B(word32 ebp, selector es, selector ds, word32 dwArg08, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0008(32)
fn10017E3B_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10017E3B:
	word32 edi_109
	word32 edx_42 = fn10015E51(fp - 0x000000C0, 0x10004288, dwArg08 + 0x00000024)
	word32 esi_44 = Mem0[edx:word32]
	Mem47[fp - 0x000000C4:word32] = fp - 0x000000D0
	word32 esi_50
	word32 edi_51
	word32 eax_52 = fn1000EF25(fp - 0x000000C4, edx_42, dwArg08, esi_44, es, ds, out esi_50, out edi_51)
	Mem55[fp - 0x000000FC:word32] = eax_52
	Mem58[fp - 0x00000100:word32] = Mem55[fp + 0x00000004:word32]
	Mem60[fp - 0x00000104:word32] = edi_51
	word32 esp_61
	word32 edi_62
	word32 ebp_63
	byte SCZO_64
	word32 eax_65
	byte SZO_66
	byte C_67
	word32 ebx_68
	word32 esi_69
	word32 edx_70
	word32 ecx_71
	byte CZ_72
	byte al_73
	byte Z_74
	byte S_75
	selector es_76
	selector ds_77
	call Mem60[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_29,ds,dwLoc0100_34,dwLoc04_6,dwLoc0C_12,dwLocA4_41,dwLocA8_40,dwLocAC_39,dwLocB0_38,dwLocC0_37,dwLocD0_36,dwLocD4_26,dwLocF0_15,dwLocF4_20,dwLocF8_22,dwLocFC_32,eax_52,ebp_7,ebx_17,ecx_53,edi_51,edx_42,es,esi_50,esp_59,SZO_28
		defs: al_73,C_67,CZ_72,ds_77,eax_65,ebp_63,ebx_68,ecx_71,edi_62,edx_70,es_76,esi_69,esp_61,S_75,SCZO_64,SZO_66,Z_74
	word32 esp_78
	word32 edi_79
	byte SCZO_81
	word32 eax_82
	byte SZO_83
	byte C_84
	word32 esi_86
	word32 edx_87
	word32 ecx_88
	byte CZ_89
	byte al_90
	byte Z_91
	byte S_92
	selector ds_118
	selector es_119
	word32 ebx_179
	word32 ebp_125
	call Mem60[esi_69 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: al_73,C_67,CZ_72,ds_77,dwLoc0100_34,dwLoc04_6,dwLoc0C_12,dwLocA4_41,dwLocA8_40,dwLocAC_39,dwLocB0_38,dwLocC0_37,dwLocD0_36,dwLocD4_26,dwLocF0_15,dwLocF4_20,dwLocF8_22,dwLocFC_32,eax_65,ebp_63,ebx_68,ecx_71,edi_62,edx_70,es_76,esi_69,esp_61,S_75,SCZO_64,SZO_66,Z_74
		defs: al_90,C_84,CZ_89,ds_94,eax_82,ebp_80,ebx_85,ecx_88,edi_79,edx_87,es_93,esi_86,esp_78,S_92,SCZO_81,SZO_83,Z_91
	Mem96[ebp_125 - 0x000000C8:word32] = eax_82
	word32 edx_97
	word32 eax_98 = fn10015F5E(ebp_125 - 0x000000BC, out edx_97)
	Mem101[ebp_125 - 0x000000E4:word32] = eax_98
	Mem102[ebp_125 - 0x000000E0:word32] = edx_97
	word32 esi_100 = 0x00000000
	branch edx_97 >u 0x00000000 l10017EEE
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l10017EE5:
	branch eax_98 <=u 0x00000064 l10017F74
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017EEE:
	branch Mem102[0x10031000:word32] <=u 0x00000004 l10018002
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018002:
	edi_109 = ebx_179 + 0x00000024
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017EFB:
	Mem446[esp_78 - 0x00000004:word32] = 0x00004000
	Mem448[esp_78 - 0x00000008:word32] = 0x00000000
	word32 edx_450
	branch (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_450) == 0x00 l10017F74
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017F74:
	edi_109 = ebx_179 + 0x00000024
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017F0F:
	fn1000C58C(ebp_125 - 0x0000004C, 0x10004288)
	Mem460[ebp_125 - 0x00000038:word32] = 0x00000000
	Mem461[ebp_125 - 0x0000002C:word32] = ebp_125 - 0x000000E4
	Mem464[ebp_125 - 0x0000003C:word32] = ebx_179 + 0x00000024
	Mem465[ebp_125 - 0x00000034:word32] = 0x00000010
	Mem466[ebp_125 - 0x00000030:word32] = 0x00000000
	Mem467[ebp_125 - 0x00000028:word32] = 0x00000000
	Mem468[ebp_125 - 0x00000024:word32] = 0x00000008
	Mem469[ebp_125 - 0x00000020:word32] = 0x00000000
	Mem470[ebp_125 - 0x0000001C:word32] = ebp_125 - 0x000000C8
	Mem471[ebp_125 - 0x00000018:word32] = 0x00000000
	Mem472[ebp_125 - 0x00000014:word32] = 0x00000004
	Mem473[ebp_125 - 0x00000010:word32] = 0x00000000
	Mem477[esp_78 - 0x00000004:word32] = ebp_125 - 0x0000006C
	Mem479[esp_78 - 0x00000008:word32] = 0x00000006
	Mem481[esp_78 - 0x0000000C:word32] = 0x00000000
	Mem483[esp_78 - 0x00000010:word32] = 0x00000000
	word32 ecx_485
	word32 edx_486
	fn1000C491(0x10031000, 0x10009C38, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_485, out edx_486, out esi_100, out edi_109)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:0x10031000 esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017F77:
	branch Mem102[0x10031000:word32] <=u 0x00000004 l10018005
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -48(fp):fp - 0x000000E8 -44(fp):<invalid> -40(fp):0x00000008 -36(fp):<invalid> -32(fp):fp - 0x000000CC -28(fp):<invalid> -24(fp):0x00000004 -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10017F84:
	fn1000C51D(ebp_125 - 0x0000006C, 0x10003428)
	fn1000C51D(ebp_125 - 0x0000005C, 0x100042D4)
	Mem389[esp_78 - 0x00000004:word32] = 0x00000004
	Mem391[ebp_125 - 0x0000004C:word32] = edi_109
	word32 ecx_392 = Mem391[esp_78 - 0x00000004:word32]
	Mem394[ebp_125 - 0x0000003C:word32] = ebp_125 + 0x00000008
	Mem397[esp_78 - 0x00000004:word32] = 0x00000008
	Mem398[ebp_125 - 0x00000034:word32] = ecx_392
	Mem399[ebp_125 - 0x0000002C:word32] = ebp_125 - 0x000000C8
	Mem401[ebp_125 - 0x00000024:word32] = ecx_392
	word32 ecx_402 = Mem401[esp_78 - 0x00000004:word32]
	Mem404[ebp_125 - 0x00000048:word32] = esi_100
	Mem405[ebp_125 - 0x00000044:word32] = 0x00000010
	Mem406[ebp_125 - 0x00000040:word32] = esi_100
	Mem407[ebp_125 - 0x00000038:word32] = esi_100
	Mem408[ebp_125 - 0x00000030:word32] = esi_100
	Mem409[ebp_125 - 0x00000028:word32] = esi_100
	Mem410[ebp_125 - 0x00000020:word32] = esi_100
	Mem411[ebp_125 - 0x0000001C:word32] = ebp_125 - 0x000000E4
	Mem412[ebp_125 - 0x00000018:word32] = esi_100
	Mem413[ebp_125 - 0x00000014:word32] = ecx_402
	Mem414[ebp_125 - 0x00000010:word32] = esi_100
	Mem418[esp_78 - 0x00000004:word32] = ebp_125 - 0x0000008C
	Mem420[esp_78 - 0x00000008:word32] = ecx_402
	Mem422[esp_78 - 0x0000000C:word32] = esi_100
	Mem424[esp_78 - 0x00000010:word32] = esi_100
	word32 ecx_426
	word32 edx_427
	word32 esi_428
	fn1000C491(0x10031000, 0x10009976, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_426, out edx_427, out esi_428, out edi_109)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -48(fp):fp - 0x000000E8 -44(fp):<invalid> -40(fp):0x00000008 -36(fp):<invalid> -32(fp):fp - 0x000000CC -28(fp):<invalid> -24(fp):0x00000004 -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018005:
	word32 esp_113 = esp_78
	word32 esi_114 = Mem102[ebp_125 - 0x000000C8:word32]
	branch esi_114 < 0x00000000 l1001816C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018013:
	word32 ecx_155 = Mem102[ebp_125 - 0x000000D0:word32]
	Mem156[ebp_125 - 0x000000D8:word32] = Mem102[ebp_125 - 0x000000CC:word32]
	byte al_157 = Mem156[ebx_179 + 0x00000035:byte]
	Mem158[ebp_125 - 0x000000C1:byte] = al_157
	Mem160[ebp_125 - 0x000000C0:word32] = 0x00000000
	__lock()
	Mem162[ecx_155 + 0x0000001C:word32] = __xadd(Mem160[ecx_155 + 0x0000001C:word32], 0x00000001)
	word32 ecx_165 = Mem162[ebp_125 - 0x000000C0:word32]
	Mem166[ebp_125 - 0x000000D0:word32] = 0x00000002
	Mem168[ebp_125 - 0x000000D4:word32] = Mem166[ebx_179 + 0x0000001C:word32]
	branch ecx_165 == 0x00000000 l1001806E
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -212(fp):ecx -208(fp):0x00000000 -204(fp):<invalid> -196(fp):fp - 0x000000D0 -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018058:
	Mem332[ebp_125 - 0x000000C0:word32] = 0x00000000
	Mem335[esp_78 - 0x00000004:word32] = ecx_165
	word32 esp_338
	word32 edi_339
	word32 ebp_340
	byte SCZO_341
	word32 eax_342
	byte SZO_343
	byte C_344
	word32 ebx_345
	word32 esi_346
	word32 edx_347
	word32 ecx_348
	byte CZ_349
	byte al_350
	byte Z_351
	byte S_352
	selector es_353
	selector ds_354
	call Mem335[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_157,C_171,CZ_106,ds_94,dwLoc0100_34,dwLoc04_6,dwLoc0C_12,dwLocA4_41,dwLocA8_40,dwLocAC_39,dwLocB0_38,dwLocC0_37,dwLocD0_36,dwLocD4_26,dwLocF0_15,dwLocF4_20,dwLocF8_22,dwLocFC_32,eax_333,ebp_80,ebx_85,ecx_337,edi_109,edx_154,es_93,esi_336,esp_334,S_116,SCZO_163,SZO_169,Z_170
		defs: al_350,C_344,CZ_349,ds_354,eax_342,ebp_340,ebx_345,ecx_348,edi_339,edx_347,es_353,esi_346,esp_338,S_352,SCZO_341,SZO_343,Z_351
	byte SCZO_358
	word32 eax_359
	byte SZO_360
	byte C_361
	word32 edx_364
	word32 ecx_365
	byte CZ_366
	byte al_367
	byte Z_368
	byte S_369
	call esi_346 (retsize: 4; depth: 4)
		uses: al_350,C_344,CZ_349,ds_354,dwLoc0100_34,dwLoc04_6,dwLoc0C_12,dwLocA4_41,dwLocA8_40,dwLocAC_39,dwLocB0_38,dwLocC0_37,dwLocD0_36,dwLocD4_26,dwLocF0_15,dwLocF4_20,dwLocF8_22,dwLocFC_32,eax_342,ebp_340,ebx_345,ecx_348,edi_339,edx_347,es_353,esi_346,esp_338,S_352,SCZO_341,SZO_343,Z_351
		defs: al_367,C_361,CZ_366,ds_371,eax_359,ebp_357,ebx_362,ecx_365,edi_356,edx_364,es_370,esi_363,esp_355,S_369,SCZO_358,SZO_360,Z_368
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001806E:
	word32 esp_184 = esp_113 - 0x00000004
	Mem185[esp_184:word32] = ebp_125 + 0x00000010
	Mem188[esp_184 - 0x00000004:word32] = ebp_125 - 0x000000D8
	Mem191[esp_184 - 0x00000008:word32] = ebp_125 - 0x000000C1
	Mem194[esp_184 - 0x0000000C:word32] = ebp_125 - 0x000000D0
	word32 esi_197
	word32 eax_198 = fn1001E5EA(ebp_125 - 0x000000C0, ebp_125 - 0x000000D4, esi_114, edi_109, es_119, ds_118, out esi_197)
	Mem200[ebp_125 - 0x000000C8:word32] = eax_198
	branch eax_198 < 0x00000000 l100180B6
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100180A2:
	Mem324[esp_184:word32] = Mem200[ebp_125 - 0x000000C0:word32]
	Mem331[ebp_125 - 0x000000C8:word32] = fn1002224F(Mem324[ebx_179 + 0x00000038:word32], ebp_125, es_119, ds_118, dwArg00, out ebx_179, out esi_197, out edi_109)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100180B6:
	branch Mem200[0x10031000:word32] <=u 0x00000004 l1001815B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100180C3:
	fn1000C51D(ebp_125 - 0x0000006C, 0x10003428)
	fn1000C51D(ebp_125 - 0x0000005C, 0x100042FC)
	Mem236[ebp_125 - 0x0000004C:word32] = edi_109
	Mem237[ebp_125 - 0x0000003C:word32] = ebp_125 + 0x00000008
	word32 eax_241 = Mem237[ebp_125 - 0x000000C0:word32]
	word32 esp_242 = esp_113 - 0x00000004
	Mem243[esp_242:word32] = 0x00000004
	word32 edi_244 = Mem243[esp_242:word32]
	Mem246[ebp_125 - 0x00000048:word32] = 0x00000000
	Mem247[ebp_125 - 0x00000044:word32] = 0x00000010
	Mem248[ebp_125 - 0x00000040:word32] = 0x00000000
	Mem249[ebp_125 - 0x00000038:word32] = 0x00000000
	Mem250[ebp_125 - 0x00000034:word32] = edi_244
	Mem251[ebp_125 - 0x00000030:word32] = 0x00000000
	Mem254[esp_242:word32] = eax_241
	word32 esp_257
	word32 edi_258
	word32 ebp_259
	byte SCZO_260
	word32 eax_261
	byte SZO_262
	byte C_263
	word32 ebx_264
	word32 esi_265
	word32 edx_266
	word32 ecx_267
	byte CZ_268
	byte al_269
	byte Z_270
	byte S_271
	selector es_272
	selector ds_273
	call Mem254[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_180,C_240,CZ_211,ds_172,dwLoc0100_34,dwLoc04_6,dwLoc0C_12,dwLocA4_41,dwLocA8_40,dwLocAC_39,dwLocB0_38,dwLocC0_37,dwLocD0_36,dwLocD4_26,dwLocF0_15,dwLocF4_20,dwLocF8_22,dwLocFC_32,eax_241,ebp_181,ebx_238,ecx_256,edi_244,edx_233,es_173,esi_255,esp_253,S_202,SCZO_210,SZO_239,Z_174
		defs: al_269,C_263,CZ_268,ds_273,eax_261,ebp_259,ebx_264,ecx_267,edi_258,edx_266,es_272,esi_265,esp_257,S_271,SCZO_260,SZO_262,Z_270
	word32 esp_274
	word32 edi_275
	byte SCZO_277
	word32 eax_278
	byte SZO_279
	byte C_280
	word32 esi_282
	word32 edx_283
	word32 ecx_284
	byte CZ_285
	byte al_286
	byte Z_287
	byte S_288
	call esi_265 (retsize: 4; depth: 4)
		uses: al_269,C_263,CZ_268,ds_273,dwLoc0100_34,dwLoc04_6,dwLoc0C_12,dwLocA4_41,dwLocA8_40,dwLocAC_39,dwLocB0_38,dwLocC0_37,dwLocD0_36,dwLocD4_26,dwLocF0_15,dwLocF4_20,dwLocF8_22,dwLocFC_32,eax_261,ebp_259,ebx_264,ecx_267,edi_258,edx_266,es_272,esi_265,esp_257,S_271,SCZO_260,SZO_262,Z_270
		defs: al_286,C_280,CZ_285,ds_290,eax_278,ebp_276,ebx_281,ecx_284,edi_275,edx_283,es_289,esi_282,esp_274,S_288,SCZO_277,SZO_279,Z_287
	Mem291[ebp_125 - 0x000000D4:word32] = eax_278
	Mem293[ebp_125 - 0x0000002C:word32] = ebp_125 - 0x000000D4
	Mem295[ebp_125 - 0x00000028:word32] = 0x00000000
	Mem296[ebp_125 - 0x00000024:word32] = edi_275
	Mem297[ebp_125 - 0x00000020:word32] = 0x00000000
	Mem298[ebp_125 - 0x0000001C:word32] = ebp_125 - 0x000000C8
	Mem299[ebp_125 - 0x00000018:word32] = 0x00000000
	Mem300[ebp_125 - 0x00000014:word32] = edi_275
	Mem301[ebp_125 - 0x00000010:word32] = 0x00000000
	Mem305[esp_274 - 0x00000004:word32] = ebp_125 - 0x0000008C
	Mem307[esp_274 - 0x00000008:word32] = 0x00000008
	Mem309[esp_274 - 0x0000000C:word32] = 0x00000000
	Mem311[esp_274 - 0x00000010:word32] = 0x00000000
	word32 ecx_316
	word32 edx_317
	fn1000C491(0x10031000, 0x100098EB, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_316, out edx_317, out esi_197, out edi_109)
	esp_113 = esp_274
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001815B:
	word32 edx_227
	word32 esi_228
	fn1000C640(ebp_125 - 0x000000C0, ebx_179, esi_197, edi_109, es_119, ds_118, out edx_227, out esi_228)
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001816C:
	word32 esi_128
	word32 ebx_129 = fn10015E2F(ebp_125 - 0x000000BC, out esi_128)
	word32 edx_131
	word32 esi_132
	fn1000C640(ebp_125 - 0x000000CC, ebx_129, esi_128, edi_109, es_119, ds_118, out edx_131, out esi_132)
	word32 esp_137 = esp_113 + 0x00000004
	word32 edi_136 = Mem102[esp_113:word32]
	*ediOut = edi_136
	word32 esi_138 = Mem102[esp_137:word32]
	*esiOut = esi_138
	word32 ecx_145
	return fn1002F420(esi_132, Mem102[ebp_125 - 0x00000008:word32] ^ ebp_125, edx_131, Mem102[esp_137 + 0x00000004:word32], ebp_125, esi_138, edi_136, es_119, ds_118, out ecx_145)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10017E3B_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):edi -244(fp):esi -240(fp):ebx -232(fp):<invalid> -228(fp):<invalid> -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):0x00000000 -204(fp):<invalid> -197(fp):<invalid> -196(fp):<invalid> -192(fp):0x00000000 -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -80(fp):<invalid> -76(fp):<invalid> -72(fp):0x00000010 -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



void fn10018197(word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10018197_entry:
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -00E4(32) Local -0128(32)

l10018197:
	word32 esi_40
	word32 edi_41
	word32 eax_42 = fn1000EF25(fp - 0x000000F0, edx, 0x00000000, esi, es, ds, out esi_40, out edi_41)
	word32 edx_46
	word32 esi_48
	word32 ebx_238
	word32 edi_222
	word32 eax_50 = fn1001357C(edi_41, esi_40, es, ds, eax_42, out edx_46, out ebx_238, out esi_48, out edi_222)
	word32 ebp_169 = fp - 0x00000004
	word32 esp_232 = fp - 0x00000120
	word32 esi_239 = eax_50
	branch eax_50 < 0x00000000 l10018528
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -00E4(32)

l10018200:
	word32 edx_133 = fn10015E51(fp - 0x000000E0, 0x10004320, edi_222 + 0x00000024)
	word32 eax_135 = Mem0[fp - 0x000000F4:word32]
	Mem138[fp - 0x00000124:word32] = fp - 0x000000E8
	Mem141[fp - 0x00000128:word32] = fp - 0x000000E4
	Mem145[fp - 0x0000012C:word32] = fp - 0x000000F0
	Mem147[fp - 0x00000130:word32] = eax_135
	word32 esp_149
	word32 edi_150
	word32 ebp_151
	byte SCZO_152
	word32 eax_153
	byte SZO_154
	byte C_155
	word32 ebx_156
	word32 esi_157
	word32 ecx_158
	word32 edx_159
	byte S_160
	byte CZ_161
	byte al_162
	byte Z_163
	byte SO_164
	selector es_165
	selector ds_166
	call Mem147[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al,C_118,CZ,ds,dwLoc0100_18,dwLoc0104_27,dwLoc0118_17,dwLoc011C_26,dwLoc0120_33,dwLoc0124_129,dwLoc0128_131,dwLoc04_6,dwLoc0C_12,dwLocC4_126,dwLocC8_125,dwLocCC_124,dwLocD0_123,dwLocE0_122,dwLocE4_116,dwLocE8_121,dwLocEC_53,dwLocF0_120,dwLocF4_36,dwLocF8_30,dwLocFC_132,eax_135,ebp_7,ebx_127,ecx_148,edi_49,edx_133,es,esi_142,esp_146,S_55,SCZO,SO,SZO_117,Z
		defs: al_162,C_155,CZ_161,ds_166,eax_153,ebp_151,ebx_156,ecx_158,edi_150,edx_159,es_165,esi_157,esp_149,S_160,SCZO_152,SO_164,SZO_154,Z_163
	word32 esp_167
	byte SCZO_170
	word32 eax_171
	byte SZO_172
	byte C_173
	word32 esi_175
	word32 ecx_176
	word32 edx_177
	byte S_178
	byte CZ_179
	byte al_180
	byte Z_181
	byte SO_182
	word32 ebx_174
	word32 edi_168
	call Mem147[esi_157 + 0x00000024:word32] (retsize: 4; depth: 4)
		uses: al_162,C_155,CZ_161,ds_166,dwLoc0100_18,dwLoc0104_27,dwLoc0118_17,dwLoc011C_26,dwLoc0120_33,dwLoc0124_129,dwLoc0128_131,dwLoc04_6,dwLoc0C_12,dwLocC4_126,dwLocC8_125,dwLocCC_124,dwLocD0_123,dwLocE0_122,dwLocE4_116,dwLocE8_121,dwLocEC_53,dwLocF0_120,dwLocF4_36,dwLocF8_30,dwLocFC_132,eax_153,ebp_151,ebx_156,ecx_158,edi_150,edx_159,es_165,esi_157,esp_149,S_160,SCZO_152,SO_164,SZO_154,Z_163
		defs: al_180,C_173,CZ_179,ds_184,eax_171,ebp_169,ebx_174,ecx_176,edi_168,edx_177,es_183,esi_175,esp_167,S_178,SCZO_170,SO_182,SZO_172,Z_181
	Mem186[ebp_169 - 0x000000E8:word32] = eax_171
	word32 edx_187
	word32 eax_188 = fn10015F5E(ebp_169 - 0x000000DC, out edx_187)
	Mem191[ebp_169 - 0x0000010C:word32] = eax_188
	Mem192[ebp_169 - 0x00000108:word32] = edx_187
	word32 esi_190 = 0x00000000
	branch edx_187 >u 0x00000000 l100182A1
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000120 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -260(fp):<invalid> -256(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):fp - 0x000000F4 -236(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018298:
	branch eax_188 <=u 0x00000064 l10018322
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100182A1:
	branch Mem192[0x10031000:word32] <=u 0x00000004 l100183D7
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100182AE:
	Mem463[esp_167 - 0x00000004:word32] = 0x00004000
	Mem465[esp_167 - 0x00000008:word32] = 0x00000000
	word32 edx_467
	branch (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_467) == 0x00 l10018322
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100182C2:
	fn1000C58C(ebp_169 - 0x0000004C, 0x10004320)
	Mem477[ebp_169 - 0x0000003C:word32] = ebx_174
	Mem478[ebp_169 - 0x0000002C:word32] = ebp_169 - 0x0000010C
	Mem480[ebp_169 - 0x00000038:word32] = 0x00000000
	Mem481[ebp_169 - 0x00000034:word32] = 0x00000010
	Mem482[ebp_169 - 0x00000030:word32] = 0x00000000
	Mem483[ebp_169 - 0x00000028:word32] = 0x00000000
	Mem484[ebp_169 - 0x00000024:word32] = 0x00000008
	Mem485[ebp_169 - 0x00000020:word32] = 0x00000000
	Mem486[ebp_169 - 0x0000001C:word32] = ebp_169 - 0x000000E8
	Mem487[ebp_169 - 0x00000018:word32] = 0x00000000
	Mem488[ebp_169 - 0x00000014:word32] = 0x00000004
	Mem489[ebp_169 - 0x00000010:word32] = 0x00000000
	Mem493[esp_167 - 0x00000004:word32] = ebp_169 - 0x0000006C
	Mem495[esp_167 - 0x00000008:word32] = 0x00000006
	Mem497[esp_167 - 0x0000000C:word32] = 0x00000000
	Mem499[esp_167 - 0x00000010:word32] = 0x00000000
	word32 ecx_501
	word32 edx_502
	fn1000C491(0x10031000, 0x10009C38, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_501, out edx_502, out esi_190, out edi_168)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:0x10031000 esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018322:
	branch Mem192[0x10031000:word32] <=u 0x00000004 l100183D7
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -48(fp):fp - 0x00000110 -44(fp):<invalid> -40(fp):0x00000008 -36(fp):<invalid> -32(fp):fp - 0x000000EC -28(fp):<invalid> -24(fp):0x00000004 -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001832F:
	fn1000C51D(ebp_169 - 0x0000008C, 0x10003428)
	fn1000C51D(ebp_169 - 0x0000007C, 0x10004370)
	Mem411[ebp_169 - 0x0000006C:word32] = ebx_174
	Mem412[ebp_169 - 0x0000005C:word32] = ebp_169 - 0x000000EC
	Mem414[ebp_169 - 0x0000004C:word32] = ebp_169 - 0x000000E0
	Mem416[ebp_169 - 0x0000003C:word32] = ebp_169 - 0x000000E4
	Mem419[esp_167 - 0x00000004:word32] = 0x00000004
	word32 ecx_420 = Mem419[esp_167 - 0x00000004:word32]
	Mem422[ebp_169 - 0x0000002C:word32] = ebp_169 - 0x000000E8
	Mem424[ebp_169 - 0x00000068:word32] = esi_190
	Mem425[ebp_169 - 0x00000064:word32] = 0x00000010
	Mem426[ebp_169 - 0x00000060:word32] = esi_190
	Mem427[ebp_169 - 0x00000058:word32] = esi_190
	Mem428[ebp_169 - 0x00000054:word32] = ecx_420
	Mem429[ebp_169 - 0x00000050:word32] = esi_190
	Mem430[ebp_169 - 0x00000048:word32] = esi_190
	Mem431[ebp_169 - 0x00000044:word32] = ecx_420
	Mem432[ebp_169 - 0x00000040:word32] = esi_190
	Mem433[ebp_169 - 0x00000038:word32] = esi_190
	Mem434[ebp_169 - 0x00000034:word32] = ecx_420
	Mem435[ebp_169 - 0x00000030:word32] = esi_190
	Mem436[ebp_169 - 0x00000028:word32] = esi_190
	Mem437[ebp_169 - 0x00000024:word32] = ecx_420
	Mem438[ebp_169 - 0x00000020:word32] = esi_190
	Mem439[ebp_169 - 0x0000001C:word32] = ebp_169 - 0x0000010C
	Mem440[ebp_169 - 0x00000018:word32] = esi_190
	Mem441[ebp_169 - 0x00000014:word32] = 0x00000008
	Mem442[ebp_169 - 0x00000010:word32] = esi_190
	Mem446[esp_167 - 0x00000004:word32] = ebp_169 - 0x000000AC
	Mem448[esp_167 - 0x00000008:word32] = 0x0000000A
	Mem450[esp_167 - 0x0000000C:word32] = esi_190
	Mem452[esp_167 - 0x00000010:word32] = esi_190
	word32 ecx_454
	word32 edx_455
	fn1000C491(0x10031000, 0x10009845, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_454, out edx_455, out esi_190, out edi_168)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -48(fp):fp - 0x00000110 -44(fp):<invalid> -40(fp):0x00000008 -36(fp):<invalid> -32(fp):fp - 0x000000EC -28(fp):<invalid> -24(fp):0x00000004 -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100183D7:
	word32 eax_204 = Mem192[ebp_169 - 0x000000E0:word32]
	branch Mem192[ebp_169 - 0x000000E8:word32] < esi_190 l10018469
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100183E9:
	branch eax_204 == 0xFFFFFFFF l1001840A
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100183EE:
	branch eax_204 <u Mem192[ebp_169 - 0x000000EC:word32] l10018405
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100183F6:
	Mem392[ebp_169 - 0x000000E4:word32] = esi_190
	Mem393[ebp_169 - 0x000000E0:word32] = eax_204 | 0xFFFFFFFF
	eax_204 = eax_204 | 0xFFFFFFFF
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018405:
	branch eax_204 != 0xFFFFFFFF l10018410
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001840A:
	Mem379[ebp_169 - 0x000000E4:word32] = esi_190
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018410:
	branch Mem192[ebp_169 - 0x000000EC:word32] <=u esi_190 l10018467
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018418:
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001841E:
	Mem323[esp_167 - 0x00000004:word32] = Mem192[ebp_169 + 0x00000008:word32]
	Mem327[esp_167 - 0x00000008:word32] = edi_168
	Mem329[esp_167 - 0x0000000C:word32] = esi_190
	word32 esi_330
	word32 eax_332 = fn10017E3B(ebp_169, es, ds, dwArg04, out esi_330, out edi_168)
	eax_204 = Mem329[ebp_169 - 0x000000E0:word32]
	branch eax_332 >= 0x00000000 l10018458
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001843A:
	branch eax_204 == 0xFFFFFFFF l10018458
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001843F:
	branch eax_204 != esi_330 l1001844F
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): CZ
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001844F:
	branch eax_204 <=u esi_330 l10018458
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018451:
	eax_204 = eax_204 - 0x00000001
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018443:
	Mem367[ebp_169 - 0x000000E4:word32] = Mem329[ebp_169 - 0x000000E4:word32] & 0x00000000
	eax_204 = eax_204 | 0xFFFFFFFF
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018452:
	Mem363[ebp_169 - 0x000000E0:word32] = eax_204
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018458:
	esi_190 = esi_330 + 0x00000001
	branch esi_330 + 0x00000001 <u Mem329[ebp_169 - 0x000000EC:word32] l1001841E
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018461:
	ebx_174 = Mem329[ebp_169 - 0x000000F8:word32]
// DataOut: cs ds eax ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018467:
	esi_190 = 0x00000000
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018469:
	Mem221[esp_167 - 0x00000004:word32] = 0x00000004
	edi_222 = Mem221[esp_167 - 0x00000004:word32]
	branch Mem221[0x10031000:word32] <=u edi_222 l100184F8
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018478:
	fn1000C51D(ebp_169 - 0x0000006C, 0x10003428)
	fn1000C51D(ebp_169 - 0x0000005C, 0x10004398)
	Mem250[ebp_169 - 0x0000004C:word32] = ebx_174
	Mem251[ebp_169 - 0x0000003C:word32] = ebp_169 - 0x000000E0
	Mem253[ebp_169 - 0x0000002C:word32] = ebp_169 - 0x000000E4
	Mem255[ebp_169 - 0x00000048:word32] = esi_190
	Mem256[ebp_169 - 0x00000044:word32] = 0x00000010
	Mem257[ebp_169 - 0x00000040:word32] = esi_190
	Mem258[ebp_169 - 0x00000038:word32] = esi_190
	Mem259[ebp_169 - 0x00000034:word32] = edi_222
	Mem260[ebp_169 - 0x00000030:word32] = esi_190
	Mem261[ebp_169 - 0x00000028:word32] = esi_190
	Mem262[ebp_169 - 0x00000024:word32] = edi_222
	Mem263[ebp_169 - 0x00000020:word32] = esi_190
	Mem264[ebp_169 - 0x0000001C:word32] = ebp_169 - 0x000000E8
	Mem265[ebp_169 - 0x00000018:word32] = esi_190
	Mem266[ebp_169 - 0x00000014:word32] = edi_222
	Mem267[ebp_169 - 0x00000010:word32] = esi_190
	Mem271[esp_167 - 0x00000004:word32] = ebp_169 - 0x0000008C
	Mem273[esp_167 - 0x00000008:word32] = 0x00000008
	Mem275[esp_167 - 0x0000000C:word32] = esi_190
	Mem277[esp_167 - 0x00000010:word32] = esi_190
	word32 ecx_281
	word32 edx_282
	word32 esi_283
	fn1000C491(0x10031000, 0x100097C0, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_281, out edx_282, out esi_283, out edi_222)
	eax_204 = Mem277[ebp_169 - 0x000000E0:word32]
// DataOut: cs ds eax ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):fp - 0x000000E4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l100184F8:
	esp_232 = esp_167
	branch Mem221[ebp_169 - 0x000000E8:word32] < 0x00000000 l10018517
// DataOut: cs ds eax ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10018501:
	Mem241[Mem221[ebp_169 - 0x000000FC:word32]:word32] = eax_204
	Mem244[Mem241[ebp_169 - 0x00000100:word32]:word32] = Mem241[ebp_169 - 0x000000E4:word32]
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10018517:
	word32 esi_237
	ebx_238 = fn10015E2F(ebp_169 - 0x000000DC, out esi_237)
	esi_239 = Mem221[ebp_169 - 0x000000E8:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10018528:
	word32 edx_96
	word32 esi_97
	fn1000C640(ebp_169 - 0x000000F0, ebx_238, esi_239, edi_222, es, ds, out edx_96, out esi_97)
	word32 esp_102 = esp_232 + 0x00000004
	word32 ecx_110
	fn1002F420(esi_97, Mem0[ebp_169 - 0x00000008:word32] ^ ebp_169, edx_96, Mem0[esp_102 + 0x00000004:word32], ebp_169, Mem0[esp_102:word32], Mem0[esp_232:word32], es, ds, out ecx_110)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10018197_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -304(fp):0x00000000 -300(fp):fp - 0x000000F0 -296(fp):<invalid> -292(fp):<invalid> -288(fp):edi -284(fp):esi -280(fp):ebx -272(fp):<invalid> -268(fp):<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):<invalid> -248(fp):ecx -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):0x00000010 -100(fp):<invalid> -96(fp):fp - 0x000000F0 -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn10018548(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebx edi edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10018548_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10018548:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem31[edx:word32] = 0x00000000
	Mem32[dwArg04:word32] = 0x00000000
	word32 esp_43
	word32 edi_44
	word32 ebp_45
	byte SCZO_46
	word32 eax_47
	byte SZO_48
	byte C_49
	word32 ebx_50
	word32 ecx_51
	word32 edx_52
	word32 esi_53
	byte CZ_54
	byte S_55
	byte Z_56
	selector es_57
	selector ds_58
	call Mem32[0x100323BC:word32] (retsize: 4; depth: 196)
		uses: C_29,dwLoc04_6,dwLoc0C_12,dwLoc98_42,dwLocA4_30,dwLocA8_34,dwLocB0_15,dwLocB4_24,dwLocB8_26,dwLocBC_37,dwLocC0_39,eax_33,ebp_7,ebx_17,ecx_41,edi_27,edx,esi_40,esp_38,SZO_28
		defs: C_49,CZ_54,ds_58,eax_47,ebp_45,ebx_50,ecx_51,edi_44,edx_52,es_57,esi_53,esp_43,S_55,SCZO_46,SZO_48,Z_56
	word32 esp_59
	byte SCZO_62
	word32 eax_63
	byte SZO_64
	byte C_65
	word32 ecx_67
	word32 esi_69
	byte CZ_70
	byte S_71
	byte Z_72
	word32 edx_108
	selector ds_122
	selector es_123
	word32 ebx_303
	word32 ebp_150
	word32 edi_109
	call esi_53 (retsize: 4; depth: 4)
		uses: C_49,CZ_54,ds_58,dwLoc04_6,dwLoc0C_12,dwLoc98_42,dwLocA4_30,dwLocA8_34,dwLocB0_15,dwLocB4_24,dwLocB8_26,dwLocBC_37,dwLocC0_39,eax_47,ebp_45,ebx_50,ecx_51,edi_44,edx_52,es_57,esi_53,esp_43,S_55,SCZO_46,SZO_48,Z_56
		defs: C_65,CZ_70,ds_74,eax_63,ebp_61,ebx_66,ecx_67,edi_60,edx_68,es_73,esi_69,esp_59,S_71,SCZO_62,SZO_64,Z_72
	Mem76[esp_59 - 0x00000004:word32] = 0x00000004
	word32 esi_110 = Mem76[esp_59 - 0x00000004:word32]
	branch Mem76[0x10031000:word32] <=u esi_110 l1001861A
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -00A4(32) Local -00A8(32)

l100185A7:
	fn1000C51D(fp - 0x00000060, 0x10003428)
	fn1000C51D(fp - 0x00000050, 0x100043C8)
	Mem508[esp_59 - 0x00000004:word32] = fp - 0x00000080
	Mem510[esp_59 - 0x00000008:word32] = 0x00000007
	Mem512[esp_59 - 0x0000000C:word32] = 0x00000000
	Mem514[esp_59 - 0x00000010:word32] = 0x00000000
	word32 ecx_516
	fn1000C491(0x10031000, 0x1000975D, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_516, out edx_108, out esi_110, out edi_109)
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -152(fp):0x00000000 -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -00A4(32) Local -00A8(32)

l1001861A:
	word32 eax_112 = eax_63
	word32 esp_113 = esp_59
	branch eax_63 < 0x00000000 l100187B5
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -00A4(32) Local -00A8(32)

l10018622:
	word32 dwLoc94_184
	Mem175[esp_59 - 0x00000004:word32] = fp - 0x0000009C
	word32 ecx_177
	eax_112 = fn10010416(0x00000000, esi_110, dwArg00, out ecx_177, out edx_108)
	branch eax_112 < 0x00000000 l1001867C
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -00A4(32) Local -00A8(32)

l1001863C:
	Mem457[esp_59 - 0x00000004:word32] = fp - 0x00000050
	word32 eax_458 = CoTaskMemAlloc(Mem457[esp_59 - 0x00000004:SIZE_T])
	edi_109 = eax_458
	branch eax_458 == 0x00000000 l10018671
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -00A4(32) Local -00A8(32)

l10018671:
	eax_112 = 0x8007000E
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -00A4(32) Local -00A8(32)

l1001867C:
	esp_113 = esp_59
	dwLoc94_184 = eax_112
	branch eax_112 < 0x00000000 l100187B5
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -00A4(32) Local -00A8(32)

l1001864E:
	word32 ecx_465
	word32 edx_466
	word32 esi_467
	Mem471[esp_59 - 0x00000004:word32] = fn1000CE15(eax_458, edx_108, ebx_303, es_123, ds_122, out ecx_465, out edx_466, out esi_467, out edi_109)
	Mem473[esp_59 - 0x00000008:word32] = 0x00000000
	Mem475[esp_59 - 0x0000000C:word32] = edi_109
	memset(Mem475[esp_59 - 0x0000000C:(ptr void)], Mem475[esp_59 - 0x00000008:int32], Mem475[esp_59 - 0x00000004:size_t])
	eax_112 = 0x00000000
	dwLoc94_184 = 0x00000000
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -00A4(32) Local -00A8(32)

l1001868A:
	esp_113 = esp_59
	word32 ecx_191 = 0x00000000
	word32 dwLoc9C_192 = 0x00000000
	branch 0x00000000 == 0x00000000 l10018788
// DataOut: cs ds eax ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -156(fp):fp - 0x00000050 -152(fp):0x00000000 -148(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):0x00000000 -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x00000098 -44(fp):0x00000000 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):fp - 0x00000094 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l1001869A:
	branch eax_112 < 0x00000000 l100187A6
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l100186A2:
	word32 esi_374
	word32 eax_312 = edi_109 + ecx_191 * 0x00000004
	word32 esp_313 = esp_113 - 0x00000004
	Mem314[esp_313:word32] = eax_312
	Mem316[esp_313 - 0x00000004:word32] = ecx_191
	Mem318[esp_313 - 0x00000008:word32] = ebx_303
	word32 esp_320
	word32 edi_321
	word32 ebp_322
	byte SCZO_323
	word32 eax_324
	byte SZO_325
	byte C_326
	word32 ebx_327
	word32 ecx_328
	word32 edx_329
	word32 esi_330
	byte CZ_331
	byte S_332
	byte Z_333
	selector es_334
	selector ds_335
	call Mem318[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_310,CZ_279,ds_276,dwLoc04_6,dwLoc0C_12,dwLoc14_297,dwLoc18_296,dwLoc1C_295,dwLoc20_294,dwLoc24_293,dwLoc28_292,dwLoc2C_291,dwLoc30_285,dwLoc34_290,dwLoc38_289,dwLoc3C_288,dwLoc40_284,dwLoc44_287,dwLoc48_286,dwLoc4C_283,dwLoc50_282,dwLoc94_280,dwLoc98_42,dwLoc9C_298,dwLocA0_281,dwLocA4_30,dwLocA8_34,dwLocB0_15,dwLocB4_24,dwLocB8_26,dwLocBC_37,dwLocC0_39,eax_312,ebp_306,ebx_303,ecx_319,edi_301,edx_300,es_277,esi_311,esp_317,S_309,SCZO_299,SZO_308,Z_278
		defs: C_326,CZ_331,ds_335,eax_324,ebp_322,ebx_327,ecx_328,edi_321,edx_329,es_334,esi_330,esp_320,S_332,SCZO_323,SZO_325,Z_333
	word32 esp_336
	byte SCZO_339
	word32 eax_340
	byte SZO_341
	byte C_342
	word32 ecx_344
	word32 edx_345
	word32 esi_346
	byte CZ_347
	byte S_348
	byte Z_349
	call Mem318[esi_330 + 0x00000020:word32] (retsize: 4; depth: 4)
		uses: C_326,CZ_331,ds_335,dwLoc04_6,dwLoc0C_12,dwLoc14_297,dwLoc18_296,dwLoc1C_295,dwLoc20_294,dwLoc24_293,dwLoc28_292,dwLoc2C_291,dwLoc30_285,dwLoc34_290,dwLoc38_289,dwLoc3C_288,dwLoc40_284,dwLoc44_287,dwLoc48_286,dwLoc4C_283,dwLoc50_282,dwLoc94_280,dwLoc98_42,dwLoc9C_298,dwLocA0_281,dwLocA4_30,dwLocA8_34,dwLocB0_15,dwLocB4_24,dwLocB8_26,dwLocBC_37,dwLocC0_39,eax_324,ebp_322,ebx_327,ecx_328,edi_321,edx_329,es_334,esi_330,esp_320,S_332,SCZO_323,SZO_325,Z_333
		defs: C_342,CZ_347,ds_351,eax_340,ebp_338,ebx_343,ecx_344,edi_337,edx_345,es_350,esi_346,esp_336,S_348,SCZO_339,SZO_341,Z_349
	dwLoc94_184 = eax_340
	branch Mem318[0x10031000:word32] <=u 0x00000004 l10018758
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l10018758:
	esi_374 = 0x00000000
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l100186C9:
	fn1000C51D(fp - 0x00000070, 0x10003428)
	fn1000C51D(fp - 0x00000060, 0x100043F8)
	Mem406[esp_336 - 0x00000004:word32] = 0x00000004
	Mem426[esp_336 - 0x00000004:word32] = fp - 0x00000090
	Mem428[esp_336 - 0x00000008:word32] = 0x00000008
	Mem430[esp_336 - 0x0000000C:word32] = 0x00000000
	Mem432[esp_336 - 0x00000010:word32] = 0x00000000
	word32 ecx_436
	word32 edx_437
	fn1000C491(0x10031000, 0x100096EE, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_436, out edx_437, out esi_374, out edi_109)
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l1001875A:
	esp_113 = esp_336
	branch eax_340 >= 0x00000000 l1001876D
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l1001875E:
	Mem389[edi_109 + dwLoc9C_192 * 0x00000004:word32] = esi_374
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l1001876D:
	ecx_191 = dwLoc9C_192 + 0x00000001
	eax_112 = eax_340
	dwLoc9C_192 = ecx_191
	branch ecx_191 <u 0x00000000 l1001869A
// DataOut: cs ds eax ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0094(32) Local -009C(32) Local -00A4(32) Local -00A8(32)

l10018788:
	branch eax_112 < 0x00000000 l100187A6
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0094(32) Local -00A4(32) Local -00A8(32)

l1001878C:
	Mem268[edx:word32] = edi_109
	Mem271[dwArg04:word32] = 0x00000000
	edi_109 = 0x00000000
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0094(32)

l100187A6:
	fn1001F767(edi_109, 0x00000000)
	*edxOut = 0x00000000
	eax_112 = dwLoc94_184
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:0x00000000 edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l100187B5:
	word32 esp_154 = esp_113 + 0x00000004
	word32 edi_153 = Mem76[esp_113:word32]
	*ediOut = edi_153
	word32 ebx_160 = Mem76[esp_154 + 0x00000004:word32]
	*ebxOut = ebx_160
	word32 ecx_162
	return fn1002F420(eax_112, eax_11 ^ fp - 0x00000004, edx_108, ebx_160, ebp_150, Mem76[esp_154:word32], edi_153, es_123, ds_122, out ecx_162)
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10018548_exit:
// DataOut: eax ebx edi edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -192(fp):fp - 0x00000098 -188(fp):fp - 0x00000098 -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):edx -160(fp):fp - 0x00000060 -156(fp):<invalid> -152(fp):0x00000000 -148(fp):<invalid> -80(fp):fp - 0x000000A0 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000098 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000094 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



void fn100187C8(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn100187C8_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100187C8:
	word32 esi_35
	word32 edi_36
	word32 eax_37 = fn1000EF25(fp - 0x000000B4, edx, ecx, esi, es, ds, out esi_35, out edi_36)
	word32 edx_41
	word32 esi_43
	word32 ebx_102
	word32 edi_103
	word32 eax_45 = fn1001357C(ecx, esi_35, es, ds, eax_37, out edx_41, out ebx_102, out esi_43, out edi_103)
	word32 ebp_132 = fp - 0x00000004
	word32 esp_105 = fp - 0x000000DC
	word32 esi_106 = eax_45
	branch eax_45 < 0x00000000 l10018B95
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -00C0(32)

l10018821:
	word32 edx_101
	word32 eax_104 = fn10018548(0x00000000, fp - 0x000000B4, fp - 0x00000004, es, ds, fp - 0x000000BC, out edx_101, out ebx_102, out edi_103)
	esp_105 = fp - 0x000000DC
	esi_106 = eax_104
	branch eax_104 < 0x00000000 l10018B95
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000DC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -192(fp):<invalid> -180(fp):fp - 0x000000C0 -160(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018849:
	word32 esi_113 = 0x00000000
	branch fn10022359(Mem0[ebx_102 + 0x00000038:word32]) == 0x00000000 l10018B7E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000DC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -224(fp):fp - 0x000000BC -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -192(fp):<invalid> -180(fp):fp - 0x000000C0 -160(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018867:
	branch Mem0[ebp_132 - 0x0000009C:word32] < 0x00000000 l10018B7E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018874:
	Mem156[ebp_132 - 0x000000A0:word32] = esi_113
	Mem158[ebp_132 - 0x000000AC:word32] = ebp_132 - 0x000000A0
	word32 esp_162 = esp_105 - 0x00000004
	word32 esi_159
	Mem163[esp_162:word32] = fn1000EF25(ebp_132 - 0x000000AC, edx_101, ebx_102, esi_113, es, ds, out esi_159, out edi_103)
	Mem166[esp_162 - 0x00000004:word32] = Mem163[ebp_132 - 0x000000A8:word32]
	word32 eax_170 = fn100135C8(ebx_102, edx_101, es, ds, dwArg00, dwArg04)
	Mem172[ebp_132 - 0x0000009C:word32] = eax_170
	esp_105 = esp_162 + 0x00000004
	branch eax_170 < 0x00000000 l10018B5A
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100188AD:
	word32 edx_198 = Mem172[ebp_132 - 0x000000B8:word32]
	Mem201[esp_162:word32] = edi_103
	Mem204[esp_162 - 0x00000004:word32] = Mem201[ebp_132 - 0x000000A0:word32]
	word32 edx_205
	word32 eax_206 = fn1002432E(edx_198, ebx_102, ebp_132, esi_159, es, ds, dwArg00, out edx_205)
	Mem210[ebp_132 - 0x0000009C:word32] = eax_206
	branch Mem204[0x10031000:word32] <=u 0x00000004 l10018970
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100188D8:
	fn1000C51D(ebp_132 - 0x00000078, 0x10003428)
	fn1000C51D(ebp_132 - 0x00000068, 0x10004424)
	Mem571[ebp_132 - 0x00000054:word32] = esi_159
	Mem572[ebp_132 - 0x00000058:word32] = ebx_102 + 0x00000024
	Mem574[ebp_132 - 0x00000048:word32] = ebp_132 - 0x000000A8
	Mem576[ebp_132 - 0x00000038:word32] = ebp_132 - 0x000000B4
	Mem579[esp_162:word32] = 0x00000004
	word32 ecx_580 = Mem579[esp_162:word32]
	Mem582[ebp_132 - 0x00000028:word32] = ebp_132 - 0x000000B8
	Mem584[ebp_132 - 0x00000050:word32] = 0x00000010
	Mem585[ebp_132 - 0x0000004C:word32] = esi_159
	Mem586[ebp_132 - 0x00000044:word32] = esi_159
	Mem587[ebp_132 - 0x00000040:word32] = ecx_580
	Mem588[ebp_132 - 0x0000003C:word32] = esi_159
	Mem589[ebp_132 - 0x00000034:word32] = esi_159
	Mem590[ebp_132 - 0x00000030:word32] = ecx_580
	Mem591[ebp_132 - 0x0000002C:word32] = esi_159
	Mem592[ebp_132 - 0x00000024:word32] = esi_159
	Mem593[ebp_132 - 0x00000020:word32] = ecx_580
	Mem594[ebp_132 - 0x0000001C:word32] = esi_159
	Mem595[ebp_132 - 0x00000018:word32] = ebp_132 - 0x0000009C
	Mem596[ebp_132 - 0x00000014:word32] = esi_159
	Mem597[ebp_132 - 0x00000010:word32] = ecx_580
	Mem598[ebp_132 - 0x0000000C:word32] = esi_159
	Mem602[esp_162:word32] = ebp_132 - 0x00000098
	Mem604[esp_162 - 0x00000004:word32] = 0x00000009
	Mem606[esp_162 - 0x00000008:word32] = esi_159
	Mem608[esp_162 - 0x0000000C:word32] = esi_159
	word32 ecx_610
	fn1000C491(0x10031000, 0x10009672, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_610, out edx_205, out esi_159, out edi_103)
	eax_206 = Mem608[ebp_132 - 0x0000009C:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018970:
	branch eax_206 < 0x00000000 l10018B5A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018978:
	Mem221[ebp_132 - 0x000000AC:word32] = esi_159
	word32 esi_222 = Mem221[ebp_132 - 0x000000A0:word32]
	Mem224[ebp_132 - 0x000000A4:word32] = ebp_132 - 0x000000AC
	word32 esp_228 = esp_105 - 0x00000004
	word32 esi_225
	word32 edi_226
	Mem229[esp_228:word32] = fn1000EF25(ebp_132 - 0x000000A4, edx_205, ebx_102, esi_222, es, ds, out esi_225, out edi_226)
	word32 edx_231
	word32 esi_232
	word32 eax_234 = fn1002054D(esi_225, ebx_102, esi_225, es, ds, dwArg00, out edx_231, out esi_232, out edi_103)
	Mem236[ebp_132 - 0x0000009C:word32] = eax_234
	esp_105 = esp_228 + 0x00000004
	branch eax_234 < 0x00000000 l10018B4D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100189B1:
	word32 eax_260 = Mem236[ebp_132 - 0x000000AC:word32]
	Mem264[ebp_132 - 0x000000A4:word32] = 0x00000000
	Mem267[esp_228:word32] = ebp_132 - 0x000000A4
	Mem269[esp_228 - 0x00000004:word32] = 0x10004C90
	Mem272[esp_228 - 0x00000008:word32] = eax_260
	word32 esp_274
	word32 edi_275
	word32 ebp_276
	byte SCZO_277
	word32 eax_278
	byte SZO_279
	byte C_280
	word32 ebx_281
	word32 ecx_282
	word32 esi_283
	word32 edx_284
	byte S_285
	byte Z_286
	byte SO_287
	byte CZ_288
	word16 cx_289
	selector es_290
	selector ds_291
	call Mem272[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_263,cx_139,CZ_209,ds_137,dwLoc04_6,dwLoc08_12,dwLocA0_107,dwLocAC_115,dwLocB4_32,dwLocB8_114,dwLocC0_26,dwLocD0_31,dwLocD4_15,dwLocD8_23,dwLocDC_25,dwLocE0_99,eax_260,ebp_151,ebx_148,ecx_273,edi_233,edx_231,es_138,esi_270,esp_271,S_238,SCZO_208,SO_154,SZO_262,Z_141
		defs: C_280,cx_289,CZ_288,ds_291,eax_278,ebp_276,ebx_281,ecx_282,edi_275,edx_284,es_290,esi_283,esp_274,S_285,SCZO_277,SO_287,SZO_279,Z_286
	byte SCZO_295
	word32 eax_296
	byte SZO_297
	byte C_298
	word32 ecx_300
	word32 edx_302
	byte S_303
	byte Z_304
	byte SO_305
	byte CZ_306
	word16 cx_307
	call Mem272[esi_283:word32] (retsize: 4; depth: 4)
		uses: C_280,cx_289,CZ_288,ds_291,dwLoc04_6,dwLoc08_12,dwLocA0_107,dwLocAC_115,dwLocB4_32,dwLocB8_114,dwLocC0_26,dwLocD0_31,dwLocD4_15,dwLocD8_23,dwLocDC_25,dwLocE0_99,eax_278,ebp_276,ebx_281,ecx_282,edi_275,edx_284,es_290,esi_283,esp_274,S_285,SCZO_277,SO_287,SZO_279,Z_286
		defs: C_298,cx_307,CZ_306,ds_309,eax_296,ebp_294,ebx_299,ecx_300,edi_293,edx_302,es_308,esi_301,esp_292,S_303,SCZO_295,SO_305,SZO_297,Z_304
	branch eax_296 < 0x00000000 l10018B0C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100189E0:
	word32 esi_402 = Mem272[ebp_132 - 0x000000A4:word32]
	Mem407[ebp_132 - 0x000000C8:word32] = 0x00000000
	Mem408[ebp_132 - 0x000000C4:word32] = 0x00000000
	Mem409[ebp_132 - 0x000000C0:word32] = 0x00000000
	fn1000F2EE(ebp_132 - 0x000000C8)
	Mem411[ebp_132 - 0x000000C4:word32] = Mem409[ebp_132 - 0x000000C4:word32] | 0xFFFFFFFF
	Mem415[ebp_132 - 0x000000C0:word32] = Mem411[ebp_132 - 0x000000C0:word32] | 0xFFFFFFFF
	Mem420[esp_105 - 0x00000004:word32] = ebp_132 - 0x000000C8
	Mem422[esp_105 - 0x00000008:word32] = esi_402
	word32 esp_425
	word32 edi_426
	word32 ebp_427
	byte SCZO_428
	word32 eax_429
	byte SZO_430
	byte C_431
	word32 ebx_432
	word32 ecx_433
	word32 esi_434
	word32 edx_435
	byte S_436
	byte Z_437
	byte SO_438
	byte CZ_439
	word16 cx_440
	selector es_441
	selector ds_442
	call Mem422[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_417,cx_307,CZ_306,ds_309,dwLoc04_6,dwLoc08_12,dwLocA0_107,dwLocAC_115,dwLocB4_32,dwLocB8_114,dwLocC0_26,dwLocD0_31,dwLocD4_15,dwLocD8_23,dwLocDC_25,dwLocE0_99,eax_418,ebp_294,ebx_299,ecx_424,edi_293,edx_302,es_308,esi_423,esp_421,S_311,SCZO_295,SO_305,SZO_416,Z_304
		defs: C_431,cx_440,CZ_439,ds_442,eax_429,ebp_427,ebx_432,ecx_433,edi_426,edx_435,es_441,esi_434,esp_425,S_436,SCZO_428,SO_438,SZO_430,Z_437
	word32 esp_443
	byte SCZO_446
	word32 eax_447
	byte SZO_448
	byte C_449
	word32 ecx_451
	word32 edx_453
	byte S_454
	byte Z_455
	byte SO_456
	byte CZ_457
	word16 cx_458
	call esi_434 (retsize: 4; depth: 4)
		uses: C_431,cx_440,CZ_439,ds_442,dwLoc04_6,dwLoc08_12,dwLocA0_107,dwLocAC_115,dwLocB4_32,dwLocB8_114,dwLocC0_26,dwLocD0_31,dwLocD4_15,dwLocD8_23,dwLocDC_25,dwLocE0_99,eax_429,ebp_427,ebx_432,ecx_433,edi_426,edx_435,es_441,esi_434,esp_425,S_436,SCZO_428,SO_438,SZO_430,Z_437
		defs: C_449,cx_458,CZ_457,ds_460,eax_447,ebp_445,ebx_450,ecx_451,edi_444,edx_453,es_459,esi_452,esp_443,S_454,SCZO_446,SO_456,SZO_448,Z_455
	branch eax_447 < 0x00000000 l10018B01
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018A32:
	esi_232 = Mem422[ebp_132 - 0x000000C8:word32]
	branch esi_232 == 0x00000000 l10018A43
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018A3C:
	branch Mem422[esi_232:word16] != 0x0000 l10018A4C
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018A43:
	branch eax_447 != 0x00000001 l10018B01
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018A4C:
	branch Mem422[0x10031000:word32] <=u 0x00000004 l10018ADB
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018A59:
	fn1000C51D(ebp_132 - 0x00000068, 0x10003428)
	fn1000C51D(ebp_132 - 0x00000058, 0x10004434)
	Mem514[ebp_132 - 0x00000040:word32] = 0x00000010
	Mem516[ebp_132 - 0x00000044:word32] = 0x00000000
	Mem517[ebp_132 - 0x00000048:word32] = ebx_102 + 0x00000024
	Mem520[esp_443 - 0x00000004:word32] = 0x00000004
	word32 edx_521 = Mem520[esp_443 - 0x00000004:word32]
	Mem523[ebp_132 - 0x00000038:word32] = ebp_132 - 0x000000A8
	Mem525[ebp_132 - 0x0000003C:word32] = 0x00000000
	Mem526[ebp_132 - 0x00000034:word32] = 0x00000000
	Mem527[ebp_132 - 0x00000030:word32] = edx_521
	Mem528[ebp_132 - 0x0000002C:word32] = 0x00000000
	Mem529[ebp_132 - 0x00000024:word32] = 0x00000000
	Mem530[ebp_132 - 0x00000020:word32] = edx_521
	Mem532[ebp_132 - 0x0000001C:word32] = 0x00000000
	Mem534[ebp_132 - 0x00000028:word32] = ebp_132 - 0x000000B4
	fn1000C58C(ebp_132 - 0x00000018, esi_232)
	Mem538[esp_443 - 0x00000004:word32] = ebp_132 - 0x00000088
	Mem540[esp_443 - 0x00000008:word32] = 0x00000008
	Mem546[esp_443 - 0x0000000C:word32] = 0x00000000
	Mem548[esp_443 - 0x00000010:word32] = 0x00000000
	word32 ecx_551
	word32 edx_552
	word32 esi_553
	fn1000C491(0x10031000, 0x10009607, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_551, out edx_552, out esi_553, out edi_103)
	esi_232 = Mem548[ebp_132 - 0x000000C8:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018ADB:
	word32 ecx_490 = Mem422[ebp_132 - 0x000000A0:word32]
	branch esi_232 != 0x00000000 l10018AEF
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> bl:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018AEF:
	Mem501[esp_443 - 0x00000004:word32] = 0xFFFFFFFF
	Mem503[esp_443 - 0x00000008:word32] = esi_232
	word32 edx_504
	fn1000F30D(ecx_490 + 0x00000054, dwArg00, dwArg04, out edx_504)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> bl:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018AE8:
	fn1000F2EE(ecx_490 + 0x00000054)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> bl:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018AF7:
	Mem499[Mem422[ebp_132 - 0x000000A0:word32] + 0x00000051:byte] = 0x01
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> dl:<invalid> bl:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B01:
	fn1000F2EE(ebp_132 - 0x000000C8)
	esp_105 = esp_443
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> bl:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B0C:
	branch Mem272[ebp_132 - 0x0000009C:word32] < 0x00000000 l10018B2B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B15:
	word32 esi_384 = ebx_102 + 0x00000024
	word32 edi_383 = Mem272[ebp_132 - 0x000000A0:word32]
	Mem387[edi_383 + 0x00000068:word32] = Mem272[esi_384:word32]
	Mem391[edi_383 + 0x0000006C:word32] = Mem387[esi_384 + 0x00000004:word32]
	Mem395[edi_383 + 0x00000070:word32] = Mem391[esi_384 + 0x00000008:word32]
	Mem399[edi_383 + 0x00000074:word32] = Mem395[esi_384 + 0x0000000C:word32]
	esi_232 = esi_384 + 0x00000010
	edi_103 = Mem399[ebp_132 - 0x000000CC:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B2B:
	word32 ecx_333 = Mem272[ebp_132 - 0x000000A4:word32]
	branch ecx_333 == 0x00000000 l10018B4D
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B35:
	Mem341[ebp_132 - 0x000000A4:word32] = 0x00000000
	word32 esp_343 = esp_105 - 0x00000004
	Mem344[esp_343:word32] = ecx_333
	word32 esp_347
	word32 edi_348
	word32 ebp_349
	byte SCZO_350
	word32 eax_351
	byte SZO_352
	byte C_353
	word32 ebx_354
	word32 ecx_355
	word32 esi_356
	word32 edx_357
	byte S_358
	byte Z_359
	byte SO_360
	byte CZ_361
	word16 cx_362
	selector es_363
	selector ds_364
	call Mem344[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_340,cx_334,CZ_316,ds_313,dwLoc04_6,dwLoc08_12,dwLocA0_107,dwLocAC_115,dwLocB4_32,dwLocB8_114,dwLocC0_26,dwLocD0_31,dwLocD4_15,dwLocD8_23,dwLocDC_25,dwLocE0_99,eax_342,ebp_327,ebx_324,ecx_346,edi_331,edx_319,es_314,esi_345,esp_343,S_318,SCZO_329,SO_330,SZO_339,Z_336
		defs: C_353,cx_362,CZ_361,ds_364,eax_351,ebp_349,ebx_354,ecx_355,edi_348,edx_357,es_363,esi_356,esp_347,S_358,SCZO_350,SO_360,SZO_352,Z_359
	byte SCZO_368
	word32 eax_369
	byte SZO_370
	byte C_371
	word32 ecx_373
	word32 edx_375
	byte S_376
	byte Z_377
	byte SO_378
	byte CZ_379
	word16 cx_380
	call esi_356 (retsize: 4; depth: 4)
		uses: C_353,cx_362,CZ_361,ds_364,dwLoc04_6,dwLoc08_12,dwLocA0_107,dwLocAC_115,dwLocB4_32,dwLocB8_114,dwLocC0_26,dwLocD0_31,dwLocD4_15,dwLocD8_23,dwLocDC_25,dwLocE0_99,eax_351,ebp_349,ebx_354,ecx_355,edi_348,edx_357,es_363,esi_356,esp_347,S_358,SCZO_350,SO_360,SZO_352,Z_359
		defs: C_371,cx_380,CZ_379,ds_382,eax_369,ebp_367,ebx_372,ecx_373,edi_366,edx_375,es_381,esi_374,esp_365,S_376,SCZO_368,SO_378,SZO_370,Z_377
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B4D:
	word32 edx_254
	word32 esi_255
	fn1000C640(ebp_132 - 0x000000AC, ebx_102, esi_232, edi_103, es, ds, out edx_254, out esi_255)
	esi_159 = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B5A:
	fn1000C640(ebp_132 - 0x000000A0, ebx_102, esi_159, edi_103, es, ds, out edx_101, out esi_113)
	word32 eax_193 = Mem172[ebp_132 - 0x000000A8:word32]
	Mem195[ebp_132 - 0x000000A8:word32] = eax_193 + 0x00000001
	branch eax_193 + 0x00000001 <u Mem195[ebp_132 - 0x000000B4:word32] l10018867
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018B7E:
	fn1001F767(Mem0[ebp_132 - 0x000000B0:word32], Mem0[ebp_132 - 0x000000B8:word32])
	esi_106 = Mem0[ebp_132 - 0x0000009C:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10018B95:
	word32 edx_77
	word32 esi_78
	fn1000C640(ebp_132 - 0x000000BC, ebx_102, esi_106, edi_103, es, ds, out edx_77, out esi_78)
	word32 esp_83 = esp_105 + 0x00000004
	word32 ecx_91
	fn1002F420(esi_78, Mem0[ebp_132 - 0x00000004:word32] ^ ebp_132, edx_77, Mem0[esp_83 + 0x00000004:word32], ebp_132, Mem0[esp_83:word32], Mem0[esp_105:word32], es, ds, out ecx_91)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100187C8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):edx -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -184(fp):<invalid> -180(fp):fp - 0x000000C0 -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -92(fp):<invalid> -88(fp):<invalid> -84(fp):0x00000010 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x000000A0 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10018BB3(word32 ecx, word32 edx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10018BB3_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -00E4(32)

l10018BB3:
	word32 eax_125
	word32 ebx_136
	Mem29[ecx:word32] = Mem0[0x10004C80:word32]
	Mem33[ecx + 0x00000004:word32] = Mem29[0x10004C84:word32]
	Mem37[ecx + 0x00000008:word32] = Mem33[0x10004C88:word32]
	Mem41[ecx + 0x0000000C:word32] = Mem37[0x10004C8C:word32]
	word32 esi_198 = 0x00000000
	word16 si_131 = 0x0000
	branch GetSystemMetrics(0x00001000) != 0x00000000 l10018C19
// DataOut: cs ds ebp ecx edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -00E4(32)

l10018C19:
	word32 ecx_223
	eax_125 = fn10010D2A(0x00000001, es, ds, fp - 0x000000C0, out ecx_223, out edx, out si_131)
	branch eax_125 < 0x00000000 l10018CF0
// DataOut: cs ds eax ebp edx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000DC edi:ecx + 0x00000010 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -224(fp):0x00001000 -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018CF0:
	ebx_136 = Mem41[fp - 0x000000CC:word32]
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -224(fp):fp - 0x000000C0 -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018C3D:
	Mem232[fp - 0x000000E0:word32] = 0x10004018
	Mem235[fp - 0x000000E4:word32] = Mem232[fp - 0x000000C0:word32]
	fn1001DE5B(fp - 0x000000CC, dwArg00, dwArg04)
	Mem241[fp - 0x000000E0:word32] = Mem235[fp - 0x000000C0:word32]
	eax_125 = RegCloseKey(Mem241[fp - 0x000000E0:HKEY])
// DataOut: cs ds eax ebp edx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -224(fp):fp - 0x000000C0 -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018C01:
	eax_125 = fn1001DE03(fp - 0x000000CC, 0x10003880, 0x10004018)
// DataOut: cs ds eax ebp edx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000DC edi:ecx + 0x00000010 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -224(fp):0x00001000 -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018C5F:
	ebx_136 = Mem41[fp - 0x000000CC:word32]
	branch ebx_136 == 0x00000000 l10018CF6
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018C6D:
	branch Mem41[ebx_136:word16] == si_131 l10018CF6
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018C76:
	Mem144[fp - 0x000000E0:word32] = fp - 0x000000BC
	Mem146[fp - 0x000000E4:word32] = ebx_136
	eax_125 = CLSIDFromString(Mem146[fp - 0x000000E4:LPCOLESTR], Mem146[fp - 0x000000E0:LPCLSID])
	branch eax_125 < 0x00000000 l10018CF6
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018C88:
	word32 edi_152 = Mem146[fp - 0x000000D0:word32]
	Mem155[edi_152:word32] = Mem146[fp - 0x000000BC:word32]
	Mem159[edi_152 + 0x00000004:word32] = Mem155[fp - 0x000000B8:word32]
	Mem163[edi_152 + 0x00000008:word32] = Mem159[fp - 0x000000B4:word32]
	Mem167[edi_152 + 0x0000000C:word32] = Mem163[fp - 0x000000B0:word32]
	branch Mem167[0x10031000:word32] <=u 0x00000004 l10018D40
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018CA5:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003088)
	Mem180[fp - 0x00000014:word32] = 0x00000010
	Mem182[fp - 0x00000018:word32] = 0x00000000
	Mem183[fp - 0x0000001C:word32] = fp - 0x000000BC
	Mem184[fp - 0x00000010:word32] = 0x00000000
	Mem188[fp - 0x000000E0:word32] = fp - 0x0000005C
	Mem190[fp - 0x000000E4:word32] = 0x00000005
	Mem192[fp - 0x000000E8:word32] = 0x00000000
	Mem194[fp - 0x000000EC:word32] = 0x00000000
	word32 ecx_196
	word32 edi_199
	eax_125 = fn1000C491(0x10031000, 0x100095BC, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_196, out edx, out esi_198, out edi_199)
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018CF6:
	branch Mem41[0x10031000:word32] <=u 0x00000004 l10018D40
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -236(fp):fp - 0x000000AC ^ fp - 0x000000AC -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -28(fp):fp - 0x000000BC -24(fp):fp - 0x000000AC ^ fp - 0x000000AC -20(fp):0x00000010 -16(fp):fp - 0x000000AC ^ fp - 0x000000AC -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10018CFF:
	fn1000C51D(fp - 0x0000008C, 0x10003428)
	fn1000C51D(fp - 0x0000007C, 0x10003D54)
	fn1000C58C(fp - 0x0000006C, ebx_136)
	Mem109[fp - 0x000000E0:word32] = fp - 0x000000AC
	Mem111[fp - 0x000000E4:word32] = 0x00000005
	Mem113[fp - 0x000000E8:word32] = esi_198
	Mem115[fp - 0x000000EC:word32] = esi_198
	word32 ecx_121
	word32 esi_123
	word32 edi_124
	eax_125 = fn1000C491(0x10031000, 0x10009567, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_121, out edx, out esi_123, out edi_124)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -236(fp):fp - 0x000000AC ^ fp - 0x000000AC -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -28(fp):fp - 0x000000BC -24(fp):fp - 0x000000AC ^ fp - 0x000000AC -20(fp):0x00000010 -16(fp):fp - 0x000000AC ^ fp - 0x000000AC -8(fp):<invalid> -4(fp):ebp

l10018D40:
	fn1000F2EE(fp - 0x000000CC)
	word32 ecx_78
	fn1002F420(eax_125, Mem41[fp - 0x00000008:word32] ^ fp - 0x00000004, edx, Mem41[fp - 0x000000D4:word32], fp - 0x00000004, Mem41[fp - 0x000000D8:word32], Mem41[fp - 0x000000DC:word32], es, ds, out ecx_78)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -28(fp):fp - 0x000000BC -24(fp):fp - 0x000000AC ^ fp - 0x000000AC -20(fp):0x00000010 -16(fp):fp - 0x000000AC ^ fp - 0x000000AC -8(fp):<invalid> -4(fp):ebp

fn10018BB3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):edi -216(fp):esi -212(fp):ebx -208(fp):ecx -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -28(fp):fp - 0x000000BC -24(fp):fp - 0x000000AC ^ fp - 0x000000AC -20(fp):0x00000010 -16(fp):fp - 0x000000AC ^ fp - 0x000000AC -8(fp):<invalid> -4(fp):ebp



void fn100193A7(word32 ecx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi esp rax rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn100193A7_entry:
// DataOut: cs ds ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100193A7:
	word32 esi_15 = ecx
	branch Mem0[ecx:word32] != 0x00000001 l100193C3
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100193B1:
	esi_15 = fn10014F08(ecx)
	fn1001E4FB(0x10031000, esi_15 + 0x00000008, ebx, esi_15, edi, es, ds)
// DataOut: esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx -4(fp):esi

l100193C3:
	Mem16[esi_15:word32] = 0x00000003
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -4(fp):esi

fn100193A7_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> -4(fp):esi



void fn10019402(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10019402_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0088(32) Local -00A8(32) Stack +0004(32)

l10019402:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem25[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esi_153 = 0x80070490
	word32 edi_31 = Mem25[ecx + 0x00000004:word32]
	word32 edx_148 = 0x00000000
	word32 dwLoc84_189 = 0x80070490
	branch edi_31 == 0x00000000 l1001945A
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -0098(32) Local -009C(32) Local -00A0(32) Local -00A8(32)

l10019445:
	word32 ecx_165 = Mem25[ecx:word32]
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:0x80070490 edx:0x00000000 -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -132(fp):0x80070490 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -0098(32) Local -009C(32) Local -00A0(32) Local -00A8(32)

l10019447:
	branch Mem25[Mem25[ecx_165:word32] + 0x0000001C:word32] == edx l100194E4
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:0x80070490 edx:<invalid> ecx:<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -132(fp):0x80070490 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -0098(32) Local -009C(32) Local -00A0(32) Local -00A8(32)

l100194E4:
	word32 esi_179
	word32 edi_180
	fn10015118(fp - 0x00000088, edx, 0x80070490, es, ds, ecx_165, out esi_179, out edi_180)
	Mem190[dwArg04:word32] = dwLoc88
	word32 esi_193
	fn1000C640(fp - 0x00000088, 0x00000000, esi_179, edi_180, es, ds, out edx_148, out esi_193)
	dwLoc84_189 = 0x00000000
	esi_153 = 0x00000000
	branch true l100194CF
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:0x80070490 edx:<invalid> ecx:<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -132(fp):0x80070490 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0098(32) Local -009C(32) Local -00A0(32)

l1001951B:
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x00000000 edx:<invalid> ecx:<invalid> -164(fp):<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0098(32) Local -009C(32) Local -00A0(32)

l10019452:
	edx_148 = edx_148 + 0x00000001
	ecx_165 = ecx_165 + 0x00000004
	branch edx_148 <u edi_31 l10019447
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:0x80070490 edx:<invalid> ecx:<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -132(fp):0x80070490 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -0098(32) Local -009C(32) Local -00A0(32) Local -00A8(32)

l1001945A:
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:0x80070490 edx:<invalid> ecx:<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -132(fp):0x80070490 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0098(32) Local -009C(32) Local -00A0(32)

l1001945C:
	branch Mem25[0x10031000:word32] <=u 0x00000003 l100194CF
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -164(fp):<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0084(32) Local -0098(32) Local -009C(32) Local -00A0(32)

l10019465:
	fn1000C51D(fp - 0x00000060, 0x10003E54)
	fn1000C51D(fp - 0x00000050, 0x10003D54)
	word32 ecx_147
	word32 esi_149
	word32 edi_150
	fn1000C491(0x10031000, 0x10009389, 0x00000000, 0x00000000, 0x00000007, fp - 0x00000080, out ecx_147, out edx_148, out esi_149, out edi_150)
	esi_153 = dwLoc84_189
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -164(fp):<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0098(32) Local -009C(32) Local -00A0(32)

l100194CF:
	word32 ecx_77
	fn1002F420(esi_153, eax_11 ^ fp - 0x00000004, edx_148, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_77)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A0 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000007 -164(fp):<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -64(fp):fp - 0x00000090 -60(fp):0x00000000 -56(fp):0x00000004 -52(fp):0x00000000 -48(fp):fp - 0x00000094 -44(fp):0x00000000 -40(fp):0x00000004 -36(fp):0x00000000 -32(fp):fp - 0x00000084 -28(fp):0x00000000 -24(fp):0x00000004 -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp

fn10019402_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx esi:esi edx:<invalid> ecx:<invalid> al:<invalid> -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000007 -164(fp):<invalid> -160(fp):edi -156(fp):esi -152(fp):ebx -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -64(fp):fp - 0x00000090 -60(fp):0x00000000 -56(fp):0x00000004 -52(fp):0x00000000 -48(fp):fp - 0x00000094 -44(fp):0x00000000 -40(fp):0x00000004 -36(fp):0x00000000 -32(fp):fp - 0x00000084 -28(fp):0x00000000 -24(fp):0x00000004 -20(fp):0x00000000 -12(fp):<invalid> -4(fp):ebp



void fn10019AD2(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, byte bArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx rax rcx rdi rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(8) Stack +0014(32)
fn10019AD2_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(8) Stack +0014(32)

l10019AD2:
	Mem19[ecx + 0x00000008:word32] = dwArg14
	Mem23[ecx + 0x0000000C:byte] = bArg10
	Mem26[ecx + 0x00000010:word32] = dwArg04
	Mem29[ecx + 0x00000004:word32] = 0x00000001
	Mem30[ecx:word32] = 0x10001718
	Mem31[ecx + 0x00000014:word32] = dwArg08
	word32 edx_35
	word32 esi_36
	word32 edi_37
	fn1000F629(ecx + 0x00000018, ebx, ecx, es, ds, dwArg0C, out edx_35, out esi_36, out edi_37)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10019AD2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:esi ecx:<invalid> al:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn10019B4A(word32 ecx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10019B4A_entry:
// DataOut: cs ds ebp ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10019B4A:
	__align(fp - 0x00000004)
	Mem28[dwArg08:word32] = 0x00000000
	word32 ebp_142 = fp - 0x00000004
	word32 esp_132 = fp - 0x000000C4
	word32 edi_150 = 0x00000000
	word32 edx_133
	*edxOut = 0x80070490
	word32 ebx_140 = 0x00000000
	branch Mem28[ecx + 0x00000004:word32] == 0x00000000 l10019C75
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019B96:
	word32 esp_147 = esp_132 - 0x00000004
	Mem148[esp_147:word32] = Mem28[ecx:word32] + ebx_140 * 0x00000004
	word32 esi_149
	word32 edx_151 = fn10015118(esp_132 + 0x00000018, ebx_140, esi, es, ds, dwArg00, out esi_149, out edi_150)
	esp_132 = esp_147 + 0x00000004
	word32 eax_153 = Mem148[esp_147 + 0x00000020:word32]
	word32 esi_154 = Mem148[esp_147 + 0x0000001C:word32]
	branch eax_153 == 0x00000000 l10019BB6
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019BB1:
	branch eax_153 != Mem148[esi_154 + 0x0000001C:word32] l10019C27
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019BB6:
	word32 eax_195 = fn10022359(Mem148[esi_154 + 0x00000038:word32])
	Mem196[esp_147 + 0x00000030:word32] = eax_195
	Mem197[esp_147 + 0x00000024:word32] = edi_150
	branch eax_195 == 0x00000000 l10019C1E
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019BCA:
	Mem238[esp_147 + 0x0000002C:word32] = esp_147 + 0x00000014
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019BD2:
	Mem250[esp_132 + 0x00000010:word32] = Mem238[esp_132 + 0x00000010:word32] & 0x00000000
	word32 esp_257 = esp_132 - 0x00000004
	word32 edi_255
	word32 esi_254
	Mem258[esp_257:word32] = fn1000EF25(esp_132 + 0x00000028, edx_151, ebx_140, esi_154, es, ds, out esi_254, out edi_255)
	Mem260[esp_257 - 0x00000004:word32] = edi_255
	esp_132 = esp_257 + 0x00000004
	branch fn100135C8(esi_254, edx_151, es, ds, dwArg00, dwArg04) < 0x00000000 l10019C0A
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019BED:
	word32 eax_286 = Mem260[esp_257 + 0x00000014:word32]
	Mem288[esp_257:word32] = eax_286
	word32 esp_292
	word32 edi_293
	word32 ebp_294
	byte SCZO_295
	word32 eax_296
	byte SZO_297
	byte C_298
	word32 ebx_299
	word32 esi_300
	word32 edx_301
	word32 ecx_302
	byte Z_303
	byte S_304
	byte CZ_305
	selector es_306
	selector ds_307
	call Mem288[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_266,CZ_243,ds_239,dwLoc04_6,dwLoc08_12,dwLoc90_32,dwLoc94_26,dwLocA0_34,dwLocA8_25,dwLocB0_33,dwLocBC_17,dwLocC0_20,dwLocC4_22,eax_286,ebp_247,ebx_246,ecx_291,edi_290,edx_244,es_240,esi_254,esp_287,S_265,SCZO_242,SZO_264,Z_241
		defs: C_298,CZ_305,ds_307,eax_296,ebp_294,ebx_299,ecx_302,edi_293,edx_301,es_306,esi_300,esp_292,S_304,SCZO_295,SZO_297,Z_303
	word32 edi_309
	byte SCZO_311
	word32 eax_312
	byte SZO_313
	byte C_314
	word32 edx_317
	word32 ecx_318
	byte Z_319
	byte S_320
	byte CZ_321
	call edi_293 (retsize: 4; depth: 4)
		uses: C_298,CZ_305,ds_307,dwLoc04_6,dwLoc08_12,dwLoc90_32,dwLoc94_26,dwLocA0_34,dwLocA8_25,dwLocB0_33,dwLocBC_17,dwLocC0_20,dwLocC4_22,eax_296,ebp_294,ebx_299,ecx_302,edi_293,edx_301,es_306,esi_300,esp_292,S_304,SCZO_295,SZO_297,Z_303
		defs: C_314,CZ_321,ds_323,eax_312,ebp_310,ebx_315,ecx_318,edi_309,edx_317,es_322,esi_316,esp_308,S_320,SCZO_311,SZO_313,Z_319
	branch dwArg04 == eax_312 l10019C41
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C41:
	word32 ecx_327 = Mem288[esp_132 + 0x00000030:word32]
	word32 eax_331 = Mem288[esp_132 + 0x00000010:word32]
	Mem332[esp_132 + 0x00000010:word32] = 0x00000000
	Mem333[esp_132 + 0x00000014:word32] = 0x00000000
	Mem334[ecx_327:word32] = eax_331
	word32 edx_336
	fn1000C640(esp_132 + 0x00000010, ebx_140, esi_254, 0x00000000, es, ds, out edx_336, out esi_154)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C06:
	edi_255 = Mem288[esp_132 + 0x00000020:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C0A:
	fn1000C640(esp_132 + 0x00000010, ebx_140, esi_254, edi_255, es, ds, out edx_151, out esi_154)
	word32 edi_282 = edi_255 + 0x00000001
	Mem283[esp_132 + 0x00000020:word32] = edi_282
	branch edi_282 <u Mem283[esp_132 + 0x0000002C:word32] l10019BD2
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C1E:
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C20:
	edi_150 = 0x00000000
	branch Mem197[esp_132 + 0x0000001C:word32] != 0x00000000 l10019C60
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C60:
	word32 edx_218
	word32 esi_219
	fn1000C640(esp_132 + 0x00000018, ebx_140, esi_154, 0x00000000, es, ds, out edx_218, out esi_219)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10019C27:
	word32 edx_186
	fn1000C640(esp_132 + 0x00000018, ebx_140, esi_154, edi_150, es, ds, out edx_186, out esi)
	ecx = Mem148[esp_132 + 0x00000034:word32]
	ebx_140 = ebx_140 + 0x00000001
	branch ebx_140 <u Mem148[esp_132 + 0x00000024:word32] l10019B96
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l10019C3F:
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10019C69:
	edx_133 = Mem148[esp_132 + 0x00000014:word32]
	*edxOut = edx_133
	branch edx_133 >= 0x00000000 l10019D36
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10019C75:
	branch Mem28[0x10031000:word32] <=u 0x00000003 l10019D36
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10019C82:
	fn1000C51D(esp_132 + 0x00000058, 0x10003E54)
	fn1000C51D(esp_132 + 0x00000068, 0x10003D54)
	Mem90[esp_132 + 0x0000007C:word32] = edi_150
	Mem91[esp_132 + 0x00000078:word32] = esp_132 + 0x00000024
	Mem93[esp_132 + 0x00000088:word32] = esp_132 + 0x0000001C
	word32 esp_95 = esp_132 - 0x00000004
	Mem96[esp_95:word32] = 0x00000004
	word32 ecx_97 = Mem96[esp_95:word32]
	Mem99[esp_95 + 0x0000009C:word32] = fp + 0x00000004
	Mem101[esp_95 + 0x00000084:word32] = ecx_97
	Mem102[esp_95 + 0x00000088:word32] = edi_150
	Mem103[esp_95 + 0x00000090:word32] = edi_150
	Mem104[esp_95 + 0x00000094:word32] = ecx_97
	Mem105[esp_95 + 0x00000098:word32] = edi_150
	Mem106[esp_95 + 0x000000A0:word32] = edi_150
	Mem107[esp_95 + 0x000000A4:word32] = ecx_97
	Mem108[esp_95 + 0x000000A8:word32] = edi_150
	Mem109[esp_95 + 0x000000AC:word32] = esp_95 + 0x00000018
	Mem110[esp_95 + 0x000000B0:word32] = edi_150
	Mem111[esp_95 + 0x000000B4:word32] = ecx_97
	Mem112[esp_95 + 0x000000B8:word32] = edi_150
	Mem116[esp_95:word32] = esp_95 + 0x0000003C
	Mem118[esp_95 - 0x00000004:word32] = 0x00000008
	Mem120[esp_95 - 0x00000008:word32] = edi_150
	Mem122[esp_95 - 0x0000000C:word32] = edi_150
	word32 ecx_127
	word32 edx_128
	word32 esi_129
	word32 edi_130
	fn1000C491(0x10031000, 0x100091DF, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_127, out edx_128, out esi_129, out edi_130)
	esp_132 = esp_95 + 0x00000004
	*edxOut = Mem122[esp_95 + 0x00000018:word32]
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10019D36:
	word32 esp_55 = esp_132 + 0x00000004
	word32 ecx_63
	return fn1002F420(edx_133, Mem28[esp_132 + 0x000000BC:word32] ^ esp_55 + 0x00000008, edx_133, Mem28[esp_55 + 0x00000004:word32], ebp_142, Mem28[esp_55:word32], Mem28[esp_132:word32], es, ds, out ecx_63)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -76(fp):fp - 0x000000A0 -72(fp):<invalid> -68(fp):0x00000004 -64(fp):<invalid> -60(fp):fp - 0x000000A8 -56(fp):<invalid> -52(fp):0x00000004 -48(fp):<invalid> -44(fp):fp + 0x00000004 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -28(fp):fp - 0x000000B0 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10019B4A_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):edi -192(fp):esi -188(fp):ebx -180(fp):<invalid> -176(fp):0x80070490 -168(fp):edx -164(fp):<invalid> -160(fp):<invalid> -156(fp):fp - 0x000000B4 -152(fp):<invalid> -148(fp):<invalid> -144(fp):ecx -76(fp):fp - 0x000000A0 -72(fp):<invalid> -68(fp):0x00000004 -64(fp):<invalid> -60(fp):fp - 0x000000A8 -56(fp):<invalid> -52(fp):0x00000004 -48(fp):<invalid> -44(fp):fp + 0x00000004 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -28(fp):fp - 0x000000B0 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001A5AA(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
fn1001A5AA_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0088(32)

l1001A5AA:
	word32 esp_47
	word32 edi_48
	word32 ebp_49
	byte SCZO_50
	word32 eax_51
	byte SZO_52
	byte C_53
	word32 ebx_54
	word32 esi_55
	word32 edx_56
	word32 ecx_57
	byte S_58
	byte al_59
	byte Z_60
	bcuiposr0 None_61
	byte CZ_62
	selector es_63
	selector ds_64
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 184)
		uses: C_19,dwLoc04_6,dwLoc0C_12,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_36,ebp_7,ebx_24,ecx_43,edi_3,edx,esi_29,esp_44,SZO_18
		defs: al_59,C_53,CZ_62,ds_64,eax_51,ebp_49,ebx_54,ecx_57,edi_48,edx_56,es_63,esi_55,esp_47,None_61,S_58,SCZO_50,SZO_52,Z_60
	word32 edi_66
	byte SCZO_68
	word32 eax_69
	byte SZO_70
	byte C_71
	word32 ebx_72
	word32 esi_73
	word32 ecx_75
	byte S_76
	byte al_77
	byte Z_78
	bcuiposr0 None_79
	byte CZ_80
	selector ds_107
	selector es_108
	word32 edx_113
	word32 ebp_101
	word32 esp_102
	call Mem0[esi_55:word32] (retsize: 4; depth: 4)
		uses: al_59,C_53,CZ_62,ds_64,dwLoc04_6,dwLoc0C_12,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_51,ebp_49,ebx_54,ecx_57,edi_48,edx_56,es_63,esi_55,esp_47,None_61,S_58,SCZO_50,SZO_52,Z_60
		defs: al_77,C_71,CZ_80,ds_82,eax_69,ebp_67,ebx_72,ecx_75,edi_66,edx_74,es_81,esi_73,esp_65,None_79,S_76,SCZO_68,SZO_70,Z_78
	word32 edi_115 = eax_69
	branch eax_69 < 0x00000000 l1001A731
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001A60D:
	word32 eax_188 = fn1001E6C6(fp - 0x00000084, fp - 0x0000008C, eax_69, es_108, ds_107, out edx_113)
	word32 esi_181 = 0x00000000
	edi_115 = eax_188
	branch eax_188 < 0x00000000 l1001A717
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A62A:
	word32 ecx_253 = Mem0[ebp_101 - 0x0000008C:word32]
	Mem256[esp_102 - 0x00000004:word32] = Mem0[ebp_101 - 0x00000090:word32]
	Mem258[esp_102 - 0x00000008:word32] = ecx_253
	word32 esp_262
	word32 edi_263
	word32 ebp_264
	byte SCZO_265
	word32 eax_266
	byte SZO_267
	byte C_268
	word32 ebx_269
	word32 esi_270
	word32 edx_271
	word32 ecx_272
	byte S_273
	byte al_274
	byte Z_275
	bcuiposr0 None_276
	byte CZ_277
	selector es_278
	selector ds_279
	call Mem258[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_77,C_192,CZ_80,ds_82,dwLoc04_6,dwLoc0C_12,dwLoc84_186,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_259,ebp_67,ebx_72,ecx_261,edi_189,edx_187,es_81,esi_260,esp_257,None_79,S_191,SCZO_68,SZO_190,Z_78
		defs: al_274,C_268,CZ_277,ds_279,eax_266,ebp_264,ebx_269,ecx_272,edi_263,edx_271,es_278,esi_270,esp_262,None_276,S_273,SCZO_265,SZO_267,Z_275
	word32 esp_280
	word32 edi_281
	word32 ebp_282
	byte SCZO_283
	word32 eax_284
	byte SZO_285
	byte C_286
	word32 ebx_287
	word32 esi_288
	word32 edx_289
	word32 ecx_290
	byte S_291
	byte al_292
	byte Z_293
	bcuiposr0 None_294
	byte CZ_295
	selector es_296
	selector ds_297
	call esi_270 (retsize: 4; depth: 4)
		uses: al_274,C_268,CZ_277,ds_279,dwLoc04_6,dwLoc0C_12,dwLoc84_186,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_266,ebp_264,ebx_269,ecx_272,edi_263,edx_271,es_278,esi_270,esp_262,None_276,S_273,SCZO_265,SZO_267,Z_275
		defs: al_292,C_286,CZ_295,ds_297,eax_284,ebp_282,ebx_287,ecx_290,edi_281,edx_289,es_296,esi_288,esp_280,None_294,S_291,SCZO_283,SZO_285,Z_293
	word32 eax_298 = Mem258[ebp_282 - 0x00000084:word32]
	Mem300[esp_280 - 0x00000004:word32] = ebx_287
	Mem302[esp_280 - 0x00000008:word32] = eax_298
	word32 esp_306
	word32 edi_307
	word32 ebp_308
	byte SCZO_309
	word32 eax_310
	byte SZO_311
	byte C_312
	word32 ebx_313
	word32 esi_314
	word32 edx_315
	word32 ecx_316
	byte S_317
	byte al_318
	byte Z_319
	bcuiposr0 None_320
	byte CZ_321
	selector es_322
	selector ds_323
	call Mem302[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_292,C_286,CZ_295,ds_297,dwLoc04_6,dwLoc0C_12,dwLoc84_186,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_298,ebp_282,ebx_287,ecx_305,edi_281,edx_289,es_296,esi_304,esp_301,None_294,S_291,SCZO_283,SZO_285,Z_293
		defs: al_318,C_312,CZ_321,ds_323,eax_310,ebp_308,ebx_313,ecx_316,edi_307,edx_315,es_322,esi_314,esp_306,None_320,S_317,SCZO_309,SZO_311,Z_319
	word32 esp_324
	byte SCZO_327
	word32 eax_328
	byte SZO_329
	byte C_330
	word32 ebx_331
	word32 esi_332
	word32 edx_333
	word32 ecx_334
	byte S_335
	byte al_336
	byte Z_337
	bcuiposr0 None_338
	byte CZ_339
	call esi_314 (retsize: 4; depth: 4)
		uses: al_318,C_312,CZ_321,ds_323,dwLoc04_6,dwLoc0C_12,dwLoc84_186,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_310,ebp_308,ebx_313,ecx_316,edi_307,edx_315,es_322,esi_314,esp_306,None_320,S_317,SCZO_309,SZO_311,Z_319
		defs: al_336,C_330,CZ_339,ds_341,eax_328,ebp_326,ebx_331,ecx_334,edi_325,edx_333,es_340,esi_332,esp_324,None_338,S_335,SCZO_327,SZO_329,Z_337
	word32 esi_342 = Mem302[ebp_101 - 0x00000080:word32]
	word32 ecx_346 = Mem302[ebp_101 - 0x00000094:word32]
	Mem347[ebp_101 - 0x00000088:word32] = eax_328
	Mem351[esp_324 - 0x00000004:word32] = esi_342 + 0x00000020
	Mem352[ecx_346:byte] = eax_328 >= 0x00000000
	AcquireSRWLockExclusive(Mem352[esp_324 - 0x00000004:PSRWLOCK])
	word32 ecx_355
	word32 esi_357
	fn1000F276(esi_342 + 0x00000024, esi_342 + 0x00000020, esi_342, edi_115, es_108, ds_107, out ecx_355, out edx_113, out esi_357)
	branch esi_342 == 0x00000020 l1001A690
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A689:
	Mem416[esp_324 - 0x00000004:word32] = esi_342 + 0x00000020
	ReleaseSRWLockExclusive(Mem416[esp_324 - 0x00000004:PSRWLOCK])
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:Test(NS,S) -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A690:
	Mem364[esp_324 - 0x00000004:word32] = 0x00000004
	word32 ebx_365 = Mem364[esp_324 - 0x00000004:word32]
	esp_102 = esp_324
	branch Mem364[0x10031000:word32] <=u ebx_365 l1001A715
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:Test(NS,S) -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A715:
	esi_181 = 0x00000000
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:Test(NS,S) -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001A69B:
	fn1000C51D(ebp_101 - 0x0000005C, 0x10003428)
	fn1000C51D(ebp_101 - 0x0000004C, 0x1000452C)
	Mem374[ebp_101 - 0x00000034:word32] = ebx_365
	Mem375[ebp_101 - 0x0000003C:word32] = ebp_101 - 0x00000090
	word32 eax_379 = Mem375[ebp_101 - 0x00000094:word32]
	Mem380[ebp_101 - 0x00000038:word32] = 0x00000000
	Mem381[ebp_101 - 0x00000030:word32] = 0x00000000
	Mem382[ebp_101 - 0x00000028:word32] = 0x00000000
	Mem384[ebp_101 - 0x0000008C:word32] = (word32) Mem382[eax_379:byte]
	Mem386[ebp_101 - 0x0000002C:word32] = ebp_101 - 0x0000008C
	Mem388[ebp_101 - 0x00000024:word32] = ebx_365
	Mem389[ebp_101 - 0x00000020:word32] = 0x00000000
	Mem390[ebp_101 - 0x0000001C:word32] = ebp_101 - 0x00000088
	Mem391[ebp_101 - 0x00000018:word32] = 0x00000000
	Mem392[ebp_101 - 0x00000014:word32] = ebx_365
	Mem393[ebp_101 - 0x00000010:word32] = 0x00000000
	Mem397[esp_324 - 0x00000004:word32] = ebp_101 - 0x0000007C
	Mem399[esp_324 - 0x00000008:word32] = 0x00000007
	Mem401[esp_324 - 0x0000000C:word32] = 0x00000000
	Mem403[esp_324 - 0x00000010:word32] = 0x00000000
	word32 ecx_406
	fn1000C491(0x10031000, 0x10008EBA, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_406, out edx_113, out esi_181, out edi_115)
	esp_102 = esp_324
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:Test(NS,S) -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001A717:
	word32 ecx_207 = Mem0[ebp_101 - 0x00000080:word32]
	branch ecx_207 == 0x00000000 l1001A731
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x00000094 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000008C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001A71E:
	Mem211[ebp_101 - 0x00000080:word32] = esi_181
	word32 esp_213 = esp_102 - 0x00000004
	Mem214[esp_213:word32] = ecx_207
	word32 esp_217
	word32 edi_218
	word32 ebp_219
	byte SCZO_220
	word32 eax_221
	byte SZO_222
	byte C_223
	word32 ebx_224
	word32 esi_225
	word32 edx_226
	word32 ecx_227
	byte S_228
	byte al_229
	byte Z_230
	bcuiposr0 None_231
	byte CZ_232
	selector es_233
	selector ds_234
	call Mem214[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_204,C_210,CZ_195,ds_193,dwLoc04_6,dwLoc0C_12,dwLoc84_186,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_212,ebp_205,ebx_202,ecx_216,edi_200,edx_198,es_194,esi_215,esp_213,None_196,S_197,SCZO_199,SZO_208,Z_209
		defs: al_229,C_223,CZ_232,ds_234,eax_221,ebp_219,ebx_224,ecx_227,edi_218,edx_226,es_233,esi_225,esp_217,None_231,S_228,SCZO_220,SZO_222,Z_230
	byte SCZO_238
	word32 eax_239
	byte SZO_240
	byte C_241
	word32 ebx_242
	word32 esi_243
	word32 ecx_245
	byte S_246
	byte al_247
	byte Z_248
	bcuiposr0 None_249
	byte CZ_250
	call esi_225 (retsize: 4; depth: 4)
		uses: al_229,C_223,CZ_232,ds_234,dwLoc04_6,dwLoc0C_12,dwLoc84_186,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_221,ebp_219,ebx_224,ecx_227,edi_218,edx_226,es_233,esi_225,esp_217,None_231,S_228,SCZO_220,SZO_222,Z_230
		defs: al_247,C_241,CZ_250,ds_252,eax_239,ebp_237,ebx_242,ecx_245,edi_236,edx_244,es_251,esi_243,esp_235,None_249,S_246,SCZO_238,SZO_240,Z_248
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x00000094 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000008C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001A731:
	word32 ecx_103 = Mem0[ebp_101 - 0x00000084:word32]
	branch ecx_103 == 0x00000000 l1001A752
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x00000094 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000008C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001A73B:
	Mem137[ebp_101 - 0x00000084:word32] = Mem0[ebp_101 - 0x00000084:word32] & 0x00000000
	word32 esp_141 = esp_102 - 0x00000004
	Mem142[esp_141:word32] = ecx_103
	word32 esp_145
	word32 edi_146
	word32 ebp_147
	byte SCZO_148
	word32 eax_149
	byte SZO_150
	byte C_151
	word32 ebx_152
	word32 esi_153
	word32 edx_154
	word32 ecx_155
	byte S_156
	byte al_157
	byte Z_158
	bcuiposr0 None_159
	byte CZ_160
	selector es_161
	selector ds_162
	call Mem142[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_100,C_139,CZ_91,ds_89,dwLoc04_6,dwLoc0C_12,dwLoc84_88,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_140,ebp_101,ebx_98,ecx_144,edi_96,edx_94,es_90,esi_143,esp_141,None_92,S_93,SCZO_95,SZO_138,Z_105
		defs: al_157,C_151,CZ_160,ds_162,eax_149,ebp_147,ebx_152,ecx_155,edi_146,edx_154,es_161,esi_153,esp_145,None_159,S_156,SCZO_148,SZO_150,Z_158
	byte SCZO_166
	word32 eax_167
	byte SZO_168
	byte C_169
	word32 ebx_170
	word32 esi_171
	word32 ecx_173
	byte S_174
	byte al_175
	byte Z_176
	bcuiposr0 None_177
	byte CZ_178
	call esi_153 (retsize: 4; depth: 4)
		uses: al_157,C_151,CZ_160,ds_162,dwLoc04_6,dwLoc0C_12,dwLoc84_88,dwLoc88_17,dwLoc8C_46,dwLoc90_30,dwLoc94_42,dwLoc98_35,dwLocA0_22,dwLocA4_27,dwLocA8_34,dwLocAC_38,dwLocB0_40,dwLocB4_45,eax_149,ebp_147,ebx_152,ecx_155,edi_146,edx_154,es_161,esi_153,esp_145,None_159,S_156,SCZO_148,SZO_150,Z_158
		defs: al_175,C_169,CZ_178,ds_180,eax_167,ebp_165,ebx_170,ecx_173,edi_164,edx_172,es_179,esi_171,esp_163,None_177,S_174,SCZO_166,SZO_168,Z_176
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x00000094 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000008C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001A752:
	word32 esp_121 = esp_102 + 0x00000004
	word32 ebx_127 = Mem0[esp_121 + 0x00000004:word32]
	*ebxOut = ebx_127
	word32 ecx_129
	return fn1002F420(edi_115, Mem0[ebp_101 - 0x00000008:word32] ^ ebp_101, edx_113, ebx_127, ebp_101, Mem0[esp_121:word32], Mem0[esp_102:word32], es_108, ds_107, out ecx_129)
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x00000094 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000008C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1001A5AA_exit:
// DataOut: eax ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -180(fp):edx -176(fp):0x10004C70 -172(fp):fp - 0x00000088 -168(fp):edi -164(fp):esi -160(fp):ebx -152(fp):<invalid> -148(fp):ecx -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x00000094 -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x0000008C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



void fn1001A770(word32 ebp, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001A770_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -02D4(32) Stack +0004(32)

l1001A770:
	word32 ebx_33
	word32 edi_34
	word32 edx_1873 = fn10014F27(fp - 0x00000288, out ebx_33, out edi_34)
	branch Mem0[0x10031000:word32] <=u 0x00000005 l1001A7F4
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32) Local -02D8(32)

l1001A7BA:
	Mem1869[fp - 0x0000035C:word32] = 0x00002000
	Mem1871[fp - 0x00000360:word32] = 0x00000000
	branch (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_1873) == 0x00 l1001A7F4
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:0x10031000 al:<invalid> edx:<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -728(fp):<invalid> -648(fp):<invalid> -644(fp):al -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32) Local -02D8(32)

l1001A7CC:
	Mem1882[fp - 0x0000035C:word32] = fp - 0x00000240
	Mem1884[fp - 0x00000360:word32] = 0x00000002
	Mem1888[fp - 0x00000364:word32] = fn10014F7C(fp - 0x00000288)
	Mem1893[fp - 0x00000368:word32] = fp - 0x00000280
	word32 ecx_1895
	word32 esi_1897
	word32 edi_1898
	fn1000C491(0x10031000, 0x10008E95, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1895, out edx_1873, out esi_1897, out edi_1898)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x10031000 esi:0x10031000 al:<invalid> edx:<invalid> -864(fp):0x00000000 -860(fp):0x00002000 -856(fp):edi -852(fp):esi -848(fp):ebx -728(fp):<invalid> -648(fp):<invalid> -644(fp):al -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32) Local -02D8(32)

l1001A7F4:
	Mem47[fp - 0x0000035C:word32] = 0x00000007
	word32 edi_52 = fp - 0x000002C0
	word32 ecx_53 = Mem47[fp - 0x0000035C:word32]
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -728(fp):<invalid> -648(fp):<invalid> -644(fp):al -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32) Local -02D8(32)

l1001A7FF:
	branch ecx_53 == 0x00000000 l1001A801
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -728(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32) Local -02D8(32)

l1001A801:
	word32 esp_1010
	word32 ebp_1105
	word32 ebx_1110
	selector es_1003
	selector ds_1004
	word32 edi_154
	word32 edx_149
	word32 esi_115
	word32 edi_116
	Mem123[fp - 0x0000035C:word32] = fn1000EF25(fp - 0x00000338, edx_1873, ebx_33, 0x10007608, es, ds, out esi_115, out edi_116)
	Mem126[fp - 0x00000360:word32] = Mem123[ebx_33 + 0x0000000C:word32]
	word32 edx_128
	branch fn10019B4A(dwArg04, fp - 0x00000004, esi_115, es, ds, dwArg00, dwArg04, out edx_128) < 0x00000000 l1001AF0A
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -728(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02CC(32) Local -02D4(32)

l1001AF0A:
	word32 eax_1810 = Mem126[ebx_33 + 0x00000010:word32]
	Mem1815[fp - 0x0000035C:word32] = 0x00000000
	Mem1817[fp - 0x00000360:word32] = 0x00000000
	Mem1819[fp - 0x00000364:word32] = 0x00000000
	Mem1822[fp - 0x00000368:word32] = 0x00000001
	Mem1824[fp - 0x0000036C:word32] = 0x00000000
	Mem1826[fp - 0x00000370:word32] = eax_1810
	word32 esp_1828
	word32 edi_1829
	word32 ebp_1830
	byte SCZO_1831
	word32 eax_1832
	byte SZO_1833
	byte C_1834
	word32 ebx_1835
	word32 esi_1836
	word32 ecx_1837
	byte al_1838
	byte CZ_1839
	byte Z_1840
	word32 edx_1841
	byte S_1842
	word16 cx_1843
	byte dl_1844
	bcuiposr0 None_1845
	selector es_1846
	selector ds_1847
	call Mem1826[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_49,bLoc0284_32,bLoc02C1,C_1813,cx_58,CZ_38,dl_121,ds,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_83,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1810,ebp_7,ebx_33,ecx_1827,edi_118,edx_128,es,esi_1820,esp_1825,None,S_133,SCZO_37,SZO_1812,Z_42
		defs: al_1838,C_1834,cx_1843,CZ_1839,dl_1844,ds_1847,eax_1832,ebp_1830,ebx_1835,ecx_1837,edi_1829,edx_1841,es_1846,esi_1836,esp_1828,None_1845,S_1842,SCZO_1831,SZO_1833,Z_1840
	byte SCZO_1851
	word32 eax_1852
	byte SZO_1853
	byte C_1854
	word32 esi_1856
	word32 ecx_1857
	byte al_1858
	byte CZ_1859
	byte Z_1860
	byte S_1862
	word16 cx_1863
	byte dl_1864
	bcuiposr0 None_1865
	call Mem1826[esi_1836 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: al_1838,bLoc0284_32,bLoc02C1,C_1834,cx_1843,CZ_1839,dl_1844,ds_1847,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_83,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1832,ebp_1830,ebx_1835,ecx_1837,edi_1829,edx_1841,es_1846,esi_1836,esp_1828,None_1845,S_1842,SCZO_1831,SZO_1833,Z_1840
		defs: al_1858,C_1854,cx_1863,CZ_1859,dl_1864,ds_1867,eax_1852,ebp_1850,ebx_1855,ecx_1857,edi_1849,edx_1861,es_1866,esi_1856,esp_1848,None_1865,S_1862,SCZO_1851,SZO_1853,Z_1860
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A88F:
	word32 esi_1029
	Mem449[fp - 0x0000035C:word32] = fp - 0x00000260
	Mem451[fp - 0x00000360:word32] = 0x00000000
	word32 esp_459
	word32 edi_460
	word32 ebp_461
	byte SCZO_462
	word32 eax_463
	byte SZO_464
	byte C_465
	word32 ebx_466
	word32 esi_467
	word32 ecx_468
	byte al_469
	byte CZ_470
	byte Z_471
	word32 edx_472
	byte S_473
	word16 cx_474
	byte dl_475
	bcuiposr0 None_476
	selector es_477
	selector ds_478
	call Mem451[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_49,bLoc0284_32,bLoc02C1,C_134,cx_58,CZ_38,dl_121,ds,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_83,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_446,ebp_7,ebx_33,ecx_454,edi_118,edx_447,es,esi_453,esp_450,None,S_133,SCZO_37,SZO_132,Z_42
		defs: al_469,C_465,cx_474,CZ_470,dl_475,ds_478,eax_463,ebp_461,ebx_466,ecx_468,edi_460,edx_472,es_477,esi_467,esp_459,None_476,S_473,SCZO_462,SZO_464,Z_471
	word32 esp_479
	word32 edi_480
	word32 ebp_481
	byte SCZO_482
	word32 eax_483
	byte SZO_484
	byte C_485
	word32 ebx_486
	word32 esi_487
	word32 ecx_488
	byte al_489
	byte CZ_490
	byte Z_491
	word32 edx_492
	byte S_493
	word16 cx_494
	byte dl_495
	bcuiposr0 None_496
	selector es_497
	selector ds_498
	call esi_467 (retsize: 4; depth: 4)
		uses: al_469,bLoc0284_32,bLoc02C1,C_465,cx_474,CZ_470,dl_475,ds_478,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_83,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_463,ebp_461,ebx_466,ecx_468,edi_460,edx_472,es_477,esi_467,esp_459,None_476,S_473,SCZO_462,SZO_464,Z_471
		defs: al_489,C_485,cx_494,CZ_490,dl_495,ds_498,eax_483,ebp_481,ebx_486,ecx_488,edi_480,edx_492,es_497,esi_487,esp_479,None_496,S_493,SCZO_482,SZO_484,Z_491
	Mem501[esp_479 - 0x00000004:word32] = 0x00000000
	word32 esp_505
	word32 edi_506
	word32 ebp_507
	byte SCZO_508
	word32 eax_509
	byte SZO_510
	byte C_511
	word32 ebx_512
	word32 esi_513
	word32 ecx_514
	byte al_515
	byte CZ_516
	byte Z_517
	word32 edx_518
	byte S_519
	word16 cx_520
	byte dl_521
	bcuiposr0 None_522
	selector es_523
	selector ds_524
	call Mem501[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_489,bLoc0284_32,bLoc02C1,C_485,cx_494,CZ_490,dl_495,ds_498,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_83,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_499,ebp_481,ebx_486,ecx_504,edi_480,edx_492,es_497,esi_503,esp_500,None_496,S_493,SCZO_482,SZO_484,Z_491
		defs: al_515,C_511,cx_520,CZ_516,dl_521,ds_524,eax_509,ebp_507,ebx_512,ecx_514,edi_506,edx_518,es_523,esi_513,esp_505,None_522,S_519,SCZO_508,SZO_510,Z_517
	word32 esp_525
	word32 edi_526
	word32 ebp_527
	byte SCZO_528
	word32 eax_529
	byte SZO_530
	byte C_531
	word32 ebx_532
	word32 esi_533
	word32 ecx_534
	byte al_535
	byte CZ_536
	byte Z_537
	word32 edx_538
	byte S_539
	word16 cx_540
	byte dl_541
	bcuiposr0 None_542
	selector es_543
	selector ds_544
	call esi_513 (retsize: 4; depth: 4)
		uses: al_515,bLoc0284_32,bLoc02C1,C_511,cx_520,CZ_516,dl_521,ds_524,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_83,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_509,ebp_507,ebx_512,ecx_514,edi_506,edx_518,es_523,esi_513,esp_505,None_522,S_519,SCZO_508,SZO_510,Z_517
		defs: al_535,C_531,cx_540,CZ_536,dl_541,ds_544,eax_529,ebp_527,ebx_532,ecx_534,edi_526,edx_538,es_543,esi_533,esp_525,None_542,S_539,SCZO_528,SZO_530,Z_537
	Mem548[esp_525 - 0x00000004:word32] = 0x00000000
	word32 esp_552
	word32 edi_553
	word32 ebp_554
	byte SCZO_555
	word32 eax_556
	byte SZO_557
	byte C_558
	word32 ebx_559
	word32 esi_560
	word32 ecx_561
	byte al_562
	byte CZ_563
	byte Z_564
	word32 edx_565
	byte S_566
	word16 cx_567
	byte dl_568
	bcuiposr0 None_569
	selector es_570
	selector ds_571
	call Mem548[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_535,bLoc0284_32,bLoc02C1,C_531,cx_540,CZ_536,dl_541,ds_544,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_545,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_546,ebp_527,ebx_532,ecx_551,edi_526,edx_538,es_543,esi_550,esp_547,None_542,S_539,SCZO_528,SZO_530,Z_537
		defs: al_562,C_558,cx_567,CZ_563,dl_568,ds_571,eax_556,ebp_554,ebx_559,ecx_561,edi_553,edx_565,es_570,esi_560,esp_552,None_569,S_566,SCZO_555,SZO_557,Z_564
	word32 esp_572
	word32 edi_573
	word32 ebp_574
	byte SCZO_575
	word32 eax_576
	byte SZO_577
	byte C_578
	word32 ebx_579
	word32 esi_580
	word32 ecx_581
	byte al_582
	byte CZ_583
	byte Z_584
	word32 edx_585
	byte S_586
	word16 cx_587
	byte dl_588
	bcuiposr0 None_589
	selector es_590
	selector ds_591
	call esi_560 (retsize: 4; depth: 4)
		uses: al_562,bLoc0284_32,bLoc02C1,C_558,cx_567,CZ_563,dl_568,ds_571,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_84,dwLoc0314_545,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_556,ebp_554,ebx_559,ecx_561,edi_553,edx_565,es_570,esi_560,esp_552,None_569,S_566,SCZO_555,SZO_557,Z_564
		defs: al_582,C_578,cx_587,CZ_583,dl_588,ds_591,eax_576,ebp_574,ebx_579,ecx_581,edi_573,edx_585,es_590,esi_580,esp_572,None_589,S_586,SCZO_575,SZO_577,Z_584
	Mem595[esp_572 - 0x00000004:word32] = 0x00000000
	word32 esp_599
	word32 edi_600
	word32 ebp_601
	byte SCZO_602
	word32 eax_603
	byte SZO_604
	byte C_605
	word32 ebx_606
	word32 esi_607
	word32 ecx_608
	byte al_609
	byte CZ_610
	byte Z_611
	word32 edx_612
	byte S_613
	word16 cx_614
	byte dl_615
	bcuiposr0 None_616
	selector es_617
	selector ds_618
	call Mem595[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_582,bLoc0284_32,bLoc02C1,C_578,cx_587,CZ_583,dl_588,ds_591,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_592,dwLoc0314_545,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_593,ebp_574,ebx_579,ecx_598,edi_573,edx_585,es_590,esi_597,esp_594,None_589,S_586,SCZO_575,SZO_577,Z_584
		defs: al_609,C_605,cx_614,CZ_610,dl_615,ds_618,eax_603,ebp_601,ebx_606,ecx_608,edi_600,edx_612,es_617,esi_607,esp_599,None_616,S_613,SCZO_602,SZO_604,Z_611
	word32 esp_619
	word32 edi_620
	byte SCZO_622
	word32 eax_623
	byte SZO_624
	byte C_625
	word32 ebx_626
	word32 esi_627
	word32 ecx_628
	byte al_629
	byte CZ_630
	byte Z_631
	word32 edx_632
	byte S_633
	word16 cx_634
	byte dl_635
	bcuiposr0 None_636
	selector es_637
	selector ds_638
	word32 ebp_1734
	call esi_607 (retsize: 4; depth: 4)
		uses: al_609,bLoc0284_32,bLoc02C1,C_605,cx_614,CZ_610,dl_615,ds_618,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_131,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_85,dwLoc0310_592,dwLoc0314_545,dwLoc0334,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_603,ebp_601,ebx_606,ecx_608,edi_600,edx_612,es_617,esi_607,esp_599,None_616,S_613,SCZO_602,SZO_604,Z_611
		defs: al_629,C_625,cx_634,CZ_630,dl_635,ds_638,eax_623,ebp_621,ebx_626,ecx_628,edi_620,edx_632,es_637,esi_627,esp_619,None_636,S_633,SCZO_622,SZO_624,Z_631
	word32 esi_648
	word32 edi_649
	Mem652[esp_619 - 0x00000004:word32] = fn1000EF25(fp - 0x00000334, edx_632, ebx_626, 0x00000000, es_637, ds_638, out esi_648, out edi_649)
	branch fn1002043D(esi_648, edx_632, ebx_626, esi_648, edi_649, es_637, ds_638, dwArg00) < 0x00000000 l1001AEE3
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32)

l1001AEE3:
	word32 eax_1752 = Mem652[ebx_626 + 0x00000010:word32]
	Mem1757[esp_619 - 0x00000004:word32] = 0x00000000
	Mem1759[esp_619 - 0x00000008:word32] = 0x00000000
	Mem1761[esp_619 - 0x0000000C:word32] = 0x00000000
	Mem1764[esp_619 - 0x00000010:word32] = 0x00000001
	Mem1766[esp_619 - 0x00000014:word32] = 0x00000000
	Mem1768[esp_619 - 0x00000018:word32] = eax_1752
	word32 esp_1770
	word32 edi_1771
	word32 ebp_1772
	byte SCZO_1773
	word32 eax_1774
	byte SZO_1775
	byte C_1776
	word32 ebx_1777
	word32 esi_1778
	word32 ecx_1779
	byte al_1780
	byte CZ_1781
	byte Z_1782
	word32 edx_1783
	byte S_1784
	word16 cx_1785
	byte dl_1786
	bcuiposr0 None_1787
	selector es_1788
	selector ds_1789
	call Mem1768[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_629,bLoc0284_32,bLoc02C1,C_1755,cx_634,CZ_630,dl_635,ds_638,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1752,ebp_621,ebx_626,ecx_1769,edi_649,edx_632,es_637,esi_1762,esp_1767,None_636,S_658,SCZO_622,SZO_1754,Z_631
		defs: al_1780,C_1776,cx_1785,CZ_1781,dl_1786,ds_1789,eax_1774,ebp_1772,ebx_1777,ecx_1779,edi_1771,edx_1783,es_1788,esi_1778,esp_1770,None_1787,S_1784,SCZO_1773,SZO_1775,Z_1782
	byte SCZO_1793
	word32 eax_1794
	byte SZO_1795
	byte C_1796
	word32 ecx_1799
	byte al_1800
	byte CZ_1801
	byte Z_1802
	word32 edx_1803
	byte S_1804
	word16 cx_1805
	byte dl_1806
	bcuiposr0 None_1807
	call Mem1768[esi_1778 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: al_1780,bLoc0284_32,bLoc02C1,C_1776,cx_1785,CZ_1781,dl_1786,ds_1789,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1774,ebp_1772,ebx_1777,ecx_1779,edi_1771,edx_1783,es_1788,esi_1778,esp_1770,None_1787,S_1784,SCZO_1773,SZO_1775,Z_1782
		defs: al_1800,C_1796,cx_1805,CZ_1801,dl_1806,ds_1809,eax_1794,ebp_1792,ebx_1797,ecx_1799,edi_1791,edx_1803,es_1808,esi_1798,esp_1790,None_1807,S_1804,SCZO_1793,SZO_1795,Z_1802
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A93A:
	Mem686[esp_619 - 0x00000004:word32] = fp - 0x000002C1
	Mem689[esp_619 - 0x00000008:word32] = Mem686[ebx_626 + 0x00000010:word32]
	Mem693[esp_619 - 0x0000000C:word32] = Mem689[ebx_626 + 0x00000014:word32]
	word32 esp_1732 = esp_619
	word32 ebx_694
	branch fn1001A5AA(dwLoc02D4 & 0x00000000, ebp_1734, es_637, ds_638, dwArg00, dwArg04, dwArg08, out ebx_694) < 0x00000000 l1001A981
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A960:
	byte al_1701 = Mem693[ebp_1734 - 0x000002BD:byte] != 0x00
	word32 ecx_1697 = Mem693[ebx_694 + 0x00000010:word32]
	word32 eax_1702 = (word32) al_1701
	Mem1705[esp_619 - 0x00000004:word32] = eax_1702
	Mem1708[esp_619 - 0x00000008:word32] = Mem1705[ebx_694 + 0x0000000C:word32]
	Mem1710[esp_619 - 0x0000000C:word32] = ecx_1697
	word32 esp_1712
	word32 edi_1713
	word32 ebp_1714
	byte SCZO_1715
	word32 eax_1716
	byte SZO_1717
	byte C_1718
	word32 ebx_1719
	word32 esi_1720
	word32 ecx_1721
	byte al_1722
	byte CZ_1723
	byte Z_1724
	word32 edx_1725
	byte S_1726
	word16 cx_1727
	byte dl_1728
	bcuiposr0 None_1729
	selector es_1730
	selector ds_1731
	call Mem1710[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1701,bLoc0284_32,bLoc02C1_690,C_699,cx_634,CZ_630,dl_635,ds_638,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1702,ebp_621,ebx_694,ecx_1711,edi_649,edx_682,es_637,esi_1703,esp_1709,None_636,S_698,SCZO_1699,SZO_697,Z_1700
		defs: al_1722,C_1718,cx_1727,CZ_1723,dl_1728,ds_1731,eax_1716,ebp_1714,ebx_1719,ecx_1721,edi_1713,edx_1725,es_1730,esi_1720,esp_1712,None_1729,S_1726,SCZO_1715,SZO_1717,Z_1724
	word32 edi_1733
	byte SCZO_1735
	word32 eax_1736
	byte SZO_1737
	byte C_1738
	word32 ebx_1739
	word32 esi_1740
	word32 ecx_1741
	byte al_1742
	byte CZ_1743
	byte Z_1744
	word32 edx_1745
	byte S_1746
	word16 cx_1747
	byte dl_1748
	bcuiposr0 None_1749
	selector es_1750
	selector ds_1751
	call Mem1710[esi_1720 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: al_1722,bLoc0284_32,bLoc02C1_690,C_1718,cx_1727,CZ_1723,dl_1728,ds_1731,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1716,ebp_1714,ebx_1719,ecx_1721,edi_1713,edx_1725,es_1730,esi_1720,esp_1712,None_1729,S_1726,SCZO_1715,SZO_1717,Z_1724
		defs: al_1742,C_1738,cx_1747,CZ_1743,dl_1748,ds_1751,eax_1736,ebp_1734,ebx_1739,ecx_1741,edi_1733,edx_1745,es_1750,esi_1740,esp_1732,None_1749,S_1746,SCZO_1735,SZO_1737,Z_1744
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A981:
	word32 edi_702 = Mem693[ebp_1734 - 0x000002D0:word32]
	Mem707[ebp_1734 - 0x000002F0:word32] = 0x00000000
	Mem708[ebp_1734 - 0x000002EC:word32] = 0x00000000
	Mem709[ebp_1734 - 0x000002E8:word32] = 0x00000000
	fn1000F2EE(ebp_1734 - 0x000002F0)
	Mem711[ebp_1734 - 0x000002EC:word32] = Mem709[ebp_1734 - 0x000002EC:word32] | 0xFFFFFFFF
	Mem715[ebp_1734 - 0x000002E8:word32] = Mem711[ebp_1734 - 0x000002E8:word32] | 0xFFFFFFFF
	word32 esp_719 = esp_1732 - 0x00000004
	Mem720[esp_719:word32] = ebp_1734 - 0x000002E4
	Mem723[esp_719 - 0x00000004:word32] = ebp_1734 - 0x000002F0
	Mem727[esp_719 - 0x00000008:word32] = ebp_1734 - 0x000002BC
	word32 eax_728 = ebp_1734 - 0x000002CC
	Mem731[esp_719 - 0x0000000C:word32] = eax_728
	Mem733[esp_719 - 0x00000010:word32] = edi_702
	word32 esp_734
	word32 edi_735
	word32 ebp_736
	byte SCZO_737
	word32 eax_738
	byte SZO_739
	byte C_740
	word32 ebx_741
	word32 esi_742
	word32 ecx_743
	byte al_744
	byte CZ_745
	byte Z_746
	word32 edx_747
	byte S_748
	word16 cx_749
	byte dl_750
	bcuiposr0 None_751
	selector es_752
	selector ds_753
	call Mem733[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_729,bLoc0284_32,bLoc02C1_690,C_717,cx_634,CZ_630,dl_635,ds_638,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_728,ebp_700,ebx_694,ecx_724,edi_702,edx_682,es_637,esi_718,esp_732,None_636,S_698,SCZO_622,SZO_716,Z_631
		defs: al_744,C_740,cx_749,CZ_745,dl_750,ds_753,eax_738,ebp_736,ebx_741,ecx_743,edi_735,edx_747,es_752,esi_742,esp_734,None_751,S_748,SCZO_737,SZO_739,Z_746
	word32 esp_754
	word32 edi_755
	byte SCZO_757
	byte SZO_759
	byte C_760
	word32 esi_762
	word32 ecx_763
	byte al_764
	byte CZ_765
	byte Z_766
	word32 edx_767
	byte S_768
	word16 cx_769
	byte dl_770
	bcuiposr0 None_771
	word32 ebx_1644
	word32 eax_1695
	selector ds_1134
	selector es_1135
	word32 ebp_1145
	call Mem733[esi_742 + 0x00000048:word32] (retsize: 4; depth: 4)
		uses: al_744,bLoc0284_32,bLoc02C1_690,C_740,cx_749,CZ_745,dl_750,ds_753,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_738,ebp_736,ebx_741,ecx_743,edi_735,edx_747,es_752,esi_742,esp_734,None_751,S_748,SCZO_737,SZO_739,Z_746
		defs: al_764,C_760,cx_769,CZ_765,dl_770,ds_773,eax_758,ebp_756,ebx_761,ecx_763,edi_755,edx_767,es_772,esi_762,esp_754,None_771,S_768,SCZO_757,SZO_759,Z_766
	Mem775[esp_754 - 0x00000004:word32] = 0x00000004
	word32 edi_776 = Mem775[esp_754 - 0x00000004:word32]
	Mem778[ebp_1145 - 0x000002C4:word32] = eax_1695
	word32 esp_1130 = esp_754
	branch Mem778[0x10031000:word32] <=u edi_776 l1001AADC
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A9F4:
	fn1000C51D(ebp_1145 - 0x0000017C, 0x10003428)
	fn1000C51D(ebp_1145 - 0x0000016C, 0x10004560)
	Mem1604[ebp_1145 - 0x00000154:word32] = 0x00000010
	Mem1605[ebp_1145 - 0x0000015C:word32] = ebp_1145 - 0x0000025C
	Mem1609[ebp_1145 - 0x00000158:word32] = 0x00000000
	Mem1610[ebp_1145 - 0x00000150:word32] = 0x00000000
	word32 eax_1611 = Mem1610[ebp_1145 - 0x000002C8:word32]
	Mem1613[esp_754 - 0x00000004:word32] = eax_1611
	word32 esp_1617
	word32 edi_1618
	word32 ebp_1619
	byte SCZO_1620
	word32 eax_1621
	byte SZO_1622
	byte C_1623
	word32 ebx_1624
	word32 esi_1625
	word32 ecx_1626
	byte al_1627
	byte CZ_1628
	byte Z_1629
	word32 edx_1630
	byte S_1631
	word16 cx_1632
	byte dl_1633
	bcuiposr0 None_1634
	selector es_1635
	selector ds_1636
	call Mem1613[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_764,bLoc0284_32,bLoc02C1_690,C_1608,cx_769,CZ_780,dl_770,ds_773,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1611,ebp_756,ebx_761,ecx_1616,edi_776,edx_1601,es_772,esi_1615,esp_1612,None_771,S_768,SCZO_779,SZO_1607,Z_766
		defs: al_1627,C_1623,cx_1632,CZ_1628,dl_1633,ds_1636,eax_1621,ebp_1619,ebx_1624,ecx_1626,edi_1618,edx_1630,es_1635,esi_1625,esp_1617,None_1634,S_1631,SCZO_1620,SZO_1622,Z_1629
	word32 esp_1637
	word32 edi_1638
	byte SCZO_1640
	word32 eax_1641
	byte SZO_1642
	byte C_1643
	word32 esi_1645
	word32 ecx_1646
	byte al_1647
	byte CZ_1648
	byte Z_1649
	word32 edx_1650
	byte S_1651
	word16 cx_1652
	byte dl_1653
	bcuiposr0 None_1654
	call esi_1625 (retsize: 4; depth: 4)
		uses: al_1627,bLoc0284_32,bLoc02C1_690,C_1623,cx_1632,CZ_1628,dl_1633,ds_1636,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1621,ebp_1619,ebx_1624,ecx_1626,edi_1618,edx_1630,es_1635,esi_1625,esp_1617,None_1634,S_1631,SCZO_1620,SZO_1622,Z_1629
		defs: al_1647,C_1643,cx_1652,CZ_1648,dl_1653,ds_1656,eax_1641,ebp_1639,ebx_1644,ecx_1646,edi_1638,edx_1650,es_1655,esi_1645,esp_1637,None_1654,S_1651,SCZO_1640,SZO_1642,Z_1649
	Mem1657[ebp_1145 - 0x0000032C:word32] = eax_1641
	Mem1662[ebp_1145 - 0x00000148:word32] = 0x00000000
	Mem1663[ebp_1145 - 0x0000014C:word32] = ebp_1145 - 0x0000032C
	Mem1665[ebp_1145 - 0x00000338:word32] = Mem1663[ebp_1145 - 0x000002CC:word32]
	Mem1667[ebp_1145 - 0x0000013C:word32] = ebp_1145 - 0x00000338
	Mem1669[ebp_1145 - 0x00000144:word32] = edi_1638
	Mem1670[ebp_1145 - 0x00000140:word32] = 0x00000000
	Mem1671[ebp_1145 - 0x00000138:word32] = 0x00000000
	Mem1672[ebp_1145 - 0x00000134:word32] = edi_1638
	Mem1673[ebp_1145 - 0x00000130:word32] = 0x00000000
	Mem1674[ebp_1145 - 0x0000012C:word32] = ebp_1145 - 0x000002C4
	Mem1675[ebp_1145 - 0x00000128:word32] = 0x00000000
	Mem1676[ebp_1145 - 0x00000124:word32] = edi_1638
	Mem1677[ebp_1145 - 0x00000120:word32] = 0x00000000
	Mem1681[esp_1637 - 0x00000004:word32] = ebp_1145 - 0x0000019C
	Mem1683[esp_1637 - 0x00000008:word32] = 0x00000008
	Mem1685[esp_1637 - 0x0000000C:word32] = 0x00000000
	Mem1687[esp_1637 - 0x00000010:word32] = 0x00000000
	word32 ecx_1689
	word32 edx_1690
	word32 esi_1691
	word32 edi_1692
	fn1000C491(0x10031000, 0x10008E03, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1689, out edx_1690, out esi_1691, out edi_1692)
	esp_1130 = esp_1637
	eax_1695 = Mem1687[ebp_1145 - 0x000002C4:word32]
// DataOut: cs ds eax ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AADC:
	branch eax_1695 < 0x00000000 l1001AE9F
// DataOut: cs dl ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE9F:
	word32 esp_1523 = esp_1130 - 0x00000004
	Mem1524[esp_1523:word32] = 0x0000001C
	word32 ecx_1525 = Mem1524[esp_1523:word32]
	word32 eax_1528 = ebp_1145 - 0x000002BC
// DataOut: cs dl ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AEA8:
	Mem1532[eax_1528:byte] = 0x00
	eax_1528 = eax_1528 + 0x00000001
	ecx_1525 = ecx_1525 - 0x00000001
	branch ecx_1525 != 0x00000000 l1001AEA8
// DataOut: cs dl ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AEB0:
	word32 eax_1539 = Mem1532[ebx_1644 + 0x00000010:word32]
	Mem1541[esp_1523:word32] = 0x00000000
	Mem1543[esp_1523 - 0x00000004:word32] = 0x00000000
	Mem1545[esp_1523 - 0x00000008:word32] = 0x00000000
	Mem1548[esp_1523 - 0x0000000C:word32] = 0x00000000
	Mem1551[esp_1523 - 0x00000010:word32] = Mem1548[ebx_1644 + 0x0000000C:word32]
	Mem1554[esp_1523 - 0x00000014:word32] = eax_1539
	word32 esp_1555
	word32 edi_1556
	word32 ebp_1557
	byte SCZO_1558
	word32 eax_1559
	byte SZO_1560
	byte C_1561
	word32 ebx_1562
	word32 esi_1563
	word32 ecx_1564
	byte al_1565
	byte CZ_1566
	byte Z_1567
	word32 edx_1568
	byte S_1569
	word16 cx_1570
	byte dl_1571
	bcuiposr0 None_1572
	selector es_1573
	selector ds_1574
	call Mem1554[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1534,bLoc0284_32,bLoc02C1_690,C_800,cx_1536,CZ_785,dl_797,ds_781,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1539,ebp_790,ebx_788,ecx_1552,edi_793,edx_796,es_782,esi_1546,esp_1553,None_783,S_799,SCZO_1537,SZO_798,Z_1538
		defs: al_1565,C_1561,cx_1570,CZ_1566,dl_1571,ds_1574,eax_1559,ebp_1557,ebx_1562,ecx_1564,edi_1556,edx_1568,es_1573,esi_1563,esp_1555,None_1572,S_1569,SCZO_1558,SZO_1560,Z_1567
	word32 edi_1576
	byte SCZO_1578
	word32 eax_1579
	byte SZO_1580
	byte C_1581
	word32 ecx_1584
	byte al_1585
	byte CZ_1586
	byte Z_1587
	word32 edx_1588
	byte S_1589
	word16 cx_1590
	byte dl_1591
	bcuiposr0 None_1592
	call Mem1554[esi_1563 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: al_1565,bLoc0284_32,bLoc02C1_690,C_1561,cx_1570,CZ_1566,dl_1571,ds_1574,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1559,ebp_1557,ebx_1562,ecx_1564,edi_1556,edx_1568,es_1573,esi_1563,esp_1555,None_1572,S_1569,SCZO_1558,SZO_1560,Z_1567
		defs: al_1585,C_1581,cx_1590,CZ_1586,dl_1591,ds_1594,eax_1579,ebp_1577,ebx_1582,ecx_1584,edi_1576,edx_1588,es_1593,esi_1583,esp_1575,None_1592,S_1589,SCZO_1578,SZO_1580,Z_1587
	Mem1596[ebp_1105 - 0x000002C4:word32] = Mem1554[ebp_1105 - 0x000002C4:word32] & 0x00000000
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AAE6:
	word32 edi_1128 = Mem778[ebp_1145 - 0x000002D4:word32]
	Mem822[ebp_1145 - 0x000002DC:word32] = 0x00000000
	branch Mem822[edi_1128 + 0x00000044:word32] != 0x00000000 l1001AD79
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AAFB:
	Mem1124[ebp_1145 - 0x000002D8:word32] = 0x00000000
	word32 esp_1125 = esp_1130 - 0x00000004
	Mem1126[esp_1125:word32] = ebp_1145 - 0x000002D8
	esp_1130 = esp_1125 + 0x00000004
	branch fn1001E1C4(ebp_1145 - 0x000002D0, es_1135, ds_1134, dwArg00, out edi_1128) < 0x00000000 l1001AB34
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB17:
	word32 eax_1474 = Mem1126[ebp_1145 - 0x000002D8:word32]
	word32 edx_1475 = ebp_1145 - 0x000002DC
	Mem1477[esp_1125:word32] = edx_1475
	Mem1479[esp_1125 - 0x00000004:word32] = eax_1474
	word32 esp_1483
	word32 edi_1484
	word32 ebp_1485
	byte SCZO_1486
	word32 eax_1487
	byte SZO_1488
	byte C_1489
	word32 ebx_1490
	word32 esi_1491
	word32 ecx_1492
	byte al_1493
	byte CZ_1494
	byte Z_1495
	word32 edx_1496
	byte S_1497
	word16 cx_1498
	byte dl_1499
	bcuiposr0 None_1500
	selector es_1501
	selector ds_1502
	call Mem1479[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_786,bLoc0284_32,bLoc02C1_690,C_1133,cx_795,CZ_785,dl_797,ds_781,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1474,ebp_790,ebx_788,ecx_1482,edi_1128,edx_1475,es_782,esi_1481,esp_1478,None_783,S_1132,SCZO_823,SZO_1131,Z_824
		defs: al_1493,C_1489,cx_1498,CZ_1494,dl_1499,ds_1502,eax_1487,ebp_1485,ebx_1490,ecx_1492,edi_1484,edx_1496,es_1501,esi_1491,esp_1483,None_1500,S_1497,SCZO_1486,SZO_1488,Z_1495
	byte SCZO_1506
	word32 eax_1507
	byte SZO_1508
	byte C_1509
	word32 ebx_1510
	word32 esi_1511
	word32 ecx_1512
	byte al_1513
	byte CZ_1514
	byte Z_1515
	word32 edx_1516
	byte S_1517
	word16 cx_1518
	byte dl_1519
	bcuiposr0 None_1520
	call esi_1491 (retsize: 4; depth: 4)
		uses: al_1493,bLoc0284_32,bLoc02C1_690,C_1489,cx_1498,CZ_1494,dl_1499,ds_1502,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1487,ebp_1485,ebx_1490,ecx_1492,edi_1484,edx_1496,es_1501,esi_1491,esp_1483,None_1500,S_1497,SCZO_1486,SZO_1488,Z_1495
		defs: al_1513,C_1509,cx_1518,CZ_1514,dl_1519,ds_1522,eax_1507,ebp_1505,ebx_1510,ecx_1512,edi_1504,edx_1516,es_1521,esi_1511,esp_1503,None_1520,S_1517,SCZO_1506,SZO_1508,Z_1515
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB34:
	word32 ecx_1149 = Mem1126[ebp_1145 - 0x000002D8:word32]
	branch ecx_1149 == 0x00000000 l1001AB55
// DataOut: cs ds ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB3E:
	Mem1426[ebp_1145 - 0x000002D8:word32] = Mem1126[ebp_1145 - 0x000002D8:word32] & 0x00000000
	word32 esp_1430 = esp_1130 - 0x00000004
	Mem1431[esp_1430:word32] = ecx_1149
	word32 esp_1434
	word32 edi_1435
	word32 ebp_1436
	byte SCZO_1437
	word32 eax_1438
	byte SZO_1439
	byte C_1440
	word32 ebx_1441
	word32 esi_1442
	word32 ecx_1443
	byte al_1444
	byte CZ_1445
	byte Z_1446
	word32 edx_1447
	byte S_1448
	word16 cx_1449
	byte dl_1450
	bcuiposr0 None_1451
	selector es_1452
	selector ds_1453
	call Mem1431[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1140,bLoc0284_32,bLoc02C1_690,C_1428,cx_1150,CZ_1139,dl_1137,ds_1134,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1429,ebp_1145,ebx_1143,ecx_1433,edi_1148,edx_1142,es_1135,esi_1432,esp_1430,None_1136,S_1138,SCZO_1141,SZO_1427,Z_1152
		defs: al_1444,C_1440,cx_1449,CZ_1445,dl_1450,ds_1453,eax_1438,ebp_1436,ebx_1441,ecx_1443,edi_1435,edx_1447,es_1452,esi_1442,esp_1434,None_1451,S_1448,SCZO_1437,SZO_1439,Z_1446
	byte SCZO_1457
	word32 eax_1458
	byte SZO_1459
	byte C_1460
	word32 ebx_1461
	word32 esi_1462
	word32 ecx_1463
	byte al_1464
	byte CZ_1465
	byte Z_1466
	word32 edx_1467
	byte S_1468
	word16 cx_1469
	byte dl_1470
	bcuiposr0 None_1471
	call esi_1442 (retsize: 4; depth: 4)
		uses: al_1444,bLoc0284_32,bLoc02C1_690,C_1440,cx_1449,CZ_1445,dl_1450,ds_1453,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1438,ebp_1436,ebx_1441,ecx_1443,edi_1435,edx_1447,es_1452,esi_1442,esp_1434,None_1451,S_1448,SCZO_1437,SZO_1439,Z_1446
		defs: al_1464,C_1460,cx_1469,CZ_1465,dl_1470,ds_1473,eax_1458,ebp_1456,ebx_1461,ecx_1463,edi_1455,edx_1467,es_1472,esi_1462,esp_1454,None_1471,S_1468,SCZO_1457,SZO_1459,Z_1466
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB55:
	branch Mem1126[edi_1128 + 0x00000044:word32] != 0x00000000 l1001AD79
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB60:
	branch Mem1126[ebp_1145 - 0x000002CC:word32] != 0x00000002 l1001AD79
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB6D:
	word32 esi_1176 = Mem1126[edi_1128 + 0x00000068:word32]
	Mem1177[ebp_1145 - 0x000002F4:word32] = esi_1176
	branch esi_1176 == 0x00000000 l1001AD79
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB7E:
	branch (Mem1177[ebp_1145 - 0x000002DC:byte] & 0x03) != 0x00 l1001AD79
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AB8B:
	word32 esp_1184 = esp_1130 - 0x00000004
	Mem1185[esp_1184:word32] = 0x00000007
	word32 ecx_1186 = Mem1185[esp_1184:word32]
	Mem1193[ebp_1145 - 0x000002F8:word32] = 0x00000000
	Mem1195[ebp_1145 - 0x00000314:word32] = 0x00000000
	word32 edi_1194 = ebp_1145 - 0x000002A0
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ABA2:
	branch ecx_1186 == 0x00000000 l1001ABA4
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ABA4:
	Mem1204[ebp_1145 - 0x00000344:word32] = 0x00000000
	Mem1205[ebp_1145 - 0x00000340:word32] = 0x00000000
	Mem1206[ebp_1145 - 0x0000033C:word32] = 0x00000000
	fn1000F2EE(ebp_1145 - 0x00000304)
	word32 edi_1207 = edi_1194 | 0xFFFFFFFF
	Mem1211[ebp_1145 - 0x00000300:word32] = edi_1207
	Mem1212[ebp_1145 - 0x000002FC:word32] = edi_1207
	fn1000F2EE(ebp_1145 - 0x000002F0)
	Mem1214[ebp_1145 - 0x000002EC:word32] = edi_1207
	Mem1216[esp_1184:word32] = ebp_1145 - 0x00000304
	Mem1218[ebp_1145 - 0x000002E8:word32] = edi_1207
	Mem1221[esp_1184 - 0x00000004:word32] = ebp_1145 - 0x0000024C
	Mem1224[esp_1184 - 0x00000008:word32] = ebp_1145 - 0x00000314
	Mem1228[esp_1184 - 0x0000000C:word32] = ebp_1145 - 0x000002F0
	Mem1231[esp_1184 - 0x00000010:word32] = ebp_1145 - 0x000002F8
	Mem1234[esp_1184 - 0x00000014:word32] = ebp_1145 - 0x000002A0
	word32 eax_1235 = ebp_1145 - 0x000002BC
	Mem1238[esp_1184 - 0x00000018:word32] = eax_1235
	Mem1241[esp_1184 - 0x0000001C:word32] = Mem1238[ebp_1145 - 0x000002F4:word32]
	word32 esp_1242
	word32 edi_1243
	word32 ebp_1244
	byte SCZO_1245
	word32 eax_1246
	byte SZO_1247
	byte C_1248
	word32 ebx_1249
	word32 esi_1250
	word32 ecx_1251
	byte al_1252
	byte CZ_1253
	byte Z_1254
	word32 edx_1255
	byte S_1256
	word16 cx_1257
	byte dl_1258
	bcuiposr0 None_1259
	selector es_1260
	selector ds_1261
	call Mem1241[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1236,bLoc0284_32,bLoc02C1_690,C_1209,cx_1198,CZ_1158,dl_1171,ds_1154,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1235,ebp_1164,ebx_1162,ecx_1225,edi_1207,edx_1170,es_1155,esi_1219,esp_1240,None_1156,S_1157,SCZO_1174,SZO_1208,Z_1182
		defs: al_1252,C_1248,cx_1257,CZ_1253,dl_1258,ds_1261,eax_1246,ebp_1244,ebx_1249,ecx_1251,edi_1243,edx_1255,es_1260,esi_1250,esp_1242,None_1259,S_1256,SCZO_1245,SZO_1247,Z_1254
	word32 esp_1262
	word32 edi_1263
	byte SCZO_1265
	byte SZO_1267
	byte C_1268
	word32 ebx_1269
	word32 esi_1270
	word32 ecx_1271
	byte al_1272
	byte CZ_1273
	byte Z_1274
	word32 edx_1275
	byte S_1276
	word16 cx_1277
	byte dl_1278
	bcuiposr0 None_1279
	word32 eax_1266
	call Mem1241[esi_1250 + 0x00000020:word32] (retsize: 4; depth: 4)
		uses: al_1252,bLoc0284_32,bLoc02C1_690,C_1248,cx_1257,CZ_1253,dl_1258,ds_1261,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1246,ebp_1244,ebx_1249,ecx_1251,edi_1243,edx_1255,es_1260,esi_1250,esp_1242,None_1259,S_1256,SCZO_1245,SZO_1247,Z_1254
		defs: al_1272,C_1268,cx_1277,CZ_1273,dl_1278,ds_1281,eax_1266,ebp_1264,ebx_1269,ecx_1271,edi_1263,edx_1275,es_1280,esi_1270,esp_1262,None_1279,S_1276,SCZO_1265,SZO_1267,Z_1274
	Mem1283[esp_1262 - 0x00000004:word32] = 0x00000004
	word32 esi_1284 = Mem1283[esp_1262 - 0x00000004:word32]
	Mem1286[ebp_1145 - 0x000002C4:word32] = eax_1266
	branch Mem1286[0x10031000:word32] <=u esi_1284 l1001AD00
// DataOut: cs ds eax ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AC41:
	fn1000C51D(ebp_1145 - 0x000001FC, 0x10003428)
	fn1000C51D(ebp_1145 - 0x000001EC, 0x10004590)
	word32 edx_1381 = Mem1286[ebp_1145 - 0x00000304:word32]
	Mem1383[ebp_1145 - 0x000001DC:word32] = ebp_1145 - 0x0000024C
	Mem1388[ebp_1145 - 0x000001D4:word32] = 0x00000010
	Mem1389[ebp_1145 - 0x000001D8:word32] = 0x00000000
	Mem1390[ebp_1145 - 0x000001D0:word32] = 0x00000000
	fn1000C58C(ebp_1145 - 0x000001CC, edx_1381)
	Mem1395[ebp_1145 - 0x000002F4:word32] = Mem1390[ebp_1145 - 0x000002F8:word32]
	Mem1397[ebp_1145 - 0x000001BC:word32] = ebp_1145 - 0x000002F4
	Mem1399[ebp_1145 - 0x000001B8:word32] = 0x00000000
	Mem1400[ebp_1145 - 0x000001B4:word32] = esi_1284
	Mem1401[ebp_1145 - 0x000001B0:word32] = 0x00000000
	Mem1402[ebp_1145 - 0x000001AC:word32] = ebp_1145 - 0x000002C4
	Mem1403[ebp_1145 - 0x000001A8:word32] = 0x00000000
	Mem1404[ebp_1145 - 0x000001A4:word32] = esi_1284
	Mem1405[ebp_1145 - 0x000001A0:word32] = 0x00000000
	Mem1409[esp_1262 - 0x00000004:word32] = ebp_1145 - 0x0000021C
	Mem1411[esp_1262 - 0x00000008:word32] = 0x00000008
	Mem1413[esp_1262 - 0x0000000C:word32] = 0x00000000
	Mem1415[esp_1262 - 0x00000010:word32] = 0x00000000
	word32 ecx_1417
	word32 edx_1418
	word32 esi_1419
	word32 edi_1420
	fn1000C491(0x10031000, 0x10008D67, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1417, out edx_1418, out esi_1419, out edi_1420)
	eax_1266 = Mem1415[ebp_1145 - 0x000002C4:word32]
// DataOut: cs ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD00:
	branch eax_1266 < 0x00000000 l1001AD66
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD04:
	word32 eax_1312 = Mem1286[ebp_1145 - 0x000002A4:word32]
	branch eax_1312 == 0x00000000 l1001AD2E
// DataOut: cs ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD0E:
	word32 ecx_1352 = Mem1286[ebp_1145 - 0x000002A8:word32]
	branch ecx_1352 == 0x00000000 l1001AD27
// DataOut: cs ds eax ebp ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD18:
	Mem1368[eax_1312:byte] = 0x00
	eax_1312 = eax_1312 + 0x00000001
	ecx_1352 = ecx_1352 - 0x00000001
	branch ecx_1352 != 0x00000000 l1001AD18
// DataOut: cs ds eax ebp ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD21:
	eax_1312 = Mem1368[ebp_1145 - 0x000002A4:word32]
// DataOut: cs ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD27:
	Mem1364[esp_1262 - 0x00000004:word32] = eax_1312
	CoTaskMemFree(Mem1364[esp_1262 - 0x00000004:LPVOID])
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD2E:
	word32 eax_1322 = Mem1286[ebp_1145 - 0x000002F8:word32]
	Mem1325[esp_1262 - 0x00000004:word32] = 0x00000007
	word32 ecx_1326 = Mem1325[esp_1262 - 0x00000004:word32]
	Mem1330[ebp_1145 - 0x000002CC:word32] = eax_1322
	word32 esi_1323 = ebp_1145 - 0x000002A0
	word32 edi_1329 = ebp_1145 - 0x000002BC
	word32 eax_1331 = Mem1330[ebp_1145 - 0x00000314:word32]
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD4F:
	branch ecx_1326 == 0x00000000 l1001AD51
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD51:
	Mem1344[esp_1262 - 0x00000004:word32] = 0xFFFFFFFF
	Mem1346[esp_1262 - 0x00000008:word32] = 0x00000000
	Mem1348[ebp_1145 - 0x000002E4:word32] = eax_1331
	word32 edx_1349
	fn1000F30D(ebp_1145 - 0x000002F0, dwArg00, dwArg04, out edx_1349)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD66:
	fn1000F2EE(ebp_1145 - 0x00000344)
	esp_1130 = esp_1262
	edi_1128 = Mem1286[ebp_1145 - 0x000002D4:word32]
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AD79:
	Mem840[ebp_1145 - 0x000002E0:word32] = 0x00000000
	word32 esp_841 = esp_1130 - 0x00000004
	Mem842[esp_841:word32] = ebp_1145 - 0x000002E0
	word32 edx_843 = ebp_1145 - 0x000002DC
	word32 ebx_845
	word32 eax_846 = fn1001E21F(edx_843, ebp_1145, edi_1128, es_1135, ds_1134, dwArg00, out ebx_845)
	Mem848[ebp_1145 - 0x000002C4:word32] = eax_846
	branch eax_846 < 0x00000000 l1001AE61
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE61:
	word32 eax_1065 = Mem848[ebx_845 + 0x00000010:word32]
	Mem1070[esp_841:word32] = 0x00000000
	Mem1072[esp_841 - 0x00000004:word32] = 0x00000000
	Mem1074[esp_841 - 0x00000008:word32] = 0x00000000
	Mem1077[esp_841 - 0x0000000C:word32] = 0x00000001
	Mem1079[esp_841 - 0x00000010:word32] = 0x00000000
	Mem1081[esp_841 - 0x00000014:word32] = eax_1065
	word32 esp_1083
	word32 edi_1084
	word32 ebp_1085
	byte SCZO_1086
	word32 eax_1087
	byte SZO_1088
	byte C_1089
	word32 ebx_1090
	word32 esi_1091
	word32 ecx_1092
	byte al_1093
	byte CZ_1094
	byte Z_1095
	word32 edx_1096
	byte S_1097
	word16 cx_1098
	byte dl_1099
	bcuiposr0 None_1100
	selector es_1101
	selector ds_1102
	call Mem1081[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_831,bLoc0284_32,bLoc02C1_690,C_1068,cx_838,CZ_830,dl_828,ds_825,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1065,ebp_834,ebx_845,ecx_1082,edi_837,edx_843,es_826,esi_1075,esp_1080,None_827,S_850,SCZO_832,SZO_1067,Z_829
		defs: al_1093,C_1089,cx_1098,CZ_1094,dl_1099,ds_1102,eax_1087,ebp_1085,ebx_1090,ecx_1092,edi_1084,edx_1096,es_1101,esi_1091,esp_1083,None_1100,S_1097,SCZO_1086,SZO_1088,Z_1095
	word32 edi_1104
	byte SCZO_1106
	word32 eax_1107
	byte SZO_1108
	byte C_1109
	word32 ecx_1112
	byte al_1113
	byte CZ_1114
	byte Z_1115
	word32 edx_1116
	byte S_1117
	word16 cx_1118
	byte dl_1119
	bcuiposr0 None_1120
	call Mem1081[esi_1091 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: al_1093,bLoc0284_32,bLoc02C1_690,C_1089,cx_1098,CZ_1094,dl_1099,ds_1102,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_1087,ebp_1085,ebx_1090,ecx_1092,edi_1084,edx_1096,es_1101,esi_1091,esp_1083,None_1100,S_1097,SCZO_1086,SZO_1088,Z_1095
		defs: al_1113,C_1109,cx_1118,CZ_1114,dl_1119,ds_1122,eax_1107,ebp_1105,ebx_1110,ecx_1112,edi_1104,edx_1116,es_1121,esi_1111,esp_1103,None_1120,S_1117,SCZO_1106,SZO_1108,Z_1115
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ADA5:
	word32 eax_938 = Mem848[ebp_1145 - 0x000002E0:word32]
	Mem941[esp_841:word32] = Mem848[ebp_1145 - 0x000002F0:word32]
	word32 edx_942 = Mem941[ebx_845 + 0x00000010:word32]
	word32 eax_948 = 0x00000000 - (-eax_938 == 0x00000000) & eax_938 + 0x00000004
	Mem952[esp_841 - 0x00000004:word32] = eax_948
	Mem955[esp_841 - 0x00000008:word32] = Mem952[ebp_1145 - 0x000002E4:word32]
	Mem959[esp_841 - 0x0000000C:word32] = Mem955[ebp_1145 - 0x000002CC:word32]
	Mem962[esp_841 - 0x00000010:word32] = Mem959[ebx_845 + 0x0000000C:word32]
	Mem964[esp_841 - 0x00000014:word32] = edx_942
	word32 esp_965
	word32 edi_966
	word32 ebp_967
	byte SCZO_968
	word32 eax_969
	byte SZO_970
	byte C_971
	word32 ebx_972
	word32 esi_973
	word32 ecx_974
	byte al_975
	byte CZ_976
	byte Z_977
	word32 edx_978
	byte S_979
	word16 cx_980
	byte dl_981
	bcuiposr0 None_982
	selector es_983
	selector ds_984
	call Mem964[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_831,bLoc0284_32,bLoc02C1_690,C_950,cx_838,CZ_830,dl_828,ds_825,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_948,ebp_834,ebx_845,ecx_956,edi_837,edx_942,es_826,esi_946,esp_963,None_827,S_850,SCZO_832,SZO_949,Z_829
		defs: al_975,C_971,cx_980,CZ_976,dl_981,ds_984,eax_969,ebp_967,ebx_972,ecx_974,edi_966,edx_978,es_983,esi_973,esp_965,None_982,S_979,SCZO_968,SZO_970,Z_977
	word32 esp_985
	word32 edi_986
	byte SCZO_988
	word32 eax_989
	byte SZO_990
	byte C_991
	word32 ecx_994
	byte al_995
	byte CZ_996
	byte Z_997
	word32 edx_998
	byte S_999
	word16 cx_1000
	byte dl_1001
	bcuiposr0 None_1002
	call Mem964[esi_973 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: al_975,bLoc0284_32,bLoc02C1_690,C_971,cx_980,CZ_976,dl_981,ds_984,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_969,ebp_967,ebx_972,ecx_974,edi_966,edx_978,es_983,esi_973,esp_965,None_982,S_979,SCZO_968,SZO_970,Z_977
		defs: al_995,C_991,cx_1000,CZ_996,dl_1001,ds_1004,eax_989,ebp_987,ebx_992,ecx_994,edi_986,edx_998,es_1003,esi_993,esp_985,None_1002,S_999,SCZO_988,SZO_990,Z_997
	word32 ecx_1005 = Mem964[ebp_1105 - 0x000002A8:word32]
	branch ecx_1005 == 0x00000000 l1001AE01
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ADE6:
	word32 eax_1050 = Mem964[ebp_1105 - 0x000002A4:word32]
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ADEC:
	Mem1054[eax_1050:byte] = 0x00
	eax_1050 = eax_1050 + 0x00000001
	ecx_1005 = ecx_1005 - 0x00000001
	branch ecx_1005 != 0x00000000 l1001ADEC
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ADF5:
	Mem1063[esp_985 - 0x00000004:word32] = Mem1054[ebp_1105 - 0x000002A4:word32]
	CoTaskMemFree(Mem1063[esp_985 - 0x00000004:LPVOID])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE01:
	esp_1010 = esp_985
	branch Mem964[edi_986 + 0x00000044:word32] != 0x00000000 l1001AE7D
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE08:
	branch (Mem964[ebp_1105 - 0x000002DC:byte] & 0x04) == 0x00 l1001AE7D
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE11:
	Mem1021[esp_985 - 0x00000004:word32] = 0x00000004
	Mem1023[ebp_1105 - 0x00000318:word32] = 0x00000001
	Mem1025[esp_985 - 0x00000008:word32] = ebp_1105 - 0x00000318
	Mem1027[esp_985 - 0x0000000C:word32] = 0x00000004
	Mem1031[esp_985 - 0x00000010:word32] = 0x100045BC
	fn1001137D(0x80000002, 0x10003880, dwArg00, dwArg04, dwArg08, dwArg0C)
	Mem1037[esp_985 - 0x00000004:word32] = 0x00000004
	Mem1039[ebp_1105 - 0x0000031C:word32] = 0x00000001
	Mem1041[esp_985 - 0x00000008:word32] = ebp_1105 - 0x0000031C
	Mem1043[esp_985 - 0x0000000C:word32] = 0x00000004
	Mem1045[esp_985 - 0x00000010:word32] = 0x100045BC
	fn1001137D(0x80000002, 0x10003350, dwArg00, dwArg04, dwArg08, dwArg0C)
	esi_1029 = 0x80000002
	esp_1010 = esp_985
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE7B:
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE7D:
	word32 ecx_867 = Mem848[ebp_1105 - 0x000002E0:word32]
	branch ecx_867 == 0x00000000 l1001AED0
// DataOut: cs ds eax ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AE87:
	Mem872[ebp_1105 - 0x000002E0:word32] = 0x00000000
	word32 esp_874 = esp_1010 - 0x00000004
	Mem875[esp_874:word32] = ecx_867
	word32 esp_878
	word32 edi_879
	word32 ebp_880
	byte SCZO_881
	word32 eax_882
	byte SZO_883
	byte C_884
	word32 ebx_885
	word32 esi_886
	word32 ecx_887
	byte al_888
	byte CZ_889
	byte Z_890
	word32 edx_891
	byte S_892
	word16 cx_893
	byte dl_894
	bcuiposr0 None_895
	selector es_896
	selector ds_897
	call Mem875[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_858,bLoc0284_32,bLoc02C1_690,C_871,cx_868,CZ_857,dl_855,ds_852,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_873,ebp_863,ebx_861,ecx_877,edi_866,edx_860,es_853,esi_876,esp_874,None_854,S_856,SCZO_859,SZO_869,Z_870
		defs: al_888,C_884,cx_893,CZ_889,dl_894,ds_897,eax_882,ebp_880,ebx_885,ecx_887,edi_879,edx_891,es_896,esi_886,esp_878,None_895,S_892,SCZO_881,SZO_883,Z_890
	word32 edi_899
	byte SCZO_901
	word32 eax_902
	byte SZO_903
	byte C_904
	word32 ecx_907
	byte al_908
	byte CZ_909
	byte Z_910
	word32 edx_911
	byte S_912
	word16 cx_913
	byte dl_914
	bcuiposr0 None_915
	call esi_886 (retsize: 4; depth: 4)
		uses: al_888,bLoc0284_32,bLoc02C1_690,C_884,cx_893,CZ_889,dl_894,ds_897,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_656,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_640,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_645,dwLoc0310_592,dwLoc0314_545,dwLoc0334_647,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_882,ebp_880,ebx_885,ecx_887,edi_879,edx_891,es_896,esi_886,esp_878,None_895,S_892,SCZO_881,SZO_883,Z_890
		defs: al_908,C_904,cx_913,CZ_909,dl_914,ds_917,eax_902,ebp_900,ebx_905,ecx_907,edi_899,edx_911,es_916,esi_906,esp_898,None_915,S_912,SCZO_901,SZO_903,Z_910
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AED0:
	fn1000F2EE(ebp_1105 - 0x000002F0)
	edi_154 = Mem778[ebp_1105 - 0x000002D4:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AEFD:
	word32 esi_680
	fn1000C640(ebp_1105 - 0x000002D0, ebx_1110, esi_1029, edi_154, es_1003, ds_1004, out edx_149, out esi_680)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AF24:
	word32 eax_157 = Mem126[ebp_1105 - 0x00000304:word32]
	branch eax_157 == 0x00000000 l1001AF72
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AF2E:
	branch Mem126[eax_157:word16] == 0x0000 l1001AF72
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AF35:
	branch Mem126[ebx_1110 + 0x00000018:word32] == 0x00000000 l1001AF72
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AF3A:
	word32 esp_368 = esp_1010 - 0x00000010
	Mem374[esp_368 - 0x00000004:word32] = eax_157
	word32 esi_370 = ebp_1105 - 0x0000024C
	Mem376[esp_368:word32] = Mem374[esi_370:word32]
	Mem381[esp_368 - 0x00000008:word32] = ebp_1105 - 0x000002C8
	Mem383[esp_368 + 0x00000004:word32] = Mem381[esi_370 + 0x00000004:word32]
	Mem387[esp_368 + 0x00000008:word32] = Mem383[esi_370 + 0x00000008:word32]
	Mem391[esp_368 + 0x0000000C:word32] = Mem387[esi_370 + 0x0000000C:word32]
	word32 edi_393 = Mem391[ebp_1105 - 0x000002D4:word32]
	Mem395[esp_368 - 0x0000000C:word32] = edi_393
	fn1001B185(edx_149, ebp_1105, es_1003, ds_1004, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18)
	word32 eax_400 = Mem395[ebx_1110 + 0x00000018:word32]
	Mem402[esp_368 + 0x0000000C:word32] = eax_400
	word32 esp_406
	word32 edi_407
	word32 ebp_408
	byte SCZO_409
	word32 eax_410
	byte SZO_411
	byte C_412
	word32 ebx_413
	word32 esi_414
	word32 ecx_415
	byte al_416
	byte CZ_417
	byte Z_418
	word32 edx_419
	byte S_420
	word16 cx_421
	byte dl_422
	bcuiposr0 None_423
	selector es_424
	selector ds_425
	call Mem402[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_158,bLoc0284_32,bLoc02C1_141,C_161,cx_363,CZ_147,dl_145,ds_142,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_140,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_137,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_138,dwLoc0310_136,dwLoc0314_135,dwLoc0334_139,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_400,ebp_151,ebx_150,ecx_405,edi_393,edx_149,es_143,esi_404,esp_401,None_144,S_146,SCZO_369,SZO_159,Z_367
		defs: al_416,C_412,cx_421,CZ_417,dl_422,ds_425,eax_410,ebp_408,ebx_413,ecx_415,edi_407,edx_419,es_424,esi_414,esp_406,None_423,S_420,SCZO_409,SZO_411,Z_418
	byte SCZO_429
	word32 eax_430
	byte SZO_431
	byte C_432
	word32 ebx_433
	word32 esi_434
	word32 ecx_435
	byte al_436
	byte CZ_437
	byte Z_438
	word32 edx_439
	byte S_440
	word16 cx_441
	byte dl_442
	bcuiposr0 None_443
	call esi_414 (retsize: 4; depth: 4)
		uses: al_416,bLoc0284_32,bLoc02C1_141,C_412,cx_421,CZ_417,dl_422,ds_425,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_140,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_137,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_138,dwLoc0310_136,dwLoc0314_135,dwLoc0334_139,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_410,ebp_408,ebx_413,ecx_415,edi_407,edx_419,es_424,esi_414,esp_406,None_423,S_420,SCZO_409,SZO_411,Z_418
		defs: al_436,C_432,cx_441,CZ_437,dl_442,ds_445,eax_430,ebp_428,ebx_433,ecx_435,edi_427,edx_439,es_444,esi_434,esp_426,None_443,S_440,SCZO_429,SZO_431,Z_438
// DataOut: cs ds ebp edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AF72:
	Mem179[ebp_1105 - 0x00000328:word32] = Mem126[edi_154 + 0x0000003C:word32]
	Mem180[edi_154 + 0x0000003C:word32] = 0x00000000
	word32 ebx_176 = 0x00000000
	word32 esi_181 = fn10014F08(ebp_1105 - 0x00000284)
	branch Mem180[0x10031000:word32] <=u 0x00000005 l1001B151
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AF98:
	word32 esp_222 = esp_1010 - 0x00000004
	Mem223[esp_222:word32] = 0x00002000
	Mem226[esp_222 - 0x00000004:word32] = 0x00000000
	esi_181 = 0x10031000
	word32 edx_228
	byte al_230 = (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_228)
	esp_1010 = esp_222 + 0x00000004
	branch al_230 == 0x00 l1001B151
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -812(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001AFB2:
	Mem237[ebp_1105 - 0x00000320:word32] = Mem226[ebp_1105 - 0x000002CC:word32]
	Mem239[ebp_1105 - 0x000000FC:word32] = ebp_1105 - 0x00000320
	Mem241[ebp_1105 - 0x00000324:word32] = Mem239[ebp_1105 - 0x000002E4:word32]
	Mem243[ebp_1105 - 0x000000EC:word32] = ebp_1105 - 0x00000324
	Mem245[ebp_1105 - 0x000000CC:word32] = ebp_1105 - 0x00000328
	Mem247[ebp_1105 - 0x000000BC:word32] = ebp_1105 - 0x000002C4
	Mem249[ebp_1105 - 0x000000AC:word32] = ebp_1105 - 0x00000310
	Mem251[ebp_1105 - 0x0000009C:word32] = ebp_1105 - 0x0000030C
	Mem253[ebp_1105 - 0x0000008C:word32] = ebp_1105 - 0x00000308
	Mem255[ebp_1105 - 0x0000006C:word32] = ebp_1105 - 0x000002BC
	Mem257[ebp_1105 - 0x0000005C:word32] = ebp_1105 - 0x000002B8
	Mem259[ebp_1105 - 0x0000004C:word32] = edi_154 + 0x00000040
	Mem262[esp_222:word32] = 0x00000004
	word32 edx_263 = Mem262[esp_222:word32]
	Mem265[ebp_1105 - 0x0000003C:word32] = edi_154 + 0x0000002C
	Mem267[ebp_1105 - 0x0000002C:word32] = edi_154 + 0x00000030
	word32 eax_268 = Mem267[edi_154 + 0x00000028:word32]
	Mem270[esp_222:word32] = 0x00000010
	word32 ecx_236 = ebp_1105 - 0x0000025C
	Mem271[ebp_1105 - 0x000000DC:word32] = ecx_236
	Mem272[ebp_1105 - 0x0000007C:word32] = ecx_236
	word32 ecx_273 = Mem272[esp_222:word32]
	Mem275[ebp_1105 - 0x000000F8:word32] = 0x00000000
	Mem276[ebp_1105 - 0x000000F4:word32] = edx_263
	Mem277[ebp_1105 - 0x000000F0:word32] = 0x00000000
	Mem278[ebp_1105 - 0x000000E8:word32] = 0x00000000
	Mem279[ebp_1105 - 0x000000E4:word32] = edx_263
	Mem280[ebp_1105 - 0x000000E0:word32] = 0x00000000
	Mem281[ebp_1105 - 0x000000D8:word32] = 0x00000000
	Mem282[ebp_1105 - 0x000000D4:word32] = 0x00000010
	Mem283[ebp_1105 - 0x000000D0:word32] = 0x00000000
	Mem284[ebp_1105 - 0x000000C8:word32] = 0x00000000
	Mem285[ebp_1105 - 0x000000C4:word32] = edx_263
	Mem286[ebp_1105 - 0x000000C0:word32] = 0x00000000
	Mem287[ebp_1105 - 0x000000B8:word32] = 0x00000000
	Mem288[ebp_1105 - 0x000000B4:word32] = edx_263
	Mem289[ebp_1105 - 0x000000B0:word32] = 0x00000000
	Mem290[ebp_1105 - 0x000000A8:word32] = 0x00000000
	Mem291[ebp_1105 - 0x000000A4:word32] = edx_263
	Mem292[ebp_1105 - 0x000000A0:word32] = 0x00000000
	Mem293[ebp_1105 - 0x00000098:word32] = 0x00000000
	Mem294[ebp_1105 - 0x00000094:word32] = edx_263
	Mem295[ebp_1105 - 0x00000090:word32] = 0x00000000
	Mem296[ebp_1105 - 0x00000088:word32] = 0x00000000
	Mem297[ebp_1105 - 0x00000084:word32] = edx_263
	Mem298[ebp_1105 - 0x00000080:word32] = 0x00000000
	Mem299[ebp_1105 - 0x00000078:word32] = 0x00000000
	Mem300[ebp_1105 - 0x00000074:word32] = ecx_273
	Mem301[ebp_1105 - 0x00000070:word32] = 0x00000000
	Mem302[ebp_1105 - 0x00000068:word32] = 0x00000000
	Mem303[ebp_1105 - 0x00000064:word32] = edx_263
	Mem304[ebp_1105 - 0x00000060:word32] = 0x00000000
	Mem305[ebp_1105 - 0x00000058:word32] = 0x00000000
	Mem306[ebp_1105 - 0x00000054:word32] = ecx_273
	Mem307[ebp_1105 - 0x00000050:word32] = 0x00000000
	Mem308[ebp_1105 - 0x00000048:word32] = 0x00000000
	Mem309[ebp_1105 - 0x00000044:word32] = edx_263
	Mem310[ebp_1105 - 0x00000040:word32] = 0x00000000
	Mem311[ebp_1105 - 0x00000038:word32] = 0x00000000
	Mem312[ebp_1105 - 0x00000034:word32] = edx_263
	Mem313[ebp_1105 - 0x00000030:word32] = 0x00000000
	Mem314[ebp_1105 - 0x00000028:word32] = 0x00000000
	Mem315[ebp_1105 - 0x00000024:word32] = edx_263
	Mem316[ebp_1105 - 0x00000020:word32] = 0x00000000
	Mem319[esp_222:word32] = Mem316[eax_268 + 0x00000004:word32]
	word32 esp_320
	word32 edi_321
	byte SCZO_323
	word32 eax_324
	byte SZO_325
	byte C_326
	word32 esi_328
	word32 ecx_329
	byte al_330
	byte CZ_331
	byte Z_332
	word32 edx_333
	byte S_334
	word16 cx_335
	byte dl_336
	bcuiposr0 None_337
	call api-ms-win-core-shlwapi-legacy-l1-1-0.dll!PathFindFileNameW (retsize: 4; depth: 4)
		uses: al_230,bLoc0284_32,bLoc02C1_141,C_234,cx_173,CZ_183,dl_165,ds_162,dwLoc0244_92,dwLoc0248_88,dwLoc024C_80,dwLoc0250_73,dwLoc0254_110,dwLoc0258_106,dwLoc025C_102,dwLoc0260_98,dwLoc0288_31,dwLoc02C8_140,dwLoc02CC_71,dwLoc02D0_69,dwLoc02D4_137,dwLoc02D8_21,dwLoc02E8_70,dwLoc0300_78,dwLoc0304_77,dwLoc0308_76,dwLoc030C_138,dwLoc0310_136,dwLoc0314_135,dwLoc0334_139,dwLoc0338_96,dwLoc0350_17,dwLoc0354_20,dwLoc0358_30,dwLoc04_6,dwLoc0C_12,eax_268,ebp_170,ebx_176,ecx_273,edi_172,edx_263,es_163,esi_224,esp_318,None_164,S_166,SCZO_182,SZO_232,Z_233
		defs: al_330,C_326,cx_335,CZ_331,dl_336,ds_339,eax_324,ebp_322,ebx_327,ecx_329,edi_321,edx_333,es_338,esi_328,esp_320,None_337,S_334,SCZO_323,SZO_325,Z_332
	fn1000C58C(ebp_1105 - 0x0000001C, eax_324)
	Mem345[esp_320 - 0x00000004:word32] = ebp_1105 - 0x0000011C
	Mem347[esp_320 - 0x00000008:word32] = 0x00000011
	Mem349[esp_320 - 0x0000000C:word32] = ebx_176
	Mem353[esp_320 - 0x00000010:word32] = ebp_1105 - 0x0000027C
	word32 ecx_356
	word32 edx_357
	fn1000C491(0x10031000, 0x10008C3F, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_356, out edx_357, out esi_181, out edi_154)
	esp_1010 = esp_320
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:0x10031000 esi:0x10031000 edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -812(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001B151:
	fn1000F2EE(ebp_1105 - 0x00000304)
	word32 edx_201
	word32 esi_202
	fn1000C640(ebp_1105 - 0x000002C8, ebx_176, esi_181, edi_154, es_1003, ds_1004, out edx_201, out esi_202)
	word32 edx_205
	word32 eax_206 = fn10014BD1(ebp_1105 - 0x00000284, ebx_176, edi_154, es_1003, ds_1004, out edx_205)
	word32 esp_209 = esp_1010 + 0x00000004
	word32 ecx_217
	fn1002F420(eax_206, Mem180[ebp_1105 - 0x00000008:word32] ^ ebp_1105, edx_205, Mem180[esp_209 + 0x00000004:word32], ebp_1105, Mem180[esp_209:word32], Mem180[esp_1010:word32], es_1003, ds_1004, out ecx_217)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -812(fp):<invalid> -808(fp):<invalid> -804(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -256(fp):fp - 0x00000324 -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -240(fp):fp - 0x00000328 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):fp - 0x00000260 -220(fp):<invalid> -216(fp):0x00000010 -212(fp):<invalid> -208(fp):fp - 0x0000032C -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):fp - 0x000002C8 -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):fp - 0x00000314 -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000310 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):fp - 0x0000030C -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):fp - 0x00000260 -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):fp - 0x000002C0 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):fp - 0x000002BC -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1001A770_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -880(fp):<invalid> -876(fp):<invalid> -872(fp):<invalid> -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -812(fp):<invalid> -808(fp):<invalid> -804(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -256(fp):fp - 0x00000324 -252(fp):<invalid> -248(fp):<invalid> -244(fp):<invalid> -240(fp):fp - 0x00000328 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):fp - 0x00000260 -220(fp):<invalid> -216(fp):0x00000010 -212(fp):<invalid> -208(fp):fp - 0x0000032C -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):fp - 0x000002C8 -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):fp - 0x00000314 -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000310 -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):fp - 0x0000030C -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):fp - 0x00000260 -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):fp - 0x000002C0 -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):fp - 0x000002BC -92(fp):<invalid> -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001AD4F_1:
	Mem1338[edi_1329:word32] = Mem1330[esi_1323:word32]
	esi_1323 = esi_1323 + 0x00000004
	edi_1329 = edi_1329 + 0x00000004
	ecx_1326 = ecx_1326 - 0x00000001
// DataOut: cs ds eax ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -840(fp):<invalid> -836(fp):<invalid> -832(fp):<invalid> -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -480(fp):fp - 0x00000250 -476(fp):fp - 0x00000250 ^ fp - 0x00000250 -472(fp):0x00000010 -468(fp):fp - 0x00000250 ^ fp - 0x00000250 -448(fp):fp - 0x000002F8 -444(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -440(fp):<invalid> -436(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -432(fp):fp - 0x000002C8 -428(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -424(fp):<invalid> -420(fp):fp - 0x000001D0 ^ fp - 0x000001D0 -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001ABA2_1:
	Mem1199[edi_1194:word32] = 0x00000000
	edi_1194 = edi_1194 + 0x00000004
	ecx_1186 = ecx_1186 - 0x00000001
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -828(fp):<invalid> -824(fp):fp - 0x000002CC -820(fp):fp - 0x000002D4 -816(fp):<invalid> -792(fp):<invalid> -788(fp):<invalid> -784(fp):<invalid> -780(fp):<invalid> -776(fp):<invalid> -772(fp):<invalid> -768(fp):<invalid> -764(fp):<invalid> -760(fp):<invalid> -756(fp):<invalid> -752(fp):<invalid> -748(fp):<invalid> -744(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):<invalid> -720(fp):<invalid> -716(fp):<invalid> -712(fp):<invalid> -705(fp):0x00 -704(fp):<invalid> -676(fp):<invalid> -648(fp):<invalid> -644(fp):al -608(fp):<invalid> -604(fp):<invalid> -600(fp):<invalid> -596(fp):<invalid> -592(fp):<invalid> -588(fp):<invalid> -584(fp):<invalid> -580(fp):<invalid> -352(fp):fp - 0x00000260 -348(fp):fp - 0x00000260 ^ fp - 0x00000260 -344(fp):0x00000010 -340(fp):fp - 0x00000260 ^ fp - 0x00000260 -336(fp):fp - 0x00000330 -332(fp):<invalid> -328(fp):<invalid> -324(fp):<invalid> -320(fp):fp - 0x0000033C -316(fp):<invalid> -312(fp):<invalid> -308(fp):<invalid> -304(fp):fp - 0x000002C8 -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001A7FF_1:
	Mem59[edi_52:word32] = 0x00000000
	edi_52 = edi_52 + 0x00000004
	ecx_53 = ecx_53 - 0x00000001
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -872(fp):fp - 0x00000280 -868(fp):<invalid> -864(fp):<invalid> -860(fp):<invalid> -856(fp):edi -852(fp):esi -848(fp):ebx -728(fp):<invalid> -704(fp):<invalid> -648(fp):<invalid> -644(fp):al -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02D4(32) Local -02D8(32)



void fn1001B185(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1001B185_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -00D4(32) Local -00EC(32) Local -0110(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001B185:
	word32 ebp_263 = fp - 0x00000004
	word32 eax_14 = dwArg0C
	word32 ebx_1129 = dwArg04
	word32 esp_1103 = fp - 0x00000108
	branch Mem0[dwArg04 + 0x00000068:word32] == 0x00000000 l1001B692
// DataOut: cs ds eax ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -00D4(32) Local -00EC(32) Local -0110(32)

l1001B1D5:
	word32 esi_114 = Mem0[dwArg08:word32]
	branch esi_114 == 0x00000000 l1001B282
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000108 edi:fp - 0x000000A8 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:fp + 0x00000020 ecx:<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -232(fp):ecx -204(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D4(32) Local -00EC(32) Local -0110(32)

l1001B1E8:
	selector es_1118
	selector ds_1117
	word32 edi_1097
	word32 esi_1096
	word32 eax_1098 = fn1000EF25(fp - 0x000000D0, edx, dwArg04, esi_114, es, ds, out esi_1096, out edi_1097)
	esp_1103 = fp - 0x00000108
	ds_1117 = ds
	es_1118 = es
	branch fn1002043D(esi_1096, edx, dwArg04, esi_1096, edi_1097, es, ds, eax_1098) < 0x00000000 l1001B277
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000108 edi:fp - 0x000000A8 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -204(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D4(32) Local -00EC(32)

l1001B212:
	fn1000F2EE(fp - 0x000000A4)
	word32 esp_1165
	word32 edi_1166
	word32 ebp_1167
	byte SCZO_1168
	word32 eax_1169
	byte SZO_1170
	byte C_1171
	word32 ebx_1172
	word32 esi_1173
	word32 ecx_1174
	byte Z_1175
	byte S_1176
	word32 edx_1177
	bcuiposr0 None_1178
	byte CZ_1179
	selector es_1180
	selector ds_1181
	word16 dx_1182
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 288)
		uses: C_1151,CZ,ds,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_1154,dwLoc0110_1157,dwLoc0114_1160,dwLoc0118_1162,dwLoc011C_1164,dwLoc04_6,dwLoc0C_12,dwLoc9C_1149,dwLocA0_1145,dwLocA4_1140,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_1143,dwLocD4_1090,dwLocE4_116,dwLocE8_27,dwLocEC,dwLocF4_40,dwLocF8_39,dx,eax_1155,ebp_7,ebx_19,ecx_1158,edi_1135,edx,es,esi_1152,esp_1163,None,S_1105,SCZO_28,SZO_1150,Z_118
		defs: C_1171,CZ_1179,ds_1181,dx_1182,eax_1169,ebp_1167,ebx_1172,ecx_1174,edi_1166,edx_1177,es_1180,esi_1173,esp_1165,None_1178,S_1176,SCZO_1168,SZO_1170,Z_1175
	word32 ebp_1185
	byte SCZO_1186
	word32 eax_1187
	byte SZO_1188
	byte C_1189
	word32 ecx_1192
	byte Z_1193
	byte S_1194
	word32 edx_1195
	bcuiposr0 None_1196
	byte CZ_1197
	word16 dx_1200
	call Mem0[esi_1173 + 0x0000004C:word32] (retsize: 4; depth: 4)
		uses: C_1171,CZ_1179,ds_1181,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_1154,dwLoc0110_1157,dwLoc0114_1160,dwLoc0118_1162,dwLoc011C_1164,dwLoc04_6,dwLoc0C_12,dwLoc9C_1149,dwLocA0_1145,dwLocA4_1140,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_1143,dwLocD4_1090,dwLocE4_116,dwLocE8_27,dwLocEC,dwLocF4_40,dwLocF8_39,dx_1182,eax_1169,ebp_1167,ebx_1172,ecx_1174,edi_1166,edx_1177,es_1180,esi_1173,esp_1165,None_1178,S_1176,SCZO_1168,SZO_1170,Z_1175
		defs: C_1189,CZ_1197,ds_1199,dx_1200,eax_1187,ebp_1185,ebx_1190,ecx_1192,edi_1184,edx_1195,es_1198,esi_1191,esp_1183,None_1196,S_1194,SCZO_1186,SZO_1188,Z_1193
	fn1000F2EE(fp - 0x000000A4)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000108 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -212(fp):<invalid> -208(fp):fp - 0x000000D4 -204(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00EC(32)

l1001B277:
	word32 edx_1132
	word32 esi_1133
	fn1000C640(fp - 0x000000D4, ebx_1129, esi_1096, edi_1097, es_1118, ds_1117, out edx_1132, out esi_1133)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):fp - 0x000000A4 -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00EC(32)

l1001B282:
	word32 eax_131 = Mem0[ebx_1129 + 0x00000068:word32]
	word32 esp_137 = esp_1103 - 0x00000004
	Mem138[esp_137:word32] = fp - 0x000000EC
	Mem140[esp_137 - 0x00000004:word32] = eax_131
	word32 esp_144
	word32 edi_145
	word32 ebp_146
	byte SCZO_147
	word32 eax_148
	byte SZO_149
	byte C_150
	word32 ebx_151
	word32 esi_152
	word32 ecx_153
	byte Z_154
	byte S_155
	word32 edx_156
	bcuiposr0 None_157
	byte CZ_158
	selector es_159
	selector ds_160
	word16 dx_161
	call Mem140[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_136,CZ,ds,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx,eax_131,ebp_7,ebx_130,ecx_143,edi_55,edx_132,es,esi_142,esp_139,None,S,SCZO_28,SZO_135,Z_118
		defs: C_150,CZ_158,ds_160,dx_161,eax_148,ebp_146,ebx_151,ecx_153,edi_145,edx_156,es_159,esi_152,esp_144,None_157,S_155,SCZO_147,SZO_149,Z_154
	word32 edi_163
	byte SCZO_165
	word32 eax_166
	byte SZO_167
	byte C_168
	word32 ebx_169
	word32 esi_170
	word32 ecx_171
	byte Z_172
	byte S_173
	word32 edx_174
	bcuiposr0 None_175
	byte CZ_176
	selector es_177
	selector ds_178
	word16 dx_179
	word32 ebp_1039
	word32 esp_1037
	call esi_152 (retsize: 4; depth: 4)
		uses: C_150,CZ_158,ds_160,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_161,eax_148,ebp_146,ebx_151,ecx_153,edi_145,edx_156,es_159,esi_152,esp_144,None_157,S_155,SCZO_147,SZO_149,Z_154
		defs: C_168,CZ_176,ds_178,dx_179,eax_166,ebp_164,ebx_169,ecx_171,edi_163,edx_174,es_177,esi_170,esp_162,None_175,S_173,SCZO_165,SZO_167,Z_172
	word32 ecx_180 = 0x00000000
	ebx_689 = ebx_169
	branch eax_166 < 0x00000000 l1001B4BC
// DataOut: cs ds ebp ebx ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):fp - 0x000000A4 -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B2B8:
	word32 ebx_689
	branch ecx_180 >=u Mem140[ebp_1039 - 0x000000E8:word32] l1001B4BC
// DataOut: cs ds ebp ebx ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x100075F8 al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B4BC:
	word32 eax_189 = Mem140[Mem140[ebp_1039 - 0x000000E4:word32] + 0x00000018:word32]
	word32 esp_190 = esp_1037 - 0x00000004
	Mem191[esp_190:word32] = eax_189
	word32 esp_195
	word32 edi_196
	word32 ebp_197
	byte SCZO_198
	word32 eax_199
	byte SZO_200
	byte C_201
	word32 ebx_202
	word32 esi_203
	word32 ecx_204
	byte Z_205
	byte S_206
	word32 edx_207
	bcuiposr0 None_208
	byte CZ_209
	selector es_210
	selector ds_211
	word16 dx_212
	call Mem191[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_185,CZ_176,ds_178,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_179,eax_189,ebp_186,ebx_169,ecx_194,edi_163,edx_181,es_177,esi_193,esp_190,None_175,S_184,SCZO_165,SZO_183,Z_172
		defs: C_201,CZ_209,ds_211,dx_212,eax_199,ebp_197,ebx_202,ecx_204,edi_196,edx_207,es_210,esi_203,esp_195,None_208,S_206,SCZO_198,SZO_200,Z_205
	word32 edi_214
	byte SCZO_216
	word32 eax_217
	byte SZO_218
	byte C_219
	word32 ebx_220
	word32 ecx_222
	byte Z_223
	byte S_224
	word32 edx_225
	bcuiposr0 None_226
	byte CZ_227
	selector es_228
	selector ds_229
	word16 dx_230
	word32 esi_221
	word32 ebp_215
	word32 esp_213
	call esi_203 (retsize: 4; depth: 4)
		uses: C_201,CZ_209,ds_211,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_212,eax_199,ebp_197,ebx_202,ecx_204,edi_196,edx_207,es_210,esi_203,esp_195,None_208,S_206,SCZO_198,SZO_200,Z_205
		defs: C_219,CZ_227,ds_229,dx_230,eax_217,ebp_215,ebx_220,ecx_222,edi_214,edx_225,es_228,esi_221,esp_213,None_226,S_224,SCZO_216,SZO_218,Z_223
	word32 edi_231 = 0x00000000
	ds_435 = ds_229
	es_436 = es_228
	edi_442 = edi_231
	ebx_445 = ebx_220
	branch Mem191[ebp_215 - 0x000000E0:word32] <=u 0x00000000 l1001B5DC
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x100075F8 al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B4E3:
	selector ds_435
	selector es_436
	word32 edi_442
	word32 ebx_445
	word32 esp_449 = esp_213 - 0x00000004
	Mem450[esp_449:word32] = Mem191[ebx_445:word32] + edi_442 * 0x00000004
	word32 esi_451
	word32 edi_452
	word32 edx_453 = fn10015118(ebp_215 - 0x000000CC, ebx_445, esi_221, es_436, ds_435, dwArg00, out esi_451, out edi_452)
	word32 esi_456 = Mem450[ebp_215 - 0x000000CC:word32]
	Mem458[ebp_215 - 0x000000D4:word32] = Mem450[ebp_215 - 0x000000D4:word32] & 0x00000000
	esp_213 = esp_449 + 0x00000004
	branch Mem458[esi_456 + 0x00000034:byte] == 0x00 l1001B5B9
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B50B:
	Mem488[ebp_215 - 0x000000D8:word32] = ebp_215 - 0x000000D4
	word32 esi_489
	word32 edi_490
	Mem493[esp_449:word32] = fn1000EF25(ebp_215 - 0x000000D8, edx_453, ebx_445, esi_456, es_436, ds_435, out esi_489, out edi_490)
	esp_213 = esp_449 + 0x00000004
	word32 edx_495
	branch fn1001357C(esi_489, esi_489, es_436, ds_435, dwArg00, out edx_495, out ebx_445, out esi_456, out edi_452) < 0x00000000 l1001B5B9
// DataOut: cs ds dx ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B532:
	word32 eax_504 = Mem493[ebp_215 - 0x000000D4:word32]
	Mem507[ebp_215 - 0x000000C8:word32] = Mem493[ebp_215 - 0x000000C8:word32] & 0x00000000
	Mem511[esp_449:word32] = ebp_215 - 0x000000C8
	Mem513[esp_449 - 0x00000004:word32] = 0x10004C10
	Mem516[esp_449 - 0x00000008:word32] = eax_504
	word32 esp_518
	word32 edi_519
	word32 ebp_520
	byte SCZO_521
	word32 eax_522
	byte SZO_523
	byte C_524
	word32 ebx_525
	word32 esi_526
	word32 ecx_527
	byte Z_528
	byte S_529
	word32 edx_530
	bcuiposr0 None_531
	byte CZ_532
	selector es_533
	selector ds_534
	word16 dx_535
	call Mem516[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_509,CZ_437,ds_435,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_454,eax_504,ebp_441,ebx_496,ecx_517,edi_498,edx_495,es_436,esi_514,esp_515,None_438,S_502,SCZO_460,SZO_508,Z_461
		defs: C_524,CZ_532,ds_534,dx_535,eax_522,ebp_520,ebx_525,ecx_527,edi_519,edx_530,es_533,esi_526,esp_518,None_531,S_529,SCZO_521,SZO_523,Z_528
	byte SCZO_539
	word32 eax_540
	byte SZO_541
	byte C_542
	word32 ecx_545
	byte Z_546
	byte S_547
	word32 edx_548
	bcuiposr0 None_549
	byte CZ_550
	word16 dx_553
	call Mem516[esi_526:word32] (retsize: 4; depth: 4)
		uses: C_524,CZ_532,ds_534,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_535,eax_522,ebp_520,ebx_525,ecx_527,edi_519,edx_530,es_533,esi_526,esp_518,None_531,S_529,SCZO_521,SZO_523,Z_528
		defs: C_542,CZ_550,ds_552,dx_553,eax_540,ebp_538,ebx_543,ecx_545,edi_537,edx_548,es_551,esi_544,esp_536,None_549,S_547,SCZO_539,SZO_541,Z_546
	branch eax_540 < 0x00000000 l1001B598
// DataOut: cs ds dx ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B55C:
	word32 ecx_620 = Mem516[ebx_445 + 0x0000006C:word32]
	Mem621[ebp_215 - 0x00000094:byte] = 0x00
	branch ecx_620 == 0x00000000 l1001B576
// DataOut: cs ds dx ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B56A:
	Mem675[esp_213 - 0x00000004:word32] = ebp_215 - 0x00000094
	fn10015AD6(ecx_620, dx_553, dwArg00)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)
// Terminates process

l1001B576:
	word32 eax_626 = Mem621[ebp_215 - 0x000000C8:word32]
	Mem629[esp_213 - 0x00000004:word32] = ebp_215 - 0x00000094
	Mem632[esp_213 - 0x00000008:word32] = Mem629[ebp_215 - 0x000000F0:word32]
	Mem635[esp_213 - 0x0000000C:word32] = eax_626
	word32 esp_637
	word32 edi_638
	word32 ebp_639
	byte SCZO_640
	word32 eax_641
	byte SZO_642
	byte C_643
	word32 ebx_644
	word32 esi_645
	word32 ecx_646
	byte Z_647
	byte S_648
	word32 edx_649
	bcuiposr0 None_650
	byte CZ_651
	selector es_652
	selector ds_653
	word16 dx_654
	call Mem635[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_624,CZ_550,ds_552,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_553,eax_626,ebp_538,ebx_543,ecx_636,edi_537,edx_548,es_551,esi_633,esp_634,None_549,S_555,SCZO_539,SZO_622,Z_623
		defs: C_643,CZ_651,ds_653,dx_654,eax_641,ebp_639,ebx_644,ecx_646,edi_638,edx_649,es_652,esi_645,esp_637,None_650,S_648,SCZO_640,SZO_642,Z_647
	byte SCZO_658
	word32 eax_659
	byte SZO_660
	byte C_661
	word32 ecx_664
	byte Z_665
	byte S_666
	word32 edx_667
	bcuiposr0 None_668
	byte CZ_669
	word16 dx_672
	call Mem635[esi_645 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: C_643,CZ_651,ds_653,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_654,eax_641,ebp_639,ebx_644,ecx_646,edi_638,edx_649,es_652,esi_645,esp_637,None_650,S_648,SCZO_640,SZO_642,Z_647
		defs: C_661,CZ_669,ds_671,dx_672,eax_659,ebp_657,ebx_662,ecx_664,edi_656,edx_667,es_670,esi_663,esp_655,None_668,S_666,SCZO_658,SZO_660,Z_665
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B598:
	word32 ecx_571 = Mem516[ebp_215 - 0x000000C8:word32]
	branch ecx_571 == 0x00000000 l1001B5B9
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B5A2:
	Mem576[ebp_215 - 0x000000C8:word32] = Mem516[ebp_215 - 0x000000C8:word32] & 0x00000000
	word32 esp_580 = esp_213 - 0x00000004
	Mem581[esp_580:word32] = ecx_571
	word32 esp_584
	word32 edi_585
	word32 ebp_586
	byte SCZO_587
	word32 eax_588
	byte SZO_589
	byte C_590
	word32 ebx_591
	word32 esi_592
	word32 ecx_593
	byte Z_594
	byte S_595
	word32 edx_596
	bcuiposr0 None_597
	byte CZ_598
	selector es_599
	selector ds_600
	word16 dx_601
	call Mem581[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_578,CZ_560,ds_558,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_557,eax_579,ebp_564,ebx_569,ecx_583,edi_565,edx_570,es_559,esi_582,esp_580,None_561,S_562,SCZO_563,SZO_577,Z_573
		defs: C_590,CZ_598,ds_600,dx_601,eax_588,ebp_586,ebx_591,ecx_593,edi_585,edx_596,es_599,esi_592,esp_584,None_597,S_595,SCZO_587,SZO_589,Z_594
	byte SCZO_605
	word32 eax_606
	byte SZO_607
	byte C_608
	word32 ecx_611
	byte Z_612
	byte S_613
	word32 edx_614
	bcuiposr0 None_615
	byte CZ_616
	word16 dx_619
	call esi_592 (retsize: 4; depth: 4)
		uses: C_590,CZ_598,ds_600,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_601,eax_588,ebp_586,ebx_591,ecx_593,edi_585,edx_596,es_599,esi_592,esp_584,None_597,S_595,SCZO_587,SZO_589,Z_594
		defs: C_608,CZ_616,ds_618,dx_619,eax_606,ebp_604,ebx_609,ecx_611,edi_603,edx_614,es_617,esi_610,esp_602,None_615,S_613,SCZO_605,SZO_607,Z_612
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B5B9:
	word32 edx_476
	word32 esi_477
	fn1000C640(ebp_215 - 0x000000D4, ebx_445, esi_456, edi_452, es_436, ds_435, out edx_476, out esi_477)
	word32 edx_480
	fn1000C640(ebp_215 - 0x000000CC, ebx_445, esi_477, edi_452, es_436, ds_435, out edx_480, out esi_221)
	edi_442 = edi_452 + 0x00000001
	branch edi_442 <u Mem458[ebp_215 - 0x000000E0:word32] l1001B4E3
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B5DC:
	word32 eax_237 = Mem191[Mem191[ebp_215 - 0x000000E4:word32] + 0x00000010:word32]
	word32 esp_238 = esp_213 - 0x00000004
	Mem239[esp_238:word32] = eax_237
	word32 esp_243
	word32 edi_244
	word32 ebp_245
	byte SCZO_246
	word32 eax_247
	byte SZO_248
	byte C_249
	word32 ebx_250
	word32 esi_251
	word32 ecx_252
	byte Z_253
	byte S_254
	word32 edx_255
	bcuiposr0 None_256
	byte CZ_257
	selector es_258
	selector ds_259
	word16 dx_260
	call Mem239[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_219,CZ_233,ds_229,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_230,eax_237,ebp_234,ebx_220,ecx_242,edi_231,edx_225,es_228,esi_241,esp_238,None_226,S_224,SCZO_232,SZO_218,Z_223
		defs: C_249,CZ_257,ds_259,dx_260,eax_247,ebp_245,ebx_250,ecx_252,edi_244,edx_255,es_258,esi_251,esp_243,None_256,S_254,SCZO_246,SZO_248,Z_253
	word32 edi_262
	byte SCZO_264
	byte SZO_266
	byte C_267
	word32 ebx_268
	word32 esi_269
	word32 ecx_270
	byte Z_271
	byte S_272
	word32 edx_273
	bcuiposr0 None_274
	byte CZ_275
	word16 dx_278
	call esi_251 (retsize: 4; depth: 4)
		uses: C_249,CZ_257,ds_259,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_260,eax_247,ebp_245,ebx_250,ecx_252,edi_244,edx_255,es_258,esi_251,esp_243,None_256,S_254,SCZO_246,SZO_248,Z_253
		defs: C_267,CZ_275,ds_277,dx_278,eax_265,ebp_263,ebx_268,ecx_270,edi_262,edx_273,es_276,esi_269,esp_261,None_274,S_272,SCZO_264,SZO_266,Z_271
	word32 edi_279 = Mem239[ebp_263 - 0x000000F4:word32]
	edx = Mem239[edi_279:word32]
	branch edx == 0x00000000 l1001B656
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B601:
	word32 ecx_327 = 0x00000000
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B60E:
	branch Mem239[ebp_263 - 0x000000B4 + ecx_327 * 0x00000004:word32] != Mem239[ecx_327 * 0x00000004 + 0x100075F8:word32] l1001B61E
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:0x100075F8 esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B61E:
	Mem391[esp_1103 - 0x00000004:word32] = ebp_263 - 0x000000B4
	Mem393[esp_1103 - 0x00000008:word32] = edx + 0x00000010
	word32 esp_396
	word32 edi_397
	word32 ebp_398
	byte SCZO_399
	word32 eax_400
	byte SZO_401
	byte C_402
	word32 ebx_403
	word32 esi_404
	word32 ecx_405
	byte Z_406
	byte S_407
	word32 edx_408
	bcuiposr0 None_409
	byte CZ_410
	selector es_411
	selector ds_412
	word16 dx_413
	call Mem393[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_329,CZ_275,ds_277,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_389,eax_386,ebp_263,ebx_330,ecx_395,edi_279,edx_388,es_276,esi_394,esp_392,None_274,S_272,SCZO_333,SZO_328,Z_334
		defs: C_402,CZ_410,ds_412,dx_413,eax_400,ebp_398,ebx_403,ecx_405,edi_397,edx_408,es_411,esi_404,esp_396,None_409,S_407,SCZO_399,SZO_401,Z_406
	byte SCZO_417
	byte SZO_419
	byte C_420
	word32 ebx_421
	word32 esi_422
	word32 ecx_423
	byte Z_424
	byte S_425
	bcuiposr0 None_427
	byte CZ_428
	word16 dx_431
	call esi_404 (retsize: 4; depth: 4)
		uses: C_402,CZ_410,ds_412,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_413,eax_400,ebp_398,ebx_403,ecx_405,edi_397,edx_408,es_411,esi_404,esp_396,None_409,S_407,SCZO_399,SZO_401,Z_406
		defs: C_420,CZ_428,ds_430,dx_431,eax_418,ebp_416,ebx_421,ecx_423,edi_415,edx_426,es_429,esi_422,esp_414,None_427,S_425,SCZO_417,SZO_419,Z_424
	branch eax_14 >= 0x00000000 l1001B656
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:0x100075F8 esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B616:
	ecx_327 = ecx_327 + 0x00000001
	branch ecx_327 != 0x00000004 l1001B60E
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:0x100075F8 esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B61C:
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:0x100075F8 esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B63C:
	word32 eax_337 = Mem239[edi_279:word32]
	word32 esp_340 = esp_1103 - 0x00000004
	Mem341[esp_340:word32] = 0x10007638
	Mem343[esp_340 - 0x00000004:word32] = eax_337 + 0x00000010
	word32 esp_347
	word32 edi_348
	word32 ebp_349
	byte SCZO_350
	word32 eax_351
	byte SZO_352
	byte C_353
	word32 ebx_354
	word32 esi_355
	word32 ecx_356
	byte Z_357
	byte S_358
	word32 edx_359
	bcuiposr0 None_360
	byte CZ_361
	selector es_362
	selector ds_363
	word16 dx_364
	call Mem343[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_329,CZ_275,ds_277,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_281,eax_338,ebp_263,ebx_330,ecx_346,edi_335,edx_280,es_276,esi_345,esp_342,None_274,S_272,SCZO_339,SZO_328,Z_334
		defs: C_353,CZ_361,ds_363,dx_364,eax_351,ebp_349,ebx_354,ecx_356,edi_348,edx_359,es_362,esi_355,esp_347,None_360,S_358,SCZO_350,SZO_352,Z_357
	word32 edi_366
	byte SCZO_368
	byte SZO_370
	byte C_371
	word32 ebx_372
	word32 esi_373
	word32 ecx_374
	byte Z_375
	byte S_376
	bcuiposr0 None_378
	byte CZ_379
	word16 dx_382
	call esi_355 (retsize: 4; depth: 4)
		uses: C_353,CZ_361,ds_363,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_364,eax_351,ebp_349,ebx_354,ecx_356,edi_348,edx_359,es_362,esi_355,esp_347,None_360,S_358,SCZO_350,SZO_352,Z_357
		defs: C_371,CZ_379,ds_381,dx_382,eax_369,ebp_367,ebx_372,ecx_374,edi_366,edx_377,es_380,esi_373,esp_365,None_378,S_376,SCZO_368,SZO_370,Z_375
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:0x100075F8 esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B656:
	branch Mem239[0x10031000:word32] <=u 0x00000004 l1001B692
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B65F:
	fn1000C51D(ebp_263 - 0x00000034, 0x10003428)
	fn1000C51D(ebp_263 - 0x00000024, 0x10003D54)
	word32 esp_310 = esp_1103 - 0x00000004
	Mem311[esp_310:word32] = ebp_263 - 0x00000054
	Mem313[esp_310 - 0x00000004:word32] = 0x00000004
	Mem315[esp_310 - 0x00000008:word32] = 0x00000000
	Mem317[esp_310 - 0x0000000C:word32] = 0x00000000
	word32 ecx_320
	word32 esi_322
	word32 edi_323
	eax_14 = fn1000C491(0x10031000, 0x10008B91, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_320, out edx, out esi_322, out edi_323)
	esp_1103 = esp_310 + 0x00000004
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp

l1001B692:
	word32 esp_101 = esp_1103 + 0x00000004
	word32 ecx_109
	fn1002F420(eax_14, Mem0[ebp_263 - 0x00000008:word32] ^ ebp_263, edx, Mem0[esp_101 + 0x00000004:word32], ebp_263, Mem0[esp_101:word32], Mem0[esp_1103:word32], es, ds, out ecx_109)
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp

fn1001B185_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):0x00 -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp

l1001B2C4:
	word32 eax_695 = Mem140[ebx_689 + 0x00000068:word32]
	Mem698[ebp_1039 - 0x000000D4:word32] = Mem140[ebp_1039 - 0x000000D4:word32] & 0x00000000
	word32 esp_703 = esp_1037 - 0x00000004
	Mem704[esp_703:word32] = ebp_1039 - 0x000000D4
	word32 edi_696 = ebp_1039 - 0x000000A4
	Mem707[edi_696:word32] = Mem704[0x100075F8:word32]
	word32 edx_705 = ebp_1039 - 0x000000A4
	Mem711[esp_703 - 0x00000004:word32] = edx_705
	Mem713[esp_703 - 0x00000008:word32] = ecx_180
	Mem715[esp_703 - 0x0000000C:word32] = eax_695
	Mem717[edi_696 + 0x00000004:word32] = Mem715[0x100075FC:word32]
	Mem721[edi_696 + 0x00000008:word32] = Mem717[0x10007600:word32]
	Mem725[edi_696 + 0x0000000C:word32] = Mem721[0x10007604:word32]
	word32 esp_729
	word32 edi_730
	word32 ebp_731
	byte SCZO_732
	word32 eax_733
	byte SZO_734
	byte C_735
	word32 ebx_736
	word32 esi_737
	word32 ecx_738
	byte Z_739
	byte S_740
	word32 edx_741
	bcuiposr0 None_742
	byte CZ_743
	selector es_744
	selector ds_745
	word16 dx_746
	call Mem725[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_700,CZ_680,ds_678,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_677,eax_695,ebp_684,ebx_689,ecx_728,edi_726,edx_705,es_679,esi_727,esp_714,None_681,S_682,SCZO_693,SZO_699,Z_683
		defs: C_735,CZ_743,ds_745,dx_746,eax_733,ebp_731,ebx_736,ecx_738,edi_730,edx_741,es_744,esi_737,esp_729,None_742,S_740,SCZO_732,SZO_734,Z_739
	word32 edi_748
	byte SCZO_750
	word32 eax_751
	byte SZO_752
	byte C_753
	word32 ecx_756
	byte Z_757
	byte S_758
	word32 edx_759
	bcuiposr0 None_760
	byte CZ_761
	word16 dx_764
	word32 esi_1085
	selector ds_1004
	selector es_1003
	call Mem725[esi_737 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: C_735,CZ_743,ds_745,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_746,eax_733,ebp_731,ebx_736,ecx_738,edi_730,edx_741,es_744,esi_737,esp_729,None_742,S_740,SCZO_732,SZO_734,Z_739
		defs: C_753,CZ_761,ds_763,dx_764,eax_751,ebp_749,ebx_754,ecx_756,edi_748,edx_759,es_762,esi_755,esp_747,None_760,S_758,SCZO_750,SZO_752,Z_757
	branch eax_751 < 0x00000000 l1001B48B
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x100075F8 al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B300:
	branch Mem725[0x10031000:word32] <=u 0x00000004 l1001B368
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B309:
	fn1000C51D(ebp_1039 - 0x00000054, 0x10003428)
	fn1000C51D(ebp_1039 - 0x00000044, 0x100045EC)
	Mem1060[ebp_1039 - 0x0000002C:word32] = 0x00000010
	Mem1064[ebp_1039 - 0x00000034:word32] = ebp_1039 - 0x000000A4
	Mem1066[ebp_1039 - 0x00000030:word32] = 0x00000000
	Mem1067[ebp_1039 - 0x00000028:word32] = 0x00000000
	Mem1068[ebp_1039 - 0x00000024:word32] = ebp_1039 - 0x000000D4
	Mem1069[ebp_1039 - 0x00000020:word32] = 0x00000000
	Mem1070[ebp_1039 - 0x0000001C:word32] = 0x00000004
	Mem1071[ebp_1039 - 0x00000018:word32] = 0x00000000
	Mem1075[esp_1037 - 0x00000004:word32] = ebp_1039 - 0x00000074
	Mem1077[esp_1037 - 0x00000008:word32] = 0x00000006
	Mem1079[esp_1037 - 0x0000000C:word32] = 0x00000000
	Mem1081[esp_1037 - 0x00000010:word32] = 0x00000000
	word32 ecx_1083
	word32 edx_1084
	word32 edi_1086
	fn1000C491(0x10031000, 0x10008BDB, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1083, out edx_1084, out esi_1085, out edi_1086)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B368:
	word32 ebx_798 = 0x00000000
	branch Mem725[ebp_1039 - 0x000000E0:word32] <=u 0x00000000 l1001B485
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B376:
	Mem830[esp_1037 - 0x00000004:word32] = Mem725[Mem725[ebp_1039 - 0x000000C8:word32]:word32] + ebx_798 * 0x00000004
	word32 esi_831
	word32 edi_832
	fn10015118(ebp_1039 - 0x000000D0, ebx_798, esi_1085, es_1003, ds_1004, dwArg00, out esi_831, out edi_832)
	word32 esi_835 = Mem830[ebp_1039 - 0x000000D0:word32]
	Mem839[ebp_1039 - 0x000000C4:word32] = Mem830[esi_835 + 0x00000024:word32]
	Mem843[ebp_1039 - 0x000000C0:word32] = Mem839[esi_835 + 0x00000028:word32]
	Mem847[ebp_1039 - 0x000000BC:word32] = Mem843[esi_835 + 0x0000002C:word32]
	Mem851[ebp_1039 - 0x000000B8:word32] = Mem847[esi_835 + 0x00000030:word32]
	word32 edi_852 = ebp_1039 - 0x000000B4
	word32 esi_853 = Mem851[ebp_1039 - 0x000000D0:word32]
	branch Mem851[esi_853 + 0x00000034:byte] == 0x00 l1001B4A2
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B3B0:
	word32 ecx_869 = 0x00000000
	edi_852 = ebp_1039 - 0x000000C4
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B3BE:
	branch Mem851[ebp_1039 - 0x000000A4 + ecx_869 * 0x00000004:word32] != Mem851[(ebp_1039 - 0x000000C4) + ecx_869 * 0x00000004:word32] l1001B4A2
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B4A2:
	word32 edx_861
	fn1000C640(ebp_1039 - 0x000000D0, ebx_798, esi_853, edi_852, es_1003, ds_1004, out edx_861, out esi_1085)
	ebx_798 = ebx_798 + 0x00000001
	branch ebx_798 <u Mem851[ebp_1039 - 0x000000E0:word32] l1001B376
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B4BA:
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B3CA:
	ecx_869 = ecx_869 + 0x00000001
	branch ecx_869 != 0x00000004 l1001B3BE
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B3D0:
	Mem885[ebp_1039 - 0x000000EC:word32] = 0x00000000
	Mem886[ebp_1039 - 0x000000D8:word32] = ebp_1039 - 0x000000EC
	word32 esi_887
	word32 edi_888
	Mem891[esp_1037 - 0x00000004:word32] = fn1000EF25(ebp_1039 - 0x000000D8, ebp_1039 - 0x000000A4, 0x00000000, esi_853, es_1003, ds_1004, out esi_887, out edi_888)
	word32 edx_893
	word32 edi_1038
	word32 esi_1045
	word32 ebx_1044
	branch fn1001357C(esi_887, esi_887, es_1003, ds_1004, dwArg00, out edx_893, out ebx_1044, out esi_1045, out edi_1038) < 0x00000000 l1001B46F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B3FB:
	branch Mem891[ebp_1039 - 0x000000D4:word32] != ebx_1044 l1001B46F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B403:
	Mem928[esp_1037 - 0x00000004:word32] = ebx_1044
	fn10013510(esi_1045, edx_893, es_1003, ds_1004, bArg00)
	Mem933[ebp_1039 - 0x000000DC:word32] = ebx_1044
	Mem935[esp_1037 - 0x00000004:word32] = ebp_1039 - 0x000000DC
	Mem937[ebp_1039 - 0x000000D8:word32] = ebx_1044
	branch fn1001E2ED(ebp_1039 - 0x000000D8, edi_1038, es_1003, ds_1004, dwArg00, out ebx_1044, out esi_1045, out edi_1038) < 0x00000000 l1001B44F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B42D:
	word32 eax_1006 = Mem937[ebp_1039 - 0x000000E4:word32]
	Mem1009[esp_1037 - 0x00000004:word32] = Mem937[ebp_1039 - 0x000000DC:word32]
	Mem1012[esp_1037 - 0x00000008:word32] = Mem1009[esi_1045 + 0x0000001C:word32]
	word32 eax_1013 = Mem1012[eax_1006 + 0x00000010:word32]
	Mem1015[esp_1037 - 0x0000000C:word32] = eax_1013
	word32 esp_1019
	word32 edi_1020
	word32 ebp_1021
	byte SCZO_1022
	word32 eax_1023
	byte SZO_1024
	byte C_1025
	word32 ebx_1026
	word32 esi_1027
	word32 ecx_1028
	byte Z_1029
	byte S_1030
	word32 edx_1031
	bcuiposr0 None_1032
	byte CZ_1033
	selector es_1034
	selector ds_1035
	word16 dx_1036
	call Mem1015[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_945,CZ_800,ds_763,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_868,eax_1013,ebp_749,ebx_938,ecx_1018,edi_940,edx_893,es_762,esi_1017,esp_1014,None_760,S_944,SCZO_925,SZO_943,Z_926
		defs: C_1025,CZ_1033,ds_1035,dx_1036,eax_1023,ebp_1021,ebx_1026,ecx_1028,edi_1020,edx_1031,es_1034,esi_1027,esp_1019,None_1032,S_1030,SCZO_1022,SZO_1024,Z_1029
	byte SCZO_1040
	word32 eax_1041
	byte SZO_1042
	byte C_1043
	word32 ecx_1046
	byte Z_1047
	byte S_1048
	word32 edx_1049
	bcuiposr0 None_1050
	byte CZ_1051
	word16 dx_1054
	call esi_1027 (retsize: 4; depth: 4)
		uses: C_1025,CZ_1033,ds_1035,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_1036,eax_1023,ebp_1021,ebx_1026,ecx_1028,edi_1020,edx_1031,es_1034,esi_1027,esp_1019,None_1032,S_1030,SCZO_1022,SZO_1024,Z_1029
		defs: C_1043,CZ_1051,ds_1053,dx_1054,eax_1041,ebp_1039,ebx_1044,ecx_1046,edi_1038,edx_1049,es_1052,esi_1045,esp_1037,None_1050,S_1048,SCZO_1040,SZO_1042,Z_1047
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B44F:
	word32 ecx_960 = Mem937[ebp_1039 - 0x000000DC:word32]
	branch ecx_960 == 0x00000000 l1001B46F
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B459:
	Mem964[ebp_1039 - 0x000000DC:word32] = ebx_1044
	word32 esp_966 = esp_1037 - 0x00000004
	Mem967[esp_966:word32] = ecx_960
	word32 esp_970
	word32 edi_971
	word32 ebp_972
	byte SCZO_973
	word32 eax_974
	byte SZO_975
	byte C_976
	word32 ebx_977
	word32 esi_978
	word32 ecx_979
	byte Z_980
	byte S_981
	word32 edx_982
	bcuiposr0 None_983
	byte CZ_984
	selector es_985
	selector ds_986
	word16 dx_987
	call Mem967[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_963,CZ_949,ds_947,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_946,eax_965,ebp_953,ebx_958,ecx_969,edi_954,edx_959,es_948,esi_968,esp_966,None_950,S_951,SCZO_952,SZO_961,Z_962
		defs: C_976,CZ_984,ds_986,dx_987,eax_974,ebp_972,ebx_977,ecx_979,edi_971,edx_982,es_985,esi_978,esp_970,None_983,S_981,SCZO_973,SZO_975,Z_980
	byte SCZO_991
	word32 eax_992
	byte SZO_993
	byte C_994
	word32 ecx_997
	byte Z_998
	byte S_999
	word32 edx_1000
	bcuiposr0 None_1001
	byte CZ_1002
	word16 dx_1005
	call esi_978 (retsize: 4; depth: 4)
		uses: C_976,CZ_984,ds_986,dwLoc0100_17,dwLoc0104_22,dwLoc0108_24,dwLoc010C_124,dwLoc0110_125,dwLoc0114_126,dwLoc0118_127,dwLoc011C_128,dwLoc04_6,dwLoc0C_12,dwLoc9C_123,dwLocA0_122,dwLocA4_121,dwLocAC_53,dwLocB0_48,dwLocB4_43,dwLocB8_35,dwLocCC_38,dwLocD0_182,dwLocD4_120,dwLocE4_116,dwLocE8_27,dwLocEC_134,dwLocF4_40,dwLocF8_39,dx_987,eax_974,ebp_972,ebx_977,ecx_979,edi_971,edx_982,es_985,esi_978,esp_970,None_983,S_981,SCZO_973,SZO_975,Z_980
		defs: C_994,CZ_1002,ds_1004,dx_1005,eax_992,ebp_990,ebx_995,ecx_997,edi_989,edx_1000,es_1003,esi_996,esp_988,None_1001,S_999,SCZO_991,SZO_993,Z_998
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B46F:
	word32 edx_918
	word32 esi_919
	fn1000C640(ebp_1039 - 0x000000EC, ebx_1044, esi_1045, edi_1038, es_1003, ds_1004, out edx_918, out esi_919)
	word32 edx_922
	word32 esi_923
	fn1000C640(ebp_1039 - 0x000000D0, ebx_1044, esi_919, edi_1038, es_1003, ds_1004, out edx_922, out esi_923)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B485:
	ebx_689 = Mem725[ebp_1039 - 0x000000C8:word32]
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001B48B:
	word32 ecx_783 = Mem725[ebp_1039 - 0x000000CC:word32]
	Mem787[ebp_1039 - 0x000000CC:word32] = ecx_783 + 0x00000001
	ecx_180 = ecx_783 + 0x00000001
// DataOut: cs ds ebp ebx ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -284(fp):<invalid> -280(fp):0x00000000 -276(fp):0x00000000 -272(fp):<invalid> -268(fp):<invalid> -264(fp):edi -260(fp):esi -256(fp):ebx -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):ecx -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -56(fp):fp - 0x000000A8 -52(fp):fp - 0x00000048 ^ fp - 0x00000048 -48(fp):0x00000010 -44(fp):fp - 0x00000048 ^ fp - 0x00000048 -40(fp):fp - 0x000000D8 -36(fp):fp - 0x00000048 ^ fp - 0x00000048 -32(fp):0x00000004 -28(fp):fp - 0x00000048 ^ fp - 0x00000048 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)



void fn1001B6A5(word32 ecx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)
fn1001B6A5_entry:
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l1001B6A5:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem29[ecx + 0x00000008:word32] = dwArg04
	Mem33[ecx + 0x00000004:word32] = 0x00000001
	Mem34[ecx:word32] = 0x10001708
	Mem35[ecx + 0x0000000C:word32] = dwArg08
	word32 esi_40
	word32 edx_118
	word32 edi_107
	fn1000F629(ecx + 0x00000010, ebx, esi, es, ds, dwArg0C, out edx_118, out esi_40, out edi_107)
	Mem46[edi_107 + 0x00000014:word32] = dwArg10
	word32 ebp_108 = fp - 0x00000004
	word32 esp_106 = fp - 0x00000010
	branch dwArg10 == 0x00000000 l1001B6F7
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0014(32)

l1001B6E7:
	word32 esp_124
	word32 edi_125
	word32 ebp_126
	word32 ecx_127
	word32 eax_128
	byte SZO_129
	byte C_130
	word32 esi_131
	byte Z_132
	word32 ebx_133
	selector es_134
	selector ds_135
	word32 edx_136
	call Mem46[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_49,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_21,dwLoc10_23,dwLoc14_121,eax_119,ebp_7,ebx,ecx_123,edi_41,edx_39,es,esi_122,esp_120,SZO_47,Z_48
		defs: C_130,ds_135,eax_128,ebp_126,ebx_133,ecx_127,edi_125,edx_136,es_134,esi_131,esp_124,SZO_129,Z_132
	word32 ecx_140
	word32 eax_141
	byte SZO_142
	byte C_143
	word32 esi_144
	byte Z_145
	call esi_131 (retsize: 4; depth: 4)
		uses: C_130,ds_135,dwLoc04_6,dwLoc08_16,dwLoc0C_21,dwLoc10_23,dwLoc14_121,eax_128,ebp_126,ebx_133,ecx_127,edi_125,edx_136,es_134,esi_131,esp_124,SZO_129,Z_132
		defs: C_143,ds_148,eax_141,ebp_139,ebx_146,ecx_140,edi_138,edx_149,es_147,esi_144,esp_137,SZO_142,Z_145
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0014(32)

l1001B6F7:
	Mem62[edi_107 + 0x00000018:word32] = dwArg14
	branch dwArg14 == 0x00000000 l1001B711
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001B701:
	word32 esp_89 = esp_106 - 0x00000004
	Mem90[esp_89:word32] = dwArg14
	word32 esp_93
	word32 edi_94
	word32 ebp_95
	word32 ecx_96
	word32 eax_97
	byte SZO_98
	byte C_99
	word32 esi_100
	byte Z_101
	word32 ebx_102
	selector es_103
	selector ds_104
	word32 edx_105
	call Mem90[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_65,ds_52,dwLoc04_6,dwLoc08_16,dwLoc0C_21,dwLoc10_23,dwLoc14_50,eax_88,ebp_58,ebx_54,ecx_92,edi_55,edx_51,es_53,esi_91,esp_89,SZO_63,Z_64
		defs: C_99,ds_104,eax_97,ebp_95,ebx_102,ecx_96,edi_94,edx_105,es_103,esi_100,esp_93,SZO_98,Z_101
	word32 ecx_109
	word32 eax_110
	byte SZO_111
	byte C_112
	word32 esi_113
	byte Z_114
	call esi_100 (retsize: 4; depth: 4)
		uses: C_99,ds_104,dwLoc04_6,dwLoc08_16,dwLoc0C_21,dwLoc10_23,dwLoc14_50,eax_97,ebp_95,ebx_102,ecx_96,edi_94,edx_105,es_103,esi_100,esp_93,SZO_98,Z_101
		defs: C_112,ds_117,eax_110,ebp_108,ebx_115,ecx_109,edi_107,edx_118,es_116,esi_113,esp_106,SZO_111,Z_114
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001B711:
	word32 ecx_83
	fn1002F420(edi_107, eax_13 ^ fp - 0x00000004, edx_118, ebx, ebp_108, Mem62[esp_106 + 0x00000004:word32], Mem62[esp_106:word32], es, ds, out ecx_83)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1001B6A5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp



void fn1001B751(word32 ecx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1001B751_entry:
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001B751:
	word32 ebp_36 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 edi_17 = ecx
	branch Mem0[ecx + 0x00000018:word32] == 0x00000000 l1001B781
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001B76B:
	Mem61[ecx + 0x00000018:word32] = Mem0[ecx + 0x00000018:word32] & 0x00000000
	word32 esp_72
	word32 edi_73
	word32 ebp_74
	word32 ecx_75
	word32 eax_76
	byte SZO_77
	byte C_78
	byte Z_79
	word32 esi_80
	word32 ebx_81
	selector es_82
	selector ds_83
	word32 edx_84
	call Mem61[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_63,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_66,dwLoc14_68,eax_64,ebp_7,ebx,ecx_70,edi_17,edx,es,esi_69,esp_67,SZO_62,Z_20
		defs: C_78,ds_83,eax_76,ebp_74,ebx_81,ecx_75,edi_73,edx_84,es_82,esi_80,esp_72,SZO_77,Z_79
	word32 esp_85
	word32 ecx_88
	word32 eax_89
	byte SZO_90
	byte C_91
	byte Z_92
	word32 esi_93
	word32 edx_97
	call esi_80 (retsize: 4; depth: 4)
		uses: C_78,ds_83,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_66,dwLoc14_68,eax_76,ebp_74,ebx_81,ecx_75,edi_73,edx_84,es_82,esi_80,esp_72,SZO_77,Z_79
		defs: C_91,ds_96,eax_89,ebp_87,ebx_94,ecx_88,edi_86,edx_97,es_95,esi_93,esp_85,SZO_90,Z_92
	esi = Mem61[esp_85:word32]
	esp_15 = esp_85 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001B781:
	word32 ecx_39
	word32 edx_40
	word32 esi_41
	fn1000F276(edi_17 + 0x00000014, ebx, esi, edi_17, es, ds, out ecx_39, out edx_40, out esi_41)
	word32 ecx_44
	word32 edx_45
	word32 esi_46
	word32 eax_47 = fn1000F276(edi_17 + 0x00000010, ebx, esi_41, edi_17, es, ds, out ecx_44, out edx_45, out esi_46)
	Mem49[edi_17:word32] = 0x1000157C
	word32 ecx_55
	fn1002F420(eax_47, eax_13 ^ fp - 0x00000004, edx_45, ebx, ebp_36, esi_46, Mem49[esp_15:word32], es, ds, out ecx_55)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1001B751_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



void fn1001BB87(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1001BB87_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0084(32) Stack +0004(32)

l1001BB87:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem25[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 ebp_113 = fp - 0x00000004
	word32 esi_110 = edx
	word32 ebx_236 = 0x00000000
	word32 eax_29 = Mem25[ecx + 0x00000004:word32]
	word32 edx_108 = 0x80070490
	word32 dwLoc88_222 = 0x80070490
	word32 dwLoc94_225 = 0x00000000
	word32 esp_114 = fp - 0x000000B8
	branch eax_29 == 0x00000000 l1001BCF0
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32)

l1001BBDD:
	branch edx_108 != 0x80070490 l1001BCE2
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:ecx -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32)

l1001BBE9:
	word32 esp_270 = esp_114 - 0x00000004
	Mem271[esp_270:word32] = Mem25[ecx:word32] + ebx_236 * 0x00000004
	word32 esi_272
	word32 edi_273
	word32 edx_274 = fn10015118(fp - 0x00000084, ebx_236, esi_110, es, ds, dwArg00, out esi_272, out edi_273)
	esp_114 = esp_270 + 0x00000004
	word32 esi_276 = dwLoc84
	word32 eax_278 = fn10022359(Mem271[dwLoc84 + 0x00000038:word32])
	word32 edi_279 = 0x00000000
	word32 dwLoc8C_281 = 0x00000000
	branch eax_278 == 0x00000000 l1001BCBA
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:ecx -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32) Local -00A8(0)

l1001BC18:
	branch dwLoc88_222 != 0x80070490 l1001BCB1
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32) Local -00A8(0)

l1001BC28:
	word32 esp_363 = esp_114 - 0x00000004
	word32 edi_361
	word32 esi_360
	Mem364[esp_363:word32] = fn1000EF25(fp - 0x000000A0, edx_274, ebx_236, esi_276, es, ds, out esi_360, out edi_361)
	Mem366[esp_363 - 0x00000004:word32] = edi_361
	word32 v15_353 = dwLoc84 & 0x00000000
	dwLoc84 = v15_353
	esp_114 = esp_363 + 0x00000004
	branch fn100135C8(esi_360, edx_274, es, ds, dwArg00, dwArg04) < 0x00000000 l1001BC8E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(0) Local -008C(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32) Local -00A8(0)

l1001BC4D:
	Mem398[esp_363:word32] = 0x80070490
	word32 esp_402
	word32 edi_403
	word32 ebp_404
	byte SCZO_405
	word32 eax_406
	byte SZO_407
	byte C_408
	word32 ebx_409
	word32 esi_410
	word32 edx_411
	word32 ecx_412
	byte Z_413
	byte S_414
	bcuiposr0 None_415
	byte CZ_416
	selector es_417
	selector ds_418
	call Mem398[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_372,CZ_317,ds_315,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40,dwLoc84_354,dwLoc88_312,dwLoc8C_313,dwLoc90_32,dwLoc94_225,dwLoc98_31,dwLoc9C_34,dwLocA0_359,dwLocA4_23,dwLocA8_280,dwLocB0_17,dwLocB4_20,dwLocB8_37,eax_399,ebp_327,ebx_325,ecx_401,edi_400,edx_320,es_316,esi_360,esp_397,None_318,S_371,SCZO_330,SZO_370,Z_331
		defs: C_408,CZ_416,ds_418,eax_406,ebp_404,ebx_409,ecx_412,edi_403,edx_411,es_417,esi_410,esp_402,None_415,S_414,SCZO_405,SZO_407,Z_413
	word32 esp_419
	word32 edi_420
	word32 ebp_421
	byte SCZO_422
	word32 eax_423
	byte SZO_424
	byte C_425
	word32 ebx_426
	word32 esi_427
	word32 edx_428
	word32 ecx_429
	byte Z_430
	byte S_431
	bcuiposr0 None_432
	byte CZ_433
	selector es_434
	selector ds_435
	call edi_403 (retsize: 4; depth: 4)
		uses: C_408,CZ_416,ds_418,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40,dwLoc84_354,dwLoc88_312,dwLoc8C_313,dwLoc90_32,dwLoc94_225,dwLoc98_31,dwLoc9C_34,dwLocA0_359,dwLocA4_23,dwLocA8_280,dwLocB0_17,dwLocB4_20,dwLocB8_37,eax_406,ebp_404,ebx_409,ecx_412,edi_403,edx_411,es_417,esi_410,esp_402,None_415,S_414,SCZO_405,SZO_407,Z_413
		defs: C_425,CZ_433,ds_435,eax_423,ebp_421,ebx_426,ecx_429,edi_420,edx_428,es_434,esi_427,esp_419,None_432,S_431,SCZO_422,SZO_424,Z_430
	Mem439[esp_419 - 0x00000004:word32] = v15_353
	word32 esp_443
	word32 edi_444
	word32 ebp_445
	byte SCZO_446
	word32 eax_447
	byte SZO_448
	byte C_449
	word32 ebx_450
	word32 esi_451
	word32 edx_452
	word32 ecx_453
	byte Z_454
	byte S_455
	bcuiposr0 None_456
	byte CZ_457
	selector es_458
	selector ds_459
	call Mem439[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_425,CZ_433,ds_435,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40,dwLoc84_354,dwLoc88_312,dwLoc8C_313,dwLoc90_32,dwLoc94_225,dwLoc98_31,dwLoc9C_34,dwLocA0_359,dwLocA4_23,dwLocA8_280,dwLocB0_17,dwLocB4_20,dwLocB8_37,eax_437,ebp_421,ebx_436,ecx_442,edi_441,edx_428,es_434,esi_427,esp_438,None_432,S_431,SCZO_422,SZO_424,Z_430
		defs: C_449,CZ_457,ds_459,eax_447,ebp_445,ebx_450,ecx_453,edi_444,edx_452,es_458,esi_451,esp_443,None_456,S_455,SCZO_446,SZO_448,Z_454
	byte SCZO_463
	word32 eax_464
	byte SZO_465
	byte C_466
	word32 edx_469
	word32 ecx_470
	byte Z_471
	byte S_472
	bcuiposr0 None_473
	byte CZ_474
	call edi_444 (retsize: 4; depth: 4)
		uses: C_449,CZ_457,ds_459,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40,dwLoc84_354,dwLoc88_312,dwLoc8C_313,dwLoc90_32,dwLoc94_225,dwLoc98_31,dwLoc9C_34,dwLocA0_359,dwLocA4_23,dwLocA8_280,dwLocB0_17,dwLocB4_20,dwLocB8_37,eax_447,ebp_445,ebx_450,ecx_453,edi_444,edx_452,es_458,esi_451,esp_443,None_456,S_455,SCZO_446,SZO_448,Z_454
		defs: C_466,CZ_474,ds_476,eax_464,ebp_462,ebx_467,ecx_470,edi_461,edx_469,es_475,esi_468,esp_460,None_473,S_472,SCZO_463,SZO_465,Z_471
	branch ebx_236 != eax_464 l1001BC8E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(0) Local -008C(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32) Local -00A8(0)

l1001BC7C:
	Mem486[dwArg04:word32] = esi_360
	esi_360 = 0x00000000
	dwLoc88_222 = dwLoc88_222 & 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(0) Local -008C(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32) Local -00A8(0)

l1001BC8E:
	fn1000C640(fp - 0x00000084, ebx_236, esi_360, edi_361, es, ds, out edx_274, out esi_276)
	word32 eax_391 = dwLoc8C_281 + 0x00000001
	edi_279 = eax_391
	dwLoc8C_281 = eax_391
	branch eax_391 <u eax_278 l1001BC18
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(0) Local -008C(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32) Local -00A8(0)

l1001BCB1:
	ebx_236 = dwLoc94_225
	dwLoc84 = esi_276
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0090(32) Local -009C(0) Local -00A4(32)

l1001BCBA:
	word32 edx_302
	fn1000C640(fp - 0x00000084, ebx_236, esi_276, edi_279, es, ds, out edx_302, out esi_110)
	ebx_236 = ebx_236 + 0x00000001
	edx_108 = dwLoc88_222
	dwLoc94_225 = ebx_236
	branch ebx_236 >=u eax_29 l1001BCE2
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32)

l1001BCE2:
	branch edx_108 >= 0x00000000 l1001BD8D
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0088(32)

l1001BCEA:
	esi_110 = 0x80070490
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0088(32)

l1001BCF0:
	branch esi_110 == 0x00000000 l1001BD8D
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0088(32)

l1001BCF8:
	branch Mem25[0x10031000:word32] <=u 0x00000003 l1001BD8D
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0088(32)

l1001BD05:
	fn1000C51D(fp - 0x00000060, 0x10003E54)
	fn1000C51D(fp - 0x00000050, 0x10003D54)
	word32 esp_143 = esp_114 - 0x00000004
	Mem144[esp_143:word32] = 0x00000004
	Mem148[esp_143:word32] = esi_110
	word32 esp_154
	word32 edi_155
	word32 ebp_156
	byte SCZO_157
	word32 eax_158
	byte SZO_159
	byte C_160
	word32 ebx_161
	word32 esi_162
	word32 edx_163
	word32 ecx_164
	byte Z_165
	byte S_166
	bcuiposr0 None_167
	byte CZ_168
	selector es_169
	selector ds_170
	call Mem148[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_140,CZ_132,ds_102,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34_153,dwLoc38_152,dwLoc3C_151,dwLoc40_141,dwLoc84_100,dwLoc88_98,dwLoc8C_99,dwLoc90_32,dwLoc94_101,dwLoc98_31,dwLoc9C_34,dwLocA0_97,dwLocA4_23,dwLocA8_96,dwLocB0_17,dwLocB4_20,dwLocB8_37,eax_142,ebp_113,ebx_138,ecx_150,edi_145,edx_135,es_103,esi_149,esp_147,None_105,S_106,SCZO_131,SZO_139,Z_117
		defs: C_160,CZ_168,ds_170,eax_158,ebp_156,ebx_161,ecx_164,edi_155,edx_163,es_169,esi_162,esp_154,None_167,S_166,SCZO_157,SZO_159,Z_165
	word32 esp_171
	word32 edi_172
	byte SCZO_174
	word32 eax_175
	byte SZO_176
	byte C_177
	word32 ebx_178
	word32 esi_179
	word32 edx_180
	word32 ecx_181
	byte Z_182
	byte S_183
	bcuiposr0 None_184
	byte CZ_185
	call esi_162 (retsize: 4; depth: 4)
		uses: C_160,CZ_168,ds_170,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34_153,dwLoc38_152,dwLoc3C_151,dwLoc40_141,dwLoc84_100,dwLoc88_98,dwLoc8C_99,dwLoc90_32,dwLoc94_101,dwLoc98_31,dwLoc9C_34,dwLocA0_97,dwLocA4_23,dwLocA8_96,dwLocB0_17,dwLocB4_20,dwLocB8_37,eax_158,ebp_156,ebx_161,ecx_164,edi_155,edx_163,es_169,esi_162,esp_154,None_167,S_166,SCZO_157,SZO_159,Z_165
		defs: C_177,CZ_185,ds_187,eax_175,ebp_173,ebx_178,ecx_181,edi_172,edx_180,es_186,esi_179,esp_171,None_184,S_183,SCZO_174,SZO_176,Z_182
	Mem202[esp_171 - 0x00000004:word32] = fp - 0x00000080
	Mem204[esp_171 - 0x00000008:word32] = 0x00000007
	Mem206[esp_171 - 0x0000000C:word32] = 0x00000000
	Mem208[esp_171 - 0x00000010:word32] = 0x00000000
	word32 ecx_213
	word32 edx_214
	word32 esi_215
	word32 edi_216
	fn1000C491(0x10031000, 0x10008A31, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_213, out edx_214, out esi_215, out edi_216)
	esp_114 = esp_171
	edx_108 = dwLoc88_222
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1001BD8D:
	word32 esp_83 = esp_114 + 0x00000004
	word32 ecx_91
	fn1002F420(edx_108, eax_11 ^ fp - 0x00000004, edx_108, Mem25[esp_83 + 0x00000004:word32], ebp_113, Mem25[esp_83:word32], Mem25[esp_114:word32], es, ds, out ecx_91)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000088 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1001BB87_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -64(fp):fp - 0x0000009C -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000090 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000088 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1001BCD7:
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):edi -180(fp):esi -176(fp):ebx -168(fp):<invalid> -164(fp):<invalid> -160(fp):fp - 0x00000084 -156(fp):<invalid> -152(fp):0x80070490 -148(fp):<invalid> -144(fp):ecx -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0084(32) Local -0088(32) Local -0090(32) Local -0094(32) Local -009C(0) Local -00A4(32)



void fn1001C694(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)
fn1001C694_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l1001C694:
	Mem24[ecx + 0x00000008:word32] = dwArg04
	Mem28[ecx + 0x0000000C:word32] = dwArg08
	Mem31[ecx + 0x00000004:word32] = 0x00000001
	Mem32[ecx:word32] = 0x100016F8
	Mem33[ecx + 0x00000010:word32] = dwArg0C
	word32 edx_36
	word32 esi_37
	word32 edi_38
	fn1000F629(ecx + 0x00000014, ebx, ecx, es, ds, dwArg1C, out edx_36, out esi_37, out edi_38)
	Mem43[esi_37 + 0x00000018:word32] = 0x00000000
	Mem44[esi_37 + 0x0000001C:word32] = 0x00000000
	Mem45[esi_37 + 0x00000020:word32] = 0x00000000
	Mem46[esi_37 + 0x00000024:word32] = 0x00000000
	Mem47[esi_37 + 0x00000028:word32] = 0x00000000
	Mem48[esi_37 + 0x0000002C:word32] = 0x00000000
	Mem49[esi_37 + 0x00000030:word32] = 0x00000000
	Mem50[esi_37 + 0x00000034:word32] = 0x00000000
	Mem51[esi_37 + 0x00000038:word32] = 0x00000000
	branch dwArg10 == 0x00000000 l1001C6F6
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)

l1001C6EC:
	word32 edx_105
	fn1000F30D(esi_37 + 0x00000018, dwArg10, 0xFFFFFFFF, out edx_105)
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0014(32) Stack +0018(32)

l1001C6F6:
	branch dwArg14 == 0x00000000 l1001C71C
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0014(32) Stack +0018(32)

l1001C6FC:
	word32 edx_85
	fn1000F30D(esi_37 + 0x00000024, dwArg14, 0xFFFFFFFF, out edx_85)
	branch dwArg18 == 0x00000000 l1001C71C
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0018(32)

l1001C70F:
	word32 edx_97
	fn1000F30D(esi_37 + 0x00000030, dwArg18, 0xFFFFFFFF, out edx_97)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):0xFFFFFFFF -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1001C71C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1001C694_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> ebx:ebx edx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn1001CF11(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut: eax ebp edx esp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)
fn1001CF11_entry:
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32) Stack +0014(32)

l1001CF11:
	Mem21[ecx + 0x00000008:word32] = dwArg04
	Mem26[ecx + 0x00000004:word32] = 0x00000001
	Mem27[ecx:word32] = 0x100016B8
	Mem28[ecx + 0x0000000C:word32] = 0x00000000
	Mem29[ecx + 0x00000010:word32] = 0x00000000
	Mem30[ecx + 0x00000014:word32] = 0x00000000
	Mem33[ecx + 0x00000018:word32] = dwArg0C
	word32 edx_37
	word32 esi_38
	word32 edi_39
	fn1000F629(ecx + 0x0000001C, ebx, ecx, es, ds, dwArg14, out edx_37, out esi_38, out edi_39)
	Mem47[esi_38 + 0x00000024:word32] = dwArg10
	branch dwArg08 == 0x00000000 l1001CF62
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l1001CF55:
	word32 edx_84
	fn1000F30D(esi_38 + 0x0000000C, dwArg08, 0xFFFFFFFF, out edx_84)
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001CF62:
	word32 esp_53
	word32 edi_54
	word32 ebp_55
	word32 eax_56
	word32 esi_57
	word32 ecx_58
	byte SZO_59
	byte C_60
	byte SCZO_61
	byte Z_62
	word32 ebx_63
	selector es_64
	selector ds_65
	word32 edx_66
	call msvcrt.dll!time (retsize: 4; depth: 20)
		uses: C_25,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_16,dwLoc10_52,dwLoc14_49,eax_50,ebp_7,ebx,ecx_22,edi_39,edx_37,es,esi_38,esp_51,SCZO_43,SZO_24,Z_44
		defs: C_60,ds_65,eax_56,ebp_55,ebx_63,ecx_58,edi_54,edx_66,es_64,esi_57,esp_53,SCZO_61,SZO_59,Z_62
	word32 ebp_74
	*ebpOut = ebp
	return esi_57
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn1001CF11_exit:
// DataOut: eax ebp edx esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn1001D0D8(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, real64 rArg0, ptr32 & edxOut, ptr32 & rArg0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZOFPUF ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001D0D8_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -00EC(32) Stack +0004(32) Stack +0008(32)

l1001D0D8:
	byte bl_122
	__align(fp - 0x00000004)
	Mem34[dwArg08:byte] = 0x00
	word32 ebp_115 = fp - 0x00000004
	word32 eax_14 = dwArg08
	branch dwArg04 != 0x00000000 l1001D117
// DataOut: bl cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001D117:
	word32 esp_113
	word32 edi_114
	byte SCZO_116
	word32 eax_117
	byte SZO_118
	byte C_119
	word32 ebx_120
	word32 esi_121
	word32 ecx_123
	byte Z_124
	byte CZ_125
	byte SO_127
	byte FPUF_128
	call msvcrt.dll!difftime (retsize: 4; depth: 264)
		uses: bl_29,C_37,CZ,ds,dwLoc0100_109,dwLoc0104_112,dwLoc04_6,dwLoc08_12,dwLocD8_31,dwLocEC_17,dwLocF4_21,dwLocF8_24,dwLocFC_26,eax_14,ebp_7,ebx_30,ecx,edi_28,edx,es,esi_33,esp_111,FPUF,rLocD4,SCZO,SO,SZO_35,Z_36
		defs: bl_122,C_119,CZ_125,ds_130,eax_117,ebp_115,ebx_120,ecx_123,edi_114,edx_126,es_129,esi_121,esp_113,FPUF_128,SCZO_116,SO_127,SZO_118,Z_124
	branch Mem34[esi_121 + 0x00000024:word32] != Mem34[edi_114 + 0x00000024:word32] l1001D135
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000FC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D135:
	word32 ecx_252 = Mem34[edi_114 + 0x00000018:word32]
	branch ecx_252 == 0x00000000 l1001D169
// DataOut: bl cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D169:
	branch Mem34[esi_121 + 0x00000018:word32] < 0x00000000 l1001D173
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D13F:
	branch ecx_252 == 0x00000001 l1001D155
// DataOut: bl cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D144:
	branch ecx_252 == 0x00000002 l1001D155
// DataOut: bl cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D155:
	branch Mem34[esi_121 + 0x00000018:word32] >= ecx_252 l1001D131
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D15A:
	branch rArg0 < Mem34[0x10007AD0:real64] l1001D173
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D167:
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D149:
	Mem270[fp - 0x000000EC:word32] = 0x8000FFFF
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D131:
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D171:
	bl_122 = 0x01
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D173:
	branch Mem34[0x10031000:word32] <=u 0x00000004 l1001D2D8
// DataOut: bl cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:<invalid> esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001D180:
	fn1000C51D(fp - 0x000000AC, 0x10003428)
	fn1000C51D(fp - 0x0000009C, 0x10004AF0)
	word32 ecx_164 = Mem34[esi_121 + 0x00000018:word32]
	Mem166[fp - 0x0000008C:word32] = fp - 0x000000EC
	Mem171[fp - 0x000000E8:word32] = ecx_164
	Mem172[fp - 0x0000007C:word32] = fp - 0x000000E8
	Mem174[fp - 0x000000E4:word32] = Mem172[esi_121 + 0x00000008:word32]
	Mem176[fp - 0x0000006C:word32] = fp - 0x000000E4
	Mem178[fp - 0x000000E0:word32] = Mem176[edi_114 + 0x00000018:word32]
	Mem180[fp - 0x0000005C:word32] = fp - 0x000000E0
	Mem182[fp - 0x0000004C:word32] = fp - 0x000000DC
	Mem184[fp - 0x0000003C:word32] = esi_121 + 0x00000024
	Mem187[fp - 0x00000100:word32] = 0x00000004
	Mem188[fp - 0x000000DC:word32] = ecx_164
	word32 ecx_189 = Mem188[fp - 0x00000100:word32]
	Mem191[fp - 0x0000002C:word32] = edi_114 + 0x00000024
	Mem193[fp - 0x00000088:word32] = 0x00000000
	Mem194[fp - 0x00000084:word32] = 0x00000004
	Mem195[fp - 0x00000080:word32] = 0x00000000
	Mem196[fp - 0x00000078:word32] = 0x00000000
	Mem197[fp - 0x00000074:word32] = 0x00000004
	Mem198[fp - 0x00000070:word32] = 0x00000000
	Mem199[fp - 0x00000068:word32] = 0x00000000
	Mem200[fp - 0x00000064:word32] = 0x00000004
	Mem201[fp - 0x00000060:word32] = 0x00000000
	Mem202[fp - 0x00000058:word32] = 0x00000000
	Mem203[fp - 0x00000054:word32] = 0x00000004
	Mem204[fp - 0x00000050:word32] = 0x00000000
	Mem205[fp - 0x00000048:word32] = 0x00000000
	Mem206[fp - 0x00000044:word32] = ecx_189
	Mem207[fp - 0x00000040:word32] = 0x00000000
	Mem208[fp - 0x00000038:word32] = 0x00000000
	Mem209[fp - 0x00000034:word32] = ecx_189
	Mem210[fp - 0x00000030:word32] = 0x00000000
	Mem211[fp - 0x00000028:word32] = 0x00000000
	Mem212[fp - 0x00000024:word32] = ecx_189
	Mem213[fp - 0x00000020:word32] = 0x00000000
	Mem214[fp - 0x0000001C:word32] = fp - 0x000000D4
	Mem215[fp - 0x00000018:word32] = 0x00000000
	Mem216[fp - 0x00000014:word32] = 0x00000008
	Mem217[fp - 0x00000010:word32] = 0x00000000
	Mem221[fp - 0x00000100:word32] = fp - 0x000000CC
	Mem223[fp - 0x00000104:word32] = 0x0000000C
	Mem225[fp - 0x00000108:word32] = 0x00000000
	Mem227[fp - 0x0000010C:word32] = 0x00000000
	word32 ecx_231
	word32 esi_233
	word32 edi_234
	fn1000C491(0x10031000, 0x10008662, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_231, out edx, out esi_233, out edi_234)
// DataOut: bl cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:<invalid> esi:ecx ecx:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001D2D8:
	branch Mem34[fp - 0x000000EC:word32] < 0x00000000 l1001D2E5
// DataOut: bl cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001D2DF:
	eax_14 = Mem34[fp - 0x000000D8:word32]
// DataOut: bl cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001D110:
	bl_122 = 0x01
// DataOut: bl cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000FC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:0x00 esi:ecx -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001D2E3:
	Mem92[eax_14:byte] = bl_122
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001D2E5:
	word32 ecx_64
	return fn1002F420(Mem34[fp - 0x000000EC:word32], Mem34[fp - 0x00000008:word32] ^ fp - 0x000000F0, edx, Mem34[fp - 0x000000F4:word32], ebp_115, Mem34[fp - 0x000000F8:word32], Mem34[fp - 0x000000FC:word32], es, ds, out ecx_64)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> bl:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001D0D8_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> bl:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -260(fp):<invalid> -256(fp):<invalid> -252(fp):edi -248(fp):esi -244(fp):ebx -236(fp):<invalid> -216(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1001D863(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn1001D863_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32)

l1001D863:
	word32 ebx_112 = ecx
	branch Mem0[0x10031000:word32] <=u 0x00000005 l1001D8AA
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32)

l1001D871:
	word32 edx_63
	word32 eax_64 = fn1000C54F(0x10031000, 0x00000000, 0x00004000, out edx_63)
	byte al_65 = (byte) eax_64
	branch al_65 == 0x00 l1001D8AA
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1001D8AA:
	Mem53[ecx + 0x00000008:word32] = Mem0[ecx + 0x00000008:word32] & 0x00000000
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx ecx:0x10031000 eax:<invalid> al:<invalid> edx:<invalid> -20(fp):0x00000000 -16(fp):0x00004000 -12(fp):edi -8(fp):esi -4(fp):ebx

l1001D886:
	word32 esp_75
	byte SCZO_76
	word32 ebx_77
	word32 esi_78
	word32 edi_79
	word32 ecx_80
	byte CZ_81
	byte al_82
	byte SZO_83
	byte C_84
	byte Z_85
	word32 eax_86
	word32 edx_87
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 24)
		uses: al_65,C_69,CZ_4,dwLoc04_7,dwLoc08_10,dwLoc0C_13,dwLoc10_72,dwLoc14_74,dwLoc18,dwLoc1C,eax_64,ebx_15,ecx_62,edi,edx_63,esi_70,esp_73,SCZO_3,SZO_67,Z_68
		defs: al_82,C_84,CZ_81,eax_86,ebx_77,ecx_80,edi_79,edx_87,esi_78,esp_75,SCZO_76,SZO_83,Z_85
	Mem95[ebx_77 + 0x00000018:word32] = Mem0[esi_78:word32]
	Mem99[ebx_77 + 0x0000001C:word32] = Mem95[esi_78 + 0x00000004:word32]
	Mem103[ebx_77 + 0x00000020:word32] = Mem99[esi_78 + 0x00000008:word32]
	Mem107[ebx_77 + 0x00000024:word32] = Mem103[esi_78 + 0x0000000C:word32]
	word32 esp_110
	byte SCZO_111
	word32 esi_113
	word32 edi_114
	word32 ecx_115
	byte CZ_116
	byte al_117
	byte SZO_118
	byte C_119
	byte Z_120
	word32 eax_121
	word32 edx_122
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 32)
		uses: al_82,C_84,CZ_81,dwLoc04_7,dwLoc08_10,dwLoc0C_13,dwLoc10_72,dwLoc14_74,dwLoc18_91,dwLoc1C_93,eax_88,ebx_77,ecx_80,edi_109,edx_87,esi_108,esp_92,SCZO_76,SZO_83,Z_85
		defs: al_117,C_119,CZ_116,eax_121,ebx_112,ecx_115,edi_114,edx_122,esi_113,esp_110,SCZO_111,SZO_118,Z_120
	Mem123[ebx_112 + 0x00000004:byte] = 0x01
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx ecx:0x10031000 eax:<invalid> al:<invalid> edx:<invalid> -20(fp):0x00000000 -16(fp):0x00004000 -12(fp):edi -8(fp):esi -4(fp):ebx

l1001D8AE:
	Mem41[ebx_112:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebx:ecx ecx:<invalid> esi:0x10031018 eax:<invalid> edi:ecx + 0x00000028 al:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1001D863_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edi:<invalid> al:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn1001D8B8(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx di dil eax ebx edi esi esp rax rbx rdi rsi rsp si sil sp spl
// Preserved:
fn1001D8B8_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001D8B8:
	word32 ebx_15 = ecx
	branch Mem0[0x10031000:word32] <=u 0x00000005 l1001D8EA
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001D8EA:
	Mem89[ecx + 0x00000008:word32] = Mem0[ecx + 0x00000008:word32] & 0x00000000
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx -12(fp):edi -8(fp):esi -4(fp):ebx

l1001D8C6:
	word32 esp_45
	byte SCZO_46
	word32 ebx_47
	word32 esi_48
	word32 edi_49
	word32 ecx_50
	byte CZ_51
	word32 eax_52
	byte SZO_53
	byte C_54
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 24)
		uses: C,CZ_4,dwLoc04_7,dwLoc08_10,dwLoc0C_13,dwLoc10_37,dwLoc14_39,dwLoc18,dwLoc1C,eax,ebx_15,ecx,edi,esi_35,esp_38,SCZO_3,SZO
		defs: C_54,CZ_51,eax_52,ebx_47,ecx_50,edi_49,esi_48,esp_45,SCZO_46,SZO_53
	Mem62[ebx_47 + 0x00000018:word32] = Mem0[esi_48:word32]
	Mem66[ebx_47 + 0x0000001C:word32] = Mem62[esi_48 + 0x00000004:word32]
	Mem70[ebx_47 + 0x00000020:word32] = Mem66[esi_48 + 0x00000008:word32]
	Mem74[ebx_47 + 0x00000024:word32] = Mem70[esi_48 + 0x0000000C:word32]
	word32 esp_77
	byte SCZO_78
	word32 esi_80
	word32 edi_81
	word32 ecx_82
	byte CZ_83
	word32 eax_84
	byte SZO_85
	byte C_86
	call api-ms-win-eventing-provider-l1-1-0.dll!EventActivityIdControl (retsize: 4; depth: 32)
		uses: C_54,CZ_51,dwLoc04_7,dwLoc08_10,dwLoc0C_13,dwLoc10_37,dwLoc14_39,dwLoc18_58,dwLoc1C_60,eax_55,ebx_47,ecx_50,edi_76,esi_75,esp_59,SCZO_46,SZO_53
		defs: C_86,CZ_83,eax_84,ebx_79,ecx_82,edi_81,esi_80,esp_77,SCZO_78,SZO_85
	Mem87[ebx_15 + 0x00000004:byte] = 0x01
// DataOut: ebx esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C ebx:ecx -12(fp):edi -8(fp):esi -4(fp):ebx

l1001D8EE:
	Mem32[ebx_15:word32] = 0x00000001
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebx:ecx esi:ecx + 0x00000018 eax:<invalid> edi:ecx + 0x00000028 -20(fp):0x00000003 -16(fp):ecx + 0x00000008 -12(fp):edi -8(fp):esi -4(fp):ebx

fn1001D8B8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> edi:<invalid> -20(fp):0x00000003 -16(fp):ecx + 0x00000008 -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn1001D989(word32 ecx, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx di dil eax ebp ebx edi esi esp rax rbp rbx rdi rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0004(32)
fn1001D989_entry:
	*esiOut = esi
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l1001D989:
	word32 esp_11 = fp - 0x0000000C
	word32 ebx_16 = Mem0[ecx:word32]
	branch ebx_16 == 0x00000000 l1001D9AF
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32)

l1001D998:
	word32 eax_43 = GetLastError()
	fn1001DFDA(ebx_16)
	SetLastError(eax_43)
	word32 esi_50
	*esiOut = ebx_16
	esp_11 = fp - 0x00000010
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 ebx:<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Stack +0004(32)

l1001D9AF:
	Mem31[ecx:word32] = dwArg04
	word32 esp_33 = esp_11 + 0x00000004
	word32 edi_32
	*ediOut = Mem31[esp_11:word32]
	word32 ebp_36
	*ebpOut = Mem31[esp_33 + 0x00000004:word32]
	return Mem31[esp_33:word32]
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):ebx -4(fp):ebp

fn1001D989_exit:
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):ebx -4(fp):ebp



void fn1001D9BA(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi
fn1001D9BA_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001D9BA:
	word32 esi_18 = ecx
	word32 eax_10 = Mem0[ecx + 0x00000024:word32]
	branch eax_10 >= 0x00000000 l1001D9CE
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001D9C6:
	esi_18 = fn10011080(edx, ebx, ecx, es, ds, eax_10 * 0x00000002)
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx eax:<invalid> -4(fp):esi
// LocalsOut: Local -0004(32)

l1001D9CE:
	word32 ecx_20 = esi_18 + 0x0000000C
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi

l1001D9D2_thunk_fn1000F23B:
	word32 edx_27
	word32 ebp_28
	fn1000F23B(ecx_20, ebx, ebp, esi, edi, es, ds, out edx_27, out ebp_28)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> esi:esi eax:<invalid> ecx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi

fn1001D9BA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn1001DCB9(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1001DCB9_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001DCB9:
	word32 eax_27
	word32 edx_14 = Mem0[ecx + 0x00000004:word32]
	*edxOut = edx_14
	branch dwArg04 <u edx_14 l1001DCD0
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001DCD0:
	branch dwArg04 == edx_14 - 0x00000001 l1001DCF8
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1001DCD8:
	word32 ecx_57 = (dwArg04 << 0x00000004) + Mem0[ecx:word32]
	word32 edx_59 = (edx_14 - dwArg04 << 0x00000004) - 0x00000010
	*edxOut = edx_59
	memmove(ecx_57, ecx_57 + 0x00000010, edx_59)
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001DCF8:
	Mem50[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] - 0x00000001
	eax_27 = 0x00000000
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:<invalid> eax:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001DCC9:
	eax_27 = 0x80028CA1
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001DCFD:
	return eax_27
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:<invalid> eax:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1001DCB9_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> eax:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



void fn1001DD02(word32 ecx, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax dh dl dx eax edx esi rax rdx rsi si sil
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(16)
fn1001DD02_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(16)

l1001DD02:
	fn1000F489(ecx)
	word32 eax_10 = 0x00000000
	branch Mem0[ecx + 0x00000004:word32] <=u 0x00000000 l1001DD30
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(16)

l1001DD13:
// DataOut: eax ecx si
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0x00000000 edx:<invalid> ax:0x0000 -4(fp):ebp
// LocalsOut: fp(32)

l1001DD19:
	word32 edx_49 = Mem0[ecx:word32]
	branch Mem0[edx_49 + eax_10 * 0x00000002:word16] != wArg04 l1001DD28
// DataOut: eax ecx edx si
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> si:<invalid> edx:<invalid> ax:<invalid> -16(fp):0x00000020 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001DD21:
	Mem68[edx_49 + eax_10 * 0x00000002:word16] = 0x0020
// DataOut: eax ecx si
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> si:<invalid> edx:<invalid> ax:<invalid> -16(fp):0x00000020 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001DD28:
	eax_10 = eax_10 + 0x00000001
	branch eax_10 <u Mem0[ecx + 0x00000004:word32] l1001DD19
// DataOut: eax ecx si
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> si:<invalid> edx:<invalid> ax:<invalid> -16(fp):0x00000020 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001DD2E:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> si:<invalid> edx:<invalid> ax:<invalid> -16(fp):0x00000020 -12(fp):edi -8(fp):esi -4(fp):ebp

l1001DD30:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> si:<invalid> edx:<invalid> esi:esi ax:<invalid> -16(fp):0x00000020 -12(fp):edi -8(fp):esi -4(fp):ebp

fn1001DD02_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> si:<invalid> edx:<invalid> esi:esi ax:<invalid> -16(fp):0x00000020 -12(fp):edi -8(fp):esi -4(fp):ebp



void fn1001DD34(word32 ebp, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1001DD34_entry:
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001DD34:
	word32 eax_17 = Mem0[dwArg04:word32]
	branch eax_17 == 0x00000000 l1001DD8C
// DataOut: eax ebp edi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001DD47:
	branch Mem0[eax_17:word16] == 0x0000 l1001DD8C
// DataOut: ebp edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> -28(fp):edi -24(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1001DD8C:
	word32 edx_59
	fn1000F78A(dwArg04, fp - 0x00000004, out edx_59)
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 -28(fp):edi -24(fp):esi -4(fp):ebp

l1001DD4E:
	word32 edx_83
	branch fn1000F78A(fp - 0x00000010, fp - 0x00000004, out edx_83) < 0x00000000 l1001DD82
// DataOut: ebp edi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 -28(fp):edi -24(fp):esi -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001DD6D:
	Mem98[fp - 0x00000020:word32] = fn10015369(fp - 0x00000010)
	Mem101[fp - 0x00000024:word32] = Mem98[fp - 0x00000010:word32]
	word32 edx_104
	fn1001DFFF(dwArg04, dwArg00, dwArg04, out edx_104)
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ebx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):fp + 0x0000000C -32(fp):0x00000000 -28(fp):edi -24(fp):esi -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1001DD82:
	fn1000F2EE(fp - 0x00000010)
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> ebx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1001DD9D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> ebx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn1001DD34_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> ebx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn1001DDA5(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1001DDA5_entry:
// DataOut: cs ds ecx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001DDA5:
	word32 esi_36
	Mem20[dwArg04:word32] = 0x00000000
	word32 esi_22 = Mem20[ecx:word32]
	branch esi_22 == 0x00000000 l1001DDF3
// DataOut: cs ds ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(16)

l1001DDF3:
	esi_36 = 0x80070490
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0018(16)

l1001DDBD:
	word32 edx_55
	word32 eax_56 = fn1000F30D(fp - 0x00000010, esi_22, fn10015369(ecx), out edx_55)
	esi_36 = eax_56
	branch eax_56 < 0x00000000 l1001DDE9
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0018(16)

l1001DDDB:
	Mem70[dwArg04:word32] = 0x00000000
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0018(16)

l1001DDE9:
	fn1000F2EE(fp - 0x00000010)
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0018(16)

l1001DDF8:
	return esi_36
// DataOut: cs ds eax es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:0x00000000 esi:<invalid> ecx:fp - 0x00000010 edx:<invalid> eax:<invalid> ax:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn1001DDA5_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx esi:esi ecx:fp - 0x00000010 eax:<invalid> edx:<invalid> ax:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn1001DE03(word32 ecx, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ecx edi esi esp
// Stack args: Stack +0008(32) Stack +000C(32)
fn1001DE03_entry:
// DataOut: bl bx cs ds ebx ecx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l1001DE03:
	word32 eax_30 = RegOpenKeyExW(0x80000002, dwArg08, 0x00000000, 0x00020019, fp - 0x00000008)
	word32 esi_32 = eax_30
	word16 si_33 = (word16) eax_30
	byte S_35 = cond(eax_30)
	branch eax_30 <= 0x00000000 l1001DE37
// DataOut: bl bx cs ds ebx edi edx es esi fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(16) Local -001C(32) Stack +000C(32)

l1001DE2C:
	word32 esi_71 = (word32) si_33
	esi_32 = esi_71 | 0x80070000
	S_35 = cond(esi_71 | 0x80070000) (alias)
// DataOut: bl bx cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -36(fp):0x80000002 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00020019 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(16) Local -001C(32) Stack +000C(32)

l1001DE37:
	branch S_35 l1001DE51
// DataOut: bl bx cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -36(fp):0x80000002 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00020019 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(16) Local -001C(32) Stack +000C(32)

l1001DE39:
	esi_32 = fn1001DE5B(ecx, ecx, dwArg0C)
	RegCloseKey(ecx)
// DataOut: bl bx cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -36(fp):0x80000002 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00020019 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(16)

l1001DE51:
	return esi_32
// DataOut: bl bx cs ds eax ebx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -36(fp):0x80000002 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

fn1001DE03_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> -36(fp):0x80000002 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp



word32 fn1001DE5B(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001DE5B_entry:
// DataOut: bx cs ds ecx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(0) Stack +0004(32) Stack +0008(32)

l1001DE5B:
	word32 eax_41 = RegQueryValueExW(dwArg04, dwArg08, 0x00000000, fp - 0x0000000C, 0x00000000, fp - 0x00000008)
	word32 edi_111 = 0x00000000
	word32 ebx_139 = 0x00000000
	word32 esi_102 = eax_41
	word16 si_44 = (word16) eax_41
	byte S_335 = cond(eax_41)
	branch eax_41 <= 0x00000000 l1001DE99
// DataOut: cs ds ebx edi edx es esi fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DE8E:
	word32 esi_330 = (word32) si_44
	esi_102 = esi_330 | 0x80070000
	S_335 = cond(esi_330 | 0x80070000) (alias)
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DE99:
	branch S_335 l1001DFC8
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DE9F:
	branch dwLoc0C == 0x00000001 l1001DEAE
// DataOut: al cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEA8:
	branch dwLoc0C != 0x00000002 l1001DEB6
// DataOut: al cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEAE:
	branch 0x00000000 == 0x00000000 l1001DEB6
// DataOut: al cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEB2:
	branch 0x00 == 0x00 l1001DEBB
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEB6:
	esi_102 = 0x8007000D
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEBB:
	branch esi_102 < 0x00000000 l1001DFC8
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEC3:
	word32 eax_109 = CoTaskMemAlloc(0x00000000)
	edi_111 = eax_109
	esi_102 = (0x00000000 - (-eax_109 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch eax_109 == 0x00000000 l1001DF8C
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16) Stack +0004(32) Stack +0008(32)

l1001DEE6:
	word32 eax_214 = RegQueryValueExW(dwArg04, dwArg08, 0x00000000, fp - 0x0000000C, eax_109, fp - 0x00000008)
	esi_102 = eax_214
	word16 si_217 = (word16) eax_214
	byte S_220 = cond(eax_214)
	branch eax_214 <= 0x00000000 l1001DF0E
// DataOut: cs ds edi edx es esi fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF03:
	word32 esi_306 = (word32) si_217
	esi_102 = esi_306 | 0x80070000
	S_220 = cond(esi_306 | 0x80070000) (alias)
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF0E:
	branch S_220 l1001DFC8
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF14:
	ebx_139 = 0xFFFFFFFF
	branch dwLoc0C != 0x00000002 l1001DF8C
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF20:
	word32 eax_244 = ExpandEnvironmentStringsW(eax_109, 0x00000000, 0x00000000)
	branch eax_244 == 0x00000000 l1001DF8C
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -0018(32) Local -001C(16) Local -0020(16)

l1001DF32:
	word32 eax_255 = CoTaskMemAlloc(eax_244 * 0x00000002)
	esi_102 = (0x00000000 - (-eax_255 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch eax_255 == 0x00000000 l1001DF8C
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(16) Local -0020(16)

l1001DF55:
	word32 eax_278 = ExpandEnvironmentStringsW(eax_109, eax_255, eax_244)
	branch eax_278 == 0x00000000 l1001DF7E
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(16) Local -0020(16)

l1001DF68:
	branch eax_278 >u eax_244 l1001DF7E
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(16) Local -0020(16)

l1001DF7E:
	CoTaskMemFree(eax_255)
	esi_102 = 0x8007007A
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF8C:
	branch esi_102 < 0x00000000 l1001DFC8
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF6C:
	CoTaskMemFree(eax_109)
	esi_102 = 0x00000000
	edi_111 = eax_255
	ebx_139 = eax_278 - 0x00000001
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DF90:
	branch Mem0[edi_111 + ebx_139 * 0x00000002:word16] != 0x0000 l1001DFC3
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DFC3:
	esi_102 = 0x8007000D
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(16) Local -0020(16)

l1001DF98:
	fn1000F2EE(ecx)
	branch edi_111 == 0x00000000 l1001DFBD
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DFA4:
	word32 eax_159 = ebx_139 + 0x00000001
	branch eax_159 == 0x00000000 l1001DFBD
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:ecx ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16) Local -0020(16)

l1001DFAB:
	Mem166[ecx:word32] = edi_111
	Mem167[ecx + 0x00000008:word32] = eax_159
	Mem168[ecx + 0x00000004:word32] = ebx_139
	Mem173[edi_111 - 0x00000002 + eax_159 * 0x00000002:word16] = 0x0000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:ecx ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(16) Local -0020(16)

l1001DFBD:
	edi_111 = 0x00000000
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(16) Local -0020(16)

l1001DFC8:
	CoTaskMemFree(edi_111)
	return esi_102
// DataOut: bl bx cs ds eax edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

fn1001DE5B_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> ebx:ebx esi:esi -60(fp):<invalid> -56(fp):<invalid> -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp



void fn1001DFDA(PTP_TIMER tArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1001DFDA_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001DFDA:
	SetThreadpoolTimer(tArg04, 0x00000000, 0x00000000, 0x00000000)
	WaitForThreadpoolTimerCallbacks(tArg04, 0x00000001)
	CloseThreadpoolTimer(tArg04)
	return
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1001DFDA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:0x00000000 -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):0x00000001 -4(fp):ebp



word32 fn1001DFFF(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: ebp ebx ecx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001DFFF_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l1001DFFF:
	word32 ebx_17 = 0x00000000
	branch dwArg04 == 0x00000000 l1001E044
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32)

l1001E011:
	fn1000F489(ecx)
	word32 edx_59
	word32 eax_60 = fn1000F3A7(ecx, 0x00000000, Mem0[ecx + 0x00000004:word32] + dwArg08, out edx_59)
	ebx_17 = eax_60
	branch eax_60 < 0x00000000 l1001E044
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1001E02A:
	word32 edx_75
	*edxOut = fn1001049F(Mem0[ecx:word32] + Mem0[ecx + 0x00000004:word32] * 0x00000002, dwArg08 + 0x00000001, dwArg04, dwArg08)
	Mem79[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] + dwArg08
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001E044:
	return ebx_17
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn1001DFFF_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx eax:<invalid> esi:esi ecx:ecx edx:<invalid> ax:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



word32 fn1001E04E(word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edi edx es fs gs ss
// LiveOut: eax ebx edi esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001E04E_entry:
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E04E:
	word32 edi_208 = edi
	word32 ebx_17 = dwArg04
	word32 esp_207 = fp - 0x00000024
	word32 esi_215 = Mem0[dwArg04:word32]
	branch esi_215 == 0x00000000 l1001E085
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001E072:
	Mem184[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_192
	word32 edi_193
	word32 ebp_194
	byte SCZO_195
	word32 eax_196
	byte SZO_197
	byte C_198
	word32 ebx_199
	word32 esi_200
	word32 edx_201
	word32 ecx_202
	byte Z_203
	byte S_204
	selector es_205
	selector ds_206
	call Mem184[0x100323BC:word32] (retsize: 4; depth: 44)
		uses: C_186,ds,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_189,eax_187,ebp_7,ebx_17,ecx_191,edi_3,edx,es,esi_190,esp_188,S,SCZO,SZO_185,Z_29
		defs: C_198,ds_206,eax_196,ebp_194,ebx_199,ecx_202,edi_193,edx_201,es_205,esi_200,esp_192,S_204,SCZO_195,SZO_197,Z_203
	word32 ebp_209
	byte SCZO_210
	word32 eax_211
	byte SZO_212
	byte C_213
	word32 ecx_217
	byte Z_218
	byte S_219
	call esi_200 (retsize: 4; depth: 4)
		uses: C_198,ds_206,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_189,eax_196,ebp_194,ebx_199,ecx_202,edi_193,edx_201,es_205,esi_200,esp_192,S_204,SCZO_195,SZO_197,Z_203
		defs: C_213,ds_221,eax_211,ebp_209,ebx_214,ecx_217,edi_208,edx_216,es_220,esi_215,esp_207,S_219,SCZO_210,SZO_212,Z_218
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E085:
	word32 esi_125
	Mem47[ebx_17:word32] = Mem0[ebx_17:word32] & 0x00000000
	word32 esp_50 = esp_207 - 0x00000004
	Mem51[esp_50:word32] = 0x10002F5C
	Mem53[esp_50 - 0x00000004:word32] = 0x00000074
	word32 ebx_54
	word32 esi_56
	word32 edi_57
	word32 ebp_138
	word32 eax_58 = fn1002FF64(ebx_17, esi_215, edi_208, out ebx_54, out ebp_138, out esi_56, out edi_57)
	word32 esp_118 = esp_50 + 0x00000004
	branch eax_58 != 0x00000000 l1001E0A1
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E0A1:
	word32 edx_96
	word32 eax_97 = fn10022BB1(eax_58, edx, es, ds, out edx_96)
	word32 ecx_98 = Mem53[ebp_138 + 0x0000000C:word32]
	word32 eax_100 = Mem53[ebp_138 - 0x0000000C:word32]
	Mem101[ebp_138 - 0x00000008:word32] = eax_97
	Mem104[esp_50:word32] = (word32) Mem101[ecx_98:byte]
	Mem107[esp_50 - 0x00000004:word32] = Mem104[eax_100:word32]
	Mem112[esp_50 - 0x00000008:word32] = Mem107[Mem107[ebp_138 - 0x00000010:word32]:word32]
	word32 edi_116
	word32 ebx_115
	word32 eax_117 = fn10022C3F(eax_97, edx_96, ebp_138, es, ds, dwArg00, dwArg04, bArg08, out ebx_115, out edi_116)
	esp_118 = esp_50 + 0x00000004
	word32 esi_119 = eax_117
	branch eax_117 >= 0x00000000 l1001E0D5
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E0D5:
	branch edi_116 == 0x00000000 l1001E0E9
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E0D9:
	Mem150[esp_50:word32] = edi_116
	word32 esp_153
	word32 edi_154
	word32 ebp_155
	byte SCZO_156
	word32 eax_157
	byte SZO_158
	byte C_159
	word32 ebx_160
	word32 esi_161
	word32 edx_162
	word32 ecx_163
	byte Z_164
	byte S_165
	selector es_166
	selector ds_167
	call Mem150[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_129,ds_37,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_36,eax_148,ebp_55,ebx_115,ecx_152,edi_116,edx_96,es_38,esi_151,esp_149,S_121,SCZO_40,SZO_127,Z_128
		defs: C_159,ds_167,eax_157,ebp_155,ebx_160,ecx_163,edi_154,edx_162,es_166,esi_161,esp_153,S_165,SCZO_156,SZO_158,Z_164
	byte SCZO_171
	word32 eax_172
	byte SZO_173
	byte C_174
	word32 edx_177
	word32 ecx_178
	byte Z_179
	byte S_180
	call esi_161 (retsize: 4; depth: 4)
		uses: C_159,ds_167,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_36,eax_157,ebp_155,ebx_160,ecx_163,edi_154,edx_162,es_166,esi_161,esp_153,S_165,SCZO_156,SZO_158,Z_164
		defs: C_174,ds_182,eax_172,ebp_170,ebx_175,ecx_178,edi_169,edx_177,es_181,esi_176,esp_168,S_180,SCZO_171,SZO_173,Z_179
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E0E9:
	Mem141[ebx_115:word32] = edi_116
	word32 esi_143
	fn1000C640(ebp_138 - 0x00000008, ebx_115, esi_119, edi_116, es, ds, out edx, out esi_143)
	esi_125 = 0x00000000
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E0CB:
	fn1000C640(ebp_138 - 0x00000008, ebx_115, eax_117, edi_116, es, ds, out edx, out esi_125)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E09A:
	esi_125 = 0x8007000E
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E0F5:
	word32 esp_78 = esp_118 + 0x00000004
	word32 edi_77 = Mem53[esp_118:word32]
	*ediOut = edi_77
	word32 esi_79 = Mem53[esp_78:word32]
	*esiOut = esi_79
	word32 ebx_84 = Mem53[esp_78 + 0x00000004:word32]
	*ebxOut = ebx_84
	word32 ecx_86
	return fn1002F420(esi_125, Mem53[ebp_138 - 0x00000004:word32] ^ ebp_138, edx, ebx_84, ebp_138, esi_79, edi_77, es, ds, out ecx_86)
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001E04E_exit:
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001E10A(word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edi edx es fs gs ss
// LiveOut: eax ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001E10A_entry:
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E10A:
	word32 edi_206 = edi
	word32 ebx_17 = dwArg04
	word32 esp_205 = fp - 0x00000024
	word32 esi_213 = Mem0[dwArg04:word32]
	branch esi_213 == 0x00000000 l1001E141
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001E12E:
	Mem182[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_190
	word32 edi_191
	word32 ebp_192
	byte SCZO_193
	word32 eax_194
	byte SZO_195
	byte C_196
	word32 ebx_197
	word32 esi_198
	word32 edx_199
	word32 ecx_200
	byte Z_201
	byte S_202
	selector es_203
	selector ds_204
	call Mem182[0x100323BC:word32] (retsize: 4; depth: 44)
		uses: C_184,ds,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_187,eax_185,ebp_7,ebx_17,ecx_189,edi_3,edx,es,esi_188,esp_186,S,SCZO,SZO_183,Z_29
		defs: C_196,ds_204,eax_194,ebp_192,ebx_197,ecx_200,edi_191,edx_199,es_203,esi_198,esp_190,S_202,SCZO_193,SZO_195,Z_201
	word32 ebp_207
	byte SCZO_208
	word32 eax_209
	byte SZO_210
	byte C_211
	word32 ecx_215
	byte Z_216
	byte S_217
	call esi_198 (retsize: 4; depth: 4)
		uses: C_196,ds_204,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_187,eax_194,ebp_192,ebx_197,ecx_200,edi_191,edx_199,es_203,esi_198,esp_190,S_202,SCZO_193,SZO_195,Z_201
		defs: C_211,ds_219,eax_209,ebp_207,ebx_212,ecx_215,edi_206,edx_214,es_218,esi_213,esp_205,S_217,SCZO_208,SZO_210,Z_216
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E141:
	word32 esi_123
	Mem47[ebx_17:word32] = Mem0[ebx_17:word32] & 0x00000000
	word32 esp_50 = esp_205 - 0x00000004
	Mem51[esp_50:word32] = 0x10002F5C
	Mem53[esp_50 - 0x00000004:word32] = 0x00000044
	word32 ebx_54
	word32 esi_56
	word32 edi_57
	word32 ebp_136
	word32 eax_58 = fn1002FF64(ebx_17, esi_213, edi_206, out ebx_54, out ebp_136, out esi_56, out edi_57)
	word32 esp_116 = esp_50 + 0x00000004
	branch eax_58 != 0x00000000 l1001E15D
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E15D:
	word32 edx_95
	word32 ebx_135
	word32 eax_97 = fn1002D8F1(eax_58, edx, es, ds, out edx_95, out ebx_135)
	word32 ecx_98 = Mem53[ebp_136 + 0x0000000C:word32]
	word32 eax_100 = Mem53[ebp_136 - 0x0000000C:word32]
	Mem101[ebp_136 - 0x00000008:word32] = eax_97
	Mem104[esp_50:word32] = Mem101[ecx_98:word32]
	Mem108[esp_50 - 0x00000004:word32] = Mem104[eax_100:word32]
	Mem112[esp_50 - 0x00000008:word32] = Mem108[Mem108[ebp_136 - 0x00000010:word32]:word32]
	word32 eax_115 = fn1002D966(eax_97, edx_95, ebp_136, es, ds, dwArg00, dwArg04, dwArg08)
	word32 edi_133 = eax_97
	esp_116 = esp_50 + 0x00000004
	word32 esi_117 = eax_115
	branch eax_115 >= 0x00000000 l1001E18F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E18F:
	branch eax_97 == 0x00000000 l1001E1A3
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E193:
	Mem148[esp_50:word32] = eax_97
	word32 esp_151
	word32 edi_152
	word32 ebp_153
	byte SCZO_154
	word32 eax_155
	byte SZO_156
	byte C_157
	word32 ebx_158
	word32 esi_159
	word32 edx_160
	word32 ecx_161
	byte Z_162
	byte S_163
	selector es_164
	selector ds_165
	call Mem148[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_127,ds_37,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_36,eax_146,ebp_55,ebx_96,ecx_150,edi_99,edx_95,es_38,esi_149,esp_147,S_119,SCZO_40,SZO_125,Z_126
		defs: C_157,ds_165,eax_155,ebp_153,ebx_158,ecx_161,edi_152,edx_160,es_164,esi_159,esp_151,S_163,SCZO_154,SZO_156,Z_162
	byte SCZO_169
	word32 eax_170
	byte SZO_171
	byte C_172
	word32 edx_175
	word32 ecx_176
	byte Z_177
	byte S_178
	call esi_159 (retsize: 4; depth: 4)
		uses: C_157,ds_165,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc14_27,dwLoc1C_15,dwLoc20_20,dwLoc24_22,dwLoc28_36,eax_155,ebp_153,ebx_158,ecx_161,edi_152,edx_160,es_164,esi_159,esp_151,S_163,SCZO_154,SZO_156,Z_162
		defs: C_172,ds_180,eax_170,ebp_168,ebx_173,ecx_176,edi_167,edx_175,es_179,esi_174,esp_166,S_178,SCZO_169,SZO_171,Z_177
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E1A3:
	Mem139[ebx_135:word32] = edi_133
	word32 esi_141
	fn1000C640(ebp_136 - 0x00000008, ebx_135, esi_117, edi_133, es, ds, out edx, out esi_141)
	esi_123 = 0x00000000
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E185:
	fn1000C640(ebp_136 - 0x00000008, ebx_135, eax_115, eax_97, es, ds, out edx, out esi_123)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E156:
	esi_123 = 0x8007000E
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E1AF:
	word32 esp_78 = esp_116 + 0x00000004
	word32 esi_79 = Mem53[esp_78:word32]
	*esiOut = esi_79
	word32 ebx_84 = Mem53[esp_78 + 0x00000004:word32]
	*ebxOut = ebx_84
	word32 ecx_86
	return fn1002F420(esi_123, Mem53[ebp_136 - 0x00000004:word32] ^ ebp_136, edx, ebx_84, ebp_136, esi_79, Mem53[esp_116:word32], es, ds, out ecx_86)
// DataOut: cs ds eax ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001E10A_exit:
// DataOut: eax ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001E1C4(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax edi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001E1C4_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E1C4:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_111 = fp - 0x00000014
	word32 edi_112 = dwArg04
	word32 ebx_118 = ecx
	word32 edx_26 = Mem0[dwArg04:word32]
	branch edx_26 == 0x00000000 l1001E1F5
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001E1E2:
	Mem88[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_98
	word32 edi_99
	word32 ebp_100
	word32 ecx_101
	word32 eax_102
	byte SZO_103
	byte C_104
	word32 ebx_105
	word32 esi_106
	word32 edx_107
	byte Z_108
	selector es_109
	selector ds_110
	call Mem88[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_90,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_93,eax_91,ebp_7,ebx_25,ecx_95,edi_24,edx_26,es,esi_94,esp_92,SZO_89,Z_28
		defs: C_104,ds_110,eax_102,ebp_100,ebx_105,ecx_101,edi_99,edx_107,es_109,esi_106,esp_98,SZO_103,Z_108
	word32 ebp_113
	word32 ecx_114
	word32 eax_115
	byte SZO_116
	byte C_117
	word32 esi_119
	word32 edx_120
	byte Z_121
	selector es_122
	selector ds_123
	call esi_106 (retsize: 4; depth: 4)
		uses: C_104,ds_110,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_93,eax_102,ebp_100,ebx_105,ecx_101,edi_99,edx_107,es_109,esi_106,esp_98,SZO_103,Z_108
		defs: C_117,ds_123,eax_115,ebp_113,ebx_118,ecx_114,edi_112,edx_120,es_122,esi_119,esp_111,SZO_116,Z_121
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001E1F5:
	word32 eax_35 = Mem0[ebx_118:word32]
	word32 esp_36 = esp_111 - 0x00000004
	Mem37[esp_36:word32] = edi_112
	Mem39[esp_36 - 0x00000004:word32] = 0x10004C20
	Mem41[esp_36 - 0x00000008:word32] = eax_35
	word32 esp_45
	word32 edi_46
	word32 ebp_47
	word32 ecx_48
	word32 eax_49
	byte SZO_50
	byte C_51
	word32 ebx_52
	word32 esi_53
	word32 edx_54
	byte Z_55
	selector es_56
	selector ds_57
	call Mem41[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_29,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_31,eax_35,ebp_7,ebx_33,ecx_44,edi_32,edx_26,esi_43,esp_40,SZO_27,Z_28
		defs: C_51,ds_57,eax_49,ebp_47,ebx_52,ecx_48,edi_46,edx_54,es_56,esi_53,esp_45,SZO_50,Z_55
	word32 esp_58
	word32 edi_59
	word32 ebp_60
	word32 ecx_61
	word32 eax_62
	byte SZO_63
	byte C_64
	word32 ebx_65
	word32 esi_66
	word32 edx_67
	byte Z_68
	selector es_69
	selector ds_70
	call esi_53 (retsize: 4; depth: 4)
		uses: C_51,ds_57,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_31,eax_49,ebp_47,ebx_52,ecx_48,edi_46,edx_54,es_56,esi_53,esp_45,SZO_50,Z_55
		defs: C_64,ds_70,eax_62,ebp_60,ebx_65,ecx_61,edi_59,edx_67,es_69,esi_66,esp_58,SZO_63,Z_68
	word32 edi_72 = Mem41[esp_58:word32]
	*ediOut = edi_72
	word32 ecx_81
	return fn1002F420(eax_62, eax_13 ^ fp - 0x00000004, edx_67, Mem41[esp_58 + 0x00000008:word32], ebp_60, Mem41[esp_58 + 0x00000004:word32], edi_72, es_69, ds_70, out ecx_81)
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1001E1C4_exit:
// DataOut: eax edi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn1001E21F(word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edi edx es fs gs ss
// LiveOut: eax ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1001E21F_entry:
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E21F:
	word32 edi_295 = edi
	word32 ebx_17 = dwArg04
	word32 esp_18 = fp - 0x0000001C
	word32 esi_25 = Mem0[dwArg04:word32]
	branch esi_25 == 0x00000000 l1001E258
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001E245:
	Mem271[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_279
	word32 edi_280
	word32 ebp_281
	byte SCZO_282
	word32 eax_283
	byte SZO_284
	byte C_285
	word32 ebx_286
	word32 esi_287
	word32 edx_288
	word32 ecx_289
	byte Z_290
	byte S_291
	selector es_292
	selector ds_293
	call Mem271[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: C_273,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_276,eax_274,ebp_7,ebx_17,ecx_278,edi_3,edx,es,esi_277,esp_275,S,SCZO,SZO_272,Z_28
		defs: C_285,ds_293,eax_283,ebp_281,ebx_286,ecx_289,edi_280,edx_288,es_292,esi_287,esp_279,S_291,SCZO_282,SZO_284,Z_290
	word32 ebp_296
	byte SCZO_297
	word32 eax_298
	byte SZO_299
	byte C_300
	word32 ecx_304
	byte Z_305
	byte S_306
	call esi_287 (retsize: 4; depth: 4)
		uses: C_285,ds_293,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_276,eax_283,ebp_281,ebx_286,ecx_289,edi_280,edx_288,es_292,esi_287,esp_279,S_291,SCZO_282,SZO_284,Z_290
		defs: C_300,ds_308,eax_298,ebp_296,ebx_301,ecx_304,edi_295,edx_303,es_307,esi_302,esp_294,S_306,SCZO_297,SZO_299,Z_305
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E258:
	word32 ebx_108
	Mem46[ebx_17:word32] = Mem0[ebx_17:word32] & 0x00000000
	word32 esp_49 = esp_18 - 0x00000004
	Mem50[esp_49:word32] = 0x10002F5C
	Mem52[esp_49 - 0x00000004:word32] = 0x00000048
	word32 ebx_53
	word32 esi_55
	word32 edi_126
	word32 ebp_124
	word32 eax_57 = fn1002FF64(ebx_17, esi_25, edi_295, out ebx_53, out ebp_124, out esi_55, out edi_126)
	word32 esp_127 = esp_49 + 0x00000004
	branch eax_57 != 0x00000000 l1001E274
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E274:
	Mem92[esp_49:word32] = edi_126
	word32 eax_95 = fn1001E77A(eax_57, edx, es, ds, out edx)
	Mem101[esp_49 - 0x00000004:word32] = Mem92[Mem92[ebp_124 - 0x00000008:word32]:word32]
	Mem104[esp_49 - 0x00000008:word32] = Mem101[ebp_124 - 0x0000000C:word32]
	word32 eax_106 = fn10015C9A(eax_95, dwArg00, dwArg04)
	word32 edi_174 = eax_95
	word32 esp_107 = esp_49
	ebx_108 = eax_106
	branch eax_106 >= 0x00000000 l1001E2A9
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2A9:
	branch eax_95 == 0x00000000 l1001E2BD
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2AD:
	Mem237[esp_49 - 0x00000004:word32] = eax_95
	word32 esp_240
	word32 edi_241
	word32 ebp_242
	byte SCZO_243
	word32 eax_244
	byte SZO_245
	byte C_246
	word32 ebx_247
	word32 esi_248
	word32 edx_249
	word32 ecx_250
	byte Z_251
	byte S_252
	selector es_253
	selector ds_254
	call Mem237[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_168,ds_36,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_35,eax_235,ebp_54,ebx_108,ecx_239,edi_96,edx_94,es_37,esi_238,esp_236,S_110,SCZO_40,SZO_166,Z_167
		defs: C_246,ds_254,eax_244,ebp_242,ebx_247,ecx_250,edi_241,edx_249,es_253,esi_248,esp_240,S_252,SCZO_243,SZO_245,Z_251
	byte SCZO_258
	word32 eax_259
	byte SZO_260
	byte C_261
	word32 ebx_262
	word32 esi_263
	word32 ecx_265
	byte Z_266
	byte S_267
	call esi_248 (retsize: 4; depth: 4)
		uses: C_246,ds_254,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_35,eax_244,ebp_242,ebx_247,ecx_250,edi_241,edx_249,es_253,esi_248,esp_240,S_252,SCZO_243,SZO_245,Z_251
		defs: C_261,ds_269,eax_259,ebp_257,ebx_262,ecx_265,edi_256,edx_264,es_268,esi_263,esp_255,S_267,SCZO_258,SZO_260,Z_266
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2BD:
	Mem181[Mem104[ebp_124 - 0x00000010:word32]:word32] = edi_174
	branch edi_174 == 0x00000000 l1001E2D6
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2C6:
	word32 esp_201 = esp_107 - 0x00000004
	Mem202[esp_201:word32] = edi_174
	word32 esp_205
	word32 edi_206
	word32 ebp_207
	byte SCZO_208
	word32 eax_209
	byte SZO_210
	byte C_211
	word32 ebx_212
	word32 esi_213
	word32 edx_214
	word32 ecx_215
	byte Z_216
	byte S_217
	selector es_218
	selector ds_219
	call Mem202[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_184,ds_169,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_35,eax_200,ebp_178,ebx_176,ecx_204,edi_174,edx_172,es_170,esi_203,esp_201,S_171,SCZO_173,SZO_182,Z_183
		defs: C_211,ds_219,eax_209,ebp_207,ebx_212,ecx_215,edi_206,edx_214,es_218,esi_213,esp_205,S_217,SCZO_208,SZO_210,Z_216
	word32 edi_221
	byte SCZO_223
	word32 eax_224
	byte SZO_225
	byte C_226
	word32 ebx_227
	word32 esi_228
	word32 ecx_230
	byte Z_231
	byte S_232
	call esi_213 (retsize: 4; depth: 4)
		uses: C_211,ds_219,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_35,eax_209,ebp_207,ebx_212,ecx_215,edi_206,edx_214,es_218,esi_213,esp_205,S_217,SCZO_208,SZO_210,Z_216
		defs: C_226,ds_234,eax_224,ebp_222,ebx_227,ecx_230,edi_221,edx_229,es_233,esi_228,esp_220,S_232,SCZO_223,SZO_225,Z_231
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2D6:
	ebx_108 = 0x00000000
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E293:
	branch eax_95 == 0x00000000 l1001E2D8
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E297:
	Mem133[esp_49 - 0x00000004:word32] = eax_95
	word32 esp_136
	word32 edi_137
	word32 ebp_138
	byte SCZO_139
	word32 eax_140
	byte SZO_141
	byte C_142
	word32 ebx_143
	word32 esi_144
	word32 edx_145
	word32 ecx_146
	byte Z_147
	byte S_148
	selector es_149
	selector ds_150
	call Mem133[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_130,ds_36,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_35,eax_131,ebp_54,ebx_108,ecx_135,edi_96,edx_94,es_37,esi_134,esp_132,S_110,SCZO_40,SZO_128,Z_129
		defs: C_142,ds_150,eax_140,ebp_138,ebx_143,ecx_146,edi_137,edx_145,es_149,esi_144,esp_136,S_148,SCZO_139,SZO_141,Z_147
	word32 edi_152
	byte SCZO_154
	word32 eax_155
	byte SZO_156
	byte C_157
	word32 esi_159
	word32 ecx_161
	byte Z_162
	byte S_163
	call esi_144 (retsize: 4; depth: 4)
		uses: C_142,ds_150,dwLoc04_6,dwLoc08_12,dwLoc0C_22,dwLoc10_24,dwLoc14_26,dwLoc18_15,dwLoc1C_20,dwLoc20_35,eax_140,ebp_138,ebx_143,ecx_146,edi_137,edx_145,es_149,esi_144,esp_136,S_148,SCZO_139,SZO_141,Z_147
		defs: C_157,ds_165,eax_155,ebp_153,ebx_158,ecx_161,edi_152,edx_160,es_164,esi_159,esp_151,S_163,SCZO_154,SZO_156,Z_162
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2D8:
	edi_126 = Mem104[esp_107:word32]
	esp_127 = esp_107 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E26D:
	ebx_108 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E2D9:
	word32 ebx_82 = Mem52[esp_127 + 0x00000004:word32]
	*ebxOut = ebx_82
	word32 ecx_84
	return fn1002F420(ebx_108, Mem52[ebp_124 - 0x00000004:word32] ^ ebp_124, edx, ebx_82, ebp_124, Mem52[esp_127:word32], edi_126, es, ds, out ecx_84)
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn1001E21F_exit:
// DataOut: eax ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



word32 fn1001E2ED(word32 ecx, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi es fs gs ss
// LiveOut: eax ebx edi esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001E2ED_entry:
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E2ED:
	word32 edi_189 = edi
	word32 ebx_195 = dwArg04
	word32 esp_188 = fp - 0x00000014
	word32 edx_160 = Mem0[dwArg04:word32]
	branch edx_160 == 0x00000000 l1001E324
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32)

l1001E30E:
	Mem167[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_175
	word32 edi_176
	word32 ebp_177
	word32 ecx_178
	word32 eax_179
	byte SZO_180
	byte C_181
	word32 ebx_182
	word32 esi_183
	word32 edx_184
	byte Z_185
	selector es_186
	selector ds_187
	call Mem167[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_169,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_26,dwLoc10_19,dwLoc14_24,dwLoc18_172,eax_170,ebp_7,ebx_21,ecx_174,edi_3,edx_27,es,esi_173,esp_171,SZO_168,Z_29
		defs: C_181,ds_187,eax_179,ebp_177,ebx_182,ecx_178,edi_176,edx_184,es_186,esi_183,esp_175,SZO_180,Z_185
	word32 ebp_190
	word32 ecx_191
	word32 eax_192
	byte SZO_193
	byte C_194
	word32 esi_196
	byte Z_198
	call esi_183 (retsize: 4; depth: 4)
		uses: C_181,ds_187,dwLoc04_6,dwLoc08_16,dwLoc0C_26,dwLoc10_19,dwLoc14_24,dwLoc18_172,eax_179,ebp_177,ebx_182,ecx_178,edi_176,edx_184,es_186,esi_183,esp_175,SZO_180,Z_185
		defs: C_194,ds_200,eax_192,ebp_190,ebx_195,ecx_191,edi_189,edx_197,es_199,esi_196,esp_188,SZO_193,Z_198
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx edx:<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001E324:
	word32 ebx_158
	Mem43[ebx_195:word32] = Mem0[ebx_195:word32] & 0x00000000
	word32 esp_46 = esp_188 - 0x00000004
	Mem47[esp_46:word32] = 0x10002F5C
	Mem49[esp_46 - 0x00000004:word32] = 0x00000024
	word32 ebx_50
	word32 esi_52
	word32 edi_164
	word32 ebp_153
	word32 eax_54 = fn1002FF64(ebx_195, ecx, edi_189, out ebx_50, out ebp_153, out esi_52, out edi_164)
	word32 esp_165 = esp_46 + 0x00000004
	branch eax_54 != 0x00000000 l1001E340
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx edx:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001E340:
	Mem89[esp_46:word32] = edi_164
	word32 edx_91
	word32 ebx_92
	word32 eax_93 = fn1001E7F6(eax_54, edx_160, es, ds, out edx_91, out ebx_92)
	word32 ecx_94 = Mem89[esi_52:word32]
	Mem97[esp_46 - 0x00000004:word32] = ebx_92
	Mem99[esp_46 - 0x00000008:word32] = 0x10004BC0
	Mem101[esp_46 - 0x0000000C:word32] = eax_93
	Mem102[eax_93 + 0x00000020:word32] = ecx_94
	word32 esp_106
	word32 edi_107
	word32 ebp_108
	word32 ecx_109
	word32 eax_110
	byte SZO_111
	byte C_112
	word32 ebx_113
	word32 esi_114
	word32 edx_115
	byte Z_116
	selector es_117
	selector ds_118
	call Mem102[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_61,ds_35,dwLoc04_6,dwLoc08_16,dwLoc0C_26,dwLoc10_19,dwLoc14_24,dwLoc18_34,eax_93,ebp_51,ebx_92,ecx_105,edi_95,edx_91,es_36,esi_104,esp_100,SZO_59,Z_60
		defs: C_112,ds_118,eax_110,ebp_108,ebx_113,ecx_109,edi_107,edx_115,es_117,esi_114,esp_106,SZO_111,Z_116
	word32 esp_119
	word32 edi_120
	word32 ebp_121
	word32 ecx_122
	word32 eax_123
	byte SZO_124
	byte C_125
	word32 ebx_126
	word32 esi_127
	word32 edx_128
	byte Z_129
	selector es_130
	selector ds_131
	call esi_114 (retsize: 4; depth: 4)
		uses: C_112,ds_118,dwLoc04_6,dwLoc08_16,dwLoc0C_26,dwLoc10_19,dwLoc14_24,dwLoc18_34,eax_110,ebp_108,ebx_113,ecx_109,edi_107,edx_115,es_117,esi_114,esp_106,SZO_111,Z_116
		defs: C_125,ds_131,eax_123,ebp_121,ebx_126,ecx_122,edi_120,edx_128,es_130,esi_127,esp_119,SZO_124,Z_129
	Mem135[esp_119 - 0x00000004:word32] = edi_120
	word32 esp_138
	word32 edi_139
	word32 ebp_140
	word32 ecx_141
	word32 eax_142
	byte SZO_143
	byte C_144
	word32 ebx_145
	word32 esi_146
	word32 edx_147
	byte Z_148
	selector es_149
	selector ds_150
	call Mem135[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_125,ds_131,dwLoc04_6,dwLoc08_16,dwLoc0C_26,dwLoc10_19,dwLoc14_24,dwLoc18_34,eax_123,ebp_121,ebx_133,ecx_137,edi_120,edx_128,es_130,esi_136,esp_134,SZO_124,Z_129
		defs: C_144,ds_150,eax_142,ebp_140,ebx_145,ecx_141,edi_139,edx_147,es_149,esi_146,esp_138,SZO_143,Z_148
	word32 esp_151
	word32 edi_152
	word32 ecx_154
	word32 eax_155
	byte SZO_156
	byte C_157
	word32 esi_159
	byte Z_161
	call esi_146 (retsize: 4; depth: 4)
		uses: C_144,ds_150,dwLoc04_6,dwLoc08_16,dwLoc0C_26,dwLoc10_19,dwLoc14_24,dwLoc18_34,eax_142,ebp_140,ebx_145,ecx_141,edi_139,edx_147,es_149,esi_146,esp_138,SZO_143,Z_148
		defs: C_157,ds_163,eax_155,ebp_153,ebx_158,ecx_154,edi_152,edx_160,es_162,esi_159,esp_151,SZO_156,Z_161
	*ediOut = Mem135[esp_151:word32]
	esp_165 = esp_151 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001E339:
	ebx_158 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001E377:
	word32 esi_72 = Mem49[esp_165:word32]
	*esiOut = esi_72
	word32 ebx_77 = Mem49[esp_165 + 0x00000004:word32]
	*ebxOut = ebx_77
	word32 ecx_79
	return fn1002F420(ebx_158, Mem49[ebp_153 - 0x00000004:word32] ^ ebp_153, edx_160, ebx_77, ebp_153, esi_72, edi_164, es, ds, out ecx_79)
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1001E2ED_exit:
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



void fn1001E38B(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001E38B_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E38B:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_110 = fp - 0x00000014
	word32 edi_111 = dwArg04
	word32 ebx_117 = ecx
	word32 edx_26 = Mem0[dwArg04:word32]
	branch edx_26 == 0x00000000 l1001E3BC
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001E3A9:
	Mem87[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_97
	word32 edi_98
	word32 ebp_99
	word32 ecx_100
	word32 eax_101
	byte SZO_102
	byte C_103
	word32 ebx_104
	word32 esi_105
	word32 edx_106
	byte Z_107
	selector es_108
	selector ds_109
	call Mem87[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_89,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_92,eax_90,ebp_7,ebx_25,ecx_94,edi_24,edx_26,es,esi_93,esp_91,SZO_88,Z_28
		defs: C_103,ds_109,eax_101,ebp_99,ebx_104,ecx_100,edi_98,edx_106,es_108,esi_105,esp_97,SZO_102,Z_107
	word32 ebp_112
	word32 ecx_113
	word32 eax_114
	byte SZO_115
	byte C_116
	word32 esi_118
	word32 edx_119
	byte Z_120
	selector es_121
	selector ds_122
	call esi_105 (retsize: 4; depth: 4)
		uses: C_103,ds_109,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_92,eax_101,ebp_99,ebx_104,ecx_100,edi_98,edx_106,es_108,esi_105,esp_97,SZO_102,Z_107
		defs: C_116,ds_122,eax_114,ebp_112,ebx_117,ecx_113,edi_111,edx_119,es_121,esi_118,esp_110,SZO_115,Z_120
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001E3BC:
	word32 eax_35 = Mem0[ebx_117:word32]
	word32 esp_36 = esp_110 - 0x00000004
	Mem37[esp_36:word32] = edi_111
	Mem39[esp_36 - 0x00000004:word32] = 0x10004C00
	Mem41[esp_36 - 0x00000008:word32] = eax_35
	word32 esp_45
	word32 edi_46
	word32 ebp_47
	word32 ecx_48
	word32 eax_49
	byte SZO_50
	byte C_51
	word32 ebx_52
	word32 esi_53
	word32 edx_54
	byte Z_55
	selector es_56
	selector ds_57
	call Mem41[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_29,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_31,eax_35,ebp_7,ebx_33,ecx_44,edi_32,edx_26,esi_43,esp_40,SZO_27,Z_28
		defs: C_51,ds_57,eax_49,ebp_47,ebx_52,ecx_48,edi_46,edx_54,es_56,esi_53,esp_45,SZO_50,Z_55
	word32 esp_58
	word32 edi_59
	word32 ebp_60
	word32 ecx_61
	word32 eax_62
	byte SZO_63
	byte C_64
	word32 ebx_65
	word32 esi_66
	word32 edx_67
	byte Z_68
	selector es_69
	selector ds_70
	call esi_53 (retsize: 4; depth: 4)
		uses: C_51,ds_57,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_31,eax_49,ebp_47,ebx_52,ecx_48,edi_46,edx_54,es_56,esi_53,esp_45,SZO_50,Z_55
		defs: C_64,ds_70,eax_62,ebp_60,ebx_65,ecx_61,edi_59,edx_67,es_69,esi_66,esp_58,SZO_63,Z_68
	word32 ecx_81
	fn1002F420(eax_62, eax_13 ^ fp - 0x00000004, edx_67, Mem41[esp_58 + 0x00000008:word32], ebp_60, Mem41[esp_58 + 0x00000004:word32], Mem41[esp_58:word32], es_69, ds_70, out ecx_81)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1001E38B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn1001E3E6(word32 edx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1001E3E6_entry:
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E3E6:
	word32 edi_219 = edi
	word32 ebx_17 = dwArg04
	word32 esp_18 = fp - 0x0000001C
	word32 esi_226 = Mem0[dwArg04:word32]
	branch esi_226 == 0x00000000 l1001E41C
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1001E409:
	Mem195[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_203
	word32 edi_204
	word32 ebp_205
	byte SCZO_206
	word32 eax_207
	byte SZO_208
	byte C_209
	word32 ebx_210
	word32 esi_211
	word32 edx_212
	word32 ecx_213
	byte Z_214
	byte S_215
	selector es_216
	selector ds_217
	call Mem195[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: C_197,ds,dwLoc04_6,dwLoc08_12,dwLoc10_22,dwLoc14_24,dwLoc18_15,dwLoc1C_20,dwLoc20_200,eax_198,ebp_7,ebx_17,ecx_202,edi_3,edx,es,esi_201,esp_199,S,SCZO,SZO_196,Z_27
		defs: C_209,ds_217,eax_207,ebp_205,ebx_210,ecx_213,edi_204,edx_212,es_216,esi_211,esp_203,S_215,SCZO_206,SZO_208,Z_214
	word32 ebp_220
	byte SCZO_221
	word32 eax_222
	byte SZO_223
	byte C_224
	word32 ecx_228
	byte Z_229
	byte S_230
	call esi_211 (retsize: 4; depth: 4)
		uses: C_209,ds_217,dwLoc04_6,dwLoc08_12,dwLoc10_22,dwLoc14_24,dwLoc18_15,dwLoc1C_20,dwLoc20_200,eax_207,ebp_205,ebx_210,ecx_213,edi_204,edx_212,es_216,esi_211,esp_203,S_215,SCZO_206,SZO_208,Z_214
		defs: C_224,ds_232,eax_222,ebp_220,ebx_225,ecx_228,edi_219,edx_227,es_231,esi_226,esp_218,S_230,SCZO_221,SZO_223,Z_229
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E41C:
	word32 esi_124
	Mem45[ebx_17:word32] = Mem0[ebx_17:word32] & 0x00000000
	word32 esp_48 = esp_18 - 0x00000004
	Mem49[esp_48:word32] = 0x10002F5C
	Mem51[esp_48 - 0x00000004:word32] = 0x00000044
	word32 ebx_52
	word32 esi_54
	word32 edi_132
	word32 ebp_130
	word32 eax_56 = fn1002FF64(ebx_17, esi_226, edi_219, out ebx_52, out ebp_130, out esi_54, out edi_132)
	word32 esp_133 = esp_48 + 0x00000004
	branch eax_56 != 0x00000000 l1001E438
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1001E438:
	Mem90[esp_48:word32] = edi_132
	word32 edx_92
	word32 ebx_148
	word32 eax_94 = fn1002D8F1(eax_56, edx, es, ds, out edx_92, out ebx_148)
	word32 ecx_95 = Mem90[ebp_130 + 0x0000000C:word32]
	word32 eax_97 = Mem90[ebp_130 - 0x0000000C:word32]
	Mem98[ebp_130 - 0x00000008:word32] = eax_94
	Mem101[esp_48 - 0x00000004:word32] = Mem98[ecx_95:word32]
	Mem105[esp_48 - 0x00000008:word32] = Mem101[eax_97:word32]
	Mem109[esp_48 - 0x0000000C:word32] = Mem105[Mem105[ebp_130 - 0x00000010:word32]:word32]
	word32 eax_112 = fn1002D966(eax_94, edx_92, ebp_130, es, ds, dwArg00, dwArg04, dwArg08)
	word32 edi_146 = eax_94
	word32 esp_113 = esp_48
	word32 esi_114 = eax_112
	branch eax_112 >= 0x00000000 l1001E46B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E46B:
	branch eax_94 == 0x00000000 l1001E47F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E46F:
	Mem161[esp_48 - 0x00000004:word32] = eax_94
	word32 esp_164
	word32 edi_165
	word32 ebp_166
	byte SCZO_167
	word32 eax_168
	byte SZO_169
	byte C_170
	word32 ebx_171
	word32 esi_172
	word32 edx_173
	word32 ecx_174
	byte Z_175
	byte S_176
	selector es_177
	selector ds_178
	call Mem161[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_140,ds_35,dwLoc04_6,dwLoc08_12,dwLoc10_22,dwLoc14_24,dwLoc18_15,dwLoc1C_20,dwLoc20_34,eax_159,ebp_53,ebx_93,ecx_163,edi_96,edx_92,es_36,esi_162,esp_160,S_116,SCZO_38,SZO_138,Z_139
		defs: C_170,ds_178,eax_168,ebp_166,ebx_171,ecx_174,edi_165,edx_173,es_177,esi_172,esp_164,S_176,SCZO_167,SZO_169,Z_175
	byte SCZO_182
	word32 eax_183
	byte SZO_184
	byte C_185
	word32 edx_188
	word32 ecx_189
	byte Z_190
	byte S_191
	call esi_172 (retsize: 4; depth: 4)
		uses: C_170,ds_178,dwLoc04_6,dwLoc08_12,dwLoc10_22,dwLoc14_24,dwLoc18_15,dwLoc1C_20,dwLoc20_34,eax_168,ebp_166,ebx_171,ecx_174,edi_165,edx_173,es_177,esi_172,esp_164,S_176,SCZO_167,SZO_169,Z_175
		defs: C_185,ds_193,eax_183,ebp_181,ebx_186,ecx_189,edi_180,edx_188,es_192,esi_187,esp_179,S_191,SCZO_182,SZO_184,Z_190
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E47F:
	Mem152[ebx_148:word32] = edi_146
	word32 esi_154
	fn1000C640(ebp_130 - 0x00000008, ebx_148, esi_114, edi_146, es, ds, out edx, out esi_154)
	esi_124 = 0x00000000
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E461:
	fn1000C640(ebp_130 - 0x00000008, ebx_148, eax_112, eax_94, es, ds, out edx, out esi_124)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E48B:
	edi_132 = Mem109[esp_113:word32]
	esp_133 = esp_113 + 0x00000004
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E431:
	esi_124 = 0x8007000E
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E48C:
	word32 ecx_83
	fn1002F420(esi_124, Mem51[ebp_130 - 0x00000004:word32] ^ ebp_130, edx, Mem51[esp_133 + 0x00000004:word32], ebp_130, Mem51[esp_133:word32], edi_132, es, ds, out ecx_83)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001E3E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -32(fp):<invalid> -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1001E4A0(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1001E4A0_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1001E4A0:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_110 = fp - 0x00000014
	word32 edi_111 = dwArg04
	word32 ebx_117 = ecx
	word32 edx_26 = Mem0[dwArg04:word32]
	branch edx_26 == 0x00000000 l1001E4D1
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001E4BE:
	Mem87[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_97
	word32 edi_98
	word32 ebp_99
	word32 ecx_100
	word32 eax_101
	byte SZO_102
	byte C_103
	word32 ebx_104
	word32 esi_105
	word32 edx_106
	byte Z_107
	selector es_108
	selector ds_109
	call Mem87[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_89,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_92,eax_90,ebp_7,ebx_25,ecx_94,edi_24,edx_26,es,esi_93,esp_91,SZO_88,Z_28
		defs: C_103,ds_109,eax_101,ebp_99,ebx_104,ecx_100,edi_98,edx_106,es_108,esi_105,esp_97,SZO_102,Z_107
	word32 ebp_112
	word32 ecx_113
	word32 eax_114
	byte SZO_115
	byte C_116
	word32 esi_118
	word32 edx_119
	byte Z_120
	selector es_121
	selector ds_122
	call esi_105 (retsize: 4; depth: 4)
		uses: C_103,ds_109,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_92,eax_101,ebp_99,ebx_104,ecx_100,edi_98,edx_106,es_108,esi_105,esp_97,SZO_102,Z_107
		defs: C_116,ds_122,eax_114,ebp_112,ebx_117,ecx_113,edi_111,edx_119,es_121,esi_118,esp_110,SZO_115,Z_120
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001E4D1:
	word32 eax_35 = Mem0[ebx_117:word32]
	word32 esp_36 = esp_110 - 0x00000004
	Mem37[esp_36:word32] = edi_111
	Mem39[esp_36 - 0x00000004:word32] = 0x10004BE0
	Mem41[esp_36 - 0x00000008:word32] = eax_35
	word32 esp_45
	word32 edi_46
	word32 ebp_47
	word32 ecx_48
	word32 eax_49
	byte SZO_50
	byte C_51
	word32 ebx_52
	word32 esi_53
	word32 edx_54
	byte Z_55
	selector es_56
	selector ds_57
	call Mem41[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_29,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_31,eax_35,ebp_7,ebx_33,ecx_44,edi_32,edx_26,esi_43,esp_40,SZO_27,Z_28
		defs: C_51,ds_57,eax_49,ebp_47,ebx_52,ecx_48,edi_46,edx_54,es_56,esi_53,esp_45,SZO_50,Z_55
	word32 esp_58
	word32 edi_59
	word32 ebp_60
	word32 ecx_61
	word32 eax_62
	byte SZO_63
	byte C_64
	word32 ebx_65
	word32 esi_66
	word32 edx_67
	byte Z_68
	selector es_69
	selector ds_70
	call esi_53 (retsize: 4; depth: 4)
		uses: C_51,ds_57,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_22,dwLoc18_31,eax_49,ebp_47,ebx_52,ecx_48,edi_46,edx_54,es_56,esi_53,esp_45,SZO_50,Z_55
		defs: C_64,ds_70,eax_62,ebp_60,ebx_65,ecx_61,edi_59,edx_67,es_69,esi_66,esp_58,SZO_63,Z_68
	word32 ecx_81
	fn1002F420(eax_62, eax_13 ^ fp - 0x00000004, edx_67, Mem41[esp_58 + 0x00000008:word32], ebp_60, Mem41[esp_58 + 0x00000004:word32], Mem41[esp_58:word32], es_69, ds_70, out ecx_81)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1001E4A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn1001E4FB(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx rax rcx rdi rdx
// Preserved: ebp edi esi esp
fn1001E4FB_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0040(32)

l1001E4FB:
	word32 eax_35
	__align(fp - 0x00000004)
	word32 edi_3 = edi
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000030
	eax_35 = eax_11
	branch Mem0[ecx:word32] <=u 0x00000005 l1001E53D
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0034(32) Local -0040(32)

l1001E519:
	eax_35 = fn1000C54F(ecx, 0x00000000, 0x00004000, out edx)
	branch (byte) eax_35 == 0x00 l1001E53D
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:edx -52(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0034(32)

l1001E529:
	word32 ecx_71
	word32 esi_73
	eax_35 = fn1000C491(ecx, 0x100083FB, edx, 0x00000000, 0x00000002, fp - 0x0000002C, out ecx_71, out edx, out esi_73, out edi_3)
// DataOut: cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:edx al:<invalid> edx:<invalid> -60(fp):0x00000000 -56(fp):0x00004000 -52(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0034(32)

l1001E53D:
	word32 ecx_45
	fn1002F420(eax_35, eax_11 ^ fp - 0x00000030, edx, ebx, fp - 0x00000004, esi, edi_3, es, ds, out ecx_45)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ecx:<invalid> -68(fp):0x100083FB -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1001E4FB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:esi ecx:<invalid> edx:<invalid> al:<invalid> -68(fp):0x100083FB -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn1001E54D(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1001E54D_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E54D:
	word32 eax_29
	__align(fp - 0x00000004)
	word32 edi_28 = edi
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x0000002C
	eax_29 = eax_11
	branch Mem0[ecx:word32] <=u 0x00000005 l1001E57B
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001E568:
	word32 ecx_52
	eax_29 = fn1000C491(ecx, 0x100083CF, edx, 0x00000000, 0x00000002, fp - 0x0000002C, out ecx_52, out edx, out esi, out edi_28)
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001E57B:
	word32 ecx_37
	fn1002F420(eax_29, eax_11 ^ fp - 0x0000002C, edx, ebx, fp - 0x00000004, esi, edi_28, es, ds, out ecx_37)
	return esi
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> al:<invalid> esi:<invalid> ecx:<invalid> -60(fp):edx -56(fp):0x00000000 -52(fp):0x00000002 -48(fp):fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp

fn1001E54D_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> al:<invalid> esi:<invalid> ecx:<invalid> -60(fp):edx -56(fp):0x00000000 -52(fp):0x00000002 -48(fp):fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp



void fn1001E58A(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001E58A_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1001E58A:
	word32 esi_12 = ecx
	branch fn100103B2(dwArg04, 0x10004BD0) != 0x00000000 l1001E5C5
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1001E5A3:
	esi_12 = ecx + 0x00000004
	branch fn100103B2(dwArg04, 0x10004BB0) != 0x00000000 l1001E5C5
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10004BD0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1001E5B4:
	esi_12 = ecx + 0x00000008
	branch fn100103B2(dwArg04, 0x10004BA0) == 0x00000000 l1001E5CC
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000004 edx:0x10004BB0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1001E5CC:
	word32 edx_79
	branch fn1001036A(ecx + 0x0000000C, dwArg04, dwArg08, out edx_79) < 0x00000000 l1001E5E0
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:0x10004BA0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001E5E0:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001E5C5:
	Mem55[dwArg08:word32] = esi_12
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001E5DC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1001E5E5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1001E58A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn1001E5EA(word32 ecx, word32 edx, word32 esi, word32 edi, selector es, selector ds, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi edx es esi fs gs ss
// LiveOut: eax esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esp
fn1001E5EA_entry:
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E5EA:
	word32 ebx_128
	Mem28[ecx:word32] = 0x00000000
	word32 ebx_30
	word32 edi_142
	word32 esi_144
	word32 ebp_123
	word32 eax_34 = fn1002FF64(0x00000000, esi, edi, out ebx_30, out ebp_123, out esi_144, out edi_142)
	word32 esp_145 = fp - 0x00000020
	branch eax_34 != 0x00000000 l1001E628
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001E628:
	Mem72[fp - 0x00000024:word32] = esi_144
	Mem74[fp - 0x00000028:word32] = edi_142
	word32 eax_76 = fn1001F981(eax_34, edx, es, ds)
	word32 ecx_77 = Mem74[ebp_123 + 0x00000014:word32]
	Mem79[ebp_123 - 0x00000018:word32] = eax_76
	word32 ecx_81 = Mem79[ebp_123 + 0x00000010:word32]
	Mem82[ebp_123 - 0x00000010:word32] = Mem79[ecx_77:word32]
	word32 esi_155 = Mem82[ecx_81:word32]
	word32 ecx_85 = Mem82[ebp_123 + 0x0000000C:word32]
	word32 eax_86 = Mem82[Mem82[ebp_123 - 0x0000000C:word32]:word32]
	Mem87[ebp_123 - 0x00000008:word32] = esi_155
	byte dl_88 = Mem87[ecx_85:byte]
	word32 ecx_90 = Mem87[Mem87[ebp_123 + 0x00000008:word32]:word32]
	Mem91[eax_76 + 0x00000048:word32] = eax_86
	Mem92[eax_76 + 0x0000004C:word32] = ecx_90
	Mem93[eax_76 + 0x00000050:byte] = dl_88
	word32 esp_160 = fp - 0x00000028
	word32 edi_154 = eax_76
	branch Mem93[eax_76 + 0x00000034:word32] == esi_155 l1001E68B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -40(fp):0x000000A0 -36(fp):0x10002F5C -32(fp):ebx -24(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E663:
	word32 ebx_158
	selector es_150
	selector ds_149
	ds_149 = ds
	es_150 = es
	ebx_158 = ebx_30
	branch esi_155 == 0x00000000 l1001E67A
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E667:
	Mem170[fp - 0x0000002C:word32] = esi_155
	word32 esp_173
	word32 edi_174
	word32 ebp_175
	byte SCZO_176
	word32 eax_177
	byte SZO_178
	byte C_179
	word32 ebx_180
	word32 ecx_181
	word32 edx_182
	byte Z_183
	word32 esi_184
	byte dl_185
	selector es_186
	selector ds_187
	call Mem170[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_148,dl_88,ds,dwLoc04_6,dwLoc08_12,dwLoc10_19,dwLoc18_25,dwLoc20_15,dwLoc24_21,dwLoc28_27,eax_168,ebp_31,ebx_30,ecx_172,edi_78,edx,es,esi_171,esp_169,SCZO_94,SZO_146,Z_147
		defs: C_179,dl_185,ds_187,eax_177,ebp_175,ebx_180,ecx_181,edi_174,edx_182,es_186,esi_184,esp_173,SCZO_176,SZO_178,Z_183
	byte SCZO_191
	word32 eax_192
	byte SZO_193
	byte C_194
	word32 ecx_196
	word32 edx_197
	byte Z_198
	word32 esi_199
	byte dl_200
	call esi_184 (retsize: 4; depth: 4)
		uses: C_179,dl_185,ds_187,dwLoc04_6,dwLoc08_12,dwLoc10_19,dwLoc18_25,dwLoc20_15,dwLoc24_21,dwLoc28_27,eax_177,ebp_175,ebx_180,ecx_181,edi_174,edx_182,es_186,esi_184,esp_173,SCZO_176,SZO_178,Z_183
		defs: C_194,dl_200,ds_202,eax_192,ebp_190,ebx_195,ecx_196,edi_189,edx_197,es_201,esi_199,esp_188,SCZO_191,SZO_193,Z_198
	esi_155 = Mem170[ebp_123 - 0x00000008:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E67A:
	Mem163[ebp_123 - 0x00000008:word32] = Mem93[edi_154 + 0x00000034:word32]
	Mem164[edi_154 + 0x00000034:word32] = esi_155
	word32 edx_165
	word32 esi_166
	fn1000C640(ebp_123 - 0x00000008, ebx_158, esi_155, edi_154, es_150, ds_149, out edx_165, out esi_166)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E68B:
	Mem100[edi_154 + 0x00000090:word32] = Mem93[ebp_123 - 0x00000010:word32]
	word32 esp_102 = esp_160 - 0x00000004
	Mem103[esp_102:word32] = edi_154
	word32 esp_106
	word32 edi_107
	word32 ebp_108
	byte SCZO_109
	word32 eax_110
	byte SZO_111
	byte C_112
	word32 ebx_113
	word32 ecx_114
	word32 edx_115
	byte Z_116
	word32 esi_117
	byte dl_118
	selector es_119
	selector ds_120
	call Mem103[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_41,dl_88,ds,dwLoc04_6,dwLoc08_12,dwLoc10_19,dwLoc18_25,dwLoc20_15,dwLoc24_21,dwLoc28_27,eax_101,ebp_97,ebx_30,ecx_105,edi_96,edx,es,esi_104,esp_102,SCZO_94,SZO_39,Z_95
		defs: C_112,dl_118,ds_120,eax_110,ebp_108,ebx_113,ecx_114,edi_107,edx_115,es_119,esi_117,esp_106,SCZO_109,SZO_111,Z_116
	word32 esp_121
	word32 edi_122
	byte SCZO_124
	word32 eax_125
	byte SZO_126
	byte C_127
	word32 ecx_129
	word32 edx_130
	byte Z_131
	word32 esi_132
	byte dl_133
	call esi_117 (retsize: 4; depth: 4)
		uses: C_112,dl_118,ds_120,dwLoc04_6,dwLoc08_12,dwLoc10_19,dwLoc18_25,dwLoc20_15,dwLoc24_21,dwLoc28_27,eax_110,ebp_108,ebx_113,ecx_114,edi_107,edx_115,es_119,esi_117,esp_106,SCZO_109,SZO_111,Z_116
		defs: C_127,dl_133,ds_135,eax_125,ebp_123,ebx_128,ecx_129,edi_122,edx_130,es_134,esi_132,esp_121,SCZO_124,SZO_126,Z_131
	Mem138[Mem103[ebp_123 - 0x00000014:word32]:word32] = edi_122
	word32 esi_140
	fn1000C640(ebp_123 - 0x00000018, ebx_128, esi_132, edi_122, es, ds, out edx, out esi_140)
	edi_142 = Mem138[esp_121:word32]
	*esiOut = Mem138[esp_121 + 0x00000004:word32]
	esp_145 = esp_121 + 0x00000008
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E61E:
	ebx_128 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -40(fp):0x000000A0 -36(fp):0x10002F5C -32(fp):ebx -24(fp):ecx -16(fp):edx -8(fp):<invalid> -4(fp):ebp

l1001E6B3:
	word32 ecx_60
	return fn1002F420(ebx_128, Mem28[ebp_123 - 0x00000004:word32] ^ ebp_123, edx, Mem28[esp_145:word32], ebp_123, esi_144, edi_142, es, ds, out ecx_60)
// DataOut: cs ds eax es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001E5EA_exit:
// DataOut: eax esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):<invalid> -24(fp):ecx -20(fp):<invalid> -16(fp):edx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001E6C6(word32 ecx, word32 edx, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1001E6C6_entry:
	*edxOut = edx
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E6C6:
	word32 ebx_103
	Mem31[ecx:word32] = 0x00000000
	word32 ebx_32
	word32 edi_125
	word32 esi_201
	word32 ebp_105
	word32 eax_36 = fn1002FF64(0x00000000, edx, edi, out ebx_32, out ebp_105, out esi_201, out edi_125)
	word32 esp_126 = fp - 0x00000018
	branch eax_36 != 0x00000000 l1001E6FE
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001E6FE:
	Mem73[fp - 0x0000001C:word32] = edi_125
	word32 eax_77 = fn100248A3(eax_36, edx, es, ds, out edx, out ebx_103)
	word32 ecx_205 = Mem73[esi_201:word32]
	Mem80[ebp_105 - 0x00000008:word32] = ecx_205
	word32 esp_106 = fp - 0x0000001C
	word32 edi_101 = eax_77
	branch Mem80[eax_77 + 0x00000024:word32] == ecx_205 l1001E73A
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):0x00000028 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001E712:
	branch ecx_205 == 0x00000000 l1001E729
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x00000028 -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E716:
	Mem218[fp - 0x00000020:word32] = ecx_205
	word32 esp_221
	word32 edi_222
	word32 ebp_223
	byte SCZO_224
	word32 eax_225
	byte SZO_226
	byte C_227
	word32 ebx_228
	word32 esi_229
	word32 ecx_230
	word32 edx_231
	byte Z_232
	selector es_233
	selector ds_234
	call Mem218[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_195,ds,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_216,ebp_33,ebx_76,ecx_220,edi_79,edx_75,es,esi_219,esp_217,SCZO_81,SZO_193,Z_194
		defs: C_227,ds_234,eax_225,ebp_223,ebx_228,ecx_230,edi_222,edx_231,es_233,esi_229,esp_221,SCZO_224,SZO_226,Z_232
	byte SCZO_238
	word32 eax_239
	byte SZO_240
	byte C_241
	word32 ecx_244
	word32 edx_245
	byte Z_246
	call esi_229 (retsize: 4; depth: 4)
		uses: C_227,ds_234,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_225,ebp_223,ebx_228,ecx_230,edi_222,edx_231,es_233,esi_229,esp_221,SCZO_224,SZO_226,Z_232
		defs: C_241,ds_248,eax_239,ebp_237,ebx_242,ecx_244,edi_236,edx_245,es_247,esi_243,esp_235,SCZO_238,SZO_240,Z_246
	ecx_205 = Mem218[ebp_105 - 0x00000008:word32]
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x00000028 -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E729:
	word32 eax_208 = Mem80[edi_101 + 0x00000024:word32]
	Mem209[edi_101 + 0x00000024:word32] = ecx_205
	Mem211[ebp_105 - 0x00000008:word32] = eax_208
	word32 ecx_212
	word32 esi_214
	fn1000F276(ebp_105 - 0x00000008, ebx_103, esi_201, edi_101, es, ds, out ecx_212, out edx, out esi_214)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E73A:
	branch edi_101 == 0x00000000 l1001E74E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E73E:
	word32 esp_161 = esp_106 - 0x00000004
	Mem162[esp_161:word32] = edi_101
	word32 esp_165
	word32 edi_166
	word32 ebp_167
	byte SCZO_168
	word32 eax_169
	byte SZO_170
	byte C_171
	word32 ebx_172
	word32 esi_173
	word32 ecx_174
	word32 edx_175
	byte Z_176
	selector es_177
	selector ds_178
	call Mem162[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_96,ds_83,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_160,ebp_92,ebx_89,ecx_164,edi_87,edx_85,es_84,esi_163,esp_161,SCZO_86,SZO_94,Z_95
		defs: C_171,ds_178,eax_169,ebp_167,ebx_172,ecx_174,edi_166,edx_175,es_177,esi_173,esp_165,SCZO_168,SZO_170,Z_176
	byte SCZO_182
	word32 eax_183
	byte SZO_184
	byte C_185
	word32 esi_187
	word32 ecx_188
	byte Z_190
	call esi_173 (retsize: 4; depth: 4)
		uses: C_171,ds_178,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_169,ebp_167,ebx_172,ecx_174,edi_166,edx_175,es_177,esi_173,esp_165,SCZO_168,SZO_170,Z_176
		defs: C_185,ds_192,eax_183,ebp_181,ebx_186,ecx_188,edi_180,edx_189,es_191,esi_187,esp_179,SCZO_182,SZO_184,Z_190
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E74E:
	word32 eax_107 = Mem80[ebp_105 - 0x0000000C:word32]
	Mem108[eax_107:word32] = edi_101
	branch edi_101 == 0x00000000 l1001E767
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E757:
	word32 esp_128 = esp_106 - 0x00000004
	Mem129[esp_128:word32] = edi_101
	word32 esp_132
	word32 edi_133
	word32 ebp_134
	byte SCZO_135
	word32 eax_136
	byte SZO_137
	byte C_138
	word32 ebx_139
	word32 esi_140
	word32 ecx_141
	word32 edx_142
	byte Z_143
	selector es_144
	selector ds_145
	call Mem129[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_111,ds_97,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_107,ebp_105,ebx_103,ecx_131,edi_101,edx_99,es_98,esi_130,esp_128,SCZO_100,SZO_109,Z_110
		defs: C_138,ds_145,eax_136,ebp_134,ebx_139,ecx_141,edi_133,edx_142,es_144,esi_140,esp_132,SCZO_135,SZO_137,Z_143
	word32 edi_147
	byte SCZO_149
	word32 eax_150
	byte SZO_151
	byte C_152
	word32 esi_154
	word32 ecx_155
	byte Z_157
	call esi_140 (retsize: 4; depth: 4)
		uses: C_138,ds_145,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_136,ebp_134,ebx_139,ecx_141,edi_133,edx_142,es_144,esi_140,esp_132,SCZO_135,SZO_137,Z_143
		defs: C_152,ds_159,eax_150,ebp_148,ebx_153,ecx_155,edi_147,edx_156,es_158,esi_154,esp_146,SCZO_149,SZO_151,Z_157
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E767:
	edi_125 = Mem108[esp_106:word32]
	esp_126 = esp_106 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1001E6F7:
	ebx_103 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):0x00000028 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1001E768:
	word32 ecx_62
	return fn1002F420(ebx_103, Mem31[ebp_105 - 0x00000004:word32] ^ ebp_105, edx, Mem31[esp_126 + 0x00000004:word32], ebp_105, Mem31[esp_126:word32], edi_125, es, ds, out ecx_62)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001E6C6_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1001E77A(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
fn1001E77A_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E77A:
	word32 edx_19
	*edxOut = fn10010735(ecx + 0x0000000C, edx, es, ds)
	Mem23[ecx + 0x00000024:word32] = 0x00000001
	Mem24[ecx:word32] = 0x100015C0
	Mem25[ecx + 0x00000004:word32] = 0x100015A4
	Mem26[ecx + 0x00000008:word32] = 0x10001628
	Mem27[ecx + 0x0000000C:word32] = 0x10001580
	branch Mem0[0x10031478:word32] == 0x00000000 l1001E7BC
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E7B5:
	__lock()
	Mem64[0x1003147C:word32] = Mem27[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1001E7BC:
	Mem28[ecx + 0x0000000C:word32] = 0x10001580
	Mem30[ecx:word32] = 0x10001654
	Mem34[ecx + 0x00000004:word32] = 0x10001638
	Mem36[ecx + 0x00000008:word32] = 0x10001628
	Mem37[ecx + 0x00000028:word32] = 0x00000000
	Mem38[ecx + 0x0000002C:word32] = 0x00000000
	Mem39[ecx + 0x00000030:word32] = 0x00000000
	Mem41[ecx + 0x00000034:word32] = Mem39[0x100075F8:word32]
	Mem45[ecx + 0x00000038:word32] = Mem41[0x100075FC:word32]
	Mem49[ecx + 0x0000003C:word32] = Mem45[0x10007600:word32]
	Mem53[ecx + 0x00000040:word32] = Mem49[0x10007604:word32]
	Mem56[ecx + 0x00000044:word32] = 0x00000000
	return ecx
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1001E77A_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebx:ebx esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn1001E7F6(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn1001E7F6_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E7F6:
	word32 edx_16
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001600
	Mem22[ecx + 0x00000004:word32] = 0x100015DC
	branch Mem0[0x10031478:word32] == 0x00000000 l1001E829
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001E822:
	__lock()
	Mem38[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1001E829:
	Mem24[ecx + 0x00000020:word32] = Mem22[ecx + 0x00000020:word32] & 0x00000000
	Mem28[ecx + 0x00000004:word32] = 0x100015DC
	Mem31[ecx:word32] = 0x10001614
	return ecx
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn1001E7F6_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



void fn1001EA88(word32 ecx, word32 ebx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx ecx fs
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn1001EA88_entry:
// DataOut: ebx ecx fs
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EA88:
	word32 ebx_26
	word32 ebp_27
	word32 esi_28
	word32 edi_29
	word32 eax_30 = fn1002FF64(ebx, 0x00000000, ecx, out ebx_26, out ebp_27, out esi_28, out edi_29)
	branch eax_30 == 0x00000000 l1001EADE
// DataOut: eax ebp edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001EAA9:
	Mem51[eax_30 + 0x00000008:word32] = 0x00000001
	Mem52[eax_30:word32] = 0x10001670
	branch Mem52[0x10031478:word32] == esi_28 l1001EAC5
// DataOut: eax ebp edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):0x00000014 -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):0x00000000 -4(fp):ebp

l1001EABE:
	__lock()
	Mem62[0x1003147C:word32] = Mem52[0x1003147C:word32] + 0x00000001
// DataOut: eax ebp edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):0x00000014 -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):0x00000000 -4(fp):ebp

l1001EAC5:
	Mem56[eax_30 + 0x0000000C:word32] = 0x3FFFFFFF
	Mem58[eax_30:word32] = 0x10001684
	Mem59[eax_30 + 0x00000010:word32] = edi_29
	Mem60[eax_30 + 0x00000008:word32] = 0x00000002
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):0x00000014 -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):0x00000000 -4(fp):ebp

l1001EADE:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):0x00000014 -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):0x00000000 -4(fp):ebp

fn1001EA88_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> -24(fp):0x00000014 -20(fp):0x10002F5C -16(fp):edi -12(fp):esi -8(fp):0x00000000 -4(fp):ebp



void fn1001EAE6(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx eax ebx esi rax rbx rsi si sil
// Preserved: ebp edi esp
fn1001EAE6_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EAE6:
	word32 esi_18 = ecx
	branch Mem0[0x10031560:byte] != 0x00 l1001EB8B
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EB03:
	word32 esp_64
	word32 edi_65
	word32 ebp_66
	byte SCZO_67
	word32 ebx_68
	byte SZO_69
	byte C_70
	word32 esi_71
	word32 ecx_72
	byte bl_73
	byte Z_74
	word32 eax_75
	byte al_76
	call SspiCli.dll!LsaConnectUntrusted (retsize: 4; depth: 36)
		uses: al,bl_13,C,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24,eax_61,ebp_7,ebx_12,ecx,edi_3,esi_18,esp_62,SCZO_21,SZO,Z_22
		defs: al_76,bl_73,C_70,eax_75,ebp_66,ebx_68,ecx_72,edi_65,esi_71,esp_64,SCZO_67,SZO_69,Z_74
	word32 esp_79
	word32 edi_80
	word32 ebp_81
	byte SCZO_82
	word32 ebx_83
	byte SZO_84
	byte C_85
	word32 ecx_87
	byte bl_88
	byte Z_89
	word32 eax_90
	byte al_91
	call ntdll.dll!RtlNtStatusToDosError (retsize: 4; depth: 40)
		uses: al_76,bl_73,C_70,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_75,ebp_66,ebx_68,ecx_72,edi_65,esi_71,esp_77,SCZO_67,SZO_69,Z_74
		defs: al_91,bl_88,C_85,eax_90,ebp_81,ebx_83,ecx_87,edi_80,esi_86,esp_79,SCZO_82,SZO_84,Z_89
	branch (fp - 0x00000008 & fp - 0x00000008) != 0x00000000 l1001EB8B
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EB18:
	Mem96[esp_79 - 0x00000004:word32] = 0x10004CA8
	Mem99[esp_79 - 0x00000008:word32] = fp - 0x00000010
	word32 esp_100
	word32 edi_101
	word32 ebp_102
	byte SCZO_103
	word32 ebx_104
	byte SZO_105
	byte C_106
	word32 esi_107
	word32 ecx_108
	byte bl_109
	byte Z_110
	word32 eax_111
	byte al_112
	call ntdll.dll!RtlInitString (retsize: 4; depth: 4)
		uses: al_91,bl_88,C_94,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_97,ebp_81,ebx_83,ecx_87,edi_80,esi_86,esp_98,SCZO_82,SZO_92,Z_93
		defs: al_112,bl_109,C_106,eax_111,ebp_102,ebx_104,ecx_108,edi_101,esi_107,esp_100,SCZO_103,SZO_105,Z_110
	Mem114[esp_100 - 0x00000004:word32] = 0x1003108C
	Mem117[esp_100 - 0x00000008:word32] = fp - 0x00000010
	Mem120[esp_100 - 0x0000000C:word32] = 0x00000000
	word32 esp_121
	word32 edi_122
	word32 ebp_123
	byte SCZO_124
	word32 ebx_125
	byte SZO_126
	byte C_127
	word32 esi_128
	word32 ecx_129
	byte bl_130
	byte Z_131
	word32 eax_132
	byte al_133
	call SspiCli.dll!LsaLookupAuthenticationPackage (retsize: 4; depth: 4)
		uses: al_112,bl_109,C_106,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_115,ebp_102,ebx_104,ecx_108,edi_101,esi_107,esp_119,SCZO_103,SZO_105,Z_110
		defs: al_133,bl_130,C_127,eax_132,ebp_123,ebx_125,ecx_129,edi_122,esi_128,esp_121,SCZO_124,SZO_126,Z_131
	Mem135[esp_121 - 0x00000004:word32] = 0x10004CB4
	Mem138[esp_121 - 0x00000008:word32] = fp - 0x00000010
	word32 esp_139
	word32 edi_140
	word32 ebp_141
	byte SCZO_142
	word32 ebx_143
	byte SZO_144
	byte C_145
	word32 esi_146
	word32 ecx_147
	byte bl_148
	byte Z_149
	word32 eax_150
	byte al_151
	call ntdll.dll!RtlInitString (retsize: 4; depth: 4)
		uses: al_133,bl_130,C_127,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_136,ebp_123,ebx_125,ecx_129,edi_122,esi_128,esp_137,SCZO_124,SZO_126,Z_131
		defs: al_151,bl_148,C_145,eax_150,ebp_141,ebx_143,ecx_147,edi_140,esi_146,esp_139,SCZO_142,SZO_144,Z_149
	Mem153[esp_139 - 0x00000004:word32] = 0x10031088
	Mem156[esp_139 - 0x00000008:word32] = fp - 0x00000010
	Mem159[esp_139 - 0x0000000C:word32] = 0x00000000
	word32 esp_160
	word32 edi_161
	word32 ebp_162
	byte SCZO_163
	word32 ebx_164
	byte SZO_165
	byte C_166
	word32 esi_167
	word32 ecx_168
	byte bl_169
	byte Z_170
	word32 eax_171
	byte al_172
	call SspiCli.dll!LsaLookupAuthenticationPackage (retsize: 4; depth: 4)
		uses: al_151,bl_148,C_145,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_154,ebp_141,ebx_143,ecx_147,edi_140,esi_146,esp_158,SCZO_142,SZO_144,Z_149
		defs: al_172,bl_169,C_166,eax_171,ebp_162,ebx_164,ecx_168,edi_161,esi_167,esp_160,SCZO_163,SZO_165,Z_170
	Mem174[esp_160 - 0x00000004:word32] = 0x10004CDC
	Mem177[esp_160 - 0x00000008:word32] = fp - 0x00000010
	word32 esp_178
	word32 edi_179
	word32 ebp_180
	byte SCZO_181
	word32 ebx_182
	byte SZO_183
	byte C_184
	word32 esi_185
	word32 ecx_186
	byte bl_187
	byte Z_188
	word32 eax_189
	byte al_190
	call ntdll.dll!RtlInitString (retsize: 4; depth: 4)
		uses: al_172,bl_169,C_166,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_175,ebp_162,ebx_164,ecx_168,edi_161,esi_167,esp_176,SCZO_163,SZO_165,Z_170
		defs: al_190,bl_187,C_184,eax_189,ebp_180,ebx_182,ecx_186,edi_179,esi_185,esp_178,SCZO_181,SZO_183,Z_188
	Mem192[esp_178 - 0x00000004:word32] = 0x10031084
	Mem195[esp_178 - 0x00000008:word32] = fp - 0x00000010
	Mem198[esp_178 - 0x0000000C:word32] = 0x00000000
	word32 esp_199
	word32 edi_200
	word32 ebp_201
	byte SCZO_202
	word32 ebx_203
	byte SZO_204
	byte C_205
	word32 esi_206
	word32 ecx_207
	byte bl_208
	byte Z_209
	word32 eax_210
	byte al_211
	call SspiCli.dll!LsaLookupAuthenticationPackage (retsize: 4; depth: 4)
		uses: al_190,bl_187,C_184,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_193,ebp_180,ebx_182,ecx_186,edi_179,esi_185,esp_197,SCZO_181,SZO_183,Z_188
		defs: al_211,bl_208,C_205,eax_210,ebp_201,ebx_203,ecx_207,edi_200,esi_206,esp_199,SCZO_202,SZO_204,Z_209
	Mem214[esp_199 - 0x00000004:word32] = 0x00000000
	word32 esp_215
	word32 edi_216
	word32 ebp_217
	byte SCZO_218
	word32 ebx_219
	byte SZO_220
	byte C_221
	word32 ecx_223
	byte bl_224
	byte Z_225
	word32 eax_226
	byte al_227
	call SspiCli.dll!LsaDeregisterLogonProcess (retsize: 4; depth: 4)
		uses: al_211,bl_208,C_205,dwLoc04_6,dwLoc08_19,dwLoc18_11,dwLoc1C_16,dwLoc20_63,dwLoc24_78,eax_210,ebp_201,ebx_203,ecx_207,edi_200,esi_206,esp_213,SCZO_202,SZO_204,Z_209
		defs: al_227,bl_224,C_221,eax_226,ebp_217,ebx_219,ecx_223,edi_216,esi_222,esp_215,SCZO_218,SZO_220,Z_225
	Mem228[0x10031560:byte] = 0x01
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EB8B:
	branch Mem0[0x1003108C:word32] == esi_18 l1001EBA3
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EB93:
	branch Mem0[0x10031088:word32] == esi_18 l1001EBA3
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EB9B:
	branch Mem0[0x10031084:word32] != esi_18 l1001EBA5
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EBA3:
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx eax:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EBA5:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 ebx:<invalid> esi:ecx eax:<invalid> bl:0x01 -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp

fn1001EAE6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:<invalid> esi:<invalid> eax:<invalid> bl:<invalid> al:0x01 -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -8(fp):0x00000000 -4(fp):ebp



void fn1001EBAD(word32 ecx, word32 edx, word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp ecx edx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn1001EBAD_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EBAD:
	Mem23[edx + 0x00000014:word32] = 0x00000000
	Mem29[edx + 0x00000004:word32] = Mem23[0x100075F8:word32]
	Mem33[edx + 0x00000008:word32] = Mem29[0x100075FC:word32]
	Mem37[edx + 0x0000000C:word32] = Mem33[0x10007600:word32]
	Mem41[edx + 0x00000010:word32] = Mem37[0x10007604:word32]
	Mem43[edx + 0x00000018:word32] = 0x00000000
	Mem46[edx:word32] = 0x00000000
	word32 esi_48 = Mem46[ecx + 0x0000000C:word32]
	word16 ax_50 = (word16) (word32) Mem46[esi_48 + 0x0000000C:word16]
	word32 ebx_169 = (0x00000000 - (0x0000 <u ax_50) & 0x7FFFBFFB) + 0x80004005
	branch 0x0000 >=u ax_50 l1001ED23
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC00:
	branch esi_48 == 0x00000000 l1001ED2C
// DataOut: cs ds ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:edx + 0x000000D8 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:edx + 0x00000058 ^ edx + 0x00000058 esi:<invalid> -100(fp):edi -96(fp):esi -92(fp):ebx -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC08:
	branch Mem46[ecx + 0x00000008:word32] <u 0x0000001C l1001ED2C
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:edx + 0x000000D8 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:edx + 0x00000058 ^ edx + 0x00000058 esi:<invalid> -100(fp):edi -96(fp):esi -92(fp):ebx -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001ED2C:
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:edx + 0x000000D8 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:edx + 0x00000058 ^ edx + 0x00000058 esi:<invalid> -100(fp):edi -96(fp):esi -92(fp):ebx -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l1001EC12:
	word32 eax_142 = Mem46[esi_48 + 0x00000008:word32]
	Mem146[esi_48 + 0x00000010:word32] = Mem46[esi_48 + 0x00000010:word32] + esi_48
	Mem150[esi_48 + 0x00000018:word32] = Mem146[esi_48 + 0x00000018:word32] + esi_48
	word32 eax_147 = eax_142 + esi_48
	Mem152[esi_48 + 0x00000008:word32] = eax_147
	branch Mem152[esi_48 + 0x00000004:word16] <=u 0x0000 l1001EC52
// DataOut: cs ds eax ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:edx + 0x000000D8 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:edx + 0x00000058 ^ edx + 0x00000058 esi:<invalid> -100(fp):edi -96(fp):esi -92(fp):ebx -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC45:
	word32 edx_314
	ebx_169 = fn1000F30D(fp - 0x00000034, eax_147, 0xFFFFFFFF, out edx_314)
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:edx + 0x00000058 ^ edx + 0x00000058 esi:<invalid> ecx:0x00000000 -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC52:
	branch ebx_169 < 0x00000000 l1001ECE8
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC5A:
	word32 edx_216
	word32 eax_217 = fn1000F30D(fp - 0x00000028, Mem152[esi_48 + 0x00000010:word32], 0xFFFFFFFF, out edx_216)
	word32 ebx_219 = eax_217
	branch eax_217 < 0x00000000 l1001ECE8
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC6D:
	branch 0x0000 >=u Mem152[esi_48 + 0x00000014:word16] l1001EC87
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC75:
	word32 edx_304
	ebx_219 = fn1000F30D(fp - 0x0000001C, Mem152[esi_48 + 0x00000018:word32], 0xFFFFFFFF, out edx_304)
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC87:
	branch ebx_219 < 0x00000000 l1001ECE8
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001EC8B:
	word32 edi_241
	branch fn1002EB66(0x00000000, fp - 0x00000054, out edi_241) < 0x00000000 l1001ECE8
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000064 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001ECA1:
	word32 edi_249
	branch fn1002EB66(0x00000000, fp - 0x0000004C, out edi_249) < 0x00000000 l1001ECE8
// DataOut: cs ds edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001ECB2:
	word32 edi_257
	branch fn1002EB66(edi_249, fp - 0x00000044, out edi_257) < 0x00000000 l1001ECE8
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32)

l1001ECC2:
	Mem265[fp - 0x00000068:word32] = edx + 0x00000014
	branch fn1002EA7C(fp - 0x00000058, edx + 0x00000018, dwArg00) < 0x00000000 l1001ECE8
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32)

l1001ECD6:
	Mem278[edx:word32] = Mem265[edx:word32] & 0x00000000
	Mem283[edx + 0x00000004:word32] = Mem278[0x10007638:word32]
	Mem287[edx + 0x00000008:word32] = Mem283[0x1000763C:word32]
	Mem291[edx + 0x0000000C:word32] = Mem287[0x10007640:word32]
	Mem295[edx + 0x00000010:word32] = Mem291[0x10007644:word32]
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l1001ECE8:
	fn1000F489(fp - 0x0000001C)
	word32 ecx_185 = 0x00000000
	word32 eax_187 = 0x00000000
	branch 0x00000000 == 0x00000000 l1001ED03
// DataOut: cs ds eax ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l1001ECFA:
	Mem203[eax_187:byte] = 0x00
	eax_187 = eax_187 + 0x00000001
	ecx_185 = ecx_185 - 0x00000001
	branch ecx_185 != 0x00000000 l1001ECFA
// DataOut: cs ds eax ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l1001ED03:
	fn1000F2EE(fp - 0x0000001C)
	fn1000F2EE(fp - 0x0000001C)
	fn1000F2EE(fp - 0x00000028)
	fn1000F2EE(fp - 0x00000034)
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l1001ED23:
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:fp - 0x00000034 ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp
// LocalsOut: fp(32)

l1001ED25:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:fp - 0x00000034 ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp

fn1001EBAD_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:fp - 0x00000034 ax:<invalid> -108(fp):<invalid> -104(fp):0xFFFFFFFF -100(fp):edi -96(fp):esi -92(fp):ebx -88(fp):<invalid> -52(fp):0x00000000 -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):edx -12(fp):edx + 0x00000058 -8(fp):edx + 0x00000028 -4(fp):ebp



void fn1001ED33(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ebx edi esi esp
fn1001ED33_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001ED33:
	word32 eax_28 = CoTaskMemAlloc(Mem0[ecx + 0x00000008:word32])
	Mem31[edx + 0x00000018:word32] = eax_28
	branch eax_28 == 0x00000000 l1001ED8E
// DataOut: cs ds eax ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1001ED62:
	Mem59[edx:word32] = Mem31[edx:word32] & 0x00000000
	Mem66[edx + 0x00000004:word32] = Mem59[0x10007628:word32]
	Mem70[edx + 0x00000008:word32] = Mem66[0x1000762C:word32]
	Mem74[edx + 0x0000000C:word32] = Mem70[0x10007630:word32]
	Mem78[edx + 0x00000010:word32] = Mem74[0x10007634:word32]
	memcpy(eax_28, Mem78[ecx + 0x0000000C:word32], Mem78[ecx + 0x00000008:word32])
	Mem93[edx + 0x00000014:word32] = Mem78[ecx + 0x00000008:word32]
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:edx ebx:<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001ED8E:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp

fn1001ED33_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx ecx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp



void fn1001ED9A(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebx edi esi esp
fn1001ED9A_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001ED9A:
	word32 eax_21 = CoTaskMemAlloc(Mem0[ecx + 0x00000008:word32])
	Mem24[edx + 0x00000018:word32] = eax_21
	branch eax_21 == 0x00000000 l1001EDD6
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EDBA:
	Mem44[edx:word32] = Mem24[ecx + 0x00000004:word32]
	memcpy(eax_21, Mem44[ecx + 0x0000000C:word32], Mem44[ecx + 0x00000008:word32])
	Mem56[edx + 0x00000014:word32] = Mem44[ecx + 0x00000008:word32]
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x8007000E esi:ecx ebx:edx eax:<invalid> ecx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1001EDD6:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:edx eax:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1001ED9A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ebx:ebx eax:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn1001EDDC(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1001EDDC_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EDDC:
	byte al_23 = fn1002FEAA()
	branch al_23 == 0x00 l1001EE8A
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001EE8A:
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EDF8:
	word32 esp_54
	word32 edi_55
	word32 ebp_56
	word32 ecx_57
	byte SZO_58
	byte C_59
	word32 esi_60
	byte al_61
	byte Z_62
	word32 eax_63
	word16 si_64
	byte S_65
	byte SCZO_66
	word32 edx_67
	call ext-ms-win-session-winsta-l1-1-0.dll!WinStationGetUserCredentials (retsize: 4; depth: 28)
		uses: al_23,C_26,dwLoc04_6,dwLoc08_14,dwLoc0C_12,dwLoc10_19,dwLoc14_21,dwLoc18_49,eax_47,ebp_7,ecx,edi_22,edx,esi,esp_48,S,SCZO,si,SZO_24,Z_25
		defs: al_61,C_59,eax_63,ebp_56,ecx_57,edi_55,edx_67,esi_60,esp_54,S_65,SCZO_66,si_64,SZO_58,Z_62
	word16 si_69 = (word16) (fp - 0x00000008)
	byte S_162 = cond(fp - 0x00000008 & fp - 0x00000008)
	branch (fp - 0x00000008 & fp - 0x00000008) <= 0x00000000 l1001EE13
// DataOut: cs ds ebp edi es esp fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE08:
	S_162 = cond((word32) si_69 | 0x80070000) (alias)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE13:
	branch S_162 l1001EE8F
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE15:
	fn1001EAE6(Mem0[(ecx & 0x00000000) + 0x00000004:word32])
	branch 0x01 == 0x00 l1001EE51
// DataOut: cs ds ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE27:
	word32 eax_118 = Mem0[Mem0[(ecx & 0x00000000) + 0x0000000C:word32]:word32]
	branch eax_118 == 0x00000002 l1001EE73
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:0x01 cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE32:
	branch eax_118 == 0x00000006 l1001EE6A
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE37:
	branch eax_118 == 0x00000007 l1001EE73
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE3C:
	branch eax_118 == 0x00000008 l1001EE6A
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE41:
	branch eax_118 == 0x0000000D l1001EE6A
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE46:
	branch eax_118 == 0x0000000F l1001EE6A
// DataOut: cs ds eax ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE6A:
	fn1001ED33(ecx & 0x00000000, edi_55)
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE4C:
	branch eax_118 == 0x00000053 l1001EE73
// DataOut: cs ds ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE73:
	fn1001EBAD(ecx & 0x00000000, edi_55, ebp_56)
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE51:
	branch Mem0[Mem0[(ecx & 0x00000000) + 0x0000000C:word32]:word32] != 0x00000201 l1001EE7C
// DataOut: cs ds ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE7C:
// DataOut: cs ds ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EE5C:
	fn1001ED9A(ecx & 0x00000000, edi_55)
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001EE63:
// DataOut: cs ds ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EE81:
	Mem89[esp_54 - 0x00000004:word32] = ecx & 0x00000000
	word32 esp_90
	word32 edi_91
	word32 ebp_92
	word32 ecx_93
	byte SZO_94
	byte C_95
	word32 esi_96
	byte al_97
	byte Z_98
	word32 eax_99
	word16 si_100
	byte S_101
	byte SCZO_102
	word32 edx_103
	call ext-ms-win-session-winsta-l1-1-0.dll!WinStationFreeUserCredentials (retsize: 4; depth: 4)
		uses: al_61,C_86,dwLoc04_6,dwLoc08_14,dwLoc0C_12,dwLoc10_19,dwLoc14_21,dwLoc18_49,eax_63,ebp_56,ecx_87,edi_55,edx_67,esi_80,esp_88,S_76,SCZO_75,si_69,SZO_84,Z_85
		defs: al_97,C_95,eax_99,ebp_92,ecx_93,edi_91,edx_103,esi_96,esp_90,S_101,SCZO_102,si_100,SZO_94,Z_98
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx & 0x00000000 edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1001EE8F:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> cl:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp

fn1001EDDC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp esi:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> cl:<invalid> ebx:<invalid> bl:<invalid> ax:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp



word32 fn1001EE97(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn1001EE97_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001EE97:
	word32 edi_19 = Mem0[ecx + 0x00000004:word32]
	Mem25[edx:word32] = 0x00000000
	word32 ecx_33
	word32 edx_34
	word32 eax_116 = fn10010416(edi_19, 0x00000010, fp - 0x00000008, out ecx_33, out edx_34)
	branch eax_116 < 0x00000000 l1001EF15
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l1001EEC2:
	word32 eax_71 = CoTaskMemAlloc(dwLoc08)
	branch eax_71 == 0x00000000 l1001EF0F
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ecx:<invalid> edx:<invalid> -36(fp):0x00000010 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32)

l1001EF0F:
	eax_116 = 0x8007000E
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1001EED2:
	word32 ecx_95
	word32 edx_96
	word32 esi_97
	word32 edi_98
	word32 eax_99 = fn1000CE15(eax_71, edx_34, eax_71, es, ds, out ecx_95, out edx_96, out esi_97, out edi_98)
	memset(eax_71, esi_97, eax_99)
	word32 eax_108 = esi_97
	branch edi_98 == 0x00000000 l1001EF08
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32)

l1001EEED:
	word32 edx_121
	*edxOut = ecx
	word32 ecx_122 = edi_98
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l1001EEF2:
	word32 esi_127 = Mem25[ecx:word32] + eax_108
	word32 edi_126 = eax_108 + eax_71
	Mem130[edi_126:word32] = Mem25[esi_127:word32]
	Mem134[edi_126 + 0x00000004:word32] = Mem130[esi_127 + 0x00000004:word32]
	Mem138[edi_126 + 0x00000008:word32] = Mem134[esi_127 + 0x00000008:word32]
	Mem142[edi_126 + 0x0000000C:word32] = Mem138[esi_127 + 0x0000000C:word32]
	eax_108 = eax_108 + 0x00000010
	ecx_122 = ecx_122 - 0x00000001
	branch ecx_122 != 0x00000000 l1001EEF2
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:ecx ebx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(32)

l1001EF05:
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:ecx ebx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32)

l1001EF08:
	Mem120[edx:word32] = eax_71
	eax_116 = esi_97
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001EF14:
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):ebx -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1001EF15:
	return eax_116
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:ebx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1001EE97_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> edx:<invalid> ebx:ebx -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp



byte fn1001EF1B()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esp
fn1001EF1B_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EF1B:
	word32 eax_12 = Mem0[0x1003155C:word32]
	byte al_13 = (byte) eax_12
	branch eax_12 != 0x00000000 l1001EF52
// DataOut: al cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001EF2A:
	byte al_38 = fn1002FEAA()
	branch al_38 == 0x00 l1001EF44
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0005(0)

l1001EF36:
	word32 esp_67
	word32 edi_68
	word32 ebp_69
	word32 ecx_70
	word32 eax_71
	byte SZO_72
	byte C_73
	byte Z_74
	byte al_75
	byte SCZO_76
	call ext-ms-win-session-winsta-l1-1-0.dll!WinStationIsSessionRemoteable (retsize: 4; depth: 24)
		uses: al_38,bLoc05_37,C_41,dwLoc04_6,dwLoc08_10,dwLoc0C_61,dwLoc10_63,dwLoc14_65,eax_59,ebp_7,ecx,edi_3,esp_64,SCZO,SZO_39,Z_40
		defs: al_75,C_73,eax_71,ebp_69,ecx_70,edi_68,esp_67,SCZO_76,SZO_72,Z_74
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -8(fp):ecx -5(fp):al -4(fp):ebp
// LocalsOut: fp(32) Local -0005(0)

l1001EF44:
	word32 eax_54 = (word32) (al_13 == 0x00)
	Mem58[0x1003155C:word32] = eax_54 + 0x00000001
	eax_12 = eax_54 + 0x00000001
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):al -4(fp):ebp
// LocalsOut: fp(32)

l1001EF52:
	return eax_12 == 0x00000001
// DataOut: al cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> al:<invalid> ecx:<invalid> cl:<invalid> -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):al -4(fp):ebp

fn1001EF1B_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> al:Test(EQ,Z) ecx:<invalid> cl:<invalid> -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):al -4(fp):ebp



void fn1001EF5C(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1001EF5C_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0194(32) Local -01A4(32) Local -01A8(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001EF5C:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebp_127 = fp - 0x00000004
	word32 esp_128 = fp - 0x000001C8
	word32 edx_124
	word32 eax_126 = fn1001EE97(dwArg0C, fp - 0x000001A4, es, ds, out edx_124)
	branch eax_126 < 0x00000000 l1001F33F
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -019C(32) Local -01A0(32) Local -01A4(32) Local -01A8(32) Local -01AC(32) Local -01B4(32) Local -01B8(32)

l1001EFB2:
	word32 esi_144 = Mem0[dwArg0C + 0x00000004:word32]
	word32 esp_157 = fp - 0x000001C8
	eax_126 = dwLoc01A4
	word32 ecx_154
	branch fn10010416(esi_144, 0x00000004, fp - 0x000001A8, out ecx_154, out edx_124) < 0x00000000 l1001F333
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01A8(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001EFE0:
	eax_126 = CoTaskMemAlloc(dwLoc01A8)
	esp_157 = fp - 0x000001C8
	word32 ebx_225 = eax_126
	branch eax_126 == 0x00000000 l1001F333
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -464(fp):0x00000004 -460(fp):fp - 0x000001A8 -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001EFF6:
	word32 ecx_230
	word32 esi_232
	word32 edi_233
	memset(eax_126, 0x00000000, fn1000CE15(eax_126, edx_124, eax_126, es, ds, out ecx_230, out edx_124, out esi_232, out edi_233))
	branch esi_232 == 0x00000000 l1001F01C
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -464(fp):0x00000004 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32) Local -01D0(32)

l1001F00D:
	word32 ecx_825 = esi_232
	word32 edi_829 = eax_126
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -468(fp):<invalid> -464(fp):0x00000000 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32) Local -01D0(32)

l1001F014:
	branch ecx_825 == 0x00000000 l1001F016
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -468(fp):<invalid> -464(fp):0x00000000 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32) Local -01D0(32)

l1001F016:
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -468(fp):<invalid> -464(fp):0x00000000 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32) Local -01D0(32)

l1001F01C:
	word32 esi_254
	word32 edi_255
	word32 eax_269 = CoCreateInstance(dwArg08, 0x00000000, 0x00000001, 0x10003F50, fn1000FC32(edx_124, eax_126, esi_232, es, ds, fp - 0x00000194, out esi_254, out edi_255))
	branch Mem0[0x10031000:word32] <=u 0x00000004 l1001F0B4
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -468(fp):<invalid> -464(fp):0x00000000 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0190(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32) Local -01DC(32)

l1001F055:
	fn1000C51D(fp - 0x00000050, 0x10003428)
	fn1000C51D(fp - 0x00000040, 0x10003DFC)
	word32 ecx_792 = fp - 0x00000040 ^ fp - 0x00000040
	word32 ecx_815
	word32 esi_817
	fn1000C491(0x10031000, 0x1000A298, ecx_792, ecx_792, 0x00000006, fp - 0x00000070, out ecx_815, out edx_124, out esi_817, out edi_255)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -476(fp):<invalid> -472(fp):0x00000000 -468(fp):0x00000001 -464(fp):0x10003F50 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0B4:
	eax_126 = eax_269
	word32 esp_290 = fp - 0x000001C8
	branch eax_269 < 0x00000000 l1001F30B
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0BC:
	branch edi_255 != 0x00000001 l1001F1A2
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0C5:
	branch fn1001EF1B() == 0x00 l1001F1A2
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0D2:
	word32 ecx_629 = 0x00000007
	word32 edi_635 = fp - 0x0000018C
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0DD:
	branch ecx_629 == 0x00000000 l1001F0DF
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):0x00000007 -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0DF:
	word32 esp_653
	word32 edi_654
	word32 ebp_655
	byte SCZO_656
	word32 eax_657
	byte SZO_658
	byte C_659
	word32 ebx_660
	word32 esi_661
	word32 ecx_662
	word32 edx_663
	byte S_664
	byte Z_665
	byte CZ_666
	byte al_667
	bcuiposr0 None_668
	selector es_669
	selector ds_670
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 472)
		uses: al_642,C_634,CZ_273,ds,dwLoc0124,dwLoc0128,dwLoc012C,dwLoc0130,dwLoc0190_274,dwLoc0194_248,dwLoc0198_164,dwLoc019C_36,dwLoc01A0_37,dwLoc01A4,dwLoc01A8,dwLoc01AC_31,dwLoc01B0_153,dwLoc01B4_30,dwLoc01B8_38,dwLoc01C0_19,dwLoc01C4_24,dwLoc01C8_26,dwLoc01CC_646,dwLoc01D0_648,dwLoc01D4_651,dwLoc01D8_283,dwLoc01DC_268,dwLoc04_6,dwLoc0C_14,dwLoc14_282,dwLoc18_281,dwLoc1C_280,dwLoc20_279,dwLoc24_278,dwLoc28_277,dwLoc2C_276,dwLoc30_275,dwLoc74,dwLoc78,dwLoc7C,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLocD4,dwLocD8,dwLocDC,dwLocE0,eax_641,ebp_7,ebx_225,ecx_652,edi_644,edx_288,es,esi_649,esp_650,None,S_295,SCZO_384,SZO_633,Z_625
		defs: al_667,C_659,CZ_666,ds_670,eax_657,ebp_655,ebx_660,ecx_662,edi_654,edx_663,es_669,esi_661,esp_653,None_668,S_664,SCZO_656,SZO_658,Z_665
	word32 esp_671
	word32 ebp_673
	byte SCZO_674
	word32 eax_675
	byte SZO_676
	byte C_677
	word32 esi_679
	word32 ecx_680
	word32 edx_681
	byte S_682
	byte Z_683
	byte CZ_684
	byte al_685
	bcuiposr0 None_686
	selector es_687
	selector ds_688
	word32 edi_672
	call Mem0[esi_661 + 0x00000010:word32] (retsize: 4; depth: 4)
		uses: al_667,C_659,CZ_666,ds_670,dwLoc0124,dwLoc0128,dwLoc012C,dwLoc0130,dwLoc0190_274,dwLoc0194_248,dwLoc0198_164,dwLoc019C_36,dwLoc01A0_37,dwLoc01A4,dwLoc01A8,dwLoc01AC_31,dwLoc01B0_153,dwLoc01B4_30,dwLoc01B8_38,dwLoc01C0_19,dwLoc01C4_24,dwLoc01C8_26,dwLoc01CC_646,dwLoc01D0_648,dwLoc01D4_651,dwLoc01D8_283,dwLoc01DC_268,dwLoc04_6,dwLoc0C_14,dwLoc14_282,dwLoc18_281,dwLoc1C_280,dwLoc20_279,dwLoc24_278,dwLoc28_277,dwLoc2C_276,dwLoc30_275,dwLoc74,dwLoc78,dwLoc7C,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLocD4,dwLocD8,dwLocDC,dwLocE0,eax_657,ebp_655,ebx_660,ecx_662,edi_654,edx_663,es_669,esi_661,esp_653,None_668,S_664,SCZO_656,SZO_658,Z_665
		defs: al_685,C_677,CZ_684,ds_688,eax_675,ebp_673,ebx_678,ecx_680,edi_672,edx_681,es_687,esi_679,esp_671,None_686,S_682,SCZO_674,SZO_676,Z_683
	Mem690[esp_671 - 0x00000004:word32] = 0x00000004
	branch Mem690[0x10031000:word32] <=u Mem690[esp_671 - 0x00000004:word32] l1001F173
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):0x00000007 -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0190(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F113:
	fn1000C51D(fp - 0x00000100, 0x10003428)
	fn1000C51D(fp - 0x000000F0, 0x10004CE8)
	Mem772[esp_671 - 0x00000004:word32] = fp - 0x00000120
	Mem774[esp_671 - 0x00000008:word32] = 0x00000005
	word32 ecx_761 = fp - 0x000000F0 ^ fp - 0x000000F0
	Mem776[esp_671 - 0x0000000C:word32] = ecx_761
	Mem778[esp_671 - 0x00000010:word32] = ecx_761
	word32 ecx_780
	word32 edx_781
	word32 esi_782
	fn1000C491(0x10031000, 0x1000A25A, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_780, out edx_781, out esi_782, out edi_672)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F173:
	esp_290 = esp_671
	branch eax_675 != 0x00000000 l1001F1A2
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F177:
	word32 eax_710 = Mem690[edi_672 + 0x00000018:word32]
	branch eax_710 == 0x00000000 l1001F197
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F17E:
	word32 edx_736 = Mem690[edi_672 + 0x00000014:word32]
	branch edx_736 == 0x00000000 l1001F18E
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F185:
	Mem751[eax_710:byte] = 0x00
	eax_710 = eax_710 + 0x00000001
	edx_736 = edx_736 - 0x00000001
	branch edx_736 != 0x00000000 l1001F185
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F18E:
	Mem747[esp_671 - 0x00000004:word32] = Mem690[edi_672 + 0x00000018:word32]
	CoTaskMemFree(Mem747[esp_671 - 0x00000004:LPVOID])
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F197:
	Mem724[esp_671 - 0x00000004:word32] = 0x00000007
	word32 ecx_725 = Mem724[esp_671 - 0x00000004:word32]
	esp_290 = esp_671
	word32 esi_727 = fp - 0x0000018C
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F1A0:
	branch ecx_725 == 0x00000000 l1001F1A2
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F1A2:
	word32 esp_398 = esp_290 - 0x00000004
	Mem399[esp_398:word32] = esi_144
	Mem401[esp_398 - 0x00000004:word32] = ebx_225
	Mem404[esp_398 - 0x00000008:word32] = dwLoc01A4
	Mem408[esp_398 - 0x0000000C:word32] = edx
	Mem411[esp_398 - 0x00000010:word32] = ecx
	Mem414[esp_398 - 0x00000014:word32] = dwLoc0194 & 0x00000000
	word32 esp_415
	word32 edi_416
	word32 ebp_417
	byte SCZO_418
	word32 eax_419
	byte SZO_420
	byte C_421
	word32 ebx_422
	word32 esi_423
	word32 ecx_424
	word32 edx_425
	byte S_426
	byte Z_427
	byte CZ_428
	byte al_429
	bcuiposr0 None_430
	selector es_431
	selector ds_432
	call Mem414[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_397,C_296,CZ_273,ds,dwLoc0124,dwLoc0128,dwLoc012C,dwLoc0130,dwLoc0190_274,dwLoc0194_248,dwLoc0198_164,dwLoc019C_36,dwLoc01A0_37,dwLoc01A4,dwLoc01A8,dwLoc01AC_31,dwLoc01B0_153,dwLoc01B4_30,dwLoc01B8_38,dwLoc01C0_19,dwLoc01C4_24,dwLoc01C8_26,dwLoc01CC_386,dwLoc01D0_387,dwLoc01D4_388,dwLoc01D8_283,dwLoc01DC_268,dwLoc04_6,dwLoc0C_14,dwLoc14_282,dwLoc18_281,dwLoc1C_280,dwLoc20_279,dwLoc24_278,dwLoc28_277,dwLoc2C_276,dwLoc30_275,dwLoc74,dwLoc78,dwLoc7C,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLocD4_392,dwLocD8_389,dwLocDC_390,dwLocE0_391,eax_396,ebp_7,ebx_393,ecx_412,edi_395,edx_288,es,esi_405,esp_413,None,S_295,SCZO_384,SZO_294,Z_385
		defs: al_429,C_421,CZ_428,ds_432,eax_419,ebp_417,ebx_422,ecx_424,edi_416,edx_425,es_431,esi_423,esp_415,None_430,S_426,SCZO_418,SZO_420,Z_427
	word32 esp_433
	byte SCZO_436
	word32 eax_437
	byte SZO_438
	byte C_439
	word32 esi_441
	word32 ecx_442
	byte S_444
	byte Z_445
	byte CZ_446
	byte al_447
	bcuiposr0 None_448
	word32 edi_434
	call Mem414[esi_423 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: al_429,C_421,CZ_428,ds_432,dwLoc0124,dwLoc0128,dwLoc012C,dwLoc0130,dwLoc0190_274,dwLoc0194_248,dwLoc0198_164,dwLoc019C_36,dwLoc01A0_37,dwLoc01A4,dwLoc01A8,dwLoc01AC_31,dwLoc01B0_153,dwLoc01B4_30,dwLoc01B8_38,dwLoc01C0_19,dwLoc01C4_24,dwLoc01C8_26,dwLoc01CC_386,dwLoc01D0_387,dwLoc01D4_388,dwLoc01D8_283,dwLoc01DC_268,dwLoc04_6,dwLoc0C_14,dwLoc14_282,dwLoc18_281,dwLoc1C_280,dwLoc20_279,dwLoc24_278,dwLoc28_277,dwLoc2C_276,dwLoc30_275,dwLoc74,dwLoc78,dwLoc7C,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLocD4_392,dwLocD8_389,dwLocDC_390,dwLocE0_391,eax_419,ebp_417,ebx_422,ecx_424,edi_416,edx_425,es_431,esi_423,esp_415,None_430,S_426,SCZO_418,SZO_420,Z_427
		defs: al_447,C_439,CZ_446,ds_450,eax_437,ebp_435,ebx_440,ecx_442,edi_434,edx_443,es_449,esi_441,esp_433,None_448,S_444,SCZO_436,SZO_438,Z_445
	branch Mem414[0x10031000:word32] <=u 0x00000004 l1001F244
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0190(32) Local -0194(32) Local -0198(32) Local -01B8(32)

l1001F1E0:
	fn1000C51D(fp - 0x00000150, 0x10003428)
	fn1000C51D(fp - 0x00000140, 0x10004D1C)
	Mem607[esp_433 - 0x00000004:word32] = fp - 0x00000170
	Mem609[esp_433 - 0x00000008:word32] = 0x00000005
	word32 ecx_596 = fp - 0x00000140 ^ fp - 0x00000140
	Mem611[esp_433 - 0x0000000C:word32] = ecx_596
	Mem613[esp_433 - 0x00000010:word32] = ecx_596
	word32 ecx_615
	word32 esi_617
	fn1000C491(0x10031000, 0x1000A25A, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_615, out edx_124, out esi_617, out edi_434)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -01B8(32)

l1001F244:
	eax_126 = eax_437
	esp_290 = esp_433
	branch eax_437 < 0x00000000 l1001F30B
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -01B8(32)

l1001F24C:
	word32 esi_468 = edi_434 - 0x00000001
	branch esi_468 < 0x00000000 l1001F30B
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -01B8(32)

l1001F257:
	word32 edi_472 = dwArg0C
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F25D:
	branch Mem414[ebx_225 + esi_468 * 0x00000004:word32] != 0x00000000 l1001F302
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F267:
	branch Mem414[0x10031000:word32] <=u 0x00000004 l1001F2FA
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F274:
	Mem541[esp_433 - 0x00000004:word32] = 0x00002000
	Mem543[esp_433 - 0x00000008:word32] = 0x00000000
	word32 edx_545
	branch (byte) fn1000C54F(0x10031000, dwArg00, dwArg04, out edx_545) == 0x00 l1001F2FA
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F289:
	fn1000C51D(fp - 0x000000B0, 0x10003428)
	fn1000C51D(fp - 0x000000A0, 0x10004D40)
	Mem563[esp_433 - 0x00000004:word32] = 0x00000010
	Mem578[esp_433 - 0x00000004:word32] = fp - 0x000000D0
	Mem580[esp_433 - 0x00000008:word32] = 0x00000006
	word32 ecx_559 = fp - 0x000000A0 ^ fp - 0x000000A0
	Mem582[esp_433 - 0x0000000C:word32] = ecx_559
	Mem584[esp_433 - 0x00000010:word32] = ecx_559
	word32 ecx_586
	word32 edx_587
	fn1000C491(0x10031000, 0x1000A205, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_586, out edx_587, out esi_468, out edi_472)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:0x10031000 esi:<invalid> al:<invalid> cl:0x00 -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F2FA:
	Mem533[esp_433 - 0x00000004:word32] = esi_468
	eax_126 = fn1001DCB9(edi_472, dwArg00, out edx_124)
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F302:
	esp_290 = esp_433
	esi_468 = esi_468 - 0x00000001
	branch esi_468 >= 0x00000000 l1001F25D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F30B:
	word32 esp_331 = esp_290 - 0x00000004
	Mem332[esp_331:word32] = ebx_225
	CoTaskMemFree(Mem332[esp_331:LPVOID])
	esp_157 = esp_331 + 0x00000004
	branch (dwLoc0194 & 0x00000000) == 0x00000000 l1001F333
// DataOut: cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0194(32) Local -0198(32)

l1001F31C:
	Mem345[esp_331:word32] = dwLoc0194 & 0x00000000
	word32 esp_348
	word32 edi_349
	word32 ebp_350
	byte SCZO_351
	word32 eax_352
	byte SZO_353
	byte C_354
	word32 ebx_355
	word32 esi_356
	word32 ecx_357
	word32 edx_358
	byte S_359
	byte Z_360
	byte CZ_361
	byte al_362
	bcuiposr0 None_363
	selector es_364
	selector ds_365
	call Mem345[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_343,C_341,CZ_321,ds_317,dwLoc0124_308,dwLoc0128_305,dwLoc012C_306,dwLoc0130_307,dwLoc0190_304,dwLoc0194_339,dwLoc0198_164,dwLoc019C_36,dwLoc01A0_37,dwLoc01A4,dwLoc01A8,dwLoc01AC_31,dwLoc01B0_153,dwLoc01B4_30,dwLoc01B8_38,dwLoc01C0_19,dwLoc01C4_24,dwLoc01C8_26,dwLoc01CC_297,dwLoc01D0_298,dwLoc01D4_299,dwLoc01D8_283,dwLoc01DC_268,dwLoc04_6,dwLoc0C_14,dwLoc14_282,dwLoc18_281,dwLoc1C_280,dwLoc20_279,dwLoc24_278,dwLoc28_277,dwLoc2C_276,dwLoc30_275,dwLoc74_316,dwLoc78_315,dwLoc7C_314,dwLoc80_313,dwLoc84_312,dwLoc88_311,dwLoc8C_310,dwLoc90_309,dwLocD4_303,dwLocD8_300,dwLocDC_301,dwLocE0_302,eax_342,ebp_327,ebx_325,ecx_347,edi_330,edx_323,es_318,esi_346,esp_344,None_319,S_322,SCZO_324,SZO_340,Z_336
		defs: al_362,C_354,CZ_361,ds_365,eax_352,ebp_350,ebx_355,ecx_357,edi_349,edx_358,es_364,esi_356,esp_348,None_363,S_359,SCZO_351,SZO_353,Z_360
	word32 edi_367
	byte SCZO_369
	byte SZO_371
	byte C_372
	word32 ebx_373
	word32 esi_374
	word32 ecx_375
	byte S_377
	byte Z_378
	byte CZ_379
	byte al_380
	bcuiposr0 None_381
	call esi_356 (retsize: 4; depth: 4)
		uses: al_362,C_354,CZ_361,ds_365,dwLoc0124_308,dwLoc0128_305,dwLoc012C_306,dwLoc0130_307,dwLoc0190_304,dwLoc0194_339,dwLoc0198_164,dwLoc019C_36,dwLoc01A0_37,dwLoc01A4,dwLoc01A8,dwLoc01AC_31,dwLoc01B0_153,dwLoc01B4_30,dwLoc01B8_38,dwLoc01C0_19,dwLoc01C4_24,dwLoc01C8_26,dwLoc01CC_297,dwLoc01D0_298,dwLoc01D4_299,dwLoc01D8_283,dwLoc01DC_268,dwLoc04_6,dwLoc0C_14,dwLoc14_282,dwLoc18_281,dwLoc1C_280,dwLoc20_279,dwLoc24_278,dwLoc28_277,dwLoc2C_276,dwLoc30_275,dwLoc74_316,dwLoc78_315,dwLoc7C_314,dwLoc80_313,dwLoc84_312,dwLoc88_311,dwLoc8C_310,dwLoc90_309,dwLocD4_303,dwLocD8_300,dwLocDC_301,dwLocE0_302,eax_352,ebp_350,ebx_355,ecx_357,edi_349,edx_358,es_364,esi_356,esp_348,None_363,S_359,SCZO_351,SZO_353,Z_360
		defs: al_380,C_372,CZ_379,ds_383,eax_370,ebp_368,ebx_373,ecx_375,edi_367,edx_376,es_382,esi_374,esp_366,None_381,S_377,SCZO_369,SZO_371,Z_378
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0198(32)

l1001F333:
	word32 esp_215 = esp_157 - 0x00000004
	Mem216[esp_215:word32] = dwLoc01A4
	CoTaskMemFree(Mem216[esp_215:LPVOID])
	esp_128 = esp_215 + 0x00000004
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1001F33F:
	word32 esp_131 = esp_128 + 0x00000004
	word32 ecx_139
	fn1002F420(eax_126, eax_11 ^ fp - 0x00000004, edx_124, Mem0[esp_131 + 0x00000004:word32], ebp_127, Mem0[esp_131:word32], Mem0[esp_128:word32], es, ds, out ecx_139)
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp

fn1001EF5C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -480(fp):<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -304(fp):fp - 0x00000190 -300(fp):fp - 0x00000140 ^ fp - 0x00000140 -296(fp):0x00000004 -292(fp):fp - 0x00000140 ^ fp - 0x00000140 -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -144(fp):<invalid> -140(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -136(fp):<invalid> -132(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -128(fp):<invalid> -124(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -120(fp):<invalid> -116(fp):fp - 0x000000A0 ^ fp - 0x000000A0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp

l1001F1A0_1:
	Mem732[edi_672:word32] = Mem724[esi_727:word32]
	esi_727 = esi_727 + 0x00000004
	edi_672 = edi_672 + 0x00000004
	ecx_725 = ecx_725 - 0x00000001
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):fp - 0x0000018C -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -224(fp):fp - 0x00000190 -220(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -216(fp):<invalid> -212(fp):fp - 0x000000F0 ^ fp - 0x000000F0 -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F0DD_1:
	Mem638[edi_635:word32] = 0x00000000
	edi_635 = edi_635 + 0x00000004
	ecx_629 = ecx_629 - 0x00000001
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -476(fp):<invalid> -472(fp):<invalid> -468(fp):<invalid> -464(fp):<invalid> -460(fp):0x00000007 -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -404(fp):<invalid> -400(fp):<invalid> -396(fp):<invalid> -48(fp):<invalid> -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):0x00000010 -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x00000190 -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):0x00000004 -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32)

l1001F014_1:
	Mem832[edi_829:word32] = 0x00000001
	edi_829 = edi_829 + 0x00000004
	ecx_825 = ecx_825 - 0x00000001
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000001C8 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -468(fp):<invalid> -464(fp):0x00000000 -460(fp):<invalid> -456(fp):edi -452(fp):esi -448(fp):ebx -440(fp):<invalid> -436(fp):edx -432(fp):<invalid> -428(fp):<invalid> -416(fp):<invalid> -412(fp):ecx -408(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0194(32) Local -0198(32) Local -019C(32) Local -01A0(32) Local -01AC(32) Local -01B0(32) Local -01B4(32) Local -01B8(32) Local -01D0(32)



word32 fn1001F352(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx ecx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1001F352_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0024(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001F352:
	word32 edx_118
	word32 esi_19 = 0x00000000
	branch ecx == 0x00000004 l1001F38F
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0024(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001F369:
	branch GetSystemMetrics(0x00000043) == 0x00000000 l1001F389
// DataOut: cs ds ebp ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:0x00000000 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0024(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001F375:
	word32 ecx_117
	branch fn100293ED(ecx, 0x100034F8, 0x100034D4, 0x00, out ecx_117, out edx_118) == 0x00 l1001F3B7
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> -28(fp):0x00000043 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001F389:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -32(fp):0x100034D4 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1001F38F:
	edx_118 = edx
	word32 edi_63 = Mem0[dwArg04 + 0x00000004:word32]
	branch edi_63 == 0x00000000 l1001F3B7
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> edx:edx ecx:ecx al:<invalid> cl:<invalid> -32(fp):0x100034D4 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l1001F399:
	fn1001EF5C(ecx, edx, fp - 0x00000004, es, ds, dwArg08, Mem0[dwArg04:word32] + esi_19, dwArg0C)
	esi_19 = esi_19 + 0x00000010
	edx_118 = edx
	edi_63 = edi_63 - 0x00000001
	branch edi_63 != 0x00000000 l1001F399
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> edx:edx ecx:ecx al:<invalid> cl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l1001F3B7:
	return edx_118
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp

fn1001F352_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ebx:ebx eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):ecx -4(fp):ebp



word32 fn1001F3C0(word32 ecx, byte dl, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs dl ds ebx ecx edi es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn1001F3C0_entry:
// DataOut: cs dl ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -04C0(32) Local -04C4(32) Local -04C8(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1001F3C0:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	byte al_18 = (byte) edx
	word32 esi_29 = 0x00000000
	word32 edi_278 = dwArg10
	branch Mem0[0x10031000:word32] <=u 0x00000004 l1001F4A6
// DataOut: al cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0490(8) Local -0494(32) Local -049C(32) Local -04A4(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32) Local -04C4(32) Local -04C8(32)

l1001F40F:
	fn1000C51D(fp - 0x0000045C, 0x10003428)
	fn1000C51D(fp - 0x0000044C, 0x10003088)
	word32 ecx_508
	word32 edx_509
	fn1000C491(0x10031000, 0x1000A196, 0x00000000, 0x00000000, 0x00000006, fp - 0x0000047C, out ecx_508, out edx_509, out esi_29, out edi_278)
	al_18 = (byte) edx (alias)
// DataOut: al cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx edx:<invalid> ecx:<invalid> esi:0x00000000 -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1180(fp):<invalid> -1172(fp):<invalid> -1168(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -049C(32) Local -04A4(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32) Local -04C4(32) Local -04C8(32)

l1001F4A6:
	word32 esi_100
	word32 edx_125
	branch ecx != 0x00000004 l1001F512
// DataOut: al cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x00000006 -1208(fp):fp - 0x0000047C -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):0x00000004 -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -049C(32) Local -04A4(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32) Local -04C4(32) Local -04C8(32)

l1001F4AB:
	branch (al_18 & 0x01) == 0x00 l1001F512
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x00000006 -1208(fp):fp - 0x0000047C -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):0x00000004 -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -049C(32) Local -04A4(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32) Local -04C4(32) Local -04C8(32)

l1001F512:
	word32 eax_126 = fn1001EE97(dwArg04, fp - 0x00000498, es, ds, out edx_125)
	esi_100 = eax_126
	branch eax_126 < 0x00000000 l1001F752
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x00000006 -1208(fp):fp - 0x0000047C -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):0x00000004 -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -0498(32) Local -049C(32) Local -04A4(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C4(32)

l1001F52D:
	word32 esi_138 = Mem0[dwArg04 + 0x00000004:word32]
	fn1000F2B0(edi_278)
	Mem147[edi_278:word32] = esi_29
	Mem151[edi_278 + 0x00000004:word32] = esi_138
	Mem152[edi_278 + 0x0000000C:word32] = esi_138
	*edxOut = fn1001F352(ecx, edx, es, ds, dwArg08, dwArg0C, edi_278)
	word32 eax_156 = Mem152[edi_278 + 0x00000004:word32]
	esi_100 = (0x00000000 - (0x00000000 <u eax_156) & 0x7FFFBFFB) + 0x80004005
	branch ecx == 0x00000005 l1001F752
// DataOut: cs ds eax ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x00000006 -1208(fp):fp - 0x0000047C -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32)

l1001F583:
	branch eax_156 != 0x00000000 l1001F752
// DataOut: cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1220(fp):0x00000000 -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32)

l1001F58B:
	word32 ebx_169 = 0x00000000
	word32 ecx_179
	branch fn100293ED(0x00000000, 0x100034F8, 0x100034D4, 0x00, out ecx_179, out edx_125) != 0x00 l1001F752
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1220(fp):0x00000000 -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32)

l1001F5A5:
	word32 eax_192 = fn1000F0D2(edi_278, es, ds, 0x10007638, out edx_125)
	esi_100 = eax_192
	branch eax_192 < 0x00000000 l1001F752
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1220(fp):0x00000000 -1216(fp):<invalid> -1212(fp):0x100034D4 -1208(fp):0x00000000 -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32)

l1001F5BC:
	branch RegOpenKeyExW(0x80000002, 0x10004D78, 0x00000000, 0x00020019, fp - 0x00000494) != 0x00000000 l1001F6EF
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1220(fp):0x00000000 -1216(fp):<invalid> -1212(fp):0x10007638 -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F5E1:
	word32 eax_303 = RegEnumKeyExW(dwArg04, ebx_169, fp - 0x00000214, fp - 0x0000049C, 0x00000000, 0x00000000, 0x00000000, 0x00000000)
	branch eax_303 != 0x00000000 l1001F6D8
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):<invalid> -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C4(32) Local -04C8(32)

l1001F61A:
	*edxOut = fp - 0x00000214
	word32 ecx_351
	branch fn1001328F(dwArg04, fp - 0x00000214, 0x10004DD0, fp - 0x0000041C, out ecx_351) < 0x00000000 l1001F6D2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32) Local -04C8(32)

l1001F640:
	branch CLSIDFromString(fp - 0x0000041C, fp - 0x0000048C) < 0x00000000 l1001F6D2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:fp - 0x00000214 ecx:0x00000000 esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):0x10004DD0 -1212(fp):fp - 0x0000041C -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C0(32) Local -04C8(32)

l1001F658:
	branch fn1000F0D2(edi_278, es, ds, fp - 0x0000048C, out edx_125) < 0x00000000 l1001F6D2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:fp - 0x00000214 ecx:0x00000000 esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):0x10004DD0 -1212(fp):fp - 0x0000041C -1208(fp):fp - 0x0000048C -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F66B:
	branch Mem152[0x10031000:word32] <=u 0x00000004 l1001F6D2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):0x10004DD0 -1212(fp):fp - 0x0000048C -1208(fp):0x00000000 -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F674:
	fn1000C51D(fp - 0x0000044C, 0x10003428)
	fn1000C51D(fp - 0x0000043C, 0x10004E00)
	word32 ecx_427
	fn1000C491(0x10031000, 0x1000A0F9, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000046C, out ecx_427, out edx_125, out esi_100, out edi_278)
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):0x10004DD0 -1212(fp):fp - 0x0000048C -1208(fp):0x00000000 -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0490(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F6D2:
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F6D8:
	ebx_169 = ebx_169 + 0x00000001
	branch eax_303 == 0x00000000 l1001F5E1
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0494(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F6E1:
	RegCloseKey(dwArg04)
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):fp - 0x0000049C -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):0x00000104 -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F6EF:
	branch Mem152[0x10031000:word32] <=u 0x00000004 l1001F752
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):<invalid> -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F6F8:
	fn1000C51D(fp - 0x0000044C, 0x10003428)
	fn1000C51D(fp - 0x0000043C, 0x10004E00)
	word32 ecx_263
	word32 edi_266
	fn1000C491(0x10031000, 0x1000A0F9, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000046C, out ecx_263, out edx_125, out esi_100, out edi_266)
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):<invalid> -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -04AC(32) Local -04B0(32) Local -04B4(32)

l1001F4AF:
	word32 eax_442 = fn1000F0D2(edi_278, es, ds, 0x10007608, out edx_125)
	esi_100 = eax_442
	branch eax_442 < 0x00000000 l1001F752
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:edx ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x00000006 -1208(fp):fp - 0x0000047C -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):0x00000004 -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F4C6:
	branch Mem0[0x10031000:word32] <=u ecx l1001F752
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x10007608 -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):0x00000004 -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -04AC(32) Local -04B0(32) Local -04B4(32) Local -04C8(32)

l1001F4D2:
	fn1000C51D(fp - 0x0000043C, 0x10003428)
	fn1000C51D(fp - 0x0000042C, 0x10004D58)
	word32 ecx_470
	word32 edi_473
	fn1000C491(0x10031000, 0x1000A14F, 0x00000000, 0x00000000, ecx, fp - 0x0000045C, out ecx_470, out edx_125, out esi_100, out edi_473)
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> -1220(fp):0x00000000 -1216(fp):0x00000000 -1212(fp):0x10007608 -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):0x00000004 -1172(fp):<invalid> -1168(fp):edx -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):fp - 0x000004A0 -1064(fp):0x00000000 -1060(fp):0x00000004 -1056(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -04AC(32) Local -04B0(32) Local -04B4(32)

l1001F752:
	word32 ecx_114
	return fn1002F420(esi_100, eax_11 ^ fp - 0x00000004, edx_125, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_114)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000004B4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):<invalid> -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001F3C0_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx edx:<invalid> ecx:<invalid> esi:esi al:<invalid> cl:<invalid> -1236(fp):<invalid> -1232(fp):<invalid> -1228(fp):fp - 0x00000214 -1224(fp):<invalid> -1220(fp):<invalid> -1216(fp):<invalid> -1212(fp):<invalid> -1208(fp):<invalid> -1204(fp):edi -1200(fp):esi -1196(fp):ebx -1188(fp):<invalid> -1184(fp):edx -1180(fp):<invalid> -1176(fp):<invalid> -1172(fp):<invalid> -1168(fp):<invalid> -1084(fp):fp - 0x00000498 -1080(fp):0x00000000 -1076(fp):0x00000004 -1072(fp):0x00000000 -1068(fp):<invalid> -1064(fp):<invalid> -1060(fp):<invalid> -1056(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1001F767(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp ebx edi esi esp
fn1001F767_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001F767:
	word32 eax_15 = edx
	branch ecx == 0x00000000 l1001F7B5
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001F779:
	word32 esi_42 = 0x00000000
	branch edx == 0x00000000 l1001F7AD
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:edx -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F780:
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:edx esi:0x00000000 -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F781:
	word32 ebx_66 = Mem0[ecx + esi_42 * 0x00000004:word32]
	branch ebx_66 == 0x00000000 l1001F7A7
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F788:
	branch Mem0[ebx_66 + 0x00000008:word32] == 0x00000000 l1001F79B
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F78E:
	CoTaskMemFree(Mem0[ebx_66 + 0x00000008:word32])
	Mem94[ebx_66 + 0x00000008:word32] = Mem0[ebx_66 + 0x00000008:word32] & 0x00000000
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F79B:
	CoTaskMemFree(Mem0[ecx + esi_42 * 0x00000004:word32])
	eax_15 = edx
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F7A7:
	esi_42 = esi_42 + 0x00000001
	branch esi_42 <u eax_15 l1001F781
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001F7AC:
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32)

l1001F7AD:
	CoTaskMemFree(ecx)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:edx esi:<invalid> ebx:ebx -24(fp):<invalid> -20(fp):ebx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32)

l1001F7B5:
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:edx esi:esi ebx:ebx -24(fp):<invalid> -20(fp):ecx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp

fn1001F767_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:edx esi:esi ebx:ebx -24(fp):<invalid> -20(fp):ecx -16(fp):esi -12(fp):edi -8(fp):edx -4(fp):ebp



word32 fn1001F7BA(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: eax ecx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn1001F7BA_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0018(32) Local -0064(32) Local -0068(32) Local -006C(32) Local -0070(32) Local -0090(32)

l1001F7BA:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edi_125 = ecx
	word32 edx_123
	branch fn100292FD(ecx, edx, ebx, esi, ecx, es, ds, fp - 0x00000070, out edx_123) < 0x00000000 l1001F8AF
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F7F6:
	word32 esi_107 = Mem0[ecx + 0x00000004:word32]
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> -140(fp):ecx -136(fp):fp - 0x00000070 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F8A6:
	esi_107 = esi_107 - 0x00000001
	branch esi_107 >= 0x00000000 l1001F7FE
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F7FE:
	edx_123 = 0x00000000
	branch (dwLoc6C & 0x00000000) <= 0x00000000 l1001F8A6
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F809:
	word32 eax_141 = Mem0[edi_125:word32] + (esi_107 << 0x00000004)
	word32 dwLoc60_145 = dwLoc70 & 0x00000000
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -006C(0) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F81B:
	word32 ecx_153 = 0x00000000
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -006C(0) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F81D:
	edi_125 = ecx
	branch Mem0[eax_141 + ecx_153 * 0x00000004:word32] != Mem0[dwLoc60_145 + ecx_153 * 0x00000004:word32] l1001F8DB
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -006C(0) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F8DB:
	dwLoc60_145 = dwLoc60_145 + 0x00000010
	edx_123 = edx_123 + 0x00000001
	branch edx_123 < (dwLoc6C & 0x00000000) l1001F81B
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -006C(0) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F8E9:
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F832:
	ecx_153 = ecx_153 + 0x00000001
	branch ecx_153 != 0x00000004 l1001F81D
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -006C(0) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F838:
	branch Mem0[0x10031000:word32] <=u ecx_153 l1001F89E
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F840:
	word32 edx_192
	branch (byte) fn1000C54F(0x10031000, 0x00000000, 0x00004000, out edx_192) == 0x00 l1001F89E
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F855:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10004E58)
	word32 ecx_225
	word32 edx_226
	fn1000C491(0x10031000, 0x1000A0A5, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000005C, out ecx_225, out edx_226, out esi_107, out edi_125)
// DataOut: cs ds ebp edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:0x10031000 al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):0x00000000 -136(fp):0x00004000 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F89E:
	fn1001DCB9(edi_125, esi_107, out edx_123)
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -006C(0) Local -0070(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -008C(32) Local -0090(32)

l1001F8AF:
	word32 esi_83 = Mem0[edi_125 + 0x00000004:word32]
	fn1000F2B0(fp - 0x00000070)
	word32 ecx_100
	return fn1002F420((0x00000000 - (0x00000000 <u esi_83) & 0x7FFFBFFB) + 0x80004005, eax_11 ^ fp - 0x00000004, edx_123, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_100)
// DataOut: cs ds eax ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1001F7BA_exit:
// DataOut: eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> ebx:ebx edx:<invalid> al:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000010 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1001F8EB(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn1001F8EB_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001F8EB:
	Mem12[ecx:word32] = 0x1000199C
	Mem13[ecx + 0x00000004:word32] = 0x1000194C
	Mem14[ecx + 0x00000008:word32] = 0x1000193C
	Mem15[ecx + 0x0000000C:word32] = 0x1000192C
	Mem16[ecx + 0x00000010:word32] = 0x1000191C
	Mem17[ecx + 0x00000014:word32] = 0x1000190C
	Mem18[ecx + 0x00000018:word32] = 0x100018E8
	word32 ecx_22
	word32 edx_23
	word32 esi_24
	fn1000F276(ecx + 0x00000088, ebx, esi, ecx, es, ds, out ecx_22, out edx_23, out esi_24)
	word32 ecx_27
	word32 edx_28
	word32 esi_29
	fn1000F276(ecx + 0x00000080, ebx, esi_24, ecx, es, ds, out ecx_27, out edx_28, out esi_29)
	fn1000F2EE(ecx + 0x00000054)
	fn100150E0(ecx + 0x00000038, es, ds)
	word32 edx_34
	word32 esi_35
	fn1000C640(ecx + 0x00000034, ebx, esi_29, ecx, es, ds, out edx_34, out esi_35)
	Mem37[ecx + 0x00000030:word32] = 0xC0000001
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1001F95B_thunk_fn1000F23B:
	word32 edx_44
	word32 ebp_45
	fn1000F23B(ecx + 0x00000018, ebx, ebp, esi, edi, es, ds, out edx_44, out ebp_45)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ecx:<invalid> esi:esi eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn1001F8EB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ebp:<invalid> -8(fp):edi -4(fp):esi



word32 fn1001F981(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
fn1001F981_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001F981:
	Mem15[ecx + 0x00000004:word32] = 0x100017AC
	fn10010735(ecx + 0x00000018, edx, es, ds)
	Mem22[ecx + 0x00000030:word32] = 0x00000001
	Mem23[ecx:word32] = 0x1000188C
	Mem24[ecx + 0x00000004:word32] = 0x1000183C
	Mem25[ecx + 0x00000008:word32] = 0x1000182C
	Mem26[ecx + 0x0000000C:word32] = 0x1000181C
	Mem27[ecx + 0x00000010:word32] = 0x1000180C
	Mem28[ecx + 0x00000014:word32] = 0x100017FC
	Mem29[ecx + 0x00000018:word32] = 0x100018E8
	branch Mem15[0x10031478:word32] == 0x00000000 l1001F9DE
// DataOut: cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001F9D7:
	__lock()
	Mem101[0x1003147C:word32] = Mem29[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1001F9DE:
	Mem32[ecx:word32] = 0x1000199C
	Mem33[ecx + 0x00000004:word32] = 0x1000194C
	Mem35[ecx + 0x00000008:word32] = 0x1000193C
	Mem37[ecx + 0x0000000C:word32] = 0x1000192C
	Mem38[ecx + 0x00000010:word32] = 0x1000191C
	Mem39[ecx + 0x00000014:word32] = 0x1000190C
	Mem40[ecx + 0x00000018:word32] = 0x100018E8
	Mem41[ecx + 0x00000034:word32] = 0x00000000
	Mem42[ecx + 0x00000038:word32] = 0x00000000
	Mem43[ecx + 0x0000003C:word32] = 0x00000000
	Mem44[ecx + 0x00000040:word32] = 0x00000000
	Mem45[ecx + 0x00000044:word32] = 0x00000000
	Mem46[ecx + 0x00000048:word32] = 0x00000000
	Mem47[ecx + 0x0000004C:word32] = 0x00000000
	Mem48[ecx + 0x00000050:word16] = 0x0000
	Mem49[ecx + 0x00000054:word32] = 0x00000000
	Mem50[ecx + 0x00000058:word32] = 0x00000000
	Mem51[ecx + 0x0000005C:word32] = 0x00000000
	Mem54[ecx + 0x00000060:word32] = Mem51[ecx + 0x00000060:word32] | 0xFFFFFFFF
	Mem57[ecx + 0x00000064:word32] = Mem54[ecx + 0x00000064:word32] | 0xFFFFFFFF
	Mem60[ecx + 0x00000068:word32] = Mem57[0x100075F8:word32]
	Mem66[ecx + 0x0000006C:word32] = Mem60[0x100075FC:word32]
	Mem70[ecx + 0x00000070:word32] = Mem66[0x10007600:word32]
	Mem74[ecx + 0x00000074:word32] = Mem70[0x10007604:word32]
	Mem75[ecx + 0x00000078:byte] = 0x01
	InitializeSRWLock(ecx + 0x0000007C)
	Mem78[ecx + 0x00000080:word32] = 0x00000000
	Mem79[ecx + 0x00000084:word16] = 0x0001
	Mem80[ecx + 0x00000088:word32] = 0x00000000
	Mem81[ecx + 0x0000008C:word32] = 0x00000000
	Mem82[ecx + 0x00000090:word32] = 0x00000000
	InitializeSRWLock(ecx + 0x00000094)
	Mem88[ecx + 0x0000009C:word32] = Mem82[ecx + 0x0000009C:word32] & 0x00000000
	Mem97[ecx + 0x00000098:byte] = 0x00
	return ecx
// DataOut: cs ds eax ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1001F981_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebx:ebx ecx:<invalid> eax:<invalid> esi:esi edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn1001FA98(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1001FA98_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0018(32) Stack +0004(32) Stack +0008(32)

l1001FA98:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem26[ecx + 0x0000008C:word32] = dwArg08
	AcquireSRWLockExclusive(ecx + 0x0000007C)
	fn1000F114(ecx + 0x00000080, ebx, es, ds, dwArg04)
	Mem39[ecx + 0x00000084:byte] = 0x00
	branch ecx == 0x0000007C l1001FADF
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001FAD8:
	ReleaseSRWLockExclusive(ecx + 0x0000007C)
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001FADF:
	word32 esp_52
	word32 edi_53
	word32 ebp_54
	word32 ecx_55
	word32 eax_56
	byte SZO_57
	byte C_58
	word32 esi_59
	byte Z_60
	word32 edx_61
	word32 ebx_62
	selector es_63
	selector ds_64
	call Mem39[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_42,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_21,dwLoc10_24,dwLoc14_46,dwLoc18_48,eax_44,ebp_7,ebx,ecx_51,edi_25,edx_49,es,esi_50,esp_47,SZO_40,Z_41
		defs: C_58,ds_64,eax_56,ebp_54,ebx_62,ecx_55,edi_53,edx_61,es_63,esi_59,esp_52,SZO_57,Z_60
	word32 esp_65
	word32 edi_66
	word32 ebp_67
	word32 ecx_68
	word32 eax_69
	byte SZO_70
	byte C_71
	word32 esi_72
	byte Z_73
	word32 edx_74
	word32 ebx_75
	selector es_76
	selector ds_77
	call esi_59 (retsize: 4; depth: 4)
		uses: C_58,ds_64,dwLoc04_6,dwLoc08_16,dwLoc0C_21,dwLoc10_24,dwLoc14_46,dwLoc18_48,eax_56,ebp_54,ebx_62,ecx_55,edi_53,edx_61,es_63,esi_59,esp_52,SZO_57,Z_60
		defs: C_71,ds_77,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_74,es_76,esi_72,esp_65,SZO_70,Z_73
	word32 ecx_86
	fn1002F420(eax_69, eax_13 ^ fp - 0x00000004, edx_74, ebx_75, ebp_67, Mem39[esp_65 + 0x00000004:word32], Mem39[esp_65:word32], es_76, ds_77, out ecx_86)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1001FA98_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):ecx + 0x00000004 -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn1001FB08(word32 ecx, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: ebx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1001FB08_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001FB08:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem25[ecx + 0x0000008C:word32] = Mem0[ecx + 0x0000008C:word32] & 0x00000000
	AcquireSRWLockExclusive(ecx + 0x0000007C)
	word32 ebx_33 = Mem25[ecx + 0x00000080:word32]
	word32 ecx_36
	word32 esi_38
	word32 edx_105
	word32 eax_39 = fn1000F276(ecx + 0x00000080, ebx_33, ecx, ecx + 0x0000007C, es, ds, out ecx_36, out edx_105, out esi_38)
	Mem40[esi_38 + 0x00000084:byte] = 0x01
	word32 ebp_55 = fp - 0x00000004
	branch ecx == 0x0000007C l1001FB4D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1001FB46:
	ReleaseSRWLockExclusive(ecx + 0x0000007C)
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -24(fp):ecx + 0x0000007C -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001FB4D:
	word32 esp_45 = fp - 0x00000014
	branch ebx_33 == 0x00000000 l1001FB64
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001FB51:
	word32 esp_80
	word32 edi_81
	word32 ebp_82
	word32 ecx_83
	word32 eax_84
	byte SZO_85
	byte C_86
	word32 ebx_87
	word32 esi_88
	byte Z_89
	selector es_90
	selector ds_91
	word32 edx_92
	call Mem40[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_48,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_23,dwLoc18_76,eax_74,ebp_7,ebx_33,ecx_79,edi_28,edx_37,es,esi_78,esp_75,SZO_46,Z_47
		defs: C_86,ds_91,eax_84,ebp_82,ebx_87,ecx_83,edi_81,edx_92,es_90,esi_88,esp_80,SZO_85,Z_89
	word32 edi_94
	word32 ecx_96
	byte SZO_98
	byte C_99
	word32 ebx_100
	word32 esi_101
	byte Z_102
	call esi_88 (retsize: 4; depth: 4)
		uses: C_86,ds_91,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_20,dwLoc14_23,dwLoc18_76,eax_84,ebp_82,ebx_87,ecx_83,edi_81,edx_92,es_90,esi_88,esp_80,SZO_85,Z_89
		defs: C_99,ds_104,eax_97,ebp_95,ebx_100,ecx_96,edi_94,edx_105,es_103,esi_101,esp_93,SZO_98,Z_102
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001FB64:
	word32 esp_59 = esp_45 + 0x00000004
	word32 edi_58 = Mem40[esp_45:word32]
	*ediOut = edi_58
	word32 esi_60 = Mem40[esp_59:word32]
	*esiOut = esi_60
	word32 ebx_65 = Mem40[esp_59 + 0x00000004:word32]
	word32 ecx_67
	fn1002F420(eax_39, eax_13 ^ fp - 0x00000004, edx_105, ebx_65, ebp_55, esi_60, edi_58, es, ds, out ecx_67)
	return ebx_65
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1001FB08_exit:
// DataOut: ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn1001FB75(word32 ecx, selector es, selector ds, byte bArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(8) Stack +0008(32)
fn1001FB75_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(8) Stack +0008(32)

l1001FB75:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch dwArg08 == 0x00000000 l1001FB94
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001FB91:
	Mem165[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001FB94:
	word32 esp_111
	word32 ebp_113
	word32 eax_115
	word32 edi_112
	word32 edx_118
	selector es_125
	selector ds_126
	branch bArg04 == 0x00 l1001FBB0
// DataOut: cs ds eax ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001FBB0:
	word32 esp_132
	word32 edi_133
	word32 ebp_134
	word32 ecx_135
	word32 eax_136
	byte SZO_137
	byte C_138
	word32 edx_139
	word32 ebx_140
	word32 esi_141
	byte Z_142
	byte SCZO_143
	byte S_144
	byte al_145
	selector es_146
	selector ds_147
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: al_35,C_30,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_22,dwLoc14_24,dwLoc18_130,dwLoc1C,eax_34,ebp_7,ebx,ecx_128,edi_25,edx_16,es,esi_127,esp_129,S,SCZO_32,SZO_29,Z_33
		defs: al_145,C_138,ds_147,eax_136,ebp_134,ebx_140,ecx_135,edi_133,edx_139,es_146,esi_141,esp_132,S_144,SCZO_143,SZO_137,Z_142
	word32 ecx_151
	byte SZO_153
	byte C_154
	word32 ebx_156
	word32 esi_157
	byte Z_158
	byte SCZO_159
	byte S_160
	byte al_161
	call esi_141 (retsize: 4; depth: 4)
		uses: al_145,C_138,ds_147,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_22,dwLoc14_24,dwLoc18_130,dwLoc1C,eax_136,ebp_134,ebx_140,ecx_135,edi_133,edx_139,es_146,esi_141,esp_132,S_144,SCZO_143,SZO_137,Z_142
		defs: al_161,C_154,ds_163,eax_152,ebp_150,ebx_156,ecx_151,edi_149,edx_155,es_162,esi_157,esp_148,S_160,SCZO_159,SZO_153,Z_158
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001FB9F:
	word32 esp_95
	word32 edi_96
	word32 ebp_97
	word32 ecx_98
	word32 eax_99
	byte SZO_100
	byte C_101
	word32 edx_102
	word32 ebx_103
	word32 esi_104
	byte Z_105
	byte SCZO_106
	byte S_107
	byte al_108
	selector es_109
	selector ds_110
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: al_35,C_30,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_22,dwLoc14_24,dwLoc18_89,dwLoc1C_91,eax_34,ebp_7,ebx,ecx_87,edi_25,edx_16,es,esi_86,esp_90,S,SCZO_32,SZO_29,Z_33
		defs: al_108,C_101,ds_110,eax_99,ebp_97,ebx_103,ecx_98,edi_96,edx_102,es_109,esi_104,esp_95,S_107,SCZO_106,SZO_100,Z_105
	word32 ecx_114
	byte SZO_116
	byte C_117
	word32 ebx_119
	word32 esi_120
	byte Z_121
	byte SCZO_122
	byte S_123
	byte al_124
	call esi_104 (retsize: 4; depth: 4)
		uses: al_108,C_101,ds_110,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_22,dwLoc14_24,dwLoc18_89,dwLoc1C_91,eax_99,ebp_97,ebx_103,ecx_98,edi_96,edx_102,es_109,esi_104,esp_95,S_107,SCZO_106,SZO_100,Z_105
		defs: al_124,C_117,ds_126,eax_115,ebp_113,ebx_119,ecx_114,edi_112,edx_118,es_125,esi_120,esp_111,S_123,SCZO_122,SZO_116,Z_121
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001FBBE:
	branch eax_115 < 0x00000000 l1001FBE5
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(8)

l1001FBC4:
	word32 esi_74 = edi_112 + 0x00000094
	word32 esp_75 = esp_111 - 0x00000004
	Mem76[esp_75:word32] = esi_74
	AcquireSRWLockExclusive(Mem76[esp_75:PSRWLOCK])
	Mem79[edi_112 + 0x00000098:byte] = bArg04
	branch esi_74 == 0x00000000 l1001FBE5
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001FBDE:
	Mem84[esp_75:word32] = esi_74
	ReleaseSRWLockExclusive(Mem84[esp_75:PSRWLOCK])
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> esi:ecx + 0x00000094 ebx:<invalid> al:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1001FBE5:
	word32 esp_61 = esp_111 + 0x00000004
	word32 ecx_69
	fn1002F420(eax_115, eax_13 ^ fp - 0x00000004, edx_118, Mem0[esp_61 + 0x00000004:word32], ebp_113, Mem0[esp_61:word32], Mem0[esp_111:word32], es_125, ds_126, out ecx_69)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> al:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1001FB75_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> al:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn1001FBFA(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO
// Preserved: edi esi esp
fn1001FBFA_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001FBFA:
	AcquireSRWLockExclusive(ecx + 0x0000007C)
	Mem15[ecx + 0x00000084:byte] = 0x01
	branch ecx == 0x0000007C l1001FC1C
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1001FC15:
	ReleaseSRWLockExclusive(ecx + 0x0000007C)
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000007C esi:ecx -12(fp):ecx + 0x0000007C -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1001FC1C:
	return
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x0000007C esi:ecx -12(fp):ecx + 0x0000007C -8(fp):edi -4(fp):esi

fn1001FBFA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi -12(fp):ecx + 0x0000007C -8(fp):edi -4(fp):esi



word32 fn1002043D(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002043D_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0060(32) Local -0074(32) Stack +0004(32)

l1002043D:
	word32 dwLoc60_100
	__align(fp - 0x00000004)
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000060
	Mem30[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	AcquireSRWLockShared(ecx + 0x0000007C)
	word32 esi_124 = ecx
	word32 edi_158 = ecx + 0x0000007C
	branch Mem30[ecx + 0x00000080:word32] == 0x00000000 l100204CB
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32) Local -0068(32) Local -006C(32) Local -0074(32)

l100204CB:
	dwLoc60_100 = 0x8000FFFF
	branch Mem30[0x10031000:word32] <=u 0x00000002 l1002052A
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx -112(fp):ecx + 0x0000007C -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(32)

l100204DC:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x10003088)
	word32 ecx_136 = fp - 0x0000002C ^ fp - 0x0000002C
	word32 ecx_155
	word32 esi_157
	fn1000C491(0x10031000, 0x1000AEAE, ecx_136, ecx_136, 0x00000005, fp - 0x0000005C, out ecx_155, out edx, out esi_157, out edi_158)
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx -112(fp):ecx + 0x0000007C -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):0x8000FFFF -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(32)

l10020475:
	branch Mem30[ecx + 0x00000084:byte] == 0x00 l100204BD
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx -112(fp):ecx + 0x0000007C -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32) Local -0068(32) Local -006C(32) Local -0074(32)

l1002047E:
	branch Mem30[0x10031000:word32] <=u 0x00000003 l100204BD
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx -112(fp):ecx + 0x0000007C -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32) Local -0068(32) Local -006C(32) Local -0074(32)

l10020487:
	fn1000C51D(fp - 0x0000003C, 0x10003E54)
	fn1000C51D(fp - 0x0000002C, 0x10004F78)
	word32 ecx_122
	word32 edx_123
	word32 edi_125
	fn1000C491(0x10031000, 0x1000AF01, 0x00000000, 0x00000000, 0x00000004, fp - 0x0000005C, out ecx_122, out edx_123, out esi_124, out edi_125)
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:ecx + 0x0000007C ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx -112(fp):ecx + 0x0000007C -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32) Local -0068(32) Local -006C(32) Local -0074(32)

l100204BD:
	word32 esi_96
	dwLoc60_100 = fn1002054D(esi_124, dwArg04, esi_124, es, ds, dwArg04, out edx, out esi_96, out edi_158)
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000004 -112(fp):<invalid> -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(32)

l1002052A:
	branch edi_158 == 0x00000000 l10020535
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(32)

l1002052E:
	ReleaseSRWLockShared(edi_158)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(32)

l10020535:
	word32 ecx_72
	return fn1002F420(dwLoc60_100, eax_11 ^ fp - 0x00000060, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_72)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000006C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp

fn1002043D_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx esi:esi ecx:<invalid> edx:<invalid> al:<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):edi -104(fp):esi -100(fp):ebx -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp



word32 fn1002054D(word32 ecx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es esi fs gs ss
// LiveOut: eax edi edx esi
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi rax rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002054D_entry:
	*esiOut = esi
// DataOut: cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002054D:
	word32 ebp_37 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 edi_17 = ecx
	word32 edx_18 = Mem0[ecx + 0x00000034:word32]
	*edxOut = edx_18
	branch edx_18 == 0x00000000 l10020579
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l10020567:
	word32 esp_65
	word32 edi_66
	word32 ebp_67
	word32 ecx_68
	word32 eax_69
	byte SZO_70
	byte C_71
	word32 edx_72
	byte Z_73
	word32 esi_74
	word32 ebx_75
	selector es_76
	selector ds_77
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_21,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_60,dwLoc14_62,eax_58,ebp_7,ebx,ecx_64,edi_17,edx_18,es,esi_63,esp_61,SZO_19,Z_20
		defs: C_71,ds_77,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_72,es_76,esi_74,esp_65,SZO_70,Z_73
	word32 esp_78
	word32 ecx_81
	word32 eax_82
	byte SZO_83
	byte C_84
	byte Z_86
	word32 esi_87
	call esi_74 (retsize: 4; depth: 4)
		uses: C_71,ds_77,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_60,dwLoc14_62,eax_69,ebp_67,ebx_75,ecx_68,edi_66,edx_72,es_76,esi_74,esp_65,SZO_70,Z_73
		defs: C_84,ds_90,eax_82,ebp_80,ebx_88,ecx_81,edi_79,edx_85,es_89,esi_87,esp_78,SZO_83,Z_86
	*esiOut = Mem0[esp_78:word32]
	esp_15 = esp_78 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l10020579:
	word32 edi_42 = Mem0[esp_15:word32]
	*ediOut = edi_42
	Mem44[dwArg04:word32] = Mem0[edi_17 + 0x00000034:word32]
	word32 ecx_50
	return fn1002F420(0x00000000, eax_13 ^ fp - 0x00000004, edx_18, ebx, ebp_37, esi, edi_42, es, ds, out ecx_50)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn1002054D_exit:
// DataOut: eax edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



word32 fn10020594(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10020594_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10020594:
	word32 ebp_125 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_174 = fp - 0x00000018
	word32 edi_124 = dwArg04
	word32 ebx_181 = ecx
	branch dwArg04 == 0x00000000 l100205C4
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100205B4:
	word32 esp_159
	word32 edi_160
	word32 ebp_161
	word32 ecx_162
	word32 eax_163
	byte SZO_164
	byte C_165
	word32 ebx_166
	word32 esi_167
	byte Z_168
	byte SCZO_169
	byte S_170
	selector es_171
	selector ds_172
	word32 edx_173
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_31,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_155,eax_153,ebp_7,ebx_27,ecx_157,edi_26,edx,es,esi_156,esp_154,S,SCZO,SZO_29,Z_30
		defs: C_165,ds_172,eax_163,ebp_161,ebx_166,ecx_162,edi_160,edx_173,es_171,esi_167,esp_159,S_170,SCZO_169,SZO_164,Z_168
	word32 eax_178
	byte SZO_179
	byte C_180
	word32 esi_182
	byte Z_183
	byte SCZO_184
	byte S_185
	word32 edx_188
	call esi_167 (retsize: 4; depth: 4)
		uses: C_165,ds_172,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_155,eax_163,ebp_161,ebx_166,ecx_162,edi_160,edx_173,es_171,esi_167,esp_159,S_170,SCZO_169,SZO_164,Z_168
		defs: C_180,ds_187,eax_178,ebp_176,ebx_181,ecx_177,edi_175,edx_188,es_186,esi_182,esp_174,S_185,SCZO_184,SZO_179,Z_183
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100205C4:
	word32 esp_123
	word32 esi_131 = ebx_181 + 0x00000038
	word32 ebx_130 = 0x00000000
	word32 eax_51 = Mem0[esi_131 + 0x00000004:word32]
	branch eax_51 != Mem0[esi_131 + 0x0000000C:word32] l100205E1
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100205D1:
	word32 esp_138 = esp_174 - 0x00000004
	Mem139[esp_138:word32] = ecx
	Mem144[esp_138 - 0x00000004:word32] = eax_51 + 0x00000001
	word32 edx_146
	word32 eax_147 = fn10015655(esi_131, es, ds, dwArg00, out edx_146)
	esp_123 = esp_138 + 0x00000004
	ebx_130 = eax_147
	branch eax_147 < 0x00000000 l10020607
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:ecx + 0x00000038 ecx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100205E1:
	Mem91[esi_131 + 0x00000004:word32] = Mem0[esi_131 + 0x00000004:word32] + 0x00000001
	esp_123 = esp_174
	word32 eax_95 = Mem91[esi_131:word32] + (Mem91[esi_131 + 0x00000004:word32] - 0x00000001) * 0x00000004
	branch eax_95 == 0x00000000 l10020607
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx + 0x00000038 ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100205F1:
	Mem99[eax_95:word32] = edi_124
	branch edi_124 == 0x00000000 l10020607
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx + 0x00000038 ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100205F7:
	word32 esp_104 = esp_174 - 0x00000004
	Mem105[esp_104:word32] = edi_124
	word32 esp_108
	word32 edi_109
	word32 ebp_110
	word32 ecx_111
	word32 eax_112
	byte SZO_113
	byte C_114
	word32 ebx_115
	word32 esi_116
	byte Z_117
	byte SCZO_118
	byte S_119
	selector es_120
	selector ds_121
	word32 edx_122
	call Mem105[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_102,ds_38,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_37,eax_103,ebp_47,ebx_88,ecx_107,edi_42,edx_87,es_39,esi_106,esp_104,S_86,SCZO_52,SZO_100,Z_101
		defs: C_114,ds_121,eax_112,ebp_110,ebx_115,ecx_111,edi_109,edx_122,es_120,esi_116,esp_108,S_119,SCZO_118,SZO_113,Z_117
	word32 ecx_126
	word32 eax_127
	byte SZO_128
	byte C_129
	byte Z_132
	byte SCZO_133
	byte S_134
	word32 edx_137
	call esi_116 (retsize: 4; depth: 4)
		uses: C_114,ds_121,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_37,eax_112,ebp_110,ebx_115,ecx_111,edi_109,edx_122,es_120,esi_116,esp_108,S_119,SCZO_118,SZO_113,Z_117
		defs: C_129,ds_136,eax_127,ebp_125,ebx_130,ecx_126,edi_124,edx_137,es_135,esi_131,esp_123,S_134,SCZO_133,SZO_128,Z_132
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx + 0x00000038 ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10020607:
	word32 edx_65
	word32 esi_66
	fn1000C640(fp - 0x0000000C, ebx_130, esi_131, edi_124, es, ds, out edx_65, out esi_66)
	word32 esp_71 = esp_123 + 0x00000004
	word32 edi_70 = Mem0[esp_123:word32]
	*ediOut = edi_70
	word32 esi_72 = Mem0[esp_71:word32]
	*esiOut = esi_72
	word32 ecx_79
	return fn1002F420(ebx_130, eax_15 ^ fp - 0x00000004, edx_65, Mem0[esp_71 + 0x00000004:word32], ebp_125, esi_72, edi_70, es, ds, out ecx_79)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10020594_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn100213F0(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn100213F0_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0050(32) Local -0064(32)

l100213F0:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	AcquireSRWLockExclusive(ecx + 0x0000007C)
	word32 esi_39
	fn10015089(fp - 0x00000050, edx, ecx + 0x0000007C, es, ds, ecx + 0x00000080, out esi_39)
	byte bl_42 = Mem0[ecx + 0x00000084:byte]
	word32 ebp_165 = fp - 0x00000004
	word32 edi_110 = ecx
	word32 ebx_170 = DPB(ebx, bl_42, 0)
	branch esi_39 == 0x00000000 l10021435
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0050(32)

l1002142E:
	ReleaseSRWLockExclusive(esi_39)
// DataOut: bl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> ebx:<invalid> edx:<invalid> -96(fp):ecx + 0x00000080 -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0050(32)

l10021435:
	word32 esp_113 = fp - 0x0000005C
	word32 esi_116 = (0x00000000 - (-(dwLoc50 & 0x00000000) == 0x00000000) & 0x7FFF0001) + 0x8000FFFF
	branch (dwLoc50 & 0x00000000) == 0x00000000 l100214A8
// DataOut: bl cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> ebx:<invalid> edx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002144E:
	branch bl_42 == 0x00 l10021493
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> ebx:<invalid> edx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10021493:
	word32 esp_147
	word32 edi_148
	word32 ebp_149
	byte SCZO_150
	word32 eax_151
	byte SZO_152
	byte C_153
	word32 ebx_154
	word32 esi_155
	word32 ecx_156
	byte bl_157
	byte Z_158
	byte CZ_159
	word32 edx_160
	selector es_161
	selector ds_162
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 104)
		uses: bl_42,C_102,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc50_15,dwLoc54_20,dwLoc58_23,dwLoc5C_25,dwLoc60_142,dwLoc64_144,dwLoc68,dwLoc6C,eax_49,ebp_7,ebx_43,ecx_146,edi_27,edx,es,esi_145,esp_143,SCZO,SZO_100,Z_101
		defs: bl_157,C_153,CZ_159,ds_162,eax_151,ebp_149,ebx_154,ecx_156,edi_148,edx_160,es_161,esi_155,esp_147,SCZO_150,SZO_152,Z_158
	byte SCZO_166
	word32 eax_167
	byte SZO_168
	byte C_169
	word32 esi_171
	word32 ecx_172
	byte bl_173
	byte Z_174
	byte CZ_175
	word32 edx_176
	call esi_155 (retsize: 4; depth: 4)
		uses: bl_157,C_153,CZ_159,ds_162,dwLoc04_6,dwLoc08_12,dwLoc50_15,dwLoc54_20,dwLoc58_23,dwLoc5C_25,dwLoc60_142,dwLoc64_144,dwLoc68,dwLoc6C,eax_151,ebp_149,ebx_154,ecx_156,edi_148,edx_160,es_161,esi_155,esp_147,SCZO_150,SZO_152,Z_158
		defs: bl_173,C_169,CZ_175,ds_178,eax_167,ebp_165,ebx_170,ecx_172,edi_164,edx_176,es_177,esi_171,esp_163,SCZO_166,SZO_168,Z_174
	esi_116 = eax_167
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> ebx:<invalid> edx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10021452:
	branch Mem0[0x10031000:word32] <=u 0x00000003 l1002148E
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> ebx:<invalid> edx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002145B:
	fn1000C51D(fp - 0x0000002C, 0x10003E54)
	fn1000C51D(fp - 0x0000001C, 0x10004F78)
	word32 ecx_133
	word32 edx_134
	word32 esi_135
	fn1000C491(0x10031000, 0x1000A856, 0x00000000, 0x00000000, 0x00000004, fp - 0x0000004C, out ecx_133, out edx_134, out esi_135, out edi_110)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> ebx:<invalid> edx:<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002148E:
	esp_113 = fp - 0x0000005C
	esi_116 = 0x00000001
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000005C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ebx:<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000004 -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100214A8:
	word32 ecx_80
	word32 edx_81
	word32 esi_82
	fn1000F276(fp - 0x00000050, ebx_170, esi_116, edi_110, es, ds, out ecx_80, out edx_81, out esi_82)
	word32 esp_87 = esp_113 + 0x00000004
	word32 ecx_95
	fn1002F420(esi_82, eax_11 ^ fp - 0x00000004, edx_81, Mem0[esp_87 + 0x00000004:word32], ebp_165, Mem0[esp_87:word32], Mem0[esp_113:word32], es, ds, out ecx_95)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ebx:<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100213F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> bl:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -96(fp):<invalid> -92(fp):edi -88(fp):esi -84(fp):ebx -80(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10021BC5(word32 ecx, word32 edx, word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10021BC5_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10021BC5:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem24[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
	word32 ebp_107 = fp - 0x00000004
	word32 esp_132 = fp - 0x0000001C
	word32 edi_106 = ecx
	word32 dwLoc10_124 = 0x80070490
	word32 ebx_136 = 0x00000000
	branch Mem24[ecx + 0x0000003C:word32] <=u 0x00000000 l10021C47
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32)

l10021BF2:
	word32 esp_105 = fp - 0x00000020
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32)

l10021BF3:
	word32 esi_178 = Mem24[Mem24[edi_106 + 0x00000038:word32] + ebx_136 * 0x00000004:word32]
	branch esi_178 == 0x00000000 l10021C13
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32)

l10021C00:
	word32 esp_149 = esp_105 - 0x00000004
	Mem150[esp_149:word32] = esi_178
	word32 esp_153
	word32 edi_154
	word32 ebp_155
	byte SCZO_156
	word32 eax_157
	byte SZO_158
	byte C_159
	word32 ebx_160
	word32 ecx_161
	byte CZ_162
	word32 esi_163
	byte Z_164
	word32 edx_165
	selector es_166
	selector ds_167
	call Mem150[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_82,CZ_68,ds_66,dwLoc04_6,dwLoc08_12,dwLoc0C_79,dwLoc10_22,dwLoc14_27,dwLoc18_17,dwLoc1C_19,dwLoc20_65,eax_148,ebp_75,ebx_72,ecx_152,edi_151,edx_69,es_67,esi_78,esp_149,SCZO_70,SZO_80,Z_81
		defs: C_159,CZ_162,ds_167,eax_157,ebp_155,ebx_160,ecx_161,edi_154,edx_165,es_166,esi_163,esp_153,SCZO_156,SZO_158,Z_164
	word32 edi_169
	word32 ebp_170
	byte SCZO_171
	word32 eax_172
	byte SZO_173
	byte C_174
	word32 ebx_175
	word32 ecx_176
	byte CZ_177
	byte Z_179
	word32 edx_180
	selector es_181
	selector ds_182
	call edi_154 (retsize: 4; depth: 4)
		uses: C_159,CZ_162,ds_167,dwLoc04_6,dwLoc08_12,dwLoc0C_79,dwLoc10_22,dwLoc14_27,dwLoc18_17,dwLoc1C_19,dwLoc20_65,eax_157,ebp_155,ebx_160,ecx_161,edi_154,edx_165,es_166,esi_163,esp_153,SCZO_156,SZO_158,Z_164
		defs: C_174,CZ_177,ds_182,eax_172,ebp_170,ebx_175,ecx_176,edi_169,edx_180,es_181,esi_178,esp_168,SCZO_171,SZO_173,Z_179
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32)

l10021C13:
	word32 esp_86 = esp_105 - 0x00000004
	Mem87[esp_86:word32] = esi_178
	word32 esp_90
	word32 edi_91
	word32 ebp_92
	byte SCZO_93
	word32 eax_94
	byte SZO_95
	byte C_96
	word32 ebx_97
	word32 ecx_98
	byte CZ_99
	word32 esi_100
	byte Z_101
	word32 edx_102
	selector es_103
	selector ds_104
	call Mem87[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_82,CZ_68,ds_66,dwLoc04_6,dwLoc08_12,dwLoc0C_79,dwLoc10_22,dwLoc14_27,dwLoc18_17,dwLoc1C_19,dwLoc20_65,eax_85,ebp_75,ebx_72,ecx_89,edi_71,edx_69,es_67,esi_88,esp_86,SCZO_70,SZO_80,Z_81
		defs: C_96,CZ_99,ds_104,eax_94,ebp_92,ebx_97,ecx_98,edi_91,edx_102,es_103,esi_100,esp_90,SCZO_93,SZO_95,Z_101
	byte SCZO_108
	word32 eax_109
	byte SZO_110
	byte C_111
	word32 ebx_112
	word32 ecx_113
	byte CZ_114
	word32 esi_115
	byte Z_116
	word32 edx_117
	call esi_100 (retsize: 4; depth: 4)
		uses: C_96,CZ_99,ds_104,dwLoc04_6,dwLoc08_12,dwLoc0C_79,dwLoc10_22,dwLoc14_27,dwLoc18_17,dwLoc1C_19,dwLoc20_65,eax_94,ebp_92,ebx_97,ecx_98,edi_91,edx_102,es_103,esi_100,esp_90,SCZO_93,SZO_95,Z_101
		defs: C_111,CZ_114,ds_119,eax_109,ebp_107,ebx_112,ecx_113,edi_106,edx_117,es_118,esi_115,esp_105,SCZO_108,SZO_110,Z_116
	branch eax_109 == dwArg04 l10021C38
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32)

l10021C38:
	Mem144[dwArg08:word32] = ebx_112
	word32 esi_146
	fn1000C640(fp - 0x0000000C, ebx_112, esi_115, edi_106, es, ds, out edx, out esi_146)
	dwLoc10_124 = 0x00000000
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:fp - 0x0000000C edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10021C2B:
	word32 esi_134
	fn1000C640(fp - 0x0000000C, ebx_112, esi_115, edi_106, es, ds, out edx, out esi_134)
	ebx_136 = ebx_112 + 0x00000001
	branch ebx_112 + 0x00000001 <u Mem87[edi_106 + 0x0000003C:word32] l10021BF3
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:fp - 0x0000000C edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32) Local -0014(32) Stack +0004(32) Stack +0008(32)

l10021C36:
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):0x80070490 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10021C46:
	esi = Mem87[esp_105:word32]
	esp_132 = esp_105 + 0x00000004
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10021C47:
	word32 ecx_58
	return fn1002F420(dwLoc10_124, eax_11 ^ fp - 0x00000004, edx, Mem24[esp_132 + 0x00000004:word32], ebp_107, esi, Mem24[esp_132:word32], es, ds, out ecx_58)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10021BC5_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):edi -24(fp):ebx -20(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10021C5C(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10021C5C_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0064(32) Local -0068(32) Local -008C(32)

l10021C5C:
	__align(fp - 0x00000004)
	AcquireSRWLockShared(ecx + 0x0000007C)
	word32 esi_42
	fn10015089(fp - 0x00000064, edx, esi, es, ds, ecx + 0x00000080, out esi_42)
	word32 ebp_221 = fp - 0x00000004
	word32 ebx_199 = ecx
	word32 edi_144 = ecx + 0x0000007C
	byte cl_45 = Mem0[ecx + 0x00000084:byte]
	branch ecx == 0x0000007C l10021CC0
// DataOut: cl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0064(32) Local -0068(32) Local -0069(8)

l10021CB5:
	ReleaseSRWLockShared(ecx + 0x0000007C)
// DataOut: cl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -136(fp):ecx + 0x00000080 -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0064(32) Local -0068(32)

l10021CC0:
	word32 esp_161 = fp - 0x00000084
	word32 esi_217 = dwLoc64 & 0x00000000
	branch (dwLoc64 & 0x00000000) == 0x00000000 l10021DCA
// DataOut: cl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0068(32)

l10021CD4:
	branch cl_45 == 0x00 l10021D24
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):0x8000FFFF -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0068(32)

l10021D24:
	word32 eax_200 = fn100228BC(fp - 0x00000068, fp + 0x00000004, ecx, ecx + 0x0000007C, es, ds, out ebx_199)
	Mem202[fp - 0x00000070:word32] = eax_200
	esp_161 = fp - 0x00000084
	branch eax_200 < 0x00000000 l10021DC1
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):0x8000FFFF -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D4B:
	branch Mem202[fp - 0x00000071:byte] == 0x00 l10021DA6
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):fp - 0x00000060 -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D52:
	Mem281[fp - 0x00000088:word32] = ecx + 0x0000007C
	AcquireSRWLockExclusive(Mem281[fp - 0x00000088:PSRWLOCK])
	word32 eax_288 = (0x00000000 - (-Mem281[ebx_199 + 0x00000080:word32] == 0x00000000) & 0x7FFF0001) + 0x8000FFFF
	Mem291[fp - 0x00000070:word32] = eax_288
	branch eax_288 < 0x00000000 l10021D94
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):fp - 0x00000060 -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D73:
	byte al_308 = Mem291[ebx_199 + 0x00000085:byte]
	Mem309[fp - 0x00000071:byte] = al_308
	branch al_308 == 0x00 l10021D94
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D81:
	Mem315[fp - 0x00000088:word32] = Mem309[fp - 0x00000068:word32]
	Mem322[fp - 0x00000070:word32] = fn10027276(Mem315[ebx_199 + 0x00000088:word32], fp - 0x00000004, es, ds, dwArg00, out ebx_199, out esi_217, out edi_144)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D94:
	branch edi_144 == 0x00000000 l10021D9F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D98:
	Mem306[fp - 0x00000088:word32] = edi_144
	ReleaseSRWLockExclusive(Mem306[fp - 0x00000088:PSRWLOCK])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D9F:
	esp_161 = fp - 0x00000084
	branch Mem291[fp - 0x00000071:byte] != 0x00 l10021DC1
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021DA6:
	Mem234[fp - 0x00000088:word32] = Mem202[fp - 0x00000068:word32]
	Mem238[fp - 0x0000008C:word32] = Mem234[ebx_199 + 0x0000004C:word32]
	Mem240[fp - 0x00000090:word32] = esi_217
	word32 esp_243
	word32 edi_244
	word32 ebp_245
	byte SCZO_246
	word32 eax_247
	byte SZO_248
	byte C_249
	word32 ebx_250
	word32 ecx_251
	word32 esi_252
	byte cl_253
	byte al_254
	byte Z_255
	byte CZ_256
	word32 edx_257
	byte S_258
	selector es_259
	selector ds_260
	call Mem240[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_47,bLoc69_48,bLoc71_49,C_205,cl_53,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc60_25,dwLoc64_17,dwLoc68_189,dwLoc70_185,dwLoc7C_22,dwLoc80_28,dwLoc84_30,dwLoc88_194,dwLoc8C_197,dwLoc90,dwLoc94,eax_235,ebp_7,ebx_230,ecx_242,edi_31,edx_192,es,esi_241,esp_239,S_204,SCZO_227,SZO_203,Z_228
		defs: al_254,C_249,cl_253,CZ_256,ds_260,eax_247,ebp_245,ebx_250,ecx_251,edi_244,edx_257,es_259,esi_252,esp_243,S_258,SCZO_246,SZO_248,Z_255
	byte SCZO_264
	word32 eax_265
	byte SZO_266
	byte C_267
	word32 ecx_269
	byte cl_271
	byte al_272
	byte Z_273
	byte CZ_274
	word32 edx_275
	byte S_276
	call esi_252 (retsize: 4; depth: 4)
		uses: al_254,bLoc69_48,bLoc71_49,C_249,cl_253,CZ_256,ds_260,dwLoc04_6,dwLoc08_12,dwLoc60_25,dwLoc64_17,dwLoc68_189,dwLoc70_185,dwLoc7C_22,dwLoc80_28,dwLoc84_30,dwLoc88_194,dwLoc8C_197,dwLoc90,dwLoc94,eax_247,ebp_245,ebx_250,ecx_251,edi_244,edx_257,es_259,esi_252,esp_243,S_258,SCZO_246,SZO_248,Z_255
		defs: al_272,C_267,cl_271,CZ_274,ds_278,eax_265,ebp_263,ebx_268,ecx_269,edi_262,edx_275,es_277,esi_270,esp_261,S_276,SCZO_264,SZO_266,Z_273
	Mem279[esp_161 + 0x00000014:word32] = eax_265
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -140(fp):fp + 0x00000008 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021DC1:
	word32 edx_224
	word32 esi_225
	fn1000C640(esp_161 + 0x0000001C, ebx_199, esi_217, edi_144, es, ds, out edx_224, out esi_225)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021CD8:
	branch Mem0[0x10031000:word32] <=u 0x00000003 l10021D17
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):0x8000FFFF -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10021CE1:
	fn1000C51D(fp - 0x0000003C, 0x10003E54)
	fn1000C51D(fp - 0x0000002C, 0x10004F78)
	word32 ecx_178
	word32 edx_179
	word32 esi_180
	fn1000C491(0x10031000, 0x1000A4B2, 0x00000000, 0x00000000, 0x00000004, fp - 0x0000005C, out ecx_178, out edx_179, out esi_180, out edi_144)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):0x8000FFFF -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021D17:
	esp_161 = fp - 0x00000084
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):0x00000004 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):0x8000FFFF -105(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021DCA:
	branch Mem0[0x10031000:word32] <=u 0x00000004 l10021E21
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10021DD3:
	fn1000C51D(esp_161 + 0x00000048, 0x10003428)
	fn1000C51D(esp_161 + 0x00000058, 0x10003088)
	Mem122[esp_161 + 0x00000070:word32] = 0x00000004
	Mem124[esp_161 + 0x0000006C:word32] = 0x00000000
	Mem125[esp_161 + 0x00000068:word32] = esp_161 + 0x00000014
	Mem126[esp_161 + 0x00000074:word32] = 0x00000000
	word32 esp_129 = esp_161 - 0x00000004
	Mem130[esp_129:word32] = esp_161 + 0x00000028
	Mem132[esp_129 - 0x00000004:word32] = 0x00000005
	Mem134[esp_129 - 0x00000008:word32] = 0x00000000
	Mem136[esp_129 - 0x0000000C:word32] = 0x00000000
	word32 ecx_141
	word32 edx_142
	word32 esi_143
	fn1000C491(0x10031000, 0x1000A456, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_141, out edx_142, out esi_143, out edi_144)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -148(fp):0x00000000 -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10021E21:
	word32 ecx_95
	word32 edx_96
	word32 esi_97
	fn1000F276(esp_161 + 0x00000020, ebx_199, Mem0[esp_161 + 0x00000014:word32], edi_144, es, ds, out ecx_95, out edx_96, out esi_97)
	word32 esp_102 = esp_161 + 0x00000004
	word32 ecx_110
	fn1002F420(esi_97, Mem0[esp_161 + 0x0000007C:word32] ^ esp_102 + 0x00000008, edx_96, Mem0[esp_102 + 0x00000004:word32], ebp_221, Mem0[esp_102:word32], Mem0[esp_161:word32], es, ds, out ecx_110)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp

fn10021C5C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> cl:<invalid> al:<invalid> esi:<invalid> edx:<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -113(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp



void fn10021E44(word32 ecx, word32 edx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10021E44_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10021E44:
	word32 edi_35
	byte SCZO_37
	word32 eax_38
	byte SZO_39
	byte C_40
	word32 esi_42
	word32 ecx_43
	byte Z_44
	byte al_45
	byte S_46
	byte CZ_47
	word32 edx_151
	selector ds_139
	selector es_140
	word32 ebx_147
	word32 ebp_148
	word32 esp_110
	call ntdll.dll!RtlGetDeviceFamilyInfoEnum (retsize: 4; depth: 148)
		uses: C_26,dwLoc04_6,dwLoc08_12,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_23,ebp_7,ebx_22,ecx_24,edi_3,esi,esp_31,SZO_25
		defs: al_45,C_40,CZ_47,ds_50,eax_38,ebp_36,ebx_41,ecx_43,edi_35,edx_48,es_49,esi_42,esp_34,S_46,SCZO_37,SZO_39,Z_44
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch true l10021FFA
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10021E76:
	Mem99[esp_110 - 0x00000004:word32] = ebx_147 + 0x00000094
	AcquireSRWLockShared(Mem99[esp_110 - 0x00000004:PSRWLOCK])
	byte al_101 = Mem99[ebx_147 + 0x00000098:byte]
	word32 edi_103 = Mem99[ebx_147 + 0x0000009C:word32]
	branch ebx_147 == 0x00000094 l10021EA0
// DataOut: al cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -005D(8)

l10021E96:
	Mem393[esp_110 - 0x00000004:word32] = ebx_147 + 0x00000094
	ReleaseSRWLockShared(Mem393[esp_110 - 0x00000004:PSRWLOCK])
// DataOut: al cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:ecx + 0x00000094 al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10021EA0:
	branch al_101 == 0x00 l10021FFA
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:ecx + 0x00000094 al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10021EA8:
	branch Mem99[ebx_147 + 0x00000090:word32] == 0x00000000 l10021FFA
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:ecx + 0x00000094 al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10021EB6:
	branch edi_103 != 0x00000002 l10021FFA
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:ecx + 0x00000094 ^ ecx + 0x00000094 al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10021EBF:
	word32 esi_124
	word32 edi_125
	branch fn10015AAA(fn1000EF25(fp - 0x00000070, edx_151, ebx_147, 0x00000000, es_140, ds_139, out esi_124, out edi_125)) < 0x00000000 l10021FD8
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:ecx + 0x00000094 ^ ecx + 0x00000094 al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32) Local -006C(32)

l10021EE5:
	Mem201[esp_110 - 0x00000004:word32] = fp - 0x00000064
	word32 esi_204
	word32 edi_205
	word32 eax_206 = fn1000FC32(edx_151, ebx_147, 0x00000000, es_140, ds_139, dwArg00, out esi_204, out edi_205)
	Mem210[esp_110 - 0x00000004:word32] = eax_206
	Mem212[esp_110 - 0x00000008:word32] = 0x10003F10
	Mem215[esp_110 - 0x0000000C:word32] = Mem212[ebx_147 + 0x00000090:word32]
	Mem217[esp_110 - 0x00000010:word32] = esi_204
	word32 esp_218
	word32 edi_219
	word32 ebp_220
	byte SCZO_221
	word32 eax_222
	byte SZO_223
	byte C_224
	word32 ebx_225
	word32 esi_226
	word32 ecx_227
	byte Z_228
	byte al_229
	byte S_230
	byte CZ_231
	word32 edx_232
	selector es_233
	selector ds_234
	call Mem217[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_108,bLoc5D_104,C_132,CZ_47,ds_50,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc64_120,dwLoc68_129,dwLoc6C_122,dwLoc70_123,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_206,ebp_36,ebx_41,ecx_208,edi_205,edx_48,es_49,esi_204,esp_216,S_131,SCZO_117,SZO_130,Z_118
		defs: al_229,C_224,CZ_231,ds_234,eax_222,ebp_220,ebx_225,ecx_227,edi_219,edx_232,es_233,esi_226,esp_218,S_230,SCZO_221,SZO_223,Z_228
	byte SCZO_238
	word32 eax_239
	byte SZO_240
	byte C_241
	word32 esi_243
	word32 ecx_244
	byte Z_245
	byte al_246
	byte S_247
	byte CZ_248
	word32 edx_249
	call Mem217[edi_219 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: al_229,bLoc5D_104,C_224,CZ_231,ds_234,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc64_120,dwLoc68_129,dwLoc6C_122,dwLoc70_123,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_222,ebp_220,ebx_225,ecx_227,edi_219,edx_232,es_233,esi_226,esp_218,S_230,SCZO_221,SZO_223,Z_228
		defs: al_246,C_241,CZ_248,ds_251,eax_239,ebp_237,ebx_242,ecx_244,edi_236,edx_249,es_250,esi_243,esp_235,S_247,SCZO_238,SZO_240,Z_245
	branch eax_239 < 0x00000000 l10021F83
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):fp - 0x0000006C -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32)

l10021F83:
	branch Mem217[0x10031000:word32] <=u 0x00000003 l10021FD6
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):fp - 0x0000006C -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32)

l10021F8C:
	fn1000C51D(fp - 0x0000003C, 0x10003E54)
	fn1000C51D(fp - 0x0000002C, 0x10005258)
	Mem363[esp_110 - 0x00000004:word32] = 0x00000004
	Mem378[esp_110 - 0x00000004:word32] = fp - 0x0000005C
	Mem380[esp_110 - 0x00000008:word32] = 0x00000005
	Mem382[esp_110 - 0x0000000C:word32] = 0x00000000
	Mem384[esp_110 - 0x00000010:word32] = 0x00000000
	word32 ecx_386
	word32 edx_387
	fn1000C491(0x10031000, 0x1000A398, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_386, out edx_387, out esi_124, out edi_125)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):fp - 0x0000006C -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32)

l10021F15:
	Mem277[esp_110 - 0x00000004:word32] = 0x00000101
	Mem279[esp_110 - 0x00000008:word32] = 0x00000000
	word32 esp_283
	word32 edi_284
	word32 ebp_285
	byte SCZO_286
	word32 eax_287
	byte SZO_288
	byte C_289
	word32 ebx_290
	word32 esi_291
	word32 ecx_292
	byte Z_293
	byte al_294
	byte S_295
	byte CZ_296
	word32 edx_297
	selector es_298
	selector ds_299
	call Mem279[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_246,bLoc5D_104,C_256,CZ_248,ds_251,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc64_120,dwLoc68_253,dwLoc6C_122,dwLoc70_123,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_275,ebp_237,ebx_242,ecx_282,edi_236,edx_249,es_250,esi_281,esp_278,S_255,SCZO_238,SZO_254,Z_245
		defs: al_294,C_289,CZ_296,ds_299,eax_287,ebp_285,ebx_290,ecx_292,edi_284,edx_297,es_298,esi_291,esp_283,S_295,SCZO_286,SZO_288,Z_293
	word32 esp_300
	word32 edi_301
	byte SCZO_303
	word32 eax_304
	byte SZO_305
	byte C_306
	word32 esi_308
	word32 ecx_309
	byte Z_310
	byte al_311
	byte S_312
	byte CZ_313
	word32 edx_314
	call esi_291 (retsize: 4; depth: 4)
		uses: al_294,bLoc5D_104,C_289,CZ_296,ds_299,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc64_120,dwLoc68_253,dwLoc6C_122,dwLoc70_123,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_287,ebp_285,ebx_290,ecx_292,edi_284,edx_297,es_298,esi_291,esp_283,S_295,SCZO_286,SZO_288,Z_293
		defs: al_311,C_306,CZ_313,ds_316,eax_304,ebp_302,ebx_307,ecx_309,edi_301,edx_314,es_315,esi_308,esp_300,S_312,SCZO_303,SZO_305,Z_310
	Mem318[esp_300 - 0x00000004:word32] = 0x00000004
	edi_125 = Mem318[esp_300 - 0x00000004:word32]
	esp_110 = esp_300
	branch Mem318[0x10031000:word32] <=u edi_125 l10021FD6
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):fp - 0x0000006C -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32)

l10021FD6:
	esi_124 = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):fp - 0x0000006C -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32)

l10021F3F:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10005354)
	Mem339[esp_300 - 0x00000004:word32] = fp - 0x0000005C
	Mem341[esp_300 - 0x00000008:word32] = 0x00000005
	Mem343[esp_300 - 0x0000000C:word32] = 0x00000000
	Mem345[esp_300 - 0x00000010:word32] = 0x00000000
	word32 ecx_350
	word32 edx_351
	fn1000C491(0x10031000, 0x1000A3F7, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_350, out edx_351, out esi_124, out edi_125)
	esp_110 = esp_300
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):fp - 0x0000006C -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0064(32)

l10021FD8:
	word32 esi_152
	fn1000C640(fp - 0x0000006C, ebx_147, esi_124, edi_125, es_140, ds_139, out edx_151, out esi_152)
	branch 0x00000000 == 0x00000000 l10021FFA
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):<invalid> -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10021FE7:
	word32 esp_160 = esp_110 - 0x00000004
	Mem161[esp_160:word32] = 0x00000000
	word32 esp_164
	word32 edi_165
	word32 ebp_166
	byte SCZO_167
	word32 eax_168
	byte SZO_169
	byte C_170
	word32 ebx_171
	word32 esi_172
	word32 ecx_173
	byte Z_174
	byte al_175
	byte S_176
	byte CZ_177
	word32 edx_178
	selector es_179
	selector ds_180
	call Mem161[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_143,bLoc5D_104,C_157,CZ_141,ds_139,dwLoc04_6,dwLoc08_12,dwLoc10_138,dwLoc14_135,dwLoc18_136,dwLoc1C_137,dwLoc64_158,dwLoc68_134,dwLoc6C_122,dwLoc70_133,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_159,ebp_148,ebx_147,ecx_163,edi_145,edx_151,es_140,esi_162,esp_160,S_142,SCZO_144,SZO_155,Z_156
		defs: al_175,C_170,CZ_177,ds_180,eax_168,ebp_166,ebx_171,ecx_173,edi_165,edx_178,es_179,esi_172,esp_164,S_176,SCZO_167,SZO_169,Z_174
	word32 edi_182
	byte SCZO_184
	word32 eax_185
	byte SZO_186
	byte C_187
	word32 ebx_188
	word32 esi_189
	word32 ecx_190
	byte Z_191
	byte al_192
	byte S_193
	byte CZ_194
	call esi_172 (retsize: 4; depth: 4)
		uses: al_175,bLoc5D_104,C_170,CZ_177,ds_180,dwLoc04_6,dwLoc08_12,dwLoc10_138,dwLoc14_135,dwLoc18_136,dwLoc1C_137,dwLoc64_158,dwLoc68_134,dwLoc6C_122,dwLoc70_133,dwLoc74_33,dwLoc7C_15,dwLoc80_18,dwLoc84_20,dwLoc88_28,dwLoc8C_30,dwLoc90_32,eax_168,ebp_166,ebx_171,ecx_173,edi_165,edx_178,es_179,esi_172,esp_164,S_176,SCZO_167,SZO_169,Z_174
		defs: al_192,C_187,CZ_194,ds_197,eax_185,ebp_183,ebx_188,ecx_190,edi_182,edx_195,es_196,esi_189,esp_181,S_193,SCZO_184,SZO_186,Z_191
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:ecx + 0x00000094 ^ ecx + 0x00000094 esi:<invalid> al:<invalid> edx:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):<invalid> -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):ecx + 0x00000094 ^ ecx + 0x00000094 -93(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10021FFA:
	word32 esp_84 = esp_110 + 0x00000004
	word32 ecx_92
	fn1002F420(0x00000000, eax_11 ^ fp - 0x00000004, edx_151, Mem0[esp_84 + 0x00000004:word32], ebp_148, Mem0[esp_84:word32], Mem0[esp_110:word32], es_140, ds_139, out ecx_92)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):<invalid> -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10021E44_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> -144(fp):0x00000000 -140(fp):fp - 0x00000074 -136(fp):0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -116(fp):0x00000000 -112(fp):<invalid> -108(fp):fp + 0x00000024 ^ fp + 0x00000024 -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002224F(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax ebx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002224F_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002224F:
	word32 ecx_197
	word32 ebp_139 = fp - 0x00000004
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_188 = fp - 0x0000001C
	word32 edi_138 = dwArg04
	word32 ebx_195 = ecx
	ecx_197 = ecx
	branch dwArg04 == 0x00000000 l10022283
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l10022273:
	word32 esp_173
	word32 edi_174
	word32 ebp_175
	byte SCZO_176
	word32 eax_177
	byte SZO_178
	byte C_179
	word32 ebx_180
	word32 esi_181
	word32 ecx_182
	byte Z_183
	byte S_184
	selector es_185
	selector ds_186
	word32 edx_187
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: C_29,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_25,dwLoc10_26,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_169,eax_167,ebp_7,ebx_24,ecx_171,edi_22,edx,es,esi_170,esp_168,S,SCZO,SZO_27,Z_28
		defs: C_179,ds_186,eax_177,ebp_175,ebx_180,ecx_182,edi_174,edx_187,es_185,esi_181,esp_173,S_184,SCZO_176,SZO_178,Z_183
	byte SCZO_191
	word32 eax_192
	byte SZO_193
	byte C_194
	word32 esi_196
	byte Z_198
	byte S_199
	word32 edx_202
	call esi_181 (retsize: 4; depth: 4)
		uses: C_179,ds_186,dwLoc04_6,dwLoc08_12,dwLoc0C_25,dwLoc10_26,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_169,eax_177,ebp_175,ebx_180,ecx_182,edi_174,edx_187,es_185,esi_181,esp_173,S_184,SCZO_176,SZO_178,Z_183
		defs: C_194,ds_201,eax_192,ebp_190,ebx_195,ecx_197,edi_189,edx_202,es_200,esi_196,esp_188,S_199,SCZO_191,SZO_193,Z_198
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l10022283:
	word32 esp_103
	word32 ebx_144 = ebx_195 + 0x00000020
	word32 esp_47 = esp_188 - 0x00000004
	Mem48[esp_47:word32] = ebx_144
	AcquireSRWLockExclusive(Mem48[esp_47:PSRWLOCK])
	word32 esi_145 = ecx
	word32 dwLoc0C_100 = ecx & 0x00000000
	word32 eax_54 = Mem48[ecx + 0x00000028:word32]
	branch eax_54 != Mem48[ecx + 0x00000030:word32] l100222AE
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l1002229C:
	Mem153[esp_47:word32] = ecx_197
	Mem158[esp_47 - 0x00000004:word32] = eax_54 + 0x00000001
	word32 edx_160
	word32 eax_161 = fn10015655(ecx + 0x00000024, es, ds, dwArg00, out edx_160)
	esp_103 = esp_47 + 0x00000004
	dwLoc0C_100 = eax_161
	branch eax_161 < 0x00000000 l100222D5
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:ecx ecx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):ecx & 0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100222AE:
	Mem105[ecx + 0x00000028:word32] = Mem48[ecx + 0x00000028:word32] + 0x00000001
	esp_103 = esp_188
	word32 eax_109 = Mem105[ecx + 0x00000024:word32] + (Mem105[ecx + 0x00000028:word32] - 0x00000001) * 0x00000004
	branch eax_109 == 0x00000000 l100222D5
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:ecx ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100222BF:
	Mem113[eax_109:word32] = edi_138
	branch edi_138 == 0x00000000 l100222D5
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:ecx ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100222C5:
	word32 esp_118 = esp_188 - 0x00000004
	Mem119[esp_118:word32] = edi_138
	word32 esp_122
	word32 edi_123
	word32 ebp_124
	byte SCZO_125
	word32 eax_126
	byte SZO_127
	byte C_128
	word32 ebx_129
	word32 esi_130
	word32 ecx_131
	byte Z_132
	byte S_133
	selector es_134
	selector ds_135
	word32 edx_136
	call Mem119[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_116,ds_36,dwLoc04_6,dwLoc08_12,dwLoc0C_100,dwLoc10_26,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_35,eax_117,ebp_44,ebx_46,ecx_121,edi_41,edx_102,es_37,esi_120,esp_118,S_101,SCZO_55,SZO_114,Z_115
		defs: C_128,ds_135,eax_126,ebp_124,ebx_129,ecx_131,edi_123,edx_136,es_134,esi_130,esp_122,S_133,SCZO_125,SZO_127,Z_132
	byte SCZO_140
	word32 eax_141
	byte SZO_142
	byte C_143
	word32 ecx_146
	byte Z_147
	byte S_148
	word32 edx_151
	call esi_130 (retsize: 4; depth: 4)
		uses: C_128,ds_135,dwLoc04_6,dwLoc08_12,dwLoc0C_100,dwLoc10_26,dwLoc14_15,dwLoc18_18,dwLoc1C_20,dwLoc20_35,eax_126,ebp_124,ebx_129,ecx_131,edi_123,edx_136,es_134,esi_130,esp_122,S_133,SCZO_125,SZO_127,Z_132
		defs: C_143,ds_150,eax_141,ebp_139,ebx_144,ecx_146,edi_138,edx_151,es_149,esi_145,esp_137,S_148,SCZO_140,SZO_142,Z_147
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:ecx ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100222D5:
	branch ebx_144 == 0x00000000 l100222E0
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100222D9:
	word32 esp_97 = esp_103 - 0x00000004
	Mem98[esp_97:word32] = ebx_144
	ReleaseSRWLockExclusive(Mem98[esp_97:PSRWLOCK])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l100222E0:
	word32 edx_75
	word32 esi_76
	fn1000C640(fp - 0x00000010, ebx_144, esi_145, edi_138, es, ds, out edx_75, out esi_76)
	word32 esp_84 = esp_103 + 0x00000004
	word32 edi_83 = Mem48[esp_103:word32]
	*ediOut = edi_83
	word32 esi_85 = Mem48[esp_84:word32]
	*esiOut = esi_85
	word32 ebx_87 = Mem48[esp_84 + 0x00000004:word32]
	*ebxOut = ebx_87
	word32 ecx_89
	return fn1002F420(dwLoc0C_100, eax_11 ^ fp - 0x00000004, edx_75, ebx_87, ebp_139, esi_85, edi_83, es, ds, out ecx_89)
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx + 0x00000020 esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002224F_exit:
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100222FE(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100222FE_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100222FE:
	Mem27[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
	AcquireSRWLockShared(ecx + 0x00000020)
	word32 esi_45
	word32 eax_46 = fn1002237C(ecx + 0x00000024, edx, dwArg08, ecx, es, ds, dwArg04, fp - 0x00000008, out esi_45)
	branch ecx == 0x00000020 l10022339
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l10022332:
	ReleaseSRWLockShared(ecx + 0x00000020)
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10022339:
	branch eax_46 < 0x00000000 l10022346
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002233D:
	Mem78[dwArg08:word32] = ecx & 0x00000000
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10022346:
	word32 edx_61
	word32 esi_62
	fn1000C640(fp - 0x00000008, dwArg08, eax_46, ecx + 0x00000020, es, ds, out edx_61, out esi_62)
	return esi_62
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100222FE_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10022359(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: edi esi esp
fn10022359_entry:
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10022359:
	AcquireSRWLockShared(ecx + 0x00000020)
	word32 esi_16 = Mem0[ecx + 0x00000028:word32]
	branch ecx == 0x00000020 l10022377
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10022370:
	ReleaseSRWLockShared(ecx + 0x00000020)
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x00000020 esi:<invalid> -12(fp):ecx + 0x00000020 -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l10022377:
	return esi_16
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:ecx + 0x00000020 esi:<invalid> -12(fp):ecx + 0x00000020 -8(fp):edi -4(fp):esi

fn10022359_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi eax:<invalid> -12(fp):ecx + 0x00000020 -8(fp):edi -4(fp):esi



word32 fn1002237C(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut: eax esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002237C_entry:
	*esiOut = esi
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002237C:
	word32 ebp_131 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_17 = fp - 0x00000010
	word32 eax_21 = 0x80028CA1
	branch dwArg04 >=u Mem0[ecx + 0x00000004:word32] l100223D0
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002239B:
	word32 esp_100 = fp - 0x00000014
	word32 ebx_137 = dwArg08
	word32 edi_130 = Mem0[Mem0[ecx:word32] + dwArg04 * 0x00000004:word32]
	branch Mem0[dwArg08:word32] == edi_130 l100223CD
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:0x80028CA1 -16(fp):edi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100223A8:
	branch edi_130 == 0x00000000 l100223BE
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100223AC:
	word32 esp_115
	word32 edi_116
	word32 ebp_117
	word32 ecx_118
	word32 eax_119
	byte SZO_120
	byte C_121
	byte SCZO_122
	word32 ebx_123
	byte Z_124
	word32 esi_125
	word32 edx_126
	selector es_127
	selector ds_128
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_87,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_18,dwLoc14_61,dwLoc18_110,dwLoc1C_112,eax_108,ebp_7,ebx_63,ecx_114,edi_64,edx,es,esi_113,esp_111,SCZO_65,SZO_85,Z_86
		defs: C_121,ds_128,eax_119,ebp_117,ebx_123,ecx_118,edi_116,edx_126,es_127,esi_125,esp_115,SCZO_122,SZO_120,Z_124
	word32 esp_129
	word32 ecx_132
	word32 eax_133
	byte SZO_134
	byte C_135
	byte SCZO_136
	byte Z_138
	word32 esi_139
	word32 edx_140
	call esi_125 (retsize: 4; depth: 4)
		uses: C_121,ds_128,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_18,dwLoc14_61,dwLoc18_110,dwLoc1C_112,eax_119,ebp_117,ebx_123,ecx_118,edi_116,edx_126,es_127,esi_125,esp_115,SCZO_122,SZO_120,Z_124
		defs: C_135,ds_142,eax_133,ebp_131,ebx_137,ecx_132,edi_130,edx_140,es_141,esi_139,esp_129,SCZO_136,SZO_134,Z_138
	esi = Mem0[esp_129:word32]
	esp_100 = esp_129 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100223BE:
	Mem104[ebx_137:word32] = edi_130
	fn1000C640(fp - 0x0000000C, ebx_137, esi, edi_130, es, ds, out edx, out esi)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100223CD:
	eax_21 = 0x00000000
	ebx = Mem0[esp_100:word32]
	esp_17 = esp_100 + 0x00000004
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100223D0:
	word32 ecx_53
	return fn1002F420(eax_21, eax_15 ^ fp - 0x00000004, edx, ebx, ebp_131, esi, Mem0[esp_17:word32], es, ds, out ecx_53)
// DataOut: cs ds eax es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002237C_exit:
// DataOut: eax esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100225BB(word32 ecx, word32 edx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn100225BB_entry:
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100225BB:
	word32 ebp_106 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebx_111 = ecx
	word32 esp_119 = fp - 0x00000014
	word32 edi_105 = Mem0[dwArg04:word32]
	branch Mem0[ecx:word32] == edi_105 l100225FE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100225D9:
	branch edi_105 == 0x00000000 l100225EF
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100225DD:
	word32 esp_90
	word32 edi_91
	word32 ebp_92
	word32 ecx_93
	word32 eax_94
	byte SZO_95
	byte C_96
	word32 ebx_97
	byte SCZO_98
	byte Z_99
	word32 esi_100
	word32 edx_101
	selector es_102
	selector ds_103
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_62,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_24,dwLoc18_85,dwLoc1C_87,eax_83,ebp_7,ebx_22,ecx_89,edi_25,edx,es,esi_88,esp_86,SCZO_26,SZO_60,Z_61
		defs: C_96,ds_103,eax_94,ebp_92,ebx_97,ecx_93,edi_91,edx_101,es_102,esi_100,esp_90,SCZO_98,SZO_95,Z_99
	word32 esp_104
	word32 ecx_107
	word32 eax_108
	byte SZO_109
	byte C_110
	byte SCZO_112
	byte Z_113
	word32 esi_114
	word32 edx_115
	call esi_100 (retsize: 4; depth: 4)
		uses: C_96,ds_103,dwLoc04_6,dwLoc08_16,dwLoc0C_12,dwLoc10_21,dwLoc14_24,dwLoc18_85,dwLoc1C_87,eax_94,ebp_92,ebx_97,ecx_93,edi_91,edx_101,es_102,esi_100,esp_90,SCZO_98,SZO_95,Z_99
		defs: C_110,ds_117,eax_108,ebp_106,ebx_111,ecx_107,edi_105,edx_115,es_116,esi_114,esp_104,SCZO_112,SZO_109,Z_113
	esi = Mem0[esp_104:word32]
	esp_119 = esp_104 + 0x00000004
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100225EF:
	Mem79[ebx_111:word32] = edi_105
	fn1000C640(fp - 0x0000000C, ebx_111, esi, edi_105, es, ds, out edx, out esi)
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100225FE:
	word32 ecx_55
	fn1002F420(ebx_111, eax_15 ^ fp - 0x00000004, edx, Mem0[esp_119 + 0x00000004:word32], ebp_106, esi, Mem0[esp_119:word32], es, ds, out ecx_55)
	return esi
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100225BB_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10022612(word32 ecx, word32 edx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10022612_entry:
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10022612:
	word32 ebx_146
	word32 esi_29
	word32 edi_30
	word32 eax_31 = fn100106F6(dwArg04, edx, ecx, esi, es, ds, out esi_29, out edi_30)
	Mem38[eax_31:word32] = Mem0[eax_31:word32] & 0x00000000
	word32 ebx_41
	word32 esi_43
	word32 edi_152
	word32 ebp_141
	word32 eax_45 = fn1002FF64(ecx, eax_31, edi_30, out ebx_41, out ebp_141, out esi_43, out edi_152)
	word32 esp_153 = fp - 0x00000010
	branch eax_45 != 0x00000000 l1002264C
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002264C:
	Mem77[fp - 0x00000014:word32] = edi_152
	word32 edx_79
	word32 ebx_80
	word32 eax_81 = fn10027306(eax_45, edx, es, ds, out edx_79, out ebx_80)
	word32 ecx_82 = Mem77[ebx_80:word32]
	Mem85[fp - 0x00000018:word32] = esi_43
	Mem87[fp - 0x0000001C:word32] = 0x10003794
	Mem89[fp - 0x00000020:word32] = eax_81
	Mem90[eax_81 + 0x00000020:word32] = ecx_82
	word32 esp_94
	word32 edi_95
	word32 ebp_96
	word32 ecx_97
	word32 eax_98
	byte SZO_99
	byte C_100
	word32 ebx_101
	word32 esi_102
	byte Z_103
	word32 edx_104
	selector es_105
	selector ds_106
	call Mem90[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_52,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_19,dwLoc10_25,dwLoc14_34,dwLoc18_36,eax_81,ebp_42,ebx_80,ecx_93,edi_83,edx_79,es,esi_92,esp_88,SZO_50,Z_51
		defs: C_100,ds_106,eax_98,ebp_96,ebx_101,ecx_97,edi_95,edx_104,es_105,esi_102,esp_94,SZO_99,Z_103
	word32 esp_107
	word32 edi_108
	word32 ebp_109
	word32 ecx_110
	word32 eax_111
	byte SZO_112
	byte C_113
	word32 ebx_114
	word32 esi_115
	byte Z_116
	word32 edx_117
	selector es_118
	selector ds_119
	call esi_102 (retsize: 4; depth: 4)
		uses: C_100,ds_106,dwLoc04_6,dwLoc08_16,dwLoc0C_19,dwLoc10_25,dwLoc14_34,dwLoc18_36,eax_98,ebp_96,ebx_101,ecx_97,edi_95,edx_104,es_105,esi_102,esp_94,SZO_99,Z_103
		defs: C_113,ds_119,eax_111,ebp_109,ebx_114,ecx_110,edi_108,edx_117,es_118,esi_115,esp_107,SZO_112,Z_116
	Mem123[esp_107 - 0x00000004:word32] = edi_108
	word32 esp_126
	word32 edi_127
	word32 ebp_128
	word32 ecx_129
	word32 eax_130
	byte SZO_131
	byte C_132
	word32 ebx_133
	word32 esi_134
	byte Z_135
	word32 edx_136
	selector es_137
	selector ds_138
	call Mem123[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_113,ds_119,dwLoc04_6,dwLoc08_16,dwLoc0C_19,dwLoc10_25,dwLoc14_34,dwLoc18_36,eax_111,ebp_109,ebx_121,ecx_125,edi_108,edx_117,es_118,esi_124,esp_122,SZO_112,Z_116
		defs: C_132,ds_138,eax_130,ebp_128,ebx_133,ecx_129,edi_127,edx_136,es_137,esi_134,esp_126,SZO_131,Z_135
	word32 esp_139
	word32 edi_140
	word32 ecx_142
	word32 eax_143
	byte SZO_144
	byte C_145
	word32 esi_147
	byte Z_148
	call esi_134 (retsize: 4; depth: 4)
		uses: C_132,ds_138,dwLoc04_6,dwLoc08_16,dwLoc0C_19,dwLoc10_25,dwLoc14_34,dwLoc18_36,eax_130,ebp_128,ebx_133,ecx_129,edi_127,edx_136,es_137,esi_134,esp_126,SZO_131,Z_135
		defs: C_145,ds_151,eax_143,ebp_141,ebx_146,ecx_142,edi_140,edx_149,es_150,esi_147,esp_139,SZO_144,Z_148
	edi_152 = Mem123[esp_139:word32]
	esp_153 = esp_139 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -24(fp):0x00000024 -20(fp):0x10002F5C -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10022645:
	ebx_146 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -24(fp):0x00000024 -20(fp):0x10002F5C -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10022683:
	word32 ecx_70
	fn1002F420(ebx_146, Mem38[ebp_141 - 0x00000004:word32] ^ ebp_141, edx, Mem38[esp_153 + 0x00000004:word32], ebp_141, Mem38[esp_153:word32], edi_152, es, ds, out ecx_70)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):0x10003794 -24(fp):<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn10022612_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):0x10003794 -24(fp):<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn10022697(word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10022697_entry:
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10022697:
	word32 ebx_115
	word32 ecx_27
	word32 esi_29
	word32 edx_126
	fn1000F276(dwArg04, ebx, dwArg04, edi, es, ds, out ecx_27, out edx_126, out esi_29)
	Mem38[esi_29:word32] = 0x00000000
	word32 ebx_39
	word32 esi_41
	word32 edi_129
	word32 ebp_110
	word32 eax_43 = fn1002FF64(0x00000000, esi_29, edi, out ebx_39, out ebp_110, out esi_41, out edi_129)
	word32 esp_130 = fp - 0x00000018
	branch eax_43 != 0x00000000 l100226D7
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100226D7:
	Mem78[fp - 0x0000001C:word32] = edi_129
	word32 ebx_80
	word32 edx_81 = fn10015A31(eax_43, edx_126, es, ds, out ebx_80)
	Mem82[eax_43:word32] = 0x10001794
	Mem83[eax_43 + 0x00000004:word32] = 0x10001540
	Mem84[eax_43 + 0x00000020:word32] = ebx_80
	Mem85[eax_43 + 0x00000024:word32] = ebx_80
	Mem86[eax_43 + 0x00000028:word32] = ebx_80
	Mem87[eax_43 + 0x0000002C:word32] = ebx_80
	Mem90[fp - 0x00000020:word32] = eax_43
	Mem91[ebp_110 - 0x0000000C:word32] = eax_43
	word32 esp_94
	word32 edi_95
	word32 ebp_96
	byte SCZO_97
	word32 eax_98
	byte SZO_99
	byte C_100
	word32 ebx_101
	word32 esi_102
	word32 ecx_103
	byte Z_104
	selector es_105
	selector ds_106
	word32 edx_107
	call Mem91[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_51,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_24,dwLoc14_17,dwLoc18_20,dwLoc1C_32,dwLoc20_37,eax_88,ebp_40,ebx_80,ecx_93,edi_92,edx_81,es,esi_44,esp_89,SCZO,SZO_49,Z_50
		defs: C_100,ds_106,eax_98,ebp_96,ebx_101,ecx_103,edi_95,edx_107,es_105,esi_102,esp_94,SCZO_97,SZO_99,Z_104
	word32 esp_108
	word32 edi_109
	byte SCZO_111
	word32 eax_112
	byte SZO_113
	byte C_114
	word32 esi_116
	word32 ecx_117
	byte Z_118
	word32 edx_121
	call edi_95 (retsize: 4; depth: 4)
		uses: C_100,ds_106,dwLoc04_6,dwLoc08_14,dwLoc0C_24,dwLoc14_17,dwLoc18_20,dwLoc1C_32,dwLoc20_37,eax_98,ebp_96,ebx_101,ecx_103,edi_95,edx_107,es_105,esi_102,esp_94,SCZO_97,SZO_99,Z_104
		defs: C_114,ds_120,eax_112,ebp_110,ebx_115,ecx_117,edi_109,edx_121,es_119,esi_116,esp_108,SCZO_111,SZO_113,Z_118
	Mem124[Mem91[ebp_110 - 0x00000008:word32]:word32] = esi_116
	word32 ecx_125
	word32 esi_127
	fn1000F276(ebp_110 - 0x0000000C, ebx_115, esi_116, edi_109, es, ds, out ecx_125, out edx_126, out esi_127)
	edi_129 = Mem124[esp_108:word32]
	esp_130 = esp_108 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):0x00000030 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100226D0:
	ebx_115 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):0x00000030 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10022719:
	word32 ecx_70
	fn1002F420(ebx_115, Mem38[ebp_110 - 0x00000004:word32] ^ ebp_110, edx_126, Mem38[esp_130 + 0x00000004:word32], ebp_110, Mem38[esp_130:word32], edi_129, es, ds, out ecx_70)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10022697_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1002272D(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002272D_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002272D:
	word32 esi_12 = ecx
	branch fn100103B2(dwArg04, 0x100053B0) != 0x00000000 l1002278F
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10022746:
	branch fn100103B2(dwArg04, 0x100053A0) != 0x00000000 l1002278F
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x100053B0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10022754:
	branch fn100103B2(dwArg04, 0x10005390) != 0x00000000 l1002278F
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x100053A0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10022762:
	branch fn100103B2(dwArg04, 0x10005380) != 0x00000000 l1002278F
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10005390 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10022770:
	branch fn100103B2(dwArg04, 0x10005370) != 0x00000000 l1002278F
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10005380 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1002277E:
	esi_12 = ecx + 0x00000004
	branch fn100103B2(dwArg04, 0x100053F0) == 0x00000000 l10022798
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x10005370 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10022798:
	fn100227AA(ecx + 0x00000008, dwArg04, dwArg08)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000004 edx:0x100053F0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002278F:
	Mem41[dwArg08:word32] = esi_12
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100227A5:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1002272D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



void fn100227AA(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100227AA_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100227AA:
	word32 esi_12 = ecx
	branch fn100103B2(dwArg04, 0x100053E0) != 0x00000000 l100227E5
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l100227C3:
	esi_12 = ecx + 0x00000004
	branch fn100103B2(dwArg04, 0x100053D0) != 0x00000000 l100227E5
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x100053E0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100227D4:
	esi_12 = ecx + 0x00000008
	branch fn100103B2(dwArg04, 0x100053C0) == 0x00000000 l100227EC
// DataOut: ecx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000004 edx:0x100053D0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l100227EC:
	word32 edx_79
	branch fn1001036A(ecx + 0x0000000C, dwArg04, dwArg08, out edx_79) < 0x00000000 l10022800
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:0x100053C0 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10022800:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100227E5:
	Mem55[dwArg08:word32] = esi_12
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100227FC:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10022805:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn100227AA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



void fn1002280A(word32 ecx, word32 edx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002280A_entry:
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002280A:
	word32 edi_148
	Mem33[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 ebx_36
	word32 esi_38
	word32 edi_39
	word32 ebp_149
	word32 eax_40 = fn1002FF64(ecx, esi, edi, out ebx_36, out ebp_149, out esi_38, out edi_39)
	word32 esp_147 = fp - 0x00000018
	branch eax_40 != 0x00000000 l10022841
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10022841:
	word32 edx_79 = fn10010735(eax_40 + 0x00000004, edx, es, ds)
	Mem82[eax_40 + 0x0000001C:word32] = 0x00000001
	Mem83[eax_40:word32] = 0x1000176C
	Mem84[eax_40 + 0x00000004:word32] = 0x10001748
	branch Mem33[0x10031478:word32] == 0x00000000 l1002286E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):0x00000024 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l10022867:
	__lock()
	Mem162[0x1003147C:word32] = Mem84[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x00000024 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1002286E:
	word32 eax_85 = Mem84[ebp_149 - 0x00000008:word32]
	Mem86[eax_40 + 0x00000004:word32] = 0x10001748
	Mem87[eax_40:word32] = 0x10001780
	Mem89[fp - 0x0000001C:word32] = ebx_36
	Mem91[eax_40 + 0x00000020:word32] = Mem89[eax_85:word32]
	Mem94[fp - 0x00000020:word32] = 0x10005400
	Mem96[fp - 0x00000024:word32] = eax_40
	word32 esp_99
	word32 edi_100
	word32 ebp_101
	word32 ecx_102
	word32 eax_103
	byte SZO_104
	byte C_105
	word32 ebx_106
	word32 esi_107
	word32 edx_108
	byte Z_109
	byte SCZO_110
	selector es_111
	selector ds_112
	call Mem96[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_48,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_27,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_29,dwLoc20_31,eax_92,ebp_37,ebx_36,ecx_98,edi_97,edx_79,es,esi_41,esp_95,SCZO_80,SZO_46,Z_81
		defs: C_105,ds_112,eax_103,ebp_101,ebx_106,ecx_102,edi_100,edx_108,es_111,esi_107,esp_99,SCZO_110,SZO_104,Z_109
	word32 esp_113
	word32 edi_114
	word32 ebp_115
	word32 ecx_116
	word32 eax_117
	byte SZO_118
	byte C_119
	word32 ebx_120
	word32 esi_121
	word32 edx_122
	byte Z_123
	byte SCZO_124
	selector es_125
	selector ds_126
	call edi_100 (retsize: 4; depth: 4)
		uses: C_105,ds_112,dwLoc04_6,dwLoc08_16,dwLoc0C_27,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_29,dwLoc20_31,eax_103,ebp_101,ebx_106,ecx_102,edi_100,edx_108,es_111,esi_107,esp_99,SCZO_110,SZO_104,Z_109
		defs: C_119,ds_126,eax_117,ebp_115,ebx_120,ecx_116,edi_114,edx_122,es_125,esi_121,esp_113,SCZO_124,SZO_118,Z_123
	Mem130[esp_113 - 0x00000004:word32] = esi_121
	word32 esp_133
	word32 edi_134
	word32 ebp_135
	word32 ecx_136
	word32 eax_137
	byte SZO_138
	byte C_139
	word32 ebx_140
	word32 esi_141
	word32 edx_142
	byte Z_143
	byte SCZO_144
	selector es_145
	selector ds_146
	call Mem130[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_119,ds_126,dwLoc04_6,dwLoc08_16,dwLoc0C_27,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_29,dwLoc20_31,eax_117,ebp_115,ebx_120,ecx_132,edi_128,edx_122,es_125,esi_131,esp_129,SCZO_124,SZO_118,Z_123
		defs: C_139,ds_146,eax_137,ebp_135,ebx_140,ecx_136,edi_134,edx_142,es_145,esi_141,esp_133,SCZO_144,SZO_138,Z_143
	word32 ecx_150
	word32 eax_151
	byte SZO_152
	byte C_153
	word32 ebx_154
	word32 esi_155
	byte Z_157
	byte SCZO_158
	call esi_141 (retsize: 4; depth: 4)
		uses: C_139,ds_146,dwLoc04_6,dwLoc08_16,dwLoc0C_27,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_29,dwLoc20_31,eax_137,ebp_135,ebx_140,ecx_136,edi_134,edx_142,es_145,esi_141,esp_133,SCZO_144,SZO_138,Z_143
		defs: C_153,ds_160,eax_151,ebp_149,ebx_154,ecx_150,edi_148,edx_156,es_159,esi_155,esp_147,SCZO_158,SZO_152,Z_157
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x00000024 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l1002283A:
	edi_148 = 0x8007000E
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):0x00000024 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l100228A9:
	word32 esp_60 = esp_147 + 0x00000004
	word32 ecx_68
	fn1002F420(edi_148, Mem33[ebp_149 - 0x00000004:word32] ^ ebp_149, edx, Mem33[esp_60 + 0x00000004:word32], ebp_149, Mem33[esp_60:word32], Mem33[esp_147:word32], es, ds, out ecx_68)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn1002280A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



word32 fn100228BC(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut: eax ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn100228BC_entry:
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100228BC:
	word32 eax_128
	Mem26[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 edi_126
	word32 ebx_131
	word32 ebp_108
	word32 esi_144
	word32 eax_34 = fn1002FF64(ebx, edx, edi, out ebx_131, out ebp_108, out esi_144, out edi_126)
	word32 esp_132 = fp - 0x00000018
	branch eax_34 != 0x00000000 l100228F2
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l100228F2:
	Mem69[fp - 0x0000001C:word32] = ebx_131
	Mem71[fp - 0x00000020:word32] = edi_126
	word32 eax_73 = fn100270CA(eax_34, edx, es, ds)
	word32 ecx_74 = Mem71[ebp_108 + 0x0000000C:word32]
	Mem76[ebp_108 - 0x00000010:word32] = eax_73
	word32 ebx_77 = Mem76[ecx_74:word32]
	word32 edx_79 = Mem76[Mem76[ebp_108 + 0x00000008:word32]:word32]
	Mem81[eax_73 + 0x00000020:word32] = Mem76[esi_144:word32]
	Mem82[eax_73 + 0x00000024:word32] = edx_79
	word32 esp_146 = fp - 0x00000020
	word32 edi_140 = eax_73
	branch Mem82[eax_73 + 0x00000028:word32] == ebx_77 l1002293C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x0000002C -28(fp):0x10002F5C -24(fp):esi -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l10022917:
	word32 ebp_145
	word32 ebx_141
	selector es_137
	selector ds_136
	ds_136 = ds
	es_137 = es
	ebx_141 = ebx_77
	ebp_145 = ebp_108
	branch ebx_77 == 0x00000000 l1002292B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002291B:
	Mem156[fp - 0x00000024:word32] = ebx_77
	word32 esp_159
	word32 edi_160
	word32 ebp_161
	byte SCZO_162
	word32 eax_163
	byte SZO_164
	byte C_165
	word32 esi_166
	word32 ecx_167
	word32 edx_168
	byte Z_169
	word32 ebx_170
	selector es_171
	selector ds_172
	call Mem156[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_135,ds,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc18_15,dwLoc1C_21,dwLoc20_23,eax_154,ebp_31,ebx_77,ecx_158,edi_75,edx_79,es,esi_157,esp_155,SCZO_83,SZO_133,Z_134
		defs: C_165,ds_172,eax_163,ebp_161,ebx_170,ecx_167,edi_160,edx_168,es_171,esi_166,esp_159,SCZO_162,SZO_164,Z_169
	byte SCZO_176
	word32 eax_177
	byte SZO_178
	byte C_179
	word32 ecx_181
	word32 edx_182
	byte Z_183
	call esi_166 (retsize: 4; depth: 4)
		uses: C_165,ds_172,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc18_15,dwLoc1C_21,dwLoc20_23,eax_163,ebp_161,ebx_170,ecx_167,edi_160,edx_168,es_171,esi_166,esp_159,SCZO_162,SZO_164,Z_169
		defs: C_179,ds_186,eax_177,ebp_175,ebx_184,ecx_181,edi_174,edx_182,es_185,esi_180,esp_173,SCZO_176,SZO_178,Z_183
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002292B:
	Mem149[ebp_145 - 0x00000008:word32] = Mem82[edi_140 + 0x00000028:word32]
	Mem150[edi_140 + 0x00000028:word32] = ebx_141
	word32 edx_151
	word32 esi_152
	fn1000C640(ebp_145 - 0x00000008, ebx_141, esi_144, edi_140, es_137, ds_136, out edx_151, out esi_152)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002293C:
	word32 esp_88 = esp_146 - 0x00000004
	Mem89[esp_88:word32] = edi_140
	word32 esp_92
	word32 edi_93
	word32 ebp_94
	byte SCZO_95
	word32 eax_96
	byte SZO_97
	byte C_98
	word32 esi_99
	word32 ecx_100
	word32 edx_101
	byte Z_102
	word32 ebx_103
	selector es_104
	selector ds_105
	call Mem89[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_41,ds,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc18_15,dwLoc1C_21,dwLoc20_23,eax_87,ebp_31,ebx_77,ecx_91,edi_85,edx_79,es,esi_90,esp_88,SCZO_83,SZO_39,Z_84
		defs: C_98,ds_105,eax_96,ebp_94,ebx_103,ecx_100,edi_93,edx_101,es_104,esi_99,esp_92,SCZO_95,SZO_97,Z_102
	word32 esp_106
	word32 edi_107
	byte SCZO_109
	word32 eax_110
	byte SZO_111
	byte C_112
	word32 esi_113
	word32 ecx_114
	word32 edx_115
	byte Z_116
	word32 ebx_117
	call esi_99 (retsize: 4; depth: 4)
		uses: C_98,ds_105,dwLoc04_6,dwLoc08_12,dwLoc10_24,dwLoc18_15,dwLoc1C_21,dwLoc20_23,eax_96,ebp_94,ebx_103,ecx_100,edi_93,edx_101,es_104,esi_99,esp_92,SCZO_95,SZO_97,Z_102
		defs: C_112,ds_119,eax_110,ebp_108,ebx_117,ecx_114,edi_107,edx_115,es_118,esi_113,esp_106,SCZO_109,SZO_111,Z_116
	Mem122[Mem89[ebp_108 - 0x0000000C:word32]:word32] = edi_107
	word32 esi_124
	fn1000C640(ebp_108 - 0x00000010, ebx_117, esi_113, edi_107, es, ds, out edx, out esi_124)
	edi_126 = Mem122[esp_106:word32]
	eax_128 = 0x00000000
	*ebxOut = Mem122[esp_106 + 0x00000004:word32]
	esp_132 = esp_106 + 0x00000008
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100228EB:
	eax_128 = 0x8007000E
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x0000002C -28(fp):0x10002F5C -24(fp):esi -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002295D:
	word32 ecx_58
	return fn1002F420(eax_128, Mem26[ebp_108 - 0x00000004:word32] ^ ebp_108, edx, ebx_131, ebp_108, Mem26[esp_132:word32], edi_126, es, ds, out ecx_58)
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100228BC_exit:
// DataOut: eax ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10022ADA(word32 edx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn10022ADA_entry:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10022ADA:
	Mem26[dwArg0C:word32] = Mem0[dwArg0C:word32] & 0x00000000
	word32 edi_28 = 0x00000000
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32) Stack +0008(32)

l10022AF0:
	word32 eax_51 = CoWaitForMultipleHandles(0x00000000, edx, dwArg04, dwArg08, dwArg0C)
	branch eax_51 >= 0x00000000 l10022B22
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:edx esi:<invalid> -40(fp):0x00000000 -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):0x000003E8 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32) Stack +0008(32)

l10022B06:
	branch eax_51 == 0x80010115 l10022B22
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> -40(fp):0x00000000 -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32) Stack +0008(32)

l10022B0E:
	Sleep(0x000003E8)
	edi_28 = edi_28 + 0x00000001
	branch edi_28 <u 0x0000000A l10022AF0
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> -40(fp):0x00000000 -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32) Stack +0008(32)

l10022B22:
	return eax_51
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> esi:<invalid> -40(fp):0x00000000 -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):edx -4(fp):ebp

fn10022ADA_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx eax:<invalid> esi:esi -40(fp):0x00000000 -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):edx -4(fp):ebp



void fn10022B2D(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn10022B2D_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10022B2D:
	Mem12[ecx:word32] = 0x10001A5C
	Mem13[ecx + 0x00000004:word32] = 0x100019F8
	fn1000F2EE(ecx + 0x00000068)
	fn1000F2EE(ecx + 0x0000005C)
	fn1000F2EE(ecx + 0x00000048)
	fn1000F2EE(ecx + 0x0000003C)
	fn1000F2EE(ecx + 0x00000030)
	fn1000F2EE(ecx + 0x00000024)
	Mem19[ecx + 0x0000001C:word32] = 0xC0000001
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10022B7C_thunk_fn1000F23B:
	word32 edx_29
	word32 ebp_30
	fn1000F23B(ecx + 0x00000004, ebx, ebp, esi, edi, es, ds, out edx_29, out ebp_30)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ecx:ecx + 0x000001A0 esi:esi -8(fp):edi -4(fp):esi

fn10022B2D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ecx:<invalid> esi:<invalid> ebp:<invalid> eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn10022BB1(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
fn10022BB1_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10022BB1:
	word32 edx_19
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem23[ecx + 0x0000001C:word32] = 0x00000001
	Mem24[ecx:word32] = 0x10001A1C
	Mem25[ecx + 0x00000004:word32] = 0x100019F8
	branch Mem0[0x10031478:word32] == 0x00000000 l10022BE5
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10022BDE:
	__lock()
	Mem65[0x1003147C:word32] = Mem25[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10022BE5:
	Mem30[ecx:word32] = 0x10001A5C
	Mem31[ecx + 0x00000004:word32] = 0x100019F8
	Mem33[ecx + 0x00000020:byte] = 0x00
	Mem34[ecx + 0x00000024:word32] = 0x00000000
	Mem35[ecx + 0x00000028:word32] = 0x00000000
	Mem36[ecx + 0x0000002C:word32] = 0x00000000
	Mem37[ecx + 0x00000030:word32] = 0x00000000
	Mem38[ecx + 0x00000034:word32] = 0x00000000
	Mem39[ecx + 0x00000038:word32] = 0x00000000
	Mem40[ecx + 0x0000003C:word32] = 0x00000000
	Mem41[ecx + 0x00000040:word32] = 0x00000000
	Mem42[ecx + 0x00000044:word32] = 0x00000000
	Mem45[ecx + 0x00000048:word32] = 0x00000000
	Mem46[ecx + 0x0000004C:word32] = 0x00000000
	Mem47[ecx + 0x00000050:word32] = 0x00000000
	InitializeSRWLock(ecx + 0x00000054)
	Mem49[ecx + 0x00000058:byte] = 0x00
	Mem51[ecx + 0x0000005C:word32] = 0x00000000
	Mem52[ecx + 0x00000060:word32] = 0x00000000
	Mem53[ecx + 0x00000064:word32] = 0x00000000
	Mem56[ecx + 0x00000068:word32] = 0x00000000
	Mem57[ecx + 0x0000006C:word32] = 0x00000000
	Mem58[ecx + 0x00000070:word32] = 0x00000000
	return ecx
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn10022BB1_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> ebx:ebx eax:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn10022C3F(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, byte bArg0C, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebx edi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(8)
fn10022C3F_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(8)

l10022C3F:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	fn1000F2EE(ecx + 0x0000005C)
	Mem33[ecx + 0x00000060:word32] = Mem0[ecx + 0x00000060:word32] | 0xFFFFFFFF
	Mem36[ecx + 0x00000064:word32] = Mem33[ecx + 0x00000064:word32] | 0xFFFFFFFF
	word32 esp_48
	word32 edi_49
	word32 ebp_50
	byte SCZO_51
	word32 eax_52
	byte SZO_53
	byte C_54
	word32 ebx_55
	word32 ecx_56
	word32 esi_57
	byte S_58
	byte Z_59
	byte al_60
	word32 edx_61
	selector es_62
	selector ds_63
	call Mem36[0x100323BC:word32] (retsize: 4; depth: 96)
		uses: C_38,dwLoc04_6,dwLoc0C_14,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_39,ebp_7,ebx_21,ecx_47,edi_29,esi_46,esp_44,SZO_37
		defs: al_60,C_54,ds_63,eax_52,ebp_50,ebx_55,ecx_56,edi_49,edx_61,es_62,esi_57,esp_48,S_58,SCZO_51,SZO_53,Z_59
	word32 edi_65
	byte SCZO_67
	word32 eax_68
	byte SZO_69
	byte C_70
	word32 ebx_71
	word32 ecx_72
	word32 esi_73
	byte S_74
	byte Z_75
	byte al_76
	selector ds_173
	selector es_100
	word32 ebp_105
	word32 esp_106
	word32 edx_101
	call esi_57 (retsize: 4; depth: 4)
		uses: al_60,C_54,ds_63,dwLoc04_6,dwLoc0C_14,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_52,ebp_50,ebx_55,ecx_56,edi_49,edx_61,es_62,esi_57,esp_48,S_58,SCZO_51,SZO_53,Z_59
		defs: al_76,C_70,ds_79,eax_68,ebp_66,ebx_71,ecx_72,edi_65,edx_77,es_78,esi_73,esp_64,S_74,SCZO_67,SZO_69,Z_75
	word32 dwLoc24_174 = eax_68
	branch eax_68 < 0x00000000 l10022E6A
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32) Local -0040(32) Stack +000C(8)

l10022C92:
	fn1000F2EE(ebx_71 + 0x00000048)
	Mem129[ebx_71 + 0x0000004C:word32] = Mem36[ebx_71 + 0x0000004C:word32] | 0xFFFFFFFF
	Mem132[ebx_71 + 0x00000050:word32] = Mem129[ebx_71 + 0x00000050:word32] | 0xFFFFFFFF
	Mem137[esp_106 - 0x00000004:word32] = ebx_71 + 0x00000048
	Mem139[esp_106 - 0x00000008:word32] = edi_65
	word32 esp_142
	word32 edi_143
	word32 ebp_144
	byte SCZO_145
	word32 eax_146
	byte SZO_147
	byte C_148
	word32 ebx_149
	word32 ecx_150
	word32 esi_151
	byte S_152
	byte Z_153
	byte al_154
	word32 edx_155
	selector es_156
	selector ds_157
	call Mem139[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_76,bLoc1D,C_134,ds_79,dwLoc04_6,dwLoc0C_14,dwLoc24_80,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_135,ebp_66,ebx_71,ecx_141,edi_65,edx_77,es_78,esi_140,esp_138,S_82,SCZO_67,SZO_133,Z_75
		defs: al_154,C_148,ds_157,eax_146,ebp_144,ebx_149,ecx_150,edi_143,edx_155,es_156,esi_151,esp_142,S_152,SCZO_145,SZO_147,Z_153
	byte SCZO_161
	word32 eax_162
	byte SZO_163
	byte C_164
	word32 ecx_166
	word32 esi_167
	byte S_168
	byte Z_169
	byte al_170
	word32 edi_159
	word32 ebx_165
	call esi_151 (retsize: 4; depth: 4)
		uses: al_154,bLoc1D,C_148,ds_157,dwLoc04_6,dwLoc0C_14,dwLoc24_80,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_146,ebp_144,ebx_149,ecx_150,edi_143,edx_155,es_156,esi_151,esp_142,S_152,SCZO_145,SZO_147,Z_153
		defs: al_170,C_164,ds_173,eax_162,ebp_160,ebx_165,ecx_166,edi_159,edx_171,es_172,esi_167,esp_158,S_168,SCZO_161,SZO_163,Z_169
	dwLoc24_174 = eax_162
	branch eax_162 < 0x00000000 l10022E6A
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32) Local -0040(32) Stack +000C(8)

l10022CC0:
	branch bArg0C == 0x00 l10022CEE
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32) Local -0040(32)

l10022CC6:
	fn1000F2EE(ebx_165 + 0x00000030)
	Mem477[ebx_165 + 0x00000034:word32] = Mem139[ebx_165 + 0x00000034:word32] | 0xFFFFFFFF
	Mem480[ebx_165 + 0x00000038:word32] = Mem477[ebx_165 + 0x00000038:word32] | 0xFFFFFFFF
	Mem485[esp_106 - 0x00000004:word32] = ebx_165 + 0x00000030
	Mem487[esp_106 - 0x00000008:word32] = 0x100032F0
	Mem489[esp_106 - 0x0000000C:word32] = edi_159
	word32 esp_492
	word32 edi_493
	word32 ebp_494
	byte SCZO_495
	word32 eax_496
	byte SZO_497
	byte C_498
	word32 ebx_499
	word32 ecx_500
	word32 esi_501
	byte S_502
	byte Z_503
	byte al_504
	word32 edx_505
	selector es_506
	selector ds_507
	call Mem489[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_170,bLoc1D,C_482,ds_173,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_483,ebp_160,ebx_165,ecx_491,edi_159,edx_171,es_172,esi_490,esp_488,S_176,SCZO_179,SZO_481,Z_180
		defs: al_504,C_498,ds_507,eax_496,ebp_494,ebx_499,ecx_500,edi_493,edx_505,es_506,esi_501,esp_492,S_502,SCZO_495,SZO_497,Z_503
	word32 ebp_510
	byte SCZO_511
	word32 eax_512
	byte SZO_513
	byte C_514
	word32 ecx_516
	word32 esi_517
	byte S_518
	byte Z_519
	byte al_520
	word32 edx_521
	selector es_522
	selector ds_523
	call esi_501 (retsize: 4; depth: 4)
		uses: al_504,bLoc1D,C_498,ds_507,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_496,ebp_494,ebx_499,ecx_500,edi_493,edx_505,es_506,esi_501,esp_492,S_502,SCZO_495,SZO_497,Z_503
		defs: al_520,C_514,ds_523,eax_512,ebp_510,ebx_515,ecx_516,edi_509,edx_521,es_522,esi_517,esp_508,S_518,SCZO_511,SZO_513,Z_519
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32) Local -0040(32)

l10022CEE:
	byte al_239
	word32 esi_184 = ebx_165 + 0x0000003C
	fn1000F2EE(esi_184)
	Mem187[esi_184 + 0x00000004:word32] = Mem139[esi_184 + 0x00000004:word32] | 0xFFFFFFFF
	Mem190[esi_184 + 0x00000008:word32] = Mem187[esi_184 + 0x00000008:word32] | 0xFFFFFFFF
	word32 esp_194 = esp_106 - 0x00000004
	Mem195[esp_194:word32] = esi_184
	Mem197[esp_194 - 0x00000004:word32] = 0x100032B4
	Mem199[esp_194 - 0x00000008:word32] = edi_159
	word32 esp_202
	word32 edi_203
	word32 ebp_204
	byte SCZO_205
	word32 eax_206
	byte SZO_207
	byte C_208
	word32 ebx_209
	word32 ecx_210
	word32 esi_211
	byte S_212
	byte Z_213
	byte al_214
	word32 edx_215
	selector es_216
	selector ds_217
	call Mem199[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_170,bLoc1D,C_192,ds_173,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_193,ebp_160,ebx_182,ecx_201,edi_181,edx_171,es_172,esi_200,esp_198,S_176,SCZO_179,SZO_191,Z_180
		defs: al_214,C_208,ds_217,eax_206,ebp_204,ebx_209,ecx_210,edi_203,edx_215,es_216,esi_211,esp_202,S_212,SCZO_205,SZO_207,Z_213
	word32 esp_218
	word32 edi_219
	word32 ebp_220
	byte SCZO_221
	word32 eax_222
	byte SZO_223
	byte C_224
	word32 ebx_225
	word32 ecx_226
	word32 esi_227
	byte S_228
	byte Z_229
	byte al_230
	word32 edx_231
	selector es_232
	selector ds_233
	call esi_211 (retsize: 4; depth: 4)
		uses: al_214,bLoc1D,C_208,ds_217,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_206,ebp_204,ebx_209,ecx_210,edi_203,edx_215,es_216,esi_211,esp_202,S_212,SCZO_205,SZO_207,Z_213
		defs: al_230,C_224,ds_233,eax_222,ebp_220,ebx_225,ecx_226,edi_219,edx_231,es_232,esi_227,esp_218,S_228,SCZO_221,SZO_223,Z_229
	branch dwArg08 == 0x00000000 l10022D36
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D1D:
	Mem458[esp_218 - 0x00000004:word32] = 0x00000001
	Mem460[esp_218 - 0x00000008:word32] = 0xFFFFFFFF
	Mem463[esp_218 - 0x0000000C:word32] = Mem460[ebx_225 + 0x00000048:word32]
	Mem465[esp_218 - 0x00000010:word32] = 0xFFFFFFFF
	Mem467[esp_218 - 0x00000014:word32] = dwArg08
	branch CompareStringOrdinal(Mem467[esp_218 - 0x00000014:LPCWSTR], Mem467[esp_218 - 0x00000010:int32], Mem467[esp_218 - 0x0000000C:LPCWSTR], Mem467[esp_218 - 0x00000008:int32], Mem467[esp_218 - 0x00000004:BOOL]) != 0x00000002 l10022D36
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D36:
	al_239 = 0x00
// DataOut: al cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D32:
	al_239 = 0x01
// DataOut: al cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D38:
	Mem241[ebx_225 + 0x00000020:byte] = al_239
	Mem245[esp_218 - 0x00000004:word32] = fp - 0x0000001C
	Mem247[esp_218 - 0x00000008:word32] = edi_219
	word32 esp_250
	word32 edi_251
	word32 ebp_252
	byte SCZO_253
	word32 eax_254
	byte SZO_255
	byte C_256
	word32 ebx_257
	word32 ecx_258
	word32 esi_259
	byte S_260
	byte Z_261
	byte al_262
	word32 edx_263
	selector es_264
	selector ds_265
	call Mem247[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_239,bLoc1D,C_238,ds_233,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_243,ebp_220,ebx_225,ecx_249,edi_219,edx_231,es_232,esi_248,esp_246,S_228,SCZO_221,SZO_236,Z_237
		defs: al_262,C_256,ds_265,eax_254,ebp_252,ebx_257,ecx_258,edi_251,edx_263,es_264,esi_259,esp_250,S_260,SCZO_253,SZO_255,Z_261
	word32 edi_267
	byte SCZO_269
	word32 eax_270
	byte SZO_271
	byte C_272
	word32 ebx_273
	word32 ecx_274
	word32 esi_275
	byte S_276
	byte Z_277
	byte al_278
	word32 edx_279
	call esi_259 (retsize: 4; depth: 4)
		uses: al_262,bLoc1D,C_256,ds_265,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_254,ebp_252,ebx_257,ecx_258,edi_251,edx_263,es_264,esi_259,esp_250,S_260,SCZO_253,SZO_255,Z_261
		defs: al_278,C_272,ds_281,eax_270,ebp_268,ebx_273,ecx_274,edi_267,edx_279,es_280,esi_275,esp_266,S_276,SCZO_269,SZO_271,Z_277
	branch eax_270 < 0x00000000 l10022DB2
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> al:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D53:
	word32 ecx_377 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> al:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D5D:
	branch Mem247[fp - 0x0000001C + ecx_377 * 0x00000004:word32] != Mem247[ecx_377 * 0x00000004 + 0x10005540:word32] l10022D6D
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:0x10005540 ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D6D:
	word32 ecx_439 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:0x10005540 ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D77:
	branch Mem247[fp - 0x0000001C + ecx_439 * 0x00000004:word32] != Mem247[ecx_439 * 0x00000004 + 0x10005530:word32] l10022DB2
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:0x10005530 ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022DB2:
	word32 ecx_287
	word32 ebx_289
	word32 esi_290
	branch fn1000CDA9(es_100, ds_173, out ecx_287, out edx_101, out ebx_289, out esi_290) == 0x00 l10022E6A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022DBF:
	branch Mem247[ebx_289 + 0x0000003C:word32] == 0x00000000 l10022E6A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022DC9:
	Mem298[esp_106 - 0x00000004:word32] = 0x00000001
	Mem301[esp_106 - 0x00000008:word32] = esi_290 | 0xFFFFFFFF
	Mem304[esp_106 - 0x0000000C:word32] = Mem301[ebx_289 + 0x0000003C:word32]
	Mem306[esp_106 - 0x00000010:word32] = esi_290 | 0xFFFFFFFF
	Mem309[esp_106 - 0x00000014:word32] = Mem306[ebx_289 + 0x0000005C:word32]
	branch CompareStringOrdinal(Mem309[esp_106 - 0x00000014:LPCWSTR], Mem309[esp_106 - 0x00000010:int32], Mem309[esp_106 - 0x0000000C:LPCWSTR], Mem309[esp_106 - 0x00000008:int32], Mem309[esp_106 - 0x00000004:BOOL]) == 0x00000002 l10022E6A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022DE5:
	branch fn10029AC8(Mem309[ebx_289 + 0x0000003C:word32]) == 0x00 l10022DF7
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022DF7:
	fn1000F2EE(fp - 0x0000003C)
	fn1000F2EE(fp - 0x00000030)
	word32 edx_334 = Mem309[ebx_289 + 0x0000003C:word32]
	Mem337[esp_106 - 0x00000004:word32] = fp - 0x0000003C
	Mem341[esp_106 - 0x00000008:word32] = fp - 0x00000030
	Mem343[esp_106 - 0x0000000C:word32] = 0x00000000
	Mem345[esp_106 - 0x00000010:word32] = fp - 0x00000030
	word32 ecx_349
	word32 eax_351 = fn10028B5D(edx_334, esi_290 | 0xFFFFFFFF, edi_267, es_100, ds_173, bArg04, dwArg08, dwArg0C, out ecx_349, out edx_101)
	branch eax_351 < 0x00000000 l10022E5A
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x00000040 al:<invalid> edx:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -001D(0) Local -0024(32) Local -0030(32)

l10022E41:
	edx_101 = fn1002A12B(0x00000000, fp - 0x0000001D, esi_290 | 0xFFFFFFFF, es_100, ds_173)
	branch eax_351 < 0x00000000 l10022E5A
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -29(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -001D(0) Local -0024(32)

l10022E50:
	Mem374[ebx_289 + 0x00000058:byte] = 0x00 == 0x00
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -29(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0024(32)

l10022E5A:
	fn1000F2EE(fp - 0x0000003C)
	fn1000F2EE(fp - 0x00000030)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -29(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0024(32)

l10022DF1:
	Mem319[ebx_289 + 0x00000058:byte] = 0x01
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x00000040 al:<invalid> edx:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0024(32)

l10022D7F:
	ecx_439 = ecx_439 + 0x00000001
	branch ecx_439 != 0x00000004 l10022D77
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:0x10005530 ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D65:
	ecx_377 = ecx_377 + 0x00000001
	branch ecx_377 != 0x00000004 l10022D5D
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:0x10005540 ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0024(32)

l10022D6B:
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:0x10005540 ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0024(32)

l10022D85:
	fn1000F2EE(ebx_273 + 0x00000024)
	Mem387[ebx_273 + 0x00000028:word32] = Mem247[ebx_273 + 0x00000028:word32] | 0xFFFFFFFF
	Mem390[ebx_273 + 0x0000002C:word32] = Mem387[ebx_273 + 0x0000002C:word32] | 0xFFFFFFFF
	Mem395[esp_106 - 0x00000004:word32] = ebx_273 + 0x00000024
	Mem397[esp_106 - 0x00000008:word32] = 0x100032A0
	Mem399[esp_106 - 0x0000000C:word32] = edi_267
	word32 esp_402
	word32 edi_403
	word32 ebp_404
	byte SCZO_405
	word32 eax_406
	byte SZO_407
	byte C_408
	word32 ebx_409
	word32 ecx_410
	word32 esi_411
	byte S_412
	byte Z_413
	byte al_414
	word32 edx_415
	selector es_416
	selector ds_417
	call Mem399[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_278,bLoc1D,C_392,ds_281,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_393,ebp_268,ebx_273,ecx_401,edi_267,edx_375,es_280,esi_400,esp_398,S_283,SCZO_382,SZO_391,Z_383
		defs: al_414,C_408,ds_417,eax_406,ebp_404,ebx_409,ecx_410,edi_403,edx_415,es_416,esi_411,esp_402,S_412,SCZO_405,SZO_407,Z_413
	word32 edi_419
	byte SCZO_421
	word32 eax_422
	byte SZO_423
	byte C_424
	word32 ebx_425
	word32 ecx_426
	word32 esi_427
	byte S_428
	byte Z_429
	byte al_430
	call esi_411 (retsize: 4; depth: 4)
		uses: al_414,bLoc1D,C_408,ds_417,dwLoc04_6,dwLoc0C_14,dwLoc24_174,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc40_22,dwLoc48_19,dwLoc4C_25,dwLoc50_27,dwLoc54_41,dwLoc58_43,dwLoc5C_45,eax_406,ebp_404,ebx_409,ecx_410,edi_403,edx_415,es_416,esi_411,esp_402,S_412,SCZO_405,SZO_407,Z_413
		defs: al_430,C_424,ds_433,eax_422,ebp_420,ebx_425,ecx_426,edi_419,edx_431,es_432,esi_427,esp_418,S_428,SCZO_421,SZO_423,Z_429
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> al:<invalid> edx:fp - 0x0000001C -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -36(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0024(32)

l10022E6A:
	word32 esp_113 = esp_106 + 0x00000004
	word32 edi_112 = Mem36[esp_106:word32]
	*ediOut = edi_112
	word32 ebx_116 = Mem36[esp_113 + 0x00000004:word32]
	*ebxOut = ebx_116
	word32 ecx_118
	return fn1002F420(dwLoc24_174, eax_11 ^ fp - 0x00000004, edx_101, ebx_116, ebp_105, Mem36[esp_113:word32], edi_112, es_100, ds_173, out ecx_118)
// DataOut: cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -29(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10022C3F_exit:
// DataOut: eax ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003304 -84(fp):ecx + 0x000000B8 -80(fp):edi -76(fp):esi -72(fp):ebx -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -29(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn100231BE(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es fs gs ss
// LiveOut: eax ebx ecx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100231BE_entry:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100231BE:
	word32 edi_100
	word32 esp_32
	word32 edi_33
	word32 ebp_34
	byte SCZO_35
	word32 eax_36
	byte SZO_37
	byte C_38
	word32 ebx_39
	word32 esi_40
	word32 ecx_41
	byte Z_42
	byte S_43
	word32 edx_44
	selector es_45
	selector ds_46
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 52)
		uses: C_25,dwLoc04_6,dwLoc08_12,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_26,ebp_7,ebx_17,ecx_31,edi_23,esi_30,esp_27,SZO_24
		defs: C_38,ds_46,eax_36,ebp_34,ebx_39,ecx_41,edi_33,edx_44,es_45,esi_40,esp_32,S_43,SCZO_35,SZO_37,Z_42
	word32 edi_48
	byte SCZO_50
	word32 eax_51
	byte SZO_52
	byte C_53
	word32 ebx_54
	word32 esi_55
	word32 ecx_56
	byte Z_57
	byte S_58
	selector ds_145
	selector es_144
	word32 edx_143
	word32 ebp_133
	word32 esp_131
	call esi_40 (retsize: 4; depth: 4)
		uses: C_38,ds_46,dwLoc04_6,dwLoc08_12,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_36,ebp_34,ebx_39,ecx_41,edi_33,edx_44,es_45,esi_40,esp_32,S_43,SCZO_35,SZO_37,Z_42
		defs: C_53,ds_61,eax_51,ebp_49,ebx_54,ecx_56,edi_48,edx_59,es_60,esi_55,esp_47,S_58,SCZO_50,SZO_52,Z_57
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch eax_51 == 0x00000000 l100231F4
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l100231F4:
	word32 eax_110 = Mem0[dwArg08:word32]
	Mem112[esp_131 - 0x00000004:word32] = eax_110
	word32 esp_116
	word32 edi_117
	word32 ebp_118
	byte SCZO_119
	word32 eax_120
	byte SZO_121
	byte C_122
	word32 ebx_123
	word32 esi_124
	word32 ecx_125
	byte Z_126
	byte S_127
	word32 edx_128
	selector es_129
	selector ds_130
	call Mem112[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_64,ds_61,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_110,ebp_49,ebx_54,ecx_115,edi_48,edx_59,es_60,esi_114,esp_111,S_58,SCZO_50,SZO_62,Z_63
		defs: C_122,ds_130,eax_120,ebp_118,ebx_123,ecx_125,edi_117,edx_128,es_129,esi_124,esp_116,S_127,SCZO_119,SZO_121,Z_126
	word32 edi_132
	byte SCZO_134
	word32 eax_135
	byte SZO_136
	byte C_137
	word32 ebx_138
	word32 esi_139
	word32 ecx_140
	byte Z_141
	byte S_142
	call esi_124 (retsize: 4; depth: 4)
		uses: C_122,ds_130,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_120,ebp_118,ebx_123,ecx_125,edi_117,edx_128,es_129,esi_124,esp_116,S_127,SCZO_119,SZO_121,Z_126
		defs: C_137,ds_145,eax_135,ebp_133,ebx_138,ecx_140,edi_132,edx_143,es_144,esi_139,esp_131,S_142,SCZO_134,SZO_136,Z_141
	branch eax_135 == 0x00000000 l10023215
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l10023215:
	word32 eax_152 = Mem112[ebx_138:word32]
	Mem154[esp_131 - 0x00000004:word32] = eax_152
	word32 esp_158
	word32 edi_159
	word32 ebp_160
	byte SCZO_161
	word32 eax_162
	byte SZO_163
	byte C_164
	word32 ebx_165
	word32 esi_166
	word32 ecx_167
	byte Z_168
	byte S_169
	word32 edx_170
	selector es_171
	selector ds_172
	call Mem154[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_148,ds_145,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_152,ebp_133,ebx_138,ecx_157,edi_132,edx_143,es_144,esi_156,esp_153,S_142,SCZO_134,SZO_146,Z_147
		defs: C_164,ds_172,eax_162,ebp_160,ebx_165,ecx_167,edi_159,edx_170,es_171,esi_166,esp_158,S_169,SCZO_161,SZO_163,Z_168
	word32 edi_174
	word32 ebp_175
	byte SCZO_176
	word32 eax_177
	byte SZO_178
	byte C_179
	word32 esi_181
	word32 ecx_182
	byte Z_183
	byte S_184
	word32 edx_185
	selector es_186
	selector ds_187
	word32 ebx_180
	word32 esp_173
	call esi_166 (retsize: 4; depth: 4)
		uses: C_164,ds_172,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_162,ebp_160,ebx_165,ecx_167,edi_159,edx_170,es_171,esi_166,esp_158,S_169,SCZO_161,SZO_163,Z_168
		defs: C_179,ds_187,eax_177,ebp_175,ebx_180,ecx_182,edi_174,edx_185,es_186,esi_181,esp_173,S_184,SCZO_176,SZO_178,Z_183
	branch eax_177 == 0x00000000 l10023244
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002322B:
	word32 eax_470 = Mem154[dwArg08:word32]
	Mem472[esp_173 - 0x00000004:word32] = eax_470
	word32 esp_476
	word32 edi_477
	word32 ebp_478
	byte SCZO_479
	word32 eax_480
	byte SZO_481
	byte C_482
	word32 ebx_483
	word32 esi_484
	word32 ecx_485
	byte Z_486
	byte S_487
	word32 edx_488
	selector es_489
	selector ds_490
	call Mem472[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_190,ds_187,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_470,ebp_175,ebx_180,ecx_475,edi_174,edx_185,es_186,esi_474,esp_471,S_184,SCZO_176,SZO_188,Z_189
		defs: C_482,ds_490,eax_480,ebp_478,ebx_483,ecx_485,edi_477,edx_488,es_489,esi_484,esp_476,S_487,SCZO_479,SZO_481,Z_486
	word32 edi_492
	word32 ebp_493
	byte SCZO_494
	word32 eax_495
	byte SZO_496
	byte C_497
	word32 esi_499
	word32 ecx_500
	byte Z_501
	byte S_502
	word32 edx_503
	selector es_504
	selector ds_505
	call esi_484 (retsize: 4; depth: 4)
		uses: C_482,ds_490,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_480,ebp_478,ebx_483,ecx_485,edi_477,edx_488,es_489,esi_484,esp_476,S_487,SCZO_479,SZO_481,Z_486
		defs: C_497,ds_505,eax_495,ebp_493,ebx_498,ecx_500,edi_492,edx_503,es_504,esi_499,esp_491,S_502,SCZO_494,SZO_496,Z_501
	branch eax_495 != 0x00000000 l1002327B
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l10023244:
	word32 eax_344 = Mem154[ebx_180:word32]
	word32 esp_345 = esp_173 - 0x00000004
	Mem346[esp_345:word32] = eax_344
	word32 esp_350
	word32 edi_351
	word32 ebp_352
	byte SCZO_353
	word32 eax_354
	byte SZO_355
	byte C_356
	word32 ebx_357
	word32 esi_358
	word32 ecx_359
	byte Z_360
	byte S_361
	word32 edx_362
	selector es_363
	selector ds_364
	call Mem346[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_190,ds_187,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_344,ebp_175,ebx_342,ecx_349,edi_174,edx_185,es_186,esi_348,esp_345,S_184,SCZO_176,SZO_188,Z_189
		defs: C_356,ds_364,eax_354,ebp_352,ebx_357,ecx_359,edi_351,edx_362,es_363,esi_358,esp_350,S_361,SCZO_353,SZO_355,Z_360
	word32 edi_366
	word32 ebp_367
	byte SCZO_368
	word32 eax_369
	byte SZO_370
	byte C_371
	word32 esi_373
	word32 ecx_374
	byte Z_375
	byte S_376
	word32 edx_377
	selector es_378
	selector ds_379
	call esi_358 (retsize: 4; depth: 4)
		uses: C_356,ds_364,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_354,ebp_352,ebx_357,ecx_359,edi_351,edx_362,es_363,esi_358,esp_350,S_361,SCZO_353,SZO_355,Z_360
		defs: C_371,ds_379,eax_369,ebp_367,ebx_372,ecx_374,edi_366,edx_377,es_378,esi_373,esp_365,S_376,SCZO_368,SZO_370,Z_375
	branch eax_369 != 0x00000000 l10023316
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002325E:
	word32 eax_430 = Mem346[dwArg08:word32]
	Mem432[esp_173 - 0x00000004:word32] = eax_430
	word32 esp_436
	word32 edi_437
	word32 ebp_438
	byte SCZO_439
	word32 eax_440
	byte SZO_441
	byte C_442
	word32 ebx_443
	word32 esi_444
	word32 ecx_445
	byte Z_446
	byte S_447
	word32 edx_448
	selector es_449
	selector ds_450
	call Mem432[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_382,ds_379,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_430,ebp_367,ebx_372,ecx_435,edi_366,edx_377,es_378,esi_434,esp_431,S_376,SCZO_368,SZO_380,Z_381
		defs: C_442,ds_450,eax_440,ebp_438,ebx_443,ecx_445,edi_437,edx_448,es_449,esi_444,esp_436,S_447,SCZO_439,SZO_441,Z_446
	word32 edi_452
	word32 ebp_453
	byte SCZO_454
	word32 eax_455
	byte SZO_456
	byte C_457
	word32 esi_459
	word32 ecx_460
	byte Z_461
	byte S_462
	word32 edx_463
	selector es_464
	selector ds_465
	call esi_444 (retsize: 4; depth: 4)
		uses: C_442,ds_450,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_440,ebp_438,ebx_443,ecx_445,edi_437,edx_448,es_449,esi_444,esp_436,S_447,SCZO_439,SZO_441,Z_446
		defs: C_457,ds_465,eax_455,ebp_453,ebx_458,ecx_460,edi_452,edx_463,es_464,esi_459,esp_451,S_462,SCZO_454,SZO_456,Z_461
	branch eax_455 != 0x00000000 l10023316
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l10023316:
	word32 eax_385 = Mem346[ebx_180:word32]
	word32 esp_386 = esp_173 - 0x00000004
	Mem387[esp_386:word32] = eax_385
	word32 esp_391
	word32 edi_392
	word32 ebp_393
	byte SCZO_394
	word32 eax_395
	byte SZO_396
	byte C_397
	word32 ebx_398
	word32 esi_399
	word32 ecx_400
	byte Z_401
	byte S_402
	word32 edx_403
	selector es_404
	selector ds_405
	call Mem387[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_382,ds_379,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_385,ebp_367,ebx_383,ecx_390,edi_366,edx_377,es_378,esi_389,esp_386,S_376,SCZO_368,SZO_380,Z_381
		defs: C_397,ds_405,eax_395,ebp_393,ebx_398,ecx_400,edi_392,edx_403,es_404,esi_399,esp_391,S_402,SCZO_394,SZO_396,Z_401
	word32 edi_407
	byte SCZO_409
	word32 eax_410
	byte SZO_411
	byte C_412
	word32 ebx_413
	word32 esi_414
	word32 ecx_415
	byte Z_416
	byte S_417
	call esi_399 (retsize: 4; depth: 4)
		uses: C_397,ds_405,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_395,ebp_393,ebx_398,ecx_400,edi_392,edx_403,es_404,esi_399,esp_391,S_402,SCZO_394,SZO_396,Z_401
		defs: C_412,ds_420,eax_410,ebp_408,ebx_413,ecx_415,edi_407,edx_418,es_419,esi_414,esp_406,S_417,SCZO_409,SZO_411,Z_416
	edi_100 = (0x00000000 - (-eax_410 == 0x00000000) & 0xFFFFFFFE) + 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002327B:
	word32 esi_193 = Mem154[ebx_180:word32]
	fn1000F2EE(fp - 0x00000020)
	word32 esp_205 = esp_173 - 0x00000004
	Mem206[esp_205:word32] = fp - 0x00000020
	Mem208[esp_205 - 0x00000004:word32] = esi_193
	word32 esp_211
	word32 edi_212
	word32 ebp_213
	byte SCZO_214
	word32 eax_215
	byte SZO_216
	byte C_217
	word32 ebx_218
	word32 esi_219
	word32 ecx_220
	byte Z_221
	byte S_222
	word32 edx_223
	selector es_224
	selector ds_225
	call Mem208[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_200,ds_187,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18_203,dwLoc1C_202,dwLoc20_195,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_204,ebp_175,ebx_198,ecx_210,edi_174,edx_185,es_186,esi_209,esp_207,S_184,SCZO_176,SZO_199,Z_189
		defs: C_217,ds_225,eax_215,ebp_213,ebx_218,ecx_220,edi_212,edx_223,es_224,esi_219,esp_211,S_222,SCZO_214,SZO_216,Z_221
	byte SCZO_229
	word32 eax_230
	byte SZO_231
	byte C_232
	word32 ebx_233
	word32 esi_234
	word32 ecx_235
	byte Z_236
	byte S_237
	call esi_219 (retsize: 4; depth: 4)
		uses: C_217,ds_225,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10,dwLoc14,dwLoc18_203,dwLoc1C_202,dwLoc20_195,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_215,ebp_213,ebx_218,ecx_220,edi_212,edx_223,es_224,esi_219,esp_211,S_222,SCZO_214,SZO_216,Z_221
		defs: C_232,ds_240,eax_230,ebp_228,ebx_233,ecx_235,edi_227,edx_238,es_239,esi_234,esp_226,S_237,SCZO_229,SZO_231,Z_236
	branch eax_230 < 0x00000000 l1002330C
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l100232AF:
	word32 esi_267 = Mem208[dwArg08:word32]
	fn1000F2EE(fp - 0x00000014)
	Mem273[esp_131 - 0x00000004:word32] = fp - 0x00000014
	Mem275[esp_131 - 0x00000008:word32] = esi_267
	word32 esp_278
	word32 edi_279
	word32 ebp_280
	byte SCZO_281
	word32 eax_282
	byte SZO_283
	byte C_284
	word32 ebx_285
	word32 esi_286
	word32 ecx_287
	byte Z_288
	byte S_289
	word32 edx_290
	selector es_291
	selector ds_292
	call Mem275[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_243,ds_240,dwLoc04_6,dwLoc08_12,dwLoc0C_270,dwLoc10_268,dwLoc14_264,dwLoc18_203,dwLoc1C_202,dwLoc20_195,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_271,ebp_228,ebx_233,ecx_277,edi_227,edx_238,es_239,esi_276,esp_274,S_242,SCZO_229,SZO_241,Z_236
		defs: C_284,ds_292,eax_282,ebp_280,ebx_285,ecx_287,edi_279,edx_290,es_291,esi_286,esp_278,S_289,SCZO_281,SZO_283,Z_288
	word32 esp_293
	byte SCZO_296
	word32 eax_297
	byte SZO_298
	byte C_299
	word32 ebx_300
	word32 esi_301
	word32 ecx_302
	byte Z_303
	byte S_304
	call esi_286 (retsize: 4; depth: 4)
		uses: C_284,ds_292,dwLoc04_6,dwLoc08_12,dwLoc0C_270,dwLoc10_268,dwLoc14_264,dwLoc18_203,dwLoc1C_202,dwLoc20_195,dwLoc24_15,dwLoc28_20,dwLoc2C_22,dwLoc30_28,eax_282,ebp_280,ebx_285,ecx_287,edi_279,edx_290,es_291,esi_286,esp_278,S_289,SCZO_281,SZO_283,Z_288
		defs: C_299,ds_307,eax_297,ebp_295,ebx_300,ecx_302,edi_294,edx_305,es_306,esi_301,esp_293,S_304,SCZO_296,SZO_298,Z_303
	branch eax_297 < 0x00000000 l10023304
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100232E3:
	Mem320[esp_293 - 0x00000004:word32] = 0x00000001
	Mem322[esp_293 - 0x00000008:word32] = ebx_300
	Mem325[esp_293 - 0x0000000C:word32] = 0x00000000
	Mem327[esp_293 - 0x00000010:word32] = ebx_300
	Mem330[esp_293 - 0x00000014:word32] = 0x00000000
	word32 eax_331 = CompareStringOrdinal(Mem330[esp_293 - 0x00000014:LPCWSTR], Mem330[esp_293 - 0x00000010:int32], Mem330[esp_293 - 0x0000000C:LPCWSTR], Mem330[esp_293 - 0x00000008:int32], Mem330[esp_293 - 0x00000004:BOOL])
	branch eax_331 != 0x00000001 l100232FC
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100232FC:
	branch eax_331 != 0x00000003 l10023304
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023301:
	edi_100 = 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100232F8:
	edi_100 = ebx_300
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023304:
	fn1000F2EE(fp - 0x00000014)
	esp_131 = esp_293
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002330C:
	fn1000F2EE(fp - 0x00000020)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002320D:
	edi_100 = 0xFFFFFFFF
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100231EE:
	edi_100 = 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023332:
	word32 esp_83 = esp_131 + 0x00000004
	word32 edi_82 = Mem0[esp_131:word32]
	*ediOut = edi_82
	word32 esi_84 = Mem0[esp_83:word32]
	*esiOut = esi_84
	word32 ebx_89 = Mem0[esp_83 + 0x00000004:word32]
	*ebxOut = ebx_89
	word32 ecx_91
	return fn1002F420(edi_100, eax_11 ^ fp - 0x00000004, edx_143, ebx_89, ebp_133, esi_84, edi_82, es_144, ds_145, out ecx_91)
// DataOut: cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100231BE_exit:
// DataOut: eax ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10023347(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10023347_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +0004(32)

l10023347:
	word32 ebp_147 = fp - 0x00000004
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_145 = fp - 0x0000001C
	word32 edi_146 = ecx
	branch dwArg04 == 0x00000000 l10023378
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l10023368:
	word32 esp_130
	word32 edi_131
	word32 ebp_132
	byte SCZO_133
	word32 eax_134
	byte SZO_135
	byte C_136
	word32 edx_137
	word32 ebx_138
	word32 esi_139
	word32 ecx_140
	byte Z_141
	byte S_142
	selector es_143
	selector ds_144
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 36)
		uses: C_28,ds,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10_15,dwLoc14_18,dwLoc18_21,dwLoc1C_23,dwLoc20_126,eax_124,ebp_7,ebx,ecx_128,edi_25,edx_14,es,esi_127,esp_125,S,SCZO,SZO_26,Z_27
		defs: C_136,ds_144,eax_134,ebp_132,ebx_138,ecx_140,edi_131,edx_137,es_143,esi_139,esp_130,S_142,SCZO_133,SZO_135,Z_141
	byte SCZO_148
	word32 eax_149
	byte SZO_150
	byte C_151
	word32 edx_152
	word32 ebx_153
	word32 esi_154
	byte Z_156
	byte S_157
	call esi_139 (retsize: 4; depth: 4)
		uses: C_136,ds_144,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10_15,dwLoc14_18,dwLoc18_21,dwLoc1C_23,dwLoc20_126,eax_134,ebp_132,ebx_138,ecx_140,edi_131,edx_137,es_143,esi_139,esp_130,S_142,SCZO_133,SZO_135,Z_141
		defs: C_151,ds_159,eax_149,ebp_147,ebx_153,ecx_155,edi_146,edx_152,es_158,esi_154,esp_145,S_157,SCZO_148,SZO_150,Z_156
// DataOut: cs ds ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l10023378:
	word32 esi_108
	word32 ebx_44 = edi_146 + 0x00000020
	word32 esp_45 = esp_145 - 0x00000004
	Mem46[esp_45:word32] = ebx_44
	AcquireSRWLockExclusive(Mem46[esp_45:PSRWLOCK])
	word32 dwLoc0C_120 = dwLoc0C & 0x00000000
	word32 eax_52 = Mem46[edi_146 + 0x00000028:word32]
	branch eax_52 != Mem46[edi_146 + 0x00000030:word32] l100233A2
// DataOut: cs ds eax ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l1002338E:
	Mem110[esp_45:word32] = ecx
	Mem115[esp_45 - 0x00000004:word32] = eax_52 + 0x00000001
	word32 edx_116
	word32 eax_117 = fn10015655(edi_146 + 0x00000024, es, ds, dwArg00, out edx_116)
	esi_108 = eax_117
	dwLoc0C_120 = eax_117
	branch eax_117 < 0x00000000 l100233BB
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ebx:ecx + 0x00000020 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l100233A2:
	word32 esi_96 = Mem46[edi_146 + 0x00000028:word32]
	word32 esp_98 = esp_145 - 0x00000004
	Mem99[esp_98:word32] = fp - 0x00000010
	Mem101[esp_98 - 0x00000004:word32] = esi_96
	Mem104[edi_146 + 0x00000028:word32] = esi_96 + 0x00000001
	fn10023609(edi_146 + 0x00000024, ebx_44, esi_96, edi_146, es, ds, dwArg00, dwArg04)
	esi_108 = dwLoc0C_120
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ebx:ecx + 0x00000020 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100233BB:
	branch ebx_44 == 0x00000000 l100233C6
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ebx:ecx + 0x00000020 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100233BF:
	word32 esp_88 = esp_145 - 0x00000004
	Mem89[esp_88:word32] = ebx_44
	ReleaseSRWLockExclusive(Mem89[esp_88:PSRWLOCK])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ebx:ecx + 0x00000020 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100233C6:
	word32 edx_67
	word32 esi_68
	fn1000C640(fp - 0x00000010, ebx_44, esi_108, edi_146, es, ds, out edx_67, out esi_68)
	word32 esp_73 = esp_145 + 0x00000004
	word32 edi_72 = Mem46[esp_145:word32]
	*ediOut = edi_72
	word32 esi_74 = Mem46[esp_73:word32]
	*esiOut = esi_74
	word32 ecx_81
	return fn1002F420(esi_68, eax_11 ^ fp - 0x00000004, edx_67, Mem46[esp_73 + 0x00000004:word32], ebp_147, esi_74, edi_72, es, ds, out ecx_81)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ebx:ecx + 0x00000020 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10023347_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100233E3(word32 ecx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi es fs gs ss
// LiveOut: ebx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn100233E3_entry:
// DataOut: cs ds ebp ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l100233E3:
	word32 ecx_203
	word32 edi_195 = edi
	word32 ebp_196 = fp - 0x00000004
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebx_20 = ecx
	word32 esp_194 = fp - 0x00000020
	ecx_203 = ecx
	branch dwArg04 == 0x00000000 l10023416
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32) Local -0018(32)

l10023406:
	word32 esp_178
	word32 edi_179
	word32 ebp_180
	byte SCZO_181
	word32 eax_182
	byte SZO_183
	byte C_184
	word32 edx_185
	word32 ebx_186
	word32 ecx_187
	word32 esi_188
	byte Z_189
	byte CZ_190
	byte S_191
	selector es_192
	selector ds_193
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 40)
		uses: C_27,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10,dwLoc14,dwLoc18_21,dwLoc1C_18,dwLoc20_24,dwLoc24_173,eax_171,ebp_7,ebx_20,ecx_175,edi_3,edx_14,es,esi_174,esp_172,S,SCZO,SZO_25,Z_26
		defs: C_184,CZ_190,ds_193,eax_182,ebp_180,ebx_186,ecx_187,edi_179,edx_185,es_192,esi_188,esp_178,S_191,SCZO_181,SZO_183,Z_189
	byte SCZO_197
	word32 eax_198
	byte SZO_199
	byte C_200
	word32 edx_201
	word32 esi_204
	byte Z_205
	byte CZ_206
	byte S_207
	call esi_188 (retsize: 4; depth: 4)
		uses: C_184,CZ_190,ds_193,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10,dwLoc14,dwLoc18_21,dwLoc1C_18,dwLoc20_24,dwLoc24_173,eax_182,ebp_180,ebx_186,ecx_187,edi_179,edx_185,es_192,esi_188,esp_178,S_191,SCZO_181,SZO_183,Z_189
		defs: C_200,CZ_206,ds_209,eax_198,ebp_196,ebx_202,ecx_203,edi_195,edx_201,es_208,esi_204,esp_194,S_207,SCZO_197,SZO_199,Z_205
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:ecx -32(fp):esi -28(fp):ebx -24(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0014(32) Local -0018(32)

l10023416:
	word32 esp_46 = esp_194 - 0x00000004
	Mem47[esp_46:word32] = edi_195
	Mem50[esp_46 - 0x00000004:word32] = ebx_20 + 0x00000020
	AcquireSRWLockExclusive(Mem50[esp_46 - 0x00000004:PSRWLOCK])
	Mem54[esp_46 - 0x00000004:word32] = fp - 0x00000014
	Mem57[esp_46 - 0x00000008:word32] = fp - 0x0000000C
	Mem60[esp_46 - 0x0000000C:word32] = ecx_203
	word32 esi_141 = ebx_20 + 0x00000024
	word32 ecx_63 = fn10023652(esi_141, es, ds, dwArg04, dwArg08)
	word32 eax_169 = Mem60[esi_141 + 0x00000004:word32]
	word32 ebx_117 = 0x00000000
	word32 dwLoc10_170 = eax_169
	branch dwLoc14 <u eax_169 l10023448
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32)

l10023443:
	eax_169 = dwLoc14
	dwLoc10_170 = dwLoc14
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32)

l10023448:
	word32 eax_74 = eax_169 + 0x00000001
	branch eax_74 <=u Mem60[esi_141 + 0x0000000C:word32] l1002345D
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32)

l1002344E:
	Mem158[esp_46 - 0x00000004:word32] = ecx_63
	Mem160[esp_46 - 0x00000008:word32] = eax_74
	word32 edx_162
	word32 eax_163 = fn10015655(esi_141, es, ds, dwArg00, out edx_162)
	ebx_117 = eax_163
	branch eax_163 < 0x00000000 l10023494
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32)

l1002345D:
	word32 edx_121 = Mem60[esi_141 + 0x00000004:word32]
	branch dwLoc14 >=u edx_121 l1002347D
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32)

l10023464:
	word32 ecx_143 = Mem60[esi_141:word32]
	Mem147[esp_46 - 0x00000004:word32] = edx_121 - dwLoc14 << 0x00000002
	word32 eax_148 = ecx_143 + dwLoc14 * 0x00000004
	Mem150[esp_46 - 0x00000008:word32] = eax_148
	Mem153[esp_46 - 0x0000000C:word32] = eax_148 + 0x00000004
	memmove(Mem153[esp_46 - 0x0000000C:(ptr void)], Mem153[esp_46 - 0x00000008:(ptr void)], Mem153[esp_46 - 0x00000004:size_t])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32)

l1002347D:
	Mem130[esi_141 + 0x00000004:word32] = dwLoc10_170 + 0x00000001
	branch ebx_117 < 0x00000000 l10023494
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0018(32)

l10023488:
	Mem137[esp_46 - 0x00000004:word32] = fp - 0x0000000C
	Mem139[esp_46 - 0x00000008:word32] = dwLoc14
	esi_141 = fn10023609(esi_141, ebx_117, esi_141, dwLoc14, es, ds, dwArg00, dwArg04)
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:ecx + 0x00000024 ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l10023494:
	word32 edi_86 = Mem60[esp_46:word32]
	*ediOut = edi_86
	branch ecx == 0x00000020 l100234A4
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002349D:
	Mem113[esp_46:word32] = ecx + 0x00000020
	ReleaseSRWLockExclusive(Mem113[esp_46:PSRWLOCK])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100234A4:
	word32 edx_93
	word32 esi_94
	fn1000C640(fp - 0x0000000C, ebx_117, esi_141, edi_86, es, ds, out edx_93, out esi_94)
	word32 esi_98 = Mem60[esp_46 + 0x00000004:word32]
	*esiOut = esi_98
	word32 ebx_103 = Mem60[esp_46 + 0x00000008:word32]
	word32 ecx_105
	fn1002F420(ebx_117, eax_11 ^ fp - 0x00000004, edx_93, ebx_103, ebp_196, esi_98, edi_86, es, ds, out ecx_105)
	return ebx_103
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100233E3_exit:
// DataOut: ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):esi -28(fp):ebx -24(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100234C0(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32)
fn100234C0_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l100234C0:
	Mem27[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
	AcquireSRWLockShared(ecx + 0x00000020)
	word32 esi_43
	word32 eax_44 = fn1002237C(ecx + 0x00000024, edx, dwArg08, ecx, es, ds, 0x00000000, fp - 0x00000008, out esi_43)
	branch ecx == 0x00000020 l100234FA
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100234F3:
	ReleaseSRWLockShared(ecx + 0x00000020)
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000000 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100234FA:
	branch eax_44 < 0x00000000 l10023507
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100234FE:
	Mem76[dwArg08:word32] = ecx & 0x00000000
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10023507:
	word32 edx_59
	word32 esi_60
	fn1000C640(fp - 0x00000008, dwArg08, eax_44, ecx + 0x00000020, es, ds, out edx_59, out esi_60)
	return esi_60
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100234C0_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10023609(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi rax rcx rdx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10023609_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10023609:
	word32 edi_3 = edi
	word32 ebp_38 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 eax_17 = dwArg04
	word32 edx_18 = Mem0[ecx:word32] + dwArg04 * 0x00000004
	branch edx_18 == 0x00000000 l10023642
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l10023625:
	word32 ecx_50 = Mem0[dwArg08:word32]
	Mem51[edx_18:word32] = ecx_50
	eax_17 = dwArg08
	branch ecx_50 == 0x00000000 l10023642
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023630:
	word32 esp_62
	word32 edi_63
	word32 ebp_64
	word32 ecx_65
	word32 eax_66
	byte SZO_67
	byte C_68
	word32 edx_69
	byte Z_70
	word32 esi_71
	word32 ebx_72
	selector es_73
	selector ds_74
	call Mem51[0x100323BC:word32] (retsize: 4; depth: 20)
		uses: C_54,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_57,dwLoc10_59,eax_55,ebp_7,ebx,ecx_61,edi_3,edx_18,es,esi_60,esp_58,SZO_52,Z_53
		defs: C_68,ds_74,eax_66,ebp_64,ebx_72,ecx_65,edi_63,edx_69,es_73,esi_71,esp_62,SZO_67,Z_70
	word32 esp_75
	word32 ecx_78
	byte SZO_80
	byte C_81
	byte Z_83
	word32 esi_84
	call esi_71 (retsize: 4; depth: 4)
		uses: C_68,ds_74,dwLoc04_6,dwLoc08_14,dwLoc0C_57,dwLoc10_59,eax_66,ebp_64,ebx_72,ecx_65,edi_63,edx_69,es_73,esi_71,esp_62,SZO_67,Z_70
		defs: C_81,ds_87,eax_79,ebp_77,ebx_85,ecx_78,edi_76,edx_82,es_86,esi_84,esp_75,SZO_80,Z_83
	esi = Mem51[esp_75:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023642:
	word32 ecx_43
	fn1002F420(eax_17, eax_13 ^ fp - 0x00000004, edx_18, ebx, ebp_38, esi, edi_3, es, ds, out ecx_43)
	return esi
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn10023609_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn10023652(word32 ecx, selector es, selector ds, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: ecx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32) Stack +000C(32)
fn10023652_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l10023652:
	Mem22[dwArg0C:word32] = 0x00000000
	word32 edi_107 = 0x00000000
	word32 eax_24 = Mem22[ecx + 0x00000004:word32]
	branch eax_24 == 0x00000000 l100236F0
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l10023671:
	word32 edx_105 = eax_24 - 0x00000001
	word32 dwLoc08_104 = eax_24 - 0x00000001
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x8002802B -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l1002367A:
	word32 ebx_108
	word32 esi_147
	word32 eax_81 = fn100231BE(edx_105, es, ds, Mem22[ecx:word32] + (edx_105 + edi_107 >>u 0x00000001) * 0x00000004, dwArg08, out ecx, out ebx_108, out esi_147, out edi_107)
	branch eax_81 <= 0x00000000 l100236A4
// DataOut: cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236A4:
	branch eax_81 >= 0x00000000 l100236C9
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236C9:
	branch esi_147 == 0x00000000 l100236EA
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236CD:
	word32 edi_153 = ecx
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l100236D0:
	word32 ebx_166
	branch fn100231BE(edx_105, es, ds, Mem22[edi_153:word32] + esi_147 * 0x00000004 + 0xFFFFFFFC, dwArg08, out ecx, out ebx_166, out esi_147, out edi_153) != 0x00000000 l100236EA
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l100236E5:
	esi_147 = esi_147 - 0x00000001
	branch esi_147 != 0x00000001 l100236D0
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l100236EA:
	Mem152[dwArg0C:word32] = esi_147
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100236A6:
	edi_107 = esi_147 + 0x00000001
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l10023691:
	branch esi_147 != 0x00000000 l1002369C
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l1002369C:
	edx_105 = esi_147 - 0x00000001
	dwLoc08_104 = esi_147 - 0x00000001
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l10023695:
	ebx_108 = 0x8002802B
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236A9:
	edx_105 = dwLoc08_104
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236AC:
	branch edx_105 >=u edi_107 l100236B5
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236B0:
	ebx_108 = 0x8002802B
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236B5:
	branch ebx_108 >= 0x00000000 l1002367A
// DataOut: cs ds eax ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l100236BC:
	branch eax_81 < 0x00000000 l100236C2
// DataOut: cs ds ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32)

l100236C0:
	edi_107 = esi_147
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32)

l100236C2:
	Mem121[dwArg0C:word32] = edi_107
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:ecx -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100236EF:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l100236F0:
	return ecx
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> edx:<invalid> esi:esi ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn10023652_exit:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx edx:<invalid> esi:esi ecx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):edi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1002371A(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1002371A_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002371A:
	word32 esp_36
	word32 edi_37
	word32 ebp_38
	byte SCZO_39
	word32 eax_40
	byte SZO_41
	byte C_42
	word32 ebx_43
	word32 edx_44
	word32 esi_45
	word32 ecx_46
	byte S_47
	byte Z_48
	byte CZ_49
	word16 ax_50
	selector es_51
	selector ds_52
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 148)
		uses: C_20,dwLoc04_6,dwLoc08_12,dwLoc78_23,dwLoc7C_22,dwLoc80_21,dwLoc84_15,dwLoc88_27,dwLoc8C_29,dwLoc90_35,eax_24,ebp_7,ebx_17,ecx_33,edi_31,edx,esi_32,esp_34,SZO_19
		defs: ax_50,C_42,CZ_49,ds_52,eax_40,ebp_38,ebx_43,ecx_46,edi_37,edx_44,es_51,esi_45,esp_36,S_47,SCZO_39,SZO_41,Z_48
	word32 esp_53
	word32 edi_54
	word32 ebp_55
	byte SCZO_56
	word32 eax_57
	byte SZO_58
	byte C_59
	word32 ebx_60
	word32 edx_61
	word32 esi_62
	word32 ecx_63
	byte S_64
	byte Z_65
	byte CZ_66
	word16 ax_67
	selector es_68
	selector ds_69
	call esi_45 (retsize: 4; depth: 4)
		uses: ax_50,C_42,CZ_49,ds_52,dwLoc04_6,dwLoc08_12,dwLoc78_23,dwLoc7C_22,dwLoc80_21,dwLoc84_15,dwLoc88_27,dwLoc8C_29,dwLoc90_35,eax_40,ebp_38,ebx_43,ecx_46,edi_37,edx_44,es_51,esi_45,esp_36,S_47,SCZO_39,SZO_41,Z_48
		defs: ax_67,C_59,CZ_66,ds_69,eax_57,ebp_55,ebx_60,ecx_63,edi_54,edx_61,es_68,esi_62,esp_53,S_64,SCZO_56,SZO_58,Z_65
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	fn1000F2EE(fp - 0x00000080)
	Mem82[esp_53 - 0x00000004:word32] = fp - 0x00000080
	Mem85[esp_53 - 0x00000008:word32] = eax_57
	Mem88[esp_53 - 0x0000000C:word32] = edi_54
	word32 esp_89
	word32 edi_90
	word32 ebp_91
	byte SCZO_92
	word32 eax_93
	byte SZO_94
	byte C_95
	word32 ebx_96
	word32 edx_97
	word32 esi_98
	word32 ecx_99
	byte S_100
	byte Z_101
	byte CZ_102
	word16 ax_103
	selector es_104
	selector ds_105
	call Mem88[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: ax_67,C_80,CZ_66,ds_69,dwLoc04_6,dwLoc08_12,dwLoc70_71,dwLoc78_78,dwLoc7C_75,dwLoc80_21,dwLoc84_15,dwLoc88_27,dwLoc8C_29,dwLoc90_35,eax_73,ebp_55,ebx_60,ecx_86,edi_54,edx_61,es_68,esi_72,esp_87,S_64,SCZO_56,SZO_79,Z_65
		defs: ax_103,C_95,CZ_102,ds_105,eax_93,ebp_91,ebx_96,ecx_99,edi_90,edx_97,es_104,esi_98,esp_89,S_100,SCZO_92,SZO_94,Z_101
	word32 esp_106
	word32 edi_107
	word32 ebp_108
	byte SCZO_109
	word32 eax_110
	byte SZO_111
	byte C_112
	word32 ebx_113
	word32 esi_115
	word32 ecx_116
	byte S_117
	byte Z_118
	byte CZ_119
	word16 ax_120
	selector es_121
	selector ds_122
	word32 edx_114
	call Mem88[esi_98 + 0x00000020:word32] (retsize: 4; depth: 4)
		uses: ax_103,C_95,CZ_102,ds_105,dwLoc04_6,dwLoc08_12,dwLoc70_71,dwLoc78_78,dwLoc7C_75,dwLoc80_21,dwLoc84_15,dwLoc88_27,dwLoc8C_29,dwLoc90_35,eax_93,ebp_91,ebx_96,ecx_99,edi_90,edx_97,es_104,esi_98,esp_89,S_100,SCZO_92,SZO_94,Z_101
		defs: ax_120,C_112,CZ_119,ds_122,eax_110,ebp_108,ebx_113,ecx_116,edi_107,edx_114,es_121,esi_115,esp_106,S_117,SCZO_109,SZO_111,Z_118
	word32 esi_123 = eax_110
	branch eax_110 < 0x00000000 l100238B8
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0080(32)

l100238B8:
	branch Mem88[0x10031000:word32] <=u 0x00000002 l1002390A
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32)

l100238C1:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x10005550)
	Mem337[esp_106 - 0x00000004:word32] = fp - 0x0000005C
	Mem339[esp_106 - 0x00000008:word32] = 0x00000005
	word32 ecx_326 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem341[esp_106 - 0x0000000C:word32] = ecx_326
	Mem343[esp_106 - 0x00000010:word32] = ecx_326
	word32 ecx_345
	word32 esi_347
	word32 edi_348
	fn1000C491(0x10031000, 0x1000B4A1, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_345, out edx_114, out esi_347, out edi_348)
	esi_123 = eax_110
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023784:
	Mem165[esp_106 - 0x00000004:word32] = 0x00000004
	word32 esi_166 = Mem165[esp_106 - 0x00000004:word32]
	branch false l100237EC
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l100237EC:
	branch Mem165[0x00000000:word16] != 0x0000 l10023850
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l10023850:
	branch Mem165[0x10031000:word32] <=u esi_166 l100238A9
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l10023858:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x10005550)
	fn1000C58C(fp - 0x0000001C, 0x00000000)
	Mem306[esp_106 - 0x00000004:word32] = fp - 0x0000006C
	Mem308[esp_106 - 0x00000008:word32] = 0x00000006
	Mem310[esp_106 - 0x0000000C:word32] = 0x00000000
	Mem312[esp_106 - 0x00000010:word32] = 0x00000000
	word32 ecx_314
	word32 edx_315
	word32 esi_316
	word32 edi_317
	fn1000C491(0x10031000, 0x1000B4E0, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_314, out edx_315, out esi_316, out edi_317)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l100237F3:
	branch Mem165[0x10031000:word32] <=u esi_166 l100238A9
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l100237FF:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x10005550)
	fn1000C51D(fp - 0x0000001C, 0x10005040)
	Mem272[esp_106 - 0x00000004:word32] = fp - 0x0000006C
	Mem274[esp_106 - 0x00000008:word32] = 0x00000006
	Mem276[esp_106 - 0x0000000C:word32] = 0x00000000
	Mem278[esp_106 - 0x00000010:word32] = 0x00000000
	word32 ecx_280
	word32 edx_281
	word32 esi_282
	word32 edi_283
	fn1000C491(0x10031000, 0x1000B522, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_280, out edx_281, out esi_282, out edi_283)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l1002378E:
	branch Mem165[0x10031000:word32] <=u esi_166 l100238A9
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l1002379A:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x10005550)
	fn1000C51D(fp - 0x0000001C, 0x10005038)
	Mem232[esp_106 - 0x00000004:word32] = fp - 0x0000006C
	Mem234[esp_106 - 0x00000008:word32] = 0x00000006
	Mem236[esp_106 - 0x0000000C:word32] = 0x00000000
	Mem238[esp_106 - 0x00000010:word32] = 0x00000000
	word32 ecx_243
	word32 edx_244
	word32 esi_245
	word32 edi_246
	fn1000C491(0x10031000, 0x1000B522, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_243, out edx_244, out esi_245, out edi_246)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l100238A6:
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000070 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100238A9:
	Mem184[esp_106 - 0x00000004:word32] = 0x00000000
	esi_123 = fn10026282(ebx_113, dwArg00, out edx_114)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000070 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002390A:
	fn1000F2EE(fp - 0x00000080)
	word32 edi_146 = Mem88[esp_106:word32]
	*ediOut = edi_146
	word32 esi_148 = Mem88[esp_106 + 0x00000004:word32]
	*esiOut = esi_148
	word32 ecx_155
	return fn1002F420(esi_123, eax_11 ^ fp - 0x00000004, edx_114, Mem88[esp_106 + 0x00000008:word32], ebp_108, esi_148, edi_146, es_121, ds_122, out ecx_155)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000070 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp

fn1002371A_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000070 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):0x00000004 -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp



word32 fn10023925(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10023925_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -0084(32) Local -0088(32)

l10023925:
	word32 esp_35
	word32 edi_36
	word32 ebp_37
	byte SCZO_38
	word32 eax_39
	byte SZO_40
	byte C_41
	word32 ebx_42
	word32 edx_43
	word32 esi_44
	word32 ecx_45
	bcuiposr0 None_46
	byte S_47
	byte CZ_48
	byte SO_49
	byte Z_50
	selector es_51
	selector ds_52
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 156)
		uses: C_17,dwLoc04_6,dwLoc08_12,dwLoc70_15,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_30,ebp_7,ebx_22,ecx_34,edi_29,edx,esi_33,esp_31,SZO_16
		defs: C_41,CZ_48,ds_52,eax_39,ebp_37,ebx_42,ecx_45,edi_36,edx_43,es_51,esi_44,esp_35,None_46,S_47,SCZO_38,SO_49,SZO_40,Z_50
	word32 esp_53
	word32 edi_54
	word32 ebp_55
	byte SCZO_56
	word32 eax_57
	byte SZO_58
	byte C_59
	word32 ebx_60
	word32 edx_61
	word32 esi_62
	word32 ecx_63
	bcuiposr0 None_64
	byte S_65
	byte CZ_66
	byte SO_67
	byte Z_68
	selector es_69
	selector ds_70
	call esi_44 (retsize: 4; depth: 4)
		uses: C_41,CZ_48,ds_52,dwLoc04_6,dwLoc08_12,dwLoc70_15,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_39,ebp_37,ebx_42,ecx_45,edi_36,edx_43,es_51,esi_44,esp_35,None_46,S_47,SCZO_38,SO_49,SZO_40,Z_50
		defs: C_59,CZ_66,ds_70,eax_57,ebp_55,ebx_60,ecx_63,edi_54,edx_61,es_69,esi_62,esp_53,None_64,S_65,SCZO_56,SO_67,SZO_58,Z_68
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem80[esp_53 - 0x00000004:word32] = fp - 0x00000078
	Mem83[esp_53 - 0x00000008:word32] = 0x1000572C
	Mem85[esp_53 - 0x0000000C:word32] = edi_54
	word32 esp_86
	word32 edi_87
	word32 ebp_88
	byte SCZO_89
	word32 eax_90
	byte SZO_91
	byte C_92
	word32 ebx_93
	word32 edx_94
	word32 esi_95
	word32 ecx_96
	bcuiposr0 None_97
	byte S_98
	byte CZ_99
	byte SO_100
	byte Z_101
	selector es_102
	selector ds_103
	call Mem85[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_76,CZ_66,ds_70,dwLoc04_6,dwLoc08_12,dwLoc70_15,dwLoc78_74,dwLoc7C_77,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_78,ebp_55,ebx_60,ecx_81,edi_54,edx_61,es_69,esi_71,esp_84,None_64,S_65,SCZO_56,SO_67,SZO_75,Z_68
		defs: C_92,CZ_99,ds_103,eax_90,ebp_88,ebx_93,ecx_96,edi_87,edx_94,es_102,esi_95,esp_86,None_97,S_98,SCZO_89,SO_100,SZO_91,Z_101
	word32 ebp_106
	byte SCZO_107
	word32 eax_108
	byte SZO_109
	byte C_110
	word32 ebx_111
	word32 edx_112
	word32 esi_113
	word32 ecx_114
	bcuiposr0 None_115
	byte S_116
	byte CZ_117
	byte SO_118
	byte Z_119
	selector es_120
	selector ds_121
	word32 esp_104
	word32 edi_105
	call Mem85[esi_95:word32] (retsize: 4; depth: 4)
		uses: C_92,CZ_99,ds_103,dwLoc04_6,dwLoc08_12,dwLoc70_15,dwLoc78_74,dwLoc7C_77,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_90,ebp_88,ebx_93,ecx_96,edi_87,edx_94,es_102,esi_95,esp_86,None_97,S_98,SCZO_89,SO_100,SZO_91,Z_101
		defs: C_110,CZ_117,ds_121,eax_108,ebp_106,ebx_111,ecx_114,edi_105,edx_112,es_120,esi_113,esp_104,None_115,S_116,SCZO_107,SO_118,SZO_109,Z_119
	word32 dwLoc80_122 = eax_108
	branch eax_108 < 0x00000000 l10023A6D
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0084(32) Local -0088(32)

l1002397D:
	Mem368[esp_104 - 0x00000004:word32] = fp - 0x00000074
	Mem372[esp_104 - 0x00000008:word32] = fp - 0x00000084
	Mem375[esp_104 - 0x0000000C:word32] = eax_57
	Mem378[esp_104 - 0x00000010:word32] = dwLoc78 & 0x00000000
	word32 esp_379
	word32 edi_380
	word32 ebp_381
	byte SCZO_382
	word32 eax_383
	byte SZO_384
	byte C_385
	word32 ebx_386
	word32 edx_387
	word32 esi_388
	word32 ecx_389
	bcuiposr0 None_390
	byte S_391
	byte CZ_392
	byte SO_393
	byte Z_394
	selector es_395
	selector ds_396
	call Mem378[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_366,CZ_117,ds_121,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_15,dwLoc74_364,dwLoc78_74,dwLoc7C_77,dwLoc80_122,dwLoc88,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_361,ebp_106,ebx_111,ecx_376,edi_105,edx_112,es_120,esi_370,esp_377,None_115,S_124,SCZO_107,SO_118,SZO_365,Z_119
		defs: C_385,CZ_392,ds_396,eax_383,ebp_381,ebx_386,ecx_389,edi_380,edx_387,es_395,esi_388,esp_379,None_390,S_391,SCZO_382,SO_393,SZO_384,Z_394
	word32 esp_397
	word32 ebp_399
	byte SCZO_400
	word32 eax_401
	byte SZO_402
	byte C_403
	word32 ebx_404
	word32 esi_406
	word32 ecx_407
	bcuiposr0 None_408
	byte S_409
	byte CZ_410
	byte SO_411
	byte Z_412
	selector es_413
	selector ds_414
	word32 edx_405
	call Mem378[esi_388 + 0x00000054:word32] (retsize: 4; depth: 4)
		uses: C_385,CZ_392,ds_396,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_15,dwLoc74_364,dwLoc78_74,dwLoc7C_77,dwLoc80_122,dwLoc88,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_383,ebp_381,ebx_386,ecx_389,edi_380,edx_387,es_395,esi_388,esp_379,None_390,S_391,SCZO_382,SO_393,SZO_384,Z_394
		defs: C_403,CZ_410,ds_414,eax_401,ebp_399,ebx_404,ecx_407,edi_398,edx_405,es_413,esi_406,esp_397,None_408,S_409,SCZO_400,SO_411,SZO_402,Z_412
	dwLoc80_122 = eax_401
	branch eax_401 < 0x00000000 l10023A10
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0084(32) Local -0088(32)

l10023A10:
	branch Mem378[0x10031000:word32] <=u 0x00000002 l10023A5F
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0088(32)

l10023A19:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x10005580)
	Mem524[esp_397 - 0x00000004:word32] = fp - 0x0000005C
	Mem526[esp_397 - 0x00000008:word32] = 0x00000005
	word32 ecx_513 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem528[esp_397 - 0x0000000C:word32] = ecx_513
	Mem530[esp_397 - 0x00000010:word32] = ecx_513
	word32 ecx_532
	word32 edx_533
	word32 esi_534
	fn1000C491(0x10031000, 0x1000B416, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_532, out edx_533, out esi_534, out edi_105)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0088(32)

l100239A5:
	Mem443[esp_397 - 0x00000004:word32] = 0x00000004
	word32 esi_444 = Mem443[esp_397 - 0x00000004:word32]
	branch Mem443[0x10031000:word32] <=u esi_444 l10023A01
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0084(32) Local -0088(32)

l100239B0:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x10005580)
	Mem493[esp_397 - 0x00000004:word32] = fp - 0x0000006C
	Mem495[esp_397 - 0x00000008:word32] = 0x00000006
	word32 ecx_479 = fp - 0x0000003C ^ fp - 0x0000003C
	Mem497[esp_397 - 0x0000000C:word32] = ecx_479
	Mem499[esp_397 - 0x00000010:word32] = ecx_479
	word32 ecx_501
	fn1000C491(0x10031000, 0x1000B455, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_501, out edx_405, out esi_444, out edi_105)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0084(32) Local -0088(32)

l10023A01:
	Mem465[esp_397 - 0x00000004:word32] = dwLoc74 & 0x00000000
	Mem470[esp_397 - 0x00000008:word32] = dwLoc84
	fn10026316(ebx_404, edx_405, ebx_404, esi_444, edi_105, es_413, ds_414, dwArg00, dwArg04)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):fp - 0x00000084 -24(fp):fp - 0x0000003C ^ fp - 0x0000003C -20(fp):<invalid> -16(fp):fp - 0x0000003C ^ fp - 0x0000003C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0088(32)

l10023A5F:
	Mem440[esp_397 - 0x00000004:word32] = dwLoc74 & 0x00000000
	CoTaskMemFree(Mem440[esp_397 - 0x00000004:LPVOID])
	esp_104 = esp_397
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0078(32) Local -007C(32) Local -0080(0) Local -0088(32)

l10023A6D:
	word32 esp_149 = esp_104 - 0x00000004
	Mem150[esp_149:word32] = fp - 0x00000088
	Mem153[esp_149 - 0x00000004:word32] = eax_57
	Mem156[esp_149 - 0x00000008:word32] = edi_105
	word32 esp_157
	word32 edi_158
	word32 ebp_159
	byte SCZO_160
	word32 eax_161
	byte SZO_162
	byte C_163
	word32 ebx_164
	word32 edx_165
	word32 esi_166
	word32 ecx_167
	bcuiposr0 None_168
	byte S_169
	byte CZ_170
	byte SO_171
	byte Z_172
	selector es_173
	selector ds_174
	call Mem156[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_125,CZ_117,ds_121,dwLoc04_6,dwLoc08_12,dwLoc10_144,dwLoc14_141,dwLoc18_142,dwLoc1C_143,dwLoc20_139,dwLoc24_136,dwLoc28_138,dwLoc2C_137,dwLoc70_15,dwLoc74_140,dwLoc78_74,dwLoc7C_77,dwLoc80_135,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_148,ebp_106,ebx_111,ecx_154,edi_145,edx_112,es_120,esi_147,esp_155,None_115,S_124,SCZO_107,SO_118,SZO_123,Z_119
		defs: C_163,CZ_170,ds_174,eax_161,ebp_159,ebx_164,ecx_167,edi_158,edx_165,es_173,esi_166,esp_157,None_168,S_169,SCZO_160,SO_171,SZO_162,Z_172
	word32 esp_175
	word32 edi_176
	byte SCZO_178
	word32 eax_179
	byte SZO_180
	byte C_181
	word32 ebx_182
	word32 esi_184
	word32 ecx_185
	bcuiposr0 None_186
	byte S_187
	byte CZ_188
	byte SO_189
	byte Z_190
	selector ds_192
	selector es_191
	word32 ebp_177
	word32 edx_183
	call Mem156[esi_166 + 0x00000024:word32] (retsize: 4; depth: 4)
		uses: C_163,CZ_170,ds_174,dwLoc04_6,dwLoc08_12,dwLoc10_144,dwLoc14_141,dwLoc18_142,dwLoc1C_143,dwLoc20_139,dwLoc24_136,dwLoc28_138,dwLoc2C_137,dwLoc70_15,dwLoc74_140,dwLoc78_74,dwLoc7C_77,dwLoc80_135,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_161,ebp_159,ebx_164,ecx_167,edi_158,edx_165,es_173,esi_166,esp_157,None_168,S_169,SCZO_160,SO_171,SZO_162,Z_172
		defs: C_181,CZ_188,ds_192,eax_179,ebp_177,ebx_182,ecx_185,edi_176,edx_183,es_191,esi_184,esp_175,None_186,S_187,SCZO_178,SO_189,SZO_180,Z_190
	branch eax_179 < 0x00000000 l10023A9E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -0080(0) Local -0088(32)

l10023A9E:
	branch Mem156[0x10031000:word32] <=u 0x00000002 l10023AF0
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -0080(0)

l10023AA7:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x100055B4)
	Mem344[esp_175 - 0x00000004:word32] = fp - 0x0000005C
	Mem346[esp_175 - 0x00000008:word32] = 0x00000005
	word32 ecx_333 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem348[esp_175 - 0x0000000C:word32] = ecx_333
	Mem350[esp_175 - 0x00000010:word32] = ecx_333
	word32 ecx_355
	word32 esi_357
	word32 edi_358
	fn1000C491(0x10031000, 0x1000B416, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_355, out edx_183, out esi_357, out edi_358)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -0080(0)

l10023A8F:
	Mem323[esp_175 - 0x00000004:word32] = dwLoc88
	fn100262DD(ebx_182, dwArg00)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -0080(0)

l10023AED:
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0078(32) Local -0080(0)

l10023AF0:
	word32 edi_205 = eax_179
	word32 esp_209 = esp_175
	branch eax_179 >= 0x00000000 l10023AFA
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0078(32) Local -0080(0)

l10023AF4:
	branch dwLoc80_122 < 0x00000000 l10023AFF
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0078(32)

l10023AFA:
	edi_205 = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0078(32)

l10023AFF:
	branch (dwLoc78 & 0x00000000) == 0x00000000 l10023B1A
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0078(32)

l10023B06:
	Mem259[esp_175 - 0x00000004:word32] = dwLoc78 & 0x00000000
	word32 esp_262
	word32 edi_263
	word32 ebp_264
	byte SCZO_265
	word32 eax_266
	byte SZO_267
	byte C_268
	word32 ebx_269
	word32 edx_270
	word32 esi_271
	word32 ecx_272
	bcuiposr0 None_273
	byte S_274
	byte CZ_275
	byte SO_276
	byte Z_277
	selector es_278
	selector ds_279
	call Mem259[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_256,CZ_202,ds_192,dwLoc04_6,dwLoc08_12,dwLoc10_201,dwLoc14_198,dwLoc18_199,dwLoc1C_200,dwLoc20_139,dwLoc24_136,dwLoc28_138,dwLoc2C_137,dwLoc70_213,dwLoc74_140,dwLoc78_254,dwLoc7C_77,dwLoc80_135,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_217,ebp_177,ebx_182,ecx_261,edi_216,edx_203,es_191,esi_260,esp_258,None_186,S_211,SCZO_215,SO_214,SZO_255,Z_219
		defs: C_268,CZ_275,ds_279,eax_266,ebp_264,ebx_269,ecx_272,edi_263,edx_270,es_278,esi_271,esp_262,None_273,S_274,SCZO_265,SO_276,SZO_267,Z_277
	byte SCZO_283
	word32 eax_284
	byte SZO_285
	byte C_286
	word32 ebx_287
	word32 esi_289
	word32 ecx_290
	bcuiposr0 None_291
	byte S_292
	byte CZ_293
	byte SO_294
	byte Z_295
	call esi_271 (retsize: 4; depth: 4)
		uses: C_268,CZ_275,ds_279,dwLoc04_6,dwLoc08_12,dwLoc10_201,dwLoc14_198,dwLoc18_199,dwLoc1C_200,dwLoc20_139,dwLoc24_136,dwLoc28_138,dwLoc2C_137,dwLoc70_213,dwLoc74_140,dwLoc78_254,dwLoc7C_77,dwLoc80_135,dwLoc8C_20,dwLoc90_25,dwLoc94_27,dwLoc98_32,eax_266,ebp_264,ebx_269,ecx_272,edi_263,edx_270,es_278,esi_271,esp_262,None_273,S_274,SCZO_265,SO_276,SZO_267,Z_277
		defs: C_286,CZ_293,ds_297,eax_284,ebp_282,ebx_287,ecx_290,edi_281,edx_288,es_296,esi_289,esp_280,None_291,S_292,SCZO_283,SO_294,SZO_285,Z_295
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023B1A:
	word32 esp_237 = esp_209 + 0x00000004
	word32 edi_236 = Mem156[esp_209:word32]
	*ediOut = edi_236
	word32 esi_238 = Mem156[esp_237:word32]
	*esiOut = esi_238
	word32 ebx_243 = Mem156[esp_237 + 0x00000004:word32]
	*ebxOut = ebx_243
	word32 ecx_245
	return fn1002F420(edi_205, eax_11 ^ fp - 0x00000004, edx_183, ebx_243, ebp_177, esi_238, edi_236, es_191, ds_192, out ecx_245)
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10023925_exit:
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x0000007C -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10023B2D(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10023B2D_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0078(0)

l10023B2D:
	word32 esp_32
	word32 edi_33
	word32 ebp_34
	byte SCZO_35
	word32 eax_36
	byte SZO_37
	byte C_38
	word32 ebx_39
	word32 edx_40
	word32 esi_41
	word32 ecx_42
	byte S_43
	byte CZ_44
	byte al_45
	byte Z_46
	selector es_47
	selector ds_48
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 156)
		uses: C_13,dwLoc04_6,dwLoc08_14,dwLoc8C_17,dwLoc90_22,dwLoc94_24,dwLoc98_29,eax_27,ebp_7,ebx_19,ecx_31,edi_26,edx,esi_30,esp_28,SZO_12
		defs: al_45,C_38,CZ_44,ds_48,eax_36,ebp_34,ebx_39,ecx_42,edi_33,edx_40,es_47,esi_41,esp_32,S_43,SCZO_35,SZO_37,Z_46
	word32 esp_49
	word32 edi_50
	word32 ebp_51
	byte SCZO_52
	word32 eax_53
	byte SZO_54
	byte C_55
	word32 ebx_56
	word32 edx_57
	word32 esi_58
	word32 ecx_59
	byte S_60
	byte CZ_61
	byte al_62
	byte Z_63
	selector es_64
	selector ds_65
	call esi_41 (retsize: 4; depth: 4)
		uses: al_45,C_38,CZ_44,ds_48,dwLoc04_6,dwLoc08_14,dwLoc8C_17,dwLoc90_22,dwLoc94_24,dwLoc98_29,eax_36,ebp_34,ebx_39,ecx_42,edi_33,edx_40,es_47,esi_41,esp_32,S_43,SCZO_35,SZO_37,Z_46
		defs: al_62,C_55,CZ_61,ds_65,eax_53,ebp_51,ebx_56,ecx_59,edi_50,edx_57,es_64,esi_58,esp_49,S_60,SCZO_52,SZO_54,Z_63
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	fn1000F2EE(fp - 0x00000084)
	Mem84[esp_49 - 0x00000004:word32] = fp - 0x00000084
	Mem88[esp_49 - 0x00000008:word32] = fp - 0x00000078
	Mem91[esp_49 - 0x0000000C:word32] = eax_53
	Mem93[esp_49 - 0x00000010:word32] = edi_50
	word32 esp_94
	word32 edi_95
	word32 ebp_96
	byte SCZO_97
	word32 eax_98
	byte SZO_99
	byte C_100
	word32 ebx_101
	word32 edx_102
	word32 esi_103
	word32 ecx_104
	byte S_105
	byte CZ_106
	byte al_107
	byte Z_108
	selector es_109
	selector ds_110
	call Mem93[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_62,C_82,CZ_61,ds_65,dwLoc04_6,dwLoc08_14,dwLoc74_66,dwLoc7C_80,dwLoc80_77,dwLoc84_71,dwLoc8C_17,dwLoc90_22,dwLoc94_24,dwLoc98_29,eax_86,ebp_51,ebx_56,ecx_85,edi_50,edx_57,es_64,esi_74,esp_92,S_60,SCZO_52,SZO_81,Z_63
		defs: al_107,C_100,CZ_106,ds_110,eax_98,ebp_96,ebx_101,ecx_104,edi_95,edx_102,es_109,esi_103,esp_94,S_105,SCZO_97,SZO_99,Z_108
	word32 esp_111
	word32 edi_112
	word32 ebp_113
	byte SCZO_114
	word32 eax_115
	byte SZO_116
	byte C_117
	word32 ebx_118
	word32 esi_120
	word32 ecx_121
	byte S_122
	byte CZ_123
	byte al_124
	byte Z_125
	selector es_126
	selector ds_127
	word32 edx_119
	call Mem93[esi_103 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: al_107,C_100,CZ_106,ds_110,dwLoc04_6,dwLoc08_14,dwLoc74_66,dwLoc7C_80,dwLoc80_77,dwLoc84_71,dwLoc8C_17,dwLoc90_22,dwLoc94_24,dwLoc98_29,eax_98,ebp_96,ebx_101,ecx_104,edi_95,edx_102,es_109,esi_103,esp_94,S_105,SCZO_97,SZO_99,Z_108
		defs: al_124,C_117,CZ_123,ds_127,eax_115,ebp_113,ebx_118,ecx_121,edi_112,edx_119,es_126,esi_120,esp_111,S_122,SCZO_114,SZO_116,Z_125
	word32 esi_128 = eax_115
	branch eax_115 < 0x00000000 l10023C27
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(0) Local -0084(32)

l10023C27:
	branch Mem93[0x10031000:word32] <=u 0x00000002 l10023C79
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32)

l10023C30:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x100055E4)
	Mem271[esp_111 - 0x00000004:word32] = fp - 0x0000005C
	Mem273[esp_111 - 0x00000008:word32] = 0x00000005
	word32 ecx_260 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem275[esp_111 - 0x0000000C:word32] = ecx_260
	Mem277[esp_111 - 0x00000010:word32] = ecx_260
	word32 ecx_279
	word32 esi_281
	word32 edi_282
	fn1000C491(0x10031000, 0x1000B38F, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_279, out edx_119, out esi_281, out edi_282)
	esi_128 = eax_115
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023B9E:
	Mem170[esp_111 - 0x00000004:word32] = 0x00000004
	branch Mem170[0x10031000:word32] <=u Mem170[esp_111 - 0x00000004:word32] l10023C0B
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0078(0) Local -0084(32)

l10023BA9:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x100055E4)
	Mem237[esp_111 - 0x00000004:word32] = fp - 0x0000006C
	Mem239[esp_111 - 0x00000008:word32] = 0x00000006
	word32 ecx_220 = fp - 0x0000003C ^ fp - 0x0000003C
	Mem241[esp_111 - 0x0000000C:word32] = ecx_220
	Mem243[esp_111 - 0x00000010:word32] = ecx_220
	word32 ecx_248
	word32 edx_249
	word32 esi_250
	word32 edi_251
	fn1000C491(0x10031000, 0x1000B3D0, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_248, out edx_249, out esi_250, out edi_251)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0078(0) Local -0084(32)

l10023C0B:
	Mem201[esp_111 - 0x00000004:word32] = 0x00000000
	Mem205[esp_111 - 0x00000008:word32] = (word32) (dwLoc78 != 0x00000000)
	esi_128 = fn100264FE(ebx_118, bArg00, dwArg04, out edx_119)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):fp - 0x00000088 -24(fp):fp - 0x0000003C ^ fp - 0x0000003C -20(fp):<invalid> -16(fp):fp - 0x0000003C ^ fp - 0x0000003C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10023C79:
	fn1000F2EE(fp - 0x00000084)
	word32 edi_152 = Mem93[esp_111:word32]
	*ediOut = edi_152
	word32 esi_154 = Mem93[esp_111 + 0x00000004:word32]
	*esiOut = esi_154
	word32 ecx_161
	return fn1002F420(esi_128, eax_11 ^ fp - 0x00000004, edx_119, Mem93[esp_111 + 0x00000008:word32], ebp_113, esi_154, edi_152, es_126, ds_127, out ecx_161)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10023B2D_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -152(fp):edx -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10023C94(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10023C94_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0074(0) Local -007C(32)

l10023C94:
	word32 esp_33
	word32 edi_34
	word32 ebp_35
	byte SCZO_36
	word32 eax_37
	byte SZO_38
	byte C_39
	word32 ebx_40
	word32 edx_41
	word32 esi_42
	word32 ecx_43
	byte CZ_44
	byte SO_45
	byte S_46
	selector es_47
	selector ds_48
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 164)
		uses: C_13,dwLoc04_6,dwLoc08_14,dwLoc8C_30,dwLoc94_17,dwLoc98_22,dwLoc9C_24,dwLocA0_29,eax_27,ebp_7,ebx_19,ecx_32,edi_26,edx,esi_31,esp_28,SZO_12
		defs: C_39,CZ_44,ds_48,eax_37,ebp_35,ebx_40,ecx_43,edi_34,edx_41,es_47,esi_42,esp_33,S_46,SCZO_36,SO_45,SZO_38
	word32 esp_49
	word32 edi_50
	word32 ebp_51
	byte SCZO_52
	word32 eax_53
	byte SZO_54
	byte C_55
	word32 ebx_56
	word32 edx_57
	word32 esi_58
	word32 ecx_59
	byte CZ_60
	byte SO_61
	byte S_62
	selector es_63
	selector ds_64
	call esi_42 (retsize: 4; depth: 4)
		uses: C_39,CZ_44,ds_48,dwLoc04_6,dwLoc08_14,dwLoc8C_30,dwLoc94_17,dwLoc98_22,dwLoc9C_24,dwLocA0_29,eax_37,ebp_35,ebx_40,ecx_43,edi_34,edx_41,es_47,esi_42,esp_33,S_46,SCZO_36,SO_45,SZO_38
		defs: C_55,CZ_60,ds_64,eax_53,ebp_51,ebx_56,ecx_59,edi_50,edx_57,es_63,esi_58,esp_49,S_62,SCZO_52,SO_61,SZO_54
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem68[esp_49 - 0x00000004:word32] = fp - 0x0000007C
	Mem72[esp_49 - 0x00000008:word32] = fp - 0x00000074
	Mem75[esp_49 - 0x0000000C:word32] = eax_53
	Mem77[esp_49 - 0x00000010:word32] = edi_50
	word32 esp_78
	word32 edi_79
	word32 ebp_80
	byte SCZO_81
	word32 eax_82
	byte SZO_83
	byte C_84
	word32 ebx_85
	word32 edx_86
	word32 esi_87
	word32 ecx_88
	byte CZ_89
	byte SO_90
	byte S_91
	selector es_92
	selector ds_93
	call Mem77[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_55,CZ_60,ds_64,dwLoc04_6,dwLoc08_14,dwLoc78_70,dwLoc8C_30,dwLoc94_17,dwLoc98_22,dwLoc9C_24,dwLocA0_29,eax_53,ebp_51,ebx_56,ecx_73,edi_50,edx_57,es_63,esi_65,esp_76,S_62,SCZO_52,SO_61,SZO_54
		defs: C_84,CZ_89,ds_93,eax_82,ebp_80,ebx_85,ecx_88,edi_79,edx_86,es_92,esi_87,esp_78,S_91,SCZO_81,SO_90,SZO_83
	word32 edi_95
	byte SCZO_97
	word32 eax_98
	byte SZO_99
	byte C_100
	word32 esi_103
	word32 ecx_104
	byte CZ_105
	byte SO_106
	byte S_107
	word32 ebx_101
	selector ds_109
	selector es_108
	word32 ebp_138
	word32 esp_139
	word32 edx_102
	call Mem77[esi_87 + 0x00000030:word32] (retsize: 4; depth: 4)
		uses: C_84,CZ_89,ds_93,dwLoc04_6,dwLoc08_14,dwLoc78_70,dwLoc8C_30,dwLoc94_17,dwLoc98_22,dwLoc9C_24,dwLocA0_29,eax_82,ebp_80,ebx_85,ecx_88,edi_79,edx_86,es_92,esi_87,esp_78,S_91,SCZO_81,SO_90,SZO_83
		defs: C_100,CZ_105,ds_109,eax_98,ebp_96,ebx_101,ecx_104,edi_95,edx_102,es_108,esi_103,esp_94,S_107,SCZO_97,SO_106,SZO_99
	word32 esi_110 = 0x00000000
	word32 dwLoc70_111 = eax_98
	word32 edi_112 = 0x00000000
	branch dwLoc74 <=u 0x00000000 l10023D61
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(0) Local -0074(0) Local -0078(32) Local -007C(32) Local -008C(32)

l10023CED:
	branch dwLoc70_111 < 0x00000000 l10023DCD
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(0) Local -0078(32) Local -007C(32) Local -008C(32)

l10023CF7:
	fn1000F2EE(fp - 0x00000088)
	word32 esp_325 = esp_139 - 0x00000004
	Mem326[esp_325:word32] = fp - 0x00000088
	Mem329[esp_325 - 0x00000004:word32] = edi_112
	Mem332[esp_325 - 0x00000008:word32] = eax_53
	Mem335[esp_325 - 0x0000000C:word32] = ecx
	word32 esp_336
	word32 edi_337
	word32 ebp_338
	byte SCZO_339
	word32 eax_340
	byte SZO_341
	byte C_342
	word32 ebx_343
	word32 edx_344
	word32 esi_345
	word32 ecx_346
	byte CZ_347
	byte SO_348
	byte S_349
	selector es_350
	selector ds_351
	call Mem335[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_324,CZ_299,ds_295,dwLoc04_6,dwLoc08_14,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_298,dwLoc74,dwLoc78_70,dwLoc7C,dwLoc80_322,dwLoc84_319,dwLoc88_313,dwLoc8C_30,dwLoc94_17,dwLoc98_22,dwLoc9C_24,dwLocA0_29,eax_316,ebp_308,ebx_305,ecx_333,edi_303,edx_300,es_296,esi_327,esp_334,S_297,SCZO_310,SO_311,SZO_323
		defs: C_342,CZ_347,ds_351,eax_340,ebp_338,ebx_343,ecx_346,edi_337,edx_344,es_350,esi_345,esp_336,S_349,SCZO_339,SO_348,SZO_341
	word32 esp_352
	word32 edi_353
	byte SCZO_355
	word32 eax_356
	byte SZO_357
	byte C_358
	word32 esi_361
	word32 ecx_362
	byte CZ_363
	byte SO_364
	byte S_365
	call Mem335[esi_345 + 0x00000034:word32] (retsize: 4; depth: 4)
		uses: C_342,CZ_347,ds_351,dwLoc04_6,dwLoc08_14,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_298,dwLoc74,dwLoc78_70,dwLoc7C,dwLoc80_322,dwLoc84_319,dwLoc88_313,dwLoc8C_30,dwLoc94_17,dwLoc98_22,dwLoc9C_24,dwLocA0_29,eax_340,ebp_338,ebx_343,ecx_346,edi_337,edx_344,es_350,esi_345,esp_336,S_349,SCZO_339,SO_348,SZO_341
		defs: C_358,CZ_363,ds_367,eax_356,ebp_354,ebx_359,ecx_362,edi_353,edx_360,es_366,esi_361,esp_352,S_365,SCZO_355,SO_364,SZO_357
	branch eax_356 < 0x00000000 l10023D4D
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(0) Local -0074(0) Local -0078(32) Local -007C(32) Local -0088(32) Local -008C(32)

l10023D3D:
	Mem385[esp_352 - 0x00000004:word32] = esi_110
	edx_102 = fn1002660E(ebx_101, es_108, ds_109, dwArg00)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(0) Local -0074(0) Local -0078(32) Local -007C(32) Local -008C(32)

l10023D4D:
	fn1000F2EE(fp - 0x00000088)
	Mem378[esp_352 - 0x00000004:word32] = 0x00000000
	dwLoc70_111 = eax_356
	edi_112 = edi_353 + 0x00000001
	esi_110 = Mem378[esp_352 - 0x00000004:word32]
	esp_139 = esp_352
	branch edi_353 + 0x00000001 <u dwLoc74 l10023CED
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(0) Local -0074(0) Local -0078(32) Local -007C(32) Local -008C(32)

l10023D61:
	branch dwLoc70_111 < 0x00000000 l10023DCD
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -007C(32)

l10023DCD:
	branch Mem77[0x10031000:word32] <=u 0x00000002 l10023E1A
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32)

l10023DD6:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x10005614)
	word32 esp_197 = esp_139 - 0x00000004
	Mem198[esp_197:word32] = fp - 0x0000005C
	Mem200[esp_197 - 0x00000004:word32] = 0x00000005
	Mem202[esp_197 - 0x00000008:word32] = esi_110
	Mem204[esp_197 - 0x0000000C:word32] = esi_110
	word32 ecx_210
	word32 esi_212
	word32 edi_213
	fn1000C491(0x10031000, 0x1000B303, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_210, out edx_102, out esi_212, out edi_213)
	esp_139 = esp_197 + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32)

l10023D67:
	word32 esp_236 = esp_139 - 0x00000004
	Mem237[esp_236:word32] = 0x00000004
	branch Mem237[0x10031000:word32] <=u Mem237[esp_236:word32] l10023DC1
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -007C(32)

l10023D72:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x10005614)
	Mem278[esp_236:word32] = fp - 0x0000006C
	Mem280[esp_236 - 0x00000004:word32] = 0x00000006
	Mem282[esp_236 - 0x00000008:word32] = esi_110
	Mem284[esp_236 - 0x0000000C:word32] = esi_110
	word32 ecx_286
	word32 esi_288
	word32 edi_289
	fn1000C491(0x10031000, 0x1000B344, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_286, out edx_102, out esi_288, out edi_289)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -007C(32)

l10023DC1:
	word32 esp_257 = esp_139 - 0x00000004
	Mem258[esp_257:word32] = dwLoc7C
	fn1002656B(ebx_101, dwArg00)
	esp_139 = esp_257 + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000078 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):fp - 0x0000007C -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32)

l10023E1A:
	word32 esp_146 = esp_139 + 0x00000004
	word32 edi_145 = Mem77[esp_139:word32]
	*ediOut = edi_145
	word32 esi_147 = Mem77[esp_146:word32]
	*esiOut = esi_147
	word32 ecx_151
	return fn1002F420(dwLoc70_111, eax_11 ^ fp - 0x00000004, edx_102, Mem77[esp_146 + 0x00000004:word32], ebp_138, esi_147, edi_145, es_108, ds_109, out ecx_151)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000078 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10023C94_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -160(fp):edx -156(fp):edi -152(fp):esi -148(fp):ebx -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -120(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000078 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10023E2E(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10023E2E_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0074(32) Stack +0004(32)

l10023E2E:
	word32 esp_35
	word32 edi_36
	word32 ebp_37
	byte SCZO_38
	word32 eax_39
	byte SZO_40
	byte C_41
	word32 ebx_42
	word32 edx_43
	word32 esi_44
	word32 ecx_45
	byte S_46
	byte CZ_47
	selector es_48
	selector ds_49
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 152)
		uses: C_13,dwLoc04_6,dwLoc0C_14,dwLoc84_22,dwLoc88_19,dwLoc8C_25,dwLoc90_27,dwLoc94_32,eax_30,ebp_7,ebx_21,ecx_34,edi_29,edx,esi_33,esp_31,SZO_12
		defs: C_41,CZ_47,ds_49,eax_39,ebp_37,ebx_42,ecx_45,edi_36,edx_43,es_48,esi_44,esp_35,S_46,SCZO_38,SZO_40
	word32 esp_50
	word32 edi_51
	word32 ebp_52
	byte SCZO_53
	word32 eax_54
	byte SZO_55
	byte C_56
	word32 ebx_57
	word32 edx_58
	word32 esi_59
	word32 ecx_60
	byte S_61
	byte CZ_62
	selector es_63
	selector ds_64
	call esi_44 (retsize: 4; depth: 4)
		uses: C_41,CZ_47,ds_49,dwLoc04_6,dwLoc0C_14,dwLoc84_22,dwLoc88_19,dwLoc8C_25,dwLoc90_27,dwLoc94_32,eax_39,ebp_37,ebx_42,ecx_45,edi_36,edx_43,es_48,esi_44,esp_35,S_46,SCZO_38,SZO_40
		defs: C_56,CZ_62,ds_64,eax_54,ebp_52,ebx_57,ecx_60,edi_51,edx_58,es_63,esi_59,esp_50,S_61,SCZO_53,SZO_55
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem68[esp_50 - 0x00000004:word32] = fp - 0x00000074
	Mem70[esp_50 - 0x00000008:word32] = eax_54
	Mem72[esp_50 - 0x0000000C:word32] = edi_51
	word32 esp_75
	word32 edi_76
	word32 ebp_77
	byte SCZO_78
	word32 eax_79
	byte SZO_80
	byte C_81
	word32 ebx_82
	word32 edx_83
	word32 esi_84
	word32 ecx_85
	byte S_86
	byte CZ_87
	selector es_88
	selector ds_89
	call Mem72[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_56,CZ_62,ds_64,dwLoc04_6,dwLoc0C_14,dwLoc80_74,dwLoc84_22,dwLoc88_19,dwLoc8C_25,dwLoc90_27,dwLoc94_32,eax_54,ebp_52,ebx_57,ecx_73,edi_51,edx_58,es_63,esi_65,esp_71,S_61,SCZO_53,SZO_55
		defs: C_81,CZ_87,ds_89,eax_79,ebp_77,ebx_82,ecx_85,edi_76,edx_83,es_88,esi_84,esp_75,S_86,SCZO_78,SZO_80
	word32 esp_90
	word32 edi_91
	word32 ebp_92
	byte SCZO_93
	word32 eax_94
	byte SZO_95
	byte C_96
	word32 ebx_97
	word32 esi_99
	word32 ecx_100
	byte S_101
	byte CZ_102
	selector es_103
	selector ds_104
	word32 edx_120
	call Mem72[esi_84 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: C_81,CZ_87,ds_89,dwLoc04_6,dwLoc0C_14,dwLoc80_74,dwLoc84_22,dwLoc88_19,dwLoc8C_25,dwLoc90_27,dwLoc94_32,eax_79,ebp_77,ebx_82,ecx_85,edi_76,edx_83,es_88,esi_84,esp_75,S_86,SCZO_78,SZO_80
		defs: C_96,CZ_102,ds_104,eax_94,ebp_92,ebx_97,ecx_100,edi_91,edx_98,es_103,esi_99,esp_90,S_101,SCZO_93,SZO_95
	branch eax_94 < 0x00000000 l10023EFC
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0074(32) Local -007C(32) Local -0084(32)

l10023EFC:
	branch Mem72[0x10031000:word32] <=u 0x00000002 l10023F4B
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -007C(32)

l10023F05:
	fn1000C51D(fp - 0x00000040, 0x10002FCC)
	fn1000C51D(fp - 0x00000030, 0x10005644)
	Mem240[esp_90 - 0x00000004:word32] = fp - 0x00000060
	Mem242[esp_90 - 0x00000008:word32] = 0x00000005
	Mem244[esp_90 - 0x0000000C:word32] = 0x00000000
	Mem246[esp_90 - 0x00000010:word32] = 0x00000000
	word32 ecx_248
	word32 esi_250
	word32 edi_251
	fn1000C491(0x10031000, 0x1000B271, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_248, out edx_120, out esi_250, out edi_251)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -007C(32)

l10023E7E:
	Mem142[esp_90 - 0x00000004:word32] = 0x00000004
	word32 esi_145 = 0x00000000
	branch Mem142[0x10031000:word32] <=u Mem142[esp_90 - 0x00000004:word32] l10023EDA
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0074(32) Local -007C(32) Local -0084(32)

l10023E8B:
	fn1000C51D(fp - 0x00000050, 0x10003428)
	fn1000C51D(fp - 0x00000040, 0x10005644)
	Mem206[esp_90 - 0x00000004:word32] = fp - 0x00000070
	Mem208[esp_90 - 0x00000008:word32] = 0x00000006
	Mem210[esp_90 - 0x0000000C:word32] = 0x00000000
	Mem212[esp_90 - 0x00000010:word32] = 0x00000000
	word32 ecx_216
	word32 edi_219
	fn1000C491(0x10031000, 0x1000B2B6, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_216, out edx_120, out esi_145, out edi_219)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0074(32) Local -007C(32) Local -0084(32)

l10023EDA:
	Mem171[esp_90 - 0x00000004:word32] = fp - 0x00000078
	Mem175[esp_90 - 0x00000008:word32] = dwLoc74
	branch fn10021BC5(dwArg04, edx_120, esi_145, es_103, ds_104, dwArg00, dwArg04, out edx_120) < 0x00000000 l10023F4B
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -48(fp):fp - 0x00000080 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000074 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0078(32) Local -007C(32)

l10023EF0:
	Mem186[esp_90 - 0x00000004:word32] = esi_145
	fn1002653E(ebx_97, dwArg00)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -48(fp):fp - 0x00000080 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):fp - 0x00000074 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -007C(32)

l10023F4B:
	word32 edi_128 = Mem72[esp_90:word32]
	*ediOut = edi_128
	word32 esi_130 = Mem72[esp_90 + 0x00000004:word32]
	*esiOut = esi_130
	word32 ecx_134
	return fn1002F420(eax_94, eax_11 ^ fp - 0x00000004, edx_120, Mem72[esp_90 + 0x00000008:word32], ebp_92, esi_130, edi_128, es_103, ds_104, out ecx_134)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -48(fp):fp - 0x00000080 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10023E2E_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -148(fp):edx -144(fp):edi -140(fp):esi -136(fp):ebx -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -48(fp):fp - 0x00000080 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn10023F61(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10023F61_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0084(32) Local -0088(32)

l10023F61:
	word32 esp_32
	word32 edi_33
	word32 ebp_34
	byte SCZO_35
	word32 eax_36
	byte SZO_37
	byte C_38
	word32 ebx_39
	word32 edx_40
	word32 esi_41
	word32 ecx_42
	byte S_43
	byte CZ_44
	selector es_45
	selector ds_46
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 172)
		uses: C_13,dwLoc04_6,dwLoc08_14,dwLoc9C_17,dwLocA0_22,dwLocA4_24,dwLocA8_29,eax_27,ebp_7,ebx_19,ecx_31,edi_26,edx,esi_30,esp_28,SZO_12
		defs: C_38,CZ_44,ds_46,eax_36,ebp_34,ebx_39,ecx_42,edi_33,edx_40,es_45,esi_41,esp_32,S_43,SCZO_35,SZO_37
	word32 esp_47
	word32 edi_48
	word32 ebp_49
	byte SCZO_50
	word32 eax_51
	byte SZO_52
	byte C_53
	word32 ebx_54
	word32 edx_55
	word32 esi_56
	word32 ecx_57
	byte S_58
	byte CZ_59
	selector es_60
	selector ds_61
	call esi_41 (retsize: 4; depth: 4)
		uses: C_38,CZ_44,ds_46,dwLoc04_6,dwLoc08_14,dwLoc9C_17,dwLocA0_22,dwLocA4_24,dwLocA8_29,eax_36,ebp_34,ebx_39,ecx_42,edi_33,edx_40,es_45,esi_41,esp_32,S_43,SCZO_35,SZO_37
		defs: C_53,CZ_59,ds_61,eax_51,ebp_49,ebx_54,ecx_57,edi_48,edx_55,es_60,esi_56,esp_47,S_58,SCZO_50,SZO_52
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem65[esp_47 - 0x00000004:word32] = fp - 0x00000088
	Mem69[esp_47 - 0x00000008:word32] = fp - 0x00000084
	Mem72[esp_47 - 0x0000000C:word32] = eax_51
	Mem74[esp_47 - 0x00000010:word32] = edi_48
	word32 esp_75
	word32 edi_76
	word32 ebp_77
	byte SCZO_78
	word32 eax_79
	byte SZO_80
	byte C_81
	word32 ebx_82
	word32 edx_83
	word32 esi_84
	word32 ecx_85
	byte S_86
	byte CZ_87
	selector es_88
	selector ds_89
	call Mem74[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_53,CZ_59,ds_61,dwLoc04_6,dwLoc08_14,dwLoc8C_67,dwLoc9C_17,dwLocA0_22,dwLocA4_24,dwLocA8_29,eax_51,ebp_49,ebx_54,ecx_70,edi_48,edx_55,es_60,esi_62,esp_73,S_58,SCZO_50,SZO_52
		defs: C_81,CZ_87,ds_89,eax_79,ebp_77,ebx_82,ecx_85,edi_76,edx_83,es_88,esi_84,esp_75,S_86,SCZO_78,SZO_80
	word32 esp_90
	word32 edi_91
	word32 ebp_92
	byte SCZO_93
	word32 eax_94
	byte SZO_95
	byte C_96
	word32 ebx_97
	word32 esi_99
	word32 ecx_100
	byte S_101
	byte CZ_102
	selector es_103
	selector ds_104
	word32 edx_125
	call Mem74[esi_84 + 0x0000001C:word32] (retsize: 4; depth: 4)
		uses: C_81,CZ_87,ds_89,dwLoc04_6,dwLoc08_14,dwLoc8C_67,dwLoc9C_17,dwLocA0_22,dwLocA4_24,dwLocA8_29,eax_79,ebp_77,ebx_82,ecx_85,edi_76,edx_83,es_88,esi_84,esp_75,S_86,SCZO_78,SZO_80
		defs: C_96,CZ_102,ds_104,eax_94,ebp_92,ebx_97,ecx_100,edi_91,edx_98,es_103,esi_99,esp_90,S_101,SCZO_93,SZO_95
	branch eax_94 < 0x00000000 l1002405B
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32) Local -0084(32) Local -0088(32)

l1002405B:
	branch Mem74[0x10031000:word32] <=u 0x00000002 l100240AD
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):<invalid> -128(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32)

l10024064:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x10005678)
	Mem286[esp_90 - 0x00000004:word32] = fp - 0x0000005C
	Mem288[esp_90 - 0x00000008:word32] = 0x00000005
	word32 ecx_275 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem290[esp_90 - 0x0000000C:word32] = ecx_275
	Mem292[esp_90 - 0x00000010:word32] = ecx_275
	word32 ecx_294
	word32 esi_296
	word32 edi_297
	fn1000C491(0x10031000, 0x1000B1B0, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_294, out edx_125, out esi_296, out edi_297)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):<invalid> -128(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0080(32)

l10023FB9:
	Mem170[esp_90 - 0x00000004:word32] = 0x00000004
	branch Mem170[0x10031000:word32] <=u Mem170[esp_90 - 0x00000004:word32] l10024042
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):<invalid> -128(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32) Local -0084(32) Local -0088(32)

l10023FC4:
	fn1000C51D(fp - 0x0000005C, 0x10003428)
	fn1000C51D(fp - 0x0000004C, 0x10005678)
	Mem252[esp_90 - 0x00000004:word32] = fp - 0x0000007C
	Mem254[esp_90 - 0x00000008:word32] = 0x00000007
	word32 ecx_230 = fp - 0x0000004C ^ fp - 0x0000004C
	Mem256[esp_90 - 0x0000000C:word32] = ecx_230
	Mem258[esp_90 - 0x00000010:word32] = ecx_230
	word32 ecx_263
	word32 esi_265
	word32 edi_266
	fn1000C491(0x10031000, 0x1000B1EF, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_263, out edx_125, out esi_265, out edi_266)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):<invalid> -128(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0080(32) Local -0084(32) Local -0088(32)

l10024042:
	Mem213[esp_90 - 0x00000004:word32] = dwLoc84
	fn1002622C(ebx_97, dwArg00)
	Mem220[esp_90 - 0x00000004:word32] = dwLoc88
	fn10026258(ebx_97, dwArg00)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -128(fp):<invalid> -60(fp):fp - 0x0000008C -56(fp):fp - 0x0000004C ^ fp - 0x0000004C -52(fp):<invalid> -48(fp):fp - 0x0000004C ^ fp - 0x0000004C -44(fp):fp - 0x00000090 -40(fp):fp - 0x0000004C ^ fp - 0x0000004C -36(fp):<invalid> -32(fp):fp - 0x0000004C ^ fp - 0x0000004C -28(fp):fp - 0x00000094 -24(fp):fp - 0x0000004C ^ fp - 0x0000004C -20(fp):<invalid> -16(fp):fp - 0x0000004C ^ fp - 0x0000004C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0080(32)

l100240AA:
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -128(fp):<invalid> -60(fp):fp - 0x0000008C -56(fp):fp - 0x0000004C ^ fp - 0x0000004C -52(fp):<invalid> -48(fp):fp - 0x0000004C ^ fp - 0x0000004C -44(fp):fp - 0x00000090 -40(fp):fp - 0x0000004C ^ fp - 0x0000004C -36(fp):<invalid> -32(fp):fp - 0x0000004C ^ fp - 0x0000004C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100240AD:
	word32 edi_129 = Mem74[esp_90:word32]
	*ediOut = edi_129
	word32 esi_131 = Mem74[esp_90 + 0x00000004:word32]
	*esiOut = esi_131
	word32 ecx_138
	return fn1002F420(eax_94, eax_11 ^ fp - 0x00000004, edx_125, Mem74[esp_90 + 0x00000008:word32], ebp_92, esi_131, edi_129, es_103, ds_104, out ecx_138)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -128(fp):<invalid> -60(fp):fp - 0x0000008C -56(fp):fp - 0x0000004C ^ fp - 0x0000004C -52(fp):<invalid> -48(fp):fp - 0x0000004C ^ fp - 0x0000004C -44(fp):fp - 0x00000090 -40(fp):fp - 0x0000004C ^ fp - 0x0000004C -36(fp):<invalid> -32(fp):fp - 0x0000004C ^ fp - 0x0000004C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10023F61_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -168(fp):edx -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -128(fp):<invalid> -60(fp):fp - 0x0000008C -56(fp):fp - 0x0000004C ^ fp - 0x0000004C -52(fp):<invalid> -48(fp):fp - 0x0000004C ^ fp - 0x0000004C -44(fp):fp - 0x00000090 -40(fp):fp - 0x0000004C ^ fp - 0x0000004C -36(fp):<invalid> -32(fp):fp - 0x0000004C ^ fp - 0x0000004C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100240BE(word32 ecx, word32 edx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: edi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn100240BE_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0070(32) Local -0078(32)

l100240BE:
	word32 dwLoc70_15 = dwLoc70 & 0x00000000
	word32 esp_35
	word32 edi_36
	word32 ebp_37
	byte SCZO_38
	word32 eax_39
	byte SZO_40
	byte C_41
	word32 ebx_42
	word32 esi_43
	word32 edx_44
	word32 ecx_45
	bcuiposr0 None_46
	byte Z_47
	byte S_48
	byte CZ_49
	selector es_50
	selector ds_51
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 148)
		uses: C_17,dwLoc04_6,dwLoc08_12,dwLoc70_15,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_32,ebp_7,ebx_29,ecx_34,edi_27,edx,esi_33,esp_30,SZO_16
		defs: C_41,CZ_49,ds_51,eax_39,ebp_37,ebx_42,ecx_45,edi_36,edx_44,es_50,esi_43,esp_35,None_46,S_48,SCZO_38,SZO_40,Z_47
	word32 edi_53
	word32 ebp_54
	byte SCZO_55
	word32 eax_56
	byte SZO_57
	byte C_58
	word32 esi_60
	word32 edx_61
	word32 ecx_62
	bcuiposr0 None_63
	byte Z_64
	byte S_65
	byte CZ_66
	selector es_67
	selector ds_68
	word32 ebx_415
	word32 esp_408
	call esi_43 (retsize: 4; depth: 4)
		uses: C_41,CZ_49,ds_51,dwLoc04_6,dwLoc08_12,dwLoc70_15,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_39,ebp_37,ebx_42,ecx_45,edi_36,edx_44,es_50,esi_43,esp_35,None_46,S_48,SCZO_38,SZO_40,Z_47
		defs: C_58,CZ_66,ds_68,eax_56,ebp_54,ebx_59,ecx_62,edi_53,edx_61,es_67,esi_60,esp_52,None_63,S_65,SCZO_55,SZO_57,Z_64
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch (dwLoc70 & 0x00000000) == 0x00000000 l10024109
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32)

l100240F5:
	Mem387[esp_408 - 0x00000004:word32] = dwLoc70 & 0x00000000
	dwLoc70_15 = dwLoc70 & 0x00000000 & 0x00000000
	word32 esp_391
	word32 edi_392
	word32 ebp_393
	byte SCZO_394
	word32 eax_395
	byte SZO_396
	byte C_397
	word32 ebx_398
	word32 esi_399
	word32 edx_400
	word32 ecx_401
	bcuiposr0 None_402
	byte Z_403
	byte S_404
	byte CZ_405
	selector es_406
	selector ds_407
	call Mem387[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_384,CZ_66,ds_68,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_382,dwLoc74_70,dwLoc78,dwLoc7C,dwLoc80,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_385,ebp_54,ebx_59,ecx_389,edi_53,edx_61,es_67,esi_388,esp_386,None_63,S_65,SCZO_55,SZO_383,Z_72
		defs: C_397,CZ_405,ds_407,eax_395,ebp_393,ebx_398,ecx_401,edi_392,edx_400,es_406,esi_399,esp_391,None_402,S_404,SCZO_394,SZO_396,Z_403
	word32 edi_409
	word32 ebp_410
	byte SCZO_411
	word32 eax_412
	byte SZO_413
	byte C_414
	word32 esi_416
	word32 edx_417
	word32 ecx_418
	bcuiposr0 None_419
	byte Z_420
	byte S_421
	byte CZ_422
	selector es_423
	selector ds_424
	call esi_399 (retsize: 4; depth: 4)
		uses: C_397,CZ_405,ds_407,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_382,dwLoc74_70,dwLoc78,dwLoc7C,dwLoc80,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_395,ebp_393,ebx_398,ecx_401,edi_392,edx_400,es_406,esi_399,esp_391,None_402,S_404,SCZO_394,SZO_396,Z_403
		defs: C_414,CZ_422,ds_424,eax_412,ebp_410,ebx_415,ecx_418,edi_409,edx_417,es_423,esi_416,esp_408,None_419,S_421,SCZO_411,SZO_413,Z_420
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32)

l10024109:
	word32 esp_79 = esp_408 - 0x00000004
	Mem80[esp_79:word32] = fp - 0x00000070
	Mem82[esp_79 - 0x00000004:word32] = 0x1000571C
	Mem84[esp_79 - 0x00000008:word32] = ebx_415
	word32 esp_86
	word32 edi_87
	word32 ebp_88
	byte SCZO_89
	word32 eax_90
	byte SZO_91
	byte C_92
	word32 ebx_93
	word32 esi_94
	word32 edx_95
	word32 ecx_96
	bcuiposr0 None_97
	byte Z_98
	byte S_99
	byte CZ_100
	selector es_101
	selector ds_102
	call Mem84[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_73,CZ_66,ds_68,dwLoc04_6,dwLoc08_12,dwLoc70_74,dwLoc74_70,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_78,ebp_54,ebx_75,ecx_85,edi_53,edx_61,es_67,esi_77,esp_83,None_63,S_65,SCZO_55,SZO_71,Z_72
		defs: C_92,CZ_100,ds_102,eax_90,ebp_88,ebx_93,ecx_96,edi_87,edx_95,es_101,esi_94,esp_86,None_97,S_99,SCZO_89,SZO_91,Z_98
	word32 edi_104
	byte SCZO_106
	byte SZO_108
	byte C_109
	word32 ebx_110
	word32 esi_111
	word32 ecx_113
	bcuiposr0 None_114
	byte Z_115
	byte S_116
	byte CZ_117
	selector ds_119
	selector es_118
	word32 edx_112
	word32 eax_107
	word32 ebp_105
	word32 esp_103
	call Mem84[esi_94:word32] (retsize: 4; depth: 4)
		uses: C_92,CZ_100,ds_102,dwLoc04_6,dwLoc08_12,dwLoc70_74,dwLoc74_70,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_90,ebp_88,ebx_93,ecx_96,edi_87,edx_95,es_101,esi_94,esp_86,None_97,S_99,SCZO_89,SZO_91,Z_98
		defs: C_109,CZ_117,ds_119,eax_107,ebp_105,ebx_110,ecx_113,edi_104,edx_112,es_118,esi_111,esp_103,None_114,S_116,SCZO_106,SZO_108,Z_115
	branch eax_107 < 0x00000000 l1002420B
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32)

l1002412A:
	Mem233[esp_103 - 0x00000004:word32] = fp - 0x00000078
	Mem236[esp_103 - 0x00000008:word32] = eax_56
	Mem239[esp_103 - 0x0000000C:word32] = dwLoc70_15
	word32 esp_241
	word32 edi_242
	word32 ebp_243
	byte SCZO_244
	word32 eax_245
	byte SZO_246
	byte C_247
	word32 ebx_248
	word32 esi_249
	word32 edx_250
	word32 ecx_251
	bcuiposr0 None_252
	byte Z_253
	byte S_254
	byte CZ_255
	selector es_256
	selector ds_257
	call Mem239[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_123,CZ_117,ds_119,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_74,dwLoc74_70,dwLoc7C_120,dwLoc80,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_230,ebp_105,ebx_110,ecx_240,edi_104,edx_112,es_118,esi_237,esp_238,None_114,S_122,SCZO_106,SZO_121,Z_115
		defs: C_247,CZ_255,ds_257,eax_245,ebp_243,ebx_248,ecx_251,edi_242,edx_250,es_256,esi_249,esp_241,None_252,S_254,SCZO_244,SZO_246,Z_253
	byte SCZO_261
	byte SZO_263
	byte C_264
	word32 ebx_265
	word32 esi_266
	word32 ecx_268
	bcuiposr0 None_269
	byte Z_270
	byte S_271
	byte CZ_272
	word32 edi_259
	call Mem239[esi_249 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: C_247,CZ_255,ds_257,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc70_74,dwLoc74_70,dwLoc7C_120,dwLoc80,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_245,ebp_243,ebx_248,ecx_251,edi_242,edx_250,es_256,esi_249,esp_241,None_252,S_254,SCZO_244,SZO_246,Z_253
		defs: C_264,CZ_272,ds_274,eax_262,ebp_260,ebx_265,ecx_268,edi_259,edx_267,es_273,esi_266,esp_258,None_269,S_271,SCZO_261,SZO_263,Z_270
	branch eax_107 < 0x00000000 l100241BC
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32)

l100241BC:
	branch Mem239[0x10031000:word32] <=u 0x00000002 l1002420B
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32)

l100241C5:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x100056A8)
	Mem367[esp_103 - 0x00000004:word32] = fp - 0x0000005C
	Mem369[esp_103 - 0x00000008:word32] = 0x00000005
	word32 ecx_356 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem371[esp_103 - 0x0000000C:word32] = ecx_356
	Mem373[esp_103 - 0x00000010:word32] = ecx_356
	word32 ecx_375
	word32 esi_377
	word32 edi_378
	eax_107 = fn1000C491(0x10031000, 0x1000B111, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_375, out edx_112, out esi_377, out edi_378)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32)

l1002414A:
	Mem280[esp_103 - 0x00000004:word32] = 0x00000004
	branch Mem280[0x10031000:word32] <=u Mem280[esp_103 - 0x00000004:word32] l100241AC
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32)

l10024155:
	fn1000C51D(fp - 0x0000004C, 0x10003428)
	fn1000C51D(fp - 0x0000003C, 0x100056A8)
	Mem334[esp_103 - 0x00000004:word32] = fp - 0x0000006C
	Mem336[esp_103 - 0x00000008:word32] = 0x00000006
	word32 ecx_319 = fp - 0x0000003C ^ fp - 0x0000003C
	Mem338[esp_103 - 0x0000000C:word32] = ecx_319
	Mem340[esp_103 - 0x00000010:word32] = ecx_319
	word32 ecx_344
	word32 edx_345
	word32 esi_346
	fn1000C491(0x10031000, 0x1000B152, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_344, out edx_345, out esi_346, out edi_259)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edx ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32)

l100241AC:
	Mem302[esp_103 - 0x00000004:word32] = fp - 0x00000080
	Mem306[esp_103 - 0x00000008:word32] = dwLoc78
	eax_107 = fn1002669D(edi_259, dwArg00, dwArg04, out edx_112)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):fp - 0x00000080 -24(fp):fp - 0x0000003C ^ fp - 0x0000003C -20(fp):<invalid> -16(fp):fp - 0x0000003C ^ fp - 0x0000003C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32)

l1002420B:
	branch dwLoc70_15 == 0x00000000 l10024226
// DataOut: cs ds eax ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32)

l10024212:
	word32 esp_192 = esp_103 - 0x00000004
	Mem193[esp_192:word32] = dwLoc70_15
	word32 esp_196
	word32 edi_197
	word32 ebp_198
	byte SCZO_199
	word32 eax_200
	byte SZO_201
	byte C_202
	word32 ebx_203
	word32 esi_204
	word32 edx_205
	word32 ecx_206
	bcuiposr0 None_207
	byte Z_208
	byte S_209
	byte CZ_210
	selector es_211
	selector ds_212
	call Mem193[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_190,CZ_145,ds_143,dwLoc04_6,dwLoc08_12,dwLoc10_142,dwLoc14_141,dwLoc18_140,dwLoc1C_139,dwLoc20_138,dwLoc24_134,dwLoc28_137,dwLoc2C_135,dwLoc70_188,dwLoc74_70,dwLoc7C_133,dwLoc80_136,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_191,ebp_154,ebx_152,ecx_195,edi_150,edx_148,es_144,esi_194,esp_192,None_147,S_146,SCZO_149,SZO_189,Z_158
		defs: C_202,CZ_210,ds_212,eax_200,ebp_198,ebx_203,ecx_206,edi_197,edx_205,es_211,esi_204,esp_196,None_207,S_209,SCZO_199,SZO_201,Z_208
	word32 edi_214
	byte SCZO_216
	byte SZO_218
	byte C_219
	word32 ebx_220
	word32 esi_221
	word32 ecx_223
	bcuiposr0 None_224
	byte Z_225
	byte S_226
	byte CZ_227
	call esi_204 (retsize: 4; depth: 4)
		uses: C_202,CZ_210,ds_212,dwLoc04_6,dwLoc08_12,dwLoc10_142,dwLoc14_141,dwLoc18_140,dwLoc1C_139,dwLoc20_138,dwLoc24_134,dwLoc28_137,dwLoc2C_135,dwLoc70_188,dwLoc74_70,dwLoc7C_133,dwLoc80_136,dwLoc84_20,dwLoc88_23,dwLoc8C_25,dwLoc90_31,eax_200,ebp_198,ebx_203,ecx_206,edi_197,edx_205,es_211,esi_204,esp_196,None_207,S_209,SCZO_199,SZO_201,Z_208
		defs: C_219,CZ_227,ds_229,eax_217,ebp_215,ebx_220,ecx_223,edi_214,edx_222,es_228,esi_221,esp_213,None_224,S_226,SCZO_216,SZO_218,Z_225
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10024226:
	word32 esp_174 = esp_103 + 0x00000004
	word32 edi_173 = Mem84[esp_103:word32]
	word32 ecx_182
	fn1002F420(eax_107, eax_11 ^ fp - 0x00000004, edx_112, Mem84[esp_174 + 0x00000004:word32], ebp_105, Mem84[esp_174:word32], edi_173, es_118, ds_119, out ecx_182)
	return edi_173
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100240BE_exit:
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -144(fp):edx -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000074 -40(fp):fp - 0x0000003C ^ fp - 0x0000003C -36(fp):<invalid> -32(fp):fp - 0x0000003C ^ fp - 0x0000003C -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10024237(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10024237_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -0064(32)

l10024237:
	word32 esp_32
	word32 edi_33
	word32 ebp_34
	byte SCZO_35
	word32 eax_36
	byte SZO_37
	byte C_38
	word32 edx_39
	word32 ebx_40
	word32 esi_41
	word32 ecx_42
	byte S_43
	byte CZ_44
	byte Z_45
	bcuiposr0 None_46
	selector es_47
	selector ds_48
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 132)
		uses: C_13,dwLoc04_6,dwLoc08_14,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_16,ebp_7,ebx,ecx_30,edi_27,edx,esi_25,esp_28,SZO_12
		defs: C_38,CZ_44,ds_48,eax_36,ebp_34,ebx_40,ecx_42,edi_33,edx_39,es_47,esi_41,esp_32,None_46,S_43,SCZO_35,SZO_37,Z_45
	word32 esp_49
	word32 edi_50
	word32 ebp_51
	byte SCZO_52
	word32 eax_53
	byte SZO_54
	byte C_55
	word32 edx_56
	word32 ebx_57
	word32 esi_58
	word32 ecx_59
	byte S_60
	byte CZ_61
	byte Z_62
	bcuiposr0 None_63
	selector es_64
	selector ds_65
	call esi_41 (retsize: 4; depth: 4)
		uses: C_38,CZ_44,ds_48,dwLoc04_6,dwLoc08_14,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_36,ebp_34,ebx_40,ecx_42,edi_33,edx_39,es_47,esi_41,esp_32,None_46,S_43,SCZO_35,SZO_37,Z_45
		defs: C_55,CZ_61,ds_65,eax_53,ebp_51,ebx_57,ecx_59,edi_50,edx_56,es_64,esi_58,esp_49,None_63,S_60,SCZO_52,SZO_54,Z_62
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem81[esp_49 - 0x00000004:word32] = fp - 0x00000060
	Mem83[esp_49 - 0x00000008:word32] = 0x1000570C
	Mem85[esp_49 - 0x0000000C:word32] = edi_50
	word32 esp_86
	word32 edi_87
	word32 ebp_88
	byte SCZO_89
	word32 eax_90
	byte SZO_91
	byte C_92
	word32 edx_93
	word32 ebx_94
	word32 esi_95
	word32 ecx_96
	byte S_97
	byte CZ_98
	byte Z_99
	bcuiposr0 None_100
	selector es_101
	selector ds_102
	call Mem85[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_76,CZ_61,ds_65,dwLoc04_6,dwLoc08_14,dwLoc60_74,dwLoc64_70,dwLoc68_77,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_78,ebp_51,ebx_67,ecx_79,edi_50,edx_56,es_64,esi_66,esp_84,None_63,S_60,SCZO_52,SZO_75,Z_62
		defs: C_92,CZ_98,ds_102,eax_90,ebp_88,ebx_94,ecx_96,edi_87,edx_93,es_101,esi_95,esp_86,None_100,S_97,SCZO_89,SZO_91,Z_99
	word32 edi_104
	byte SCZO_106
	word32 eax_107
	byte SZO_108
	byte C_109
	word32 esi_112
	word32 ecx_113
	byte S_114
	byte CZ_115
	byte Z_116
	bcuiposr0 None_117
	selector ds_119
	selector es_118
	word32 edx_110
	word32 ebx_111
	word32 ebp_105
	word32 esp_103
	call Mem85[esi_95:word32] (retsize: 4; depth: 4)
		uses: C_92,CZ_98,ds_102,dwLoc04_6,dwLoc08_14,dwLoc60_74,dwLoc64_70,dwLoc68_77,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_90,ebp_88,ebx_94,ecx_96,edi_87,edx_93,es_101,esi_95,esp_86,None_100,S_97,SCZO_89,SZO_91,Z_99
		defs: C_109,CZ_115,ds_119,eax_107,ebp_105,ebx_111,ecx_113,edi_104,edx_110,es_118,esi_112,esp_103,None_117,S_114,SCZO_106,SZO_108,Z_116
	branch eax_107 < 0x00000000 l10024300
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(32)

l10024287:
	Mem224[esp_103 - 0x00000004:word32] = fp - 0x00000064
	Mem227[esp_103 - 0x00000008:word32] = eax_53
	Mem230[esp_103 - 0x0000000C:word32] = dwLoc60 & 0x00000000
	word32 esp_232
	word32 edi_233
	word32 ebp_234
	byte SCZO_235
	word32 eax_236
	byte SZO_237
	byte C_238
	word32 edx_239
	word32 ebx_240
	word32 esi_241
	word32 ecx_242
	byte S_243
	byte CZ_244
	byte Z_245
	bcuiposr0 None_246
	selector es_247
	selector ds_248
	call Mem230[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_122,CZ_115,ds_119,dwLoc04_6,dwLoc08_14,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc60_74,dwLoc64_70,dwLoc68_77,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_221,ebp_105,ebx_111,ecx_231,edi_104,edx_110,es_118,esi_228,esp_229,None_117,S_121,SCZO_106,SZO_120,Z_116
		defs: C_238,CZ_244,ds_248,eax_236,ebp_234,ebx_240,ecx_242,edi_233,edx_239,es_247,esi_241,esp_232,None_246,S_243,SCZO_235,SZO_237,Z_245
	word32 edi_250
	byte SCZO_252
	word32 eax_253
	byte SZO_254
	byte C_255
	word32 esi_258
	word32 ecx_259
	byte S_260
	byte CZ_261
	byte Z_262
	bcuiposr0 None_263
	call Mem230[esi_241 + 0x00000058:word32] (retsize: 4; depth: 4)
		uses: C_238,CZ_244,ds_248,dwLoc04_6,dwLoc08_14,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc60_74,dwLoc64_70,dwLoc68_77,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_236,ebp_234,ebx_240,ecx_242,edi_233,edx_239,es_247,esi_241,esp_232,None_246,S_243,SCZO_235,SZO_237,Z_245
		defs: C_255,CZ_261,ds_265,eax_253,ebp_251,ebx_257,ecx_259,edi_250,edx_256,es_264,esi_258,esp_249,None_263,S_260,SCZO_252,SZO_254,Z_262
	branch eax_253 < 0x00000000 l10024300
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:0x00000000 -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32) Local -0064(32) Local -006C(32)

l100242A4:
	Mem271[esp_103 - 0x00000004:word32] = dwLoc64 & 0x00000000
	word32 eax_274 = fn100266D3(edx, dwArg00)
	Mem277[esp_103 - 0x00000004:word32] = 0x00000004
	ebx_111 = eax_274
	branch Mem277[0x10031000:word32] <=u Mem277[esp_103 - 0x00000004:word32] l10024300
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:0x00000000 -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0018(32) Local -0060(32)

l100242BC:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x100056D8)
	Mem300[esp_103 - 0x00000004:word32] = fp - 0x0000005C
	Mem302[esp_103 - 0x00000008:word32] = 0x00000005
	Mem304[esp_103 - 0x0000000C:word32] = 0x00000000
	Mem306[esp_103 - 0x00000010:word32] = 0x00000000
	word32 ecx_311
	word32 esi_313
	word32 edi_314
	fn1000C491(0x10031000, 0x1000B0CC, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_311, out edx_110, out esi_313, out edi_314)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:edx ebx:<invalid> -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32)

l10024300:
	branch (dwLoc60 & 0x00000000) == 0x00000000 l1002431B
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000064 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0060(32)

l10024307:
	word32 esp_183 = esp_103 - 0x00000004
	Mem184[esp_183:word32] = dwLoc60 & 0x00000000
	word32 esp_187
	word32 edi_188
	word32 ebp_189
	byte SCZO_190
	word32 eax_191
	byte SZO_192
	byte C_193
	word32 edx_194
	word32 ebx_195
	word32 esi_196
	word32 ecx_197
	byte S_198
	byte CZ_199
	byte Z_200
	bcuiposr0 None_201
	selector es_202
	selector ds_203
	call Mem184[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_181,CZ_134,ds_131,dwLoc04_6,dwLoc08_14,dwLoc10_128,dwLoc14_130,dwLoc18_127,dwLoc1C_129,dwLoc60_179,dwLoc64_70,dwLoc68_77,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_182,ebp_142,ebx_140,ecx_186,edi_138,edx_136,es_132,esi_185,esp_183,None_133,S_135,SCZO_137,SZO_180,Z_146
		defs: C_193,CZ_199,ds_203,eax_191,ebp_189,ebx_195,ecx_197,edi_188,edx_194,es_202,esi_196,esp_187,None_201,S_198,SCZO_190,SZO_192,Z_200
	word32 edi_205
	byte SCZO_207
	word32 eax_208
	byte SZO_209
	byte C_210
	word32 esi_213
	word32 ecx_214
	byte S_215
	byte CZ_216
	byte Z_217
	bcuiposr0 None_218
	call esi_196 (retsize: 4; depth: 4)
		uses: C_193,CZ_199,ds_203,dwLoc04_6,dwLoc08_14,dwLoc10_128,dwLoc14_130,dwLoc18_127,dwLoc1C_129,dwLoc60_179,dwLoc64_70,dwLoc68_77,dwLoc6C_31,dwLoc74_19,dwLoc78_22,dwLoc7C_24,dwLoc80_29,eax_191,ebp_189,ebx_195,ecx_197,edi_188,edx_194,es_202,esi_196,esp_187,None_201,S_198,SCZO_190,SZO_192,Z_200
		defs: C_210,CZ_216,ds_220,eax_208,ebp_206,ebx_212,ecx_214,edi_205,edx_211,es_219,esi_213,esp_204,None_218,S_215,SCZO_207,SZO_209,Z_217
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000064 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002431B:
	word32 esp_163 = esp_103 + 0x00000004
	word32 edi_162 = Mem85[esp_103:word32]
	*ediOut = edi_162
	word32 esi_164 = Mem85[esp_163:word32]
	*esiOut = esi_164
	word32 ecx_171
	return fn1002F420(ebx_111, eax_11 ^ fp - 0x00000004, edx_110, Mem85[esp_163 + 0x00000004:word32], ebp_105, esi_164, edi_162, es_118, ds_119, out ecx_171)
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000064 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10024237_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -128(fp):edx -124(fp):edi -120(fp):esi -116(fp):ebx -108(fp):edx -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000064 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002432E(word32 edx, word32 ebx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002432E_entry:
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0070(32)

l1002432E:
	word32 esi_38
	word32 edi_39
	word32 eax_40 = fn1000EF25(fp - 0x00000080, edx, ebx, esi, es, ds, out esi_38, out edi_39)
	word32 edx_44
	word32 esi_164
	word32 edi_124
	word32 eax_47 = fn1002054D(edi_39, ebx, esi_38, es, ds, eax_40, out edx_44, out esi_164, out edi_124)
	word32 ebp_131 = fp - 0x00000004
	word32 esp_132 = fp - 0x00000094
	word32 ebx_128 = eax_47
	branch eax_47 < 0x00000000 l10024695
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32) Local -0078(0)

l1002437C:
	word32 esi_105 = 0x00000000
	byte dl_107 = 0x00
	word32 edx_108 = DPB(edx_44, 0x00, 0)
	word32 eax_109 = 0x00000000
	branch edx <=u 0x00000000 l100245BD
// DataOut: cs dl ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000094 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):fp - 0x00000070 -120(fp):edx -112(fp):<invalid> -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024399:
	branch ebx_128 < 0x00000000 l100245B4
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100243A1:
	word32 eax_454 = Mem0[Mem0[ebp_131 - 0x00000080:word32] + eax_109 * 0x00000004:word32]
	word32 esp_456 = esp_132 - 0x00000004
	Mem457[esp_456:word32] = ebp_131 + 0x0000000C
	Mem460[ebp_131 - 0x0000007C:word32] = eax_454
	Mem462[ebp_131 - 0x0000005C:word32] = 0x00000000
	word32 edx_463
	word32 eax_464 = fn100246B2(ebp_131 - 0x0000005C, eax_454, ebx_128, ebp_131, edi_124, es, ds, out edx_463)
	word32 esi_451 = 0x00000000
	esp_132 = esp_456 + 0x00000004
	ebx_128 = eax_464
	branch eax_464 < 0x00000000 l1002459C
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100243C7:
	Mem497[ebp_131 - 0x00000064:word32] = 0x00000000
	branch Mem462[0x10031000:word32] <=u 0x00000004 l10024417
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100243D3:
	fn1000C51D(ebp_131 - 0x00000038, 0x10003428)
	fn1000C51D(ebp_131 - 0x00000028, 0x10003088)
	Mem968[ebp_131 - 0x00000014:word32] = 0x00000000
	Mem969[ebp_131 - 0x00000018:word32] = ebp_131 - 0x00000070
	Mem970[ebp_131 - 0x00000010:word32] = 0x00000004
	Mem971[ebp_131 - 0x0000000C:word32] = 0x00000000
	Mem976[esp_456:word32] = ebp_131 - 0x00000058
	Mem978[esp_456 - 0x00000004:word32] = 0x00000005
	Mem980[esp_456 - 0x00000008:word32] = 0x00000000
	Mem982[esp_456 - 0x0000000C:word32] = 0x00000000
	word32 ecx_986
	word32 edx_987
	word32 esi_988
	word32 edi_989
	fn1000C491(0x10031000, 0x1000B08F, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_986, out edx_987, out esi_988, out edi_989)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024417:
	word32 eax_628
	word32 eax_561
	word32 eax_499 = Mem497[ebp_131 - 0x0000005C:word32]
	word32 esp_500 = esp_132 - 0x00000004
	Mem501[esp_500:word32] = eax_499
	word32 esp_505
	word32 edi_506
	word32 ebp_507
	byte SCZO_508
	word32 eax_509
	byte SZO_510
	byte C_511
	word32 ebx_512
	word32 esi_513
	word32 ecx_514
	word32 edx_515
	byte S_516
	byte al_517
	byte dl_518
	byte CZ_519
	bcuiposr0 None_520
	byte Z_521
	byte bl_522
	selector es_523
	selector ds_524
	call Mem501[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_422,bl_467,bLoc61_112,bLoc69_106,C_470,CZ_496,dl_459,ds_408,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_499,ebp_423,ebx_466,ecx_504,edi_417,edx_463,es_409,esi_503,esp_500,None_410,S_469,SCZO_495,SZO_468,Z_414
		defs: al_517,bl_522,C_511,CZ_519,dl_518,ds_524,eax_509,ebp_507,ebx_512,ecx_514,edi_506,edx_515,es_523,esi_513,esp_505,None_520,S_516,SCZO_508,SZO_510,Z_521
	word32 edi_526
	byte SCZO_528
	word32 eax_529
	byte SZO_530
	byte C_531
	word32 ebx_532
	word32 esi_533
	word32 ecx_534
	word32 edx_535
	byte S_536
	byte al_537
	byte dl_538
	byte CZ_539
	bcuiposr0 None_540
	byte Z_541
	byte bl_542
	call esi_513 (retsize: 4; depth: 4)
		uses: al_517,bl_522,bLoc61_112,bLoc69_106,C_511,CZ_519,dl_518,ds_524,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_509,ebp_507,ebx_512,ecx_514,edi_506,edx_515,es_523,esi_513,esp_505,None_520,S_516,SCZO_508,SZO_510,Z_521
		defs: al_537,bl_542,C_531,CZ_539,dl_538,ds_544,eax_529,ebp_527,ebx_532,ecx_534,edi_526,edx_535,es_543,esi_533,esp_525,None_540,S_536,SCZO_528,SZO_530,Z_541
	branch eax_529 == 0x00000000 l10024488
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024488:
	word32 eax_674 = Mem501[ebp_131 - 0x0000005C:word32]
	Mem676[esp_132 - 0x00000004:word32] = eax_674
	word32 esp_680
	word32 edi_681
	word32 ebp_682
	byte SCZO_683
	word32 eax_684
	byte SZO_685
	byte C_686
	word32 ebx_687
	word32 esi_688
	word32 ecx_689
	word32 edx_690
	byte S_691
	byte al_692
	byte dl_693
	byte CZ_694
	bcuiposr0 None_695
	byte Z_696
	byte bl_697
	selector es_698
	selector ds_699
	call Mem676[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_537,bl_542,bLoc61_112,bLoc69_106,C_547,CZ_539,dl_538,ds_544,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_674,ebp_527,ebx_532,ecx_679,edi_526,edx_535,es_543,esi_678,esp_675,None_540,S_536,SCZO_528,SZO_545,Z_546
		defs: al_692,bl_697,C_686,CZ_694,dl_693,ds_699,eax_684,ebp_682,ebx_687,ecx_689,edi_681,edx_690,es_698,esi_688,esp_680,None_695,S_691,SCZO_683,SZO_685,Z_696
	word32 edi_701
	byte SCZO_703
	word32 eax_704
	byte SZO_705
	byte C_706
	word32 ebx_707
	word32 esi_708
	word32 ecx_709
	word32 edx_710
	byte S_711
	byte al_712
	byte dl_713
	byte CZ_714
	bcuiposr0 None_715
	byte Z_716
	byte bl_717
	call esi_688 (retsize: 4; depth: 4)
		uses: al_692,bl_697,bLoc61_112,bLoc69_106,C_686,CZ_694,dl_693,ds_699,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_684,ebp_682,ebx_687,ecx_689,edi_681,edx_690,es_698,esi_688,esp_680,None_695,S_691,SCZO_683,SZO_685,Z_696
		defs: al_712,bl_717,C_706,CZ_714,dl_713,ds_719,eax_704,ebp_702,ebx_707,ecx_709,edi_701,edx_710,es_718,esi_708,esp_700,None_715,S_711,SCZO_703,SZO_705,Z_716
	branch eax_704 == 0x00000000 l100244F1
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100244F1:
	word32 eax_796 = Mem676[ebp_131 - 0x0000005C:word32]
	Mem798[esp_132 - 0x00000004:word32] = eax_796
	word32 esp_802
	word32 edi_803
	word32 ebp_804
	byte SCZO_805
	word32 eax_806
	byte SZO_807
	byte C_808
	word32 ebx_809
	word32 esi_810
	word32 ecx_811
	word32 edx_812
	byte S_813
	byte al_814
	byte dl_815
	byte CZ_816
	bcuiposr0 None_817
	byte Z_818
	byte bl_819
	selector es_820
	selector ds_821
	call Mem798[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_712,bl_717,bLoc61_112,bLoc69_106,C_722,CZ_714,dl_713,ds_719,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_796,ebp_702,ebx_707,ecx_801,edi_701,edx_710,es_718,esi_800,esp_797,None_715,S_711,SCZO_703,SZO_720,Z_721
		defs: al_814,bl_819,C_808,CZ_816,dl_815,ds_821,eax_806,ebp_804,ebx_809,ecx_811,edi_803,edx_812,es_820,esi_810,esp_802,None_817,S_813,SCZO_805,SZO_807,Z_818
	word32 edi_823
	byte SCZO_825
	word32 eax_826
	byte SZO_827
	byte C_828
	word32 ebx_829
	word32 esi_830
	word32 ecx_831
	word32 edx_832
	byte S_833
	byte al_834
	byte dl_835
	byte CZ_836
	bcuiposr0 None_837
	byte Z_838
	byte bl_839
	call esi_810 (retsize: 4; depth: 4)
		uses: al_814,bl_819,bLoc61_112,bLoc69_106,C_808,CZ_816,dl_815,ds_821,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_806,ebp_804,ebx_809,ecx_811,edi_803,edx_812,es_820,esi_810,esp_802,None_817,S_813,SCZO_805,SZO_807,Z_818
		defs: al_834,bl_839,C_828,CZ_836,dl_835,ds_841,eax_826,ebp_824,ebx_829,ecx_831,edi_823,edx_832,es_840,esi_830,esp_822,None_837,S_833,SCZO_825,SZO_827,Z_838
	branch eax_826 == 0x00000000 l10024518
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024518:
	word32 eax_851 = Mem798[ebp_131 - 0x0000005C:word32]
	Mem853[esp_132 - 0x00000004:word32] = eax_851
	word32 esp_857
	word32 edi_858
	word32 ebp_859
	byte SCZO_860
	word32 eax_861
	byte SZO_862
	byte C_863
	word32 ebx_864
	word32 esi_865
	word32 ecx_866
	word32 edx_867
	byte S_868
	byte al_869
	byte dl_870
	byte CZ_871
	bcuiposr0 None_872
	byte Z_873
	byte bl_874
	selector es_875
	selector ds_876
	call Mem853[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_834,bl_839,bLoc61_112,bLoc69_106,C_844,CZ_836,dl_835,ds_841,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_851,ebp_824,ebx_829,ecx_856,edi_823,edx_832,es_840,esi_855,esp_852,None_837,S_833,SCZO_825,SZO_842,Z_843
		defs: al_869,bl_874,C_863,CZ_871,dl_870,ds_876,eax_861,ebp_859,ebx_864,ecx_866,edi_858,edx_867,es_875,esi_865,esp_857,None_872,S_868,SCZO_860,SZO_862,Z_873
	word32 edi_878
	byte SCZO_880
	word32 eax_881
	byte SZO_882
	byte C_883
	word32 ebx_884
	word32 esi_885
	word32 ecx_886
	word32 edx_887
	byte S_888
	byte al_889
	byte dl_890
	byte CZ_891
	bcuiposr0 None_892
	byte Z_893
	byte bl_894
	call esi_865 (retsize: 4; depth: 4)
		uses: al_869,bl_874,bLoc61_112,bLoc69_106,C_863,CZ_871,dl_870,ds_876,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_861,ebp_859,ebx_864,ecx_866,edi_858,edx_867,es_875,esi_865,esp_857,None_872,S_868,SCZO_860,SZO_862,Z_873
		defs: al_889,bl_894,C_883,CZ_891,dl_890,ds_896,eax_881,ebp_879,ebx_884,ecx_886,edi_878,edx_887,es_895,esi_885,esp_877,None_892,S_888,SCZO_880,SZO_882,Z_893
	branch eax_881 == 0x00000000 l1002453F
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002453F:
	word32 eax_906 = Mem853[ebp_131 - 0x0000005C:word32]
	Mem908[esp_132 - 0x00000004:word32] = eax_906
	word32 esp_912
	word32 edi_913
	word32 ebp_914
	byte SCZO_915
	word32 eax_916
	byte SZO_917
	byte C_918
	word32 ebx_919
	word32 esi_920
	word32 ecx_921
	word32 edx_922
	byte S_923
	byte al_924
	byte dl_925
	byte CZ_926
	bcuiposr0 None_927
	byte Z_928
	byte bl_929
	selector es_930
	selector ds_931
	call Mem908[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_889,bl_894,bLoc61_112,bLoc69_106,C_899,CZ_891,dl_890,ds_896,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_906,ebp_879,ebx_884,ecx_911,edi_878,edx_887,es_895,esi_910,esp_907,None_892,S_888,SCZO_880,SZO_897,Z_898
		defs: al_924,bl_929,C_918,CZ_926,dl_925,ds_931,eax_916,ebp_914,ebx_919,ecx_921,edi_913,edx_922,es_930,esi_920,esp_912,None_927,S_923,SCZO_915,SZO_917,Z_928
	byte SCZO_935
	word32 eax_936
	byte SZO_937
	byte C_938
	word32 ecx_941
	word32 edx_942
	byte S_943
	byte al_944
	byte dl_945
	byte CZ_946
	bcuiposr0 None_947
	byte Z_948
	byte bl_949
	call esi_920 (retsize: 4; depth: 4)
		uses: al_924,bl_929,bLoc61_112,bLoc69_106,C_918,CZ_926,dl_925,ds_931,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_916,ebp_914,ebx_919,ecx_921,edi_913,edx_922,es_930,esi_920,esp_912,None_927,S_923,SCZO_915,SZO_917,Z_928
		defs: al_944,bl_949,C_938,CZ_946,dl_945,ds_951,eax_936,ebp_934,ebx_939,ecx_941,edi_933,edx_942,es_950,esi_940,esp_932,None_947,S_943,SCZO_935,SZO_937,Z_948
	branch eax_936 == 0x00000000 l10024564
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024564:
	ebx_128 = 0x8000FFFF
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024556:
	Mem957[esp_132 - 0x00000004:word32] = ebp_131 - 0x0000005C
	esi_451 = fn100225BB(ebp_131 - 0x00000078, edx_942, esi_451, es, ds, dwArg00)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002452F:
	eax_628 = fn10023C94(Mem853[ebp_131 - 0x0000006C:word32], Mem853[ebp_131 - 0x0000005C:word32], ebp_131, es, ds, out esi_451, out edi_124)
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024508:
	eax_628 = fn10023B2D(Mem798[ebp_131 - 0x0000006C:word32], Mem798[ebp_131 - 0x0000005C:word32], ebp_131, es, ds, out esi_451, out edi_124)
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002449F:
	eax_561 = fn10023925(Mem676[ebp_131 - 0x0000006C:word32], Mem676[ebp_131 - 0x0000005C:word32], ebp_131, es, ds, out ebx_128, out esi_451, out edi_124)
	Mem730[ebp_131 - 0x00000064:word32] = eax_561
	branch eax_561 < 0x00000000 l1002456C
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100244B5:
	word32 edx_734 = Mem730[ebp_131 - 0x0000007C:word32]
	esi_451 = 0x10003168
	word32 ecx_737 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100244BF:
	branch Mem730[edx_734 + 0x0000000C + ecx_737 * 0x00000004:word32] != Mem730[ecx_737 * 0x00000004 + 0x10003168:word32] l10024569
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003168 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100244CC:
	ecx_737 = ecx_737 + 0x00000001
	branch ecx_737 != 0x00000004 l100244BF
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003168 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100244D2:
	Mem748[edi_124 + 0x00000060:word32] = Mem730[ebp_131 - 0x00000070:word32]
	word32 eax_749 = Mem748[ebp_131 - 0x0000005C:word32]
	Mem751[esp_132 - 0x00000004:word32] = eax_749
	word32 esp_755
	word32 edi_756
	word32 ebp_757
	byte SCZO_758
	word32 eax_759
	byte SZO_760
	byte C_761
	word32 ebx_762
	word32 esi_763
	word32 ecx_764
	word32 edx_765
	byte S_766
	byte al_767
	byte dl_768
	byte CZ_769
	bcuiposr0 None_770
	byte Z_771
	byte bl_772
	selector es_773
	selector ds_774
	call Mem751[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_729,bl_717,bLoc61_112,bLoc69_106,C_739,CZ_714,dl_735,ds_719,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_749,ebp_702,ebx_725,ecx_754,edi_727,edx_734,es_718,esi_753,esp_750,None_715,S_732,SCZO_745,SZO_738,Z_746
		defs: al_767,bl_772,C_761,CZ_769,dl_768,ds_774,eax_759,ebp_757,ebx_762,ecx_764,edi_756,edx_765,es_773,esi_763,esp_755,None_770,S_766,SCZO_758,SZO_760,Z_771
	byte SCZO_778
	word32 eax_779
	byte SZO_780
	byte C_781
	word32 ecx_784
	word32 edx_785
	byte S_786
	byte al_787
	byte dl_788
	byte CZ_789
	bcuiposr0 None_790
	byte Z_791
	byte bl_792
	call esi_763 (retsize: 4; depth: 4)
		uses: al_767,bl_772,bLoc61_112,bLoc69_106,C_761,CZ_769,dl_768,ds_774,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_759,ebp_757,ebx_762,ecx_764,edi_756,edx_765,es_773,esi_763,esp_755,None_770,S_766,SCZO_758,SZO_760,Z_771
		defs: al_787,bl_792,C_781,CZ_789,dl_788,ds_794,eax_779,ebp_777,ebx_782,ecx_784,edi_776,edx_785,es_793,esi_783,esp_775,None_790,S_786,SCZO_778,SZO_780,Z_791
	Mem795[ebp_131 - 0x00000065:byte] = 0x01
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003168 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002442E:
	word32 eax_638 = fn1002371A(Mem501[ebp_131 - 0x0000006C:word32], Mem501[ebp_131 - 0x0000005C:word32], ebp_131, es, ds, out esi_451, out edi_124)
	ebx_128 = eax_638
	branch eax_638 < 0x00000000 l1002459C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024443:
	word32 edx_644 = Mem501[ebp_131 - 0x0000007C:word32]
	esi_451 = 0x10003158
	word32 ecx_647 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002444D:
	branch Mem501[edx_644 + 0x0000000C + ecx_647 * 0x00000004:word32] != Mem501[ecx_647 * 0x00000004 + 0x10003158:word32] l10024466
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003158 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024456:
	ecx_647 = ecx_647 + 0x00000001
	branch ecx_647 != 0x00000004 l1002444D
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003158 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002445C:
	Mem672[edi_124 + 0x00000064:word32] = Mem501[ebp_131 - 0x00000070:word32]
	Mem673[ebp_131 - 0x0000005D:byte] = 0x01
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003158 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024466:
	branch Mem501[edx_644 + 0x00000004:word32] == 0x00000004 l10024476
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003158 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002446C:
	branch Mem501[edx_644 + 0x00000004:word32] != 0x00000005 l10024569
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003158 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024476:
	eax_628 = fn10024237(Mem501[ebp_131 - 0x0000006C:word32], Mem501[ebp_131 - 0x0000005C:word32], ebp_131, es, ds, out esi_451, out edi_124)
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:0x10003158 dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024481:
	ebx_128 = eax_628
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024569:
	eax_561 = Mem501[ebp_131 - 0x00000064:word32]
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002456C:
	branch ebx_128 < 0x00000000 l1002459C
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024570:
	branch eax_561 < 0x00000000 l1002459C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024574:
	word32 eax_575 = fn10023F61(Mem501[ebp_131 - 0x0000006C:word32], Mem501[ebp_131 - 0x0000005C:word32], ebp_131, es, ds, out esi_451, out edi_124)
	ebx_128 = eax_575
	branch eax_575 < 0x00000000 l1002459C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024585:
	word32 edi_583 = fn100240BE(Mem501[ebp_131 - 0x0000006C:word32], Mem501[ebp_131 - 0x0000005C:word32], ebp_131, es, ds)
	word32 esp_585 = esp_132 - 0x00000004
	Mem586[esp_585:word32] = Mem501[ebp_131 - 0x0000005C:word32]
	esp_132 = esp_585 + 0x00000004
	ebx_128 = fn10020594(edi_583, ebp_131, es, ds, dwArg00, out esi_451, out edi_124)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002459C:
	word32 esi_487
	fn1000C640(ebp_131 - 0x0000005C, ebx_128, esi_451, edi_124, es, ds, out edx_108, out esi_487)
	word32 eax_489 = Mem462[ebp_131 - 0x00000070:word32]
	Mem492[ebp_131 - 0x00000070:word32] = eax_489 + 0x00000001
	eax_109 = eax_489 + 0x00000001
	branch eax_489 + 0x00000001 <u Mem492[ebp_131 - 0x00000074:word32] l10024399
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245B4:
	dl_107 = Mem0[ebp_131 - 0x0000005D:byte]
	esi_105 = Mem0[ebp_131 - 0x00000078:word32]
	Mem449[ebp_131 - 0x00000064:word32] = ebx_128
	edx_108 = DPB(edx_108, dl_107, 0) (alias)
// DataOut: cs dl ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245BD:
	Mem134[ebp_131 - 0x00000070:word32] = 0x00000000
	word32 ecx_133 = 0x00000000
	branch Mem134[ebp_131 - 0x00000074:word32] <=u 0x00000000 l1002467C
// DataOut: cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245CB:
	byte bl_177 = Mem134[ebp_131 - 0x00000065:byte]
	word32 ebx_178 = DPB(ebx_128, bl_177, 0)
	word32 esi_179 = Mem134[ebp_131 - 0x00000080:word32]
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000005 -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):ecx -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245D1:
	branch dl_107 == 0x00 l100245DD
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245D5:
	branch bl_177 != 0x00 l10024676
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245DD:
	word32 eax_222 = Mem134[esi_179 + ecx_133 * 0x00000004:word32]
	branch Mem134[eax_222 + 0x00000004:word32] == 0x00000002 l100245EC
// DataOut: bl cs dl ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245E6:
	branch Mem134[eax_222 + 0x00000004:word32] != 0x00000001 l100245FA
// DataOut: bl cs dl ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245EC:
	branch dl_107 != 0x00 l100245FA
// DataOut: bl cs dl ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245FA:
	branch Mem134[eax_222 + 0x00000004:word32] != 0x00000006 l10024669
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024600:
	branch bl_177 != 0x00 l10024669
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024604:
	Mem256[ebp_131 - 0x0000005C:word32] = Mem134[ebp_131 - 0x0000005C:word32] & 0x00000000
	Mem262[ebp_131 - 0x00000080:word32] = ebp_131 - 0x0000005C
	word32 esi_263
	word32 edi_264
	word32 eax_265 = fn1000EF25(ebp_131 - 0x00000080, edx_108, ebx_178, esi_179, es, ds, out esi_263, out edi_264)
	word32 esp_267 = esp_132 - 0x00000004
	Mem268[esp_267:word32] = eax_265
	Mem271[esp_267 - 0x00000004:word32] = Mem268[ebp_131 - 0x00000070:word32]
	Mem274[esp_267 - 0x00000008:word32] = Mem271[ebp_131 - 0x00000084:word32]
	word32 esp_275
	word32 edi_276
	word32 ebp_277
	byte SCZO_278
	word32 eax_279
	byte SZO_280
	byte C_281
	word32 ebx_282
	word32 esi_283
	word32 ecx_284
	word32 edx_285
	byte S_286
	byte al_287
	byte dl_288
	byte CZ_289
	bcuiposr0 None_290
	byte Z_291
	byte bl_292
	selector es_293
	selector ds_294
	call Mem274[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_223,bl_187,bLoc61_112,bLoc69_106,C_258,CZ_183,dl_185,ds_180,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_265,ebp_195,ebx_191,ecx_266,edi_264,edx_188,es_181,esi_263,esp_273,None_182,S_184,SCZO_250,SZO_257,Z_253
		defs: al_287,bl_292,C_281,CZ_289,dl_288,ds_294,eax_279,ebp_277,ebx_282,ecx_284,edi_276,edx_285,es_293,esi_283,esp_275,None_290,S_286,SCZO_278,SZO_280,Z_291
	word32 edi_296
	byte SCZO_298
	word32 eax_299
	byte SZO_300
	byte C_301
	word32 ecx_304
	word32 edx_305
	byte S_306
	byte al_307
	byte dl_308
	byte CZ_309
	bcuiposr0 None_310
	byte Z_311
	word32 esi_303
	call Mem274[edi_276 + 0x00000018:word32] (retsize: 4; depth: 4)
		uses: al_287,bl_292,bLoc61_112,bLoc69_106,C_281,CZ_289,dl_288,ds_294,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_279,ebp_277,ebx_282,ecx_284,edi_276,edx_285,es_293,esi_283,esp_275,None_290,S_286,SCZO_278,SZO_280,Z_291
		defs: al_307,bl_312,C_301,CZ_309,dl_308,ds_314,eax_299,ebp_297,ebx_302,ecx_304,edi_296,edx_305,es_313,esi_303,esp_295,None_310,S_306,SCZO_298,SZO_300,Z_311
	branch eax_299 < 0x00000000 l10024655
// DataOut: bl cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024655:
	edi_124 = Mem274[ebp_131 - 0x00000084:word32]
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024632:
	word32 eax_341 = Mem274[ebp_131 - 0x0000005C:word32]
	Mem343[esp_132 - 0x00000004:word32] = eax_341
	word32 esp_347
	word32 edi_348
	word32 ebp_349
	byte SCZO_350
	word32 eax_351
	byte SZO_352
	byte C_353
	word32 ebx_354
	word32 esi_355
	word32 ecx_356
	word32 edx_357
	byte S_358
	byte al_359
	byte dl_360
	byte CZ_361
	bcuiposr0 None_362
	byte Z_363
	byte bl_364
	selector es_365
	selector ds_366
	call Mem343[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_307,bl_312,bLoc61_112,bLoc69_106,C_317,CZ_309,dl_308,ds_314,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_341,ebp_297,ebx_302,ecx_346,edi_345,edx_305,es_313,esi_303,esp_342,None_310,S_316,SCZO_298,SZO_315,Z_311
		defs: al_359,bl_364,C_353,CZ_361,dl_360,ds_366,eax_351,ebp_349,ebx_354,ecx_356,edi_348,edx_357,es_365,esi_355,esp_347,None_362,S_358,SCZO_350,SZO_352,Z_363
	word32 edi_368
	byte SCZO_370
	word32 eax_371
	byte SZO_372
	byte C_373
	word32 ebx_374
	word32 ecx_376
	word32 edx_377
	byte S_378
	byte al_379
	byte dl_380
	byte CZ_381
	bcuiposr0 None_382
	byte Z_383
	byte bl_384
	call edi_348 (retsize: 4; depth: 4)
		uses: al_359,bl_364,bLoc61_112,bLoc69_106,C_353,CZ_361,dl_360,ds_366,dwLoc04_6,dwLoc08_12,dwLoc68_51,dwLoc70_15,dwLoc74_113,dwLoc78_33,dwLoc7C_111,dwLoc80_35,dwLoc84_30,dwLoc88_34,dwLoc8C_21,dwLoc90_24,dwLoc94_26,dwLoc98_42,eax_351,ebp_349,ebx_354,ecx_356,edi_348,edx_357,es_365,esi_355,esp_347,None_362,S_358,SCZO_350,SZO_352,Z_363
		defs: al_379,bl_384,C_373,CZ_381,dl_380,ds_386,eax_371,ebp_369,ebx_374,ecx_376,edi_368,edx_377,es_385,esi_375,esp_367,None_382,S_378,SCZO_370,SZO_372,Z_383
	edi_124 = Mem343[ebp_131 - 0x00000084:word32]
	Mem392[edi_124 + 0x00000060:word32] = Mem343[ebp_131 - 0x00000070:word32]
	bl_177 = bl_384 + 0x01
	ebx_178 = DPB(ebx_374, bl_384 + 0x01, 0) (alias)
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002465B:
	word32 edx_335
	fn1000C640(ebp_131 - 0x0000005C, ebx_178, esi_303, edi_124, es, ds, out edx_335, out esi_179)
	dl_107 = Mem274[ebp_131 - 0x0000005D:byte]
	ecx_133 = Mem274[ebp_131 - 0x00000070:word32]
	edx_108 = DPB(edx_335, dl_107, 0) (alias)
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100245F0:
	dl_107 = dl_107 + 0x01
	Mem401[edi_124 + 0x00000064:word32] = ecx_133
	Mem402[ebp_131 - 0x0000005D:byte] = dl_107
	edx_108 = DPB(edx_108, dl_107, 0) (alias)
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024669:
	ecx_133 = ecx_133 + 0x00000001
	Mem245[ebp_131 - 0x00000070:word32] = ecx_133
	branch ecx_133 <u Mem245[ebp_131 - 0x00000074:word32] l100245D1
// DataOut: bl cs dl ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024676:
	esi_105 = Mem134[ebp_131 - 0x00000078:word32]
	ebx_128 = Mem134[ebp_131 - 0x00000064:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002467C:
	branch esi_105 == 0x00000000 l1002468D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10024680:
	word32 ecx_166 = Mem134[ebp_131 - 0x0000006C:word32]
	Mem169[esp_132 - 0x00000004:word32] = edi_124
	ebx_128 = fn10023E2E(ecx_166, esi_105, ebp_131, es, ds, dwArg00, out esi_105, out edi_124)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002468D:
	word32 edx_163
	fn1000C640(ebp_131 - 0x00000078, ebx_128, esi_105, edi_124, es, ds, out edx_163, out esi_164)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> al:<invalid> esi:<invalid> dl:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10024695:
	word32 edx_83
	word32 esi_84
	fn1000C640(ebp_131 - 0x0000006C, ebx_128, esi_164, edi_124, es, ds, out edx_83, out esi_84)
	word32 esp_89 = esp_132 + 0x00000004
	word32 ecx_97
	return fn1002F420(ebx_128, Mem0[ebp_131 - 0x00000004:word32] ^ ebp_131, edx_83, Mem0[esp_89 + 0x00000004:word32], ebp_131, Mem0[esp_89:word32], Mem0[esp_132:word32], es, ds, out ecx_97)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002432E_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> dl:<invalid> bl:<invalid> ax:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):edx -116(fp):<invalid> -112(fp):<invalid> -105(fp):<invalid> -104(fp):<invalid> -97(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100246B2(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn100246B2_entry:
	*edxOut = edx
// DataOut: cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100246B2:
	word32 esi_151
	Mem26[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	word32 esi_33
	word32 edi_153
	word32 ebx_155
	word32 ebp_147
	word32 eax_35 = fn1002FF64(ebx, edx, edi, out ebx_155, out ebp_147, out esi_33, out edi_153)
	word32 esp_156 = fp - 0x00000018
	branch eax_35 != 0x00000000 l100246EE
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l100246EE:
	Mem77[fp - 0x0000001C:word32] = ebx_155
	Mem79[fp - 0x00000020:word32] = edi_153
	word32 eax_81 = fn100255C6(eax_35, edx, es, ds)
	word32 ecx_82 = Mem79[ebp_147 + 0x00000008:word32]
	Mem85[ebp_147 - 0x00000010:word32] = eax_81
	Mem87[fp - 0x00000024:word32] = 0xFFFFFFFF
	byte dl_88 = Mem87[ecx_82:byte]
	Mem92[eax_81 + 0x00000020:word32] = Mem87[esi_33:word32]
	Mem95[eax_81 + 0x00000024:word32] = Mem92[esi_33 + 0x00000004:word32]
	Mem102[eax_81 + 0x00000034:word32] = Mem95[esi_33 + 0x0000000C:word32]
	Mem110[eax_81 + 0x00000038:word32] = Mem102[esi_33 + 0x00000010:word32]
	Mem114[eax_81 + 0x0000003C:word32] = Mem110[esi_33 + 0x00000014:word32]
	Mem118[eax_81 + 0x00000040:word32] = Mem114[esi_33 + 0x00000018:word32]
	Mem121[eax_81 + 0x00000098:word32] = ((word32) (dl_88 == 0x00) - 0x00000001 & 0x00000081) + 0x0000007F
	Mem125[fp - 0x00000028:word32] = Mem121[Mem121[ebp_147 - 0x00000008:word32] + 0x00000008:word32]
	word32 edx_128
	word32 eax_129 = fn1000F30D(eax_81 + 0x00000028, dwArg00, dwArg04, out edx_128)
	word32 ebx_142 = eax_81
	word32 edi_120 = eax_81 + 0x00000044
	word32 esp_130 = fp - 0x00000020
	word32 esi_131 = eax_129
	branch eax_129 < 0x00000000 l10024759
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x000000A0 -28(fp):0x10002F5C -24(fp):esi -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l10024742:
	Mem159[fp - 0x00000024:word32] = eax_81
	word32 esp_162
	word32 edi_163
	word32 ebp_164
	byte SCZO_165
	word32 eax_166
	byte SZO_167
	byte C_168
	word32 esi_169
	word32 ecx_170
	word32 edx_171
	byte Z_172
	word32 ebx_173
	byte dl_174
	byte al_175
	byte S_176
	selector es_177
	selector ds_178
	call Mem159[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_99,C_134,dl_88,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_24,dwLoc10_29,dwLoc18_15,dwLoc1C_21,dwLoc20_23,eax_157,ebp_32,ebx_83,ecx_161,edi_120,edx_128,es,esi_160,esp_158,S_133,SCZO_108,SZO_132,Z_97
		defs: al_175,C_168,dl_174,ds_178,eax_166,ebp_164,ebx_173,ecx_170,edi_163,edx_171,es_177,esi_169,esp_162,S_176,SCZO_165,SZO_167,Z_172
	byte SCZO_182
	word32 eax_183
	byte SZO_184
	byte C_185
	word32 esi_186
	word32 ecx_187
	word32 edx_188
	byte Z_189
	byte dl_191
	byte al_192
	byte S_193
	call esi_169 (retsize: 4; depth: 4)
		uses: al_175,C_168,dl_174,ds_178,dwLoc04_6,dwLoc08_12,dwLoc0C_24,dwLoc10_29,dwLoc18_15,dwLoc1C_21,dwLoc20_23,eax_166,ebp_164,ebx_173,ecx_170,edi_163,edx_171,es_177,esi_169,esp_162,S_176,SCZO_165,SZO_167,Z_172
		defs: al_192,C_185,dl_191,ds_195,eax_183,ebp_181,ebx_190,ecx_187,edi_180,edx_188,es_194,esi_186,esp_179,S_193,SCZO_182,SZO_184,Z_189
	Mem200[Mem159[ebp_147 - 0x0000000C:word32]:word32] = ebx_142
	esi_131 = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> dl:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l10024759:
	fn1000C640(ebp_147 - 0x00000010, ebx_142, esi_131, edi_120, es, ds, out edx, out esi_151)
	word32 esp_154 = esp_130 + 0x00000004
	edi_153 = Mem125[esp_130:word32]
	ebx_155 = Mem125[esp_154:word32]
	esp_156 = esp_154 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> dl:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l100246E7:
	esi_151 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x000000A0 -28(fp):0x10002F5C -24(fp):esi -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l10024763:
	word32 ecx_63
	return fn1002F420(esi_151, Mem26[ebp_147 - 0x00000004:word32] ^ ebp_147, edx, ebx_155, ebp_147, Mem26[esp_156:word32], edi_153, es, ds, out ecx_63)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> dl:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn100246B2_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> dl:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):<invalid> -16(fp):ecx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



void fn10024776(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn10024776_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10024776:
	Mem12[ecx:word32] = 0x10001AD8
	Mem13[ecx + 0x00000004:word32] = 0x10001AB4
	word32 ecx_17
	word32 edx_18
	word32 esi_19
	fn1000F276(ecx + 0x00000024, ebx, esi, ecx, es, ds, out ecx_17, out edx_18, out esi_19)
	Mem21[ecx + 0x0000001C:word32] = 0xC0000001
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002479D_thunk_fn1000F23B:
	word32 edx_28
	word32 ebp_29
	fn1000F23B(ecx + 0x00000004, ebx, ebp, esi, edi, es, ds, out edx_28, out ebp_29)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ecx:<invalid> esi:esi eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn10024776_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ecx:<invalid> esi:<invalid> ebp:<invalid> eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn100248A3(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn100248A3_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100248A3:
	word32 edx_16
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001A9C
	Mem22[ecx + 0x00000004:word32] = 0x10001AB4
	branch Mem0[0x10031478:word32] == 0x00000000 l100248D6
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100248CF:
	__lock()
	Mem42[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l100248D6:
	Mem24[ecx:word32] = 0x10001AD8
	Mem27[ecx + 0x00000004:word32] = 0x10001AB4
	InitializeSRWLock(ecx + 0x00000020)
	Mem30[ecx + 0x00000024:word32] = Mem27[ecx + 0x00000024:word32] & 0x00000000
	return ecx
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn100248A3_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi



void fn100248F5(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn100248F5_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100248F5:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem25[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	AcquireSRWLockShared(ecx + 0x00000020)
	word32 ebp_120 = fp - 0x00000004
	word32 ebx_125 = ecx
	word32 edi_119 = ecx + 0x00000020
	word32 esp_118 = fp - 0x00000014
	word32 esi_38 = (0x00000000 - (-Mem25[ecx + 0x00000024:word32] == 0x00000000) & 0x7FFFBFFB) + 0x80004005
	branch Mem25[ecx + 0x00000024:word32] == 0x00000000 l10024954
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l10024933:
	branch Mem25[ecx + 0x00000024:word32] == 0x00000000 l1002494A
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx + 0x00000020 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> -24(fp):ecx + 0x00000020 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1002493A:
	word32 esp_104
	word32 edi_105
	word32 ebp_106
	word32 ecx_107
	word32 eax_108
	byte SZO_109
	byte C_110
	word32 ebx_111
	word32 esi_112
	byte SCZO_113
	byte Z_114
	word32 edx_115
	selector es_116
	selector ds_117
	call Mem25[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: C_82,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_23,dwLoc14_28,dwLoc18_101,eax_99,ebp_7,ebx_20,ecx_103,edi_29,edx,es,esi_102,esp_100,SCZO_39,SZO_80,Z_81
		defs: C_110,ds_117,eax_108,ebp_106,ebx_111,ecx_107,edi_105,edx_115,es_116,esi_112,esp_104,SCZO_113,SZO_109,Z_114
	word32 ecx_121
	word32 eax_122
	byte SZO_123
	byte C_124
	word32 esi_126
	byte SCZO_127
	byte Z_128
	call esi_112 (retsize: 4; depth: 4)
		uses: C_110,ds_117,dwLoc04_6,dwLoc08_14,dwLoc0C_19,dwLoc10_23,dwLoc14_28,dwLoc18_101,eax_108,ebp_106,ebx_111,ecx_107,edi_105,edx_115,es_116,esi_112,esp_104,SCZO_113,SZO_109,Z_114
		defs: C_124,ds_131,eax_122,ebp_120,ebx_125,ecx_121,edi_119,edx_129,es_130,esi_126,esp_118,SCZO_127,SZO_123,Z_128
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx + 0x00000020 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -24(fp):ecx + 0x00000020 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1002494A:
	Mem98[dwArg04:word32] = Mem25[ebx_125 + 0x00000024:word32]
	esi_38 = 0x00000000
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000020 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10024954:
	branch edi_119 == 0x00000000 l1002495F
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000020 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10024958:
	word32 esp_76 = esp_118 - 0x00000004
	Mem77[esp_76:word32] = edi_119
	ReleaseSRWLockShared(Mem77[esp_76:PSRWLOCK])
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000020 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002495F:
	word32 esp_63 = esp_118 + 0x00000004
	word32 ecx_71
	fn1002F420(esi_38, eax_13 ^ fp - 0x00000004, edx, Mem25[esp_63 + 0x00000004:word32], ebp_120, Mem25[esp_63:word32], Mem25[esp_118:word32], es, ds, out ecx_71)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000020 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn100248F5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10024A2F(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0008(32)
fn10024A2F_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(32) Stack +0008(32)

l10024A2F:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem31[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
	word32 esp_63
	word32 edi_64
	word32 ebp_65
	byte SCZO_66
	word32 eax_67
	byte SZO_68
	byte C_69
	word32 ebx_70
	word32 esi_71
	word32 edx_72
	word32 ecx_73
	byte S_74
	byte Z_75
	bcuiposr0 None_76
	selector es_77
	selector ds_78
	call Mem31[0x100323BC:word32] (retsize: 4; depth: 64)
		uses: C_33,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_15,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_36,ebp_7,ebx_21,ecx_62,edi_60,edx_37,esi_61,esp_45,SZO_32
		defs: C_69,ds_78,eax_67,ebp_65,ebx_70,ecx_73,edi_64,edx_72,es_77,esi_71,esp_63,None_76,S_74,SCZO_66,SZO_68,Z_75
	word32 edi_80
	byte SCZO_82
	word32 eax_83
	byte SZO_84
	byte C_85
	word32 ebx_86
	word32 esi_87
	word32 ecx_89
	byte S_90
	byte Z_91
	bcuiposr0 None_92
	selector ds_101
	selector es_102
	word32 edx_105
	word32 ebp_111
	word32 esp_112
	call esi_71 (retsize: 4; depth: 4)
		uses: C_69,ds_78,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_15,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_67,ebp_65,ebx_70,ecx_73,edi_64,edx_72,es_77,esi_71,esp_63,None_76,S_74,SCZO_66,SZO_68,Z_75
		defs: C_85,ds_94,eax_83,ebp_81,ebx_86,ecx_89,edi_80,edx_88,es_93,esi_87,esp_79,None_92,S_90,SCZO_82,SZO_84,Z_91
	word32 edi_107 = eax_83
	branch eax_83 < 0x00000000 l10024ABA
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32) Local -0024(32)

l10024A75:
	Mem192[esp_112 - 0x00000004:word32] = 0x00000000
	Mem194[esp_112 - 0x00000008:word32] = 0x00000000
	Mem196[esp_112 - 0x0000000C:word32] = 0x00000000
	Mem198[esp_112 - 0x0000000C:real64] = 0.0
	Mem200[esp_112 - 0x00000010:word32] = 0x00000000
	Mem202[esp_112 - 0x00000014:word32] = 0x00000000
	Mem205[esp_112 - 0x00000018:word32] = fp - 0x0000001C
	Mem208[esp_112 - 0x0000001C:word32] = edx
	Mem211[esp_112 - 0x00000020:word32] = dwLoc20 & 0x00000000
	word32 esp_212
	word32 edi_213
	word32 ebp_214
	byte SCZO_215
	word32 eax_216
	byte SZO_217
	byte C_218
	word32 ebx_219
	word32 esi_220
	word32 edx_221
	word32 ecx_222
	byte S_223
	byte Z_224
	bcuiposr0 None_225
	selector es_226
	selector ds_227
	call Mem211[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_189,ds_94,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_15,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_190,ebp_81,ebx_86,ecx_209,edi_95,edx_88,es_93,esi_197,esp_210,None_92,S_97,SCZO_82,SZO_188,Z_91
		defs: C_218,ds_227,eax_216,ebp_214,ebx_219,ecx_222,edi_213,edx_221,es_226,esi_220,esp_212,None_225,S_223,SCZO_215,SZO_217,Z_224
	word32 edi_229
	byte SCZO_231
	word32 eax_232
	byte SZO_233
	byte C_234
	word32 ebx_235
	word32 esi_236
	word32 ecx_238
	byte S_239
	byte Z_240
	bcuiposr0 None_241
	call Mem211[esi_220 + 0x00000020:word32] (retsize: 4; depth: 4)
		uses: C_218,ds_227,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_15,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_216,ebp_214,ebx_219,ecx_222,edi_213,edx_221,es_226,esi_220,esp_212,None_225,S_223,SCZO_215,SZO_217,Z_224
		defs: C_234,ds_243,eax_232,ebp_230,ebx_235,ecx_238,edi_229,edx_237,es_242,esi_236,esp_228,None_241,S_239,SCZO_231,SZO_233,Z_240
	edi_107 = eax_232
	branch eax_232 < 0x00000000 l10024ABA
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -60(fp):ecx -56(fp):fp - 0x00000020 -52(fp):edi -48(fp):esi -44(fp):ebx -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32)

l10024AA0:
	Mem250[esp_112 - 0x00000004:word32] = ebx_235
	Mem252[esp_112 - 0x00000008:word32] = 0x100057D0
	Mem254[esp_112 - 0x0000000C:word32] = dwLoc20 & 0x00000000
	word32 esp_258
	word32 edi_259
	word32 ebp_260
	byte SCZO_261
	word32 eax_262
	byte SZO_263
	byte C_264
	word32 ebx_265
	word32 esi_266
	word32 edx_267
	word32 ecx_268
	byte S_269
	byte Z_270
	bcuiposr0 None_271
	selector es_272
	selector ds_273
	call Mem254[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_247,ds_243,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_15,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_248,ebp_230,ebx_235,ecx_257,edi_244,edx_237,es_242,esi_256,esp_253,None_241,S_246,SCZO_231,SZO_245,Z_240
		defs: C_264,ds_273,eax_262,ebp_260,ebx_265,ecx_268,edi_259,edx_267,es_272,esi_266,esp_258,None_271,S_269,SCZO_261,SZO_263,Z_270
	word32 edi_275
	byte SCZO_277
	word32 eax_278
	byte SZO_279
	byte C_280
	word32 ebx_281
	word32 esi_282
	word32 ecx_284
	byte S_285
	byte Z_286
	bcuiposr0 None_287
	call esi_266 (retsize: 4; depth: 4)
		uses: C_264,ds_273,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_15,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_262,ebp_260,ebx_265,ecx_268,edi_259,edx_267,es_272,esi_266,esp_258,None_271,S_269,SCZO_261,SZO_263,Z_270
		defs: C_280,ds_289,eax_278,ebp_276,ebx_281,ecx_284,edi_275,edx_283,es_288,esi_282,esp_274,None_287,S_285,SCZO_277,SZO_279,Z_286
	edi_107 = eax_278
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -60(fp):ecx -56(fp):fp - 0x00000020 -52(fp):edi -48(fp):esi -44(fp):ebx -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32)

l10024ABA:
	branch (dwLoc20 & 0x00000000) == 0x00000000 l10024AD5
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -60(fp):ecx -56(fp):fp - 0x00000020 -52(fp):edi -48(fp):esi -44(fp):ebx -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32)

l10024AC1:
	word32 esp_150 = esp_112 - 0x00000004
	Mem151[esp_150:word32] = dwLoc20 & 0x00000000
	word32 esp_154
	word32 edi_155
	word32 ebp_156
	byte SCZO_157
	word32 eax_158
	byte SZO_159
	byte C_160
	word32 ebx_161
	word32 esi_162
	word32 edx_163
	word32 ecx_164
	byte S_165
	byte Z_166
	bcuiposr0 None_167
	selector es_168
	selector ds_169
	call Mem151[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_148,ds_101,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_146,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_149,ebp_111,ebx_109,ecx_153,edi_107,edx_105,es_102,esi_152,esp_150,None_103,S_104,SCZO_106,SZO_147,Z_115
		defs: C_160,ds_169,eax_158,ebp_156,ebx_161,ecx_164,edi_155,edx_163,es_168,esi_162,esp_154,None_167,S_165,SCZO_157,SZO_159,Z_166
	byte SCZO_173
	word32 eax_174
	byte SZO_175
	byte C_176
	word32 ebx_177
	word32 esi_178
	word32 ecx_180
	byte S_181
	byte Z_182
	bcuiposr0 None_183
	call esi_162 (retsize: 4; depth: 4)
		uses: C_160,ds_169,dwLoc04_6,dwLoc08_12,dwLoc10_59,dwLoc14_54,dwLoc18_49,dwLoc1C_40,dwLoc20_146,dwLoc24_29,dwLoc2C_19,dwLoc30_24,dwLoc34_26,dwLoc38_44,dwLoc3C_46,eax_158,ebp_156,ebx_161,ecx_164,edi_155,edx_163,es_168,esi_162,esp_154,None_167,S_165,SCZO_157,SZO_159,Z_166
		defs: C_176,ds_185,eax_174,ebp_172,ebx_177,ecx_180,edi_171,edx_179,es_184,esi_178,esp_170,None_183,S_181,SCZO_173,SZO_175,Z_182
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -60(fp):ecx -56(fp):fp - 0x00000020 -52(fp):edi -48(fp):esi -44(fp):ebx -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10024AD5:
	word32 esp_131 = esp_112 + 0x00000004
	word32 ecx_139
	return fn1002F420(edi_107, eax_11 ^ fp - 0x00000004, edx_105, Mem31[esp_131 + 0x00000004:word32], ebp_111, Mem31[esp_131:word32], Mem31[esp_112:word32], es_102, ds_101, out ecx_139)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -60(fp):ecx -56(fp):fp - 0x00000020 -52(fp):edi -48(fp):esi -44(fp):ebx -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10024A2F_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> -60(fp):ecx -56(fp):fp - 0x00000020 -52(fp):edi -48(fp):esi -44(fp):ebx -36(fp):edx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10024AEA(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)
fn10024AEA_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -0050(32) Stack +0004(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32)

l10024AEA:
	word32 esp_68
	word32 edi_69
	word32 ebp_70
	byte SCZO_71
	word32 eax_72
	byte SZO_73
	byte C_74
	word32 ebx_75
	word32 esi_76
	word32 edx_77
	word32 ecx_78
	byte S_79
	byte Z_80
	bcuiposr0 None_81
	selector es_82
	selector ds_83
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 116)
		uses: C_33,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc40_26,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_35,ebp_7,ebx_22,ecx_67,edi_65,edx,esi_66,esp_55,SZO_32
		defs: C_74,ds_83,eax_72,ebp_70,ebx_75,ecx_78,edi_69,edx_77,es_82,esi_76,esp_68,None_81,S_79,SCZO_71,SZO_73,Z_80
	word32 edi_85
	byte SCZO_87
	word32 eax_88
	byte SZO_89
	byte C_90
	word32 ebx_91
	word32 esi_92
	word32 ecx_94
	byte S_95
	byte Z_96
	bcuiposr0 None_97
	selector ds_118
	selector es_119
	word32 edx_122
	word32 ebp_128
	word32 esp_129
	call Mem0[esi_76 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: C_74,ds_83,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc40_26,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_72,ebp_70,ebx_75,ecx_78,edi_69,edx_77,es_82,esi_76,esp_68,None_81,S_79,SCZO_71,SZO_73,Z_80
		defs: C_90,ds_99,eax_88,ebp_86,ebx_91,ecx_94,edi_85,edx_93,es_98,esi_92,esp_84,None_97,S_95,SCZO_87,SZO_89,Z_96
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edi_100 = eax_88
	branch eax_88 < 0x00000000 l10024CB7
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -004C(32) Local -0050(32) Local -0054(32)

l10024B3D:
	Mem264[esp_129 - 0x00000004:word32] = fp - 0x0000003C
	Mem266[esp_129 - 0x00000008:word32] = edx
	word32 esp_270
	word32 edi_271
	word32 ebp_272
	byte SCZO_273
	word32 eax_274
	byte SZO_275
	byte C_276
	word32 ebx_277
	word32 esi_278
	word32 edx_279
	word32 ecx_280
	byte S_281
	byte Z_282
	bcuiposr0 None_283
	selector es_284
	selector ds_285
	call Mem266[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_103,ds_99,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_267,ebp_86,ebx_91,ecx_269,edi_100,edx_262,es_98,esi_268,esp_265,None_97,S_102,SCZO_87,SZO_101,Z_96
		defs: C_276,ds_285,eax_274,ebp_272,ebx_277,ecx_280,edi_271,edx_279,es_284,esi_278,esp_270,None_283,S_281,SCZO_273,SZO_275,Z_282
	word32 edi_287
	byte SCZO_289
	word32 eax_290
	byte SZO_291
	byte C_292
	word32 ebx_293
	word32 esi_294
	word32 ecx_296
	byte S_297
	byte Z_298
	bcuiposr0 None_299
	call esi_278 (retsize: 4; depth: 4)
		uses: C_276,ds_285,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_274,ebp_272,ebx_277,ecx_280,edi_271,edx_279,es_284,esi_278,esp_270,None_283,S_281,SCZO_273,SZO_275,Z_282
		defs: C_292,ds_301,eax_290,ebp_288,ebx_293,ecx_296,edi_287,edx_295,es_300,esi_294,esp_286,None_299,S_297,SCZO_289,SZO_291,Z_298
	edi_100 = eax_290
	branch eax_290 < 0x00000000 l10024CB7
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -64(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -004C(32) Local -0050(32) Local -0054(32)

l10024B5E:
	Mem309[esp_129 - 0x00000004:word32] = dwLoc48 & 0x00000000
	Mem311[esp_129 - 0x00000008:word32] = dwLoc40 & 0x00000000
	word32 esp_315
	word32 edi_316
	word32 ebp_317
	byte SCZO_318
	word32 eax_319
	byte SZO_320
	byte C_321
	word32 ebx_322
	word32 esi_323
	word32 edx_324
	word32 ecx_325
	byte S_326
	byte Z_327
	bcuiposr0 None_328
	selector es_329
	selector ds_330
	call Mem311[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_305,ds_301,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_306,ebp_288,ebx_293,ecx_314,edi_302,edx_295,es_300,esi_313,esp_310,None_299,S_304,SCZO_289,SZO_303,Z_298
		defs: C_321,ds_330,eax_319,ebp_317,ebx_322,ecx_325,edi_316,edx_324,es_329,esi_323,esp_315,None_328,S_326,SCZO_318,SZO_320,Z_327
	word32 edi_332
	byte SCZO_334
	word32 eax_335
	byte SZO_336
	byte C_337
	word32 ebx_338
	word32 esi_339
	word32 ecx_341
	byte S_342
	byte Z_343
	bcuiposr0 None_344
	call esi_323 (retsize: 4; depth: 4)
		uses: C_321,ds_330,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_319,ebp_317,ebx_322,ecx_325,edi_316,edx_324,es_329,esi_323,esp_315,None_328,S_326,SCZO_318,SZO_320,Z_327
		defs: C_337,ds_346,eax_335,ebp_333,ebx_338,ecx_341,edi_332,edx_340,es_345,esi_339,esp_331,None_344,S_342,SCZO_334,SZO_336,Z_343
	edi_100 = eax_335
	branch eax_335 < 0x00000000 l10024CB7
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -64(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -004C(32) Local -0050(32) Local -0054(32)

l10024B7E:
	Mem354[esp_129 - 0x00000004:word32] = fp - 0x0000004C
	Mem357[esp_129 - 0x00000008:word32] = fp - 0x00000050
	Mem360[esp_129 - 0x0000000C:word32] = ebx_338
	word32 esp_361
	word32 edi_362
	word32 ebp_363
	byte SCZO_364
	word32 eax_365
	byte SZO_366
	byte C_367
	word32 ebx_368
	word32 esi_369
	word32 edx_370
	word32 ecx_371
	byte S_372
	byte Z_373
	bcuiposr0 None_374
	selector es_375
	selector ds_376
	call Mem360[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_350,ds_346,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_355,ebp_333,ebx_338,ecx_358,edi_347,edx_340,es_345,esi_351,esp_359,None_344,S_349,SCZO_334,SZO_348,Z_343
		defs: C_367,ds_376,eax_365,ebp_363,ebx_368,ecx_371,edi_362,edx_370,es_375,esi_369,esp_361,None_374,S_372,SCZO_364,SZO_366,Z_373
	word32 edi_378
	byte SCZO_380
	word32 eax_381
	byte SZO_382
	byte C_383
	word32 ebx_384
	word32 esi_385
	word32 ecx_387
	byte S_388
	byte Z_389
	bcuiposr0 None_390
	call Mem360[esi_369 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: C_367,ds_376,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_365,ebp_363,ebx_368,ecx_371,edi_362,edx_370,es_375,esi_369,esp_361,None_374,S_372,SCZO_364,SZO_366,Z_373
		defs: C_383,ds_392,eax_381,ebp_379,ebx_384,ecx_387,edi_378,edx_386,es_391,esi_385,esp_377,None_390,S_388,SCZO_380,SZO_382,Z_389
	edi_100 = eax_381
	branch eax_381 < 0x00000000 l10024CB7
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -64(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -004C(32) Local -0050(32) Local -0054(32)

l10024B9F:
	Mem400[esp_129 - 0x00000004:word32] = edx
	Mem404[esp_129 - 0x00000008:word32] = dwLoc50
	Mem407[esp_129 - 0x0000000C:word32] = dwLoc40 & 0x00000000
	word32 esp_410
	word32 edi_411
	word32 ebp_412
	byte SCZO_413
	word32 eax_414
	byte SZO_415
	byte C_416
	word32 ebx_417
	word32 esi_418
	word32 edx_419
	word32 ecx_420
	byte S_421
	byte Z_422
	bcuiposr0 None_423
	selector es_424
	selector ds_425
	call Mem407[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_396,ds_392,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_397,ebp_379,ebx_384,ecx_409,edi_393,edx_386,es_391,esi_408,esp_406,None_390,S_395,SCZO_380,SZO_394,Z_389
		defs: C_416,ds_425,eax_414,ebp_412,ebx_417,ecx_420,edi_411,edx_419,es_424,esi_418,esp_410,None_423,S_421,SCZO_413,SZO_415,Z_422
	word32 edi_427
	byte SCZO_429
	word32 eax_430
	byte SZO_431
	byte C_432
	word32 ebx_433
	word32 esi_434
	word32 ecx_436
	byte S_437
	byte Z_438
	bcuiposr0 None_439
	call esi_418 (retsize: 4; depth: 4)
		uses: C_416,ds_425,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20,dwLoc24,dwLoc28,dwLoc2C,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_414,ebp_412,ebx_417,ecx_420,edi_411,edx_419,es_424,esi_418,esp_410,None_423,S_421,SCZO_413,SZO_415,Z_422
		defs: C_432,ds_441,eax_430,ebp_428,ebx_433,ecx_436,edi_427,edx_435,es_440,esi_434,esp_426,None_439,S_437,SCZO_429,SZO_431,Z_438
	edi_100 = eax_430
	branch eax_430 < 0x00000000 l10024CB7
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -64(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -0054(32)

l10024BC2:
	Mem455[esp_129 - 0x00000004:word32] = fp - 0x0000002C
	Mem457[esp_129 - 0x00000008:word32] = dwLoc40 & 0x00000000
	word32 esp_472
	word32 edi_473
	word32 ebp_474
	byte SCZO_475
	word32 eax_476
	byte SZO_477
	byte C_478
	word32 ebx_479
	word32 esi_480
	word32 edx_481
	word32 ecx_482
	byte S_483
	byte Z_484
	bcuiposr0 None_485
	selector es_486
	selector ds_487
	call Mem457[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_445,ds_441,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_446,ebp_428,ebx_433,ecx_471,edi_468,edx_453,es_440,esi_470,esp_456,None_439,S_444,SCZO_429,SZO_443,Z_438
		defs: C_478,ds_487,eax_476,ebp_474,ebx_479,ecx_482,edi_473,edx_481,es_486,esi_480,esp_472,None_485,S_483,SCZO_475,SZO_477,Z_484
	word32 edi_489
	byte SCZO_491
	word32 eax_492
	byte SZO_493
	byte C_494
	word32 ebx_495
	word32 esi_496
	word32 ecx_498
	byte S_499
	byte Z_500
	bcuiposr0 None_501
	call esi_480 (retsize: 4; depth: 4)
		uses: C_478,ds_487,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_476,ebp_474,ebx_479,ecx_482,edi_473,edx_481,es_486,esi_480,esp_472,None_485,S_483,SCZO_475,SZO_477,Z_484
		defs: C_494,ds_503,eax_492,ebp_490,ebx_495,ecx_498,edi_489,edx_497,es_502,esi_496,esp_488,None_501,S_499,SCZO_491,SZO_493,Z_500
	edi_100 = eax_492
	branch eax_492 < 0x00000000 l10024CB7
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -64(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -0054(32)

l10024BED:
	word32 dwLoc44_509 = dwLoc44 & 0x00000000
	word32 ecx_513 = 0x00000000
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -0054(32)

l10024BF9:
	branch Mem457[fp - 0x0000002C + ecx_513 * 0x00000004:word32] != Mem457[(fp - 0x0000001C) + ecx_513 * 0x00000004:word32] l10024C33
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:fp - 0x0000001C ecx:<invalid> edx:fp - 0x0000002C -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -0054(32)

l10024C33:
	Mem784[esp_129 - 0x00000014:word32] = fp - 0x00000044
	Mem786[esp_129 - 0x00000010:word32] = dwArg0C
	Mem790[esp_129 - 0x00000018:word32] = ecx_513
	Mem793[esp_129 - 0x0000000C:word32] = dwArg10
	Mem797[esp_129 - 0x00000008:word32] = dwArg14
	Mem801[esp_129 - 0x00000004:word32] = dwArg18
	edi_100 = fn10024A2F(ecx, ebx_495, es_119, ds_118, dwArg04, dwArg08, dwArg0C, dwArg10, dwArg14, out edx_122)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:fp - 0x0000001C ecx:<invalid> edx:fp - 0x0000002C -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024C01:
	ecx_513 = ecx_513 + 0x00000001
	branch ecx_513 != 0x00000004 l10024BF9
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:fp - 0x0000001C ecx:<invalid> edx:fp - 0x0000002C -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32) Local -0054(32)

l10024C07:
	Mem700[esp_129 - 0x00000004:word32] = ebx_495
	word32 esp_703
	word32 edi_704
	word32 ebp_705
	byte SCZO_706
	word32 eax_707
	byte SZO_708
	byte C_709
	word32 ebx_710
	word32 esi_711
	word32 edx_712
	word32 ecx_713
	byte S_714
	byte Z_715
	bcuiposr0 None_716
	selector es_717
	selector ds_718
	call Mem700[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_515,ds_503,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_509,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_698,ebp_490,ebx_495,ecx_702,edi_504,edx_511,es_502,esi_701,esp_699,None_501,S_506,SCZO_696,SZO_514,Z_697
		defs: C_709,ds_718,eax_707,ebp_705,ebx_710,ecx_713,edi_704,edx_712,es_717,esi_711,esp_703,None_716,S_714,SCZO_706,SZO_708,Z_715
	byte SCZO_722
	word32 eax_723
	byte SZO_724
	byte C_725
	word32 ebx_726
	word32 esi_727
	word32 ecx_729
	byte S_730
	byte Z_731
	bcuiposr0 None_732
	call esi_711 (retsize: 4; depth: 4)
		uses: C_709,ds_718,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_509,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_707,ebp_705,ebx_710,ecx_713,edi_704,edx_712,es_717,esi_711,esp_703,None_716,S_714,SCZO_706,SZO_708,Z_715
		defs: C_725,ds_734,eax_723,ebp_721,ebx_726,ecx_729,edi_720,edx_728,es_733,esi_727,esp_719,None_732,S_730,SCZO_722,SZO_724,Z_731
	dwLoc44_509 = ebx_726
	branch (dwLoc44 & 0x00000000) == 0x00000000 l10024C50
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:fp - 0x0000001C ecx:<invalid> edx:fp - 0x0000002C -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024C21:
	Mem742[esp_129 - 0x00000004:word32] = dwLoc44 & 0x00000000
	word32 esp_745
	word32 edi_746
	word32 ebp_747
	byte SCZO_748
	word32 eax_749
	byte SZO_750
	byte C_751
	word32 ebx_752
	word32 esi_753
	word32 edx_754
	word32 ecx_755
	byte S_756
	byte Z_757
	bcuiposr0 None_758
	selector es_759
	selector ds_760
	call Mem742[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_739,ds_734,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_736,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_735,ebp_721,ebx_726,ecx_744,edi_720,edx_728,es_733,esi_743,esp_741,None_732,S_730,SCZO_722,SZO_737,Z_738
		defs: C_751,ds_760,eax_749,ebp_747,ebx_752,ecx_755,edi_746,edx_754,es_759,esi_753,esp_745,None_758,S_756,SCZO_748,SZO_750,Z_757
	byte SCZO_764
	word32 eax_765
	byte SZO_766
	byte C_767
	word32 ebx_768
	word32 esi_769
	word32 ecx_771
	byte S_772
	byte Z_773
	bcuiposr0 None_774
	call esi_753 (retsize: 4; depth: 4)
		uses: C_751,ds_760,dwLoc04_6,dwLoc08_12,dwLoc10_64,dwLoc14_59,dwLoc18_50,dwLoc1C_38,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_736,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_749,ebp_747,ebx_752,ecx_755,edi_746,edx_754,es_759,esi_753,esp_745,None_758,S_756,SCZO_748,SZO_750,Z_757
		defs: C_767,ds_776,eax_765,ebp_763,ebx_768,ecx_771,edi_762,edx_770,es_775,esi_769,esp_761,None_774,S_772,SCZO_764,SZO_766,Z_773
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024C50:
	branch edi_100 < 0x00000000 l10024C9C
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32) Local -001C(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024C54:
	word32 esp_611 = esp_129 - 0x00000004
	Mem612[esp_611:word32] = fp - 0x0000001C
	Mem615[esp_611 - 0x00000004:word32] = dwLoc44_509
	Mem618[esp_611 - 0x00000008:word32] = dwLoc40 & 0x00000000
	word32 esp_620
	word32 edi_621
	word32 ebp_622
	byte SCZO_623
	word32 eax_624
	byte SZO_625
	byte C_626
	word32 ebx_627
	word32 esi_628
	word32 edx_629
	word32 ecx_630
	byte S_631
	byte Z_632
	bcuiposr0 None_633
	selector es_634
	selector ds_635
	call Mem618[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_606,ds_521,dwLoc04_6,dwLoc08_12,dwLoc10_609,dwLoc14_607,dwLoc18_604,dwLoc1C_601,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_520,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_610,ebp_532,ebx_529,ecx_619,edi_527,edx_525,es_522,esi_616,esp_617,None_523,S_535,SCZO_526,SZO_605,Z_524
		defs: C_626,ds_635,eax_624,ebp_622,ebx_627,ecx_630,edi_621,edx_629,es_634,esi_628,esp_620,None_633,S_631,SCZO_623,SZO_625,Z_632
	word32 edi_637
	byte SCZO_639
	word32 eax_640
	byte SZO_641
	byte C_642
	word32 ebx_643
	word32 esi_644
	word32 ecx_646
	byte S_647
	byte Z_648
	bcuiposr0 None_649
	call Mem618[esi_628 + 0x0000002C:word32] (retsize: 4; depth: 4)
		uses: C_626,ds_635,dwLoc04_6,dwLoc08_12,dwLoc10_609,dwLoc14_607,dwLoc18_604,dwLoc1C_601,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_520,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_624,ebp_622,ebx_627,ecx_630,edi_621,edx_629,es_634,esi_628,esp_620,None_633,S_631,SCZO_623,SZO_625,Z_632
		defs: C_642,ds_651,eax_640,ebp_638,ebx_643,ecx_646,edi_637,edx_645,es_650,esi_644,esp_636,None_649,S_647,SCZO_639,SZO_641,Z_648
	edi_100 = eax_640
	branch eax_640 < 0x00000000 l10024C9C
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024C87:
	Mem658[esp_129 - 0x00000004:word32] = dwLoc40 & 0x00000000
	word32 esp_662
	word32 edi_663
	word32 ebp_664
	byte SCZO_665
	word32 eax_666
	byte SZO_667
	byte C_668
	word32 ebx_669
	word32 esi_670
	word32 edx_671
	word32 ecx_672
	byte S_673
	byte Z_674
	bcuiposr0 None_675
	selector es_676
	selector ds_677
	call Mem658[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_655,ds_651,dwLoc04_6,dwLoc08_12,dwLoc10_609,dwLoc14_607,dwLoc18_604,dwLoc1C_601,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_520,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_656,ebp_638,ebx_643,ecx_661,edi_652,edx_645,es_650,esi_660,esp_657,None_649,S_654,SCZO_639,SZO_653,Z_648
		defs: C_668,ds_677,eax_666,ebp_664,ebx_669,ecx_672,edi_663,edx_671,es_676,esi_670,esp_662,None_675,S_673,SCZO_665,SZO_667,Z_674
	word32 edi_679
	byte SCZO_681
	word32 eax_682
	byte SZO_683
	byte C_684
	word32 ebx_685
	word32 esi_686
	word32 ecx_688
	byte S_689
	byte Z_690
	bcuiposr0 None_691
	call esi_670 (retsize: 4; depth: 4)
		uses: C_668,ds_677,dwLoc04_6,dwLoc08_12,dwLoc10_609,dwLoc14_607,dwLoc18_604,dwLoc1C_601,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_520,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_666,ebp_664,ebx_669,ecx_672,edi_663,edx_671,es_676,esi_670,esp_662,None_675,S_673,SCZO_665,SZO_667,Z_674
		defs: C_684,ds_693,eax_682,ebp_680,ebx_685,ecx_688,edi_679,edx_687,es_692,esi_686,esp_678,None_691,S_689,SCZO_681,SZO_683,Z_690
	edi_100 = eax_682
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024C9C:
	branch dwLoc44_509 == 0x00000000 l10024CB7
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32) Local -0044(32) Local -0048(32)

l10024CA3:
	word32 esp_562 = esp_129 - 0x00000004
	Mem563[esp_562:word32] = dwLoc44_509
	word32 esp_566
	word32 edi_567
	word32 ebp_568
	byte SCZO_569
	word32 eax_570
	byte SZO_571
	byte C_572
	word32 ebx_573
	word32 esi_574
	word32 edx_575
	word32 ecx_576
	byte S_577
	byte Z_578
	bcuiposr0 None_579
	selector es_580
	selector ds_581
	call Mem563[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_560,ds_541,dwLoc04_6,dwLoc08_12,dwLoc10_540,dwLoc14_539,dwLoc18_538,dwLoc1C_537,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_558,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_561,ebp_551,ebx_549,ecx_565,edi_547,edx_545,es_542,esi_564,esp_562,None_543,S_544,SCZO_546,SZO_559,Z_555
		defs: C_572,ds_581,eax_570,ebp_568,ebx_573,ecx_576,edi_567,edx_575,es_580,esi_574,esp_566,None_579,S_577,SCZO_569,SZO_571,Z_578
	byte SCZO_585
	word32 eax_586
	byte SZO_587
	byte C_588
	word32 ebx_589
	word32 esi_590
	word32 ecx_592
	byte S_593
	byte Z_594
	bcuiposr0 None_595
	call esi_574 (retsize: 4; depth: 4)
		uses: C_572,ds_581,dwLoc04_6,dwLoc08_12,dwLoc10_540,dwLoc14_539,dwLoc18_538,dwLoc1C_537,dwLoc20_467,dwLoc24_463,dwLoc28_459,dwLoc2C_450,dwLoc40_26,dwLoc44_558,dwLoc48_31,dwLoc4C_47,dwLoc50,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_570,ebp_568,ebx_573,ecx_576,edi_567,edx_575,es_580,esi_574,esp_566,None_579,S_577,SCZO_569,SZO_571,Z_578
		defs: C_588,ds_597,eax_586,ebp_584,ebx_589,ecx_592,edi_583,edx_591,es_596,esi_590,esp_582,None_595,S_593,SCZO_585,SZO_587,Z_594
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32) Local -0048(32)

l10024CB7:
	branch (dwLoc48 & 0x00000000) == 0x00000000 l10024CD2
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32) Local -0048(32)

l10024CBE:
	word32 esp_225 = esp_129 - 0x00000004
	Mem226[esp_225:word32] = dwLoc48 & 0x00000000
	word32 esp_229
	word32 edi_230
	word32 ebp_231
	byte SCZO_232
	word32 eax_233
	byte SZO_234
	byte C_235
	word32 ebx_236
	word32 esi_237
	word32 edx_238
	word32 ecx_239
	byte S_240
	byte Z_241
	bcuiposr0 None_242
	selector es_243
	selector ds_244
	call Mem226[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_223,ds_118,dwLoc04_6,dwLoc08_12,dwLoc10_116,dwLoc14_115,dwLoc18_114,dwLoc1C_113,dwLoc20_112,dwLoc24_111,dwLoc28_110,dwLoc2C_109,dwLoc40_26,dwLoc44_117,dwLoc48_221,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_224,ebp_128,ebx_126,ecx_228,edi_124,edx_122,es_119,esi_227,esp_225,None_120,S_121,SCZO_123,SZO_222,Z_132
		defs: C_235,ds_244,eax_233,ebp_231,ebx_236,ecx_239,edi_230,edx_238,es_243,esi_237,esp_229,None_242,S_240,SCZO_232,SZO_234,Z_241
	byte SCZO_248
	word32 eax_249
	byte SZO_250
	byte C_251
	word32 ebx_252
	word32 esi_253
	word32 ecx_255
	byte S_256
	byte Z_257
	bcuiposr0 None_258
	call esi_237 (retsize: 4; depth: 4)
		uses: C_235,ds_244,dwLoc04_6,dwLoc08_12,dwLoc10_116,dwLoc14_115,dwLoc18_114,dwLoc1C_113,dwLoc20_112,dwLoc24_111,dwLoc28_110,dwLoc2C_109,dwLoc40_26,dwLoc44_117,dwLoc48_221,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_233,ebp_231,ebx_236,ecx_239,edi_230,edx_238,es_243,esi_237,esp_229,None_242,S_240,SCZO_232,SZO_234,Z_241
		defs: C_251,ds_260,eax_249,ebp_247,ebx_252,ecx_255,edi_246,edx_254,es_259,esi_253,esp_245,None_258,S_256,SCZO_248,SZO_250,Z_257
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32)

l10024CD2:
	branch (dwLoc40 & 0x00000000) == 0x00000000 l10024CED
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0040(32)

l10024CD9:
	word32 esp_184 = esp_129 - 0x00000004
	Mem185[esp_184:word32] = dwLoc40 & 0x00000000
	word32 esp_188
	word32 edi_189
	word32 ebp_190
	byte SCZO_191
	word32 eax_192
	byte SZO_193
	byte C_194
	word32 ebx_195
	word32 esi_196
	word32 edx_197
	word32 ecx_198
	byte S_199
	byte Z_200
	bcuiposr0 None_201
	selector es_202
	selector ds_203
	call Mem185[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_182,ds_135,dwLoc04_6,dwLoc08_12,dwLoc10_116,dwLoc14_115,dwLoc18_114,dwLoc1C_113,dwLoc20_112,dwLoc24_111,dwLoc28_110,dwLoc2C_109,dwLoc40_180,dwLoc44_117,dwLoc48_134,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_183,ebp_145,ebx_143,ecx_187,edi_141,edx_139,es_136,esi_186,esp_184,None_137,S_138,SCZO_140,SZO_181,Z_149
		defs: C_194,ds_203,eax_192,ebp_190,ebx_195,ecx_198,edi_189,edx_197,es_202,esi_196,esp_188,None_201,S_199,SCZO_191,SZO_193,Z_200
	byte SCZO_207
	word32 eax_208
	byte SZO_209
	byte C_210
	word32 ebx_211
	word32 esi_212
	word32 ecx_214
	byte S_215
	byte Z_216
	bcuiposr0 None_217
	call esi_196 (retsize: 4; depth: 4)
		uses: C_194,ds_203,dwLoc04_6,dwLoc08_12,dwLoc10_116,dwLoc14_115,dwLoc18_114,dwLoc1C_113,dwLoc20_112,dwLoc24_111,dwLoc28_110,dwLoc2C_109,dwLoc40_180,dwLoc44_117,dwLoc48_134,dwLoc4C_47,dwLoc54_42,dwLoc5C_15,dwLoc60_18,dwLoc64_20,dwLoc68_45,dwLoc6C_54,dwLoc70_56,eax_192,ebp_190,ebx_195,ecx_198,edi_189,edx_197,es_202,esi_196,esp_188,None_201,S_199,SCZO_191,SZO_193,Z_200
		defs: C_210,ds_219,eax_208,ebp_206,ebx_211,ecx_214,edi_205,edx_213,es_218,esi_212,esp_204,None_217,S_215,SCZO_207,SZO_209,Z_216
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10024CED:
	word32 esp_165 = esp_129 + 0x00000004
	word32 ecx_173
	return fn1002F420(edi_100, eax_11 ^ fp - 0x00000004, edx_122, Mem0[esp_165 + 0x00000004:word32], ebp_128, Mem0[esp_165:word32], Mem0[esp_129:word32], es_119, ds_118, out ecx_173)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10024AEA_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -112(fp):edx -108(fp):fp - 0x00000040 -104(fp):fp - 0x00000048 -100(fp):edi -96(fp):esi -92(fp):ebx -84(fp):ecx -76(fp):edx -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10024D02(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edx es esi fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)
fn10024D02_entry:
	*edxOut = edx
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024D02:
	word32 ebp_113
	word32 ebx_556
	word32 esi_555
	word32 edx_120
	selector es_125
	selector ds_126
	word32 ebx_118
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem24[dwArg0C:word32] = Mem0[dwArg0C:word32] & 0x00000000
	word32 ebp_7 = fp - 0x00000004
	word32 esp_111 = fp - 0x00000028
	ds_126 = ds
	es_125 = es
	edx_120 = edx
	esi_555 = esi
	ebx_556 = ebx
	ebp_113 = ebp_7
	branch ecx == 0x00000000 l10024D3D
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(0) Local -0018(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024D27:
	word32 esp_588
	word32 edi_589
	word32 ebp_590
	byte SCZO_591
	word32 eax_592
	byte SZO_593
	byte C_594
	word32 ebx_595
	word32 esi_596
	word32 edx_597
	word32 ecx_598
	byte Z_599
	byte S_600
	bcuiposr0 None_601
	selector es_602
	selector ds_603
	call Mem24[0x100323BC:word32] (retsize: 4; depth: 48)
		uses: C_32,ds,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10_29,dwLoc14,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_585,eax_583,ebp_7,ebx,ecx_587,edi_3,edx,es,esi_586,esp_584,None,S,SCZO,SZO_30,Z_31
		defs: C_594,ds_603,eax_592,ebp_590,ebx_595,ecx_598,edi_589,edx_597,es_602,esi_596,esp_588,None_601,S_600,SCZO_591,SZO_593,Z_599
	word32 edi_605
	byte SCZO_607
	word32 eax_608
	byte SZO_609
	byte C_610
	word32 ecx_614
	byte Z_615
	byte S_616
	bcuiposr0 None_617
	call esi_596 (retsize: 4; depth: 4)
		uses: C_594,ds_603,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10_29,dwLoc14,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_585,eax_592,ebp_590,ebx_595,ecx_598,edi_589,edx_597,es_602,esi_596,esp_588,None_601,S_600,SCZO_591,SZO_593,Z_599
		defs: C_610,ds_619,eax_608,ebp_606,ebx_611,ecx_614,edi_605,edx_613,es_618,esi_612,esp_604,None_617,S_616,SCZO_607,SZO_609,Z_615
	branch ecx != 0x00000000 l10024D65
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:edi ebp:fp - 0x00000004 eax:<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0018(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024D3D:
	word32 esp_561 = esp_111 - 0x00000004
	Mem562[esp_561:word32] = fp - 0x00000010
	word32 esi_563
	word32 edi_564
	Mem568[esp_561:word32] = fn1000FC32(edx_120, ebx_556, esi_555, es_125, ds_126, dwArg00, out esi_563, out edi_564)
	Mem570[esp_561 - 0x00000004:word32] = 0x100057C0
	Mem572[esp_561 - 0x00000008:word32] = 0x00000001
	Mem574[esp_561 - 0x0000000C:word32] = 0x00000000
	Mem576[esp_561 - 0x00000010:word32] = 0x10005810
	word32 eax_577 = CoCreateInstance(Mem576[esp_561 - 0x00000010:(ptr IID)], Mem576[esp_561 - 0x0000000C:LPUNKNOWN], Mem576[esp_561 - 0x00000008:DWORD], Mem576[esp_561 - 0x00000004:(ptr IID)], Mem576[esp_561:(ptr LPVOID)])
	esp_111 = esp_561 + 0x00000004
	ebx_118 = eax_577
	branch eax_577 < 0x00000000 l10024E85
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0018(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024D65:
	word32 esp_129 = esp_111 - 0x00000004
	Mem130[esp_129:word32] = 0x00000000
	Mem132[esp_129 - 0x00000004:word32] = 0x00000000
	word32 edi_137
	byte SCZO_139
	word32 eax_140
	byte SZO_141
	byte C_142
	word32 ebx_143
	word32 esi_144
	word32 ecx_146
	byte Z_147
	byte S_148
	bcuiposr0 None_149
	call SHCORE.dll!SHCreateMemStream (retsize: 4; depth: 4)
		uses: C_32,ds,dwLoc04_6,dwLoc08_12,dwLoc0C,dwLoc10_29,dwLoc14,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_14,ebp_7,ebx,ecx,edi_3,edx,es,esi,esp_131,None,S,SCZO,SZO_30,Z_31
		defs: C_142,ds_151,eax_140,ebp_138,ebx_143,ecx_146,edi_137,edx_145,es_150,esi_144,esp_136,None_149,S_148,SCZO_139,SZO_141,Z_147
	ebx_118 = (0x00000000 - (-eax_140 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch eax_140 == 0x00000000 l10024E85
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024D8E:
	Mem170[esp_111 - 0x00000004:word32] = fp - 0x0000000C
	Mem172[esp_111 - 0x00000008:word32] = 0x10005800
	Mem175[esp_111 - 0x0000000C:word32] = 0x100057F0
	Mem177[esp_111 - 0x00000010:word32] = ecx
	word32 esp_179
	word32 edi_180
	word32 ebp_181
	byte SCZO_182
	word32 eax_183
	byte SZO_184
	byte C_185
	word32 ebx_186
	word32 esi_187
	word32 edx_188
	word32 ecx_189
	byte Z_190
	byte S_191
	bcuiposr0 None_192
	selector es_193
	selector ds_194
	call Mem177[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_168,ds_151,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_163,ebp_138,ebx_159,ecx_178,edi_173,edx_145,es_150,esi_152,esp_176,None_149,S_148,SCZO_139,SZO_167,Z_161
		defs: C_185,ds_194,eax_183,ebp_181,ebx_186,ecx_189,edi_180,edx_188,es_193,esi_187,esp_179,None_192,S_191,SCZO_182,SZO_184,Z_190
	word32 edi_196
	byte SCZO_198
	word32 eax_199
	byte SZO_200
	byte C_201
	word32 ebx_202
	word32 ecx_205
	byte Z_206
	byte S_207
	bcuiposr0 None_208
	word32 esi_203
	call Mem177[edi_180 + 0x00000020:word32] (retsize: 4; depth: 4)
		uses: C_185,ds_194,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_183,ebp_181,ebx_186,ecx_189,edi_180,edx_188,es_193,esi_187,esp_179,None_192,S_191,SCZO_182,SZO_184,Z_190
		defs: C_201,ds_210,eax_199,ebp_197,ebx_202,ecx_205,edi_196,edx_204,es_209,esi_203,esp_195,None_208,S_207,SCZO_198,SZO_200,Z_206
	ebx_118 = eax_199
	branch eax_199 < 0x00000000 l10024E56
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024DBC:
	Mem328[esp_111 - 0x00000004:word32] = 0x00000002
	Mem330[esp_111 - 0x00000008:word32] = esi_203
	Mem332[esp_111 - 0x0000000C:word32] = dwLoc0C & 0x00000000
	word32 esp_336
	word32 edi_337
	word32 ebp_338
	byte SCZO_339
	word32 eax_340
	byte SZO_341
	byte C_342
	word32 ebx_343
	word32 esi_344
	word32 edx_345
	word32 ecx_346
	byte Z_347
	byte S_348
	bcuiposr0 None_349
	selector es_350
	selector ds_351
	call Mem332[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_214,ds_210,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_326,ebp_197,ebx_211,ecx_335,edi_334,edx_204,es_209,esi_203,esp_331,None_208,S_213,SCZO_198,SZO_212,Z_206
		defs: C_342,ds_351,eax_340,ebp_338,ebx_343,ecx_346,edi_337,edx_345,es_350,esi_344,esp_336,None_349,S_348,SCZO_339,SZO_341,Z_347
	word32 edi_353
	byte SCZO_355
	word32 eax_356
	byte SZO_357
	byte C_358
	word32 ebx_359
	word32 ecx_362
	byte Z_363
	byte S_364
	bcuiposr0 None_365
	call edi_337 (retsize: 4; depth: 4)
		uses: C_342,ds_351,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_340,ebp_338,ebx_343,ecx_346,edi_337,edx_345,es_350,esi_344,esp_336,None_349,S_348,SCZO_339,SZO_341,Z_347
		defs: C_358,ds_367,eax_356,ebp_354,ebx_359,ecx_362,edi_353,edx_361,es_366,esi_360,esp_352,None_365,S_364,SCZO_355,SZO_357,Z_363
	ebx_118 = eax_356
	branch eax_356 < 0x00000000 l10024E56
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Stack +000C(32) Stack +0010(32) Stack +0014(32) Stack +0018(32) Stack +001C(32)

l10024DD8:
	Mem378[esp_111 - 0x00000014:word32] = ecx_362
	Mem381[esp_111 - 0x00000018:word32] = edx
	Mem385[esp_111 - 0x00000010:word32] = dwArg10
	Mem390[esp_111 - 0x0000000C:word32] = dwArg14
	Mem395[esp_111 - 0x00000008:word32] = dwArg18
	Mem400[esp_111 - 0x00000004:word32] = dwArg1C
	word32 eax_406 = fn10024AEA(ecx, dwLoc0C & 0x00000000, ebp_113, es_125, ds_126, dwArg00, dwArg08, dwArg0C, dwArg10, dwArg14, out edx_120)
	ebx_118 = eax_406
	branch eax_406 < 0x00000000 l10024E53
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Stack +000C(32)

l10024E53:
	esi_203 = eax_140
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l10024DF9:
	Mem414[esp_111 - 0x00000004:word32] = dwLoc0C & 0x00000000
	word32 esp_418
	word32 edi_419
	word32 ebp_420
	byte SCZO_421
	word32 eax_422
	byte SZO_423
	byte C_424
	word32 ebx_425
	word32 esi_426
	word32 edx_427
	word32 ecx_428
	byte Z_429
	byte S_430
	bcuiposr0 None_431
	selector es_432
	selector ds_433
	call Mem414[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_411,ds_367,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_412,ebp_354,ebx_408,ecx_417,edi_402,edx_405,es_366,esi_416,esp_413,None_365,S_410,SCZO_375,SZO_409,Z_363
		defs: C_424,ds_433,eax_422,ebp_420,ebx_425,ecx_428,edi_419,edx_427,es_432,esi_426,esp_418,None_431,S_430,SCZO_421,SZO_423,Z_429
	word32 edi_435
	byte SCZO_437
	word32 eax_438
	byte SZO_439
	byte C_440
	word32 ebx_441
	word32 esi_442
	word32 ecx_444
	byte Z_445
	byte S_446
	bcuiposr0 None_447
	call esi_426 (retsize: 4; depth: 4)
		uses: C_424,ds_433,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_422,ebp_420,ebx_425,ecx_428,edi_419,edx_427,es_432,esi_426,esp_418,None_431,S_430,SCZO_421,SZO_423,Z_429
		defs: C_440,ds_449,eax_438,ebp_436,ebx_441,ecx_444,edi_435,edx_443,es_448,esi_442,esp_434,None_447,S_446,SCZO_437,SZO_439,Z_445
	esi_203 = eax_140
	ebx_118 = eax_438
	branch eax_438 < 0x00000000 l10024E56
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Stack +000C(32)

l10024E15:
	Mem457[esp_111 - 0x00000004:word32] = 0x00000000
	Mem459[esp_111 - 0x00000008:word32] = 0x00000000
	Mem462[esp_111 - 0x0000000C:word32] = Mem459[0x100057BC:word32]
	Mem466[esp_111 - 0x00000010:word32] = Mem462[0x100057B8:word32]
	Mem468[esp_111 - 0x00000014:word32] = eax_140
	word32 esp_469
	word32 edi_470
	word32 ebp_471
	byte SCZO_472
	word32 eax_473
	byte SZO_474
	byte C_475
	word32 ebx_476
	word32 esi_477
	word32 edx_478
	word32 ecx_479
	byte Z_480
	byte S_481
	bcuiposr0 None_482
	selector es_483
	selector ds_484
	call Mem468[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_454,ds_449,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_438,ebp_436,ebx_451,ecx_463,edi_455,edx_443,es_448,esi_450,esp_467,None_447,S_453,SCZO_437,SZO_452,Z_445
		defs: C_475,ds_484,eax_473,ebp_471,ebx_476,ecx_479,edi_470,edx_478,es_483,esi_477,esp_469,None_482,S_481,SCZO_472,SZO_474,Z_480
	word32 edi_486
	byte SCZO_488
	word32 eax_489
	byte SZO_490
	byte C_491
	word32 ebx_492
	word32 ecx_495
	byte Z_496
	byte S_497
	bcuiposr0 None_498
	call Mem468[edi_470 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: C_475,ds_484,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_473,ebp_471,ebx_476,ecx_479,edi_470,edx_478,es_483,esi_477,esp_469,None_482,S_481,SCZO_472,SZO_474,Z_480
		defs: C_491,ds_500,eax_489,ebp_487,ebx_492,ecx_495,edi_486,edx_494,es_499,esi_493,esp_485,None_498,S_497,SCZO_488,SZO_490,Z_496
	ebx_118 = eax_489
	branch eax_489 < 0x00000000 l10024E56
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Stack +000C(32)

l10024E3A:
	Mem507[esp_111 - 0x00000004:word32] = esi_203
	word32 esp_510
	word32 edi_511
	word32 ebp_512
	byte SCZO_513
	word32 eax_514
	byte SZO_515
	byte C_516
	word32 ebx_517
	word32 esi_518
	word32 edx_519
	word32 ecx_520
	byte Z_521
	byte S_522
	bcuiposr0 None_523
	selector es_524
	selector ds_525
	call Mem507[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_504,ds_500,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_505,ebp_487,ebx_501,ecx_509,edi_508,edx_494,es_499,esi_493,esp_506,None_498,S_503,SCZO_488,SZO_502,Z_496
		defs: C_516,ds_525,eax_514,ebp_512,ebx_517,ecx_520,edi_511,edx_519,es_524,esi_518,esp_510,None_523,S_522,SCZO_513,SZO_515,Z_521
	word32 edi_527
	byte SCZO_529
	word32 eax_530
	byte SZO_531
	byte C_532
	word32 ebx_533
	word32 ecx_536
	byte Z_537
	byte S_538
	bcuiposr0 None_539
	call edi_511 (retsize: 4; depth: 4)
		uses: C_516,ds_525,dwLoc04_6,dwLoc08_12,dwLoc0C_166,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_514,ebp_512,ebx_517,ecx_520,edi_511,edx_519,es_524,esi_518,esp_510,None_523,S_522,SCZO_513,SZO_515,Z_521
		defs: C_532,ds_541,eax_530,ebp_528,ebx_533,ecx_536,edi_527,edx_535,es_540,esi_534,esp_526,None_539,S_538,SCZO_529,SZO_531,Z_537
	Mem546[dwArg0C:word32] = esi_203
	ebx_118 = 0x00000000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l10024E56:
	branch (dwLoc0C & 0x00000000) == 0x00000000 l10024E71
// DataOut: cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32)

l10024E5D:
	word32 esp_290 = esp_111 - 0x00000004
	Mem291[esp_290:word32] = dwLoc0C & 0x00000000
	word32 esp_294
	word32 edi_295
	word32 ebp_296
	byte SCZO_297
	word32 eax_298
	byte SZO_299
	byte C_300
	word32 ebx_301
	word32 esi_302
	word32 edx_303
	word32 ecx_304
	byte Z_305
	byte S_306
	bcuiposr0 None_307
	selector es_308
	selector ds_309
	call Mem291[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_288,ds_215,dwLoc04_6,dwLoc08_12,dwLoc0C_286,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_289,ebp_225,ebx_223,ecx_293,edi_292,edx_219,es_216,esi_222,esp_290,None_217,S_218,SCZO_220,SZO_287,Z_229
		defs: C_300,ds_309,eax_298,ebp_296,ebx_301,ecx_304,edi_295,edx_303,es_308,esi_302,esp_294,None_307,S_306,SCZO_297,SZO_299,Z_305
	word32 edi_311
	byte SCZO_313
	word32 eax_314
	byte SZO_315
	byte C_316
	word32 ecx_320
	byte Z_321
	byte S_322
	bcuiposr0 None_323
	call edi_295 (retsize: 4; depth: 4)
		uses: C_300,ds_309,dwLoc04_6,dwLoc08_12,dwLoc0C_286,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_298,ebp_296,ebx_301,ecx_304,edi_295,edx_303,es_308,esi_302,esp_294,None_307,S_306,SCZO_297,SZO_299,Z_305
		defs: C_316,ds_325,eax_314,ebp_312,ebx_317,ecx_320,edi_311,edx_319,es_324,esi_318,esp_310,None_323,S_322,SCZO_313,SZO_315,Z_321
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10024E71:
	branch esi_203 == 0x00000000 l10024E85
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10024E75:
	word32 esp_249 = esp_111 - 0x00000004
	Mem250[esp_249:word32] = esi_203
	word32 esp_253
	word32 edi_254
	word32 ebp_255
	byte SCZO_256
	word32 eax_257
	byte SZO_258
	byte C_259
	word32 ebx_260
	word32 esi_261
	word32 edx_262
	word32 ecx_263
	byte Z_264
	byte S_265
	bcuiposr0 None_266
	selector es_267
	selector ds_268
	call Mem250[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_247,ds_232,dwLoc04_6,dwLoc08_12,dwLoc0C_231,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_248,ebp_243,ebx_240,ecx_252,edi_238,edx_236,es_233,esi_251,esp_249,None_234,S_235,SCZO_237,SZO_245,Z_246
		defs: C_259,ds_268,eax_257,ebp_255,ebx_260,ecx_263,edi_254,edx_262,es_267,esi_261,esp_253,None_266,S_265,SCZO_256,SZO_258,Z_264
	word32 edi_270
	byte SCZO_272
	word32 eax_273
	byte SZO_274
	byte C_275
	word32 esi_277
	word32 ecx_279
	byte Z_280
	byte S_281
	bcuiposr0 None_282
	call esi_261 (retsize: 4; depth: 4)
		uses: C_259,ds_268,dwLoc04_6,dwLoc08_12,dwLoc0C_231,dwLoc10_29,dwLoc14_154,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_127,eax_257,ebp_255,ebx_260,ecx_263,edi_254,edx_262,es_267,esi_261,esp_253,None_266,S_265,SCZO_256,SZO_258,Z_264
		defs: C_275,ds_284,eax_273,ebp_271,ebx_276,ecx_279,edi_270,edx_278,es_283,esi_277,esp_269,None_282,S_281,SCZO_272,SZO_274,Z_280
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10024E85:
	branch ecx == 0x00000000 l10024EA0
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0010(32)

l10024E8C:
	word32 esp_91 = esp_111 - 0x00000004
	Mem92[esp_91:word32] = ecx
	word32 esp_95
	word32 edi_96
	word32 ebp_97
	byte SCZO_98
	word32 eax_99
	byte SZO_100
	byte C_101
	word32 ebx_102
	word32 esi_103
	word32 edx_104
	word32 ecx_105
	byte Z_106
	byte S_107
	bcuiposr0 None_108
	selector es_109
	selector ds_110
	call Mem92[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_89,ds_41,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc10_87,dwLoc14_39,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_38,eax_90,ebp_51,ebx_49,ecx_94,edi_47,edx_45,es_42,esi_93,esp_91,None_43,S_44,SCZO_46,SZO_88,Z_55
		defs: C_101,ds_110,eax_99,ebp_97,ebx_102,ecx_105,edi_96,edx_104,es_109,esi_103,esp_95,None_108,S_107,SCZO_98,SZO_100,Z_106
	word32 edi_112
	byte SCZO_114
	word32 eax_115
	byte SZO_116
	byte C_117
	word32 esi_119
	word32 ecx_121
	byte Z_122
	byte S_123
	bcuiposr0 None_124
	call esi_103 (retsize: 4; depth: 4)
		uses: C_101,ds_110,dwLoc04_6,dwLoc08_12,dwLoc0C_40,dwLoc10_87,dwLoc14_39,dwLoc18_27,dwLoc20_17,dwLoc24_20,dwLoc28_22,dwLoc2C_38,eax_99,ebp_97,ebx_102,ecx_105,edi_96,edx_104,es_109,esi_103,esp_95,None_108,S_107,SCZO_98,SZO_100,Z_106
		defs: C_117,ds_126,eax_115,ebp_113,ebx_118,ecx_121,edi_112,edx_120,es_125,esi_119,esp_111,None_124,S_123,SCZO_114,SZO_116,Z_122
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:ecx ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10024EA0:
	word32 esp_71 = esp_111 + 0x00000004
	word32 ebx_77 = Mem24[esp_71 + 0x00000004:word32]
	*ebxOut = ebx_77
	word32 ecx_79
	return fn1002F420(ebx_118, eax_11 ^ fp - 0x00000004, edx_120, ebx_77, ebp_113, Mem24[esp_71:word32], Mem24[esp_111:word32], es_125, ds_126, out ecx_79)
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10024D02_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -44(fp):ecx -40(fp):edi -36(fp):esi -32(fp):ebx -24(fp):edx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10024F4B(word32 ecx, word32 edx, word32 ebx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es esi fs gs ss
// LiveOut: eax esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10024F4B_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10024F4B:
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_106 = fp - 0x0000000C
	word32 edi_17 = ecx + 0x00000030
	word32 ecx_18 = Mem0[ecx + 0x00000030:word32]
	branch ecx_18 == 0x00000000 l10024F7A
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l10024F65:
	Mem64[ecx + 0x00000030:word32] = Mem0[ecx + 0x00000030:word32] & 0x00000000
	word32 esp_79
	word32 edi_80
	word32 ebp_81
	word32 ecx_82
	word32 eax_83
	byte SZO_84
	byte C_85
	byte Z_86
	word32 esi_87
	word32 edx_88
	word32 ebx_89
	selector es_90
	selector ds_91
	call Mem64[0x100323BC:word32] (retsize: 4; depth: 24)
		uses: C_66,ds,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_70,dwLoc14_72,eax_67,ebp_7,ebx,ecx_74,edi_17,edx,es,esi_73,esp_71,SZO_65,Z_20
		defs: C_85,ds_91,eax_83,ebp_81,ebx_89,ecx_82,edi_80,edx_88,es_90,esi_87,esp_79,SZO_84,Z_86
	word32 esp_92
	word32 ebp_94
	word32 ecx_95
	word32 eax_96
	byte SZO_97
	byte C_98
	byte Z_99
	word32 esi_100
	word32 edx_101
	word32 ebx_102
	selector es_103
	selector ds_104
	call esi_87 (retsize: 4; depth: 4)
		uses: C_85,ds_91,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_70,dwLoc14_72,eax_83,ebp_81,ebx_89,ecx_82,edi_80,edx_88,es_90,esi_87,esp_79,SZO_84,Z_86
		defs: C_98,ds_104,eax_96,ebp_94,ebx_102,ecx_95,edi_93,edx_101,es_103,esi_100,esp_92,SZO_97,Z_99
	esp_106 = esp_92 + 0x00000004
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000030 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -12(fp):edi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l10024F7A:
	word32 esp_28 = esp_106 - 0x00000004
	Mem29[esp_28:word32] = edi_17
	Mem33[esp_28 - 0x00000004:word32] = dwArg04
	Mem35[esp_28 - 0x00000008:word32] = 0x100030BC
	Mem37[esp_28 - 0x0000000C:word32] = 0x00000000
	word32 esp_38
	word32 edi_39
	word32 ebp_40
	word32 ecx_41
	word32 eax_42
	byte SZO_43
	byte C_44
	byte Z_45
	word32 esi_46
	word32 edx_47
	word32 ebx_48
	selector es_49
	selector ds_50
	call api-ms-win-core-com-l1-1-1.dll!RoGetAgileReference (retsize: 4; depth: 4)
		uses: C_21,dwLoc04_6,dwLoc08_14,dwLoc0C_16,dwLoc10_24,dwLoc14_25,eax_13,ebp_7,ecx_18,edi_26,esp_36,SZO_19,Z_20
		defs: C_44,ds_50,eax_42,ebp_40,ebx_48,ecx_41,edi_39,edx_47,es_49,esi_46,esp_38,SZO_43,Z_45
	word32 ecx_57
	return fn1002F420(eax_42, eax_13 ^ fp - 0x00000004, edx_47, ebx_48, ebp_40, esi_46, Mem37[esp_38:word32], es_49, ds_50, out ecx_57)
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx + 0x00000030 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp

fn10024F4B_exit:
// DataOut: eax esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> -20(fp):<invalid> -16(fp):esi -12(fp):edi -8(fp):<invalid> -4(fp):ebp



word32 fn1002543F(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: eax ebp esp
fn1002543F_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002543F:
	Mem26[edx:word32] = 0x00000000
	word32 esi_29
	word32 edi_30
	word32 eax_31 = fn100106F6(fp - 0x0000000C, edx, 0x00000000, ecx, es, ds, out esi_29, out edi_30)
	word32 esp_40
	word32 ebp_42
	byte SCZO_43
	word32 esi_45
	word32 edx_46
	word32 ecx_47
	byte SZO_48
	byte C_49
	word32 eax_50
	byte S_51
	byte Z_52
	selector es_53
	selector ds_54
	word32 edi_103
	word32 ebx_105
	call SHCORE.dll!CreateRandomAccessStreamOverStream (retsize: 4; depth: 48)
		uses: C_23,ds,dwLoc04_6,dwLoc0C_25,dwLoc14_11,dwLoc18_14,dwLoc1C_16,dwLoc20_33,dwLoc24_35,dwLoc28_37,dwLoc2C_39,eax_31,ebp_7,ebx_21,ecx_24,edi_30,edx,es,esi_29,esp_38,SZO_22
		defs: C_49,ds_54,eax_50,ebp_42,ebx_44,ecx_47,edi_41,edx_46,es_53,esi_45,esp_40,S_51,SCZO_43,SZO_48,Z_52
	word32 esi_104 = eax_50
	branch eax_50 < 0x00000000 l100254AE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10025471:
	Mem90[esp_40 - 0x00000004:word32] = fp - 0x00000008
	Mem91[edi_103:word32] = 0x00000000
	word32 edx_102
	word32 eax_95 = fn10026AEF(fp - 0x00000010, edx_46, ebp_42, eax_50, es_53, ds_54, dwArg00, out edx_102)
	esi_104 = eax_95
	branch eax_95 < 0x00000000 l1002549E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 ecx:<invalid> eax:<invalid> -44(fp):<invalid> -40(fp):0x00000000 -36(fp):0x100030BC -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002548E:
	word32 ecx_116 = Mem91[ebp_42 - 0x00000004:word32]
	Mem119[esp_40 - 0x00000004:word32] = edi_103
	word32 esi_122
	esi_104 = fn10026B6C(ecx_116, 0x100030BC, es_53, ds_54, dwArg00, out edx_102, out ebx_105, out esi_122, out edi_103)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):0x00000000 -36(fp):0x100030BC -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002549E:
	word32 eax_107 = Mem91[ebp_42 - 0x00000004:word32]
	branch eax_107 == 0x00000000 l100254AE
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):0x00000000 -36(fp):0x100030BC -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100254A5:
	Mem112[esp_40 - 0x00000004:word32] = eax_107
	Mem113[ebp_42 - 0x00000004:word32] = ebx_105
	fn100269B0(edx_102, edi_103, es_53, ds_54, dwArg00)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):0x00000000 -36(fp):0x100030BC -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100254AE:
	word32 edx_72
	word32 esi_73
	fn1000C640(ebp_42 - 0x00000008, ebx_105, esi_104, edi_103, es_53, ds_54, out edx_72, out esi_73)
	word32 esi_78
	*esiOut = Mem26[esp_40 + 0x00000004:word32]
	return edx_72
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):0x00000000 -36(fp):0x100030BC -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn1002543F_exit:
// DataOut: edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -44(fp):<invalid> -40(fp):0x00000000 -36(fp):0x100030BC -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



void fn100254BF(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn100254BF_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0028(32) Stack +0004(32)

l100254BF:
	Mem31[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esi_39
	word32 edi_40
	word32 eax_53 = CoCreateInstance(0x10005810, 0x00000000, 0x00000001, 0x100057C0, fn1000FC32(edx, dwArg04, esi, es, ds, fp - 0x0000000C, out esi_39, out edi_40))
	word32 ebp_138 = fp - 0x00000004
	word32 esp_136 = fp - 0x00000020
	word32 edi_137 = eax_53
	branch eax_53 < 0x00000000 l10025596
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32)

l10025509:
	word32 esp_172
	word32 edi_173
	word32 ebp_174
	byte SCZO_175
	word32 eax_176
	byte SZO_177
	byte C_178
	word32 ebx_179
	word32 esi_180
	word32 ecx_181
	byte S_182
	word32 edx_183
	byte Z_184
	bcuiposr0 None_185
	selector es_186
	selector ds_187
	call Mem31[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: C_157,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_155,dwLoc14_35,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_159,dwLoc28_161,dwLoc2C_164,dwLoc30_167,dwLoc34_170,eax_152,ebp_7,ebx_22,ecx_168,edi_55,edx,es,esi_162,esp_169,None,S_57,SCZO,SZO_156,Z
		defs: C_178,ds_187,eax_176,ebp_174,ebx_179,ecx_181,edi_173,edx_183,es_186,esi_180,esp_172,None_185,S_182,SCZO_175,SZO_177,Z_184
	word32 edi_189
	byte SCZO_191
	word32 eax_192
	byte SZO_193
	byte C_194
	word32 ebx_195
	word32 esi_196
	word32 ecx_197
	byte S_198
	byte Z_200
	bcuiposr0 None_201
	call Mem31[esi_180 + 0x00000054:word32] (retsize: 4; depth: 4)
		uses: C_178,ds_187,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_155,dwLoc14_35,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_159,dwLoc28_161,dwLoc2C_164,dwLoc30_167,dwLoc34_170,eax_176,ebp_174,ebx_179,ecx_181,edi_173,edx_183,es_186,esi_180,esp_172,None_185,S_182,SCZO_175,SZO_177,Z_184
		defs: C_194,ds_203,eax_192,ebp_190,ebx_195,ecx_197,edi_189,edx_199,es_202,esi_196,esp_188,None_201,S_198,SCZO_191,SZO_193,Z_200
	edi_137 = eax_192
	branch eax_192 < 0x00000000 l1002557B
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -52(fp):0x10005810 -48(fp):0x00000000 -44(fp):0x00000001 -40(fp):0x100057C0 -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0010(32) Local -0014(32)

l10025530:
	Mem276[esp_136 - 0x00000014:word32] = fp - 0x00000014
	Mem278[esp_136 - 0x00000010:word32] = Mem276[0x100057E0:word32]
	Mem282[esp_136 - 0x00000018:word32] = ecx_197
	Mem284[esp_136 - 0x0000001C:word32] = ecx_197
	Mem287[esp_136 - 0x0000000C:word32] = Mem284[0x100057E4:word32]
	Mem291[esp_136 - 0x00000008:word32] = Mem287[0x100057E8:word32]
	Mem295[esp_136 - 0x00000004:word32] = Mem291[0x100057EC:word32]
	word32 ebx_304
	word32 eax_305 = fn10024D02(dwLoc0C & 0x00000000, dwLoc10 & 0x00000000, ebx_195, ebp_138, 0x100057F0, es, ds, dwArg08, dwArg0C, dwArg10, dwArg14, dwArg18, out edx, out ebx_304)
	word32 esi_307 = ecx & 0x00000000
	branch eax_305 < 0x00000000 l10025567
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000010 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):ecx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002555C:
	edx = fn1002543F(ecx & 0x00000000, ebx_304, ebp_138, es, ds, out esi_307)
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:ecx & 0x00000000 edx:<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000010 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):ecx & 0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10025567:
	edi_137 = eax_305
	branch esi_307 == 0x00000000 l1002557B
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000010 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):ecx & 0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002556B:
	Mem321[esp_136 - 0x00000004:word32] = esi_307
	word32 esp_324
	word32 edi_325
	word32 ebp_326
	byte SCZO_327
	word32 eax_328
	byte SZO_329
	byte C_330
	word32 ebx_331
	word32 esi_332
	word32 ecx_333
	byte S_334
	word32 edx_335
	byte Z_336
	bcuiposr0 None_337
	selector es_338
	selector ds_339
	call Mem321[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_318,ds_203,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_155,dwLoc14_269,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_159,dwLoc28_161,dwLoc2C_164,dwLoc30_167,dwLoc34_170,eax_319,ebp_190,ebx_304,ecx_323,edi_313,edx_312,es_202,esi_322,esp_320,None_201,S_310,SCZO_272,SZO_316,Z_317
		defs: C_330,ds_339,eax_328,ebp_326,ebx_331,ecx_333,edi_325,edx_335,es_338,esi_332,esp_324,None_337,S_334,SCZO_327,SZO_329,Z_336
	byte SCZO_343
	word32 eax_344
	byte SZO_345
	byte C_346
	word32 ebx_347
	word32 esi_348
	word32 ecx_349
	byte S_350
	byte Z_352
	bcuiposr0 None_353
	call esi_332 (retsize: 4; depth: 4)
		uses: C_330,ds_339,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_155,dwLoc14_269,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_159,dwLoc28_161,dwLoc2C_164,dwLoc30_167,dwLoc34_170,eax_328,ebp_326,ebx_331,ecx_333,edi_325,edx_335,es_338,esi_332,esp_324,None_337,S_334,SCZO_327,SZO_329,Z_336
		defs: C_346,ds_355,eax_344,ebp_342,ebx_347,ecx_349,edi_341,edx_351,es_354,esi_348,esp_340,None_353,S_350,SCZO_343,SZO_345,Z_352
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000010 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):ecx & 0x00000000 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002557B:
	word32 ecx_221 = Mem31[ebp_138 - 0x0000000C:word32]
	branch ecx_221 == 0x00000000 l10025596
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000010 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10025582:
	Mem226[ebp_138 - 0x0000000C:word32] = Mem31[ebp_138 - 0x0000000C:word32] & 0x00000000
	word32 esp_230 = esp_136 - 0x00000004
	Mem231[esp_230:word32] = ecx_221
	word32 esp_234
	word32 edi_235
	word32 ebp_236
	byte SCZO_237
	word32 eax_238
	byte SZO_239
	byte C_240
	word32 ebx_241
	word32 esi_242
	word32 ecx_243
	byte S_244
	word32 edx_245
	byte Z_246
	bcuiposr0 None_247
	selector es_248
	selector ds_249
	call Mem231[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_228,ds_209,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_155,dwLoc14_208,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_159,dwLoc28_161,dwLoc2C_164,dwLoc30_167,dwLoc34_170,eax_229,ebp_219,ebx_217,ecx_233,edi_215,edx_212,es_210,esi_232,esp_230,None_211,S_213,SCZO_214,SZO_227,Z_223
		defs: C_240,ds_249,eax_238,ebp_236,ebx_241,ecx_243,edi_235,edx_245,es_248,esi_242,esp_234,None_247,S_244,SCZO_237,SZO_239,Z_246
	byte SCZO_253
	word32 eax_254
	byte SZO_255
	byte C_256
	word32 ebx_257
	word32 esi_258
	word32 ecx_259
	byte S_260
	byte Z_262
	bcuiposr0 None_263
	call esi_242 (retsize: 4; depth: 4)
		uses: C_240,ds_249,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_155,dwLoc14_208,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_159,dwLoc28_161,dwLoc2C_164,dwLoc30_167,dwLoc34_170,eax_238,ebp_236,ebx_241,ecx_243,edi_235,edx_245,es_248,esi_242,esp_234,None_247,S_244,SCZO_237,SZO_239,Z_246
		defs: C_256,ds_265,eax_254,ebp_252,ebx_257,ecx_259,edi_251,edx_261,es_264,esi_258,esp_250,None_263,S_260,SCZO_253,SZO_255,Z_262
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):fp - 0x00000010 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10025596:
	word32 ecx_81 = Mem31[ebp_138 - 0x00000008:word32]
	branch ecx_81 == 0x00000000 l100255B1
// DataOut: cs ds ebp ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002559D:
	Mem112[ebp_138 - 0x00000008:word32] = Mem31[ebp_138 - 0x00000008:word32] & 0x00000000
	word32 esp_116 = esp_136 - 0x00000004
	Mem117[esp_116:word32] = ecx_81
	word32 esp_120
	word32 edi_121
	word32 ebp_122
	byte SCZO_123
	word32 eax_124
	byte SZO_125
	byte C_126
	word32 ebx_127
	word32 esi_128
	word32 ecx_129
	byte S_130
	word32 edx_131
	byte Z_132
	bcuiposr0 None_133
	selector es_134
	selector ds_135
	call Mem117[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_114,ds_69,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_62,dwLoc14_68,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_63,dwLoc28_64,dwLoc2C_65,dwLoc30_66,dwLoc34_67,eax_115,ebp_79,ebx_77,ecx_119,edi_75,edx_72,es_70,esi_118,esp_116,None_71,S_73,SCZO_74,SZO_113,Z_83
		defs: C_126,ds_135,eax_124,ebp_122,ebx_127,ecx_129,edi_121,edx_131,es_134,esi_128,esp_120,None_133,S_130,SCZO_123,SZO_125,Z_132
	byte SCZO_139
	word32 eax_140
	byte SZO_141
	byte C_142
	word32 ebx_143
	word32 esi_144
	word32 ecx_145
	byte S_146
	byte Z_148
	bcuiposr0 None_149
	call esi_128 (retsize: 4; depth: 4)
		uses: C_126,ds_135,dwLoc04_6,dwLoc08_12,dwLoc0C_15,dwLoc10_62,dwLoc14_68,dwLoc18_20,dwLoc1C_25,dwLoc20_27,dwLoc24_63,dwLoc28_64,dwLoc2C_65,dwLoc30_66,dwLoc34_67,eax_124,ebp_122,ebx_127,ecx_129,edi_121,edx_131,es_134,esi_128,esp_120,None_133,S_130,SCZO_123,SZO_125,Z_132
		defs: C_142,ds_151,eax_140,ebp_138,ebx_143,ecx_145,edi_137,edx_147,es_150,esi_144,esp_136,None_149,S_146,SCZO_139,SZO_141,Z_148
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100255B1:
	word32 esp_98 = esp_136 + 0x00000004
	word32 ecx_106
	fn1002F420(edi_137, Mem31[ebp_138 - 0x00000004:word32] ^ ebp_138, edx, Mem31[esp_98 + 0x00000004:word32], ebp_138, Mem31[esp_98:word32], Mem31[esp_136:word32], es, ds, out ecx_106)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100254BF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn100255C6(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
fn100255C6_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100255C6:
	fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem23[ecx + 0x0000001C:word32] = 0x00000001
	Mem24[ecx:word32] = 0x10001C88
	Mem25[ecx + 0x00000004:word32] = 0x10001D2C
	branch Mem0[0x10031478:word32] == 0x00000000 l100255FA
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100255F3:
	__lock()
	Mem93[0x1003147C:word32] = Mem25[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l100255FA:
	Mem26[ecx + 0x00000004:word32] = 0x10001D2C
	Mem29[ecx:word32] = 0x10001D50
	Mem30[ecx + 0x00000020:word32] = 0x00000000
	Mem32[ecx + 0x00000024:word32] = 0x00000000
	Mem33[ecx + 0x00000028:word32] = 0x00000000
	Mem34[ecx + 0x0000002C:word32] = 0x00000000
	Mem35[ecx + 0x00000030:word32] = 0x00000000
	Mem38[ecx + 0x00000034:word32] = Mem35[0x100075F8:word32]
	Mem44[ecx + 0x00000038:word32] = Mem38[0x100075FC:word32]
	Mem48[ecx + 0x0000003C:word32] = Mem44[0x10007600:word32]
	Mem52[ecx + 0x00000040:word32] = Mem48[0x10007604:word32]
	InitializeSRWLock(ecx + 0x00000044)
	Mem55[ecx + 0x00000048:word32] = 0x00000000
	Mem56[ecx + 0x0000004C:word32] = 0x00000000
	Mem57[ecx + 0x00000050:word32] = 0x00000000
	InitializeSRWLock(ecx + 0x00000054)
	Mem66[ecx + 0x00000058:word32] = 0x00000000
	Mem67[ecx + 0x0000005C:word32] = 0x00000000
	Mem68[ecx + 0x00000060:word32] = 0x00000000
	Mem69[ecx + 0x00000068:word32] = 0x00000000
	Mem70[ecx + 0x0000006C:word32] = 0x00000000
	Mem71[ecx + 0x00000070:word32] = 0x00000000
	Mem72[ecx + 0x00000074:word32] = 0x00000000
	Mem73[ecx + 0x00000078:word32] = 0x00000000
	Mem74[ecx + 0x0000007C:word32] = 0x00000000
	Mem75[ecx + 0x00000080:word32] = 0x00000000
	Mem76[ecx + 0x00000084:word32] = 0x00000000
	Mem77[ecx + 0x00000088:word32] = 0x00000000
	Mem78[ecx + 0x0000008C:word32] = 0x00000000
	Mem81[ecx + 0x00000094:word32] = 0x00000000
	Mem82[ecx + 0x00000098:word32] = 0x00000000
	Mem83[ecx + 0x0000009C:byte] = 0x00
	Mem84[ecx + 0x00000064:word32] = 0x00000000
	Mem85[ecx + 0x00000090:word32] = 0x00000000
	return ecx
// DataOut: cs ds eax ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn100255C6_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebx:ebx esi:esi ecx:<invalid> eax:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn1002622C(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002622C_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002622C:
	AcquireSRWLockExclusive(ecx + 0x00000044)
	Mem21[ecx + 0x00000048:word32] = dwArg04
	branch ecx == 0x00000044 l10026250
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026249:
	ReleaseSRWLockExclusive(ecx + 0x00000044)
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000044 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026250:
	return
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000044 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebp

fn1002622C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebp



void fn10026258(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn10026258_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10026258:
	AcquireSRWLockExclusive(ecx + 0x00000044)
	Mem21[ecx + 0x0000004C:word32] = dwArg04
	branch ecx == 0x00000044 l1002627C
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026275:
	ReleaseSRWLockExclusive(ecx + 0x00000044)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000044 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002627C:
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000044 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebp

fn10026258_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn10026282(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10026282_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10026282:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	word32 ebx_18 = 0x00000000
	branch dwArg04 != 0x00000000 l100262BD
// DataOut: bl cs ds ebx ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100262BD:
	word32 edx_77
	ebx_18 = fn1000F30D(ecx + 0x00000058, dwArg04, 0xFFFFFFFF, out edx_77)
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx + 0x00000054 ecx:ecx + 0x00000058 -20(fp):ecx + 0x00000054 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100262A0:
	fn1000F489(ecx + 0x00000058)
	word32 edx_55 = Mem0[ecx + 0x0000005C:word32]
	*edxOut = edx_55
	word32 eax_56 = Mem0[ecx + 0x00000058:word32]
	branch edx_55 == 0x00000000 l100262B6
// DataOut: bl cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx + 0x00000054 ecx:ecx + 0x00000058 -20(fp):ecx + 0x00000054 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100262AE:
	Mem67[eax_56:byte] = 0x00
	eax_56 = eax_56 + 0x00000001
	edx_55 = edx_55 - 0x00000001
	*edxOut = edx_55
	branch edx_55 != 0x00000000 l100262AE
// DataOut: bl cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx + 0x00000054 ecx:ecx + 0x00000058 edx:<invalid> eax:<invalid> ax:<invalid> -20(fp):ecx + 0x00000054 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100262B6:
	fn1000F2EE(ecx + 0x00000058)
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 esi:ecx + 0x00000054 ecx:ecx + 0x00000058 edx:<invalid> eax:<invalid> ax:<invalid> -20(fp):ecx + 0x00000054 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100262C9:
	branch ecx == 0x00000054 l100262D4
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> esi:ecx + 0x00000054 ecx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100262CD:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> esi:ecx + 0x00000054 ecx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100262D4:
	return ebx_18
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> esi:ecx + 0x00000054 ecx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn10026282_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx esi:esi ecx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



void fn100262DD(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn100262DD_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100262DD:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	branch Mem0[ecx + 0x00000074:word32] == 0x00000000 l100262FF
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100262F6:
	DeleteObject(Mem0[ecx + 0x00000074:word32])
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 esi:ecx + 0x00000054 -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100262FF:
	Mem26[ecx + 0x00000074:word32] = dwArg04
	branch ecx == 0x00000054 l10026310
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 esi:ecx + 0x00000054 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026309:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 esi:ecx + 0x00000054 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026310:
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 esi:ecx + 0x00000054 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn100262DD_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn10026316(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10026316_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -00A0(32) Stack +0004(32) Stack +0008(32)

l10026316:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	AcquireSRWLockExclusive(ecx + 0x00000054)
	word32 edi_121 = ecx
	branch dwArg08 == 0x00000000 l100264DD
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l1002634E:
	branch dwArg04 <=u 0x00000036 l100264DD
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:ecx + 0x00000054 ebx:<invalid> esi:<invalid> -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l10026357:
	word16 ax_105 = (word16) (word32) Mem0[dwArg08:word16]
	branch ax_105 == 0x4D42 l10026464
// DataOut: ax cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:ecx + 0x00000054 ebx:<invalid> esi:<invalid> -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l10026368:
	branch ax_105 == 0xD8FF l10026464
// DataOut: ax cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x00004D42 -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l10026376:
	word32 ecx_178 = 0x00005089
	branch ax_105 != 0x5089 l1002638F
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x0000D8FF -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l10026380:
	branch Mem0[dwArg08 + 0x00000002:word16] == 0x474E l10026464
// DataOut: cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x00005089 -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l10026464:
	branch Mem0[0x10031000:word32] <=u 0x00000004 l100264AD
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l1002646D:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x1000579C)
	fn1000C51D(fp - 0x0000001C, 0x100057AC)
	word32 ecx_168
	word32 esi_170
	fn1000C491(0x10031000, 0x1000B564, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000005C, out ecx_168, out edx, out esi_170, out edi_121)
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100264AD:
	word32 eax_124 = CoTaskMemAlloc(dwArg04)
	word32 ecx_126 = Mem0[edi_121 + 0x0000007C:word32]
	Mem129[edi_121 + 0x0000007C:word32] = Mem0[edi_121 + 0x0000007C:word32] & 0x00000000
	CoTaskMemFree(ecx_126)
	Mem134[edi_121 + 0x0000007C:word32] = eax_124
	branch eax_124 == 0x00000000 l100264DD
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100264CB:
	memcpy_s(eax_124, dwArg04, dwArg08, dwArg04)
	Mem150[edi_121 + 0x00000078:word32] = dwArg04
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l1002638F:
	branch Mem0[0x10031000:word32] <=u 0x00000004 l100263D8
// DataOut: cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x00005089 -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32) Local -00A0(32)

l10026398:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x1000579C)
	fn1000C51D(fp - 0x0000001C, 0x100057B0)
	word32 esi_294
	fn1000C491(0x10031000, 0x1000B564, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000005C, out ecx_178, out edx, out esi_294, out edi_121)
// DataOut: cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:0x00005089 -144(fp):ecx + 0x00000054 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100263D8:
	word32 ecx_204
	word32 dwLoc70_201
	branch dwArg04 + 0x0000000E <u dwArg04 l100263E6
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100263E6:
	ecx_204 = ecx_178 | 0xFFFFFFFF
	dwLoc70_201 = ecx_204
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100263DF:
	ecx_204 = dwArg04 + 0x0000000E
	dwLoc70_201 = dwArg04 + 0x0000000E
// DataOut: cs ds eax ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100263EC:
	branch dwArg04 + 0x0000000E <u dwArg04 l100264DD
// DataOut: cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100263F4:
	word32 eax_209 = CoTaskMemAlloc(ecx_204)
	word32 ecx_211 = Mem0[edi_121 + 0x0000007C:word32]
	Mem214[edi_121 + 0x0000007C:word32] = Mem0[edi_121 + 0x0000007C:word32] & 0x00000000
	CoTaskMemFree(ecx_211)
	Mem221[edi_121 + 0x0000007C:word32] = eax_209
	branch eax_209 == 0x00000000 l100264DD
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l1002641B:
	memcpy_s(eax_209, dwLoc70_201, fp - 0x0000006C, 0x0000000E)
	memcpy_s(eax_209 + 0x0000000E, dwArg04, dwArg08, dwArg04)
	Mem265[ecx + 0x00000078:word32] = dwLoc70_201
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000005 -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100264DD:
	branch ecx == 0x00000054 l100264EB
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):ax -106(fp):<invalid> -102(fp):<invalid> -98(fp):0x00000036 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100264E4:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:ecx + 0x00000054 ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):ax -106(fp):<invalid> -102(fp):<invalid> -98(fp):0x00000036 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0084(32) Local -0088(32) Local -008C(32)

l100264EB:
	word32 ecx_94
	fn1002F420(ecx + 0x00000054, eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_94)
	return edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000008C edi:<invalid> ebp:fp - 0x00000004 eax:ecx + 0x00000054 ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):ax -106(fp):<invalid> -102(fp):<invalid> -98(fp):0x00000036 -8(fp):<invalid> -4(fp):ebp

fn10026316_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx esi:esi ecx:<invalid> edx:<invalid> al:<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):ecx + 0x00000054 -124(fp):ecx -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):ax -106(fp):<invalid> -102(fp):<invalid> -98(fp):0x00000036 -8(fp):<invalid> -4(fp):ebp



word32 fn100264FE(word32 ecx, byte bArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100264FE_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100264FE:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	Mem32[ecx + 0x00000064:word32] = ((word32) bArg04 ^ 0x00000001) + 0x00000001
	word32 edx_33
	word32 eax_34 = fn1000F30D(ecx + 0x00000068, dwArg08, 0xFFFFFFFF, out edx_33)
	branch ecx == 0x00000054 l10026536
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002652F:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -20(fp):<invalid> -16(fp):0xFFFFFFFF -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026536:
	return eax_34
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn100264FE_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



void fn1002653E(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002653E_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002653E:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	Mem21[ecx + 0x00000094:word32] = dwArg04
	branch ecx == 0x00000054 l10026565
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002655E:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026565:
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp

fn1002653E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp



void fn1002656B(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002656B_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002656B:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	Mem21[ecx + 0x00000090:word32] = dwArg04
	branch ecx == 0x00000054 l10026592
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002658B:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026592:
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp

fn1002656B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp



void fn10026598(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10026598_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10026598:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	word32 edx_23 = Mem0[ecx + 0x00000084:word32]
	branch dwArg04 >=u edx_23 l100265E7
// DataOut: ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100265B9:
	branch dwArg04 == edx_23 - 0x00000001 l100265E1
// DataOut: ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> -20(fp):ecx + 0x00000054 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100265C0:
	word32 ecx_78 = Mem0[ecx + 0x00000080:word32] + dwArg04 * 0x00000004
	memmove(ecx_78, ecx_78 + 0x00000004, (edx_23 - dwArg04) * 0x00000004 + 0xFFFFFFFC)
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> -20(fp):ecx + 0x00000054 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100265E1:
	Mem74[ecx + 0x00000084:word32] = Mem0[ecx + 0x00000084:word32] - 0x00000001
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100265E7:
	word32 eax_40 = Mem0[ecx + 0x00000090:word32]
	branch Mem0[ecx + 0x00000084:word32] >= eax_40 l100265FC
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100265F5:
	Mem61[ecx + 0x00000090:word32] = eax_40 - 0x00000001
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100265FC:
	branch ecx == 0x00000054 l10026607
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10026600:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10026607:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn10026598_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ebx:ebx eax:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn1002660E(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: eax ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002660E_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002660E:
	word32 ecx_116 = dwArg04
	branch dwArg04 != 0x00000000 l1002662B
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026626:
	ecx_116 = 0x10003338
// DataOut: cs ds ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002662B:
	word32 ecx_33
	word32 edx_107
	branch fn1000CECD(ecx_116, fp - 0x00000008, es, ds, out ecx_33, out edx_107) < 0x00000000 l10026687
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10026687:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ax:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002663A:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	word32 eax_65 = Mem0[ecx + 0x00000084:word32]
	branch eax_65 != Mem0[ecx - 0xFFFFFF74:word32] l10026665
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ax:<invalid> eax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10026652:
	branch fn10015655(ecx - 0xFFFFFF80, es, ds, eax_65 + 0x00000001, out edx_107) >= 0x00000000 l10026665
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx - 0xFFFFFF80 ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -28(fp):ecx + 0x00000054 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10026665:
	Mem90[ecx - 0xFFFFFF7C:word32] = Mem0[ecx - 0xFFFFFF7C:word32] + 0x00000001
	word32 ecx_94 = Mem90[ecx - 0xFFFFFF80:word32] + (Mem90[ecx - 0xFFFFFF7C:word32] - 0x00000001) * 0x00000004
	branch ecx_94 == 0x00000000 l1002667A
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx - 0xFFFFFF80 ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10026675:
	Mem99[ecx_94:word32] = 0x00000000
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx - 0xFFFFFF80 ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10026660:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx - 0xFFFFFF80 ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002667A:
	branch ecx == 0x00000054 l1002668A
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx - 0xFFFFFF80 ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002667E:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx - 0xFFFFFF80 ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002668A:
	CoTaskMemFree(0x00000000)
	return edx_107
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 ecx:<invalid> edx:<invalid> ebx:ecx + 0x00000054 eax:<invalid> ax:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

fn1002660E_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ecx:<invalid> edx:<invalid> eax:<invalid> ebx:ebx ax:<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp



word32 fn1002669D(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002669D_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002669D:
	AcquireSRWLockExclusive(ecx + 0x00000044)
	word32 edx_28 = Mem0[ecx + 0x00000050:word32] ^ dwArg04
	*edxOut = edx_28
	Mem29[dwArg08:word32] = edx_28
	Mem30[ecx + 0x00000050:word32] = dwArg04
	branch ecx == 0x00000044 l100266CC
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100266C5:
	ReleaseSRWLockExclusive(ecx + 0x00000044)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:ecx + 0x00000044 edx:<invalid> eax:<invalid> esi:<invalid> -20(fp):ecx + 0x00000044 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l100266CC:
	return dwArg08
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:ecx + 0x00000044 edx:<invalid> eax:<invalid> esi:<invalid> -20(fp):ecx + 0x00000044 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1002669D_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx edx:<invalid> eax:<invalid> esi:esi -20(fp):ecx + 0x00000044 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn100266D3(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn100266D3_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100266D3:
	AcquireSRWLockExclusive(ecx + 0x00000054)
	Mem21[ecx + 0x00000098:word32] = dwArg04
	branch ecx == 0x00000054 l100266FA
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100266F3:
	ReleaseSRWLockExclusive(ecx + 0x00000054)
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100266FA:
	return 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx + 0x00000054 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp

fn100266D3_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> -16(fp):ecx + 0x00000054 -12(fp):edi -8(fp):esi -4(fp):ebp



void fn10026702(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO al ax bl bx eax ebx rax rbx
// Preserved: ebx edi esi esp
fn10026702_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026702:
	AcquireSRWLockShared(ecx + 0x00000044)
	branch Mem0[ecx + 0x00000048:word32] != 0x00000001 l10026727
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002671B:
	branch Mem0[ecx + 0x0000004C:word32] == 0x00000000 l10026729
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx esi:ecx + 0x00000044 ebx:0x00000001 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10026721:
	branch Mem0[ecx + 0x0000004C:word32] == 0x00000003 l10026729
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx esi:ecx + 0x00000044 ebx:0x00000001 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10026727:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx esi:ecx + 0x00000044 ebx:0x00000001 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10026729:
	branch ecx == 0x00000044 l10026734
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx esi:ecx + 0x00000044 ebx:<invalid> bl:0x00 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002672D:
	ReleaseSRWLockShared(ecx + 0x00000044)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx esi:ecx + 0x00000044 ebx:<invalid> bl:0x00 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10026734:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx esi:ecx + 0x00000044 ebx:<invalid> bl:0x00 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx

fn10026702_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ebx:ebx bl:<invalid> al:0x00 -16(fp):ecx + 0x00000044 -12(fp):edi -8(fp):esi -4(fp):ebx



void fn10026829(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebx edi esi esp
fn10026829_entry:
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026829:
	word32 edi_15 = 0x00000000
	branch Mem0[ecx + 0x00000004:word32] <=u 0x00000000 l1002684A
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026839:
	CoTaskMemFree(Mem0[Mem0[ecx:word32] + edi_15 * 0x00000004:word32])
	edi_15 = edi_15 + 0x00000001
	branch edi_15 <u Mem0[ecx + 0x00000004:word32] l10026839
// DataOut: edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:0x00000000 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002684A:
	branch Mem0[ecx:word32] == 0x00000000 l10026858
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:0x00000000 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002684E:
	CoTaskMemFree(Mem0[ecx:word32])
	Mem53[ecx:word32] = 0x00000000
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:0x00000000 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10026858:
	Mem31[ecx + 0x00000004:word32] = 0x00000000
	Mem32[ecx + 0x0000000C:word32] = 0x00000000
	branch Mem32[ecx:word32] == 0x00000000 l1002686C
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:0x00000000 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l10026862:
	CoTaskMemFree(Mem32[ecx:word32])
	Mem48[ecx:word32] = 0x00000000
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:0x00000000 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002686C:
	Mem38[ecx + 0x00000004:word32] = 0x00000000
	Mem39[ecx + 0x0000000C:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> esi:ecx ebx:0x00000000 eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn10026829_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ebx:ebx eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



void fn10026876(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: edi
fn10026876_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026876:
	word32 esi_18 = ecx
	word32 eax_10 = Mem0[ecx + 0x0000002C:word32]
	branch eax_10 >= 0x00000000 l1002688A
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10026882:
	esi_18 = fn10011080(edx, ebx, ecx, es, ds, eax_10 * 0x00000002)
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:ecx eax:<invalid> -4(fp):esi
// LocalsOut: Local -0004(32)

l1002688A:
	word32 ecx_20 = esi_18 + 0x00000014
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi

l1002688E_thunk_fn1000F23B:
	word32 edx_27
	word32 ebp_28
	fn1000F23B(ecx_20, ebx, ebp, esi, edi, es, ds, out edx_27, out ebp_28)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> esi:esi eax:<invalid> ecx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi

fn10026876_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> edx:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn100269B0(word32 edx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edi edx es fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn100269B0_entry:
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100269B0:
	word32 eax_28 = Mem0[dwArg04 + 0x0000002C:word32]
	word32 edi_118 = edi
	word32 ebp_119 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_117 = fp - 0x00000018
	word32 ecx_137 = eax_28
	branch eax_28 < 0x00000000 l100269EA
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100269D5:
	edi_118 = ecx_137 - 0x00000001
	__lock()
	word32 eax_151
	__cmpxchg(Mem0[dwArg04 + 0x0000002C:word32], edi_118, ecx_137, out eax_151)
	edx = edi_118
	branch eax_151 == ecx_137 l100269F7
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100269E4:
	ecx_137 = eax_151
	branch eax_151 >= 0x00000000 l100269D5
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100269EA:
	__lock()
	word32 edi_139 = edi_118 | 0xFFFFFFFF
	Mem140[ecx_137 * 0x00000002 + 0x0000000C:word32] = __xadd(Mem0[ecx_137 * 0x00000002 + 0x0000000C:word32], edi_139)
	edi_118 = edi_139 - 0x00000001
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100269F7:
	branch edi_118 != 0x00000000 l10026A22
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100269FB:
	branch dwArg04 == 0x00000000 l10026A12
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100269FF:
	word32 esp_101
	word32 edi_102
	word32 ebp_103
	word32 ecx_104
	word32 eax_105
	byte SZO_106
	byte C_107
	word32 ebx_108
	word32 esi_109
	byte S_110
	word32 edx_111
	byte Z_112
	byte SCZO_113
	selector es_114
	selector ds_115
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_76,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_30,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_98,eax_96,ebp_7,ebx_21,ecx_100,edi_39,edx_36,es,esi_99,esp_97,S_37,SCZO_38,SZO_74,Z_75
		defs: C_107,ds_115,eax_105,ebp_103,ebx_108,ecx_104,edi_102,edx_111,es_114,esi_109,esp_101,S_110,SCZO_113,SZO_106,Z_112
	word32 ecx_120
	word32 eax_121
	byte SZO_122
	byte C_123
	word32 ebx_124
	word32 esi_125
	byte S_126
	byte Z_128
	byte SCZO_129
	call esi_109 (retsize: 4; depth: 4)
		uses: C_107,ds_115,dwLoc04_6,dwLoc08_16,dwLoc0C_30,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_98,eax_105,ebp_103,ebx_108,ecx_116,edi_102,edx_111,es_114,esi_109,esp_101,S_110,SCZO_113,SZO_106,Z_112
		defs: C_123,ds_131,eax_121,ebp_119,ebx_124,ecx_120,edi_118,edx_127,es_130,esi_125,esp_117,S_126,SCZO_129,SZO_122,Z_128
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026A12:
	branch Mem0[0x10031478:word32] == 0x00000000 l10026A22
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000001 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026A1B:
	__lock()
	Mem94[0x1003147C:word32] = Mem0[0x1003147C:word32] - 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000001 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026A22:
	word32 esp_61 = esp_117 + 0x00000004
	word32 ecx_69
	fn1002F420(edi_118, eax_15 ^ fp - 0x00000004, edx, Mem0[esp_61 + 0x00000004:word32], ebp_119, Mem0[esp_61:word32], Mem0[esp_117:word32], es, ds, out ecx_69)
	return edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000001 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn100269B0_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):0x00000001 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10026A40(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn10026A40_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10026A40:
	word32 eax_20 = Mem0[dwArg04 + 0x0000002C:word32]
	word32 ecx_21 = eax_20
	branch eax_20 < 0x00000000 l10026A6E
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026A59:
	word32 esi_59 = ecx_21 + 0x00000001
	__lock()
	word32 eax_62
	__cmpxchg(Mem0[dwArg04 + 0x0000002C:word32], esi_59, ecx_21, out eax_62)
	edx = esi_59
	branch eax_62 == ecx_21 l10026A7B
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10026A68:
	ecx_21 = eax_62
	branch eax_62 >= 0x00000000 l10026A59
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10026A6E:
	__lock()
	Mem51[ecx_21 * 0x00000002 + 0x0000000C:word32] = __xadd(Mem0[ecx_21 * 0x00000002 + 0x0000000C:word32], 0x00000001)
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10026A7B:
	return edx
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn10026A40_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> esi:esi edx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp



void fn10026A85(word32 edx, word32 ebx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn10026A85_entry:
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10026A85:
	word32 esi_21
	word32 edi_22
	word32 eax_23 = fn100106F6(dwArg04, edx, ebx, esi, es, ds, out esi_21, out edi_22)
	Mem31[eax_23:word32] = Mem0[eax_23:word32] & 0x00000000
	word32 ebx_34
	word32 ebp_35
	word32 esi_36
	word32 edi_37
	word32 eax_38 = fn1002FF64(eax_23, esi_21, edi_22, out ebx_34, out ebp_35, out esi_36, out edi_37)
	branch eax_38 != 0x00000000 l10026AB4
// DataOut: cs ds eax edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l10026AB4:
	Mem65[fp - 0x00000010:word32] = esi_36
	word32 ebx_68
	word32 edx_105
	word32 eax_69 = fn10026CEE(eax_38, edx, es, ds, out edx_105, out ebx_68)
	Mem72[fp - 0x00000014:word32] = Mem65[edi_37:word32]
	word32 esi_107
	word32 eax_77 = fn10024F4B(eax_69, edx_105, ebx_68, eax_69, es, ds, dwArg00, out esi_107)
	word32 edi_111 = eax_77
	branch eax_77 < 0x00000000 l10026ADC
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> -20(fp):0x00000034 -16(fp):0x10002F5C -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026ACD:
	Mem102[fp - 0x00000014:word32] = ebx_68
	word32 ebx_106
	word32 edi_108
	edi_111 = fn10026B6C(esi_107, 0x100030BC, es, ds, dwArg00, out edx_105, out ebx_106, out esi_107, out edi_108)
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026ADC:
	branch esi_107 == 0x00000000 l10026AE6
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026AE0:
	Mem98[fp - 0x00000014:word32] = esi_107
	fn100269B0(edx_105, edi_111, es, ds, dwArg00)
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026AE6:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026AAD:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> -20(fp):0x00000034 -16(fp):0x10002F5C -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026AE7:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

fn10026A85_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp



word32 fn10026AEF(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10026AEF_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l10026AEF:
	word32 eax_18 = Mem0[dwArg04:word32]
	branch eax_18 == 0x00000000 l10026B0A
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0014(32)

l10026B01:
	Mem123[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	*edxOut = fn100269B0(edx, ecx, es, ds, eax_18)
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:ecx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10026B0A:
	word32 edi_111
	Mem25[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 ebx_33
	word32 ebp_34
	word32 esi_35
	word32 edi_36
	word32 eax_37 = fn1002FF64(dwArg04, esi, ecx, out ebx_33, out ebp_34, out esi_35, out edi_36)
	branch eax_37 != 0x00000000 l10026B26
// DataOut: cs ds eax edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026B26:
	Mem65[fp - 0x00000010:word32] = esi_35
	word32 ebx_70
	word32 edx_103
	word32 eax_71 = fn10026CEE(eax_37, edx, es, ds, out edx_103, out ebx_70)
	Mem74[fp - 0x00000014:word32] = Mem65[edi_36:word32]
	word32 esi_78
	word32 eax_79 = fn10024F4B(eax_71, edx_103, ebx_70, eax_71, es, ds, dwArg00, out esi_78)
	edi_111 = eax_79
	branch eax_79 >= 0x00000000 l10026B4B
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):0x00000034 -16(fp):0x10002F5C -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026B4B:
	branch esi_78 == 0x00000000 l10026B55
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026B4F:
	Mem119[fp - 0x00000014:word32] = esi_78
	*edxOut = fn10026A40(dwArg00)
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026B55:
	Mem105[ebx_70:word32] = esi_78
	branch esi_78 == 0x00000000 l10026B61
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026B5B:
	Mem115[fp - 0x00000014:word32] = esi_78
	word32 edx_116
	*edxOut = fn100269B0(edx_103, eax_79, es, ds, dwArg00)
// DataOut: cs ds edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026B61:
	edi_111 = 0x00000000
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026B3F:
	branch esi_78 == 0x00000000 l10026B63
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10026B43:
	Mem97[fp - 0x00000014:word32] = esi_78
	word32 edx_98
	*edxOut = fn100269B0(edx_103, eax_79, es, ds, dwArg00)
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026B63:
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026B1F:
	edi_111 = 0x8007000E
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):0x00000034 -16(fp):0x10002F5C -12(fp):edi -8(fp):ebx -4(fp):ebp

l10026B64:
	return edi_111
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp

fn10026AEF_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):ebx -4(fp):ebp



word32 fn10026B6C(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10026B6C_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10026B6C:
	word32 edx_107
	word32 esp_142
	word32 eax_113
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem35[dwArg04:word32] = 0x00000000
	word32 ebp_100 = fp - 0x00000004
	word32 edi_30 = 0x00000000
	branch fn100103B2(edx, 0x10003794) != 0x00000000 l10026BF9
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l10026B9D:
	branch fn100103B2(edx, 0x10004BD0) != 0x00000000 l10026BF9
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:edx edx:0x10003794 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BF9:
	Mem71[dwArg04:word32] = ecx
	word32 esp_83
	word32 edi_84
	word32 ebp_85
	word32 ecx_86
	word32 eax_87
	byte SZO_88
	byte C_89
	word32 ebx_90
	word32 esi_91
	word32 edx_92
	byte Z_93
	byte SCZO_94
	byte S_95
	selector es_96
	selector ds_97
	call Mem71[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_39,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_29,dwLoc10_19,dwLoc14_22,dwLoc18_27,dwLoc1C_74,dwLoc20,dwLoc24,eax_72,ebp_7,ebx_25,ecx_76,edi_30,edx_34,es,esi_75,esp_73,S,SCZO,SZO_37,Z_38
		defs: C_89,ds_97,eax_87,ebp_85,ebx_90,ecx_86,edi_84,edx_92,es_96,esi_91,esp_83,S_95,SCZO_94,SZO_88,Z_93
	word32 edi_99
	word32 ecx_101
	word32 eax_102
	byte SZO_103
	byte C_104
	word32 ebx_105
	word32 esi_106
	byte Z_108
	byte SCZO_109
	byte S_110
	call esi_91 (retsize: 4; depth: 4)
		uses: C_89,ds_97,dwLoc04_6,dwLoc08_16,dwLoc0C_29,dwLoc10_19,dwLoc14_22,dwLoc18_27,dwLoc1C_74,dwLoc20,dwLoc24,eax_87,ebp_85,ebx_90,ecx_86,edi_84,edx_92,es_96,esi_91,esp_83,S_95,SCZO_94,SZO_88,Z_93
		defs: C_104,ds_112,eax_102,ebp_100,ebx_105,ecx_101,edi_99,edx_107,es_111,esi_106,esp_98,S_110,SCZO_109,SZO_103,Z_108
	eax_113 = 0x00000000
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:edx edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BAB:
	word32 edi_135
	word32 eax_122 = fn100103B2(edx, 0x100030BC)
	branch eax_122 == 0x00000000 l10026BBD
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:edx edx:0x10004BD0 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BBD:
	*edxOut = 0x10004BA0
	branch fn100103B2(edx, 0x10004BA0) == 0x00000000 l10026BD2
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:edx edx:0x100030BC -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BD2:
	edi_135 = fn10026C8E(ecx + 0x00000008, edx, dwArg04, out edx_107)
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:edx + 0x00000004 ecx:edx edx:0x10004BA0 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BCE:
	Mem201[dwArg04:word32] = ecx + 0x00000004
	edi_135 = edi_30
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:edx + 0x00000004 ecx:edx edx:0x10004BA0 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BDF:
	esp_142 = fp - 0x00000018
	branch edi_135 < 0x00000000 l10026BF5
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:edx + 0x00000004 ecx:<invalid> edx:<invalid> -36(fp):0x10004BA0 -32(fp):<invalid> -28(fp):0x10004BA0 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BB9:
	Mem182[dwArg04:word32] = ecx
// DataOut: cs ds ebp edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:edx edx:0x100030BC -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BE3:
	word32 esp_152
	word32 edi_153
	word32 ebp_154
	word32 ecx_155
	word32 eax_156
	byte SZO_157
	byte C_158
	word32 ebx_159
	word32 esi_160
	word32 edx_161
	byte Z_162
	byte SCZO_163
	byte S_164
	selector es_165
	selector ds_166
	call Mem35[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_125,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_29,dwLoc10_19,dwLoc14_22,dwLoc18_27,dwLoc1C_148,dwLoc20_144,dwLoc24_145,eax_122,ebp_7,ebx_25,ecx_151,edi_30,edx_149,es,esi_150,esp_147,S,SCZO,SZO_123,Z_124
		defs: C_158,ds_166,eax_156,ebp_154,ebx_159,ecx_155,edi_153,edx_161,es_165,esi_160,esp_152,S_164,SCZO_163,SZO_157,Z_162
	word32 ecx_170
	word32 eax_171
	byte SZO_172
	byte C_173
	word32 ebx_174
	word32 esi_175
	byte Z_177
	byte SCZO_178
	byte S_179
	call esi_160 (retsize: 4; depth: 4)
		uses: C_158,ds_166,dwLoc04_6,dwLoc08_16,dwLoc0C_29,dwLoc10_19,dwLoc14_22,dwLoc18_27,dwLoc1C_148,dwLoc20_144,dwLoc24_145,eax_156,ebp_154,ebx_159,ecx_155,edi_153,edx_161,es_165,esi_160,esp_152,S_164,SCZO_163,SZO_157,Z_162
		defs: C_173,ds_181,eax_171,ebp_169,ebx_174,ecx_170,edi_168,edx_176,es_180,esi_175,esp_167,S_179,SCZO_178,SZO_172,Z_177
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -36(fp):0x10004BA0 -32(fp):<invalid> -28(fp):0x10004BA0 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026BF5:
	eax_113 = edi_135
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -36(fp):0x10004BA0 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10026C0D:
	word32 esp_54 = esp_142 + 0x00000004
	word32 edi_53 = Mem35[esp_142:word32]
	*ediOut = edi_53
	word32 esi_55 = Mem35[esp_54:word32]
	*esiOut = esi_55
	word32 ebx_60 = Mem35[esp_54 + 0x00000004:word32]
	*ebxOut = ebx_60
	word32 ecx_62
	return fn1002F420(eax_113, eax_15 ^ fp - 0x00000004, edx_107, ebx_60, ebp_100, esi_55, edi_53, es, ds, out ecx_62)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -36(fp):0x10004BA0 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn10026B6C_exit:
// DataOut: eax ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> -36(fp):0x10004BA0 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



void fn10026C20(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10026C20_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10026C20:
	word32 eax_18 = Mem0[dwArg04:word32]
	word32 edi_22 = (eax_18 << 0x00000004) + dwArg08
	Mem24[edi_22:word32] = Mem0[0x100030BC:word32]
	Mem28[edi_22 + 0x00000004:word32] = Mem24[0x100030C0:word32]
	Mem32[edi_22 + 0x00000008:word32] = Mem28[0x100030C4:word32]
	Mem36[edi_22 + 0x0000000C:word32] = Mem32[0x100030C8:word32]
	word32 edi_40 = (eax_18 + 0x00000001 << 0x00000004) + dwArg08
	Mem42[edi_40:word32] = Mem36[0x10004BA0:word32]
	Mem46[edi_40 + 0x00000004:word32] = Mem42[0x10004BA4:word32]
	Mem50[edi_40 + 0x00000008:word32] = Mem46[0x10004BA8:word32]
	Mem54[edi_40 + 0x0000000C:word32] = Mem50[0x10004BAC:word32]
	word32 edi_58 = (eax_18 + 0x00000002 << 0x00000004) + dwArg08
	Mem60[edi_58:word32] = Mem54[0x100030AC:word32]
	Mem64[edi_58 + 0x00000004:word32] = Mem60[0x100030B0:word32]
	Mem68[edi_58 + 0x00000008:word32] = Mem64[0x100030B4:word32]
	Mem72[edi_58 + 0x0000000C:word32] = Mem68[0x100030B8:word32]
	word32 edi_76 = (eax_18 + 0x00000003 << 0x00000004) + dwArg08
	Mem78[edi_76:word32] = Mem72[0x1000309C:word32]
	Mem82[edi_76 + 0x00000004:word32] = Mem78[0x100030A0:word32]
	Mem86[edi_76 + 0x00000008:word32] = Mem82[0x100030A4:word32]
	Mem90[edi_76 + 0x0000000C:word32] = Mem86[0x100030A8:word32]
	Mem97[dwArg04:word32] = eax_18 + 0x00000005
	word32 edi_94 = (eax_18 + 0x00000004 << 0x00000004) + dwArg08
	Mem99[edi_94:word32] = Mem97[0x10003128:word32]
	Mem103[edi_94 + 0x00000004:word32] = Mem99[0x1000312C:word32]
	Mem107[edi_94 + 0x00000008:word32] = Mem103[0x10003130:word32]
	Mem111[edi_94 + 0x0000000C:word32] = Mem107[0x10003134:word32]
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10026C20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp edx:<invalid> ecx:<invalid> eax:<invalid> esi:esi -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn10026C8E(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10026C8E_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10026C8E:
	word32 eax_28
	word32 esi_12 = ecx
	word32 edx_13
	*edxOut = 0x100030AC
	branch fn100103B2(dwArg04, 0x100030AC) != 0x00000000 l10026CC9
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10026CA7:
	word32 edx_60
	*edxOut = 0x1000309C
	esi_12 = ecx + 0x00000004
	branch fn100103B2(dwArg04, 0x1000309C) != 0x00000000 l10026CC9
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx edx:0x100030AC ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10026CB8:
	word32 edx_67
	*edxOut = 0x10003128
	esi_12 = ecx + 0x00000008
	branch fn100103B2(dwArg04, 0x10003128) == 0x00000000 l10026CD0
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000004 edx:0x1000309C ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l10026CD0:
	word32 edx_80
	branch fn1001036A(ecx + 0x0000000C, dwArg04, dwArg08, out edx_80) < 0x00000000 l10026CE4
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:0x10003128 ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026CE4:
	eax_28 = 0x80004002
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:ecx + 0x00000008 edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026CC9:
	Mem56[dwArg08:word32] = esi_12
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026CE0:
	eax_28 = 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l10026CE9:
	return eax_28
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn10026C8E_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn10026CEE(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn10026CEE_entry:
	*ebxOut = ebx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026CEE:
	word32 edx_16
	*edxOut = fn10010735(ecx + 0x00000014, edx, es, ds)
	Mem20[ecx + 0x0000002C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001B7C
	Mem22[ecx + 0x00000004:word32] = 0x10001B6C
	Mem23[ecx + 0x00000008:word32] = 0x10001B50
	Mem24[ecx + 0x0000000C:word32] = 0x10001B30
	Mem25[ecx + 0x00000010:word32] = 0x10001B14
	Mem26[ecx + 0x00000014:word32] = 0x10001AF0
	branch Mem0[0x10031478:word32] == 0x00000000 l10026D3D
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10026D36:
	__lock()
	Mem46[0x1003147C:word32] = Mem26[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l10026D3D:
	Mem27[ecx + 0x00000014:word32] = 0x10001BBC
	Mem29[ecx:word32] = 0x10001C48
	Mem30[ecx + 0x00000004:word32] = 0x10001C38
	Mem31[ecx + 0x00000008:word32] = 0x10001C1C
	Mem32[ecx + 0x0000000C:word32] = 0x10001BFC
	Mem33[ecx + 0x00000010:word32] = 0x10001BE0
	Mem35[ecx + 0x00000030:word32] = Mem33[ecx + 0x00000030:word32] & 0x00000000
	return ecx
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn10026CEE_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn100270CA(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn100270CA_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100270CA:
	fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001DF4
	Mem22[ecx + 0x00000004:word32] = 0x10001E5C
	branch Mem0[0x10031478:word32] == 0x00000000 l100270FD
// DataOut: cs ds ebp edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100270F6:
	__lock()
	Mem37[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l100270FD:
	Mem26[ecx:word32] = 0x10001E80
	Mem27[ecx + 0x00000020:word32] = 0x00000000
	Mem28[ecx + 0x00000024:word32] = 0x00000000
	Mem29[ecx + 0x00000004:word32] = 0x10001E5C
	Mem30[ecx + 0x00000028:word32] = 0x00000000
	return ecx
// DataOut: cs ds eax ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn100270CA_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn10027276(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax ebx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn10027276_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027276:
	word32 ebp_126 = fp - 0x00000004
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_175 = fp - 0x00000018
	word32 edi_125 = dwArg04
	word32 ebx_182 = ecx
	branch dwArg04 == 0x00000000 l100272A6
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10027296:
	word32 esp_160
	word32 edi_161
	word32 ebp_162
	word32 ecx_163
	word32 eax_164
	byte SZO_165
	byte C_166
	word32 ebx_167
	word32 esi_168
	byte Z_169
	byte SCZO_170
	byte S_171
	selector es_172
	selector ds_173
	word32 edx_174
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_31,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_156,eax_154,ebp_7,ebx_27,ecx_158,edi_26,edx,es,esi_157,esp_155,S,SCZO,SZO_29,Z_30
		defs: C_166,ds_173,eax_164,ebp_162,ebx_167,ecx_163,edi_161,edx_174,es_172,esi_168,esp_160,S_171,SCZO_170,SZO_165,Z_169
	word32 eax_179
	byte SZO_180
	byte C_181
	word32 esi_183
	byte Z_184
	byte SCZO_185
	byte S_186
	word32 edx_189
	call esi_168 (retsize: 4; depth: 4)
		uses: C_166,ds_173,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_156,eax_164,ebp_162,ebx_167,ecx_163,edi_161,edx_174,es_172,esi_168,esp_160,S_171,SCZO_170,SZO_165,Z_169
		defs: C_181,ds_188,eax_179,ebp_177,ebx_182,ecx_178,edi_176,edx_189,es_187,esi_183,esp_175,S_186,SCZO_185,SZO_180,Z_184
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100272A6:
	word32 esp_124
	word32 esi_132 = ebx_182 + 0x00000020
	word32 ebx_131 = 0x00000000
	word32 eax_51 = Mem0[esi_132 + 0x00000004:word32]
	branch eax_51 != Mem0[esi_132 + 0x0000000C:word32] l100272C3
// DataOut: cs ds eax ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l100272B3:
	word32 esp_139 = esp_175 - 0x00000004
	Mem140[esp_139:word32] = ecx
	Mem145[esp_139 - 0x00000004:word32] = eax_51 + 0x00000001
	word32 edx_147
	word32 eax_148 = fn10015655(esi_132, es, ds, dwArg00, out edx_147)
	esp_124 = esp_139 + 0x00000004
	ebx_131 = eax_148
	branch eax_148 < 0x00000000 l100272E9
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:ecx + 0x00000020 ecx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100272C3:
	Mem92[esi_132 + 0x00000004:word32] = Mem0[esi_132 + 0x00000004:word32] + 0x00000001
	esp_124 = esp_175
	word32 eax_96 = Mem92[esi_132:word32] + (Mem92[esi_132 + 0x00000004:word32] - 0x00000001) * 0x00000004
	branch eax_96 == 0x00000000 l100272E9
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx + 0x00000020 ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100272D3:
	Mem100[eax_96:word32] = edi_125
	branch edi_125 == 0x00000000 l100272E9
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx + 0x00000020 ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100272D9:
	word32 esp_105 = esp_175 - 0x00000004
	Mem106[esp_105:word32] = edi_125
	word32 esp_109
	word32 edi_110
	word32 ebp_111
	word32 ecx_112
	word32 eax_113
	byte SZO_114
	byte C_115
	word32 ebx_116
	word32 esi_117
	byte Z_118
	byte SCZO_119
	byte S_120
	selector es_121
	selector ds_122
	word32 edx_123
	call Mem106[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_103,ds_38,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_37,eax_104,ebp_47,ebx_89,ecx_108,edi_42,edx_88,es_39,esi_107,esp_105,S_87,SCZO_52,SZO_101,Z_102
		defs: C_115,ds_122,eax_113,ebp_111,ebx_116,ecx_112,edi_110,edx_123,es_121,esi_117,esp_109,S_120,SCZO_119,SZO_114,Z_118
	word32 ecx_127
	word32 eax_128
	byte SZO_129
	byte C_130
	byte Z_133
	byte SCZO_134
	byte S_135
	word32 edx_138
	call esi_117 (retsize: 4; depth: 4)
		uses: C_115,ds_122,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_22,dwLoc18_24,dwLoc1C_37,eax_113,ebp_111,ebx_116,ecx_112,edi_110,edx_123,es_121,esi_117,esp_109,S_120,SCZO_119,SZO_114,Z_118
		defs: C_130,ds_137,eax_128,ebp_126,ebx_131,ecx_127,edi_125,edx_138,es_136,esi_132,esp_124,S_135,SCZO_134,SZO_129,Z_133
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx + 0x00000020 ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100272E9:
	word32 edx_65
	word32 esi_66
	fn1000C640(fp - 0x0000000C, ebx_131, esi_132, edi_125, es, ds, out edx_65, out esi_66)
	word32 esp_71 = esp_124 + 0x00000004
	word32 edi_70 = Mem0[esp_124:word32]
	*ediOut = edi_70
	word32 esi_72 = Mem0[esp_71:word32]
	*esiOut = esi_72
	word32 ebx_77 = Mem0[esp_71 + 0x00000004:word32]
	*ebxOut = ebx_77
	word32 ecx_79
	return fn1002F420(ebx_131, eax_15 ^ fp - 0x00000004, edx_65, ebx_77, ebp_126, esi_72, edi_70, es, ds, out ecx_79)
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10027276_exit:
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10027306(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn10027306_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027306:
	word32 edx_16
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001E10
	Mem22[ecx + 0x00000004:word32] = 0x10001E24
	branch Mem0[0x10031478:word32] == 0x00000000 l10027339
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027332:
	__lock()
	Mem38[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l10027339:
	Mem24[ecx + 0x00000020:word32] = Mem22[ecx + 0x00000020:word32] & 0x00000000
	Mem28[ecx + 0x00000004:word32] = 0x10001E24
	Mem31[ecx:word32] = 0x10001E48
	return ecx
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn10027306_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn1002748A(word32 ecx, word32 ebp, word32 esi, selector es, selector ds, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es esi fs gs ss
// LiveOut: bl ebp ebx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: eax edi esi esp
fn1002748A_entry:
	*ebpOut = ebp
	*ebxOut = ebx
// DataOut: cs ds ebp ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002748A:
	byte bl_18
	word32 edx_17
	word32 eax_19 = fn10027AEC(ecx, ebp, es, ds, ecx, out edx_17, out bl_18)
	branch eax_19 >= 0x00000000 l100274B3
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002749B:
	Mem41[fp - 0x00000008:word32] = eax_19
	Mem43[fp - 0x0000000C:word32] = 0x10005940
	Mem45[fp - 0x00000010:word32] = 0x1000598C
	Mem47[fp - 0x00000014:word32] = 0x10005880
	word32 ebx_49
	word32 esi_50
	word16 di_51
	edx_17 = fn10027E6F(es, ds, dwArg00, out ebx_49, out esi_50, out di_51)
// DataOut: bl cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> ax:<invalid> ebp:<invalid> ebx:<invalid> cl:<invalid> -16(fp):ecx -12(fp):ecx -8(fp):ecx -4(fp):esi

l100274B3:
	return edx_17
// DataOut: bl cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> ebp:<invalid> ebx:<invalid> cl:<invalid> -20(fp):0x10005880 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

fn1002748A_exit:
// DataOut: bl ebp ebx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> ebp:<invalid> ebx:<invalid> cl:<invalid> -20(fp):0x10005880 -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn100274B7(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn100274B7_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100274B7:
	word32 eax_19
	branch ecx == 0x00000000 l100274CC
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100274CC:
	eax_19 = 0x80070057
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100274C4:
	word32 edx_42
	eax_19 = fn100274E1(ecx, dwArg04, out edx_42)
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100274D1:
	branch eax_19 >= 0x00000000 l100274DC
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100274D5:
	branch dwArg04 == 0x00000000 l100274DC
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100274D9:
	Mem37[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l100274DC:
	return eax_19
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn100274B7_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> edx:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn100274E1(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn100274E1_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100274E1:
	word32 edx_17
	*edxOut = 0x7FFFFFFF
// DataOut: cs di ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l100274F2:
	branch Mem0[ecx:word16] == 0x0000 l100274FF
// DataOut: cs di ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:0x7FFFFFFF edx:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100274F7:
	ecx = ecx + 0x00000002
	edx_17 = edx_17 - 0x00000001
	*edxOut = edx_17
	branch edx_17 != 0x00000000 l100274F2
// DataOut: cs di ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:0x7FFFFFFF edx:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l100274FF:
	word32 eax_36 = (0x00000000 - (-edx_17 == 0x00000000) & 0x7FF8FFA9) + 0x80070057
	branch dwArg04 == 0x00000000 l10027522
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:0x7FFFFFFF edx:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10027516:
	branch edx_17 == 0x00000000 l10027520
// DataOut: cs ds eax ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:0x7FFFFFFF edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10027520:
	Mem57[dwArg04:word32] = 0x00000000
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:0x7FFFFFFF edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002751A:
	Mem56[dwArg04:word32] = 0x7FFFFFFF - edx_17
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:0x7FFFFFFF edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10027522:
	return eax_36
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x00000000 ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

fn100274E1_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp



word32 fn1002752A(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax
// Trashed: ah al ax eax rax
// Preserved: edi esp
fn1002752A_entry:
// DataOut: cs ds ebp ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002752A:
	return HeapAlloc(GetProcessHeap(), 0x00000008, ecx)
// DataOut: cs ds eax ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002752A_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi eax:<invalid> -12(fp):<invalid> -8(fp):0x00000008 -4(fp):ecx



void fn1002753D(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: esp
fn1002753D_entry:
// DataOut: bl bx cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002753D:
	branch ecx != 0x00000000 l10027545
// DataOut: bl bx cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027545:
	HeapFree(GetProcessHeap(), 0x00000000, ecx)
	return
// DataOut: bl bx cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10027541:
	return
// DataOut: bl bx cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002753D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ecx



word32 fn10027556(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: ebp ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: eax edi esi esp
fn10027556_entry:
	*ebpOut = ebp
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32)

l10027556:
	word32 edx_11
	branch fn100274B7(ecx, edx, out edx_11) >= 0x00000000 l1002757D
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027565:
	word32 esi_51
	word16 di_52
	fn10027E6F(es, ds, 0x10005880, out ebx, out esi_51, out di_52)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -8(fp):edx -4(fp):esi

l1002757D:
	return ebx
// DataOut: cs ds ebp ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> ebp:<invalid> ebx:<invalid> -20(fp):0x10005880 -16(fp):0x100059F0 -12(fp):0x100059CC -8(fp):<invalid> -4(fp):esi

fn10027556_exit:
// DataOut: ebp ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> ebp:<invalid> ebx:<invalid> -20(fp):0x10005880 -16(fp):0x100059F0 -12(fp):0x100059CC -8(fp):<invalid> -4(fp):esi



word32 fn10027581(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10027581_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0) Local -0030(32) Stack +0004(32)

l10027581:
	word32 eax_16 = ecx
	word32 edi_126 = dwArg04
	word32 esi_118 = 0x00000000
	branch dwArg04 != 0x00000000 l100275CC
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0) Local -0030(32)

l100275CC:
	Mem135[dwArg04:word32] = 0x00000000
	branch ecx != 0x00000000 l100275DA
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:ecx ebx:edx ecx:0x00000000 esi:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l100275D2:
	branch edx == 0x00000000 l100276A3
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:ecx ebx:edx ecx:0x00000000 esi:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l100275DA:
	branch ecx == 0x00000000 l10027600
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:ecx ebx:edx ecx:0x00000000 esi:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l100275E4:
	word32 edx_304
	word32 eax_305 = fn100274B7(ecx, fp - 0x00000008, out edx_304)
	esi_118 = eax_305
	branch eax_305 >= 0x00000000 l10027600
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:ecx ebx:edx ecx:0x00000000 esi:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l10027600:
	branch edx == 0x00000000 l10027615
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):fp - 0x00000008 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l10027604:
	word32 edx_293
	word32 eax_294 = fn100274B7(edx, fp - 0x0000000C, out edx_293)
	esi_118 = eax_294
	branch eax_294 < 0x00000000 l100275F5
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):fp - 0x00000008 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l10027615:
	word32 eax_219 = fn1002752A(0x00000002)
	Mem220[dwArg04:word32] = eax_219
	branch eax_219 != 0x00000000 l10027647
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -002C(0)

l10027647:
	Mem238[eax_219:word16] = 0x0000
	branch true l10027664
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:0x00000002 esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32)

l10027651:
	word32 edx_282
	word32 eax_283 = fn100130AC(eax_219, 0x00000001, 0x00000000, out edx_282)
	esi_118 = eax_283
	branch eax_283 < 0x00000000 l1002767B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:0x00000000 esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32)

l10027664:
	branch true l10027693
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32)

l1002766A:
	word32 edx_270
	word32 eax_271 = fn100130AC(Mem238[dwArg04:word32], 0x00000001, edx, out edx_270)
	esi_118 = eax_271
	branch eax_271 >= 0x00000000 l100276A1
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002767B:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002762F:
	fn10027E87(es, ds, 0x100058D0, out esi_118)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:0x00000002 esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100275F5:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10027681:
	word32 ebx_179
	word16 di_181
	fn10027E6F(es, ds, 0x10005880, out ebx_179, out esi_118, out di_181)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx ecx:<invalid> esi:<invalid> edx:<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10027693:
	branch esi_118 >= 0x00000000 l100276A1
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10005880 -44(fp):0x10005A04 -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002759E:
	word32 ebx_117
	word16 di_119
	fn10027E6F(es, ds, 0x10005840, out ebx_117, out esi_118, out di_119)
	word32 ebp_125
	fn10028008(ebx_117, 0x100059C0, ebx_117, esi_118, dwArg04, es, ds, out ebp_125, out edi_126)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:ecx ebx:edx ecx:0x00000000 esi:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -4(fp):ebp

l10027697:
	fn1002753D(Mem0[edi_126:word32])
	Mem104[edi_126:word32] = Mem0[edi_126:word32] & 0x00000000
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10005880 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100276A1:
	eax_16 = esi_118
// DataOut: cs ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10005880 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100276A3:
	return eax_16
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10005880 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn10027581_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x10005880 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0x00000001 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn100276AC(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32)
fn100276AC_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -002C(32) Stack +0008(32)

l100276AC:
	word32 eax_113
	branch dwArg08 != 0x00000000 l100276EC
// DataOut: cs ds eax ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(0) Local -0010(32) Local -002C(32)

l100276EC:
	word32 dwLoc30_116
	Mem78[dwArg08:word32] = 0x00000000
	word32 eax_92 = RegQueryValueExW(ecx, edx, 0x00000000, fp - 0x0000000C, 0x00000000, fp - 0x00000008)
	word32 esi_109 = eax_92
	branch eax_92 != 0x00000002 l10027722
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:ecx edx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0010(32) Local -0034(32)

l10027722:
	branch eax_92 != 0x00000000 l1002773D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):0x00000000 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0010(32) Local -0034(32)

l1002773D:
	branch eax_92 != 0x000000EA l10027766
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):0x00000000 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0010(32)

l10027726:
	branch 0xFFFFFFFF == 0x00000000 l10027745
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):0x00000000 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0010(32) Local -0034(32)

l10027745:
	word32 eax_186 = fn1002752A(0x00000000)
	Mem188[dwArg08:word32] = eax_186
	esi_109 = RegQueryValueExW(ecx, edx, 0x00000000, fp - 0x0000000C, eax_186, fp - 0x00000008)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):0x00000000 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10027766:
	branch esi_109 == 0x00000000 l10027796
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):<invalid> -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002776A:
	word32 edi_158
	word32 ebp_159 = fn1002804C(es, ds, out edi_158)
	Mem161[fp - 0x00000020:word32] = esi_109
	Mem163[fp - 0x00000024:word32] = edi_158
	Mem166[fp - 0x00000028:word32] = Mem163[ebp_159 + 0x00000008:word32]
	Mem168[fp - 0x0000002C:word32] = 0x10005B40
	Mem170[fp - 0x00000030:word32] = 0x10005AC0
	word32 ebx_173 = fn10027E57(es, ds, dwArg00, out esi_109)
	word32 ecx_174 = Mem170[ebx_173:word32]
	branch ecx_174 == 0x00000000 l10027796
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):<invalid> -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002778E:
	fn1002753D(ecx_174)
	Mem180[ebx_173:word32] = Mem170[ebx_173:word32] & 0x00000000
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002772C:
	dwLoc30_116 = 0x10005C30
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):0x00000000 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0030(32) Local -0034(32)

l10027707:
	dwLoc30_116 = 0x10005B68
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):0x00000000 -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0030(32) Local -0034(32)

l10027716:
	word32 esi_122
	fn10027E57(es, ds, dwLoc30_116, out esi_122)
	esi_109 = 0x00000000
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> edx:0x00000000 ecx:fp - 0x0000000C esi:<invalid> -52(fp):fp - 0x0000000C -48(fp):<invalid> -44(fp):0x10005B40 -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10027796:
	eax_113 = esi_109
// DataOut: cs ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100276CD:
	word32 ebx_64
	word32 esi_65
	word16 di_66
	fn10027E6F(es, ds, 0x10005840, out ebx_64, out esi_65, out di_66)
	Mem71[fp - 0x00000020:word32] = 0x00000057
	eax_113 = Mem71[fp - 0x00000020:word32]
// DataOut: cs ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 ebx:<invalid> eax:ecx edx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10027798:
	return eax_113
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> al:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn100276AC_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn100277A1(word32 ecx, selector es, selector ds, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn100277A1_entry:
	*ebxOut = ebx
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100277A1:
	word32 eax_25 = RegOpenKeyExW(0x80000002, 0x10005D00, 0x00000000, 0x00020019, fp - 0x00000008)
	word32 esi_27 = eax_25
	branch eax_25 != 0x00000000 l100277D4
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0020(32)

l100277D4:
	word32 ebx_72
	word16 di_74
	fn10027E28(es, ds, 0x10005DE0, out ebx_72, out esi_27, out di_74)
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -32(fp):0x80000002 -28(fp):0x10005D00 -24(fp):0x00000000 -20(fp):0x00020019 -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):ecx -4(fp):ebp

l100277C9:
	RegCloseKey(ecx)
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -32(fp):0x80000002 -28(fp):0x10005D00 -24(fp):0x00000000 -20(fp):0x00020019 -16(fp):fp - 0x00000008 -12(fp):esi -8(fp):ecx -4(fp):ebp

l100277EC:
	return (word32) (esi_27 == 0x00000000)
// DataOut: cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x80000002 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ecx -4(fp):ebp

fn100277A1_exit:
// DataOut: eax ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> al:Test(EQ,Z) edx:<invalid> ax:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x80000002 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):ecx -4(fp):ebp



word32 fn100277F8(word32 ecx, word32 ebp, selector es, selector ds, ptr32 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: di eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn100277F8_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100277F8:
	word32 esi_115
	Mem34[ecx:word32] = 0x00000000
	word32 ebx_20 = 0x00000000
	branch RegOpenKeyExW(0x80000002, 0x10005EA0, 0x00000000, 0x00020019, fp - 0x00000008) == 0x00000000 l1002783C
// DataOut: cs ds ebp edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32)

l1002783C:
	word32 eax_113 = fn100276AC(0x00000000, 0x10006004, fp - 0x00000004, es, ds, 0x10005EF0, ecx)
	esi_115 = eax_113
	branch eax_113 == 0x00000000 l1002786D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -40(fp):0x80000002 -36(fp):0x10005EA0 -32(fp):0x00000000 -28(fp):0x00020019 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027855:
	Mem120[fp - 0x00000018:word32] = eax_113
	Mem122[fp - 0x0000001C:word32] = 0x10005B40
	Mem124[fp - 0x00000020:word32] = 0x10005F64
	Mem126[fp - 0x00000024:word32] = 0x10005A38
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):0x10005EA0 -32(fp):0x00000000 -28(fp):0x10005EF0 -24(fp):0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002782A:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -40(fp):0x80000002 -36(fp):0x10005EA0 -32(fp):0x00000000 -28(fp):0x00020019 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027865:
	word16 di_95
	fn10027E6F(es, ds, dwArg00, out ebx_20, out esi_115, out di_95)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l1002786D:
	branch Mem34[fp - 0x00000008:word32] == ebx_20 l1002787B
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l10027872:
	Mem77[fp - 0x00000018:word32] = Mem34[fp - 0x00000008:word32]
	RegCloseKey(Mem77[fp - 0x00000018:HKEY])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l1002787B:
	branch esi_115 == 0x00000000 l10027888
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l1002787F:
	fn1002753D(Mem34[ecx:word32])
	Mem74[ecx:word32] = ebx_20
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

l10027888:
	word16 di_63
	*diOut = (word16) Mem34[fp - 0x00000014:word32]
	return esi_115
// DataOut: cs di ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

fn100277F8_exit:
// DataOut: di eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp



word32 fn10027891(word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10027891_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027891:
	word32 ebx_118
	word32 esi_106
	word32 ebx_184
	word16 di_28
	word32 eax_29 = fn100277F8(fp - 0x0000000C, fp - 0x00000004, es, ds, out di_28)
	word32 ebp_119 = fp - 0x00000004
	word32 edi_115 = 0x00000000
	word16 bx_113 = (word16) eax_29
	branch eax_29 == 0x00000000 l100278D7
// DataOut: cs di ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(0)

l100278D7:
	word32 ebx_139 = Mem0[fp - 0x0000000C:word32]
	Mem141[fp - 0x0000000C:word32] = ebx_139
	branch ebx_139 == 0x00000000 l100279DD
// DataOut: cs di ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100278E5:
	branch Mem141[ebx_139:word16] == di_28 l100279DD
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100279DD:
	Mem149[fp - 0x00000020:word32] = 0x10006044
	Mem151[fp - 0x00000024:word32] = 0x10006068
	word32 ebx_152
	word32 esi_153
	word16 di_154
	fn10027E6F(es, ds, dwArg00, out ebx_152, out esi_153, out di_154)
	Mem161[fp - 0x00000020:word32] = 0x00000002
	bx_113 = (word16) Mem161[fp - 0x00000020:word32] (alias)
// DataOut: bx cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100278EE:
	word32 ebx_170 = fn10027556(ebx_139, fp - 0x00000010, es, ds, out ebp_119)
	branch eax_29 >= 0x00000000 l1002791B
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002791B:
	word32 esi_201
	word32 eax_190 = Mem141[ebp_119 - 0x0000000C:word32]
	branch eax_190 == 0x00000000 l10027970
// DataOut: cs ds eax ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027922:
	branch Mem141[ebx_170 - 0x00000002 + eax_190 * 0x00000002:word16] == 0x005C l10027970
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002792A:
	Mem283[fp - 0x00000020:word32] = ebp_119 - 0x00000004
	word32 eax_285 = fn10027581(ebx_170, 0x10002F58, es, ds, dwArg00)
	esi_201 = eax_285
	branch eax_285 >= 0x00000000 l10027960
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027960:
	fn1002753D(ebx_170)
	ebx_170 = Mem283[ebp_119 - 0x00000004:word32]
	Mem294[ebp_119 - 0x00000008:word32] = ebx_170
	Mem295[ebp_119 - 0x00000004:word32] = 0x00000000
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027970:
	Mem227[fp - 0x00000020:word32] = ebp_119 - 0x00000004
	word32 eax_229 = fn10027581(ebx_170, 0x10006DBC, es, ds, dwArg00)
	esi_201 = eax_229
	branch eax_229 < 0x00000000 l10027940
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10027986:
	edi_115 = Mem227[ebp_119 - 0x00000004:word32]
	Mem238[fp - 0x00000020:word32] = edi_115
	Mem240[fp - 0x00000024:word32] = 0x10006C1C
	Mem242[fp - 0x00000028:word32] = 0x80000002
	word32 eax_243 = RegLoadKeyW(Mem242[fp - 0x00000028:HKEY], Mem242[fp - 0x00000024:LPCWSTR], Mem242[fp - 0x00000020:LPCWSTR])
	bx_113 = (word16) eax_243 (alias)
	branch eax_243 == 0x00000000 l100279BB
// DataOut: cs ds ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100279BB:
	Mem267[fp - 0x00000020:word32] = 0x10006C40
	Mem269[fp - 0x00000024:word32] = edi_115
	Mem271[fp - 0x00000028:word32] = 0x10006044
	Mem273[fp - 0x0000002C:word32] = 0x10006178
	word16 di_276
	fn10027E28(es, ds, dwArg00, out ebx_118, out esi_106, out di_276)
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):0x10006C1C -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279A0:
	Mem251[fp - 0x00000020:word32] = eax_243
	Mem253[fp - 0x00000024:word32] = 0x10006C40
	Mem255[fp - 0x00000028:word32] = edi_115
	Mem257[fp - 0x0000002C:word32] = 0x10006044
	Mem259[fp - 0x00000030:word32] = 0x100060D0
	word16 di_262
	fn10027E6F(es, ds, dwArg00, out ebx_118, out esi_106, out di_262)
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -40(fp):0x80000002 -36(fp):0x10006C1C -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10027940:
	Mem204[fp - 0x00000020:word32] = esi_201
	Mem206[fp - 0x00000024:word32] = 0x10005A04
	Mem208[fp - 0x00000028:word32] = 0x10006044
	Mem210[fp - 0x0000002C:word32] = 0x10005880
	word16 di_213
	fn10027E6F(es, ds, dwArg00, out ebx_184, out esi_106, out di_213)
	edi_115 = Mem210[ebp_119 - 0x00000004:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -32(fp):fp - 0x00000008 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100278FE:
	Mem177[fp - 0x00000020:word32] = eax_29
	Mem179[fp - 0x00000024:word32] = 0x100059F0
	Mem181[fp - 0x00000028:word32] = 0x10006044
	Mem183[fp - 0x0000002C:word32] = 0x10005880
	word16 di_186
	fn10027E6F(es, ds, dwArg00, out ebx_184, out esi_106, out di_186)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100278B7:
	Mem124[fp - 0x00000020:word32] = eax_29
	Mem126[fp - 0x00000024:word32] = 0x10006018
	Mem128[fp - 0x00000028:word32] = 0x10006044
	Mem130[fp - 0x0000002C:word32] = 0x10005A38
	word16 di_134
	fn10027E6F(es, ds, dwArg00, out ebx_118, out esi_106, out di_134)
	Mem137[fp - 0x0000000C:word32] = Mem130[fp - 0x0000000C:word32]
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279D0:
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279D3:
	branch ebx_118 == 0x00000000 l100279FA
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): SZO
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279D7:
	branch ebx_118 > 0x00000000 l100279F1
// DataOut: bx cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279F1:
	esi_106 = (word32) bx_113 | 0x80070000
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279D9:
	esi_106 = ebx_118
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279FA:
	ebx_184 = Mem0[ebp_119 - 0x00000008:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100279FD:
	fn1002753D(ebx_184)
	fn1002753D(edi_115)
	return esi_106
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn10027891_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -48(fp):0x100060D0 -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn10027A16(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32)
fn10027A16_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l10027A16:
	word32 esi_100
	word32 edi_120
	branch dwArg08 != 0x00000000 l10027A54
// DataOut: cs ds eax ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10027A54:
	word32 ebx_101
	Mem85[dwArg08:word32] = 0x00000000
	word32 ebp_86
	word32 eax_87 = fn1002808F(ecx, fp - 0x00000008, 0x00000000, fp - 0x00000004, es, ds, out ebp_86)
	edi_120 = eax_87
	branch eax_87 != 0x80092004 l10027A82
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10027A82:
	branch eax_87 >= 0x00000000 l10027A9C
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:0x100061F0 ecx:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027A9C:
	Mem159[fp - 0x00000018:word32] = 0x100061F0
	branch Mem159[ebp_86 - 0x00000004:word32] != 0x00000000 l10027AB3
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:0x100061F0 ecx:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027AB3:
	Mem178[fp - 0x0000001C:word32] = 0x10006410
	word16 di_181
	fn10027E28(es, ds, dwArg00, out ebx_101, out esi_100, out di_181)
	Mem189[Mem178[ebp_86 + 0x0000000C:word32]:word32] = Mem178[ebp_86 - 0x00000004:word32]
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:0x100061F0 ecx:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x100061F0 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027AA2:
	Mem163[fp - 0x0000001C:word32] = 0x10006390
	word32 ebx_164
	word16 di_166
	fn10027E28(es, ds, dwArg00, out ebx_164, out esi_100, out di_166)
	edi_120 = 0x00000001
// DataOut: cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:0x100061F0 ecx:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -24(fp):0x100061F0 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027A86:
	Mem145[fp - 0x00000018:word32] = eax_87
	Mem147[fp - 0x0000001C:word32] = 0x10006330
	Mem149[fp - 0x00000020:word32] = 0x100061F0
	Mem151[fp - 0x00000024:word32] = 0x10005880
	word32 ebx_152
	word16 di_154
	fn10027E6F(es, ds, dwArg00, out ebx_152, out esi_100, out di_154)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:0x100061F0 ecx:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027A6D:
	Mem125[fp - 0x00000018:word32] = 0x100061F0
	Mem127[fp - 0x0000001C:word32] = 0x10006270
	word32 ebx_128
	word16 di_130
	fn10027E28(es, ds, dwArg00, out ebx_128, out esi_100, out di_130)
	edi_120 = 0x00000001
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:0x100061F0 ecx:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027A7D:
	ebx_101 = Mem85[ebp_86 - 0x00000004:word32]
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -36(fp):0x10005880 -32(fp):0x100061F0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027AC7:
	branch ebx_101 == 0x00000000 l10027AD2
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -36(fp):0x10005880 -32(fp):0x100061F0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027ACB:
	Mem110[fp - 0x00000018:word32] = ebx_101
	CertFreeCertificateContext(Mem110[fp - 0x00000018:PCCERT_CONTEXT])
// DataOut: cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -36(fp):0x10005880 -32(fp):0x100061F0 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027A2B:
	word32 ebx_72
	word16 di_74
	fn10027E6F(es, ds, 0x10005840, out ebx_72, out esi_100, out di_74)
	word32 ebp_80
	fn10028008(esi_100, ebx_72, ebx_72, esi_100, 0x80070057, es, ds, out ebp_80, out edi_120)
// DataOut: cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027AD2:
	Mem39[fp - 0x00000018:word32] = edi_120
	Mem41[fp - 0x0000001C:word32] = esi_100
	Mem43[fp - 0x00000020:word32] = 0x1000591C
	word32 ebx_47
	word32 esi_48
	word16 di_49
	fn10027E28(es, ds, dwArg00, out ebx_47, out esi_48, out di_49)
	return edi_120
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -36(fp):0x10005880 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp

fn10027A16_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -36(fp):0x10005880 -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):0x00000000 -4(fp):ebp



word32 fn10027AEC(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & edxOut, ptr32 & blOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: bl eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10027AEC_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0024(32) Stack +0004(32)

l10027AEC:
	word32 esi_107
	word32 edi_108
	branch dwArg04 != 0x00000000 l10027B2A
// DataOut: cs ds ebp ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0024(32)

l10027B2A:
	Mem97[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 eax_105 = fn10027A16(ecx, fp - 0x00000004, es, ds, fp - 0x00000008)
	esi_107 = eax_105
	edi_108 = 0x10005940
	branch eax_105 >= 0x00000000 l10027B58
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027B58:
	Mem148[dwArg04:word32] = (word32) (Mem97[fp - 0x00000008:word32] != 0x00000000)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x10005940 ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -32(fp):ecx -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027B42:
	Mem129[fp - 0x0000001C:word32] = eax_105
	Mem131[fp - 0x00000020:word32] = 0x100061F0
	Mem133[fp - 0x00000024:word32] = 0x10005940
	Mem135[fp - 0x00000028:word32] = 0x10005880
	word32 ebx_136
	word16 di_138
	fn10027E6F(es, ds, ptrArg00, out ebx_136, out esi_107, out di_138)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x10005940 ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -32(fp):ecx -28(fp):fp - 0x00000008 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027B62:
	branch Mem97[fp - 0x00000008:word32] == 0x00000000 l10027B71
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> -40(fp):0x10005880 -36(fp):0x10005940 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027B68:
	Mem125[fp - 0x0000001C:word32] = Mem97[fp - 0x00000008:word32]
	CertFreeCertificateContext(Mem125[fp - 0x0000001C:PCCERT_CONTEXT])
// DataOut: cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> -40(fp):0x10005880 -36(fp):0x10005940 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027B01:
	word32 ebx_83
	word16 di_85
	fn10027E6F(es, ds, 0x10005840, out ebx_83, out esi_107, out di_85)
	word32 ebp_91
	fn10028008(0x10005940, ebx_83, ebx_83, esi_107, 0x10005940, es, ds, out ebp_91, out edi_108)
// DataOut: cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edi ebp:fp - 0x00000004 ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027B71:
	Mem42[fp - 0x0000001C:word32] = 0x00000000
	fn1002EEC6(ptrArg00)
	Mem47[fp - 0x0000001C:word32] = esi_107
	Mem49[fp - 0x00000020:word32] = edi_108
	Mem51[fp - 0x00000024:word32] = 0x1000591C
	word32 ebx_54
	word32 esi_55
	word16 di_56
	word32 edx_57
	*edxOut = fn10027E28(es, ds, ptrArg00, out ebx_54, out esi_55, out di_56)
	byte bl_67
	*blOut = (byte) Mem51[fp - 0x00000010:word32]
	return esi_55
// DataOut: bl cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -40(fp):0x10005880 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp

fn10027AEC_exit:
// DataOut: bl eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -40(fp):0x10005880 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx & 0x00000000 -4(fp):ebp



word32 fn10027B93(word32 ecx, word32 edx, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0010(32)
fn10027B93_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0010(32)

l10027B93:
	word32 esi_123 = 0x00000000
	branch ecx != 0x00000000 l10027BAE
// DataOut: cs cx ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0010(32)

l10027BAA:
	branch edx != 0x00000000 l10027BB6
// DataOut: cs cx ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0010(32)

l10027BAE:
	branch edx <=u 0x7FFFFFFF l10027BB8
// DataOut: cs cx ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0010(32)

l10027BB6:
	esi_123 = 0x80070057
// DataOut: cs cx ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:0x00000000 -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0010(32)

l10027BB8:
	branch esi_123 < 0x00000000 l10027C13
// DataOut: cs cx ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Stack +0010(32)

l10027C13:
	branch edx == 0x00000000 l10027C1C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027C17:
	Mem146[ecx:word16] = 0x0000
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027BBC:
	word32 eax_137 = dwArg10
	branch dwArg10 != 0x00000000 l10027BC8
// DataOut: cs cx ds eax edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10027BC3:
	eax_137 = 0x10003338
// DataOut: cs cx ds eax edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10027BC8:
	esi_123 = 0x00000000
	branch edx != 0x00000000 l10027BE0
// DataOut: cs cx ds eax edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:<invalid> eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l10027BE0:
	word32 esp_95
	word32 edi_96
	word32 ebp_97
	word32 ebx_98
	word32 ecx_100
	byte SZO_101
	byte C_102
	byte Z_103
	word32 edx_104
	byte SCZO_105
	byte CZ_106
	byte S_107
	word32 eax_108
	word16 ax_109
	word16 cx_110
	call vsnwprintf (retsize: 4; depth: 36)
		uses: ax_65,C_70,cx_20,CZ_25,dwLoc04_6,dwLoc08_10,dwLoc0C_13,dwLoc10_15,dwLoc14_87,dwLoc18_90,dwLoc1C_92,dwLoc20_94,eax_64,ebp_7,ebx_88,ecx_19,edi_17,edx,esi_66,esp_93,S_30,SCZO_27,SZO_68,Z_69
		defs: ax_109,C_102,cx_110,CZ_106,eax_108,ebp_97,ebx_98,ecx_100,edi_96,edx_104,esi_99,esp_95,S_107,SCZO_105,SZO_101,Z_103
	branch eax_108 < 0x00000000 l10027C06
// DataOut: cs ds eax ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:0x00000000 eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027BF6:
	branch eax_108 >u ebx_98 l10027C06
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): Z
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 ebx:edx - 0x00000001 ecx:<invalid> esi:0x00000000 eax:<invalid> -32(fp):0x00000000 -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027C06:
	Mem124[edi_96 + ebx_98 * 0x00000002:word16] = 0x0000
	esi_123 = 0x8007007A
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 ebx:edx - 0x00000001 ecx:<invalid> esi:0x00000000 eax:<invalid> -32(fp):0x00000000 -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027BFA:
	branch eax_108 != ebx_98 l10027C1C
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 ebx:edx - 0x00000001 ecx:<invalid> esi:0x00000000 eax:<invalid> -32(fp):0x00000000 -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027BFC:
	Mem136[edi_96 + ebx_98 * 0x00000002:word16] = 0x0000
	esi_123 = 0x00000000
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 ebx:edx - 0x00000001 ecx:<invalid> esi:0x00000000 eax:<invalid> -32(fp):0x00000000 -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027BCE:
	branch Mem0[eax_137:word16] == 0x0000 l10027C1C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:0x00000000 eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027BD3:
	esi_123 = (0x00000000 - (-ecx == 0x00000000) & 0x00000023) + 0x80070057
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 ebx:0x80070057 ecx:0x00000000 esi:0x00000000 eax:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l10027C1C:
	return esi_123
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> -32(fp):0x00000000 -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn10027B93_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> -32(fp):0x00000000 -28(fp):edx - 0x00000001 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn10027C25(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10027C25_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10027C25:
	word32 edi_113 = edx
	word32 ebx_25 = Mem0[ecx + 0x00000008:word32]
	branch ebx_25 != 0x00000000 l10027C56
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +0008(32)

l10027C56:
	Mem133[dwArg08:word32] = ebx_25
	Mem134[dwArg08 + 0x00000004:word32] = 0x00000000
	Mem136[dwArg08 + 0x00000008:word32] = (word32) Mem134[ebx_25:word16]
	Mem137[dwArg08 + 0x0000000C:word32] = 0x00000002
	dwLoc08 = 0x00000000
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:edx ebp:fp - 0x00000004 esi:ecx ecx:<invalid> ebx:<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -12(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(8) Local -000C(32)

l10027C41:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:edx ebp:fp - 0x00000004 esi:ecx ecx:<invalid> ebx:<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -12(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(8) Local -000C(32)

l10027C70:
	byte al_36 = (byte) dwLoc08
	branch Mem0[edx + 0x00000003:byte] != al_36 l10027C93
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:edx ebp:fp - 0x00000004 esi:ecx ecx:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l10027C78:
	edi_113 = fp - 0x0000001C
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:edx ebp:fp - 0x00000004 esi:ecx ecx:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10027C93:
	word32 esp_63
	word32 edi_64
	word32 ebp_65
	byte SCZO_66
	word32 ebx_67
	word32 esi_68
	word32 ecx_69
	word32 edx_70
	byte SZO_71
	byte C_72
	byte Z_73
	word32 eax_74
	byte al_75
	call api-ms-win-eventing-provider-l1-1-0.dll!EventWrite (retsize: 4; depth: 64)
		uses: al_36,bLoc08_30,bLoc19_48,C_31,dwLoc04_6,dwLoc08_29,dwLoc0C_23,dwLoc10_47,dwLoc14_46,dwLoc18_45,dwLoc1C_44,dwLoc20_11,dwLoc24_14,dwLoc28_20,dwLoc2C_52,dwLoc30_54,dwLoc34_56,dwLoc38_59,dwLoc3C_62,eax_35,ebp_7,ebx_25,ecx_34,edi_49,edx_33,esi_50,esp_61,SCZO_37,SZO_32,Z_38
		defs: al_75,C_72,eax_74,ebp_65,ebx_67,ecx_69,edi_64,edx_70,esi_68,esp_63,SCZO_66,SZO_71,Z_73
	word32 edi_76
	*ediOut = Mem0[ecx:word32]
	word32 esi_78
	*esiOut = Mem0[ecx + 0x00000004:word32]
	word32 ebx_80
	*ebxOut = edi_113
	return eax_74
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 esi:ecx ecx:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> al:Test(EQ,Z) - 0x01 & 0x0C -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -25(fp):Test(EQ,Z) - 0x01 & 0x0C -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn10027C25_exit:
// DataOut: eax ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp esi:<invalid> ecx:<invalid> ebx:<invalid> eax:<invalid> edx:<invalid> al:<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -25(fp):Test(EQ,Z) - 0x01 & 0x0C -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



void fn10027CAA(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi rax rcx rdx rsi si sil
// Preserved: ebp ebx edi edx esp
// Stack args: Stack +0004(32)
fn10027CAA_entry:
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027CAA:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch dwArg04 == 0x00000000 l10027CF0
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -002C(0) Local -0030(32) Local -0034(32)

l10027CF0:
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0030(32) Local -0034(32)

l10027CCE:
	word32 ecx_73 = dwArg04
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(0) Local -0030(32) Local -0034(32)

l10027CD4:
	ecx_73 = ecx_98 + 0x00000002
	word32 ecx_98 = ecx_73
	branch Mem0[ecx_98:word16] != wLoc2C l10027CD4
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -56(fp):esi -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(0) Local -0030(32) Local -0034(32)

l10027CE0:
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> -56(fp):esi -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0030(32) Local -0034(32)

l10027CF3:
	branch dwArg04 != 0x00000000 l10027CFC
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> ecx:<invalid> esi:esi ax:<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0030(32) Local -0034(32)

l10027CF7:
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> ecx:<invalid> esi:esi ax:<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0030(32) Local -0034(32)

l10027CFC:
	word32 edx_51
	word32 ebx_52
	word32 esi_53
	word32 edi_54
	word32 eax_55 = fn10027C25(ecx, edx, 0x00000002, fp - 0x00000028, out edx_51, out ebx_52, out esi_53, out edi_54)
	word32 ecx_67
	fn1002F420(eax_55, eax_11 ^ fp - 0x00000004, edx_51, ebx, fp - 0x00000004, esi_53, edi, es, ds, out ecx_67)
	return
// DataOut: bl bx cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> ecx:<invalid> esi:esi ax:<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):ebx -44(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10027CAA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx edx:<invalid> ecx:<invalid> esi:<invalid> ax:<invalid> al:<invalid> -60(fp):0x00000002 -56(fp):fp - 0x00000028 -52(fp):edi -48(fp):ebx -44(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10027D29(word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn10027D29_entry:
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l10027D29:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch dwArg04 == 0x00000000 l10027D67
// DataOut: bx cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D67:
// DataOut: bx cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D4A:
	word32 ecx_110 = dwArg04
// DataOut: bx cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D4F:
	ecx_110 = ecx_125 + 0x00000002
	word32 ecx_125 = ecx_110
	branch Mem0[ecx_125:word16] != 0x0000 l10027D4F
// DataOut: bx cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D5A:
// DataOut: bx cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D69:
	branch dwArg04 != 0x00000000 l10027D74
// DataOut: bx cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D72:
// DataOut: bx cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32) Stack +0008(32)

l10027D74:
	branch dwArg08 == 0x00000000 l10027DA6
// DataOut: bx cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32)

l10027D87:
	word32 ecx_100 = dwArg08
// DataOut: bx cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:0x0000000A ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32)

l10027D8C:
	ecx_100 = ecx_124 + 0x00000002
	word32 ecx_124 = ecx_100
	branch Mem0[ecx_124:word16] != 0x0000 l10027D8C
// DataOut: bx cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32)

l10027D97:
	branch dwArg08 != 0x00000000 l10027DA8
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32)

l10027DA6:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -003C(32) Local -0040(32) Local -0044(32)

l10027DA8:
	word32 edx_64
	word32 ebx_65
	word32 esi_66
	word32 edi_67
	word32 eax_68 = fn10027C25(0x10031030, 0x10006688, 0x00000003, fp - 0x00000038, out edx_64, out ebx_65, out esi_66, out edi_67)
	word32 ecx_82
	return fn1002F420(eax_68, eax_11 ^ fp - 0x00000004, edx_64, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_82)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x10006508 ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> ax:<invalid> -72(fp):0x0000000A -68(fp):edi -64(fp):esi -60(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn10027D29_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> ebx:ebx esi:esi ecx:<invalid> al:<invalid> ax:<invalid> -76(fp):0x00000003 -72(fp):fp - 0x00000038 -68(fp):edi -64(fp):esi -60(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10027DDC(selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp edi esp
fn10027DDC_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0014(32)

l10027DDC:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 edx_32
	word32 ebx_33
	word32 esi_34
	word32 edi_35
	word32 eax_36 = fn10027C25(0x10031030, 0x10006678, 0x00000002, fp - 0x00000028, out edx_32, out ebx_33, out esi_34, out edi_35)
	word32 ecx_44
	return fn1002F420(eax_36, eax_11 ^ fp - 0x00000004, edx_32, ebx_33, fp - 0x00000004, esi_34, edi_35, es, ds, out ecx_44)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10027DDC_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> al:<invalid> -48(fp):0x00000002 -44(fp):fp - 0x00000028 -24(fp):fp + 0x00000004 -20(fp):<invalid> -16(fp):0x00000004 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10027E28(selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: bx di ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0004(32)
fn10027E28_entry:
	*esiOut = esi
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027E28:
	word32 ebx_23
	word16 si_24
	word16 di_25
	return fn10027F4B(0x00000003, dwArg04, fp - 0x00000004, es, ds, fp + 0x00000008, out ebx_23, out si_24, out di_25)
// DataOut: bx cs di ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10027E28_exit:
// DataOut: bx di ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> esi:<invalid> ebx:<invalid> -16(fp):0x00000003 -12(fp):fp + 0x00000008 -8(fp):ecx -4(fp):ebp



word32 fn10027E40(selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0004(32)
fn10027E40_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027E40:
	word32 ebx_22
	word16 si_23
	word16 di_24
	fn10027F4B(0x00000000, dwArg04, fp - 0x00000004, es, ds, fp + 0x00000008, out ebx_22, out si_23, out di_24)
	return esi
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10027E40_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> esi:<invalid> ebx:<invalid> -12(fp):fp + 0x00000008 -8(fp):ecx -4(fp):ebp



word32 fn10027E57(selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0004(32)
fn10027E57_entry:
	*esiOut = esi
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027E57:
	word32 ebx_23
	word16 si_24
	word16 di_25
	fn10027F4B(0x00000001, dwArg04, fp - 0x00000004, es, ds, fp + 0x00000008, out ebx_23, out si_24, out di_25)
	return ebx_23
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10027E57_exit:
// DataOut: ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> esi:<invalid> ebx:<invalid> -12(fp):fp + 0x00000008 -8(fp):ecx -4(fp):ebp



word32 fn10027E6F(selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: bl bx di ebx edx esi si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0004(32)
fn10027E6F_entry:
	*esiOut = esi
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027E6F:
	word32 ebx_23
	word16 si_24
	word16 di_25
	return fn10027F4B(0x00000002, dwArg04, fp - 0x00000004, es, ds, fp + 0x00000008, out ebx_23, out si_24, out di_25)
// DataOut: bl bx cs di ds ebx edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10027E6F_exit:
// DataOut: bl bx di ebx edx esi si
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> esi:<invalid> ebx:<invalid> -16(fp):0x00000002 -12(fp):fp + 0x00000008 -8(fp):ecx -4(fp):ebp



word32 fn10027E87(selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ecx edi esp
// Stack args: Stack +0004(32)
fn10027E87_entry:
	*esiOut = esi
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10027E87:
	word32 ebx_23
	word16 si_24
	word16 di_25
	fn10027F4B(0x00000004, dwArg04, fp - 0x00000004, es, ds, fp + 0x00000008, out ebx_23, out si_24, out di_25)
	return ebx_23
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10027E87_exit:
// DataOut: ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> esi:<invalid> ebx:<invalid> -16(fp):0x00000004 -12(fp):fp + 0x00000008 -8(fp):ecx -4(fp):ebp



word32 fn10027E9F(word32 ecx, word32 edx, word32 ebp, ptr32 & edxOut, ptr32 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp ecx edx
// LiveOut: bl bx eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10027E9F_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027E9F:
	word32 eax_110
	__align(fp - 0x00000004)
	branch edx != 0x00000000 l10027EC1
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l10027EC1:
	word32 edx_59
	eax_110 = fn100274B7(edx, fp - 0x00000008, out edx_59)
	branch eax_110 < 0x00000000 l10027F42
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32) Local -0008(32)

l10027ED1:
	word32 esi_126 = (ecx & 0x00000000) + 0x00000032
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027ED8:
	Mem78[fp - 0x00000008:word32] = esi_126
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027EDC:
	word32 eax_85 = fn1002752A(esi_126 * 0x00000002)
	Mem86[ecx:word32] = eax_85
	branch eax_85 == 0x00000000 l10027F3D
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027EEA:
	Mem101[fp - 0x00000018:word32] = Mem86[fp + 0x00000004:word32]
	Mem105[fp - 0x0000001C:word32] = edx
	word32 edx_102 = esi_126
	*edxOut = edx_102
	eax_110 = fn10027B93(eax_85, esi_126, dwArg0C, dwArg10)
	branch eax_110 >= 0x00000000 l10027F42
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027EFE:
	branch eax_110 != 0x8007007A l10027F42
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F05:
	fn1002753D(Mem105[ecx:word32])
	Mem119[ecx:word32] = Mem105[ecx:word32] & 0x00000000
	branch esi_126 <u 0x3FFFFFFF l10027F24
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F24:
	Mem130[fp - 0x00000018:word32] = fp - 0x00000008
	Mem132[fp - 0x0000001C:word32] = 0x00000002
	word32 ecx_136
	word32 edx_137
	eax_110 = fn10010416(esi_126, Mem132[fp - 0x0000001C:word32], dwArg00, out ecx_136, out edx_137)
	branch eax_110 < 0x00000000 l10027F42
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F37:
	esi_126 = Mem132[fp - 0x00000008:word32]
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F17:
	branch esi_126 == 0x7FFFFFFF l10027F3D
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F3D:
	eax_110 = 0x8007000E
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l10027F20:
	esi_126 = 0x7FFFFFFF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:0x7FFFFFFF ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027EB7:
	eax_110 = 0x80070057
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 ebx:ecx -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp

l10027F42:
	word16 bx_45
	*bxOut = (word16) Mem0[fp - 0x0000000C:word32]
	return eax_110
// DataOut: bl bx cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn10027E9F_exit:
// DataOut: bl bx eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



word32 fn10027F4B(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & siOut, ptr32 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: bl bx di ebx edx si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn10027F4B_entry:
	*ebxOut = ebx
// DataOut: bl bx cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10027F4B:
	branch (Mem0[0x10031030:word32] | Mem0[0x10031034:word32]) == 0x00000000 l10027FF6
// DataOut: bl bx cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10027F6B:
	word16 bx_62
	branch fn10027E9F(fp - 0x00000008, edx, fp - 0x00000004, out edx, out bx_62) < 0x00000000 l10027FF6
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F7C:
	word32 edi_100 = ecx
	branch ecx == 0x00000000 l10027FD5
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FD5:
	branch (Mem0[0x10031580:byte] & 0x08) == 0x00 l10027FF4
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FDE:
	edx = 0x10006658
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F81:
	edi_100 = ecx - 0x00000001
	branch ecx == 0x00000001 l10027FC5
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FC5:
	branch (Mem0[0x10031580:byte] & 0x10) == 0x00 l10027FF4
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FCE:
	edx = 0x10006698
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F86:
	edi_100 = ecx - 0x00000002
	branch ecx == 0x00000002 l10027FB5
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FB5:
	branch (Mem0[0x10031580:byte] & 0x20) == 0x00 l10027FF4
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FBE:
	edx = 0x10006668
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F8B:
	edi_100 = ecx - 0x00000003
	branch ecx == 0x00000003 l10027FA5
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FA5:
	branch (Mem0[0x10031580:byte] & 0x40) == 0x00 l10027FF4
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FAE:
	edx = 0x100066A8
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F90:
	edi_100 = ecx - 0x00000004
	branch ecx != 0x00000004 l10027FF6
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027F95:
	branch (Mem0[0x10031580:byte] & 0x80) == 0x00 l10027FF4
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FF4:
// DataOut: bl bx cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp

l10027F9E:
	edx = 0x10006700
// DataOut: bl bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10027FE3:
	Mem82[fp - 0x00000014:word32] = Mem0[fp - 0x00000008:word32]
	fn10027CAA(0x10031030, edx, ebx, edi_100, es, ds, dwArg00)
// DataOut: bl bx cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp

l10027FF6:
	fn1002753D(Mem0[fp - 0x00000008:word32])
	word16 di_44
	*diOut = (word16) Mem0[fp - 0x00000010:word32]
	word16 si_48
	*siOut = (word16) Mem0[fp - 0x0000000C:word32]
	return edx
// DataOut: bl bx cs di ds ebx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp

fn10027F4B_exit:
// DataOut: bl bx di ebx edx si
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> ebx:<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx & 0x00000000 -4(fp):ebp



word32 fn10028008(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: ebp ebx edi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: esi esp
fn10028008_entry:
	*ebpOut = ebp
	*ediOut = edi
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32)

l10028008:
	word32 esi_13
	branch (Mem0[0x10031580:byte] & 0x02) == 0x00 l1002801D
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32)

l1002801D:
	esi_13 = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 -4(fp):esi
// LocalsOut: fp(32)

l10028012:
	esi_13 = fn10027D29(ebx, esi, edi, es, ds, ecx, edx)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 -4(fp):esi
// LocalsOut: fp(32)

l1002801F:
	branch esi_13 == 0x00000000 l10028048
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> -12(fp):ecx -8(fp):edx -4(fp):esi
// LocalsOut: fp(32)

l10028023:
	word32 esi_52
	word16 di_53
	fn10027E6F(es, ds, 0x10005A38, out ebx, out esi_52, out di_53)
	branch esi_52 <= 0x00000000 l10028048
// DataOut: cs ds ebp ebx edi es esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> -12(fp):ecx -8(fp):edx -4(fp):esi

l1002803F:
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> -20(fp):0x10005A38 -16(fp):0x10006570 -12(fp):0x10006518 -8(fp):<invalid> -4(fp):esi

l10028048:
	return ebx
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> -20(fp):0x10005A38 -16(fp):0x10006570 -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi

fn10028008_exit:
// DataOut: ebp ebx edi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> -20(fp):0x10005A38 -16(fp):0x10006570 -12(fp):<invalid> -8(fp):<invalid> -4(fp):esi



word32 fn1002804C(selector es, selector ds, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds es fs gs ss
// LiveOut: ebp edi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: esi esp
fn1002804C_entry:
	*ediOut = edi
// DataOut: cs ds ebp edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002804C:
	word32 esi_12
	branch (Mem0[0x10031580:byte] & 0x01) == 0x00 l10028060
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10028060:
	esi_12 = 0x00000000
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 -4(fp):esi
// LocalsOut: fp(32)

l10028056:
	esi_12 = fn10027DDC(es, ds)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 -4(fp):esi
// LocalsOut: fp(32)

l10028062:
	branch esi_12 == 0x00000000 l1002808B
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> al:<invalid> -8(fp):ecx -4(fp):esi
// LocalsOut: fp(32)

l10028066:
	word32 ebx_50
	word32 esi_51
	word16 di_52
	fn10027E6F(es, ds, 0x10005A38, out ebx_50, out esi_51, out di_52)
	branch esi_51 <= 0x00000000 l1002808B
// DataOut: cs ds ebp edi es esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> al:<invalid> -8(fp):ecx -4(fp):esi

l10028082:
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> al:<invalid> ax:<invalid> ebp:<invalid> -20(fp):0x10005A38 -16(fp):0x10006610 -12(fp):0x100065CC -8(fp):<invalid> -4(fp):esi

l1002808B:
	return ebp
// DataOut: cs ds ebp edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> al:<invalid> ax:<invalid> ebp:<invalid> -20(fp):0x10005A38 -16(fp):0x10006610 -12(fp):0x100065CC -8(fp):<invalid> -4(fp):esi

fn1002804C_exit:
// DataOut: ebp edi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> esi:<invalid> edi:<invalid> ebx:<invalid> al:<invalid> ax:<invalid> ebp:<invalid> -20(fp):0x10005A38 -16(fp):0x10006610 -12(fp):0x100065CC -8(fp):<invalid> -4(fp):esi



word32 fn1002808F(word32 ecx, word32 edx, word32 ebx, word32 ebp, selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edx es fs gs ss
// LiveOut: eax ebp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebx edi esi esp
fn1002808F_entry:
	*ebpOut = ebp
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002808F:
	word32 esi_102
	word32 ebx_101 = 0x10006330
	branch edx != 0x00000000 l100280C1
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l100280C1:
	word32 eax_85 = fn10028107(ebp, es, ds, 0x1000672C, edx)
	esi_102 = eax_85
	branch eax_85 == 0x80092004 l100280F2
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebx:0x10006330 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: Local -0004(32)

l100280DA:
	branch eax_85 >= 0x00000000 l100280F2
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> cl:<invalid> ebp:<invalid> ax:<invalid> al:<invalid> -24(fp):0x1000672C -20(fp):ecx -16(fp):edx -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: Local -0004(32)

l100280DE:
	Mem94[fp - 0x00000010:word32] = eax_85
	Mem96[fp - 0x00000014:word32] = 0x100064B8
	Mem98[fp - 0x00000018:word32] = 0x10006330
	Mem100[fp - 0x0000001C:word32] = 0x10005880
	word16 di_103
	fn10027E6F(es, ds, dwArg00, out ebx_101, out esi_102, out di_103)
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> cl:<invalid> ebp:<invalid> ax:<invalid> al:<invalid> -24(fp):0x1000672C -20(fp):ecx -16(fp):edx -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: Local -0004(32)

l1002809D:
	word32 ebx_61
	word16 di_63
	fn10027E6F(es, ds, 0x10005840, out ebx_61, out esi_102, out di_63)
	word32 ebp_69
	word32 edi_70
	ebx_101 = fn10028008(ebx_61, 0x10006250, ebx_61, esi_102, 0x10006250, es, ds, out ebp_69, out edi_70)
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebx:0x10006330 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: Local -0004(32)

l100280F2:
	Mem30[fp - 0x00000010:word32] = esi_102
	Mem32[fp - 0x00000014:word32] = ebx_101
	Mem34[fp - 0x00000018:word32] = 0x1000591C
	word32 ebx_38
	word32 esi_39
	word16 di_40
	fn10027E28(es, ds, dwArg00, out ebx_38, out esi_39, out di_40)
	return esi_39
// DataOut: cs ds eax ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> cl:<invalid> ebp:<invalid> ax:<invalid> al:<invalid> -28(fp):0x10005880 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1002808F_exit:
// DataOut: eax ebp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> cl:<invalid> ebp:<invalid> ax:<invalid> al:<invalid> -28(fp):0x10005880 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn10028107(word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +000C(32)
fn10028107_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0044(32) Stack +000C(32)

l10028107:
	word32 ebx_117
	word32 esi_108
	word32 eax_120
	word32 edi_118
	__align(fp - 0x00000004)
	word32 ebp_115 = fp - 0x00000004
	word32 esi_31 = 0x00000000
	branch dwArg0C != 0x00000000 l1002817E
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(0) Local -0044(32)

l1002817E:
	Mem126[dwArg0C:word32] = 0x00000000
	word32 eax_127 = fn1002FF3B(0x00000014)
	ebx_117 = eax_127
	branch eax_127 != 0x00000000 l100281AE
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:0x00000000 ebx:0x00000000 -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):0x00000000 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100281AE:
	word32 edi_212
	Mem154[fp - 0x00000040:word32] = 0x00000005
	Mem157[fp - 0x0000002C:word32] = Mem154[fp - 0x00000040:word32]
	word32 ecx_162 = Mem157[fp - 0x0000001C:word32]
	Mem163[eax_127:word32] = 0x00000000
	Mem165[eax_127 + 0x00000004:word32] = 0x00000000
	Mem167[eax_127 + 0x00000008:word32] = 0x00000000
	Mem169[eax_127 + 0x0000000C:word32] = 0x00000000
	Mem171[eax_127 + 0x00000010:word32] = 0x00000000
	Mem175[fp - 0x00000040:word32] = fp - 0x00000024
	Mem177[fp - 0x00000044:word32] = eax_127
	Mem180[fp - 0x00000048:word32] = Mem177[fp - 0x00000020:word32]
	word32 eax_182 = fn10028398(ecx_162, fp - 0x00000004, es, ds, ptrArg00, dwArg08)
	Mem185[fp - 0x00000028:word32] = eax_182
	branch eax_182 != 0x8007007A l10028252
// DataOut: cs ds eax ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> -64(fp):0x00000014 -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):0x00000000 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100281DC:
	Mem405[fp - 0x00000040:word32] = eax_127
	fn1002EEC6(ptrArg00)
	edi_212 = Mem405[fp - 0x00000024:word32]
	Mem412[fp - 0x0000002C:word32] = 0x00000000
	Mem414[fp - 0x00000040:word32] = 0x00000004
	word64 edx_eax_417 = Mem414[fp - 0x00000040:word32] *u edi_212
	Mem428[fp - 0x00000040:word32] = -(word32) OVERFLOW(edx_eax_417) | (word32) edx_eax_417
	word32 eax_429 = fn1002FF3B(ptrArg00)
	ebx_117 = eax_429
	branch eax_429 != 0x00000000 l10028227
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028227:
	Mem449[fp - 0x0000002C:word32] = edi_212
	Mem452[fp - 0x00000040:word32] = edi_212 << 0x00000002
	Mem454[fp - 0x00000044:word32] = 0x00000000
	Mem456[fp - 0x00000048:word32] = eax_429
	memset(Mem456[fp - 0x00000048:(ptr void)], Mem456[fp - 0x00000044:int32], Mem456[fp - 0x00000040:size_t])
	word32 ecx_458 = Mem456[fp - 0x0000001C:word32]
	Mem463[fp - 0x00000040:word32] = fp - 0x00000024
	Mem465[fp - 0x00000044:word32] = eax_429
	Mem468[fp - 0x00000048:word32] = Mem465[fp - 0x00000020:word32]
	eax_182 = fn10028398(ecx_458, fp - 0x00000004, es, ds, ptrArg00, dwArg08)
	Mem472[fp - 0x00000028:word32] = eax_182
// DataOut: cs ds eax ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028252:
	branch eax_182 >= 0x00000000 l10028278
// DataOut: cs ds eax ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028278:
	edi_212 = Mem185[fp - 0x00000024:word32]
	branch edi_212 != 0x00000000 l1002829F
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002829F:
	branch edi_212 != 0x00000001 l100282B2
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282B2:
	branch edi_212 == 0x00000000 l100282EA
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282B6:
	word32 ecx_362 = Mem185[fp - 0x00000030:word32]
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282BA:
	word32 eax_369 = Mem185[ecx_362:word32]
	branch eax_369 == 0x00000000 l100282E0
// DataOut: cs ds eax ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282C0:
	Mem392[fp - 0x00000040:word32] = Mem185[eax_369 + 0x0000000C:word32] + 0x00000020
	Mem397[fp - 0x00000044:word32] = Mem392[Mem392[ebx_117 + esi_31 * 0x00000004:word32] + 0x0000000C:word32] + 0x00000020
	word32 eax_398 = CompareFileTime(Mem397[fp - 0x00000044:(ptr FILETIME)], Mem397[fp - 0x00000040:(ptr FILETIME)])
	ecx_362 = Mem397[fp - 0x00000030:word32]
	branch eax_398 != 0xFFFFFFFF l100282E5
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282E0:
	Mem388[ecx_362:word32] = Mem185[ebx_117 + esi_31 * 0x00000004:word32]
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282E5:
	esi_31 = esi_31 + 0x00000001
	branch esi_31 <u edi_212 l100282BA
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282A4:
	word32 ecx_355 = Mem185[fp - 0x00000030:word32]
	word32 eax_356 = Mem185[ebx_117:word32]
	Mem357[fp - 0x00000028:word32] = 0x00000000
	Mem358[ecx_355:word32] = eax_356
// DataOut: cs ds ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100282EA:
	Mem297[fp - 0x00000040:word32] = fp - 0x00000018
	Mem303[fp - 0x00000044:word32] = Mem297[Mem297[Mem297[fp - 0x00000030:word32]:word32] + 0x0000000C:word32] + 0x00000020
	esi_108 = 0x100064B8
	branch FileTimeToSystemTime(Mem303[fp - 0x00000044:(ptr FILETIME)], Mem303[fp - 0x00000040:LPSYSTEMTIME]) == 0x00000000 l10028343
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002830B:
	Mem326[fp - 0x00000040:word32] = (word32) Mem303[fp - 0x0000000A:word16]
	Mem329[fp - 0x00000044:word32] = (word32) Mem326[fp - 0x0000000C:word16]
	Mem332[fp - 0x00000048:word32] = (word32) Mem329[fp - 0x0000000E:word16]
	Mem335[fp - 0x0000004C:word32] = (word32) Mem332[fp - 0x00000010:word16]
	Mem338[fp - 0x00000050:word32] = (word32) Mem335[fp - 0x00000012:word16]
	Mem341[fp - 0x00000054:word32] = (word32) Mem338[fp - 0x00000016:word16]
	Mem344[fp - 0x00000058:word32] = (word32) Mem341[fp - 0x00000018:word16]
	Mem346[fp - 0x0000005C:word32] = 0x100064B8
	Mem348[fp - 0x00000060:word32] = 0x10006870
	word16 di_351
	fn10027E28(es, ds, ptrArg00, out ebx_117, out esi_108, out di_351)
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:0x100064B8 ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028343:
	Mem319[fp - 0x00000040:word32] = Mem303[Mem303[fp - 0x00000030:word32]:word32]
	Mem323[Mem319[fp - 0x00000030:word32]:word32] = CertDuplicateCertificateContext(Mem319[fp - 0x00000040:PCCERT_CONTEXT])
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -96(fp):0x10006870 -92(fp):0x100064B8 -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028280:
	Mem276[fp - 0x00000040:word32] = 0x100064B8
	Mem278[fp - 0x00000044:word32] = 0x10006790
	word16 di_281
	fn10027E28(es, ds, ptrArg00, out ebx_117, out esi_108, out di_281)
	Mem287[fp - 0x00000028:word32] = 0x80092004
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028256:
	Mem253[fp - 0x00000040:word32] = eax_182
	Mem255[fp - 0x00000044:word32] = 0x10006730
	Mem258[fp - 0x00000048:word32] = 0x100064B8
	Mem260[fp - 0x0000004C:word32] = 0x10005880
	word16 di_263
	fn10027E6F(es, ds, ptrArg00, out ebx_117, out esi_108, out di_263)
	edi_212 = Mem260[fp - 0x00000024:word32]
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028208:
	Mem437[fp - 0x00000028:word32] = 0x8007000E
	Mem439[fp - 0x00000040:word32] = 0x100064B8
	Mem441[fp - 0x00000044:word32] = 0x100058D0
	ebx_117 = fn10027E87(es, ds, ptrArg00, out esi_108)
// DataOut: cs ds ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):fp - 0x00000024 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028355:
	eax_120 = Mem185[fp - 0x0000002C:word32]
	branch eax_120 <u edi_212 l1002835F
// DataOut: cs ds eax ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -96(fp):0x10006870 -92(fp):0x100064B8 -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002835D:
	eax_120 = edi_212
// DataOut: cs ds eax ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -96(fp):0x10006870 -92(fp):0x100064B8 -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002835F:
	edi_118 = Mem185[fp - 0x00000028:word32]
// DataOut: cs ds eax ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -96(fp):0x10006870 -92(fp):0x100064B8 -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002818E:
	Mem138[fp - 0x00000040:word32] = 0x100064B8
	Mem140[fp - 0x00000044:word32] = 0x100058D0
	ebx_117 = fn10027E87(es, ds, ptrArg00, out esi_108)
	edi_118 = 0x8007000E
	eax_120 = Mem140[fp - 0x0000002C:word32]
// DataOut: cs ds eax ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000008 ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> -64(fp):0x00000014 -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):0x00000000 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028150:
	word32 ebx_107
	word16 di_109
	fn10027E6F(es, ds, 0x10005840, out ebx_107, out esi_108, out di_109)
	word32 edi_116
	ebx_117 = fn10028008(esi_108, 0x10006250, ebx_107, esi_108, 0x10006250, es, ds, out ebp_115, out edi_116)
	edi_118 = 0x80070057
	eax_120 = ebx_117
// DataOut: cs ds eax ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:fp - 0x00000008 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> esi:0x00000000 ebx:0x00000000 -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):0x00000000 -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028363:
	fn10028A03(ebx_117, eax_120)
	Mem64[fp - 0x00000040:word32] = ebx_117
	fn1002EEC6(ptrArg00)
	Mem69[fp - 0x00000040:word32] = edi_118
	Mem71[fp - 0x00000044:word32] = esi_108
	Mem73[fp - 0x00000048:word32] = 0x1000591C
	word32 ebx_76
	word32 esi_77
	word16 di_78
	word32 ecx_92
	return fn1002F420(edi_118, Mem73[fp - 0x00000008:word32] ^ fp - 0x00000030, fn10027E28(es, ds, ptrArg00, out ebx_76, out esi_77, out di_78), Mem73[fp - 0x00000034:word32], ebp_115, Mem73[fp - 0x00000038:word32], Mem73[fp - 0x0000003C:word32], es, ds, out ecx_92)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -96(fp):0x10006870 -92(fp):0x100064B8 -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10028107_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -96(fp):0x10006870 -92(fp):0x100064B8 -88(fp):<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):0x00000005 -32(fp):<invalid> -28(fp):ecx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10028398(word32 ecx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +000C(32)
fn10028398_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l10028398:
	word32 ecx_245
	word32 esi_241
	word32 ebx_242
	word32 ebp_243 = fp - 0x00000004
	word32 ebx_13 = ecx
	word32 esi_20 = 0x10006730
	word32 edi_220 = 0x00000000
	branch dwArg04 != 0x00000000 l100283F9
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(0) Stack +000C(32)

l100283F9:
	branch dwArg0C != 0x00000000 l10028407
// DataOut: cs ds eax ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 eax:0x00000000 esi:0x10006730 -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0)

l10028407:
	word32 eax_312
	branch ecx != 0x00000001 l10028504
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 eax:<invalid> esi:0x10006730 -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028415:
	branch fn100277A1(0x00000000, es, ds, out ebx_13) == 0x00000000 l10028502
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 eax:<invalid> esi:0x10006730 -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028502:
// DataOut: cs ds ebp ebx ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028504:
	Mem525[fp - 0x0000003C:word32] = 0x10006A04
	Mem530[fp - 0x00000040:word32] = (0x00000000 - (-ebx_13 == 0x00000000) & 0x00010000) + 0x00018000
	Mem532[fp - 0x00000044:word32] = 0x00000000
	Mem534[fp - 0x00000048:word32] = 0x00000000
	Mem536[fp - 0x0000004C:word32] = 0x0000000A
	eax_312 = CertOpenStore(Mem536[fp - 0x0000004C:LPCSTR], Mem536[fp - 0x00000048:DWORD], Mem536[fp - 0x00000044:HCRYPTPROV_LEGACY], Mem536[fp - 0x00000040:DWORD], Mem536[fp - 0x0000003C:(ptr void)])
// DataOut: cs ds eax ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028422:
	Mem551[fp - 0x0000003C:word32] = 0x10006730
	Mem553[fp - 0x00000040:word32] = 0x10006A3C
	esi_20 = fn10027E40(es, ds, dwArg00)
	word32 ecx_557 = Mem553[fp - 0x0000003C:word32]
	Mem562[fp - 0x0000003C:word32] = fp - 0x0000001C
	Mem564[fp - 0x00000040:word32] = 0x00020019
	Mem566[fp - 0x00000044:word32] = 0x00000000
	Mem568[fp - 0x00000048:word32] = 0x10006A68
	Mem570[fp - 0x0000004C:word32] = 0x80000002
	word32 eax_571 = RegOpenKeyExW(Mem570[fp - 0x0000004C:HKEY], Mem570[fp - 0x00000048:LPCWSTR], Mem570[fp - 0x00000044:DWORD], Mem570[fp - 0x00000040:REGSAM], Mem570[fp - 0x0000003C:PHKEY])
	Mem574[fp - 0x00000010:word32] = eax_571
	word32 ebx_560 = 0x00000000
	branch eax_571 == 0x00000000 l100284EE
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028456:
	Mem604[fp - 0x0000003C:word32] = eax_571
	Mem606[fp - 0x00000040:word32] = 0x10006AC8
	Mem608[fp - 0x00000044:word32] = esi_20
	Mem610[fp - 0x00000048:word32] = 0x10006B50
	ebx_560 = fn10027E57(es, ds, dwArg00, out esi_20)
	Mem615[fp - 0x0000003C:word32] = 0x10006C1C
	Mem617[fp - 0x00000040:word32] = 0x80000002
	word32 eax_618 = RegUnLoadKeyW(Mem617[fp - 0x00000040:HKEY], Mem617[fp - 0x0000003C:LPCWSTR])
	branch eax_618 == 0x00000000 l10028492
// DataOut: cs ds eax ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):0x10006A68 -68(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002847E:
	Mem688[fp - 0x0000003C:word32] = eax_618
	Mem690[fp - 0x00000040:word32] = 0x10006C40
	Mem692[fp - 0x00000044:word32] = esi_20
	Mem694[fp - 0x00000048:word32] = 0x10006C88
	word16 di_697
	fn10027E28(es, ds, dwArg00, out ebx_560, out esi_20, out di_697)
// DataOut: cs ds ebp ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028492:
	Mem630[fp - 0x0000003C:word32] = ecx_557
	Mem632[fp - 0x00000040:word32] = ecx_557
	word32 eax_633 = fn10027891(fp - 0x00000004, es, ds)
	edi_220 = eax_633
	branch eax_633 >= 0x00000000 l100284B8
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100284B8:
	Mem661[fp - 0x00000028:word32] = 0x00000001
	Mem663[fp - 0x0000003C:word32] = fp - 0x0000001C
	Mem665[fp - 0x00000040:word32] = 0x00020019
	Mem667[fp - 0x00000044:word32] = ebx_560
	Mem669[fp - 0x00000048:word32] = 0x10006A68
	Mem671[fp - 0x0000004C:word32] = 0x80000002
	word32 eax_672 = RegOpenKeyExW(Mem671[fp - 0x0000004C:HKEY], Mem671[fp - 0x00000048:LPCWSTR], Mem671[fp - 0x00000044:DWORD], Mem671[fp - 0x00000040:REGSAM], Mem671[fp - 0x0000003C:PHKEY])
	Mem675[fp - 0x00000010:word32] = eax_672
	branch eax_672 == 0x00000000 l100284EE
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100284EE:
	Mem591[fp - 0x0000003C:word32] = Mem574[fp - 0x0000001C:word32]
	Mem593[fp - 0x00000040:word32] = 0x00008000
	Mem595[fp - 0x00000044:word32] = ebx_560
	Mem597[fp - 0x00000048:word32] = ebx_560
	Mem599[fp - 0x0000004C:word32] = 0x00000004
	eax_312 = CertOpenStore(Mem599[fp - 0x0000004C:LPCSTR], Mem599[fp - 0x00000048:DWORD], Mem599[fp - 0x00000044:HCRYPTPROV_LEGACY], Mem599[fp - 0x00000040:DWORD], Mem599[fp - 0x0000003C:(ptr void)])
// DataOut: cs ds eax ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028526:
	Mem318[fp - 0x00000018:word32] = eax_312
	branch eax_312 != 0x00000000 l1002854A
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002854A:
	Mem341[fp - 0x0000003C:word32] = Mem318[fp + 0x00000004:word32]
	Mem343[fp - 0x00000040:word32] = 0x10006710
	Mem345[fp - 0x00000044:word32] = esi_20
	Mem347[fp - 0x00000048:word32] = 0x10006EE8
	word16 di_350
	word32 ebx_348
	fn10027E28(es, ds, dwArg00, out ebx_348, out esi_241, out di_350)
	Mem354[fp - 0x0000003C:word32] = ebx_348
	Mem356[fp - 0x00000040:word32] = ebx_348
	Mem358[fp - 0x00000044:word32] = ebx_348
	Mem360[fp - 0x00000048:word32] = ebx_348
	Mem362[fp - 0x0000004C:word32] = 0x00010001
	Mem365[fp - 0x00000050:word32] = Mem362[fp - 0x00000018:word32]
	word32 eax_366 = CertFindCertificateInStore(Mem365[fp - 0x00000050:HCERTSTORE], Mem365[fp - 0x0000004C:DWORD], Mem365[fp - 0x00000048:DWORD], Mem365[fp - 0x00000044:DWORD], Mem365[fp - 0x00000040:(ptr void)], Mem365[fp - 0x0000003C:PCCERT_CONTEXT])
	Mem369[fp - 0x00000014:word32] = eax_366
	branch eax_366 == 0x00000000 l10028625
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028625:
	ecx_245 = Mem369[fp - 0x00000008:word32]
// DataOut: cs ds ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002857D:
	word32 edx_433 = Mem369[fp + 0x00000004:word32]
	Mem436[fp - 0x0000003C:word32] = fp - 0x00000024
	Mem438[fp - 0x00000040:word32] = eax_366
	Mem439[fp - 0x00000024:word32] = ebx_348
	word32 eax_440 = fn1002874E(edx_433, fp - 0x00000004, es, ds, dwArg00, dwArg04)
	edi_220 = eax_440
	branch eax_440 < 0x00000000 l1002860C
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002860C:
	Mem504[fp - 0x0000003C:word32] = eax_440
	Mem506[fp - 0x00000040:word32] = 0x100069A8
	Mem508[fp - 0x00000044:word32] = esi_241
	Mem510[fp - 0x00000048:word32] = 0x10005880
	word32 ebx_511
	word16 di_513
	fn10027E6F(es, ds, dwArg00, out ebx_511, out esi_241, out di_513)
	ecx_245 = Mem510[fp - 0x00000008:word32]
// DataOut: cs ds ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028593:
	branch Mem439[fp - 0x00000024:word32] == 0x00000000 l100285BF
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028599:
	Mem479[fp - 0x00000008:word32] = Mem439[fp - 0x00000008:word32] + 0x00000001
	word32 ebx_480 = Mem479[fp - 0x0000000C:word32]
	branch Mem479[fp - 0x00000020:word32] <=u ebx_480 l100285BD
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100285A4:
	branch Mem479[fp + 0x00000008:word32] == 0x00000000 l100285BD
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100285AA:
	Mem495[fp - 0x0000003C:word32] = Mem479[fp - 0x00000014:word32]
	Mem499[Mem495[fp + 0x00000008:word32] + ebx_480 * 0x00000004:word32] = CertDuplicateCertificateContext(Mem495[fp - 0x0000003C:PCCERT_CONTEXT])
	Mem502[fp - 0x0000000C:word32] = ebx_480 + 0x00000001
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100285BD:
	ebx_348 = 0x00000000
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100285BF:
	Mem456[fp - 0x0000003C:word32] = Mem439[fp - 0x00000014:word32]
	Mem458[fp - 0x00000040:word32] = ebx_348
	Mem460[fp - 0x00000044:word32] = ebx_348
	Mem462[fp - 0x00000048:word32] = ebx_348
	Mem464[fp - 0x0000004C:word32] = 0x00010001
	Mem467[fp - 0x00000050:word32] = Mem464[fp - 0x00000018:word32]
	eax_366 = CertFindCertificateInStore(Mem467[fp - 0x00000050:HCERTSTORE], Mem467[fp - 0x0000004C:DWORD], Mem467[fp - 0x00000048:DWORD], Mem467[fp - 0x00000044:DWORD], Mem467[fp - 0x00000040:(ptr void)], Mem467[fp - 0x0000003C:PCCERT_CONTEXT])
	Mem471[fp - 0x00000014:word32] = eax_366
	branch eax_366 != 0x00000000 l1002857D
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100285DA:
	ecx_245 = Mem471[fp - 0x00000008:word32]
	branch Mem471[fp - 0x00000020:word32] >=u ecx_245 l10028628
// DataOut: cs ds ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028628:
	branch Mem369[fp + 0x00000008:word32] == 0x00000000 l100285E2
// DataOut: cs ds ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002862E:
	Mem425[Mem369[fp + 0x0000000C:word32]:word32] = Mem369[fp - 0x0000000C:word32]
// DataOut: cs ds ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l100285E2:
	word32 eax_402 = Mem369[fp + 0x0000000C:word32]
	Mem404[fp - 0x0000003C:word32] = 0x0000007A
	Mem405[eax_402:word32] = ecx_245
	Mem408[fp - 0x00000010:word32] = Mem405[fp - 0x0000003C:word32]
// DataOut: cs ds ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l100285ED:
// DataOut: cs ds ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002852D:
	word32 eax_322 = GetLastError()
	Mem324[fp - 0x0000003C:word32] = eax_322
	Mem326[fp - 0x00000040:word32] = esi_20
	Mem328[fp - 0x00000044:word32] = 0x10006E80
	Mem329[fp - 0x00000010:word32] = eax_322
	word32 ebx_330
	word16 di_332
	fn10027E6F(es, ds, dwArg00, out ebx_330, out esi_241, out di_332)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100284E0:
	Mem680[fp - 0x0000003C:word32] = eax_672
	Mem682[fp - 0x00000040:word32] = 0x10006AC8
	Mem684[fp - 0x00000044:word32] = esi_20
	Mem686[fp - 0x00000048:word32] = 0x10006DF0
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002849F:
	Mem653[fp - 0x0000003C:word32] = eax_633
	Mem655[fp - 0x00000040:word32] = 0x10006044
	Mem657[fp - 0x00000044:word32] = esi_20
	Mem659[fp - 0x00000048:word32] = 0x10005880
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100284AB:
	word16 di_648
	fn10027E6F(es, ds, dwArg00, out ebx_242, out esi_241, out di_648)
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -76(fp):0x80000002 -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028400:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 eax:<invalid> esi:0x10006730 -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0)

l100283CD:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:0x00000000 ebp:fp - 0x00000004 ebx:ecx ecx:0x00000000 eax:0x00000000 esi:0x10006730 -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0)

l100283D2:
	word32 ebx_280
	word16 di_282
	fn10027E6F(es, ds, 0x10005840, out ebx_280, out esi_241, out di_282)
	fn10028008(esi_241, ebx_280, ebx_280, esi_241, 0x80070057, es, ds, out ebp_243, out edi_220)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:0x00000000 ebp:fp - 0x00000004 ebx:<invalid> ecx:0x00000000 eax:<invalid> esi:0x10006730 -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100283EF:
	ebx_242 = Mem0[ebp_243 - 0x00000008:word32]
// DataOut: cs ds ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100283F2:
	ecx_245 = ebx_242
// DataOut: cs ds ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):0x00000000 -16(fp):<invalid> -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100285F0:
	Mem44[fp - 0x0000003C:word32] = ecx_245
	Mem46[fp - 0x00000040:word32] = esi_241
	Mem48[fp - 0x00000044:word32] = 0x10006F50
	word16 di_54
	word32 esi_172
	word32 ebx_212
	fn10027E28(es, ds, dwArg00, out ebx_212, out esi_172, out di_54)
	word32 eax_56 = Mem48[ebp_243 - 0x0000000C:word32]
	word16 ax_57 = (word16) eax_56
	branch eax_56 == 0x00000000 l10028641
// DataOut: ax cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): SZO
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028606:
	branch eax_56 > 0x00000000 l10028638
// DataOut: ax cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028638:
	edi_220 = (word32) ax_57 | 0x80070000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028608:
	edi_220 = eax_56
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028641:
	word32 eax_67 = Mem48[ebp_243 - 0x00000010:word32]
	branch eax_67 == 0x00000000 l1002864F
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028648:
	Mem217[fp - 0x0000003C:word32] = eax_67
	CertFreeCertificateContext(Mem217[fp - 0x0000003C:PCCERT_CONTEXT])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002864F:
	branch edi_220 >= 0x00000000 l10028666
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028653:
	word32 eax_208 = Mem48[ebp_243 - 0x0000001C:word32]
	branch eax_208 >=u ebx_212 l1002865C
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002865A:
	ebx_212 = eax_208
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002865C:
	fn10028A03(Mem48[ebp_243 + 0x0000000C:word32], ebx_212)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028666:
	word32 eax_81 = Mem48[ebp_243 - 0x00000014:word32]
	branch eax_81 == 0x00000000 l1002869B
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002866D:
	Mem177[fp - 0x0000003C:word32] = 0x00000000
	Mem179[fp - 0x00000040:word32] = eax_81
	branch CertCloseStore(Mem179[fp - 0x00000040:HCERTSTORE], Mem179[fp - 0x0000003C:DWORD]) != 0x00000000 l1002869B
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002867A:
	word32 eax_185 = GetLastError()
	word16 ax_186 = (word16) eax_185
	branch eax_185 <= 0x00000000 l1002868C
// DataOut: ax cs ds eax es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028684:
	eax_185 = (word32) ax_186 | 0x80070000
// DataOut: cs ds eax es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002868C:
	Mem194[fp - 0x0000003C:word32] = eax_185
	Mem196[fp - 0x00000040:word32] = esi_172
	Mem198[fp - 0x00000044:word32] = 0x10006F98
	fn10027E57(es, ds, dwArg00, out esi_172)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002869B:
	branch Mem48[ebp_243 - 0x00000018:word32] == 0x00000000 l100286C2
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100286A1:
	Mem157[fp - 0x0000003C:word32] = Mem48[ebp_243 - 0x00000018:word32]
	word32 eax_158 = RegCloseKey(Mem157[fp - 0x0000003C:HKEY])
	branch eax_158 == 0x00000000 l100286C2
// DataOut: cs ds eax ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100286AE:
	Mem165[fp - 0x0000003C:word32] = eax_158
	Mem167[fp - 0x00000040:word32] = 0x10006AC8
	Mem169[fp - 0x00000044:word32] = esi_172
	Mem171[fp - 0x00000048:word32] = 0x10007000
	fn10027E57(es, ds, dwArg00, out esi_172)
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100286C2:
	branch Mem48[ebp_243 - 0x00000024:word32] == 0x00000000 l10028705
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100286C8:
	Mem122[fp - 0x0000003C:word32] = 0x10006C1C
	Mem124[fp - 0x00000040:word32] = 0x80000002
	word32 eax_125 = RegUnLoadKeyW(Mem124[fp - 0x00000040:HKEY], Mem124[fp - 0x0000003C:LPCWSTR])
	branch eax_125 == 0x00000000 l100286F2
// DataOut: cs ds eax es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100286F2:
	Mem144[fp - 0x0000003C:word32] = 0x10006C40
	Mem146[fp - 0x00000040:word32] = esi_172
	Mem148[fp - 0x00000044:word32] = 0x10007130
	word32 ebx_149
	word32 esi_150
	word16 di_151
	fn10027E28(es, ds, dwArg00, out ebx_149, out esi_150, out di_151)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l100286DC:
	Mem132[fp - 0x0000003C:word32] = eax_125
	Mem134[fp - 0x00000040:word32] = 0x10006C40
	Mem136[fp - 0x00000044:word32] = esi_172
	Mem138[fp - 0x00000048:word32] = 0x10007098
	word32 esi_139
	fn10027E57(es, ds, dwArg00, out esi_139)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l10028705:
	return edi_220
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10028398_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10028710(word32 ecx, word32 edx, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebp esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ecx edi esp
fn10028710_entry:
	*ebpOut = ebp
	*esiOut = esi
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(0)

l10028710:
	word32 dwLoc0C_28
	branch ecx != 0x00000000 l1002872C
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(0)

l1002872C:
	branch edx != 0x00000000 l1002873C
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi -4(fp):ecx
// LocalsOut: fp(32) Local -0010(0)

l1002873C:
	word32 eax_59 = Mem0[edx + 0x0000000C:word32]
	return CertFindExtension(ecx, Mem0[eax_59 + 0x00000068:word32], Mem0[eax_59 + 0x0000006C:word32])
// DataOut: cs ds eax ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi -4(fp):ecx

l10028730:
	dwLoc0C_28 = 0x10007208
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi -4(fp):ecx
// LocalsOut: Local -000C(0) Local -0010(0)

l10028717:
	dwLoc0C_28 = 0x100071B0
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi -4(fp):ecx
// LocalsOut: Local -000C(0) Local -0010(0)

l10028721:
	word32 ebx_32
	word32 esi_33
	word16 di_34
	fn10027E6F(es, ds, dwLoc0C_28, out ebx_32, out esi_33, out di_34)
	return 0x00000000
// DataOut: cs ds eax ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi -12(fp):<invalid> -8(fp):0x10007168 -4(fp):ecx

fn10028710_exit:
// DataOut: eax ebp esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> edx:<invalid> eax:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> ebp:<invalid> esi:<invalid> ebx:<invalid> -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ecx



word32 fn1002874E(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002874E_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Stack +0004(32) Stack +0008(32)

l1002874E:
	word32 edi_124
	branch edx != 0x00000000 l10028792
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32) Stack +0004(32) Stack +0008(32)

l10028792:
	branch dwArg04 != 0x00000000 l1002879F
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32) Stack +0008(32)

l1002879F:
	branch dwArg08 != 0x00000000 l100287B2
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -002C(32)

l100287B2:
	Mem99[dwArg08:word32] = Mem0[dwArg08:word32] & 0x00000000
	word32 ebx_110
	word32 esi_111
	word16 di_112
	fn10027E28(es, ds, 0x10007278, out ebx_110, out esi_111, out di_112)
	word32 edx_114 = Mem99[fp + 0x00000004:word32]
	Mem119[fp - 0x00000020:word32] = fp - 0x00000008
	word32 eax_121 = fn10028840(edx_114, fp - 0x00000004, es, ds, dwArg00)
	word32 ebx_123 = Mem119[fp - 0x00000008:word32]
	edi_124 = eax_121
	branch eax_121 != 0x80092004 l100287F1
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx eax:<invalid> esi:0x100069A8 -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l100287F1:
	branch eax_121 >= 0x00000000 l10028806
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):0x100069A8 -36(fp):0x10006710 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028806:
	Mem189[fp - 0x00000020:word32] = Mem119[fp - 0x0000000C:word32]
	Mem191[fp - 0x00000024:word32] = ebx_123
	branch lstrcmpiW(Mem191[fp - 0x00000024:LPCWSTR], Mem191[fp - 0x00000020:LPCWSTR]) != 0x00000000 l1002882A
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):0x100069A8 -36(fp):0x10006710 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028814:
	word32 eax_197 = Mem191[fp + 0x00000008:word32]
	Mem199[fp - 0x00000020:word32] = esi_111
	Mem201[fp - 0x00000024:word32] = 0x100073E0
	Mem202[eax_197:word32] = 0x00000001
	word32 esi_204
	word16 di_205
	fn10027E28(es, ds, dwArg00, out ebx_123, out esi_204, out di_205)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):0x100069A8 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l100287F5:
	Mem176[fp - 0x00000020:word32] = eax_121
	Mem178[fp - 0x00000024:word32] = esi_111
	Mem180[fp - 0x00000028:word32] = 0x10007340
	word32 esi_182
	word16 di_183
	fn10027E6F(es, ds, dwArg00, out ebx_123, out esi_182, out di_183)
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):0x100069A8 -36(fp):0x10006710 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l100287E2:
	Mem161[fp - 0x00000020:word32] = esi_111
	Mem163[fp - 0x00000024:word32] = 0x100072D8
	word32 esi_165
	word16 di_166
	fn10027E28(es, ds, dwArg00, out ebx_123, out esi_165, out di_166)
	edi_124 = 0x00000000
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):0x100069A8 -36(fp):0x10006710 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028828:
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):0x100069A8 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002882A:
	branch ebx_123 == 0x00000000 l10028835
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(0)

l1002882E:
	Mem142[fp - 0x00000020:word32] = ebx_123
	fn1002EEC6(dwArg00)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l100287AB:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx eax:<invalid> esi:0x100069A8 -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l10028798:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l10028766:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l1002876B:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx ebx:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -002C(32)

l10028770:
	word32 ebx_67
	word32 esi_68
	word16 di_69
	fn10027E6F(es, ds, 0x10005840, out ebx_67, out esi_68, out di_69)
	word32 ebp_75
	fn10028008(esi_68, ebx_67, ebx_67, esi_68, 0x80070057, es, ds, out ebp_75, out edi_124)
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edi ebp:fp - 0x00000004 ecx:edx ebx:<invalid> esi:0x100069A8 eax:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

l10028835:
	return edi_124
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn1002874E_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> eax:<invalid> ax:<invalid> al:<invalid> cl:<invalid> -44(fp):0x10007278 -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



word32 fn10028840(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10028840_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10028840:
	word32 esi_125
	word32 ebp_105
	word32 edi_178 = 0x00000000
	branch dwArg04 != 0x00000000 l10028892
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l10028892:
	branch edx != 0x00000000 l1002889D
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x00000000 ebp:fp - 0x00000004 ecx:<invalid> eax:edx esi:0x00000000 ebx:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002889D:
	Mem103[dwArg04:word32] = 0x00000000
	word32 esi_106
	word32 eax_107 = fn10028710(0x10006710, edx, es, ds, out ebp_105, out esi_106)
	branch eax_107 != 0x00000000 l100288CE
// DataOut: cs ds eax ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x00000000 ebp:fp - 0x00000004 ecx:<invalid> eax:edx esi:0x00000000 ebx:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100288CE:
	word32 ebx_182
	word16 di_175
	Mem131[fp - 0x00000024:word32] = ebp_105 - 0x0000000C
	Mem134[fp - 0x00000028:word32] = ebp_105 - 0x00000008
	Mem136[fp - 0x0000002C:word32] = esi_106
	Mem138[fp - 0x00000030:word32] = 0x00008000
	Mem141[fp - 0x00000034:word32] = Mem138[eax_107 + 0x00000008:word32]
	Mem144[fp - 0x00000038:word32] = Mem141[eax_107 + 0x0000000C:word32]
	word32 eax_145 = Mem144[ebp_105 - 0x00000010:word32]
	Mem147[fp - 0x0000003C:word32] = 0x00000019
	Mem150[fp - 0x00000040:word32] = Mem147[eax_145:word32]
	branch CryptDecodeObjectEx(Mem150[fp - 0x00000040:DWORD], Mem150[fp - 0x0000003C:LPCSTR], Mem150[fp - 0x00000038:(ptr BYTE)], Mem150[fp - 0x00000034:DWORD], Mem150[fp - 0x00000030:DWORD], Mem150[fp - 0x0000002C:PCRYPT_DECODE_PARA], Mem150[fp - 0x00000028:(ptr void)], Mem150[fp - 0x00000024:(ptr DWORD)]) != 0x00000000 l10028910
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028910:
	Mem227[fp - 0x00000024:word32] = ebp_105 - 0x00000004
	word32 eax_228 = Mem227[ebp_105 - 0x00000008:word32]
	Mem230[fp - 0x00000028:word32] = esi_106
	Mem232[fp - 0x0000002C:word32] = 0x40000002
	Mem235[fp - 0x00000030:word32] = Mem232[eax_228:word32]
	Mem238[fp - 0x00000034:word32] = Mem235[eax_228 + 0x00000004:word32]
	branch CryptBinaryToStringW(Mem238[fp - 0x00000034:(ptr BYTE)], Mem238[fp - 0x00000030:DWORD], Mem238[fp - 0x0000002C:DWORD], Mem238[fp - 0x00000028:LPWSTR], Mem238[fp - 0x00000024:(ptr DWORD)]) != 0x00000000 l10028941
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00008000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028941:
	word32 eax_263 = Mem238[ebp_105 - 0x00000004:word32]
	Mem266[fp - 0x00000024:word32] = 0x00000002
	word64 edx_eax_270 = Mem266[fp - 0x00000024:word32] *u (eax_263 + 0x00000001)
	Mem281[fp - 0x00000024:word32] = -(word32) OVERFLOW(edx_eax_270) | (word32) edx_eax_270
	word32 eax_282 = fn1002FF3B(dwArg00)
	branch eax_282 != 0x00000000 l10028977
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l10028977:
	Mem302[fp - 0x00000024:word32] = Mem281[ebp_105 - 0x00000004:word32] * 0x00000002 + 0x00000002
	Mem304[fp - 0x00000028:word32] = esi_106
	Mem306[fp - 0x0000002C:word32] = eax_282
	memset(Mem306[fp - 0x0000002C:(ptr void)], Mem306[fp - 0x00000028:int32], Mem306[fp - 0x00000024:size_t])
	Mem311[fp - 0x00000024:word32] = ebp_105 - 0x00000004
	word32 eax_312 = Mem311[ebp_105 - 0x00000008:word32]
	Mem314[fp - 0x00000028:word32] = eax_282
	Mem316[fp - 0x0000002C:word32] = 0x40000002
	Mem319[fp - 0x00000030:word32] = Mem316[eax_312:word32]
	Mem322[fp - 0x00000034:word32] = Mem319[eax_312 + 0x00000004:word32]
	branch CryptBinaryToStringW(Mem322[fp - 0x00000034:(ptr BYTE)], Mem322[fp - 0x00000030:DWORD], Mem322[fp - 0x0000002C:DWORD], Mem322[fp - 0x00000028:LPWSTR], Mem322[fp - 0x00000024:(ptr DWORD)]) == 0x00000000 l1002892C
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(0)

l100289A8:
	word32 eax_328 = Mem322[ebp_105 - 0x00000004:word32]
	Mem334[fp - 0x00000024:word32] = eax_282
	Mem336[fp - 0x00000028:word32] = 0x10007420
	Mem338[fp - 0x0000002C:word32] = 0x100075B4
	Mem339[eax_282 + eax_328 * 0x00000002:word16] = 0x0000
	word32 ebx_340
	fn10027E28(es, ds, dwArg00, out ebx_340, out esi_125, out di_175)
	Mem345[Mem339[ebp_105 + 0x00000008:word32]:word32] = ebx_340
	ebx_182 = esi_125
// DataOut: cs di ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028960:
	Mem290[fp - 0x00000024:word32] = 0x10007420
	Mem292[fp - 0x00000028:word32] = 0x100058D0
	fn10027E87(es, ds, dwArg00, out esi_125)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002892C:
	word32 eax_255 = GetLastError()
	Mem258[fp - 0x00000024:word32] = eax_255
	Mem260[fp - 0x00000028:word32] = 0x10007420
	Mem262[fp - 0x0000002C:word32] = 0x10007550
	edi_178 = eax_255
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100288F3:
	word32 eax_216 = GetLastError()
	Mem219[fp - 0x00000024:word32] = eax_216
	Mem221[fp - 0x00000028:word32] = 0x10007420
	Mem223[fp - 0x0000002C:word32] = 0x100074F0
	edi_178 = eax_216
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00008000 -44(fp):0x00000000 -40(fp):fp - 0x0000000C -36(fp):fp - 0x00000010 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10028906:
	fn10027E6F(es, ds, dwArg00, out ebx_182, out esi_125, out di_175)
// DataOut: cs di ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100289C8:
	branch edi_178 == 0x00000000 l100289DE
// DataOut: cs di ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): SZO
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100289CF:
	branch edi_178 > 0x00000000 l100289D5
// DataOut: cs di ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100289D5:
	esi_125 = (word32) di_175 | 0x80070000
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100289D1:
	esi_125 = edi_178
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100289DE:
	branch ebx_182 == 0x00000000 l100289E9
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100289E2:
	Mem195[fp - 0x00000024:word32] = ebx_182
	fn1002EEC6(dwArg00)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100289E8:
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100288AD:
	Mem113[fp - 0x00000024:word32] = 0x10006710
	Mem115[fp - 0x00000028:word32] = 0x10007420
	Mem117[fp - 0x0000002C:word32] = 0x10007478
	word32 ebx_119
	word32 esi_120
	word16 di_121
	fn10027E28(es, ds, dwArg00, out ebx_119, out esi_120, out di_121)
	esi_125 = 0x80092004
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l10028896:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x00000000 ebp:fp - 0x00000004 ecx:<invalid> eax:edx esi:0x00000000 ebx:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10028866:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x00000000 ebp:fp - 0x00000004 ecx:<invalid> eax:edx esi:0x00000000 ebx:0x00000000 -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002886B:
	word32 ebx_86
	word16 di_88
	fn10027E6F(es, ds, 0x10005840, out ebx_86, out esi_125, out di_88)
	word32 edi_95
	fn10028008(0x10007420, ebx_86, ebx_86, esi_125, 0x10007420, es, ds, out ebp_105, out edi_95)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0x00000000 ebp:fp - 0x00000004 ecx:<invalid> eax:edx esi:0x00000000 ebx:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100289E9:
	branch Mem0[ebp_105 - 0x00000008:word32] == 0x00000000 l100289F8
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100289EF:
	Mem68[fp - 0x00000024:word32] = Mem0[ebp_105 - 0x00000008:word32]
	LocalFree(Mem68[fp - 0x00000024:HLOCAL])
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l100289F8:
	return esi_125
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn10028840_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> Sequence edx:eax:<invalid> cl:<invalid> ax:<invalid> al:<invalid> -64(fp):<invalid> -60(fp):0x00000019 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):edx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



void fn10028A03(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebx edi esi esp
fn10028A03_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10028A03:
	branch edx == 0x00000000 l10028A33
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10028A0F:
	branch ecx == 0x00000000 l10028A33
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx ebx:ecx -8(fp):edi -4(fp):ebx
// LocalsOut: fp(32)

l10028A13:
	word32 esi_38 = 0x00000000
	branch edx == 0x00000000 l10028A32
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx ebx:ecx -8(fp):edi -4(fp):ebx
// LocalsOut: fp(32)

l10028A1A:
	branch Mem0[ecx + esi_38 * 0x00000004:word32] == 0x00000000 l10028A2D
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):edi -4(fp):ebx
// LocalsOut: fp(32)

l10028A20:
	CertFreeCertificateContext(Mem0[ecx + esi_38 * 0x00000004:word32])
	Mem72[ecx + esi_38 * 0x00000004:word32] = Mem0[ecx + esi_38 * 0x00000004:word32] & 0x00000000
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):edi -4(fp):ebx
// LocalsOut: fp(32)

l10028A2D:
	esi_38 = esi_38 + 0x00000001
	branch esi_38 <u edx l10028A1A
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):edi -4(fp):ebx
// LocalsOut: fp(32)

l10028A32:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):edi -4(fp):ebx
// LocalsOut: fp(32)

l10028A33:
	return
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx ebx:ecx esi:esi eax:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):edi -4(fp):ebx

fn10028A03_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebx:ebx esi:esi eax:<invalid> -16(fp):<invalid> -12(fp):esi -8(fp):edi -4(fp):ebx



void fn10028A36(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: bp bpl ebp esp rbp rsp sp spl
// Preserved: edi
fn10028A36_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10028A36:
	word32 esp_28
	word32 edi_29
	word32 ebp_30
	call api-ms-win-core-delayload-l1-1-1.dll!ResolveDelayLoadedAPI (retsize: 4; depth: 32)
		uses: dwLoc04_6,dwLoc08_11,dwLoc0C_15,dwLoc10_18,dwLoc14_21,dwLoc18_25,dwLoc1C_27,ebp_7,edi_3,esp_26
		defs: ebp_30,edi_29,esp_28
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10028A36_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> -28(fp):0x10000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):api-ms-win-core-delayload-l1-1-0.dll!DelayLoadFailureHook -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10028A62(word32 ecx, word32 edx, word32 ebp, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp ecx edx
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0008(32) Stack +000C(32)
fn10028A62_entry:
// DataOut: ebp ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Stack +0008(32) Stack +000C(32)

l10028A62:
	Mem27[dwArg08:word32] = 0x00000000
	Mem29[dwArg0C:word32] = 0x00000000
	branch ecx != 0xC000006E l10028A94
// DataOut: ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0008(32)

l10028A8E:
	branch edx != 0x00000000 l10028A96
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:0x00000000 ebx:edx -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0008(32)

l10028A94:
// DataOut: eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:0x00000000 ebx:edx -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0008(32)

l10028A96:
	word32 esp_39
	word32 edi_40
	word32 ebp_41
	byte SCZO_42
	word32 ebx_44
	word32 esi_45
	word32 ecx_46
	byte SZO_47
	byte C_48
	word32 edx_49
	byte Z_50
	word16 bx_51
	byte S_52
	word32 eax_182
	call ntdll.dll!RtlNtStatusToDosErrorNoTeb (retsize: 4; depth: 48)
		uses: bx_26,C,dwLoc04_6,dwLoc14_31,dwLoc18_30,dwLoc1C_28,dwLoc20_13,dwLoc24_16,dwLoc28_18,dwLoc2C_38,eax_36,ebp_7,ebx_25,ecx_23,edi_20,edx,esi_22,esp_37,SCZO_32,SZO,Z_33
		defs: bx_51,C_48,eax_43,ebp_41,ebx_44,ecx_46,edi_40,edx_49,esi_45,esp_39,S_52,SCZO_42,SZO_47,Z_50
	branch eax_182 != 0x0000013D l10028AA6
// DataOut: eax ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:0x00000000 ebx:edx -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0008(32)

l10028AA4:
	eax_182 = esi_45
// DataOut: eax ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> ebx:edx -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32) Stack +0008(32)

l10028AA6:
	Mem67[esp_39 - 0x00000004:word32] = 0x00000000
	Mem69[esp_39 - 0x00000008:word32] = 0x00000000
	Mem71[esp_39 - 0x0000000C:word32] = fp - 0x00000010
	Mem73[esp_39 - 0x00000010:word32] = 0x00000000
	Mem75[esp_39 - 0x00000014:word32] = eax_182
	Mem77[esp_39 - 0x00000018:word32] = 0x00000000
	Mem79[esp_39 - 0x0000001C:word32] = 0x00001100
	branch FormatMessageW(Mem79[esp_39 - 0x0000001C:DWORD], Mem79[esp_39 - 0x00000018:LPCVOID], Mem79[esp_39 - 0x00000014:DWORD], Mem79[esp_39 - 0x00000010:DWORD], Mem79[esp_39 - 0x0000000C:LPWSTR], Mem79[esp_39 - 0x00000008:DWORD], Mem79[esp_39 - 0x00000004:(ptr va_list)]) == 0x00000000 l10028ADA
// DataOut: ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> ebx:edx -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l10028ADA:
	Mem169[esp_39 - 0x00000004:word32] = ebx_44
	Mem171[esp_39 - 0x00000008:word32] = esi_45
	Mem173[esp_39 - 0x0000000C:word32] = 0x0000006A
	Mem176[esp_39 - 0x00000010:word32] = 0x10000000
	Mem178[esp_39 - 0x00000014:word32] = fp - 0x0000001C
	fn1000F146(dwArg00, dwArg04, dwArg08)
// DataOut: edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:fp - 0x00000010 ebx:edx edx:0x00000000 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l10028ACB:
	Mem159[esp_39 - 0x00000004:word32] = 0xFFFFFFFF
	Mem162[esp_39 - 0x00000008:word32] = 0x00000000
	word32 edx_165
	fn1000F30D(fp - 0x0000001C, dwArg00, dwArg04, out edx_165)
// DataOut: edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:fp - 0x00000010 ebx:edx edx:0x00000000 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l10028AEF:
	branch 0x00000000 == 0x00000000 l10028B34
// DataOut: bx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> ebx:edx edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l10028AF8:
	branch Mem79[0x00000000:word16] == 0x0000 l10028B34
// DataOut: edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:0x00000000 esi:ecx ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:0x0000 al:0x00 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32)

l10028AFD:
	Mem129[esp_39 - 0x00000004:word32] = dwArg08
	branch fn1001DDA5(fp - 0x0000001C, dwArg00) < 0x00000000 l10028B34
// DataOut: edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:0x00000000 esi:ecx ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:0x0000 al:0x00 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B0C:
	branch esi_45 < 0x00000000 l10028B18
// DataOut: edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:0x00 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B18:
	Mem145[esp_39 - 0x00000004:word32] = 0x00000002
	word32 eax_146 = Mem145[esp_39 - 0x00000004:word32]
	branch esi_45 >>u 0x0000001E == 0x00000001 l10028B32
// DataOut: eax ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:0x00 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B25:
	branch esi_45 >>u 0x0000001E == eax_146 l10028B32
// DataOut: eax ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx >>u 0x0000001E ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B32:
	Mem152[edi_40:word32] = eax_146
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx >>u 0x0000001E ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B29:
	branch esi_45 >>u 0x0000001E != 0x00000003 l10028B34
// DataOut: ecx edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx >>u 0x0000001E ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B2E:
	Mem157[edi_40:word32] = 0x00000001
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx >>u 0x0000001E ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B10:
	Mem140[edi_40:word32] = 0x00000003
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:0x00 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B34:
	branch 0x00000000 == 0x00000000 l10028B46
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B3A:
	Mem121[esp_39 - 0x00000004:word32] = 0x00000000
	LocalFree(Mem121[esp_39 - 0x00000004:HLOCAL])
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028B46:
	fn1000F2EE(fp - 0x0000001C)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:0x00000000 edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10028A62_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:fp - 0x0000001C ebx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn10028B5D(word32 edx, word32 esi, word32 edi, selector es, selector ds, byte bArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edi edx es esi fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(8) Stack +000C(32) Stack +0010(32)
fn10028B5D_entry:
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0029(0) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028B5D:
	word32 eax_148
	word32 esi_107
	__align(fp - 0x00000004)
	Mem19[dwArg0C:word32] = 0x00000000
	Mem25[dwArg10:word32] = 0x00000000
	word32 edi_165 = edi
	branch edx == 0x00000000 l10028D5D
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0024(0) Local -0029(0) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028B9D:
	word32 eax_234 = wcschr(edx, L'@')
	esi = eax_234
	word32 eax_242 = wcschr(edx, L'\\')
	word32 edx_243 = edx
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:edx -60(fp):edi -56(fp):esi -52(fp):ebx -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(0) Local -0028(32) Local -0029(0) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028BBF:
	edx_243 = edx_444 + 0x00000002
	word32 edx_444 = edx_243
	branch Mem25[edx_444:word16] != wLoc24 l10028BBF
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:edx + 0x00000002 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(0) Local -0028(32) Local -0029(0) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028BCC:
	edi_165 = edx - 0x00000002 + (edx_243 - (edx + 0x00000002) >> 0x00000001) * 0x00000002
	branch eax_242 == 0x00000000 l10028CB6
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:edx + 0x00000002 ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -0029(0) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028CB6:
	branch eax_234 == 0x00000000 l10028D5D
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -0029(0) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028D5D:
	word32 eax_184
	word32 edi_183
	branch fn1002A400(fp - 0x00000029, esi, es, ds) < 0x00000000 l10028D92
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0029(0) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028D6C:
	branch bLoc29 == 0x00 l10028D92
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx edx:<invalid> al:<invalid> esi:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028D92:
	fn1000F2EE(fp - 0x0000001C)
	edi_183 = edi_165 | 0xFFFFFFFF
	word32 edx_211
	eax_184 = fn10028E0F(fp - 0x0000001C, esi, es, ds, out edx_211)
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx edx:<invalid> al:<invalid> esi:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028D73:
	fn1000F2EE(fp - 0x0000001C)
	edi_183 = edi_165 | 0xFFFFFFFF
	word32 edx_225
	eax_184 = fn1002975B(fp - 0x0000001C, edx, esi, edi_183, es, ds, out edx_225)
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx edx:<invalid> al:<invalid> esi:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028DAF:
	esi_107 = eax_184
	branch eax_184 < 0x00000000 l10028DF2
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx edx:<invalid> al:<invalid> esi:<invalid> ax:<invalid> bl:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028DB5:
	word32 edx_197
	eax_148 = fn1000F30D(fp - 0x00000010, edx, edi_183, out edx_197)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028CBE:
	word32 edx_367
	word32 eax_368 = fn1000F30D(fp - 0x00000010, edx, 0xFFFFFFFF, out edx_367)
	esi_107 = eax_368
	branch eax_368 < 0x00000000 l10028DF2
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -0048(32) Stack +0008(8) Stack +000C(32) Stack +0010(32)

l10028CD4:
	branch bArg08 == 0x00 l10028DC2
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0xFFFFFFFF -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028CDE:
	word32 edx_390
	word32 eax_391 = fn1000F30D(fp - 0x0000001C, eax_234 + 0x00000002, (edi_165 - (eax_234 + 0x00000002) >> 0x00000001) + 0x00000001, out edx_390)
	esi_107 = eax_391
	branch eax_391 < 0x00000000 l10028DF2
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0xFFFFFFFF -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0028(32) Stack +000C(32) Stack +0010(32)

l10028D03:
	word32 edx_399
	*edxOut = fn1000F489(fp - 0x00000010)
	word32 edi_401 = 0x00000000
	branch 0x00000000 == 0x00000000 l10028DC2
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0028(32) Stack +000C(32) Stack +0010(32)

l10028D1A:
	word32 ebx_410 = 0xFFFFFFFE
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:fp - 0x00000010 ebx:0x00000000 esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +000C(32) Stack +0010(32)

l10028D2A:
	branch wcschr(eax_234, (wchar_t) (word32) Mem25[ebx_410:word16]) == 0x00000000 l10028D43
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +000C(32) Stack +0010(32)

l10028D3B:
	ebx_410 = ebx_410 - 0x00000002
	edi_401 = edi_401 - 0x00000001
	branch edi_401 != 0x00000000 l10028D2A
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +000C(32) Stack +0010(32)

l10028D43:
	esi_107 = eax_391
	branch edi_401 == 0x00000000 l10028DC2
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028D4D:
	Mem439[edi_401 * 0x00000002:word16] = 0x0000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028BDE:
	word32 edx_275
	word32 eax_276 = fn1000F30D(fp - 0x0000001C, edx, (eax_242 - edx - 0x00000002 >> 0x00000001) + 0x00000001, out edx_275)
	esi_107 = eax_276
	branch eax_276 < 0x00000000 l10028DF2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):0x00000040 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0024(32) Local -0029(0) Local -0048(32) Stack +000C(32) Stack +0010(32)

l10028C02:
	word32 edi_287 = (edi_165 - (eax_242 + 0x00000002) >> 0x00000001) + 0x00000001
	word32 edx_293
	word32 eax_294 = fn1000F30D(fp - 0x00000010, eax_242 + 0x00000002, edi_287, out edx_293)
	esi_107 = eax_294
	branch eax_294 < 0x00000000 l10028DF2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):edx -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0029(0) Stack +000C(32) Stack +0010(32)

l10028C20:
	word32 eax_312
	eax_312 = eax_294
	branch fn1000CD49(edx_293, edx, eax_294, edi_287, es, ds) == 0x00 l10028C6C
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0029(0) Stack +000C(32) Stack +0010(32)

l10028C2C:
	eax_312 = CompareStringOrdinal(0x00000000, edi_287 | 0xFFFFFFFF, 0x1000767C, edi_287 | 0xFFFFFFFF, 0x00000001)
	branch eax_312 != 0x00000002 l10028C6C
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -76(fp):edx -72(fp):0x0000005C -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0029(0) Stack +000C(32) Stack +0010(32)

l10028C6C:
	word32 edx_316 = fn1002A12B(0x00000000, fp - 0x00000029, eax_294, es, ds)
	*edxOut = edx_316
	esi_107 = eax_312
	branch eax_312 < 0x00000000 l10028DF2
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0029(0) Stack +000C(32) Stack +0010(32)

l10028C83:
	branch bLoc29 == 0x00 l10028DC2
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028C8E:
	fn1000F2EE(fp - 0x0000001C)
	fn1000F2EE(fp - 0x0000001C)
	word32 edx_328
	eax_148 = fn1002975B(fp - 0x0000001C, edx, eax_312, edi_287 | 0xFFFFFFFF, es, ds, out edx_328)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028C44:
	fn1000F2EE(fp - 0x0000001C)
	fn1000F2EE(fp - 0x0000001C)
	word32 edx_352
	word32 ebx_353
	word32 esi_354
	word32 edi_355
	eax_148 = fn10029894(fp - 0x0000001C, edx_293, fp - 0x00000004, es, ds, out edx_352, out ebx_353, out esi_354, out edi_355)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:edx esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):0x1000767C -68(fp):<invalid> -64(fp):0x00000001 -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028DC0:
	esi_107 = eax_148
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028DC2:
	branch esi_107 < 0x00000000 l10028DF2
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Stack +000C(32) Stack +0010(32)

l10028DC6:
	Mem120[dwArg10:word32] = 0x00000000
	Mem127[dwArg0C:word32] = 0x00000000
	word32 edx_114
	*edxOut = 0x00000000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000000 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10028DF2:
	fn1000F2EE(fp - 0x00000010)
	fn1000F2EE(fp - 0x0000001C)
	word32 ecx_70
	*ecxOut = fp - 0x0000001C
	return esi_107
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000003C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10028B5D_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:fp - 0x0000001C ebx:ebx edx:<invalid> esi:esi ax:<invalid> al:<invalid> bl:<invalid> -80(fp):0x00000000 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):edi -56(fp):esi -52(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10028E0F(word32 ecx, word32 esi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ebp ebx edi esi esp
fn10028E0F_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10028E0F:
	Mem24[ecx:word32] = 0x00000000
	word32 edi_130 = ecx
	word32 ebx_120 = 0x00000000
	branch GetSystemMetrics(0x00000043) == 0x00000001 l10028E76
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10028E36:
	word32 eax_111 = fn1001DE03(fp - 0x00000010, 0x10003460, 0x10007680)
	esi = eax_111
	branch eax_111 >= 0x00000000 l10028E94
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> -32(fp):0x00000043 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10028E4F:
	word32 ecx_118
	word32 edx_119
	branch fn1000CDA9(es, ds, out ecx_118, out edx_119, out ebx_120, out esi) == 0x00 l10028E72
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 eax:<invalid> ecx:<invalid> esi:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):0x10007680 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10028E58:
	fn1000F2EE(fp - 0x00000010)
	word32 edx_146
	word32 esi_148
	esi = fn10029894(fp - 0x00000010, edx_119, fp - 0x00000004, es, ds, out edx_146, out ebx_120, out esi_148, out edi_130)
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):0x10007680 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10028E72:
	branch esi >= 0x00000000 l10028E94
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):0x10007680 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l10028E76:
	fn1000F2EE(fp - 0x00000010)
	word32 edx_98
	word32 eax_99 = fn1002975B(fp - 0x00000010, ebx_120, esi, edi_130, es, ds, out edx_98)
	esi = eax_99
	branch eax_99 < 0x00000000 l10028EA2
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028E94:
	Mem75[edi_130:word32] = 0x00000000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10028EA2:
	fn1000F2EE(fp - 0x00000010)
	return esi
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 ebx:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10028E0F_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx eax:<invalid> ecx:fp - 0x00000010 esi:esi al:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> -40(fp):ecx -36(fp):0x10003460 -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10028EB3(word32 edx, selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi edx esi esp
// Stack args: Stack +0008(32)
fn10028EB3_entry:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(0) Stack +0008(32)

l10028EB3:
	Mem25[dwArg08:word32] = 0x00000000
	fn1000F2EE(fp - 0x00000020)
	fn1000F2EE(fp - 0x0000002C)
	word32 ecx_64
	word32 edx_65
	branch fn10028B5D(edx, 0x00000000, edx, es, ds, 0x00, fp - 0x0000002C, fp - 0x00000020, out ecx_64, out edx_65) < 0x00000000 l10028F8B
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(0) Local -0040(32) Local -0044(32)

l10028F19:
	word32 eax_117
	branch 0x00000000 == 0x00000000 l10028F6A
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0005(0) Local -0040(32) Local -0044(32)

l10028F20:
	branch Mem25[0x00000000:word16] == 0x0000 l10028F6A
// DataOut: cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0005(0) Local -0040(32) Local -0044(32)

l10028F6A:
	word32 edx_138
	eax_117 = fn1000F30D(fp - 0x00000014, edx, 0xFFFFFFFF, out edx_138)
// DataOut: cs ds eax ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

l10028F27:
	fn1002A12B(0x00000000, fp - 0x00000005, 0x00000000, es, ds)
	branch false l10028F5E
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0005(0) Local -0040(32)

l10028F35:
	branch bLoc05 == 0x00 l10028F5E
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0040(32)

l10028F5E:
	fn1000F2EE(fp - 0x00000014)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0040(32)

l10028F3B:
	fn1000F2EE(fp - 0x00000014)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0040(32)

l10028F48:
	word32 ecx_164
	word32 edx_165
	word16 si_166
	eax_117 = fn10029FC6(fp - 0x00000014, out ecx_164, out edx_165, out si_166)
// DataOut: cs ds eax ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000038 edi:edx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:0x00000000 eax:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):fp - 0x0000002C -60(fp):fp - 0x00000020 -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

l10028F75:
	branch eax_117 < 0x00000000 l10028F8B
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10028F7B:
	word32 eax_123 = Mem25[fp - 0x00000014:word32]
	Mem127[fp - 0x00000014:word32] = 0x00000000
	Mem128[fp - 0x0000000C:word32] = 0x00000000
	Mem129[fp - 0x00000010:word32] = 0x00000000
	Mem130[dwArg08:word32] = eax_123
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):0x00000000 -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10028F8B:
	fn1000F2EE(fp - 0x00000014)
	fn1000F2EE(fp - 0x00000020)
	fn1000F2EE(fp - 0x0000002C)
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10028EB3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -72(fp):fp - 0x0000002C -68(fp):0x00000000 -64(fp):<invalid> -60(fp):<invalid> -56(fp):edi -52(fp):esi -48(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



void fn10028FAE(word32 edx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esp
fn10028FAE_entry:
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0034(32)

l10028FAE:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebp_137 = fp - 0x00000004
	word32 ebx_142 = 0x00000000
	byte bl_146 = 0x00
	word32 esp_180 = fp - 0x0000002C
	word32 edi_177
	word32 esi_179
	branch CoCreateInstance(0x10007668, 0x00000000, 0x00000001, 0x100076A8, fn1000FC32(edx, 0x00000000, esi, es, ds, fp - 0x00000010, out esi_179, out edi_177)) < 0x00000000 l1002905B
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l10028FEA:
	word32 esi_106
	word32 edi_107
	word32 eax_108 = fn1000EF25(fp - 0x00000014, edx, 0x00000000, 0x00000000, es, ds, out esi_106, out edi_107)
	word32 esp_118
	word32 edi_119
	word32 ebp_120
	byte SCZO_121
	word32 eax_122
	byte SZO_123
	byte C_124
	word32 ebx_125
	word32 ecx_126
	byte S_127
	word32 esi_128
	byte bl_129
	byte Z_130
	byte al_131
	word32 edx_132
	selector es_133
	selector ds_134
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 68)
		uses: al,bl_20,C_48,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_102,dwLoc10_25,dwLoc14_104,dwLoc18_18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C_15,dwLoc30_97,dwLoc34_101,dwLoc38_111,dwLoc3C_114,dwLoc40_116,eax_108,ebp_7,ebx_19,ecx_109,edi_107,edx,es,esi_106,esp_115,S_47,SCZO,SZO_46,Z
		defs: al_131,bl_129,C_124,ds_134,eax_122,ebp_120,ebx_125,ecx_126,edi_119,edx_132,es_133,esi_128,esp_118,S_127,SCZO_121,SZO_123,Z_130
	byte SCZO_138
	word32 eax_139
	byte SZO_140
	byte C_141
	word32 ecx_143
	byte S_144
	byte Z_147
	byte al_148
	word32 edx_149
	word32 edi_136
	word32 esi_145
	word32 esp_135
	call Mem0[edi_119 + 0x00000024:word32] (retsize: 4; depth: 4)
		uses: al_131,bl_129,C_124,ds_134,dwLoc04_6,dwLoc08_12,dwLoc0C_102,dwLoc10_25,dwLoc14_104,dwLoc18_18,dwLoc1C,dwLoc20,dwLoc24,dwLoc28,dwLoc2C_15,dwLoc30_97,dwLoc34_101,dwLoc38_111,dwLoc3C_114,dwLoc40_116,eax_122,ebp_120,ebx_125,ecx_126,edi_119,edx_132,es_133,esi_128,esp_118,S_127,SCZO_121,SZO_123,Z_130
		defs: al_148,bl_146,C_141,ds_151,eax_139,ebp_137,ebx_142,ecx_143,edi_136,edx_149,es_150,esi_145,esp_135,S_144,SCZO_138,SZO_140,Z_147
	branch eax_139 < 0x00000000 l10029051
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> -64(fp):0x10007668 -60(fp):0x00000000 -56(fp):0x00000001 -52(fp):0x100076A8 -48(fp):<invalid> -44(fp):ebx -24(fp):ecx -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10029017:
	Mem189[esp_135 - 0x00000004:word32] = fp - 0x00000028
	Mem191[esp_135 - 0x00000008:word32] = 0x100031C4
	Mem200[esp_135 - 0x0000000C:word32] = 0x00000000
	word32 esp_203
	word32 edi_204
	word32 ebp_205
	byte SCZO_206
	word32 eax_207
	byte SZO_208
	byte C_209
	word32 ebx_210
	word32 ecx_211
	byte S_212
	word32 esi_213
	byte bl_214
	byte Z_215
	byte al_216
	word32 edx_217
	selector es_218
	selector ds_219
	call Mem200[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_148,bl_146,C_183,ds_151,dwLoc04_6,dwLoc08_12,dwLoc0C_102,dwLoc10_25,dwLoc14_104,dwLoc18_18,dwLoc1C_196,dwLoc20_194,dwLoc24_192,dwLoc28_185,dwLoc2C_15,dwLoc30_97,dwLoc34_101,dwLoc38_111,dwLoc3C_114,dwLoc40_116,eax_198,ebp_137,ebx_142,ecx_202,edi_197,edx_149,es_150,esi_201,esp_199,S_153,SCZO_138,SZO_182,Z_147
		defs: al_216,bl_214,C_209,ds_219,eax_207,ebp_205,ebx_210,ecx_211,edi_204,edx_217,es_218,esi_213,esp_203,S_212,SCZO_206,SZO_208,Z_215
	byte SCZO_223
	word32 eax_224
	byte SZO_225
	byte C_226
	word32 ecx_228
	byte S_229
	byte Z_232
	byte al_233
	word32 edx_234
	call Mem200[esi_213 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: al_216,bl_214,C_209,ds_219,dwLoc04_6,dwLoc08_12,dwLoc0C_102,dwLoc10_25,dwLoc14_104,dwLoc18_18,dwLoc1C_196,dwLoc20_194,dwLoc24_192,dwLoc28_185,dwLoc2C_15,dwLoc30_97,dwLoc34_101,dwLoc38_111,dwLoc3C_114,dwLoc40_116,eax_207,ebp_205,ebx_210,ecx_211,edi_204,edx_217,es_218,esi_213,esp_203,S_212,SCZO_206,SZO_208,Z_215
		defs: al_233,bl_231,C_226,ds_236,eax_224,ebp_222,ebx_227,ecx_228,edi_221,edx_234,es_235,esi_230,esp_220,S_229,SCZO_223,SZO_225,Z_232
	branch eax_224 < 0x00000000 l10029051
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> -64(fp):<invalid> -60(fp):ecx -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):ebx -24(fp):ecx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0020(0)

l1002903F:
	Mem245[esp_135 - 0x00000004:word32] = fp - 0x00000028
	PropVariantClear(Mem245[esp_135 - 0x00000004:(ptr PROPVARIANT)])
	bl_146 = wLoc20 == 0xFFFF
	ebx_142 = DPB(ebx_142, wLoc20 == 0xFFFF, 0) (alias)
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000018 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:<invalid> -64(fp):<invalid> -60(fp):ecx -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10029051:
	word32 edx_174
	word32 esi_175
	fn1000C640(fp - 0x0000000C, ebx_142, esi_145, edi_136, es, ds, out edx_174, out esi_175)
	word32 esp_178 = esp_135 + 0x00000004
	edi_177 = Mem0[esp_135:word32]
	esi_179 = Mem0[esp_178:word32]
	esp_180 = esp_178 + 0x00000004
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> bl:Test(EQ,Z) -64(fp):<invalid> -60(fp):ecx -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002905B:
	word32 edx_80
	word32 esi_81
	word32 eax_85 = DPB(fn1000C640(fp - 0x00000010, ebx_142, esi_179, edi_177, es, ds, out edx_80, out esi_81), bl_146, 0)
	word32 ecx_91
	fn1002F420(eax_85, eax_11 ^ fp - 0x00000004, edx_80, Mem0[esp_180:word32], ebp_137, esi_81, edi_177, es, ds, out ecx_91)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> bl:Test(EQ,Z) -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn10028FAE_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> al:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):ebx -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10029074()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esp
fn10029074_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10029074:
	branch fn1001137D(0x80000002, 0x10007708, 0x100076F4, 0x00000004, fp + 0x00000008, 0x00000004) <= 0x00000000 l100290A1
// DataOut: ax cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10029099:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:0x10007708 ecx:0x80000002 -20(fp):0x100076F4 -16(fp):0x00000004 -12(fp):fp + 0x00000008 -8(fp):0x00000004 -4(fp):ebp

l100290A1:
	return 0x10007708
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:0x10007708 ecx:0x80000002 -20(fp):0x100076F4 -16(fp):0x00000004 -12(fp):fp + 0x00000008 -8(fp):0x00000004 -4(fp):ebp

fn10029074_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:0x10007708 ecx:0x80000002 -20(fp):0x100076F4 -16(fp):0x00000004 -12(fp):fp + 0x00000008 -8(fp):0x00000004 -4(fp):ebp



void fn100290A5(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +000C(32)
fn100290A5_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +000C(32)

l100290A5:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 eax_38 = RegOpenKeyExW(0x80000002, 0x10003350, 0x00000000, 0x00000001, fp - 0x00000110)
	word32 esi_101 = eax_38
	word16 si_126 = (word16) eax_38
	branch eax_38 != 0x00000000 l10029199
// DataOut: cs ds ebp ebx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l100290EF:
	word32 eax_123 = RegGetValueW(0x80000002, eax_38, dwArg04, 0x00000002, eax_38, fp - 0x00000108, fp - 0x0000010C)
	esi_101 = eax_123
	si_126 = (word16) eax_123 (alias)
	branch eax_123 == 0x00000000 l10029126
// DataOut: cs ds ebp ebx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -304(fp):0x80000002 -300(fp):0x10003350 -296(fp):0x00000000 -292(fp):0x00000001 -288(fp):fp - 0x00000110 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l1002911E:
	branch eax_123 != 0x000000EA l10029189
// DataOut: cs ds ebp ebx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):fp - 0x00000108 -288(fp):fp - 0x0000010C -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029126:
	word32 eax_152 = CoTaskMemAlloc(0x00000100)
	Mem154[dwArg0C:word32] = eax_152
	branch eax_152 == 0x00000000 l10029186
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):fp - 0x00000108 -288(fp):fp - 0x0000010C -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029186:
	esi_101 = 0x0000000E
	si_126 = 0x000E (alias)
// DataOut: cs ds ebp edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):fp - 0x00000108 -288(fp):0x00000100 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029138:
	branch eax_123 != 0x00000000 l10029154
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):fp - 0x00000108 -288(fp):0x00000100 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029154:
	branch RegGetValueW(0x80000002, 0x00000000, dwArg04, 0x00000002, 0x00000000, eax_152, fp - 0x0000010C) != 0x00000000 l10029177
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):fp - 0x00000108 -288(fp):0x00000100 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029177:
	CoTaskMemFree(Mem154[dwArg0C:word32])
	esi_101 = 0x000003EB
	si_126 = 0x03EB (alias)
// DataOut: cs ds ebp edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:fp - 0x0000010C esi:<invalid> -312(fp):0x80000002 -308(fp):0x00000000 -304(fp):<invalid> -300(fp):0x00000002 -296(fp):0x00000000 -292(fp):<invalid> -288(fp):fp - 0x0000010C -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029173:
	esi_101 = 0x00000000
	si_126 = 0x0000 (alias)
// DataOut: cs ds ebp edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:fp - 0x0000010C esi:<invalid> -312(fp):0x80000002 -308(fp):0x00000000 -304(fp):<invalid> -300(fp):0x00000002 -296(fp):0x00000000 -292(fp):<invalid> -288(fp):fp - 0x0000010C -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l1002913C:
	memcpy(eax_152, fp - 0x00000108, 0x00000100)
// DataOut: cs ds ebp edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x80000002 esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):fp - 0x00000108 -288(fp):0x00000100 -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029189:
	RegCloseKey(0x80000002)
	branch esi_101 == 0x00000000 l100291A9
// DataOut: cs ds ebp edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):0x00000002 -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l10029199:
	Mem96[dwArg0C:word32] = Mem0[dwArg0C:word32] & 0x00000000
	branch esi_101 <= 0x00000000 l100291A9
// DataOut: cs ds ebp edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l100291A0:
	esi_101 = (word32) si_126 | 0x80070000
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0114(32) Local -0118(32) Local -011C(32)

l100291A9:
	word32 ecx_75
	fn1002F420(esi_101, eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_75)
	return
// DataOut: bx cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000011C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp

fn100290A5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:<invalid> esi:esi -312(fp):0x80000002 -308(fp):<invalid> -304(fp):<invalid> -300(fp):<invalid> -296(fp):<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):edi -280(fp):esi -276(fp):ebx -272(fp):0x80000002 -268(fp):0x00000100 -8(fp):<invalid> -4(fp):ebp



word32 fn100291BE(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, byte bArg04, word32 dwArg08, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(8) Stack +0008(32)
fn100291BE_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Stack +0004(8) Stack +0008(32)

l100291BE:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ebx_130 = 0x80004005
	branch RegEnumKeyExW(ecx, edx, fp - 0x00000058, fp - 0x00000070, 0x00000000, 0x00000000, 0x00000000, 0x00000000) != 0x00000000 l10029269
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Local -008C(32) Stack +0004(8)

l100291FE:
	branch CLSIDFromString(fp - 0x00000058, fp - 0x00000068) < 0x00000000 l10029269
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Local -008C(32) Stack +0004(8)

l10029210:
	word32 ecx_102
	word32 eax_104 = fn1000CAD8(ecx, fp - 0x00000058, 0x10003630, fp - 0x0000006C, out ecx_102, out edx)
	branch eax_104 == 0x80070002 l10029235
// DataOut: cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):<invalid> -132(fp):fp - 0x00000058 -128(fp):fp - 0x00000068 -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Local -008C(32) Stack +0004(8)

l1002922B:
	branch eax_104 < 0x00000000 l10029269
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x10003630 -132(fp):ecx -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Local -008C(32) Stack +0004(8)

l1002922F:
	branch dwLoc6C != 0x00000000 l10029269
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x10003630 -132(fp):ecx -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Local -008C(32) Stack +0004(8)

l10029235:
	word32 ecx_120
	word32 eax_122 = fn1000CAD8(ecx, fp - 0x00000058, 0x100076B8, fp - 0x0000006C, out ecx_120, out edx)
	branch eax_122 == 0x80070002 l10029260
// DataOut: cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x10003630 -132(fp):ecx -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Stack +0004(8)

l10029250:
	branch eax_122 < 0x00000000 l10029269
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x100076B8 -132(fp):<invalid> -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -006C(0) Local -0074(32) Local -0078(32) Local -007C(32) Stack +0004(8)

l10029254:
	branch dwLoc6C == 0x00000000 l10029260
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x100076B8 -132(fp):<invalid> -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -0074(32) Local -0078(32) Local -007C(32) Stack +0004(8)

l1002925A:
	branch bArg04 == 0x00 l10029269
// DataOut: cs ds ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x100076B8 -132(fp):<invalid> -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -005C(32) Local -0060(32) Local -0064(32) Local -0068(32) Local -0074(32) Local -0078(32) Local -007C(32)

l10029260:
	Mem135[dwArg08:word32] = dwLoc68
	Mem140[dwArg08 + 0x00000004:word32] = dwLoc64
	Mem145[dwArg08 + 0x00000008:word32] = dwLoc60
	Mem150[dwArg08 + 0x0000000C:word32] = dwLoc5C
	ebx_130 = 0x00000000
// DataOut: cs ds ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80004005 edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):0x100076B8 -132(fp):<invalid> -128(fp):fp - 0x0000006C -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0074(32) Local -0078(32) Local -007C(32)

l10029269:
	word32 ecx_75
	return fn1002F420(ebx_130, eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_75)
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp

fn100291BE_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx ecx:<invalid> edx:<invalid> cl:<invalid> -156(fp):ecx -152(fp):edx -148(fp):fp - 0x00000058 -144(fp):fp - 0x00000070 -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):0x00000027 -8(fp):<invalid> -4(fp):ebp



word32 fn1002927E(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002927E_entry:
	*edxOut = edx
	*ecxOut = ecx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(0) Stack +0004(32)

l1002927E:
	word32 eax_105 = RegQueryInfoKeyW(ecx, 0x00000000, 0x00000000, 0x00000000, fp - 0x0000000C, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000)
	word32 esi_109 = 0x00000000
	word16 ax_48 = (word16) eax_105
	byte S_150 = cond(eax_105)
	branch eax_105 <= 0x00000000 l100292B3
// DataOut: ax cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32) Stack +0004(32)

l100292A9:
	word32 eax_146 = (word32) ax_48
	eax_105 = eax_146 | 0x80070000
	S_150 = cond(eax_146 | 0x80070000) (alias)
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000030 edi:edi ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ebx:ecx -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):0x00000000 -52(fp):0x00000000 -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32) Stack +0004(32)

l100292B3:
	branch S_150 l100292F4
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:edi ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ebx:ecx -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):0x00000000 -52(fp):0x00000000 -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32) Stack +0004(32)

l100292B5:
	branch dwLoc0C <=u 0x00000000 l100292E3
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:edi ebp:fp - 0x00000004 esi:0x00000000 eax:<invalid> ebx:ecx -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):0x00000000 -52(fp):0x00000000 -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32)

l100292BD:
	word32 ecx_121
	word32 edx_122
	branch fn100291BE(ecx, esi_109, ecx, esi_109, dwArg04, es, ds, (byte) edx, fp - 0x00000020, out ecx_121, out edx_122) < 0x00000000 l100292DD
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> cl:<invalid> -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32)

l100292D1:
	word32 edx_143
	fn1000F0D2(dwArg04, es, ds, fp - 0x00000020, out edx_143)
	word32 ecx_140
	*ecxOut = dwArg04
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> cl:<invalid> -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):fp - 0x00000020 -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32)

l100292DD:
	esi_109 = esi_109 + 0x00000001
	branch esi_109 <u dwLoc0C l100292BD
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> cl:<invalid> -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(32) Local -003C(32)

l100292E3:
	eax_105 = (0x00000000 - (0x00000000 <u Mem0[dwArg04 + 0x00000004:word32]) & 0x7FFFBFFB) + 0x80004005
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> cl:<invalid> -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp
// LocalsOut: fp(32)

l100292F4:
	return eax_105
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000030 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> cl:<invalid> -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp

fn1002927E_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ebx:ebx edx:<invalid> ecx:<invalid> cl:<invalid> -96(fp):ecx -92(fp):0x00000000 -88(fp):0x00000000 -84(fp):0x00000000 -80(fp):fp - 0x0000000C -76(fp):0x00000000 -72(fp):0x00000000 -68(fp):0x00000000 -64(fp):0x00000000 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):edi -44(fp):esi -40(fp):ebx -16(fp):edx -4(fp):ebp



word32 fn100292FD(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32)
fn100292FD_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l100292FD:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 eax_37 = fn1001DE03(fp - 0x00000028, 0x10003460, 0x10004E20)
	word32 esi_103 = eax_37
	branch eax_37 < 0x00000000 l1002938B
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32)

l10029339:
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -64(fp):ecx -60(fp):0x10003460 -56(fp):0x10004E20 -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0038(0) Local -0040(32)

l1002937C:
	word32 eax_95 = wcstok_s(0x00000000, 0x100075E4, fp - 0x0000001C)
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000040 edi:<invalid> ebp:fp - 0x00000004 eax:fp - 0x0000001C ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):0x00000000 -60(fp):0x100075E4 -56(fp):fp - 0x0000001C -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0040(32)

l10029387:
	branch eax_95 != 0x00000000 l1002934A
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0040(32)

l1002934A:
	branch esi_103 < 0x00000000 l1002938B
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0040(32)

l1002934E:
	word32 eax_118 = CLSIDFromString(eax_95, fp - 0x00000018)
	esi_103 = eax_118
	branch eax_118 < 0x00000000 l10029387
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):0x00000000 -60(fp):<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0040(32)

l1002935F:
	word32 eax_131 = fn1000F0D2(dwArg08, es, ds, fp - 0x00000018, out edx)
	esi_103 = eax_131
	branch eax_131 < 0x00000000 l10029387
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):0x00000000 -60(fp):<invalid> -56(fp):fp - 0x00000018 -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0040(32)

l10029371:
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):0x00000000 -60(fp):fp - 0x00000018 -56(fp):<invalid> -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -002C(32) Local -0030(32) Local -0034(32) Local -0038(0) Local -0040(32)

l1002938B:
	fn1000F2EE(fp - 0x00000028)
	word32 ecx_70
	return fn1002F420(esi_103, eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_70)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000034 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn100292FD_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:<invalid> esi:esi edx:<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):<invalid> -52(fp):edi -48(fp):esi -44(fp):ebx -40(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn100293A8(ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: ebp edi esi esp
fn100293A8_entry:
// DataOut: cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100293A8:
	word32 esi_28
	branch fn1000CB72(0x10002F60, 0x10007980, fp - 0x00000008) >= 0x00000000 l100293CC
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l100293CC:
	esi_28 = ecx
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x10007980 ebp:fp - 0x00000004 eax:<invalid> edx:0x10002F60 -24(fp):0x10007980 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100293C8:
	esi_28 = 0x00000000
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x10007980 ebp:fp - 0x00000004 eax:<invalid> edx:0x10002F60 -24(fp):0x10007980 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100293CF:
	word32 edx_30
	*edxOut = 0x10003460
	branch fn1000CB72(0x10003460, 0x10007980, fp - 0x00000008) < 0x00000000 l100293E5
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x10007980 ebp:fp - 0x00000004 eax:<invalid> edx:0x10002F60 esi:<invalid> -24(fp):0x10007980 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l100293E2:
	esi_28 = ecx
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x10007980 ebp:fp - 0x00000004 eax:<invalid> edx:0x10003460 esi:<invalid> -24(fp):0x10007980 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100293E5:
	return esi_28
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:0x10007980 ebp:fp - 0x00000004 eax:<invalid> edx:0x10003460 esi:<invalid> -24(fp):0x10007980 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

fn100293A8_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:0x10003460 esi:esi -24(fp):0x10007980 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp



byte fn100293ED(word32 ecx, word32 edx, word32 dwArg04, byte bArg08, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: al ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn100293ED_entry:
// DataOut: cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100293ED:
	word32 eax_30 = (word32) bArg08
	word32 ecx_22
	word32 edx_23
	branch fn1000CAD8(0x80000002, edx, dwArg04, fp - 0x00000008, out ecx_22, out edx_23) < 0x00000000 l10029410
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002940D:
	eax_30 = ecx
// DataOut: cs ds eax ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> cl:<invalid> edx:0x00000031 -20(fp):<invalid> -16(fp):ecx -12(fp):fp - 0x00000008 -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10029410:
	return eax_30 != 0x00000000
// DataOut: al cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> cl:<invalid> edx:0x00000031 -20(fp):<invalid> -16(fp):ecx -12(fp):fp - 0x00000008 -8(fp):ecx -4(fp):ebp

fn100293ED_exit:
// DataOut: al ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> al:Test(NE,Z) cl:<invalid> edx:0x00000031 -20(fp):<invalid> -16(fp):ecx -12(fp):fp - 0x00000008 -8(fp):ecx -4(fp):ebp



word32 fn1002941B(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: edx
// Trashed: SCZO ah al ax bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002941B_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002941B:
	Mem37[dwArg08:byte] = 0x00
	word32 ecx_39
	word32 edx_40
	branch fn1000CAD8(0x80000002, ecx, dwArg04, fp - 0x00000008, out ecx_39, out edx_40) >= 0x00000000 l1002945D
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(0) Stack +0004(32)

l10029445:
	word32 ecx_92
	branch fn1000CAD8(0x80000002, edx, dwArg04, fp - 0x00000008, out ecx_92, out edx_40) < 0x00000000 l10029467
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:0x00000000 edx:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):ecx -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(0)

l1002945D:
	Mem81[dwArg08:byte] = ecx != 0x00000000
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:0x00000000 edx:<invalid> ecx:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10029467:
	return edx_40
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:edx ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> bl:0x01 al:Test(NE,Z) cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn1002941B_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ebx:ebx edx:<invalid> ecx:<invalid> bl:<invalid> al:0x01 cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



void fn10029472(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10029472_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10029472:
	word32 ecx_35
	word32 edx_36
	branch fn1000CAD8(0x80000002, 0x10003880, 0x100045BC, fp - 0x00000008, out ecx_35, out edx_36) < 0x00000000 l100294B7
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(0) Local -0020(32) Stack +0004(32)

l100294A2:
	branch (ecx & 0x00000000) == 0x00000000 l100294B7
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:<invalid> ecx:<invalid> cl:<invalid> -32(fp):0x100045BC -28(fp):ecx -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l100294B7:
	branch fn10015DDD(0x80000002, 0x10003880, 0x10003904, ecx) < 0x00000000 l1002950E
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:<invalid> ecx:<invalid> cl:<invalid> -32(fp):0x100045BC -28(fp):ecx -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l100294CA:
	fn10015DDD(0x80000002, 0x10003880, 0x100076D0, ecx)
	fn10029074()
	fn1002A0B9(0x100077AC)
	branch dwArg04 == 0x00000000 l10029504
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:0x10003880 ecx:0x80000002 cl:0x02 ax:<invalid> -32(fp):0x100045BC -28(fp):0x10003904 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Stack +0004(32)

l10029504:
	fn1002A0B9(0x1000392C)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:0x10007708 ecx:<invalid> ax:<invalid> cl:0xAC -32(fp):0x100045BC -28(fp):0x80000002 -24(fp):0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l100294F1:
	fn10015DDD(0x80000002, 0x10003880, 0x1000392C, dwArg04)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:0x10007708 ecx:<invalid> ax:<invalid> cl:0xAC -32(fp):0x100045BC -28(fp):0x80000002 -24(fp):0x00000000 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l100294A8:
	RegDeleteKeyValueW(0x80000002, 0x10003880, 0x100045BC)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:<invalid> ecx:<invalid> cl:<invalid> -32(fp):0x100045BC -28(fp):ecx -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002950E:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x80000002 edx:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp

fn10029472_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx edx:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx & 0x00000000 -4(fp):ebp



word32 fn10029517(word32 ecx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn10029517_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10029517:
	word32 ecx_33
	word32 edx_111
	branch fn1000CAD8(0x80000002, 0x10003350, 0x100045BC, fp - 0x0000000C, out ecx_33, out edx_111) < 0x00000000 l10029563
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -004C(32)

l10029548:
	branch 0x00000000 == 0x00000000 l10029563
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 edx:<invalid> ecx:<invalid> cl:<invalid> -80(fp):0x100045BC -76(fp):ecx -72(fp):fp - 0x0000000C -68(fp):edi -64(fp):esi -60(fp):ebx -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -004C(32)

l10029563:
	word32 ecx_77
	word16 si_79
	branch fn10010D2A(0x0002001F, es, ds, fp - 0x00000008, out ecx_77, out edx_111, out si_79) < 0x00000000 l10029752
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 edx:<invalid> ecx:<invalid> cl:<invalid> -80(fp):0x100045BC -76(fp):ecx -72(fp):fp - 0x0000000C -68(fp):edi -64(fp):esi -60(fp):ebx -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029586:
	Mem88[fp - 0x0000002C:word32] = 0x00000000
	Mem89[fp - 0x00000028:word32] = 0x00000000
	Mem90[fp - 0x00000024:word32] = 0x00000000
	fn1000F2EE(fp - 0x0000002C)
	Mem96[fp - 0x00000028:word32] = 0xFFFFFFFF
	Mem97[fp - 0x00000024:word32] = 0xFFFFFFFF
	word32 ecx_98
	word16 bx_100
	branch fn1002A463(ecx, fp - 0x0000002C, fp - 0x00000004, es, ds, out ecx_98, out edx_111, out bx_100) < 0x00000000 l10029741
// DataOut: bx cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> -80(fp):0x100045BC -76(fp):ecx -72(fp):fp - 0x00000008 -68(fp):edi -64(fp):esi -60(fp):ebx -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100295B2:
	word32 esi_124 = Mem97[fp - 0x0000002C:word32]
	word32 ecx_129 = Mem97[fp - 0x00000008:word32]
	Mem131[fp - 0x00000048:word32] = esi_124
	Mem133[fp - 0x0000004C:word32] = 0x10003954
	edx_111 = 0x00000000
	branch fn10015DDD(ecx_129, 0x00000000, dwArg00, dwArg04) < 0x00000000 l10029741
// DataOut: bx cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> -80(fp):0x100045BC -76(fp):ecx -72(fp):fp - 0x00000008 -68(fp):edi -64(fp):esi -60(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100295CD:
	Mem142[fp - 0x00000038:word32] = 0x00000000
	Mem143[fp - 0x00000034:word32] = 0x00000000
	Mem144[fp - 0x00000030:word32] = 0x00000000
	fn1000F2EE(fp - 0x00000038)
	Mem146[fp - 0x00000048:word32] = fp - 0x00000038
	Mem148[fp - 0x00000034:word32] = 0xFFFFFFFF
	Mem150[fp - 0x0000004C:word32] = fp - 0x00000038
	Mem152[fp - 0x00000050:word32] = fp - 0x00000038
	Mem154[fp - 0x00000054:word32] = 0x10004018
	Mem155[fp - 0x00000030:word32] = 0xFFFFFFFF
	fn100290A5(0x00000000, 0x00000000, esi_124, 0xFFFFFFFF, es, ds, dwArg00, dwArg08)
	word32 edi_158 = Mem155[fp - 0x00000038:word32]
	branch edi_158 == 0x00000000 l100296C4
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -80(fp):0x100045BC -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100295FF:
	branch Mem155[edi_158:word16] == bx_100 l100296C4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -84(fp):0x10004018 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100296C4:
	word32 eax_212 = Mem155[fp - 0x00000008:word32]
	Mem215[fp - 0x00000048:word32] = 0x00000004
	Mem217[fp - 0x0000004C:word32] = fp - 0x00000010
	Mem219[fp - 0x00000050:word32] = 0x00000004
	Mem221[fp - 0x00000054:word32] = 0x00000000
	Mem223[fp - 0x00000058:word32] = 0x10003FDC
	Mem225[fp - 0x0000005C:word32] = eax_212
	Mem226[fp - 0x00000010:word32] = 0x00000001
	Mem227[fp - 0x00000014:word32] = eax_212
	RegSetValueExW(Mem227[fp - 0x0000005C:HKEY], Mem227[fp - 0x00000058:LPCWSTR], Mem227[fp - 0x00000054:DWORD], Mem227[fp - 0x00000050:DWORD], Mem227[fp - 0x0000004C:(ptr BYTE)], Mem227[fp - 0x00000048:DWORD])
	branch 0x00 == 0x00 l100296F3
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -84(fp):0x10004018 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100296EA:
	Mem236[fp - 0x00000048:word32] = Mem227[fp - 0x00000014:word32]
	RegCloseKey(Mem236[fp - 0x00000048:HKEY])
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029608:
	word32 ecx_241 = Mem155[fp - 0x00000008:word32]
	Mem246[fp - 0x00000048:word32] = edi_158
	Mem248[fp - 0x0000004C:word32] = 0x10004018
	fn10015DDD(ecx_241, 0x00000000, dwArg00, dwArg04)
	Mem252[fp - 0x00000048:word32] = 0x00001000
	word32 edx_242 = 0x00000000
	branch GetSystemMetrics(Mem252[fp - 0x00000048:int32]) != 0x00000000 l1002963C
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -84(fp):0x10004018 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029627:
	Mem339[fp - 0x00000048:word32] = edi_158
	Mem341[fp - 0x0000004C:word32] = 0x10004018
	fn10015DDD(0x80000002, 0x10003880, dwArg00, dwArg04)
	edx_242 = 0x10003880
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):0x10004018 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002963C:
	Mem261[fp - 0x00000020:word32] = 0x00000000
	Mem262[fp - 0x0000001C:word32] = 0x00000000
	Mem263[fp - 0x00000018:word32] = 0x00000000
	fn1000F2EE(fp - 0x00000020)
	Mem265[fp - 0x0000001C:word32] = Mem263[fp - 0x0000001C:word32] | 0xFFFFFFFF
	Mem269[fp - 0x00000018:word32] = Mem265[fp - 0x00000018:word32] | 0xFFFFFFFF
	Mem273[fp - 0x00000048:word32] = fp - 0x00000020
	Mem275[fp - 0x0000004C:word32] = fp - 0x00000020
	Mem277[fp - 0x00000050:word32] = fp - 0x00000020
	Mem279[fp - 0x00000054:word32] = 0x10003FFC
	fn100290A5(edx_242, 0x00000000, esi_124, edi_158, es, ds, dwArg00, dwArg08)
	word32 ebx_281 = Mem279[fp - 0x00000020:word32]
	branch ebx_281 == 0x00000000 l100296BA
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):0x10004018 -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002966C:
	branch Mem279[ebx_281:word16] == 0x0000 l100296BA
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029673:
	Mem300[fp - 0x00000048:word32] = 0x00001000
	branch GetSystemMetrics(Mem300[fp - 0x00000048:int32]) != 0x00000000 l10029697
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029682:
	Mem331[fp - 0x00000048:word32] = edi_158
	Mem333[fp - 0x0000004C:word32] = 0x100076D0
	fn10015DDD(0x80000002, 0x10003880, dwArg00, dwArg04)
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029697:
	Mem310[fp - 0x00000020:word32] = 0x00000000
	Mem311[fp - 0x00000018:word32] = 0x00000000
	Mem312[fp - 0x0000001C:word32] = 0x00000000
	branch esi_124 == 0x00000000 l100296AD
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):0x00000000 -28(fp):0xFFFFFFFF -24(fp):0xFFFFFFFF -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100296A6:
	Mem328[fp - 0x00000048:word32] = esi_124
	CoTaskMemFree(Mem328[fp - 0x00000048:LPVOID])
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100296AD:
	Mem318[fp - 0x00000024:word32] = Mem312[fp - 0x00000024:word32] | 0xFFFFFFFF
	Mem323[fp - 0x00000028:word32] = Mem318[fp - 0x00000028:word32] | 0xFFFFFFFF
	Mem326[fp - 0x0000002C:word32] = ebx_281
	esi_124 = ebx_281
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100296BA:
	fn1000F2EE(fp - 0x00000020)
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> bl:<invalid> -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l100296F3:
	word32 ecx_168 = Mem155[fp - 0x00000008:word32]
	Mem173[fp - 0x00000048:word32] = esi_124
	Mem175[fp - 0x0000004C:word32] = 0x10003FFC
	fn10015DDD(ecx_168, 0x00000000, dwArg00, dwArg04)
	Mem179[fp - 0x00000048:word32] = 0x100077DC
	Mem182[fp - 0x0000004C:word32] = Mem179[fp - 0x00000008:word32]
	RegDeleteValueW(Mem182[fp - 0x0000004C:HKEY], Mem182[fp - 0x00000048:LPCWSTR])
	branch Mem182[fp + 0x00000004:word32] == 0x00000000 l1002972B
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002972B:
	Mem205[fp - 0x00000048:word32] = 0x10003974
	Mem208[fp - 0x0000004C:word32] = Mem205[fp - 0x00000008:word32]
	RegDeleteValueW(Mem208[fp - 0x0000004C:HKEY], Mem208[fp - 0x00000048:LPCWSTR])
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp

l10029717:
	Mem195[fp - 0x00000048:word32] = Mem182[fp + 0x00000004:word32]
	word32 ecx_196 = Mem195[fp - 0x00000008:word32]
	Mem201[fp - 0x0000004C:word32] = 0x10003974
	fn10015DDD(ecx_196, 0x00000000, dwArg00, dwArg04)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp

l10029739:
	fn1000F2EE(fp - 0x00000038)
	edx_111 = 0x00000000
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp

l10029741:
	Mem120[fp - 0x00000048:word32] = Mem97[fp - 0x00000008:word32]
	RegCloseKey(Mem120[fp - 0x00000048:HKEY])
	fn1000F2EE(fp - 0x0000002C)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp

l1002954D:
	RegDeleteKeyValueW(0x80000002, 0x10003350, 0x100045BC)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:0x80000002 ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 edx:<invalid> ecx:<invalid> cl:<invalid> -80(fp):0x100045BC -76(fp):ecx -72(fp):fp - 0x0000000C -68(fp):edi -64(fp):esi -60(fp):ebx -12(fp):0x00000000 -4(fp):ebp

l10029752:
	return edx_111
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp

fn10029517_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bl:<invalid> -92(fp):<invalid> -88(fp):0x10003FDC -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -56(fp):0x00000000 -52(fp):0xFFFFFFFF -48(fp):0xFFFFFFFF -44(fp):0x00000000 -40(fp):0xFFFFFFFF -36(fp):0xFFFFFFFF -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):0x00000001 -12(fp):0x00000000 -4(fp):ebp



word32 fn1002975B(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn1002975B_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0084(32)

l1002975B:
	__align(fp - 0x00000004)
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000070
	Mem31[ecx:word32] = 0x00000000
	word32 edx_123
	word32 eax_35 = fn1000F3A7(fp - 0x0000006C, 0x00000000, 0x0000000F, out edx_123)
	word32 dwLoc70_131 = eax_35
	branch eax_35 < 0x00000000 l10029873
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32)

l100297A5:
	branch GetComputerNameW(0x00000000, fp - 0x00000060) == 0x00000000 l10029815
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> edx:<invalid> ax:<invalid> -128(fp):0x0000000F -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32)

l10029815:
	dwLoc70_131 = fn10015AC3()
	branch Mem31[0x10031000:word32] <=u 0x00000002 l10029873
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:0x00000000 edx:<invalid> ax:<invalid> -132(fp):0x00000000 -128(fp):fp - 0x00000060 -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32)

l10029827:
	fn1000C51D(fp - 0x0000003C, 0x10002FCC)
	fn1000C51D(fp - 0x0000002C, 0x10007804)
	word32 ecx_152
	word32 esi_154
	word32 edi_155
	fn1000C491(0x10031000, 0x1000B6D1, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000005C, out ecx_152, out edx_123, out esi_154, out edi_155)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:0x00000000 edx:<invalid> ax:<invalid> -132(fp):0x00000000 -128(fp):fp - 0x00000060 -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32)

l100297B9:
	Mem99[ecx:word32] = 0x00000000
	branch Mem99[0x10031000:word32] <=u 0x00000004 l10029873
// DataOut: cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:0x00000000 edx:<invalid> ax:<invalid> -132(fp):0x00000000 -128(fp):fp - 0x00000060 -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32)

l100297D4:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10007804)
	fn1000C58C(fp - 0x0000001C, Mem99[ecx:word32])
	word32 ecx_122
	word32 esi_124
	word32 edi_125
	fn1000C491(0x10031000, 0x1000B710, 0x00000000, 0x00000000, 0x00000005, fp - 0x0000005C, out ecx_122, out edx_123, out esi_124, out edi_125)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:ecx ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:0x00000000 edx:<invalid> ax:<invalid> -132(fp):0x00000000 -128(fp):fp - 0x00000060 -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32)

l10029873:
	fn1000F2EE(fp - 0x0000006C)
	word32 ecx_82
	return fn1002F420(dwLoc70_131, eax_11 ^ fp - 0x00000070, edx_123, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_82)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000007C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -28(fp):fp - 0x00000070 -24(fp):0x00000000 -20(fp):0x00000004 -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

fn1002975B_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:<invalid> esi:esi edx:<invalid> al:<invalid> ax:<invalid> -140(fp):0x00000000 -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):edi -120(fp):esi -116(fp):ebx -112(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x00000000 -96(fp):0x00000010 -28(fp):fp - 0x00000070 -24(fp):0x00000000 -20(fp):0x00000004 -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp



word32 fn10029894(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10029894_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0064(32) Local -0068(32)

l10029894:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem40[ecx:word32] = 0x00000000
	word32 esp_44
	word32 edi_45
	word32 ebp_46
	byte SCZO_47
	word32 eax_48
	byte SZO_49
	byte C_50
	word32 ebx_51
	word32 esi_52
	word32 ecx_53
	word16 ax_54
	byte S_55
	byte CZ_56
	word32 edx_57
	selector es_58
	selector ds_59
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaOpenPolicy (retsize: 4; depth: 160)
		uses: ax_29,C_27,dwLoc04_6,dwLoc08_12,dwLoc6C_43,dwLoc70_42,dwLoc74_39,dwLoc78_41,dwLoc7C_34,dwLoc80_22,dwLoc84_15,dwLoc88_18,dwLoc8C_20,dwLoc90_24,dwLoc94_31,dwLoc98_36,dwLoc9C_38,eax_28,ebp_7,ebx_33,ecx,edi_3,esi_25,esp_37,SZO_26
		defs: ax_54,C_50,CZ_56,ds_59,eax_48,ebp_46,ebx_51,ecx_53,edi_45,edx_57,es_58,esi_52,esp_44,S_55,SCZO_47,SZO_49
	word32 edi_63
	byte SCZO_65
	byte SZO_67
	byte C_68
	word32 ebx_69
	word32 ecx_71
	word16 ax_72
	byte S_73
	byte CZ_74
	selector ds_239
	selector es_238
	word32 esi_232
	word32 ebp_100
	word32 esp_101
	word32 edx_112
	word32 eax_113
	call ntdll.dll!RtlNtStatusToDosError (retsize: 4; depth: 164)
		uses: ax_54,C_50,CZ_56,ds_59,dwLoc04_6,dwLoc08_12,dwLoc6C_43,dwLoc70_42,dwLoc74_39,dwLoc78_41,dwLoc7C_34,dwLoc80_22,dwLoc84_15,dwLoc88_18,dwLoc8C_20,dwLoc90_24,dwLoc94_31,dwLoc98_36,dwLoc9C_38,dwLocA0_61,eax_48,ebp_46,ebx_51,ecx_53,edi_45,edx_57,es_58,esi_52,esp_60,S_55,SCZO_47,SZO_49
		defs: ax_72,C_68,CZ_74,ds_77,eax_66,ebp_64,ebx_69,ecx_71,edi_63,edx_75,es_76,esi_70,esp_62,S_73,SCZO_65,SZO_67
	branch (fp - 0x00000080 & fp - 0x00000080) <= 0x00000000 l100298EB
// DataOut: ax cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32) Local -0068(32)

l100298E6:
	eax_113 = (word32) ax_72 | 0x80070000
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80070000 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32) Local -0068(32)

l100298EB:
	word32 dwLoc60_215 = eax_113
	branch eax_113 < 0x00000000 l100299C5
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80070000 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l100298F6:
	Mem170[esp_101 - 0x00000004:word32] = fp - 0x00000064
	Mem172[esp_101 - 0x00000008:word32] = 0x00000003
	Mem176[esp_101 - 0x0000000C:word32] = dwLoc68
	word32 esp_177
	word32 edi_178
	word32 ebp_179
	byte SCZO_180
	word32 eax_181
	byte SZO_182
	byte C_183
	word32 ebx_184
	word32 esi_185
	word32 ecx_186
	word16 ax_187
	byte S_188
	byte CZ_189
	word32 edx_190
	selector es_191
	selector ds_192
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaQueryInformationPolicy (retsize: 4; depth: 4)
		uses: ax_168,C_86,CZ_74,ds_77,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc60_83,dwLoc68,dwLoc6C_43,dwLoc70_42,dwLoc74_39,dwLoc78_41,dwLoc7C_34,dwLoc80_22,dwLoc84_15,dwLoc88_18,dwLoc8C_20,dwLoc90_24,dwLoc94_31,dwLoc98_36,dwLoc9C_38,dwLocA0_61,eax_167,ebp_64,ebx_69,ecx_71,edi_78,edx_75,es_76,esi_70,esp_175,S_85,SCZO_65,SZO_84
		defs: ax_187,C_183,CZ_189,ds_192,eax_181,ebp_179,ebx_184,ecx_186,edi_178,edx_190,es_191,esi_185,esp_177,S_188,SCZO_180,SZO_182
	Mem194[esp_177 - 0x00000004:word32] = fp - 0x00000064
	word32 edi_196
	word32 ebp_197
	byte SCZO_198
	byte SZO_200
	byte C_201
	word32 ebx_202
	word32 esi_203
	word32 ecx_204
	word16 ax_205
	byte S_206
	byte CZ_207
	word32 edx_208
	selector es_209
	selector ds_210
	word32 eax_199
	word32 esp_195
	call ntdll.dll!RtlNtStatusToDosError (retsize: 4; depth: 4)
		uses: ax_187,C_183,CZ_189,ds_192,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc60_83,dwLoc68,dwLoc6C_43,dwLoc70_42,dwLoc74_39,dwLoc78_41,dwLoc7C_34,dwLoc80_22,dwLoc84_15,dwLoc88_18,dwLoc8C_20,dwLoc90_24,dwLoc94_31,dwLoc98_36,dwLoc9C_38,dwLocA0_61,eax_181,ebp_179,ebx_184,ecx_186,edi_178,edx_190,es_191,esi_185,esp_193,S_188,SCZO_180,SZO_182
		defs: ax_205,C_201,CZ_207,ds_210,eax_199,ebp_197,ebx_202,ecx_204,edi_196,edx_208,es_209,esi_203,esp_195,S_206,SCZO_198,SZO_200
	branch (fp - 0x00000064 & fp - 0x00000064) <= 0x00000000 l10029915
// DataOut: ax cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80070000 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32) Local -0068(32)

l10029910:
	eax_199 = (word32) ax_205 | 0x80070000
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80070000 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0064(32) Local -0068(32)

l10029915:
	dwLoc60_215 = eax_199
	branch eax_199 < 0x00000000 l100299B9
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80070000 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l10029920:
	word32 edi_244 = (word32) Mem194[dwLoc64:word16]
	Mem247[esp_195 - 0x00000004:word32] = edi_244 + 0x00000002
	word32 eax_248 = CoTaskMemAlloc(Mem247[esp_195 - 0x00000004:SIZE_T])
	word32 eax_255 = (0x00000000 - (-eax_248 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	word32 esi_250 = eax_248
	dwLoc60_215 = eax_255
	branch eax_255 < 0x00000000 l100299AE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x80070000 ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l10029945:
	word32 esi_303
	Mem287[esp_195 - 0x00000004:word32] = (word32) Mem247[dwLoc64:word16]
	Mem290[esp_195 - 0x00000008:word32] = Mem287[dwLoc64 + 0x00000004:word32]
	word32 edx_292
	word32 eax_293 = fn1002A60B(eax_248, edi_244 + 0x00000002, dwArg00, dwArg04, out edx_292)
	dwLoc60_215 = eax_293
	esi_303 = esi_250
	branch eax_293 < 0x00000000 l100299A7
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l1002995F:
	Mem310[ebx_202:word32] = eax_248
	esi_303 = 0x00000000
	branch Mem310[0x10031000:word32] <=u 0x00000004 l100299A7
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l1002996C:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10007818)
	fn1000C58C(fp - 0x0000001C, Mem310[ebx_202:word32])
	Mem323[esp_195 - 0x00000004:word32] = fp - 0x0000005C
	Mem325[esp_195 - 0x00000008:word32] = 0x00000005
	Mem327[esp_195 - 0x0000000C:word32] = 0x00000000
	Mem329[esp_195 - 0x00000010:word32] = 0x00000000
	word32 ecx_331
	word32 edx_332
	word32 edi_334
	fn1000C491(0x10031000, 0x1000B68D, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_331, out edx_332, out esi_303, out edi_334)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l100299A7:
	Mem308[esp_195 - 0x00000004:word32] = esi_303
	CoTaskMemFree(Mem308[esp_195 - 0x00000004:LPVOID])
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0064(32) Local -0068(32)

l100299AE:
	Mem263[esp_195 - 0x00000004:word32] = dwLoc64
	word32 edi_265
	word32 ebp_266
	byte SCZO_267
	word32 eax_268
	byte SZO_269
	byte C_270
	word32 ebx_271
	word32 esi_272
	word32 ecx_273
	word16 ax_274
	byte S_275
	byte CZ_276
	word32 edx_277
	selector es_278
	selector ds_279
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaFreeMemory (retsize: 4; depth: 4)
		uses: ax_214,C_252,CZ_207,ds_210,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc60_259,dwLoc64,dwLoc68,dwLoc6C_43,dwLoc70_42,dwLoc74_39,dwLoc78_41,dwLoc7C_34,dwLoc80_22,dwLoc84_15,dwLoc88_18,dwLoc8C_20,dwLoc90_24,dwLoc94_31,dwLoc98_36,dwLoc9C_38,dwLocA0_61,eax_255,ebp_197,ebx_202,ecx_204,edi_245,edx_208,es_209,esi_250,esp_262,S_257,SCZO_256,SZO_216
		defs: ax_274,C_270,CZ_276,ds_279,eax_268,ebp_266,ebx_271,ecx_273,edi_265,edx_277,es_278,esi_272,esp_264,S_275,SCZO_267,SZO_269
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32) Local -0068(32)

l100299B9:
	word32 esp_222 = esp_195 - 0x00000004
	Mem223[esp_222:word32] = dwLoc68
	word32 edi_225
	byte SCZO_227
	word32 eax_228
	byte SZO_229
	byte C_230
	word32 ebx_231
	word32 ecx_233
	word16 ax_234
	byte S_235
	byte CZ_236
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaClose (retsize: 4; depth: 4)
		uses: ax_214,C_218,CZ_207,ds_210,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc60_219,dwLoc68,dwLoc6C_43,dwLoc70_42,dwLoc74_39,dwLoc78_41,dwLoc7C_34,dwLoc80_22,dwLoc84_15,dwLoc88_18,dwLoc8C_20,dwLoc90_24,dwLoc94_31,dwLoc98_36,dwLoc9C_38,dwLocA0_61,eax_213,ebp_197,ebx_202,ecx_204,edi_196,edx_208,es_209,esi_203,esp_222,S_217,SCZO_198,SZO_216
		defs: ax_234,C_230,CZ_236,ds_239,eax_228,ebp_226,ebx_231,ecx_233,edi_225,edx_237,es_238,esi_232,esp_224,S_235,SCZO_227,SZO_229
	eax_113 = dwLoc60_215
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32)

l100299C5:
	branch Mem40[0x10031000:word32] <=u 0x00000004 l10029A15
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0060(32)

l100299CE:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003D54)
	word32 esp_146 = esp_101 - 0x00000004
	Mem147[esp_146:word32] = fp - 0x0000005C
	Mem149[esp_146 - 0x00000004:word32] = 0x00000005
	Mem151[esp_146 - 0x00000008:word32] = esi_232
	Mem153[esp_146 - 0x0000000C:word32] = esi_232
	word32 ecx_159
	word32 esi_161
	word32 edi_162
	fn1000C491(0x10031000, 0x1000B648, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_159, out edx_112, out esi_161, out edi_162)
	eax_113 = dwLoc60_215
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l10029A15:
	word32 esp_117 = esp_101 + 0x00000004
	word32 edi_116 = Mem40[esp_101:word32]
	*ediOut = edi_116
	word32 esi_118 = Mem40[esp_117:word32]
	*esiOut = esi_118
	word32 ebx_123 = Mem40[esp_117 + 0x00000004:word32]
	*ebxOut = ebx_123
	word32 ecx_125
	return fn1002F420(eax_113, eax_11 ^ fp - 0x00000004, edx_112, ebx_123, ebp_100, esi_118, edi_116, es_238, ds_239, out ecx_125)
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10029894_exit:
// DataOut: eax ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> -156(fp):0x00000000 -152(fp):fp - 0x00000080 -148(fp):0x00000001 -144(fp):fp - 0x00000068 -140(fp):edi -136(fp):esi -132(fp):ebx -128(fp):0x00000018 -124(fp):0x00000000 -120(fp):0x00000000 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn10029A26(word32 ecx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
fn10029A26_entry:
// DataOut: cs ds ebp ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32)

l10029A26:
	branch GetSystemMetrics(0x00001000) != 0x00000000 l10029A56
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -001C(32)

l10029A45:
	fn10015DDD(0x80000002, 0x10003880, 0x10004018, ecx)
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10004018 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -24(fp):0x00001000 -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -001C(32)

l10029A56:
	word32 edx_116
	word32 ecx_115
	word32 ecx_44
	word32 edx_45
	word16 si_46
	word32 eax_47 = fn10010D2A(0x0002001F, es, ds, fp - 0x00000008, out ecx_44, out edx_45, out si_46)
	Mem50[fp - 0x0000000C:word32] = Mem0[fp - 0x0000000C:word32] & 0x00000000
	branch eax_47 < 0x00000000 l10029AA2
// DataOut: ebp ecx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:0x10004018 ebp:fp - 0x00000004 esi:ecx eax:<invalid> edx:0x10003880 ecx:0x80000002 ax:<invalid> -28(fp):0x10004018 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029A7D:
	Mem99[fp - 0x00000018:word32] = fp - 0x0000000C
	Mem101[fp - 0x0000001C:word32] = ecx_44
	word32 ecx_102 = Mem101[fp - 0x00000008:word32]
	Mem104[fp - 0x00000020:word32] = 0x10003FDC
	word32 ecx_106
	word32 edx_107
	branch fn1000CAD8(ecx_102, 0x00000000, dwArg00, dwArg08, out ecx_106, out edx_107) < 0x00000000 l10029AA2
// DataOut: ebp edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> ebx:<invalid> -28(fp):0x10004018 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029A95:
	branch Mem104[fp - 0x0000000C:word32] == 0x00000000 l10029AA2
// DataOut: ebp edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> ax:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029AA2:
	edx_116 = 0x10003350
	ecx_115 = 0x80000002
// DataOut: ebp ecx edi edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> ax:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029A9B:
	ecx_115 = Mem104[fp - 0x00000008:word32]
	edx_116 = 0x00000000
// DataOut: ebp ecx edi edx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> ax:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029AAC:
	Mem63[fp - 0x00000018:word32] = ecx
	Mem65[fp - 0x0000001C:word32] = 0x10004018
	fn10015DDD(ecx_115, edx_116, dwArg00, dwArg04)
	branch Mem65[fp - 0x00000008:word32] == 0x00000000 l10029AC4
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> cl:<invalid> ax:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp

l10029ABB:
	Mem82[fp - 0x00000010:word32] = Mem65[fp - 0x00000008:word32]
	RegCloseKey(Mem82[fp - 0x00000010:HKEY])
// DataOut: ebp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp

l10029AC4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):<invalid> -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp

fn10029A26_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> cl:<invalid> ebx:<invalid> -32(fp):0x10003FDC -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):<invalid> -12(fp):<invalid> -8(fp):ecx & 0x00000000 -4(fp):ebp



byte fn10029AC8(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: esp
fn10029AC8_entry:
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10029AC8:
	return wcschr(ecx, L'@') != 0x00000000
// DataOut: al cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn10029AC8_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:0x00000040 al:Test(NE,Z) -8(fp):ecx -4(fp):0x00000040



void fn10029AD9(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: ebp ebx edi esi esp
fn10029AD9_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10029AD9:
	Mem26[edx:word32] = 0x00000000
	branch fn1001DE5B(fp - 0x00000010, ecx, 0x10003FFC) < 0x00000000 l10029B31
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10029B06:
	branch fn10029AC8(0x00000000) == 0x00 l10029B30
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):ecx -28(fp):0x10003FFC -24(fp):edi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029B23:
	Mem84[edx:word32] = 0x00000000
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000040 ebx:<invalid> esi:0x00000000 al:<invalid> bl:<invalid> -32(fp):ecx -28(fp):esi -24(fp):edi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029B30:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:edx ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000040 ebx:<invalid> esi:0x00000000 al:<invalid> bl:<invalid> -32(fp):ecx -28(fp):esi -24(fp):edi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l10029B31:
	fn1000F2EE(fp - 0x00000010)
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:esi al:<invalid> bl:<invalid> -32(fp):ecx -28(fp):<invalid> -24(fp):edi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn10029AD9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:fp - 0x00000010 ebx:ebx esi:esi al:<invalid> bl:<invalid> -32(fp):ecx -28(fp):<invalid> -24(fp):edi -20(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn10029B41(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn10029B41_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10029B41:
	branch edx == 0x00000000 l10029B56
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10029B54:
	Mem193[edx:word32] = 0x00000000
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 esi:edx edx:0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l10029B56:
	branch dwArg04 == 0x00000000 l10029B5F
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 esi:edx edx:0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10029B5D:
	Mem192[dwArg04:word32] = 0x00000000
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 esi:edx edx:0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0008(32) Stack +000C(32)

l10029B5F:
	branch dwArg08 == 0x00000000 l10029B68
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 esi:edx edx:0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)

l10029B66:
	Mem191[dwArg08:word32] = 0x00000000
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 esi:edx edx:0x00000000 ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +000C(32)

l10029B68:
	branch dwArg0C == 0x00000000 l10029B71
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 esi:edx edx:0x00000000 ebx:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10029B6F:
	Mem190[dwArg0C:word32] = 0x00000000
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 esi:edx edx:0x00000000 ebx:<invalid> eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l10029B71:
	word32 ecx_45
	word32 edx_46
	word16 si_47
	word32 eax_181 = fn10010D2A(0x00020019, es, ds, fp - 0x00000008, out ecx_45, out edx_46, out si_47)
	Mem50[fp - 0x0000000C:word32] = eax_181
	branch eax_181 < 0x00000000 l10029C60
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 esi:edx edx:0x00000000 ebx:<invalid> eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029B8A:
	branch edx == 0x00000000 l10029BCB
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029B8E:
	Mem165[fp - 0x00000028:word32] = 0x10003954
	Mem168[fp - 0x0000002C:word32] = Mem165[fp - 0x00000008:word32]
	Mem169[fp - 0x00000018:word32] = 0x00000000
	Mem170[fp - 0x00000014:word32] = 0x00000000
	Mem171[fp - 0x00000010:word32] = 0x00000000
	word32 eax_172 = fn1001DE5B(fp - 0x00000018, dwArg00, dwArg04)
	Mem174[fp - 0x0000000C:word32] = eax_172
	branch eax_172 < 0x00000000 l10029BC0
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BB0:
	word32 eax_182 = Mem174[fp - 0x00000018:word32]
	Mem186[fp - 0x00000018:word32] = 0x00000000
	Mem187[fp - 0x00000010:word32] = 0x00000000
	Mem188[fp - 0x00000014:word32] = 0x00000000
	Mem189[edx:word32] = eax_182
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BC0:
	fn1000F2EE(fp - 0x00000018)
	eax_181 = Mem174[fp - 0x0000000C:word32]
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BCB:
	branch eax_181 < 0x00000000 l10029C54
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BD3:
	branch dwArg04 == 0x00000000 l10029BE1
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BD7:
	fn10029AD9(Mem50[fp - 0x00000008:word32], dwArg04)
	word32 edx_159
	*edxOut = dwArg04
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BE1:
	branch dwArg08 == 0x00000000 l10029C1A
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029BE7:
	Mem138[fp - 0x00000028:word32] = 0x100077DC
	Mem141[fp - 0x0000002C:word32] = Mem138[fp - 0x00000008:word32]
	Mem143[fp - 0x00000018:word32] = 0x00000000
	Mem144[fp - 0x00000014:word32] = 0x00000000
	Mem145[fp - 0x00000010:word32] = 0x00000000
	branch fn1001DE5B(fp - 0x00000018, dwArg00, dwArg04) < 0x00000000 l10029C12
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029C04:
	word32 eax_153 = Mem145[fp - 0x00000018:word32]
	Mem154[fp - 0x00000018:word32] = 0x00000000
	Mem155[fp - 0x00000010:word32] = 0x00000000
	Mem156[fp - 0x00000014:word32] = 0x00000000
	Mem157[dwArg08:word32] = eax_153
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029C12:
	fn1000F2EE(fp - 0x00000018)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029C1A:
	word32 esi_110 = Mem50[fp + 0x0000000C:word32]
	branch esi_110 == 0x00000000 l10029C54
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l10029C21:
	Mem116[fp - 0x00000028:word32] = 0x10003974
	Mem119[fp - 0x0000002C:word32] = Mem116[fp - 0x00000008:word32]
	Mem121[fp - 0x00000018:word32] = 0x00000000
	Mem122[fp - 0x00000014:word32] = 0x00000000
	Mem123[fp - 0x00000010:word32] = 0x00000000
	branch fn1001DE5B(fp - 0x00000018, dwArg00, dwArg04) < 0x00000000 l10029C4C
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10029C3E:
	word32 eax_132 = Mem123[fp - 0x00000018:word32]
	Mem133[fp - 0x00000018:word32] = 0x00000000
	Mem134[fp - 0x00000010:word32] = 0x00000000
	Mem135[fp - 0x00000014:word32] = 0x00000000
	Mem136[esi_110:word32] = eax_132
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10029C4C:
	fn1000F2EE(fp - 0x00000018)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10029C54:
	Mem93[fp - 0x00000028:word32] = Mem50[fp - 0x00000008:word32]
	RegCloseKey(Mem93[fp - 0x00000028:HKEY])
	eax_181 = Mem93[fp - 0x0000000C:word32]
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l10029C60:
	return eax_181
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn10029B41_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> esi:<invalid> edx:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> bl:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn10029C69(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10029C69_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10029C69:
	Mem31[dwArg04:word32] = 0x00000000
	word32 edx_35
	word32 eax_36 = fn1002A5D7(edx, fp - 0x00000008, ebx, es, ds, out edx_35)
	branch eax_36 < 0x00000000 l10029CA9
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +0004(32)

l10029CA9:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 edx:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029C92:
	memcpy(0x00000000, ecx, edx)
	Mem69[dwArg04:word32] = 0x00000000
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 edx:<invalid> ecx:<invalid> ebx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029CAC:
	CoTaskMemFree(0x00000000)
	return eax_36
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 edx:<invalid> ecx:<invalid> ebx:<invalid> -36(fp):0x00000000 -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp

fn10029C69_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi edx:<invalid> ecx:<invalid> ebx:ebx -36(fp):0x00000000 -32(fp):<invalid> -28(fp):0x00000000 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp



word32 fn10029CBE(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn10029CBE_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Local -0034(32) Local -0038(32)

l10029CBE:
	word32 edi_148
	Mem26[ecx:word32] = 0x00000000
	Mem27[edx:word32] = 0x00000000
	word32 esp_164 = fp - 0x0000004C
	byte al_28 = fn100300B4()
	branch al_28 != 0x00 l10029EB5
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0014(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029EB5:
	word32 edi_460
	word32 ebp_461
	byte SCZO_462
	word32 ebx_463
	word32 esi_464
	word32 ecx_465
	word32 edx_466
	byte SZO_467
	byte C_468
	byte al_469
	byte Z_470
	word32 eax_471
	byte S_472
	selector es_473
	selector ds_474
	call ext-ms-win-session-wtsapi32-l1-1-0.dll!WTSQuerySessionInformationW (retsize: 4; depth: 100)
		uses: al_28,C_31,ds,dwLoc04_6,dwLoc08,dwLoc0C_446,dwLoc10,dwLoc14,dwLoc18_450,dwLoc20_25,dwLoc24_24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc44_11,dwLoc48_14,dwLoc4C_20,dwLoc50_448,dwLoc54_452,dwLoc58_454,dwLoc5C_456,dwLoc60_458,eax_449,ebp_7,ebx_18,ecx,edi_21,edx,es,esi_16,esp_457,S,SCZO,SZO_29,Z_30
		defs: al_469,C_468,ds_474,eax_471,ebp_461,ebx_463,ecx_465,edi_460,edx_466,es_473,esi_464,esp_459,S_472,SCZO_462,SZO_467,Z_470
	branch (fp - 0x0000000C & fp - 0x0000000C) == 0x00000000 l10029FB6
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000004C edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0014(32) Local -0024(32)

l10029FB6:
	edi_148 = fn10015AC3()
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029ED6:
	Mem480[esp_164 - 0x00000004:word32] = fp - 0x00000024
	Mem483[esp_164 - 0x00000008:word32] = fp - 0x00000014
	Mem485[esp_164 - 0x0000000C:word32] = 0x00000005
	Mem487[esp_164 - 0x00000010:word32] = 0xFFFFFFFF
	Mem489[esp_164 - 0x00000014:word32] = 0x00000000
	word32 edi_491
	word32 ebp_492
	byte SCZO_493
	word32 ebx_494
	word32 esi_495
	word32 ecx_496
	word32 edx_497
	byte SZO_498
	byte C_499
	byte al_500
	byte Z_501
	word32 eax_502
	byte S_503
	selector es_504
	selector ds_505
	word32 esp_490
	call ext-ms-win-session-wtsapi32-l1-1-0.dll!WTSQuerySessionInformationW (retsize: 4; depth: 4)
		uses: al_469,C_477,ds_474,dwLoc04_6,dwLoc08,dwLoc0C_446,dwLoc10,dwLoc14,dwLoc18_450,dwLoc20_25,dwLoc24_24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc44_11,dwLoc48_14,dwLoc4C_20,dwLoc50_448,dwLoc54_452,dwLoc58_454,dwLoc5C_456,dwLoc60_458,eax_481,ebp_461,ebx_463,ecx_465,edi_460,edx_466,es_473,esi_464,esp_488,S_472,SCZO_462,SZO_475,Z_476
		defs: al_500,C_499,ds_505,eax_502,ebp_492,ebx_494,ecx_496,edi_491,edx_497,es_504,esi_495,esp_490,S_503,SCZO_493,SZO_498,Z_501
	branch (fp - 0x00000014 & fp - 0x00000014) == 0x00000000 l10029FA4
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0014(32) Local -0024(32)

l10029FA4:
	fn10015AC3()
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029EF1:
	fn1000F2EE(fp - 0x0000003C)
	Mem550[esp_490 - 0x00000004:word32] = fp - 0x0000003C
	word32 edx_551
	word32 eax_552 = fn10029C69(dwLoc14, edx, ebx_494, es_504, ds_505, dwArg00, out edx_551)
	branch eax_552 < 0x00000000 l10029F91
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0014(32)

l10029F1F:
	word32 eax_596
	branch false l10029F49
// DataOut: cs ds ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):0xFFFFFFFF -52(fp):0xFFFFFFFF -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0014(32) Local -0028(32) Local -002C(32) Local -0030(32)

l10029F49:
	fn1000F2EE(fp - 0x00000030)
	Mem648[esp_490 - 0x00000004:word32] = fp - 0x00000030
	word32 edx_649
	eax_596 = fn10029C69(0x00000000, 0x00000000, ebx_494, es_504, ds_505, dwArg00, out edx_649)
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:fp - 0x00000030 edx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):0xFFFFFFFF -52(fp):0xFFFFFFFF -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -0030(32)

l10029F32:
	fn1000F2EE(fp - 0x00000030)
	word32 edx_634
	eax_596 = fn1002975B(fp - 0x00000030, ebx_494, esi_495, eax_552, es_504, ds_505, out edx_634)
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:fp - 0x00000030 edx:<invalid> al:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):0xFFFFFFFF -52(fp):0xFFFFFFFF -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -0030(32)

l10029F65:
	branch eax_596 < 0x00000000 l10029F89
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):0xFFFFFFFF -52(fp):0xFFFFFFFF -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -0030(32)

l10029F6B:
	Mem617[esi_495:word32] = 0x00000000
	Mem625[ebx_494:word32] = 0x00000000
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):0xFFFFFFFF -52(fp):0xFFFFFFFF -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32)

l10029F89:
	fn1000F2EE(fp - 0x00000030)
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32)

l10029F91:
	Mem567[esp_490 - 0x00000004:word32] = dwLoc14
	word32 edi_569
	word32 ebp_570
	byte SCZO_571
	word32 ebx_572
	word32 esi_573
	word32 ecx_574
	word32 edx_575
	byte SZO_576
	byte C_577
	byte al_578
	byte Z_579
	word32 eax_580
	byte S_581
	selector es_582
	selector ds_583
	call ext-ms-win-session-wtsapi32-l1-1-0.dll!WTSFreeMemory (retsize: 4; depth: 4)
		uses: al_500,C_557,ds_505,dwLoc04_6,dwLoc08,dwLoc0C_446,dwLoc10,dwLoc14,dwLoc18_450,dwLoc20_25,dwLoc24_24,dwLoc28_562,dwLoc2C_563,dwLoc30_561,dwLoc34_559,dwLoc38_560,dwLoc3C_558,dwLoc44_11,dwLoc48_14,dwLoc4C_20,dwLoc50_448,dwLoc54_452,dwLoc58_454,dwLoc5C_456,dwLoc60_458,eax_552,ebp_492,ebx_494,ecx_541,edi_554,edx_551,es_504,esi_495,esp_566,S_556,SCZO_493,SZO_555,Z_507
		defs: al_578,C_577,ds_583,eax_580,ebp_570,ebx_572,ecx_574,edi_569,edx_575,es_582,esi_573,esp_568,S_581,SCZO_571,SZO_576,Z_579
	fn1000F2EE(fp - 0x0000003C)
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029FAB:
	word32 esp_517 = esp_490 - 0x00000004
	Mem518[esp_517:word32] = 0x00000000
	word32 ebp_521
	byte SCZO_522
	word32 ebx_523
	word32 esi_524
	word32 ecx_525
	word32 edx_526
	byte SZO_527
	byte C_528
	byte al_529
	byte Z_530
	word32 eax_531
	byte S_532
	selector es_533
	selector ds_534
	call ext-ms-win-session-wtsapi32-l1-1-0.dll!WTSFreeMemory (retsize: 4; depth: 4)
		uses: al_500,C_508,ds_505,dwLoc04_6,dwLoc08,dwLoc0C_446,dwLoc10,dwLoc14,dwLoc18_450,dwLoc20_25,dwLoc24_24,dwLoc28_513,dwLoc2C_514,dwLoc30_512,dwLoc34_510,dwLoc38_511,dwLoc3C_509,dwLoc44_11,dwLoc48_14,dwLoc4C_20,dwLoc50_448,dwLoc54_452,dwLoc58_454,dwLoc5C_456,dwLoc60_458,eax_502,ebp_492,ebx_494,ecx_496,edi_491,edx_497,es_504,esi_495,esp_517,S_503,SCZO_493,SZO_506,Z_507
		defs: al_529,C_528,ds_534,eax_531,ebp_521,ebx_523,ecx_525,edi_520,edx_526,es_533,esi_524,esp_519,S_532,SCZO_522,SZO_527,Z_530
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:ecx ebx:edx eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):fp - 0x00000018 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029CE6:
	branch fn10030048() == 0x00 l10029EAB
// DataOut: cs ds edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000004C edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029CF3:
	byte al_100 = fn10030048()
	branch al_100 == 0x00 l10029EAB
// DataOut: cs ds edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000004C edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029EAB:
	edi_148 = 0x80070032
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000004C edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10029D00:
	word32 edi_114
	word32 ebp_115
	byte SCZO_116
	word32 ecx_119
	byte SZO_121
	byte C_122
	byte al_123
	byte Z_124
	word32 eax_125
	byte S_126
	selector ds_128
	selector es_127
	word32 edx_120
	word32 esi_118
	word32 ebx_117
	word32 esp_113
	call ext-ms-win-session-usertoken-l1-1-0.dll!QueryActiveSession (retsize: 4; depth: 84)
		uses: al_100,C_106,ds,dwLoc04_6,dwLoc08_112,dwLoc0C,dwLoc10,dwLoc14_110,dwLoc18,dwLoc20_25,dwLoc24_24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc44_11,dwLoc48_14,dwLoc4C_20,dwLoc50_109,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,eax_107,ebp_7,ebx_104,ecx,edi_21,edx,es,esi_111,esp_108,S,SCZO,SZO_105,Z_102
		defs: al_123,C_122,ds_128,eax_125,ebp_115,ebx_117,ecx_119,edi_114,edx_120,es_127,esi_118,esp_113,S_126,SCZO_116,SZO_121,Z_124
	branch (fp - 0x00000014 & fp - 0x00000014) == 0x00000000 l10029D29
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000004C edi:0x00000000 ebp:fp - 0x00000004 esi:ecx ebx:edx ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D18:
	Mem422[esp_113 - 0x00000004:word32] = fp - 0x00000008
	Mem425[esp_113 - 0x00000008:word32] = 0x00000000
	word32 edi_427
	word32 ebp_428
	byte SCZO_429
	word32 ecx_432
	byte SZO_434
	byte C_435
	byte al_436
	byte Z_437
	word32 eax_438
	byte S_439
	call ext-ms-win-session-usertoken-l1-1-0.dll!QueryUserToken (retsize: 4; depth: 4)
		uses: al_123,C_131,ds_128,dwLoc04_6,dwLoc08_112,dwLoc0C,dwLoc10,dwLoc14_110,dwLoc18,dwLoc20_25,dwLoc24_24,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc38,dwLoc3C,dwLoc44_11,dwLoc48_14,dwLoc4C_20,dwLoc50_109,dwLoc54,dwLoc58,dwLoc5C,dwLoc60,eax_420,ebp_115,ebx_117,ecx_119,edi_114,edx_120,es_127,esi_118,esp_424,S_126,SCZO_116,SZO_129,Z_130
		defs: al_436,C_435,ds_441,eax_438,ebp_428,ebx_430,ecx_432,edi_427,edx_433,es_440,esi_431,esp_426,S_439,SCZO_429,SZO_434,Z_437
	branch (fp - 0x00000008 & fp - 0x00000008) != 0x00000000 l10029D38
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D29:
	word32 eax_415 = fn10015AC3()
	edi_148 = eax_415
	branch eax_415 < 0x00000000 l10029E64
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D38:
	word32 esp_185 = esp_113 - 0x00000004
	Mem186[esp_185:word32] = fp - 0x0000000C
	Mem188[esp_185 - 0x00000004:word32] = 0x00000000
	Mem190[esp_185 - 0x00000008:word32] = 0x00000000
	Mem192[esp_185 - 0x0000000C:word32] = 0x00000001
	Mem195[esp_185 - 0x00000010:word32] = 0x00000000
	branch GetTokenInformation(Mem195[esp_185 - 0x00000010:HANDLE], Mem195[esp_185 - 0x0000000C:TOKEN_INFORMATION_CLASS], Mem195[esp_185 - 0x00000008:LPVOID], Mem195[esp_185 - 0x00000004:DWORD], Mem195[esp_185:PDWORD]) != 0x00000000 l10029D59
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D59:
	edi_148 = 0x8000FFFF
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D50:
	edi_148 = fn10015AC3()
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D5E:
	branch edi_148 != 0x8007007A l10029DA7
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029D66:
	Mem358[esp_185:word32] = 0x00000000
	word32 eax_359 = CoTaskMemAlloc(Mem358[esp_185:SIZE_T])
	esp_113 = esp_185 + 0x00000004
	esi_118 = eax_359
	branch eax_359 == 0x00000000 l10029DD8
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:0x00000000 ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DD8:
	edi_148 = 0x8007000E
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029D75:
	word32 ecx_366
	word32 edx_367
	word32 edi_369
	Mem372[esp_185:word32] = fn1000CE15(eax_359, edx_120, ebx_117, es_127, ds_128, out ecx_366, out edx_367, out esi_118, out edi_369)
	Mem374[esp_185 - 0x00000004:word32] = 0x00000000
	Mem376[esp_185 - 0x00000008:word32] = esi_118
	memset(Mem376[esp_185 - 0x00000008:(ptr void)], Mem376[esp_185 - 0x00000004:int32], Mem376[esp_185:size_t])
	Mem382[esp_185:word32] = fp - 0x0000000C
	Mem385[esp_185 - 0x00000004:word32] = 0x00000000
	Mem387[esp_185 - 0x00000008:word32] = esi_118
	Mem389[esp_185 - 0x0000000C:word32] = 0x00000001
	Mem392[esp_185 - 0x00000010:word32] = 0x00000000
	edi_148 = 0x00000000
	branch GetTokenInformation(Mem392[esp_185 - 0x00000010:HANDLE], Mem392[esp_185 - 0x0000000C:TOKEN_INFORMATION_CLASS], Mem392[esp_185 - 0x00000008:LPVOID], Mem392[esp_185 - 0x00000004:DWORD], Mem392[esp_185:PDWORD]) != 0x00000000 l10029DA7
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DA0:
	edi_148 = fn10015AC3()
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x00000000 ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DA7:
	branch edi_148 < 0x00000000 l10029E64
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DAF:
	word32 esp_217 = esp_113 - 0x00000004
	Mem218[esp_217:word32] = fp - 0x0000001C
	Mem222[esp_217 - 0x00000004:word32] = fp - 0x0000000C
	Mem224[esp_217 - 0x00000008:word32] = 0x00000000
	Mem227[esp_217 - 0x0000000C:word32] = fp - 0x00000010
	Mem229[esp_217 - 0x00000010:word32] = 0x00000000
	Mem232[esp_217 - 0x00000014:word32] = Mem229[esi_118:word32]
	branch LookupAccountSidLocalW(Mem232[esp_217 - 0x00000014:PSID], Mem232[esp_217 - 0x00000010:LPWSTR], Mem232[esp_217 - 0x0000000C:LPDWORD], Mem232[esp_217 - 0x00000008:LPWSTR], Mem232[esp_217 - 0x00000004:LPDWORD], Mem232[esp_217:PSID_NAME_USE]) != 0x00000000 l10029DE2
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DE2:
	edi_148 = 0x8000FFFF
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DCF:
	edi_148 = fn10015AC3()
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32) Local -0034(32) Local -0038(32)

l10029DE7:
	branch edi_148 != 0x8007007A l10029E2D
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -36(fp):edx -32(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32)

l10029E06:
	Mem332[esp_217:word32] = 0x00000000
	word32 edx_335
	word32 eax_336 = fn1000F3A7(fp - 0x00000030, ebx_117, dwArg00, out edx_335)
	edi_148 = eax_336
	branch eax_336 < 0x00000000 l10029E52
// DataOut: cs ds ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:0x00000000 ecx:<invalid> edx:<invalid> al:0x00 cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0020(32) Local -0024(32)

l10029E17:
	Mem344[esp_217:word32] = 0x00000000
	word32 edx_346
	edi_148 = fn1000F3A7(fp - 0x0000003C, ebx_117, dwArg00, out edx_346)
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:0x00 ax:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32)

l10029E2D:
	branch edi_148 < 0x00000000 l10029E52
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:0x00000000 ecx:<invalid> edx:<invalid> al:0x00 ax:0x0000 cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32)

l10029E31:
	word32 esp_293 = esp_113 - 0x00000004
	Mem294[esp_293:word32] = fp - 0x0000001C
	Mem297[esp_293 - 0x00000004:word32] = fp - 0x0000000C
	Mem299[esp_293 - 0x00000008:word32] = 0x00000000
	Mem302[esp_293 - 0x0000000C:word32] = fp - 0x00000010
	Mem304[esp_293 - 0x00000010:word32] = 0x00000000
	Mem307[esp_293 - 0x00000014:word32] = Mem304[esi_118:word32]
	branch LookupAccountSidLocalW(Mem307[esp_293 - 0x00000014:PSID], Mem307[esp_293 - 0x00000010:LPWSTR], Mem307[esp_293 - 0x0000000C:LPDWORD], Mem307[esp_293 - 0x00000008:LPWSTR], Mem307[esp_293 - 0x00000004:LPDWORD], Mem307[esp_293:PSID_NAME_USE]) != 0x00000000 l10029E86
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:0x00000000 ecx:<invalid> edx:<invalid> al:0x00 ax:0x0000 cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32)

l10029E86:
	Mem321[ecx:word32] = 0x00000000
	Mem329[edx:word32] = 0x00000000
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:fp - 0x00000010 edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E4B:
	edi_148 = fn10015AC3()
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:fp - 0x00000010 edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E52:
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E54:
	fn1000F2EE(fp - 0x0000003C)
	fn1000F2EE(fp - 0x00000030)
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E64:
	branch 0x00000000 == 0x00000000 l10029E7A
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E6E:
	branch 0x00000001 == 0x00000000 l10029E7A
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:0x00000000 ecx:<invalid> al:0x00 cl:<invalid> edx:<invalid> ax:0x0000 -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E73:
	word32 esp_167 = esp_113 - 0x00000004
	Mem168[esp_167:word32] = 0x00000000
	CloseHandle(Mem168[esp_167:HANDLE])
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:0x00000000 ecx:<invalid> al:0x00 cl:<invalid> edx:<invalid> ax:0x0000 -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029E7A:
	word32 esp_162 = esp_113 - 0x00000004
	Mem163[esp_162:word32] = esi_118
	CoTaskMemFree(Mem163[esp_162:LPVOID])
	esp_164 = esp_162 + 0x00000004
// DataOut: cs ds edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:0x00000000 eax:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> -80(fp):fp - 0x00000014 -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):0x00000000 -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l10029FBD:
	word32 ebx_65
	*ebxOut = Mem27[esp_164 + 0x00000008:word32]
	return edi_148
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn10029CBE_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp esi:<invalid> ebx:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -96(fp):0x00000000 -92(fp):0xFFFFFFFF -88(fp):0x00000007 -84(fp):fp - 0x0000000C -80(fp):<invalid> -76(fp):edi -72(fp):esi -68(fp):ebx -60(fp):<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):ecx -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn10029FC6(word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax ecx edx si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn10029FC6_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l10029FC6:
	Mem33[dwArg04:word32] = 0x00000000
	word32 edx_37
	word32 ebx_38
	word32 eax_39 = fn1000F1F2(fp - 0x00000010, 0x10003594, out edx_37, out ebx_38)
	branch eax_39 < 0x00000000 l1002A008
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l10029FFA:
	word32 ecx_60 = Mem33[fp - 0x00000010:word32]
	Mem61[fp - 0x00000010:word32] = ebx_38
	Mem62[fp - 0x00000008:word32] = ebx_38
	Mem63[fp - 0x0000000C:word32] = ebx_38
	Mem64[dwArg04:word32] = ecx_60
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -48(fp):fp - 0x00000010 -44(fp):0x10003594 -40(fp):ecx -36(fp):edx -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002A008:
	fn1000F2EE(fp - 0x00000010)
	word32 ecx_46
	*ecxOut = fp - 0x00000010
	word16 si_51
	*siOut = (word16) Mem33[fp - 0x0000001C:word32]
	return eax_39
// DataOut: cs ds eax ecx edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -48(fp):fp - 0x00000010 -44(fp):0x10003594 -40(fp):ecx -36(fp):edx -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn10029FC6_exit:
// DataOut: eax ecx edx si
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -48(fp):fp - 0x00000010 -44(fp):0x10003594 -40(fp):ecx -36(fp):edx -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



void fn1002A01B(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn1002A01B_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0028(32)

l1002A01B:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem29[ecx:word32] = 0x00000000
	word32 esi_34
	word32 edi_122
	word32 eax_36 = fn1000FC32(edx, ecx, esi, es, ds, fp - 0x00000010, out esi_34, out edi_122)
	word32 eax_48 = CoCreateInstance(0x10007668, edi_122, 0x00000001, 0x100076A8, eax_36)
	word32 ebp_123 = fp - 0x00000004
	word32 ebx_128 = ecx
	word32 esp_141 = fp - 0x00000020
	word32 esi_144 = eax_48
	branch eax_48 < 0x00000000 l1002A09E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1002A05C:
	word32 esi_97
	word32 edi_98
	word32 eax_99 = fn1000EF25(fp - 0x00000014, edx, ecx, 0x00000000, es, ds, out esi_97, out edi_98)
	word32 esp_107
	word32 edi_108
	word32 ebp_109
	byte SCZO_110
	word32 eax_111
	byte SZO_112
	byte C_113
	word32 ebx_114
	word32 esi_115
	word32 ecx_116
	byte S_117
	word32 edx_118
	selector es_119
	selector ds_120
	call Mem29[0x100323BC:word32] (retsize: 4; depth: 48)
		uses: C_53,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_93,dwLoc10_30,dwLoc14_95,dwLoc18_15,dwLoc1C_18,dwLoc20_23,dwLoc24_102,dwLoc28_104,dwLoc2C_106,dwLoc30_45,dwLoc34_47,eax_99,ebp_7,ebx_20,ecx_100,edi_98,edx,es,esi_97,esp_105,S_52,SCZO,SZO_51
		defs: C_113,ds_120,eax_111,ebp_109,ebx_114,ecx_116,edi_108,edx_118,es_119,esi_115,esp_107,S_117,SCZO_110,SZO_112
	word32 esp_121
	byte SCZO_124
	word32 eax_125
	byte SZO_126
	byte C_127
	word32 esi_129
	word32 ecx_130
	byte S_131
	word32 edx_132
	call Mem29[edi_108 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: C_113,ds_120,dwLoc04_6,dwLoc08_12,dwLoc0C_93,dwLoc10_30,dwLoc14_95,dwLoc18_15,dwLoc1C_18,dwLoc20_23,dwLoc24_102,dwLoc28_104,dwLoc2C_106,dwLoc30_45,dwLoc34_47,eax_111,ebp_109,ebx_114,ecx_116,edi_108,edx_118,es_119,esi_115,esp_107,S_117,SCZO_110,SZO_112
		defs: C_127,ds_134,eax_125,ebp_123,ebx_128,ecx_130,edi_122,edx_132,es_133,esi_129,esp_121,S_131,SCZO_124,SZO_126
	word32 esi_135 = eax_125
	branch eax_125 < 0x00000000 l1002A096
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -52(fp):0x10007668 -48(fp):<invalid> -44(fp):0x00000001 -40(fp):0x100076A8 -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l1002A08B:
	Mem148[esp_121 - 0x00000004:word32] = ebx_128
	word32 esi_150
	esi_135 = fn1002ED84(edi_122, edx_132, ebx_128, es, ds, dwArg00, out esi_150, out edi_122)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -52(fp):0x10007668 -48(fp):<invalid> -44(fp):<invalid> -40(fp):0x000001F5 -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A096:
	word32 edx_143
	fn1000C640(fp - 0x0000000C, ebx_128, esi_135, edi_122, es, ds, out edx_143, out esi_144)
	esp_141 = esp_121
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -52(fp):0x10007668 -48(fp):<invalid> -44(fp):<invalid> -40(fp):0x000001F5 -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A09E:
	word32 edx_72
	word32 esi_73
	fn1000C640(fp - 0x00000010, ebx_128, esi_144, edi_122, es, ds, out edx_72, out esi_73)
	word32 esp_78 = esp_141 + 0x00000004
	word32 ecx_86
	fn1002F420(esi_73, eax_11 ^ fp - 0x00000004, edx_72, Mem29[esp_78 + 0x00000004:word32], ebp_123, Mem29[esp_78:word32], Mem29[esp_141:word32], es, ds, out ecx_86)
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):0x10007668 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002A01B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -52(fp):0x10007668 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002A0B9(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn1002A0B9_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A0B9:
	word32 eax_31 = RegOpenKeyExW(0x80000002, 0x10003880, 0x00000000, 0x00000002, fp - 0x00000008)
	word32 esi_107 = eax_31
	word16 si_34 = (word16) eax_31
	byte S_116 = cond(eax_31)
	branch eax_31 <= 0x00000000 l1002A0EE
// DataOut: cs ds edi edx es esi fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002A0E7:
	word32 esi_111 = (word32) si_34
	esi_107 = esi_111 | 0x80070000
	S_116 = cond(esi_111 | 0x80070000) (alias)
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):0x00000002 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A0EE:
	branch S_116 l1002A112
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):0x00000002 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A0F0:
	word32 eax_90 = RegDeleteValueW(ecx, ecx)
	esi_107 = eax_90
	word16 si_93 = (word16) eax_90
	branch eax_90 <= 0x00000000 l1002A105
// DataOut: cs ds edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):0x00000002 -24(fp):fp - 0x00000008 -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A100:
	esi_107 = (word32) si_93 | 0x80070000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):ecx -24(fp):ecx -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A105:
	RegCloseKey(ecx)
	branch esi_107 >= 0x00000000 l1002A122
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):ecx -24(fp):ecx -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A112:
	branch esi_107 == 0x80070002 l1002A122
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A11A:
	edx = fn10029074()
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A122:
	return edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:0x80070000 edx:0x10007708 ecx:0x80000002 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp

fn1002A0B9_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx edx:0x10007708 ecx:0x80000002 -40(fp):0x80000002 -36(fp):0x10003880 -32(fp):0x00000000 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):ecx -4(fp):ebp



word32 fn1002A12B(word32 ecx, word32 edx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es esi fs gs ss
// LiveOut: edx
// Trashed: SCZO ah al ax bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: eax ebp ebx edi esi esp
fn1002A12B_entry:
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A12B:
	fn1000F2EE(fp - 0x00000014)
	word32 edx_38
	branch fn1002975B(fp - 0x00000014, 0x00000000, esi, ecx, es, ds, out edx_38) < 0x00000000 l1002A19B
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002A164:
	branch CompareStringW(0x0000007F, 0x00000001, ecx, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF) == 0x00000002 l1002A194
// DataOut: cs ds edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):0xFFFFFFFF -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A17B:
	branch CompareStringW(0x0000007F, 0x00000001, ecx, 0xFFFFFFFF, 0x1000767C, 0xFFFFFFFF) != 0x00000002 l1002A196
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -56(fp):0x0000007F -52(fp):0x00000001 -48(fp):<invalid> -44(fp):0xFFFFFFFF -40(fp):0x00000000 -36(fp):0xFFFFFFFF -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):0xFFFFFFFF -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A194:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:ecx ebp:fp - 0x00000004 ebx:0x00000000 ecx:<invalid> esi:<invalid> eax:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -56(fp):0x0000007F -52(fp):0x00000001 -48(fp):<invalid> -44(fp):0xFFFFFFFF -40(fp):<invalid> -36(fp):0xFFFFFFFF -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):0xFFFFFFFF -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A196:
	Mem100[edx:byte] = 0x01
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:0x01 edx:<invalid> al:<invalid> ax:<invalid> -56(fp):0x0000007F -52(fp):0x00000001 -48(fp):<invalid> -44(fp):0xFFFFFFFF -40(fp):<invalid> -36(fp):0xFFFFFFFF -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):0xFFFFFFFF -8(fp):edx -4(fp):ebp
// LocalsOut: fp(32)

l1002A19B:
	fn1000F2EE(fp - 0x00000014)
	return edx_38
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:ecx ebp:fp - 0x00000004 ebx:<invalid> ecx:<invalid> esi:<invalid> eax:<invalid> bl:0x01 edx:<invalid> al:<invalid> ax:<invalid> -56(fp):0x0000007F -52(fp):0x00000001 -48(fp):<invalid> -44(fp):0xFFFFFFFF -40(fp):<invalid> -36(fp):0xFFFFFFFF -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):0xFFFFFFFF -8(fp):edx -4(fp):ebp

fn1002A12B_exit:
// DataOut: edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ebx:ebx ecx:fp - 0x00000014 esi:esi eax:<invalid> bl:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -56(fp):0x0000007F -52(fp):0x00000001 -48(fp):<invalid> -44(fp):0xFFFFFFFF -40(fp):<invalid> -36(fp):0xFFFFFFFF -32(fp):edi -28(fp):esi -24(fp):ebx -20(fp):0x00000000 -16(fp):0xFFFFFFFF -12(fp):0xFFFFFFFF -8(fp):edx -4(fp):ebp



void fn1002A1AC(word32 ecx, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002A1AC_entry:
// DataOut: cs ds ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(8) Stack +0004(32)

l1002A1AC:
	word32 esi_150
	byte al_151
	Mem27[dwArg04:word32] = 0x00000000
	branch ecx == 0x00000000 l1002A1D9
// DataOut: cs ds dx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32)

l1002A1C3:
	branch Mem27[ecx:word16] == 0x0000 l1002A1D9
// DataOut: cs ds ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:0x00000000 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32)

l1002A1D9:
	esi_150 = 0x00000000
	al_151 = 0x01
// DataOut: al cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:0x00000000 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A1C8:
	fn1002A12B(ecx, fp - 0x00000005, esi, es, ds)
	esi_150 = eax
	al_151 = bLoc05
// DataOut: al cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:0x00000000 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A1DD:
	branch esi_150 < 0x00000000 l1002A233
// DataOut: al cs ds edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A1E1:
	branch al_151 == 0x00 l1002A22E
// DataOut: cs ds edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A22E:
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A1E5:
	word32 esp_85
	word32 edi_86
	word32 ebp_87
	word32 ecx_88
	word32 ebx_89
	word32 esi_90
	word32 edx_91
	byte SZO_92
	byte C_93
	byte Z_94
	word16 dx_95
	byte SCZO_96
	word32 eax_97
	byte al_98
	byte S_99
	selector es_100
	selector ds_101
	call samcli.dll!NetUserGetInfo (retsize: 4; depth: 44)
		uses: al_32,C_75,ds,dwLoc04_6,dwLoc08_10,dwLoc0C_12,dwLoc10_15,dwLoc14_18,dwLoc18_20,dwLoc1C_78,dwLoc20_80,dwLoc24_82,dwLoc28_84,dx_26,eax_76,ebp_7,ebx_24,ecx,edi_22,edx_35,es,esi_37,esp_83,S_39,SCZO_33,SZO_73,Z_74
		defs: al_98,C_93,ds_101,dx_95,eax_97,ebp_87,ebx_89,ecx_88,edi_86,edx_91,es_100,esi_90,esp_85,S_99,SCZO_96,SZO_92,Z_94
	branch (fp - 0x0000000C & fp - 0x0000000C) != 0x00000000 l1002A227
// DataOut: cs ds edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A227:
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A1F7:
	word32 ecx_134
	word32 ecx_109 = Mem27[ecx + 0x0000000C:word32]
	ecx_134 = ecx_109
	branch Mem27[ecx_109:word16] != 0x0000 l1002A20B
// DataOut: cs ds dx eax ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A204:
	ecx_134 = Mem27[ecx:word32]
	branch Mem27[ecx_134:word16] == 0x0000 l1002A219
// DataOut: cs ds eax ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:ecx bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002A219:
// DataOut: cs ds eax es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:ecx bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A20B:
	word32 ecx_136
	word32 edx_137
	fn1000CECD(ecx_134, edi_86, es_100, ds_101, out ecx_136, out edx_137)
// DataOut: cs ds eax es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:ecx bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A21E:
	Mem114[esp_85 - 0x00000004:word32] = ecx
	word32 esp_115
	word32 edi_116
	word32 ebp_117
	word32 ecx_118
	word32 ebx_119
	word32 esi_120
	word32 edx_121
	byte SZO_122
	byte C_123
	byte Z_124
	word16 dx_125
	byte SCZO_126
	word32 eax_127
	byte al_128
	byte S_129
	selector es_130
	selector ds_131
	call netutils.dll!NetApiBufferFree (retsize: 4; depth: 4)
		uses: al_106,C_104,ds_101,dwLoc04_6,dwLoc08_10,dwLoc0C_12,dwLoc10_15,dwLoc14_18,dwLoc18_20,dwLoc1C_78,dwLoc20_80,dwLoc24_82,dwLoc28_84,dx_108,eax_112,ebp_87,ebx_89,ecx_109,edi_86,edx_107,es_100,esi_90,esp_113,S_99,SCZO_110,SZO_102,Z_111
		defs: al_128,C_123,ds_131,dx_125,eax_127,ebp_117,ebx_119,ecx_118,edi_116,edx_121,es_130,esi_120,esp_115,S_129,SCZO_126,SZO_122,Z_124
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:ecx ax:<invalid> bl:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002A233:
	return
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:edx edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp

fn1002A1AC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp ebx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> ecx:<invalid> eax:<invalid> bl:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edx -32(fp):0x0000000A -28(fp):fp - 0x0000000C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):ecx -4(fp):ebp



word16 fn1002A23E(word32 edx, word32 ebp, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: bx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002A23E_entry:
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A23E:
	Mem31[edx:word32] = Mem0[edx:word32] & 0x00000000
	word32 ecx_37
	word32 edx_38
	word16 si_39
	branch fn10010D2A(0x00000001, es, ds, fp - 0x00000008, out ecx_37, out edx_38, out si_39) < 0x00000000 l1002A2F8
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002A273:
	Mem71[fp - 0x00000030:word32] = 0x10003974
	Mem74[fp - 0x00000034:word32] = Mem71[fp - 0x00000008:word32]
	Mem75[fp - 0x00000020:word32] = 0x00000000
	Mem76[fp - 0x0000001C:word32] = 0x00000000
	Mem77[fp - 0x00000018:word32] = 0x00000000
	branch fn1001DE5B(fp - 0x00000020, dwArg00, dwArg04) < 0x00000000 l1002A2E7
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -48(fp):fp - 0x00000008 -44(fp):edi -40(fp):esi -36(fp):ebx -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A294:
	Mem102[fp - 0x00000030:word32] = 0x00000001
	Mem104[fp - 0x00000034:word32] = 0xFFFFFFFF
	Mem107[fp - 0x00000038:word32] = Mem104[fp - 0x00000020:word32]
	Mem109[fp - 0x0000003C:word32] = 0xFFFFFFFF
	Mem111[fp - 0x00000040:word32] = ecx
	branch CompareStringOrdinal(Mem111[fp - 0x00000040:LPCWSTR], Mem111[fp - 0x0000003C:int32], Mem111[fp - 0x00000038:LPCWSTR], Mem111[fp - 0x00000034:int32], Mem111[fp - 0x00000030:BOOL]) == 0x00000002 l1002A2B0
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A2B0:
	Mem118[fp - 0x00000030:word32] = 0x100077DC
	Mem121[fp - 0x00000034:word32] = Mem118[fp - 0x00000008:word32]
	Mem127[fp - 0x00000014:word32] = 0x00000000
	Mem128[fp - 0x00000010:word32] = 0x00000000
	Mem129[fp - 0x0000000C:word32] = 0x00000000
	branch fn1001DE5B(fp - 0x00000014, dwArg00, dwArg04) < 0x00000000 l1002A2DF
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -4(fp):ebp

l1002A2D1:
	word32 eax_138 = Mem129[fp - 0x00000014:word32]
	Mem139[fp - 0x00000014:word32] = 0x00000000
	Mem140[fp - 0x0000000C:word32] = 0x00000000
	Mem141[fp - 0x00000010:word32] = 0x00000000
	Mem142[edx:word32] = eax_138
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

l1002A2DF:
	fn1000F2EE(fp - 0x00000014)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

l1002A2A9:
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -4(fp):ebp

l1002A2E7:
	Mem97[fp - 0x00000030:word32] = Mem77[fp - 0x00000008:word32]
	RegCloseKey(Mem97[fp - 0x00000030:HKEY])
	fn1000F2EE(fp - 0x00000020)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

l1002A2F8:
	return (word16) Mem31[fp - 0x00000024:word32]
// DataOut: bx cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

fn1002A23E_exit:
// DataOut: bx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> -64(fp):<invalid> -60(fp):0xFFFFFFFF -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp



word32 fn1002A301(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
fn1002A301_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -004C(32)

l1002A301:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem29[ecx:word32] = 0x00000000
	word32 esi_34
	word32 edi_136
	word32 eax_36 = fn1000FC32(edx, ecx, esi, es, ds, fp - 0x00000010, out esi_34, out edi_136)
	word32 eax_48 = CoCreateInstance(0x10007668, edi_136, 0x00000001, 0x100076A8, eax_36)
	word32 ebp_137 = fp - 0x00000004
	word32 ebx_142 = ecx
	word32 esp_135 = fp - 0x00000044
	word32 esi_173 = eax_48
	branch eax_48 < 0x00000000 l1002A3E5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32)

l1002A346:
	word32 esi_111
	word32 edi_112
	word32 eax_113 = fn1000EF25(fp - 0x00000020, edx, ecx, 0x00000000, es, ds, out esi_111, out edi_112)
	word32 esp_121
	word32 edi_122
	word32 ebp_123
	byte SCZO_124
	word32 eax_125
	byte SZO_126
	byte C_127
	word32 ebx_128
	word32 esi_129
	word32 ecx_130
	byte S_131
	word32 edx_132
	selector es_133
	selector ds_134
	call Mem29[0x100323BC:word32] (retsize: 4; depth: 84)
		uses: C_53,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_107,dwLoc10_30,dwLoc14,dwLoc18,dwLoc1C,dwLoc20_109,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc3C_15,dwLoc40_18,dwLoc44_23,dwLoc48_116,dwLoc4C_118,dwLoc50_120,dwLoc54_45,dwLoc58_47,eax_113,ebp_7,ebx_20,ecx_114,edi_112,edx,es,esi_111,esp_119,S_52,SCZO,SZO_51
		defs: C_127,ds_134,eax_125,ebp_123,ebx_128,ecx_130,edi_122,edx_132,es_133,esi_129,esp_121,S_131,SCZO_124,SZO_126
	byte SCZO_138
	word32 eax_139
	byte SZO_140
	byte C_141
	word32 esi_143
	word32 ecx_144
	byte S_145
	word32 edx_146
	call Mem29[edi_122 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: C_127,ds_134,dwLoc04_6,dwLoc08_12,dwLoc0C_107,dwLoc10_30,dwLoc14,dwLoc18,dwLoc1C,dwLoc20_109,dwLoc28,dwLoc2C,dwLoc30,dwLoc34,dwLoc3C_15,dwLoc40_18,dwLoc44_23,dwLoc48_116,dwLoc4C_118,dwLoc50_120,dwLoc54_45,dwLoc58_47,eax_125,ebp_123,ebx_128,ecx_130,edi_122,edx_132,es_133,esi_129,esp_121,S_131,SCZO_124,SZO_126
		defs: C_141,ds_148,eax_139,ebp_137,ebx_142,ecx_144,edi_136,edx_146,es_147,esi_143,esp_135,S_145,SCZO_138,SZO_140
	word32 esi_149 = eax_139
	branch eax_139 < 0x00000000 l1002A3DD
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000044 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):0x00000001 -76(fp):0x100076A8 -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -16(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -000C(32)

l1002A375:
	Mem183[esp_135 - 0x00000004:word32] = fp - 0x00000034
	Mem185[esp_135 - 0x00000008:word32] = 0x100031EC
	Mem194[esp_135 - 0x0000000C:word32] = edi_136
	word32 esp_197
	word32 edi_198
	word32 ebp_199
	byte SCZO_200
	word32 eax_201
	byte SZO_202
	byte C_203
	word32 ebx_204
	word32 esi_205
	word32 ecx_206
	byte S_207
	word32 edx_208
	selector es_209
	selector ds_210
	call Mem194[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_177,ds_148,dwLoc04_6,dwLoc08_12,dwLoc0C_107,dwLoc10_30,dwLoc14,dwLoc18,dwLoc1C,dwLoc20_109,dwLoc28_190,dwLoc2C_188,dwLoc30_186,dwLoc34_179,dwLoc3C_15,dwLoc40_18,dwLoc44_23,dwLoc48_116,dwLoc4C_118,dwLoc50_120,dwLoc54_45,dwLoc58_47,eax_192,ebp_137,ebx_142,ecx_196,edi_191,edx_146,es_147,esi_195,esp_193,S_151,SCZO_138,SZO_176
		defs: C_203,ds_210,eax_201,ebp_199,ebx_204,ecx_206,edi_198,edx_208,es_209,esi_205,esp_197,S_207,SCZO_200,SZO_202
	byte SCZO_214
	word32 eax_215
	byte SZO_216
	byte C_217
	word32 esi_219
	word32 ecx_220
	byte S_221
	word32 edx_222
	call Mem194[esi_205 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: C_203,ds_210,dwLoc04_6,dwLoc08_12,dwLoc0C_107,dwLoc10_30,dwLoc14,dwLoc18,dwLoc1C,dwLoc20_109,dwLoc28_190,dwLoc2C_188,dwLoc30_186,dwLoc34_179,dwLoc3C_15,dwLoc40_18,dwLoc44_23,dwLoc48_116,dwLoc4C_118,dwLoc50_120,dwLoc54_45,dwLoc58_47,eax_201,ebp_199,ebx_204,ecx_206,edi_198,edx_208,es_209,esi_205,esp_197,S_207,SCZO_200,SZO_202
		defs: C_217,ds_224,eax_215,ebp_213,ebx_218,ecx_220,edi_212,edx_222,es_223,esi_219,esp_211,S_221,SCZO_214,SZO_216
	esi_149 = eax_215
	branch eax_215 < 0x00000000 l1002A3DD
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):0x000001F4 -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -32(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -002C(32)

l1002A39F:
	Mem230[esp_135 - 0x00000004:word32] = 0xFFFFFFFF
	Mem233[esp_135 - 0x00000008:word32] = 0x00000000
	word32 edx_243
	word32 eax_244 = fn1000F30D(fp - 0x0000001C, dwArg00, dwArg04, out edx_243)
	edi_136 = fp - 0x00000024 ^ fp - 0x00000024
	esi_149 = eax_244
	branch eax_244 < 0x00000000 l1002A3CB
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000024 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):0x000001F4 -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):fp - 0x0000000C -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32)

l1002A3BD:
	Mem263[ebx_142:word32] = edi_136
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000024 ^ fp - 0x00000024 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):0x000001F4 -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000024 ^ fp - 0x00000024 -24(fp):fp - 0x00000024 ^ fp - 0x00000024 -20(fp):fp - 0x00000024 ^ fp - 0x00000024 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A3CB:
	Mem255[esp_135 - 0x00000004:word32] = fp - 0x00000034
	PropVariantClear(Mem255[esp_135 - 0x00000004:(ptr PROPVARIANT)])
	fn1000F2EE(fp - 0x0000001C)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000024 ^ fp - 0x00000024 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):0x000001F4 -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000024 ^ fp - 0x00000024 -24(fp):fp - 0x00000024 ^ fp - 0x00000024 -20(fp):fp - 0x00000024 ^ fp - 0x00000024 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A3DD:
	word32 edx_172
	fn1000C640(fp - 0x0000000C, ebx_142, esi_149, edi_136, es, ds, out edx_172, out esi_173)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):0x000001F4 -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000024 ^ fp - 0x00000024 -24(fp):fp - 0x00000024 ^ fp - 0x00000024 -20(fp):fp - 0x00000024 ^ fp - 0x00000024 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002A3E5:
	word32 edx_86
	word32 esi_87
	fn1000C640(fp - 0x00000010, ebx_142, esi_173, edi_136, es, ds, out edx_86, out esi_87)
	word32 esp_92 = esp_135 + 0x00000004
	word32 ecx_100
	return fn1002F420(esi_87, eax_11 ^ fp - 0x00000004, edx_86, Mem29[esp_92 + 0x00000004:word32], ebp_137, Mem29[esp_92:word32], Mem29[esp_135:word32], es, ds, out ecx_100)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000024 ^ fp - 0x00000024 -24(fp):fp - 0x00000024 ^ fp - 0x00000024 -20(fp):fp - 0x00000024 ^ fp - 0x00000024 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002A301_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> -88(fp):0x10007668 -84(fp):<invalid> -80(fp):<invalid> -76(fp):<invalid> -72(fp):<invalid> -68(fp):edi -64(fp):esi -60(fp):ebx -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -32(fp):fp - 0x0000000C -28(fp):fp - 0x00000024 ^ fp - 0x00000024 -24(fp):fp - 0x00000024 ^ fp - 0x00000024 -20(fp):fp - 0x00000024 ^ fp - 0x00000024 -16(fp):0x00000000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002A400(word32 edx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn1002A400_entry:
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A400:
	fn1000F2EE(fp - 0x00000010)
	word32 eax_38 = fn1002A301(fp - 0x00000010, edx, fp - 0x00000004, esi, es, ds)
	branch eax_38 < 0x00000000 l1002A452
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A438:
	Mem88[edx:byte] = CompareStringW(0x0000007F, 0x00000001, ecx, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF) == 0x00000002
// DataOut: cs ds es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp
// LocalsOut: fp(32)

l1002A452:
	fn1000F2EE(fp - 0x00000010)
	return eax_38
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:Test(EQ,Z) edx:<invalid> ax:<invalid> -52(fp):0x0000007F -48(fp):0x00000001 -44(fp):<invalid> -40(fp):0xFFFFFFFF -36(fp):0x00000000 -32(fp):0xFFFFFFFF -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp

fn1002A400_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx ecx:fp - 0x00000010 esi:esi al:<invalid> edx:<invalid> ax:<invalid> -52(fp):0x0000007F -48(fp):0x00000001 -44(fp):<invalid> -40(fp):0xFFFFFFFF -36(fp):0x00000000 -32(fp):0xFFFFFFFF -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0xFFFFFFFF -8(fp):0xFFFFFFFF -4(fp):ebp



word32 fn1002A463(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: bx eax ecx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002A463_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A463:
	__align(fp - 0x00000004)
	Mem29[edx:word32] = 0x00000000
	word32 edi_157 = edx
	word32 ebx_159 = 0x00000000
	branch Mem29[ecx:word16] == 0x0000 l1002A56E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1002A495:
	branch CompareStringOrdinal(ecx, 0x00000002, 0x10007860, 0x00000002, 0x00000001) != 0x00000002 l1002A561
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):0x80004005 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -008C(32)

l1002A561:
	word32 ecx_238
	fn1000CECD(ecx, edx, es, ds, out ecx_238, out edx)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):0x00000001 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):0x80004005 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A4B0:
	word32 eax_161
	branch fn1000CD49(edx, 0x00000000, ecx, edx, es, ds) != 0x00 l1002A4E3
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):0x00000001 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):0x80004005 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -008C(32)

l1002A4E3:
	fn1000F2EE(fp - 0x00000074)
	word32 esi_232
	eax_161 = fn10029894(fp - 0x00000074, edx, fp - 0x00000004, es, ds, out edx, out ebx_159, out esi_232, out edi_157)
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 bl:<invalid> ecx:fp - 0x00000074 al:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):0x00000001 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):0x80004005 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -008C(32)

l1002A4C9:
	fn1000F2EE(fp - 0x00000074)
	eax_161 = fn1002975B(fp - 0x00000074, 0x00000000, ecx, edx, es, ds, out edx)
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:ecx ebx:0x00000000 bl:<invalid> ecx:fp - 0x00000074 al:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):0x00000001 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):0x80004005 -116(fp):0x00000000 -112(fp):0x00000000 -108(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -008C(32)

l1002A4FB:
	branch eax_161 < 0x00000000 l1002A556
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):0x00000001 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):0x80004005 -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -008C(32)

l1002A503:
	fn1000F2EE(fp - 0x00000068)
	word32 ecx_195
	word16 si_197
	word32 eax_198 = fn10029FC6(fp - 0x00000068, out ecx_195, out edx, out si_197)
	Mem200[fp - 0x00000078:word32] = eax_198
	branch eax_198 < 0x00000000 l1002A54D
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000084 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):0x00000001 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A53B:
	word32 eax_206 = Mem200[fp - 0x00000068:word32]
	Mem207[fp - 0x00000068:word32] = ebx_159
	Mem208[fp - 0x00000060:word32] = ebx_159
	Mem209[fp - 0x00000064:word32] = ebx_159
	Mem210[edi_157:word32] = eax_206
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):fp - 0x00000068 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A54D:
	fn1000F2EE(fp - 0x00000068)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):fp - 0x00000068 -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A556:
	fn1000F2EE(fp - 0x00000074)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A56E:
	Mem71[fp - 0x00000088:word32] = 0x00000004
	word32 esi_72 = Mem71[fp - 0x00000088:word32]
	branch Mem71[0x10031000:word32] <=u esi_72 l1002A5C1
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A579:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003D54)
	Mem107[fp - 0x00000018:word32] = ebx_159
	Mem108[fp - 0x0000001C:word32] = fp - 0x00000078
	Mem109[fp - 0x00000014:word32] = esi_72
	Mem110[fp - 0x00000010:word32] = ebx_159
	Mem114[fp - 0x00000088:word32] = fp - 0x0000005C
	Mem116[fp - 0x0000008C:word32] = 0x00000005
	Mem118[fp - 0x00000090:word32] = ebx_159
	Mem120[fp - 0x00000094:word32] = ebx_159
	word32 ecx_126
	word32 esi_128
	word32 edi_129
	fn1000C491(0x10031000, 0x1000B5FE, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_126, out edx, out esi_128, out edi_129)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -152(fp):ecx -148(fp):0x00000002 -144(fp):0x10007860 -140(fp):0x00000002 -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002A5C1:
	word32 ebx_85 = Mem71[fp - 0x0000007C:word32]
	word16 bx_86
	*bxOut = (word16) ebx_85
	word32 ecx_93
	return fn1002F420(Mem71[fp - 0x00000078:word32], Mem71[fp - 0x00000008:word32] ^ fp - 0x00000078, edx, ebx_85, fp - 0x00000004, Mem71[fp - 0x00000080:word32], Mem71[fp - 0x00000084:word32], es, ds, out ecx_93)
// DataOut: bx cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -152(fp):ecx -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000078 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002A463_exit:
// DataOut: bx eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -152(fp):ecx -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):edi -128(fp):esi -124(fp):ebx -120(fp):<invalid> -116(fp):0x00000000 -112(fp):0xFFFFFFFF -108(fp):0xFFFFFFFF -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000078 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002A5D7(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: edi esi esp
fn1002A5D7_entry:
	*edxOut = edx
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A5D7:
	word32 esi_26
	word32 eax_14 = CoTaskMemAlloc(ecx)
	Mem16[edx:word32] = eax_14
	branch eax_14 == 0x00000000 l1002A601
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A601:
	esi_26 = 0x8007000E
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx eax:<invalid> -12(fp):ecx -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1002A5EA:
	word32 ecx_37
	word32 edx_38
	word32 esi_39
	word32 edi_40
	word32 eax_41 = fn1000CE15(eax_14, edx, ebx, es, ds, out ecx_37, out edx_38, out esi_39, out edi_40)
	memset(Mem16[edi_40:word32], 0x00000000, eax_41)
	esi_26 = 0x00000000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edx eax:<invalid> -12(fp):ecx -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1002A606:
	return esi_26
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi

fn1002A5D7_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi eax:<invalid> ecx:<invalid> esi:esi edx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi



word32 fn1002A60B(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002A60B_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002A60B:
	word32 edx_104 = edx >>u 0x00000001
	*edxOut = edx_104
	word32 esi_19 = (0x00000000 - (-(edx >>u 0x00000001) == 0x00000000) & 0x7FF8FFA9) + 0x80070057
	branch edx >>u 0x00000001 == 0x00000000 l1002A678
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002A62A:
	branch dwArg08 >>u 0x00000001 <=u 0x7FFFFFFE l1002A63C
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 edx:edx >>u 0x00000001 eax:0x80070057 esi:<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1002A63C:
	esi_19 = 0x00000000
	branch edx >>u 0x00000001 == 0x00000000 l1002A66A
// DataOut: cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 edx:edx >>u 0x00000001 eax:0x80070057 esi:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0004(32)

l1002A642:
	word32 edi_93 = (dwArg08 >>u 0x00000001) - (edx >>u 0x00000001)
	word32 ebx_94 = dwArg04 - ecx
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 edx:edx >>u 0x00000001 eax:0x80070057 esi:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A64A:
	branch edi_93 + edx_104 == 0x00000000 l1002A665
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A651:
	word16 ax_116 = (word16) (word32) Mem0[ebx_94 + ecx:word16]
	branch ax_116 == 0x0000 l1002A665
// DataOut: ax cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A65A:
	Mem120[ecx:word16] = ax_116
	ecx = ecx + 0x00000002
	edx_104 = edx_104 - 0x00000001
	*edxOut = edx_104
	branch edx_104 != 0x00000000 l1002A64A
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A665:
	branch edx_104 != 0x00000000 l1002A672
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A66A:
	ecx = ecx - 0x00000002
	esi_19 = 0x8007007A
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ebx:ebx ecx:<invalid> -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A638:
	esi_19 = 0x80070057
// DataOut: cs ds ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 edx:edx >>u 0x00000001 eax:0x80070057 esi:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A672:
	Mem66[ecx:word16] = 0x0000
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:ebx -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002A678:
	return esi_19
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:ebx -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp

fn1002A60B_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp edx:<invalid> eax:<invalid> esi:esi ecx:<invalid> ebx:ebx -16(fp):ebx -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn1002A67F(byte cl, byte dl, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cl dl
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn1002A67F_entry:
// DataOut: cl cs dl ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0028(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1002A67F:
	word32 dwLoc24_135
	word32 eax_126
	Mem27[dwArg10:word32] = 0x00000000
	word32 ebx_125 = 0x00000000
	branch dwArg0C == 0x00000000 l1002A6AB
// DataOut: bx cl cs dl ds eax ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0028(32) Stack +0004(32) Stack +0008(32)

l1002A6A1:
	branch Mem27[dwArg0C:word16] == 0x0000 l1002A6AB
// DataOut: bx cl cs dl ds eax ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Stack +0004(32) Stack +0008(32)

l1002A6AB:
	branch cl == 0x00 l1002A6E2
// DataOut: bx cs dl ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Stack +0004(32) Stack +0008(32)

l1002A6AF:
	branch dl != 0x00 l1002A6E2
// DataOut: bx cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Stack +0004(32) Stack +0008(32)

l1002A6B3:
	branch dwArg04 == 0x00000000 l1002A6E2
// DataOut: bx cs ds ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Stack +0008(32)

l1002A6BA:
	branch Mem27[dwArg04:word16] == 0x0000 l1002A6E2
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Stack +0008(32)

l1002A6BF:
	branch fn10029AC8(dwArg08) != 0x00 l1002A6E2
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0028(32) Stack +0008(32)

l1002A6E2:
	dwLoc24_135 = dwArg08
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:0x00000040 al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32) Local -0028(32)

l1002A6CB:
	word32 edx_124
	eax_126 = fn1000F1F2(fp - 0x00000010, 0x10003594, out edx_124, out ebx_125)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:0x00000040 al:<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002A6A6:
	dwLoc24_135 = dwArg0C
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0020(32) Local -0024(32) Local -0028(32)

l1002A6E7:
	word32 edx_73
	eax_126 = fn1000F30D(fp - 0x00000010, dwLoc24_135, 0xFFFFFFFF, out edx_73)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> ecx:0x00000040 al:<invalid> -36(fp):<invalid> -32(fp):0xFFFFFFFF -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002A6EF:
	branch eax_126 < 0x00000000 l1002A703
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -44(fp):fp - 0x00000010 -40(fp):0x10003594 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002A6F5:
	word32 eax_60 = Mem27[fp - 0x00000010:word32]
	Mem61[fp - 0x00000010:word32] = ebx_125
	Mem62[fp - 0x00000008:word32] = ebx_125
	Mem63[fp - 0x0000000C:word32] = ebx_125
	Mem64[dwArg10:word32] = eax_60
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -44(fp):fp - 0x00000010 -40(fp):0x10003594 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

l1002A703:
	fn1000F2EE(fp - 0x00000010)
	return eax_126
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -44(fp):fp - 0x00000010 -40(fp):0x10003594 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp

fn1002A67F_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> al:<invalid> ax:<invalid> -44(fp):fp - 0x00000010 -40(fp):0x10003594 -36(fp):<invalid> -32(fp):<invalid> -28(fp):edi -24(fp):esi -20(fp):ebx -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):0x00000000 -4(fp):ebp



word32 fn1002A716(word32 ecx, word32 edx, word32 ebx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edx es fs gs ss
// LiveOut: bx eax ebx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi edx esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1002A716_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1002A716:
	word32 esi_31
	word32 edi_32
	word32 eax_33 = fn1000EF25(fp - 0x0000000C, edx, ebx, edx, es, ds, out esi_31, out edi_32)
	word32 ecx_50
	word16 bx_51
	word32 eax_52 = fn1002CCDB(edi_32, esi_31, fp - 0x00000004, es, ds, dwArg04, dwArg08, eax_33, out ecx_50, out bx_51)
	word32 esi_54 = eax_52
	branch eax_52 < 0x00000000 l1002A763
// DataOut: bx cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002A74E:
	branch Mem0[fp - 0x00000008:word32] == 0x00000000 l1002A763
// DataOut: bx cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> ebx:<invalid> cl:<invalid> dl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):fp - 0x00000008 -8(fp):ecx & 0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A754:
	Mem80[fp - 0x00000018:word32] = ecx_50
	word32 ecx_81 = Mem80[fp + 0x00000010:word32]
	Mem84[fp - 0x0000001C:word32] = fp - 0x00000008
	esi_54 = fn1002D5F1(ecx_81, ebx, es, ds, dwArg00)
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> ebx:<invalid> cl:<invalid> dl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):fp - 0x00000008 -8(fp):ecx & 0x00000000 -4(fp):ebp

l1002A763:
	word32 edx_65
	word32 esi_66
	fn1000C640(fp - 0x00000008, ebx, esi_54, edi_32, es, ds, out edx_65, out esi_66)
	return esi_66
// DataOut: bx cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> ebx:<invalid> cl:<invalid> dl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):fp - 0x00000008 -8(fp):ecx & 0x00000000 -4(fp):ebp

fn1002A716_exit:
// DataOut: bx eax ebx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> ebx:<invalid> cl:<invalid> dl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):fp - 0x00000008 -8(fp):ecx & 0x00000000 -4(fp):ebp



word32 fn1002A775(word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002A775_entry:
	*edxOut = edx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A775:
	Mem32[ecx:word32] = 0x00000000
	word32 eax_36 = fn1001DE03(fp - 0x00000014, 0x10002F60, 0x10003FA0)
	word32 esi_149 = eax_36
	branch eax_36 < 0x00000000 l1002A858
// DataOut: bl bx cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002A7AF:
	byte al_200
	branch 0x00000000 == 0x00000000 l1002A7BD
// DataOut: bl bx cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> -56(fp):ecx -52(fp):0x10002F60 -48(fp):0x10003FA0 -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32)

l1002A7B6:
	al_200 = 0x00
	branch Mem32[0x00000000:word16] != 0x0000 l1002A7BF
// DataOut: al bx cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> -56(fp):ecx -52(fp):0x10002F60 -48(fp):0x10003FA0 -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32)

l1002A7BD:
	al_200 = 0x01
// DataOut: al bx cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> al:bl -56(fp):ecx -52(fp):0x10002F60 -48(fp):0x10003FA0 -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32)

l1002A7BF:
	esi_149 = 0x00000000 - (-((word32) al_200) == 0x00000000) & 0x80004005
	branch al_200 != 0x00 l1002A858
// DataOut: bx cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> al:<invalid> -56(fp):ecx -52(fp):0x10002F60 -48(fp):0x10003FA0 -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32)

l1002A7D4:
	branch wcschr(0x00000000, L'\\') != 0x00000000 l1002A84A
// DataOut: bx cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> al:<invalid> -56(fp):ecx -52(fp):0x10002F60 -48(fp):0x10003FA0 -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32)

l1002A7E3:
	branch wcschr(0x00000000, L'@') != 0x00000000 l1002A84A
// DataOut: bx cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:0x0000005C esi:<invalid> al:<invalid> -56(fp):ecx -52(fp):0x00000000 -48(fp):0x0000005C -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32)

l1002A84A:
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> al:<invalid> -56(fp):ecx -52(fp):0x00000000 -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp

l1002A7F2:
	word32 eax_147 = fn1001DE03(fp - 0x00000020, 0x10002F60, 0x10007868)
	esi_149 = eax_147
	branch eax_147 < 0x00000000 l1002A840
// DataOut: bx cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:0x00000040 esi:<invalid> al:<invalid> -56(fp):ecx -52(fp):0x00000000 -48(fp):0x00000040 -44(fp):edi -40(fp):esi -36(fp):ebx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32) Local -0034(32)

l1002A814:
	branch 0x00000000 == 0x00000000 l1002A820
// DataOut: bx cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:<invalid> esi:<invalid> al:<invalid> -56(fp):0x00000040 -52(fp):0x10002F60 -48(fp):0x10007868 -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32) Local -0034(32)

l1002A81B:
	branch Mem32[0x00000000:word16] != 0x0000 l1002A822
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:0x00000000 esi:<invalid> al:<invalid> -56(fp):0x00000040 -52(fp):0x10002F60 -48(fp):0x10007868 -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32) Local -0034(32)

l1002A820:
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 ecx:0x00000000 esi:<invalid> al:<invalid> -56(fp):0x00000040 -52(fp):0x10002F60 -48(fp):0x10007868 -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32) Local -0034(32)

l1002A822:
	esi_149 = 0x00000000 - (-0x00000001 == 0x00000000) & 0x80004005
	branch true l1002A840
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> al:<invalid> bl:0x01 -56(fp):0x00000040 -52(fp):0x10002F60 -48(fp):0x10007868 -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp
// LocalsOut: fp(32) Local -0034(32)

l1002A833:
	word32 ecx_185
	word32 edx_186
	word16 si_187
	esi_149 = fn10029FC6(fp - 0x00000014, out ecx_185, out edx_186, out si_187)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:0x00000000 esi:<invalid> al:<invalid> bl:0x01 -56(fp):0x00000040 -52(fp):0x10002F60 -48(fp):0x10007868 -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp

l1002A840:
	fn1000F2EE(fp - 0x00000020)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> bl:0x01 edx:<invalid> ax:<invalid> -56(fp):0x00000040 -52(fp):0x10002F60 -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp

l1002A858:
	fn1000F2EE(fp - 0x00000014)
	return esi_149
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> bl:0x01 edx:<invalid> ax:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp

fn1002A775_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> al:<invalid> bl:<invalid> edx:<invalid> ax:<invalid> -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -8(fp):fp - 0x00000014 -4(fp):ebp



word32 fn1002A869(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: bl bx eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002A869_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0884(32) Local -0888(32) Stack +0004(32) Stack +0008(32)

l1002A869:
	Mem35[ecx:word32] = Mem0[ecx:word32] & 0x00000000
	Mem39[edx:word32] = Mem35[edx:word32] & 0x00000000
	Mem43[dwArg04:word32] = Mem39[dwArg04:word32] & 0x00000000
	Mem47[dwArg08:word32] = Mem43[dwArg08:word32] & 0x00000000
	word32 ebp_126 = fp - 0x00000004
	word32 ebx_17 = dwArg04
	word32 edx_118 = 0x10003880
	word32 ecx_56
	word32 eax_128 = fn1001328F(0x80000002, 0x10003880, 0x10003904, fp + 0xFFFFF7D4, out ecx_56)
	word32 esp_127 = fp - 0x000008AC
	branch eax_128 < 0x00000000 l1002AB11
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0884(32) Local -0888(32)

l1002AB11:
	branch eax_128 != 0x80070002 l1002AB25
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10003880 -2232(fp):0x10003904 -2228(fp):fp + 0xFFFFF7D4 -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AB18:
	eax_128 = fn1002A775(ecx, out edx_118)
	Mem491[fp + 0xFFFFF780:word32] = eax_128
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10003880 -2232(fp):0x10003904 -2228(fp):fp + 0xFFFFF7D4 -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A8CF:
	word32 ecx_200
	word32 eax_201 = fn1001328F(0x80000002, 0x10003880, 0x1000392C, fp - 0x00000624, out ecx_200)
	fn1000CB72(0x10007708, 0x100076F4, fp + 0xFFFFF77C)
	word32 edi_208 = eax_201
	esp_127 = fp - 0x000008AC
	branch (dwLoc0884 & 0x00000000) != 0x00000001 l1002A922
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:0x10003880 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10003880 -2232(fp):0x10003904 -2228(fp):fp + 0xFFFFF7D4 -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0884(32) Local -0888(32)

l1002A912:
	fn1002A0B9(0x100077AC)
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10007708 -2232(fp):0x1000392C -2228(fp):0x100076F4 -2224(fp):fp + 0xFFFFF77C -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0888(32)

l1002A922:
	word32 ecx_243
	branch (dwLoc0884 & 0x00000000) == 0x00000000 l1002A9FB
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10007708 -2232(fp):0x1000392C -2228(fp):0x100076F4 -2224(fp):fp + 0xFFFFF77C -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0888(32)

l1002A92A:
	branch eax_201 < 0x00000000 l1002A9FB
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10007708 -2232(fp):0x1000392C -2228(fp):0x100076F4 -2224(fp):fp + 0xFFFFF77C -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0888(32)

l1002A9FB:
	eax_128 = fn1000CECD(fp + 0xFFFFF7D4, ecx, es, ds, out ecx_243, out edx_118)
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10007708 -2232(fp):0x1000392C -2228(fp):0x100076F4 -2224(fp):fp + 0xFFFFF77C -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A932:
	byte SCZO_379
	word32 eax_380
	byte SZO_381
	byte C_382
	word32 esi_385
	byte S_387
	byte Z_388
	byte CZ_389
	word16 ax_390
	word16 bx_393
	word16 si_394
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertStringSidToSidW (retsize: 4; depth: 2232)
		uses: ax_58,bx_18,C_369,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc0880_60,dwLoc0884_205,dwLoc088C,dwLoc0890,dwLoc0894_27,dwLoc0898_52,dwLoc08A4_15,dwLoc08A8_23,dwLoc08AC_31,dwLoc08B0_372,dwLoc08B4_375,dwLoc08B8_198,eax_373,ebp_7,ebx_17,ecx_221,edi_208,edx_220,es,esi_25,esp_374,S_368,SCZO_218,si_26,SZO_367,wLoc0216,wLoc0E,Z_223
		defs: ax_390,bx_393,C_382,CZ_389,ds_392,eax_380,ebp_378,ebx_383,ecx_386,edi_377,edx_384,es_391,esi_385,esp_376,S_387,SCZO_379,si_394,SZO_381,Z_388
	branch (fp - 0x00000624 & fp - 0x00000624) == 0x00000000 l1002A953
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000008AC edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:0x10007708 -2232(fp):0x1000392C -2228(fp):0x100076F4 -2224(fp):fp + 0xFFFFF77C -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0888(32)

l1002A953:
	eax_128 = fn100107F1()
	branch eax_128 < 0x00000000 l1002AB25
// DataOut: cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0888(32)

l1002A94A:
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32) Local -0888(32)

l1002A966:
	Mem406[esp_127 - 0x00000004:word32] = fp + 0xFFFFF764
	Mem409[esp_127 - 0x00000008:word32] = fp + 0xFFFFF774
	Mem412[esp_127 - 0x0000000C:word32] = fp - 0x00000214
	Mem415[esp_127 - 0x00000010:word32] = fp + 0xFFFFF770
	Mem418[esp_127 - 0x00000014:word32] = fp - 0x0000041C
	Mem422[esp_127 - 0x00000018:word32] = dwLoc0888
	branch LookupAccountSidLocalW(Mem422[esp_127 - 0x00000018:PSID], Mem422[esp_127 - 0x00000014:LPWSTR], Mem422[esp_127 - 0x00000010:LPDWORD], Mem422[esp_127 - 0x0000000C:LPWSTR], Mem422[esp_127 - 0x00000008:LPDWORD], Mem422[esp_127 - 0x00000004:PSID_NAME_USE]) == 0x00000000 l1002A9B3
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0880(32)

l1002A9B3:
	branch fn100107F1() < 0x00000000 l1002A9E7
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002A9AA:
// DataOut: cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002A9C2:
	Mem453[esp_127 - 0x00000004:word32] = esi_385
	word16 si_459
	Mem462[ebp_126 + 0xFFFFF784:word32] = fn10029FC6(dwArg00, out ecx_243, out edx_118, out si_459)
// DataOut: cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002A9E7:
	Mem440[esp_127 - 0x00000004:word32] = Mem422[ebp_126 + 0xFFFFF77C:word32]
	LocalFree(Mem440[esp_127 - 0x00000004:HLOCAL])
	eax_128 = Mem440[ebp_126 + 0xFFFFF784:word32]
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> -2232(fp):0x1000392C -2228(fp):fp - 0x00000624 -2224(fp):fp + 0xFFFFF778 -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA0E:
	branch eax_128 < 0x00000000 l1002AB25
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):0x1000392C -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA16:
	word32 esp_251 = esp_127 - 0x00000004
	Mem252[esp_251:word32] = ecx_243
	Mem256[esp_251 - 0x00000004:word32] = ebp_126 - 0x00000418
	Mem258[esp_251 - 0x00000008:word32] = 0x100077AC
	word32 ecx_261
	branch fn1001328F(0x80000002, 0x10003880, dwArg00, dwArg04, out ecx_261) < 0x00000000 l1002AA45
// DataOut: cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):0x1000392C -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA38:
	word32 edx_348
	fn1000CECD(ebp_126 - 0x00000418, ebx_17, es, ds, out ecx_261, out edx_348)
// DataOut: cs ds ebp ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:0x00000000 edx:0x10003880 ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA45:
	Mem269[esp_251:word32] = ecx_261
	Mem273[esp_251 - 0x00000004:word32] = ebp_126 - 0x00000210
	Mem275[esp_251 - 0x00000008:word32] = 0x100076D0
	edx_118 = 0x10003880
	word32 ecx_277
	branch fn1001328F(0x80000002, 0x10003880, dwArg00, dwArg04, out ecx_277) < 0x00000000 l1002AA88
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA62:
	Mem329[esp_251:word32] = 0x00000040
	Mem331[esp_251 - 0x00000004:word32] = ebp_126 - 0x00000210
	branch wcschr(Mem331[esp_251 - 0x00000004:(ptr wchar_t)], Mem331[esp_251:wchar_t]) == 0x00000000 l1002AA88
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:0x00000000 edx:0x10003880 ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA77:
	word32 ecx_342
	fn1000CECD(ebp_126 - 0x00000210, Mem331[ebp_126 + 0xFFFFF770:word32], es, ds, out ecx_342, out edx_118)
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:<invalid> edx:0x10003880 ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA88:
	eax_128 = Mem275[ebp_126 + 0xFFFFF784:word32]
	branch eax_128 < 0x00000000 l1002AB25
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA96:
	branch edi_208 < 0x00000000 l1002AB25
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AA9E:
	word32 ecx_297
	fn1000CECD(ebp_126 - 0x00000620, Mem275[ebp_126 + 0xFFFFF76C:word32], es, ds, out ecx_297, out edx_118)
	branch Mem275[0x10031000:word32] <=u 0x00000004 l1002AB8E
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AABC:
	fn1000C51D(ebp_126 + 0xFFFFF7A8, 0x10003428)
	fn1000C51D(ebp_126 + 0xFFFFF7B8, 0x1000788C)
	fn1000C58C(ebp_126 + 0xFFFFF7C8, ebp_126 - 0x00000620)
	word32 esp_310 = esp_127 - 0x00000004
	Mem311[esp_310:word32] = ebp_126 + 0xFFFFF788
	Mem313[esp_310 - 0x00000004:word32] = 0x00000005
	Mem315[esp_310 - 0x00000008:word32] = 0x00000000
	Mem317[esp_310 - 0x0000000C:word32] = 0x00000000
	word32 ecx_319
	word32 esi_321
	word32 edi_322
	fn1000C491(0x10031000, 0x1000BD1D, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_319, out edx_118, out esi_321, out edi_322)
	esp_127 = esp_310 + 0x00000004
	eax_128 = Mem317[ebp_126 + 0xFFFFF784:word32]
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:0x10003880 ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AB25:
	branch Mem47[0x10031000:word32] <=u 0x00000004 l1002AB94
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -2236(fp):0x00000000 -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002AB2E:
	fn1000C51D(ebp_126 + 0xFFFFF7A8, 0x10003428)
	fn1000C51D(ebp_126 + 0xFFFFF7B8, 0x10003D54)
	Mem163[ebp_126 + 0xFFFFF7CC:word32] = Mem47[ebp_126 + 0xFFFFF7CC:word32] & 0x00000000
	Mem167[ebp_126 + 0xFFFFF7D4:word32] = Mem163[ebp_126 + 0xFFFFF7D4:word32] & 0x00000000
	Mem170[ebp_126 + 0xFFFFF7C8:word32] = ebp_126 + 0xFFFFF784
	Mem171[ebp_126 + 0xFFFFF7D0:word32] = 0x00000004
	word32 esp_174 = esp_127 - 0x00000004
	Mem175[esp_174:word32] = ebp_126 + 0xFFFFF788
	Mem177[esp_174 - 0x00000004:word32] = 0x00000005
	Mem179[esp_174 - 0x00000008:word32] = 0x00000000
	Mem181[esp_174 - 0x0000000C:word32] = 0x00000000
	word32 ecx_185
	word32 esi_187
	word32 edi_188
	fn1000C491(0x10031000, 0x1000BCCD, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_185, out edx_118, out esi_187, out edi_188)
	esp_127 = esp_174 + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -2236(fp):0x00000000 -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp

l1002AB8E:
	eax_128 = Mem47[ebp_126 + 0xFFFFF784:word32]
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -2236(fp):0x00000000 -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -2108(fp):fp + 0xFFFFF780 -2104(fp):<invalid> -2100(fp):0x00000004 -2096(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp

l1002AB94:
	word32 esp_86 = esp_127 + 0x00000004
	word32 ebx_92 = Mem47[esp_86 + 0x00000004:word32]
	word16 bx_93
	*bxOut = (word16) ebx_92
	word32 ecx_95
	return fn1002F420(eax_128, Mem47[ebp_126 - 0x00000004:word32] ^ ebp_126, edx_118, ebx_92, ebp_126, Mem47[esp_86:word32], Mem47[esp_127:word32], es, ds, out ecx_95)
// DataOut: bl bx cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -2236(fp):0x00000000 -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -2108(fp):fp + 0xFFFFF780 -2104(fp):<invalid> -2100(fp):0x00000004 -2096(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp

fn1002A869_exit:
// DataOut: bl bx eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -2236(fp):0x00000000 -2232(fp):<invalid> -2228(fp):<invalid> -2224(fp):<invalid> -2220(fp):edi -2216(fp):esi -2212(fp):ebx -2200(fp):<invalid> -2196(fp):edx -2192(fp):0x00000104 -2188(fp):0x00000104 -2180(fp):<invalid> -2176(fp):<invalid> -2108(fp):fp + 0xFFFFF780 -2104(fp):<invalid> -2100(fp):0x00000004 -2096(fp):<invalid> -534(fp):ax -14(fp):ax -8(fp):<invalid> -4(fp):ebp



word32 fn1002ABA7(byte cl, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cl cs ds ebp edx es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002ABA7_entry:
// DataOut: cl cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002ABA7:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem31[dwArg04:word32] = 0x00000000
	word32 esi_35
	word32 edi_146
	word32 eax_37 = fn100106F6(fp - 0x00000070, edx, dwArg04, esi, es, ds, out esi_35, out edi_146)
	word32 eax_48 = CoCreateInstance(0x1000386C, edi_146, 0x00000005, 0x10003794, eax_37)
	word32 ebp_182 = fp - 0x00000004
	word32 esp_180 = fp - 0x00000090
	word32 esi_149 = eax_48
	word32 dwLoc68_198 = eax_48
	branch eax_48 < 0x00000000 l1002AC93
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0061(32) Local -0068(32) Local -0080(32)

l1002ABF8:
	word32 esp_163
	word32 edi_164
	word32 ebp_165
	byte SCZO_166
	word32 eax_167
	byte SZO_168
	byte C_169
	word32 ebx_170
	word32 esi_171
	byte cl_172
	word32 ecx_173
	word32 edx_174
	byte S_175
	byte CZ_176
	byte Z_177
	selector es_178
	selector ds_179
	call Mem31[0x100323BC:word32] (retsize: 4; depth: 160)
		uses: bLoc61_24,C_54,cl,CZ,ds,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc68_51,dwLoc6C_154,dwLoc70_32,dwLoc74,dwLoc78,dwLoc7C,dwLoc80_30,dwLoc88_15,dwLoc8C_20,dwLoc90_22,dwLoc94_153,dwLoc98_156,dwLoc9C_159,dwLocA0_45,dwLocA4_47,eax_150,ebp_7,ebx_17,ecx_160,edi_36,edx,es,esi_157,esp_158,S_53,SCZO,SZO_52,Z
		defs: C_169,cl_172,CZ_176,ds_179,eax_167,ebp_165,ebx_170,ecx_173,edi_164,edx_174,es_178,esi_171,esp_163,S_175,SCZO_166,SZO_168,Z_177
	byte SCZO_183
	word32 eax_184
	byte SZO_185
	byte C_186
	word32 ebx_187
	word32 esi_188
	byte cl_189
	word32 ecx_190
	word32 edx_191
	byte S_192
	byte CZ_193
	byte Z_194
	call Mem31[esi_171:word32] (retsize: 4; depth: 4)
		uses: bLoc61_24,C_169,cl_172,CZ_176,ds_179,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc68_51,dwLoc6C_154,dwLoc70_32,dwLoc74,dwLoc78,dwLoc7C,dwLoc80_30,dwLoc88_15,dwLoc8C_20,dwLoc90_22,dwLoc94_153,dwLoc98_156,dwLoc9C_159,dwLocA0_45,dwLocA4_47,eax_167,ebp_165,ebx_170,ecx_173,edi_164,edx_174,es_178,esi_171,esp_163,S_175,SCZO_166,SZO_168,Z_177
		defs: C_186,cl_189,CZ_193,ds_196,eax_184,ebp_182,ebx_187,ecx_190,edi_181,edx_191,es_195,esi_188,esp_180,S_192,SCZO_183,SZO_185,Z_194
	esi_149 = eax_184
	dwLoc68_198 = eax_184
	branch eax_184 < 0x00000000 l1002AC76
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000090 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):0x00000005 -152(fp):0x10003794 -148(fp):<invalid> -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -112(fp):0x00000000 -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0061(32) Local -0068(32) Local -006C(32) Local -0080(32)

l1002AC1D:
	fn1000F2EE(fp - 0x0000007C)
	Mem279[esp_180 - 0x00000004:word32] = fp - 0x0000007C
	Mem282[esp_180 - 0x00000008:word32] = edx
	word32 eax_283 = (word32) cl
	Mem286[esp_180 - 0x0000000C:word32] = eax_283
	Mem288[esp_180 - 0x00000010:word32] = edi_146
	word32 esp_289
	word32 edi_290
	word32 ebp_291
	byte SCZO_292
	word32 eax_293
	byte SZO_294
	byte C_295
	word32 ebx_296
	word32 esi_297
	byte cl_298
	word32 ecx_299
	word32 edx_300
	byte S_301
	byte CZ_302
	byte Z_303
	selector es_304
	selector ds_305
	call Mem288[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: bLoc61_24,C_276,cl_189,CZ_193,ds_196,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc68_198,dwLoc6C_154,dwLoc70_32,dwLoc74_274,dwLoc78_270,dwLoc7C_264,dwLoc80_30,dwLoc88_15,dwLoc8C_20,dwLoc90_22,dwLoc94_153,dwLoc98_156,dwLoc9C_159,dwLocA0_45,dwLocA4_47,eax_283,ebp_182,ebx_187,ecx_284,edi_268,edx_191,es_195,esi_277,esp_287,S_200,SCZO_183,SZO_275,Z_194
		defs: C_295,cl_298,CZ_302,ds_305,eax_293,ebp_291,ebx_296,ecx_299,edi_290,edx_300,es_304,esi_297,esp_289,S_301,SCZO_292,SZO_294,Z_303
	word32 edi_307
	byte SCZO_309
	word32 eax_310
	byte SZO_311
	byte C_312
	word32 ebx_313
	word32 esi_314
	byte cl_315
	word32 ecx_316
	word32 edx_317
	byte S_318
	byte CZ_319
	byte Z_320
	call Mem288[esi_297 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: bLoc61_24,C_295,cl_298,CZ_302,ds_305,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc68_198,dwLoc6C_154,dwLoc70_32,dwLoc74_274,dwLoc78_270,dwLoc7C_264,dwLoc80_30,dwLoc88_15,dwLoc8C_20,dwLoc90_22,dwLoc94_153,dwLoc98_156,dwLoc9C_159,dwLocA0_45,dwLocA4_47,eax_293,ebp_291,ebx_296,ecx_299,edi_290,edx_300,es_304,esi_297,esp_289,S_301,SCZO_292,SZO_294,Z_303
		defs: C_312,cl_315,CZ_319,ds_322,eax_310,ebp_308,ebx_313,ecx_316,edi_307,edx_317,es_321,esi_314,esp_306,S_318,SCZO_309,SZO_311,Z_320
	edi_146 = 0x00000000
	dwLoc68_198 = eax_310
	branch eax_310 < 0x00000000 l1002AC6B
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):0x00000000 -152(fp):0x1000385C -148(fp):fp - 0x0000006C -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0068(32) Local -006C(32) Local -007C(32)

l1002AC5D:
	Mem338[ebx_313:word32] = edi_146
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):0x00000000 -152(fp):0x1000385C -148(fp):fp - 0x0000006C -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0068(32) Local -006C(32)

l1002AC6B:
	fn1000F2EE(fp - 0x0000007C)
	esi_149 = eax_310
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):0x00000000 -152(fp):0x1000385C -148(fp):fp - 0x0000006C -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0068(32) Local -006C(32)

l1002AC76:
	branch edi_146 == 0x00000000 l1002AC93
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):0x00000000 -152(fp):0x1000385C -148(fp):fp - 0x0000006C -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0068(32)

l1002AC7D:
	word32 esp_225 = esp_180 - 0x00000004
	Mem226[esp_225:word32] = edi_146
	word32 esp_229
	word32 edi_230
	word32 ebp_231
	byte SCZO_232
	word32 eax_233
	byte SZO_234
	byte C_235
	word32 ebx_236
	word32 esi_237
	byte cl_238
	word32 ecx_239
	word32 edx_240
	byte S_241
	byte CZ_242
	byte Z_243
	selector es_244
	selector ds_245
	call Mem226[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: bLoc61_24,C_222,cl_219,CZ_210,ds_206,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc68_202,dwLoc6C_223,dwLoc70_32,dwLoc74_204,dwLoc78_205,dwLoc7C_203,dwLoc80_30,dwLoc88_15,dwLoc8C_20,dwLoc90_22,dwLoc94_153,dwLoc98_156,dwLoc9C_159,dwLocA0_45,dwLocA4_47,eax_224,ebp_216,ebx_214,ecx_228,edi_212,edx_211,es_207,esi_227,esp_225,S_208,SCZO_209,SZO_220,Z_221
		defs: C_235,cl_238,CZ_242,ds_245,eax_233,ebp_231,ebx_236,ecx_239,edi_230,edx_240,es_244,esi_237,esp_229,S_241,SCZO_232,SZO_234,Z_243
	byte SCZO_249
	word32 eax_250
	byte SZO_251
	byte C_252
	word32 ebx_253
	word32 esi_254
	byte cl_255
	word32 ecx_256
	word32 edx_257
	byte S_258
	byte CZ_259
	byte Z_260
	call esi_237 (retsize: 4; depth: 4)
		uses: bLoc61_24,C_235,cl_238,CZ_242,ds_245,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc18,dwLoc1C,dwLoc20,dwLoc68_202,dwLoc6C_223,dwLoc70_32,dwLoc74_204,dwLoc78_205,dwLoc7C_203,dwLoc80_30,dwLoc88_15,dwLoc8C_20,dwLoc90_22,dwLoc94_153,dwLoc98_156,dwLoc9C_159,dwLocA0_45,dwLocA4_47,eax_233,ebp_231,ebx_236,ecx_239,edi_230,edx_240,es_244,esi_237,esp_229,S_241,SCZO_232,SZO_234,Z_243
		defs: C_252,cl_255,CZ_259,ds_262,eax_250,ebp_248,ebx_253,ecx_256,edi_247,edx_257,es_261,esi_254,esp_246,S_258,SCZO_249,SZO_251,Z_260
	esi_149 = dwLoc68_198
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):0x00000000 -152(fp):0x1000385C -148(fp):fp - 0x0000006C -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0068(32)

l1002AC93:
	word32 esp_82 = esp_180 - 0x00000004
	Mem83[esp_82:word32] = 0x00000004
	word32 ebx_84 = Mem83[esp_82:word32]
	branch Mem83[0x10031000:word32] <=u ebx_84 l1002ACE1
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -000C(32) Local -0068(32)

l1002AC9E:
	fn1000C51D(fp - 0x00000040, 0x10003428)
	fn1000C51D(fp - 0x00000030, 0x10003D54)
	Mem132[esp_82:word32] = fp - 0x00000060
	Mem134[esp_82 - 0x00000004:word32] = 0x00000005
	Mem136[esp_82 - 0x00000008:word32] = edi_146
	Mem138[esp_82 - 0x0000000C:word32] = edi_146
	word32 ecx_143
	word32 edx_144
	word32 esi_145
	fn1000C491(0x10031000, 0x1000BC86, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_143, out edx_144, out esi_145, out edi_146)
	esi_149 = dwLoc68_198
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002ACE1:
	word32 edx_100
	word32 esi_101
	fn1000C640(fp - 0x00000070, ebx_84, esi_149, edi_146, es, ds, out edx_100, out esi_101)
	word32 esp_106 = esp_180 + 0x00000004
	word32 ecx_114
	return fn1002F420(esi_101, eax_11 ^ fp - 0x00000004, edx_100, Mem83[esp_106 + 0x00000004:word32], ebp_182, Mem83[esp_106:word32], Mem83[esp_180:word32], es, ds, out ecx_114)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -32(fp):fp - 0x00000068 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1002ABA7_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -164(fp):0x1000386C -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):edi -140(fp):esi -136(fp):ebx -128(fp):edx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):0x00000000 -108(fp):<invalid> -104(fp):<invalid> -97(fp):cl -32(fp):fp - 0x00000068 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



byte fn1002ACFE(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: al
// Trashed: SCZO ah al ax bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx rax rbx rcx rdi rdx
// Preserved: ebp ebx ecx edi esi esp
fn1002ACFE_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(0) Local -000C(0) Local -0010(0)

l1002ACFE:
	word32 ebx_22 = DPB(ebx, 0x00, 0)
	byte bl_21 = 0x00
	word32 esi_27
	word32 edi_28
	branch fn1002ECA1(ecx, 0x1000319C, ebx_22, es, ds, fp - 0x00000008, out esi_27, out edi_28) < 0x00000000 l1002AD26
// DataOut: bl cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(0) Local -000C(0) Local -0010(0)

l1002AD1E:
	branch dwLoc08 == 0x00000001 l1002AD26
// DataOut: bl cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x1000319C esi:<invalid> bl:0x00 ecx:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(0)

l1002AD24:
	bl_21 = 0x01
	ebx_22 = DPB(ebx, 0x01, 0) (alias)
// DataOut: bl cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x1000319C esi:<invalid> bl:0x00 ecx:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(0)

l1002AD26:
	word32 esi_45
	branch fn1002ED0F(esi_27, 0x10003214, ebx_22, edi_28, es, ds, fp - 0x0000000C, out esi_45) < 0x00000000 l1002AD42
// DataOut: bl cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x1000319C esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x00000008 -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0010(0)

l1002AD3A:
	branch dwLoc0C == 0x00000000 l1002AD42
// DataOut: bl cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x10003214 esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x0000000C -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0010(0)

l1002AD40:
	bl_21 = 0x01
	ebx_22 = DPB(ebx_22, 0x01, 0) (alias)
// DataOut: bl cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x10003214 esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x0000000C -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0010(0)

l1002AD42:
	word32 esi_60
	word32 edi_61
	branch fn1002ECA1(esi_45, 0x10003188, ebx_22, es, ds, fp - 0x00000010, out esi_60, out edi_61) < 0x00000000 l1002AD5E
// DataOut: bl cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x10003214 esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x0000000C -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0010(0)

l1002AD56:
	branch (bLoc10 & 0x01) == 0x00 l1002AD5E
// DataOut: bl cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x10003188 esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x00000010 -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002AD5C:
	bl_21 = 0x01
// DataOut: bl cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x10003188 esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x00000010 -28(fp):esi -24(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002AD5E:
	return bl_21
// DataOut: al cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000001C edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:0x10003188 esi:<invalid> bl:<invalid> ecx:<invalid> -32(fp):fp - 0x00000010 -28(fp):esi -24(fp):ebx -4(fp):ebp

fn1002ACFE_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> edx:0x10003188 esi:esi bl:<invalid> ecx:<invalid> al:<invalid> ebx:ebx -32(fp):fp - 0x00000010 -28(fp):esi -24(fp):ebx -4(fp):ebp



word32 fn1002AD66(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ecx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002AD66_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002AD66:
	word32 edx_19
	*edxOut = 0x100032A0
	word32 esi_23
	word32 eax_24 = fn1002EE81(ecx, 0x100032A0, ebx, edx, es, ds, edx, out esi_23)
	branch eax_24 < 0x00000000 l1002ADAF
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002AD80:
	word32 edx_51
	*edxOut = 0x100032B4
	word32 esi_53
	eax_24 = fn1002EE81(esi_23, 0x100032B4, ebx, edx, es, ds, dwArg04, out esi_53)
	branch eax_24 < 0x00000000 l1002ADAF
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebp:fp - 0x00000004 esi:<invalid> edx:0x100032A0 eax:<invalid> ecx:<invalid> -16(fp):edx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Stack +0008(32)

l1002AD93:
	word32 eax_60 = dwArg08
	branch dwArg08 == 0x00000000 l1002ADA0
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebp:fp - 0x00000004 esi:<invalid> edx:0x100032B4 ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002AD9A:
	branch Mem0[dwArg08:word16] != 0x0000 l1002ADA2
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebp:fp - 0x00000004 esi:<invalid> edx:0x100032B4 ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002ADA0:
	eax_60 = edx
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebp:fp - 0x00000004 esi:<invalid> edx:0x100032B4 ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002ADA2:
	word32 edx_69
	*edxOut = 0x10003304
	word32 esi_71
	eax_24 = fn1002EE81(esi_53, 0x10003304, ebx, edx, es, ds, eax_60, out esi_71)
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebp:fp - 0x00000004 esi:<invalid> edx:0x100032B4 ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002ADAF:
	return eax_24
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebp:fp - 0x00000004 esi:<invalid> edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn1002AD66_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi edx:<invalid> ecx:<invalid> eax:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn1002ADB5(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut: eax ebx ecx edi esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002ADB5_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0120(32) Stack +0004(32)

l1002ADB5:
	Mem32[dwArg04:word32] = 0x00000000
	word32 esi_42
	word32 edi_43
	word32 eax_44 = fn1000FC32(edx, ecx, esi, es, ds, fp - 0x0000009C, out esi_42, out edi_43)
	word32 esp_50
	word32 ebp_52
	byte SCZO_53
	word32 eax_54
	byte SZO_55
	byte C_56
	word32 ecx_58
	word32 esi_59
	word32 edx_60
	byte S_61
	byte cl_62
	byte Z_63
	byte CZ_64
	word16 si_65
	byte SO_66
	byte al_67
	byte bl_68
	byte bh_69
	byte dl_70
	selector es_71
	selector ds_72
	word32 ebx_137
	word32 edi_131
	call PROPSYS.dll!PSCreateMemoryPropertyStore (retsize: 4; depth: 292)
		uses: bh_21,bl_20,C_25,ds,dwLoc0100_36,dwLoc0110_17,dwLoc0114_29,dwLoc0118_31,dwLoc011C_47,dwLoc0120_49,dwLoc04_6,dwLoc0C_12,dwLoc9C_39,dwLocD4_22,dwLocFC_26,eax_44,ebp_7,ebx_19,ecx_23,edi_43,edx,es,esi_42,esp_48,SZO_24
		defs: al_67,bh_69,bl_68,C_56,cl_62,CZ_64,dl_70,ds_72,eax_54,ebp_52,ebx_57,ecx_58,edi_51,edx_60,es_71,esi_59,esp_50,S_61,SCZO_53,si_65,SO_66,SZO_55,Z_63
	word32 esi_132 = eax_54
	word16 si_231 = (word16) eax_54
	branch eax_54 < 0x00000000 l1002B460
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1002AE18:
	Mem213[esp_50 - 0x00000004:word32] = 0x00000010
	Mem215[esp_50 - 0x00000008:word32] = 0x1000794C
	Mem217[esp_50 - 0x0000000C:word32] = edi_131
	word32 eax_218 = memcmp(Mem217[esp_50 - 0x0000000C:(ptr void)], Mem217[esp_50 - 0x00000008:(ptr void)], Mem217[esp_50 - 0x00000004:size_t])
	branch eax_218 == 0x00000000 l1002AEC1
// DataOut: cl cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -256(fp):edx -252(fp):0x00000000 -212(fp):<invalid> -156(fp):0x00000000 -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(8)

l1002AE3B:
	word32 dwLoc94_879
	fn1000F2EE(fp - 0x000000B4)
	Mem868[esp_50 - 0x00000004:word32] = fp - 0x000000B4
	word32 esi_871
	word32 edi_872
	branch fn1002EC33(ebx_137, 0x100031D8, ebx_137, es_71, ds_72, dwArg00, out esi_871, out edi_872) < 0x00000000 l1002AEA4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:Test(NE,Z) -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -256(fp):edx -252(fp):0x00000000 -212(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(8) Local -00B4(32)

l1002AE87:
	Mem902[esp_50 - 0x00000004:word32] = 0x00000000
	word32 esi_905
	word32 eax_906 = fn1002EE81(0x00000000, esi_871, ebx_137, edi_872, es_71, ds_72, dwArg00, out esi_905)
	dwLoc94_879 = eax_906
	branch eax_906 >= 0x00000000 l1002AEAA
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x100031D8 -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -256(fp):edx -252(fp):0x00000000 -212(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0094(32) Local -0095(8)

l1002AEA4:
	dwLoc94_879 = edi_872
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -256(fp):edx -252(fp):0x00000000 -212(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0094(32) Local -0095(8)

l1002AEAA:
	fn1000F2EE(fp - 0x000000B4)
	esi_132 = dwLoc94_879
	si_231 = (word16) dwLoc94_879 (alias)
// DataOut: cl cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -256(fp):edx -252(fp):0x00000000 -212(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0)

l1002AEC1:
	edi_131 = 0x00000000
	branch esi_132 < 0x00000000 l1002B418
// DataOut: cl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:Test(NE,Z) edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -256(fp):edx -252(fp):0x00000000 -212(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0) Local -00AC(32) Local -00B0(32) Local -00B8(32) Local -00BC(32) Local -00C0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002AF3F:
	word32 edx_301
	branch eax_218 != 0x00000000 == 0x00 l1002AF5A
// DataOut: cs ds ebp ebx ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:Test(NE,Z) edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0) Local -00AC(32) Local -00B0(32) Local -00B8(32) Local -00BC(32) Local -00C0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002AF5A:
	fn1000F2EE(fp - 0x000000C0)
	edx_301 = 0x100032A0
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:fp - 0x000000C0 esi:0x100032A0 cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0) Local -00AC(32) Local -00B0(32) Local -00B8(32) Local -00BC(32) Local -00C0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002AF4E:
	fn1000F2EE(fp - 0x000000C0)
	edx_301 = 0x100031EC
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:fp - 0x000000C0 esi:0x100032A0 cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0) Local -00AC(32) Local -00B0(32) Local -00B8(32) Local -00BC(32) Local -00C0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002AF61:
	Mem312[esp_50 - 0x00000004:word32] = fp - 0x000000C0
	word32 esi_313
	branch fn1002EC33(ebx_137, edx_301, ebx_137, es_71, ds_72, dwArg00, out esi_313, out edi_131) < 0x00000000 l1002B418
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:fp - 0x000000C0 esi:0x100032A0 cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0) Local -00AC(32) Local -00B0(32) Local -00C0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002AF8B:
	Mem323[esp_50 - 0x00000004:word32] = 0x00000000
	word32 esi_326
	branch fn1002EE81(0x00000000, esi_313, ebx_137, edi_131, es_71, ds_72, dwArg00, out esi_326) < 0x00000000 l1002B418
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0095(0) Local -00AC(32) Local -00B0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002AFAC:
	word32 eax_755
	word32 esi_362
	fn1000F2EE(fp - 0x000000A8)
	Mem352[esp_50 - 0x00000004:word32] = fp - 0x000000A8
	branch eax_218 != 0x00000000 == 0x00 l1002B036
// DataOut: cs ds ebp ebx ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:0x00 edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00AC(32) Local -00B0(32) Local -00D8(32) Local -00DC(32) Local -00E0(32)

l1002B036:
	word32 edi_838
	word32 eax_839 = fn1002EC33(ebx_137, 0x1000328C, ebx_137, es_71, ds_72, dwArg00, out esi_362, out edi_838)
	fn1000F2EE(fp - 0x000000E0)
	eax_755 = eax_839
	edi_131 = 0x00000000
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:fp - 0x000000A8 ebx:ecx ecx:fp - 0x000000A8 esi:<invalid> cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D8(32) Local -00DC(32)

l1002AFEB:
	branch fn1002EC33(ebx_137, 0x1000323C, ebx_137, es_71, ds_72, dwArg00, out esi_362, out edi_131) < 0x00000000 l1002B0C2
// DataOut: cs ds ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:fp - 0x000000A8 ebx:ecx ecx:fp - 0x000000A8 esi:<invalid> cl:<invalid> edx:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00AC(32) Local -00B0(32) Local -00D8(32) Local -00DC(32)

l1002B003:
	fn1000F2EE(fp - 0x000000B4)
	Mem831[esp_50 - 0x00000004:word32] = fp - 0x000000B4
	eax_755 = fn1001DDA5(fp - 0x000000A8, dwArg00)
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x1000323C -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D8(32) Local -00DC(32)

l1002B05D:
	branch eax_755 < 0x00000000 l1002B0C2
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D8(32) Local -00DC(32)

l1002B061:
	branch edi_131 == 0x00000000 l1002B06A
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D8(32) Local -00DC(32)

l1002B065:
	branch Mem352[edi_131:word16] != si_231 l1002B0A7
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -00D8(32) Local -00DC(32)

l1002B06A:
	fn1000F2EE(fp - 0x000000E0)
	Mem800[esp_50 - 0x00000004:word32] = fp - 0x000000E0
	word32 ecx_801
	word32 edx_802
	eax_755 = fn10029FC6(dwArg00, out ecx_801, out edx_802, out si_231)
	edi_131 = Mem800[ebp_52 - 0x000000DC:word32]
	Mem808[ebp_52 - 0x00000090:word32] = eax_755
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B0A7:
	branch eax_755 < 0x00000000 l1002B0C2
// DataOut: cs ds ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B0AB:
	word32 ecx_778 = Mem352[ebp_52 - 0x00000098:word32]
	Mem781[esp_50 - 0x00000004:word32] = edi_131
	Mem785[ebp_52 - 0x00000090:word32] = fn1002EE81(ecx_778, 0x100032B4, ebx_137, edi_131, es_71, ds_72, dwArg00, out esi_362)
// DataOut: cs ds ebp ebx edi es esi esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B0C2:
	fn1000F2EE(ebp_52 - 0x000000A4)
	branch Mem352[ebp_52 - 0x00000090:word32] < esi_362 l1002B418
// DataOut: cs ds ebp ebx edi es esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B0D9:
	word32 eax_372 = Mem352[ebp_52 - 0x000000CC:word32]
	word32 edi_374 = 0x10003304
	branch eax_372 == 0x00000000 l1002B0ED
// DataOut: cs ds eax ebp ebx es esp fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B0E8:
	branch Mem352[eax_372:word16] != si_231 l1002B134
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x10003304 ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B0ED:
	fn1000F2EE(ebp_52 - 0x000000CC)
	Mem726[ebp_52 - 0x000000C8:word32] = Mem352[ebp_52 - 0x000000C8:word32] | 0xFFFFFFFF
	Mem730[ebp_52 - 0x000000C4:word32] = Mem726[ebp_52 - 0x000000C4:word32] | 0xFFFFFFFF
	Mem735[esp_50 - 0x00000004:word32] = ebp_52 - 0x000000CC
	branch Mem730[ebp_52 - 0x00000091:byte] == 0x00 l1002B12B
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x10003304 ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B12B:
	word32 esi_742
	fn1002EC33(ebx_137, 0x10003304, ebx_137, es_71, ds_72, dwArg00, out esi_742, out edi_374)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x10003304 ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B134:
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B116:
	word32 esi_736 = Mem735[ebp_52 - 0x000000B0:word32]
	fn1002A1AC(esi_736, esi_736, es_71, ds_72, dwArg00)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x10003304 ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B13A:
	byte bl_394
	word32 ebx_393
	word32 ecx_382
	word32 edx_383
	word32 esi_385
	word32 ebx_384
	branch fn1000CDA9(es_71, ds_72, out ecx_382, out edx_383, out ebx_384, out esi_385) != 0x00 l1002B152
// DataOut: cs ds ebp ecx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B143:
	word32 edx_702
	branch fn1002D5B3(ecx_382, esi_385, es_71, ds_72, out edx_702, out ebx_384, out esi_385) != 0x00 l1002B152
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B152:
	bl_394 = 0x01
	ebx_393 = DPB(ebx_384, 0x01, 0) (alias)
// DataOut: bl cs ds eax ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B14C:
	bl_394 = 0x00
	ebx_393 = DPB(ebx_384, 0x00, 0) (alias)
// DataOut: bl cs ds eax ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B156:
	Mem398[ebp_52 - 0x000000A4:word32] = 0x00000000
	Mem399[ebp_52 - 0x000000A0:word32] = 0x00000000
	Mem400[ebp_52 - 0x0000009C:word32] = 0x00000000
	fn1000F2EE(ebp_52 - 0x000000A4)
	byte bh_401 = Mem400[ebp_52 - 0x00000091:byte]
	Mem404[ebp_52 - 0x000000A0:word32] = Mem400[ebp_52 - 0x000000A0:word32] | 0xFFFFFFFF
	Mem409[ebp_52 - 0x0000009C:word32] = Mem404[ebp_52 - 0x0000009C:word32] | 0xFFFFFFFF
	Mem415[esp_50 - 0x00000004:word32] = ebp_52 - 0x000000A4
	Mem418[esp_50 - 0x00000008:word32] = Mem415[ebp_52 - 0x000000CC:word32]
	Mem422[esp_50 - 0x0000000C:word32] = Mem418[ebp_52 - 0x000000BC:word32]
	Mem424[esp_50 - 0x00000010:word32] = esi_385
	word32 edx_425
	word32 eax_426 = fn1002A67F(bl_394, bh_401 ^ 0x01, dwArg00, dwArg04, dwArg08, dwArg0C, out edx_425)
	Mem428[ebp_52 - 0x00000090:word32] = eax_426
	ebx_137 = DPB(ebx_393, bh_401 ^ 0x01, 8) (alias)
	branch eax_426 < 0x00000000 l1002B1CE
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B1B1:
	Mem679[esp_50 - 0x00000004:word32] = Mem428[ebp_52 - 0x000000A4:word32]
	word32 esi_682
	word32 eax_683 = fn1002EE81(Mem679[ebp_52 - 0x00000098:word32], edi_374, ebx_137, edi_374, es_71, ds_72, dwArg00, out esi_682)
	Mem685[ebp_52 - 0x00000090:word32] = eax_683
	branch eax_683 >= 0x00000000 l1002B1D8
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B1D8:
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B1CE:
	Mem676[ebp_52 - 0x00000090:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B1DA:
	fn1000F2EE(ebp_52 - 0x000000A4)
	edi_131 = 0x00000000
	branch Mem428[ebp_52 - 0x00000090:word32] < 0x00000000 l1002B418
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B1F2:
	word32 esi_443 = Mem428[ebp_52 - 0x000000F8:word32]
	Mem447[esp_50 - 0x00000004:word32] = ebp_52 - 0x000000C0
	word32 edi_452
	word32 esi_451
	word32 eax_453 = fn1002ECA1(esi_443, 0x10003264, ebx_137, es_71, ds_72, dwArg00, out esi_451, out edi_452)
	Mem456[ebp_52 - 0x00000090:word32] = eax_453
	word32 edx_448 = 0x10003264
	branch eax_453 < 0x00000000 l1002B2F5
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B219:
	branch Mem456[ebp_52 - 0x000000C0:word32] == 0x00000000 l1002B22F
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x10003264 al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0x64 -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B222:
	branch Mem456[ebp_52 - 0x000000C0:word32] != 0x00000004 l1002B2F1
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x10003264 al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0x64 -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B22F:
	Mem606[ebp_52 - 0x000000F4:word32] = 0x00000000
	Mem607[ebp_52 - 0x000000F0:word32] = 0x00000000
	Mem608[ebp_52 - 0x000000EC:word32] = 0x00000000
	Mem609[ebp_52 - 0x000000A4:word32] = 0x00000000
	Mem610[ebp_52 - 0x000000A0:word32] = 0x00000000
	Mem611[ebp_52 - 0x0000009C:word32] = 0x00000000
	fn1000F2EE(ebp_52 - 0x000000A4)
	Mem617[esp_50 - 0x00000004:word32] = ebp_52 - 0x000000A4
	Mem619[ebp_52 - 0x000000A0:word32] = edi_452 | 0xFFFFFFFF
	Mem621[ebp_52 - 0x0000009C:word32] = edi_452 | 0xFFFFFFFF
	word32 edi_623
	fn1002EC33(esi_451, 0x10003278, ebx_137, es_71, ds_72, dwArg00, out esi_451, out edi_623)
	fn1000F2EE(ebp_52 - 0x000000F4)
	word32 edx_627 = Mem621[ebp_52 - 0x000000A4:word32]
	Mem631[esp_50 - 0x00000004:word32] = ebp_52 - 0x000000F4
	Mem635[ebp_52 - 0x000000F0:word32] = edi_623
	Mem636[ebp_52 - 0x000000EC:word32] = edi_623
	word32 eax_638 = fn1002ABA7(0x00, edx_627, ebp_52, esi_451, es_71, ds_72, dwArg00, out edx_448)
	Mem640[ebp_52 - 0x00000090:word32] = eax_638
	branch eax_638 < 0x00000000 l1002B2D3
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x10003264 al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0x64 -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B2B7:
	Mem657[esp_50 - 0x00000004:word32] = Mem640[ebp_52 - 0x000000F4:word32]
	Mem664[ebp_52 - 0x00000090:word32] = fn1002EE81(Mem657[ebp_52 - 0x00000098:word32], 0x100032F0, ebx_137, edi_623, es_71, ds_72, dwArg00, out esi_451)
	edx_448 = 0x100032F0
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B2D3:
	fn1000F2EE(ebp_52 - 0x000000A4)
	fn1000F2EE(ebp_52 - 0x000000F4)
	eax_453 = Mem640[ebp_52 - 0x00000090:word32]
	edi_452 = 0x00000000
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B2F1:
	branch eax_453 >= 0x00000000 l1002B2FB
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B2F5:
	Mem583[ebp_52 - 0x00000090:word32] = edi_452
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B2FB:
	fn1000F2EE(ebp_52 - 0x000000E8)
	Mem470[ebp_52 - 0x000000E4:word32] = Mem456[ebp_52 - 0x000000E4:word32] | 0xFFFFFFFF
	Mem474[ebp_52 - 0x000000E0:word32] = Mem470[ebp_52 - 0x000000E0:word32] | 0xFFFFFFFF
	Mem479[esp_50 - 0x00000004:word32] = ebp_52 - 0x000000E8
	word32 esi_480
	word32 eax_482 = fn1002ED84(esi_451, edx_448, ebx_137, es_71, ds_72, dwArg00, out esi_480, out edi_131)
	Mem484[ebp_52 - 0x00000090:word32] = eax_482
	branch eax_482 < 0x00000000 l1002B418
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B330:
	Mem490[esp_50 - 0x00000004:word32] = Mem484[ebp_52 - 0x000000E8:word32]
	word32 esi_494
	word32 eax_495 = fn1002EE81(Mem490[ebp_52 - 0x00000098:word32], 0x100032DC, ebx_137, edi_131, es_71, ds_72, dwArg00, out esi_494)
	Mem497[ebp_52 - 0x00000090:word32] = eax_495
	branch eax_495 < 0x00000000 l1002B418
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B354:
	word32 ecx_503 = Mem497[ebp_52 - 0x00000098:word32]
	Mem505[esp_50 - 0x00000004:word32] = Mem497[ebp_52 - 0x000000FC:word32]
	word32 esi_507
	word32 eax_509 = fn1002EE15(ecx_503, 0x100032DC, es_71, ds_72, dwArg00, out ebx_137, out esi_507, out edi_131)
	Mem511[ebp_52 - 0x00000090:word32] = eax_509
	branch eax_509 < 0x00000000 l1002B418
// DataOut: bh cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x100032DC al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0xDC -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B374:
	word32 ecx_515 = Mem511[ebp_52 - 0x000000D0:word32]
	word32 eax_516 = Mem511[ebp_52 - 0x00000098:word32]
	Mem518[esp_50 - 0x00000004:word32] = 0x00000004
	Mem519[ebp_52 - 0x00000098:word32] = edi_131
	edi_131 = Mem519[esp_50 - 0x00000004:word32]
	Mem522[ecx_515:word32] = eax_516
	branch Mem522[0x10031000:word32] <=u edi_131 l1002B418
// DataOut: bh cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x100032DC al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0xDC -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):0x00000000 -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B397:
	fn1000C51D(ebp_52 - 0x0000006C, 0x10003428)
	fn1000C51D(ebp_52 - 0x0000005C, 0x1000789C)
	word32 edx_529 = Mem522[ebp_52 - 0x000000E8:word32]
	Mem537[ebp_52 - 0x000000D0:word32] = (word32) (bh_401 ^ 0x01)
	Mem539[ebp_52 - 0x0000004C:word32] = ebp_52 - 0x000000D0
	Mem540[ebp_52 - 0x00000048:word32] = 0x00000000
	Mem541[ebp_52 - 0x00000044:word32] = edi_131
	Mem542[ebp_52 - 0x00000040:word32] = 0x00000000
	Mem543[ebp_52 - 0x0000003C:word32] = esi_507
	Mem544[ebp_52 - 0x00000038:word32] = 0x00000000
	Mem545[ebp_52 - 0x00000034:word32] = 0x00000010
	Mem546[ebp_52 - 0x00000030:word32] = 0x00000000
	fn1000C58C(ebp_52 - 0x0000002C, edx_529)
	Mem548[ebp_52 - 0x00000018:word32] = 0x00000000
	Mem549[ebp_52 - 0x0000001C:word32] = ebp_52 - 0x000000C0
	Mem550[ebp_52 - 0x00000014:word32] = edi_131
	Mem551[ebp_52 - 0x00000010:word32] = 0x00000000
	Mem555[esp_50 - 0x00000004:word32] = ebp_52 - 0x0000008C
	Mem557[esp_50 - 0x00000008:word32] = 0x00000008
	Mem559[esp_50 - 0x0000000C:word32] = 0x00000000
	Mem561[esp_50 - 0x00000010:word32] = 0x00000000
	word32 ecx_563
	word32 edx_564
	word32 esi_565
	fn1000C491(0x10031000, 0x1000BC10, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_563, out edx_564, out esi_565, out edi_131)
	ebx_137 = 0x00000000
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:0x100032DC al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0xDC -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -149(fp):Test(NE,Z) -148(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B418:
	fn1000F2EE(ebp_52 - 0x000000E8)
	fn1000F2EE(ebp_52 - 0x00000108)
	fn1000F2EE(ebp_52 - 0x000000CC)
	fn1000F2EE(ebp_52 - 0x000000DC)
	fn1000F2EE(ebp_52 - 0x000000B0)
	fn1000F2EE(ebp_52 - 0x000000BC)
	esi_132 = Mem217[ebp_52 - 0x00000090:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -149(fp):Test(NE,Z) -148(fp):<invalid> -80(fp):fp - 0x000000D4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -32(fp):fp - 0x000000C4 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B460:
	branch Mem32[0x10031000:word32] <=u 0x00000004 l1002B4B8
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -149(fp):Test(NE,Z) -148(fp):<invalid> -80(fp):fp - 0x000000D4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -32(fp):fp - 0x000000C4 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B469:
	fn1000C51D(ebp_52 - 0x0000003C, 0x10003428)
	fn1000C51D(ebp_52 - 0x0000002C, 0x10003D54)
	Mem185[ebp_52 - 0x00000014:word32] = 0x00000004
	Mem187[ebp_52 - 0x00000018:word32] = 0x00000000
	Mem188[ebp_52 - 0x0000001C:word32] = ebp_52 - 0x00000090
	Mem189[ebp_52 - 0x00000010:word32] = 0x00000000
	Mem193[esp_50 - 0x00000004:word32] = ebp_52 - 0x0000005C
	Mem195[esp_50 - 0x00000008:word32] = 0x00000005
	Mem197[esp_50 - 0x0000000C:word32] = 0x00000000
	Mem199[esp_50 - 0x00000010:word32] = 0x00000000
	word32 ecx_204
	word32 edx_205
	word32 esi_206
	fn1000C491(0x10031000, 0x1000BBC3, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_204, out edx_205, out esi_206, out edi_131)
	esi_132 = Mem199[ebp_52 - 0x00000090:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> cl:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -149(fp):Test(NE,Z) -148(fp):<invalid> -80(fp):fp - 0x000000D4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -32(fp):fp - 0x000000C4 -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1002B4B8:
	word32 edx_150
	word32 esi_151
	fn1000C640(ebp_52 - 0x00000098, ebx_137, esi_132, edi_131, es_71, ds_72, out edx_150, out esi_151)
	word32 edi_155 = Mem32[esp_50:word32]
	*ediOut = edi_155
	word32 esi_157 = Mem32[esp_50 + 0x00000004:word32]
	*esiOut = esi_157
	word32 ebx_164 = Mem32[esp_50 + 0x00000008:word32]
	*ebxOut = ebx_164
	word32 ecx_168
	return fn1002F420(esi_151, Mem32[ebp_52 - 0x00000008:word32] ^ ebp_52, edx_150, ebx_164, ebp_52, esi_157, edi_155, es_71, ds_72, out ecx_168)
// DataOut: cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -149(fp):Test(NE,Z) -148(fp):<invalid> -80(fp):fp - 0x000000D4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1002ADB5_exit:
// DataOut: eax ebx ecx edi esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -288(fp):0x1000792C -284(fp):<invalid> -280(fp):edi -276(fp):esi -272(fp):ebx -268(fp):<invalid> -264(fp):<invalid> -260(fp):<invalid> -256(fp):edx -252(fp):0x00000000 -248(fp):<invalid> -244(fp):<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):<invalid> -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -149(fp):Test(NE,Z) -148(fp):<invalid> -80(fp):fp - 0x000000D4 -76(fp):<invalid> -72(fp):<invalid> -68(fp):<invalid> -64(fp):<invalid> -60(fp):<invalid> -56(fp):0x00000010 -52(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn1002B4D8(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: bl eax ebx edi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn1002B4D8_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0078(32) Local -007C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1002B4D8:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem35[edx:byte] = 0x00
	Mem37[dwArg04:word32] = Mem35[0x100075F8:word32]
	Mem44[dwArg04 + 0x00000004:word32] = Mem37[0x100075FC:word32]
	Mem48[dwArg04 + 0x00000008:word32] = Mem44[0x10007600:word32]
	Mem52[dwArg04 + 0x0000000C:word32] = Mem48[0x10007604:word32]
	Mem56[dwArg08:word32] = Mem52[dwArg08:word32] & 0x00000000
	Mem61[dwArg0C:word32] = 0x00000000
	Mem62[dwArg10:word32] = 0x00000000
	word32 dwLoc70_107 = 0x00000000
	word32 edi_74
	byte SCZO_76
	word32 eax_77
	byte SZO_78
	byte C_79
	word32 esi_81
	word32 ecx_83
	byte Z_84
	byte S_85
	byte CZ_86
	bcuiposr0 None_87
	selector ds_119
	selector es_120
	word32 ebx_128
	word32 ebp_130
	word32 esp_131
	word32 edx_125
	call api-ms-win-security-lsalookup-l1-1-1.dll!EnumerateIdentityProviders (retsize: 4; depth: 212)
		uses: C_60,dwLoc04_6,dwLoc08_12,dwLoc70_63,dwLoc74_32,dwLocA4_64,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_70,ebp_7,ebx_26,ecx_34,edi_54,edx_28,esi_53,esp_71,SZO_59
		defs: C_79,CZ_86,ds_89,eax_77,ebp_75,ebx_80,ecx_83,edi_74,edx_82,es_88,esi_81,esp_73,None_87,S_85,SCZO_76,SZO_78,Z_84
	branch (fp - 0x000000A4 & fp - 0x000000A4) != 0x00000000 l1002B79E
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B552:
	Mem231[esp_131 - 0x00000004:word32] = fp - 0x0000007C
	word32 esi_232
	word32 edi_233
	Mem237[esp_131 - 0x00000004:word32] = fn1000FC32(edx_125, ebx_128, esi_81, es_120, ds_119, dwArg00, out esi_232, out edi_233)
	Mem239[esp_131 - 0x00000008:word32] = 0x1000791C
	Mem241[esp_131 - 0x0000000C:word32] = 0x00000001
	Mem243[esp_131 - 0x00000010:word32] = 0x00000000
	Mem245[esp_131 - 0x00000014:word32] = 0x1000790C
	word32 eax_246 = CoCreateInstance(Mem245[esp_131 - 0x00000014:(ptr IID)], Mem245[esp_131 - 0x00000010:LPUNKNOWN], Mem245[esp_131 - 0x0000000C:DWORD], Mem245[esp_131 - 0x00000008:(ptr IID)], Mem245[esp_131 - 0x00000004:(ptr LPVOID)])
	word32 v19_225 = dwLoc7C & eax_77
	word32 esp_247 = esp_131
	dwLoc70_107 = eax_246
	branch eax_246 < 0x00000000 l1002B777
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:0x10007608 ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -164(fp):<invalid> -116(fp):ecx -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B57E:
	Mem340[esp_131 - 0x00000004:word32] = fp - 0x00000078
	Mem343[esp_131 - 0x00000008:word32] = ecx
	word32 eax_345 = GetLengthSid(Mem343[esp_131 - 0x00000008:PSID])
	Mem349[esp_131 - 0x00000008:word32] = eax_345
	Mem352[esp_131 - 0x0000000C:word32] = ecx
	Mem354[esp_131 - 0x00000010:word32] = v19_225
	word32 esp_355
	word32 edi_356
	word32 ebp_357
	byte SCZO_358
	word32 eax_359
	byte SZO_360
	byte C_361
	word32 ebx_362
	word32 esi_363
	word32 edx_364
	word32 ecx_365
	byte Z_366
	byte S_367
	byte CZ_368
	bcuiposr0 None_369
	selector es_370
	selector ds_371
	call Mem354[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_338,CZ_86,ds_89,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_248,dwLoc74_32,dwLoc78_336,dwLoc7C_226,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA4_64,dwLocA8,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_345,ebp_75,ebx_80,ecx_347,edi_344,edx_82,es_88,esi_333,esp_353,None_87,S_250,SCZO_76,SZO_337,Z_91
		defs: C_361,CZ_368,ds_371,eax_359,ebp_357,ebx_362,ecx_365,edi_356,edx_364,es_370,esi_363,esp_355,None_369,S_367,SCZO_358,SZO_360,Z_366
	word32 edi_373
	word32 ebp_374
	byte SCZO_375
	word32 eax_376
	byte SZO_377
	byte C_378
	word32 ebx_379
	word32 esi_380
	word32 edx_381
	word32 ecx_382
	byte Z_383
	byte S_384
	byte CZ_385
	bcuiposr0 None_386
	selector es_387
	selector ds_388
	call Mem354[edi_356 + 0x0000001C:word32] (retsize: 4; depth: 4)
		uses: C_361,CZ_368,ds_371,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_248,dwLoc74_32,dwLoc78_336,dwLoc7C_226,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA4_64,dwLocA8,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_359,ebp_357,ebx_362,ecx_365,edi_356,edx_364,es_370,esi_363,esp_355,None_369,S_367,SCZO_358,SZO_360,Z_366
		defs: C_378,CZ_385,ds_388,eax_376,ebp_374,ebx_379,ecx_382,edi_373,edx_381,es_387,esi_380,esp_372,None_386,S_384,SCZO_375,SZO_377,Z_383
	branch eax_376 < 0x00000000 l1002B758
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -164(fp):<invalid> -124(fp):<invalid> -116(fp):ecx -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B758:
	dwLoc70_107 = eax_376 & 0x00000000
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -164(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B5B0:
	word32 esi_474
	word32 edi_475
	word32 eax_476 = fn1000EF25(fp - 0x000000A8, edx_381, ebx_379, dwLoc78 & 0x00000000, es_387, ds_388, out esi_474, out edi_475)
	Mem479[esp_247 - 0x00000004:word32] = eax_476
	Mem481[esp_247 - 0x00000008:word32] = esi_474
	word32 esp_482
	word32 edi_483
	word32 ebp_484
	byte SCZO_485
	word32 eax_486
	byte SZO_487
	byte C_488
	word32 ebx_489
	word32 esi_490
	word32 edx_491
	word32 ecx_492
	byte Z_493
	byte S_494
	byte CZ_495
	bcuiposr0 None_496
	selector es_497
	selector ds_498
	call Mem481[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_470,CZ_385,ds_388,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_389,dwLoc74_468,dwLoc78_336,dwLoc7C_226,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA4_64,dwLocA8_472,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_476,ebp_374,ebx_379,ecx_477,edi_475,edx_381,es_387,esi_474,esp_480,None_386,S_391,SCZO_375,SZO_469,Z_383
		defs: C_488,CZ_495,ds_498,eax_486,ebp_484,ebx_489,ecx_492,edi_483,edx_491,es_497,esi_490,esp_482,None_496,S_494,SCZO_485,SZO_487,Z_493
	word32 esp_499
	word32 ebp_501
	byte SCZO_502
	word32 eax_503
	byte SZO_504
	byte C_505
	word32 ebx_506
	word32 edx_508
	word32 ecx_509
	byte Z_510
	byte S_511
	byte CZ_512
	bcuiposr0 None_513
	selector es_514
	selector ds_515
	word32 edi_500
	word32 esi_507
	call Mem481[edi_483 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: C_488,CZ_495,ds_498,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_389,dwLoc74_468,dwLoc78_336,dwLoc7C_226,dwLoc80,dwLoc84,dwLoc88,dwLoc8C,dwLoc90,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA4_64,dwLocA8_472,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_486,ebp_484,ebx_489,ecx_492,edi_483,edx_491,es_497,esi_490,esp_482,None_496,S_494,SCZO_485,SZO_487,Z_493
		defs: C_505,CZ_512,ds_515,eax_503,ebp_501,ebx_506,ecx_509,edi_500,edx_508,es_514,esi_507,esp_499,None_513,S_511,SCZO_502,SZO_504,Z_510
	dwLoc70_107 = eax_503
	branch eax_503 < 0x00000000 l1002B74E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -164(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B5E6:
	Mem543[esp_499 - 0x00000004:word32] = fp - 0x0000006C
	word32 eax_545 = fn1002EBD6(ecx & 0x00000000, edx_508, ebx_506, edi_500, es_514, ds_515, dwArg00, out esi_507)
	dwLoc70_107 = eax_545
	branch eax_545 < 0x00000000 l1002B74E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B5FD:
	fn1000F2EE(fp - 0x000000A0)
	Mem565[esp_499 - 0x00000004:word32] = fp - 0x000000A0
	word32 eax_570 = fn1002EC33(ecx & 0x00000000, 0x100032A0, ebx_506, es_514, ds_515, dwArg00, out esi_507, out edi_500)
	dwLoc70_107 = eax_570
	branch eax_570 < 0x00000000 l1002B743
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -00A0(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B64A:
	fn1000F2EE(fp - 0x00000094)
	Mem605[esp_499 - 0x00000004:word32] = fp - 0x00000094
	word32 eax_611 = fn1002EC33(ecx & 0x00000000, 0x1000328C, ebx_506, es_514, ds_515, dwArg00, out esi_507, out edi_500)
	dwLoc70_107 = eax_611
	branch eax_611 < 0x00000000 l1002B738
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:0x100032A0 esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0078(32) Local -007C(32) Local -0094(32) Local -00A0(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B694:
	fn1000F2EE(fp - 0x00000088)
	Mem646[esp_499 - 0x00000004:word32] = fp - 0x00000088
	word32 eax_652 = fn1002EC33(ecx & 0x00000000, 0x10003304, ebx_506, es_514, ds_515, dwArg00, out esi_507, out edi_500)
	dwLoc70_107 = eax_652
	branch eax_652 < 0x00000000 l1002B72D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:0x1000328C esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -0088(32) Local -0094(32) Local -00A0(32) Local -00A4(32) Local -00AC(32) Local -00B0(32) Local -00B4(32) Local -00B8(32)

l1002B6CE:
	Mem677[ebx_506:byte] = 0x01
	Mem679[dwArg10:word32] = 0x00000000
	Mem684[dwArg0C:word32] = 0x00000000
	Mem693[dwArg08:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:0x10003304 esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B72D:
	fn1000F2EE(fp - 0x00000088)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B738:
	fn1000F2EE(fp - 0x00000094)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B743:
	fn1000F2EE(fp - 0x000000A0)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B74E:
	word32 edx_537
	word32 esi_538
	fn1000C640(fp - 0x00000074, ebx_506, esi_507, edi_500, es_514, ds_515, out edx_537, out esi_538)
	esp_247 = esp_499
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):ecx & 0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B75C:
	branch (dwLoc78 & 0x00000000) == 0x00000000 l1002B777
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0078(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B763:
	word32 esp_427 = esp_247 - 0x00000004
	Mem428[esp_427:word32] = dwLoc78 & 0x00000000
	word32 esp_431
	word32 edi_432
	word32 ebp_433
	byte SCZO_434
	word32 eax_435
	byte SZO_436
	byte C_437
	word32 ebx_438
	word32 esi_439
	word32 edx_440
	word32 ecx_441
	byte Z_442
	byte S_443
	byte CZ_444
	bcuiposr0 None_445
	selector es_446
	selector ds_447
	call Mem428[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_425,CZ_410,ds_405,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_395,dwLoc74_393,dwLoc78_423,dwLoc7C_226,dwLoc80_397,dwLoc84_398,dwLoc88_396,dwLoc8C_400,dwLoc90_401,dwLoc94_399,dwLoc98_403,dwLoc9C_404,dwLocA0_402,dwLocA4_64,dwLocA8_394,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_426,ebp_416,ebx_414,ecx_430,edi_412,edx_411,es_406,esi_429,esp_427,None_407,S_408,SCZO_409,SZO_424,Z_420
		defs: C_437,CZ_444,ds_447,eax_435,ebp_433,ebx_438,ecx_441,edi_432,edx_440,es_446,esi_439,esp_431,None_445,S_443,SCZO_434,SZO_436,Z_442
	word32 edi_449
	word32 ebp_450
	byte SCZO_451
	word32 eax_452
	byte SZO_453
	byte C_454
	word32 ebx_455
	word32 esi_456
	word32 edx_457
	word32 ecx_458
	byte Z_459
	byte S_460
	byte CZ_461
	bcuiposr0 None_462
	selector es_463
	selector ds_464
	call esi_439 (retsize: 4; depth: 4)
		uses: C_437,CZ_444,ds_447,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_395,dwLoc74_393,dwLoc78_423,dwLoc7C_226,dwLoc80_397,dwLoc84_398,dwLoc88_396,dwLoc8C_400,dwLoc90_401,dwLoc94_399,dwLoc98_403,dwLoc9C_404,dwLocA0_402,dwLocA4_64,dwLocA8_394,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_435,ebp_433,ebx_438,ecx_441,edi_432,edx_440,es_446,esi_439,esp_431,None_445,S_443,SCZO_434,SZO_436,Z_442
		defs: C_454,CZ_461,ds_464,eax_452,ebp_450,ebx_455,ecx_458,edi_449,edx_457,es_463,esi_456,esp_448,None_462,S_460,SCZO_451,SZO_453,Z_459
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -007C(32) Local -00A4(32) Local -00B8(32)

l1002B777:
	word32 esp_267 = esp_247 - 0x00000004
	Mem268[esp_267:word32] = 0x00000000
	word32 edi_270
	byte SCZO_272
	word32 eax_273
	byte SZO_274
	byte C_275
	word32 esi_277
	word32 ecx_279
	byte Z_280
	byte S_281
	byte CZ_282
	bcuiposr0 None_283
	call api-ms-win-security-lsalookup-l1-1-1.dll!ReleaseIdentityProviderEnumContext (retsize: 4; depth: 4)
		uses: C_251,CZ_86,ds_89,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_254,dwLoc74_252,dwLoc78_264,dwLoc7C_226,dwLoc80_256,dwLoc84_257,dwLoc88_255,dwLoc8C_259,dwLoc90_260,dwLoc94_258,dwLoc98_262,dwLoc9C_263,dwLocA0_261,dwLocA4_64,dwLocA8_253,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_246,ebp_75,ebx_80,ecx_83,edi_233,edx_82,es_88,esi_232,esp_267,None_87,S_250,SCZO_76,SZO_249,Z_91
		defs: C_275,CZ_282,ds_285,eax_273,ebp_271,ebx_276,ecx_279,edi_270,edx_278,es_284,esi_277,esp_269,None_283,S_281,SCZO_272,SZO_274,Z_280
	branch v19_225 == 0x00000000 l1002B79E
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -007C(32) Local -00B8(32)

l1002B78A:
	Mem296[esp_131 - 0x00000004:word32] = v19_225
	word32 esp_299
	word32 edi_300
	word32 ebp_301
	byte SCZO_302
	word32 eax_303
	byte SZO_304
	byte C_305
	word32 ebx_306
	word32 esi_307
	word32 edx_308
	word32 ecx_309
	byte Z_310
	byte S_311
	byte CZ_312
	bcuiposr0 None_313
	selector es_314
	selector ds_315
	call Mem296[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_293,CZ_282,ds_285,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_254,dwLoc74_252,dwLoc78_264,dwLoc7C_291,dwLoc80_256,dwLoc84_257,dwLoc88_255,dwLoc8C_259,dwLoc90_260,dwLoc94_258,dwLoc98_262,dwLoc9C_263,dwLocA0_261,dwLocA4_64,dwLocA8_253,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_294,ebp_271,ebx_276,ecx_298,edi_270,edx_278,es_284,esi_297,esp_295,None_283,S_281,SCZO_272,SZO_292,Z_288
		defs: C_305,CZ_312,ds_315,eax_303,ebp_301,ebx_306,ecx_309,edi_300,edx_308,es_314,esi_307,esp_299,None_313,S_311,SCZO_302,SZO_304,Z_310
	word32 edi_317
	byte SCZO_319
	word32 eax_320
	byte SZO_321
	byte C_322
	word32 esi_324
	word32 ecx_326
	byte Z_327
	byte S_328
	byte CZ_329
	bcuiposr0 None_330
	call esi_307 (retsize: 4; depth: 4)
		uses: C_305,CZ_312,ds_315,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_254,dwLoc74_252,dwLoc78_264,dwLoc7C_291,dwLoc80_256,dwLoc84_257,dwLoc88_255,dwLoc8C_259,dwLoc90_260,dwLoc94_258,dwLoc98_262,dwLoc9C_263,dwLocA0_261,dwLocA4_64,dwLocA8_253,dwLocAC_42,dwLocB0_41,dwLocB4_40,dwLocB8_30,dwLocBC_17,dwLocC0_20,dwLocC4_22,dwLocC8_67,dwLocCC_69,dwLocD0_72,eax_303,ebp_301,ebx_306,ecx_309,edi_300,edx_308,es_314,esi_307,esp_299,None_313,S_311,SCZO_302,SZO_304,Z_310
		defs: C_322,CZ_329,ds_332,eax_320,ebp_318,ebx_323,ecx_326,edi_317,edx_325,es_331,esi_324,esp_316,None_330,S_328,SCZO_319,SZO_321,Z_327
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -00B8(32)

l1002B79E:
	branch dwLoc70_107 < 0x00000000 l1002B7BC
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -00B8(32)

l1002B7A5:
	word32 esi_205 = fp - 0x0000006C
	branch Mem62[ebx_128:byte] != 0x00 l1002B7B2
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -00B8(32)

l1002B7AD:
	esi_205 = 0x1000333C
// DataOut: cs ds eax ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:fp - 0x0000006C ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -00B8(32)

l1002B7B2:
	Mem209[dwArg04:word32] = Mem62[esi_205:word32]
	word32 esi_210 = esi_205 + 0x00000004
	Mem213[dwArg04 + 0x00000004:word32] = Mem209[esi_210:word32]
	Mem217[dwArg04 + 0x00000008:word32] = Mem213[esi_210 + 0x00000004:word32]
	Mem221[dwArg04 + 0x0000000C:word32] = Mem217[esi_210 + 0x00000008:word32]
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32)

l1002B7BC:
	word32 esp_138 = esp_131 - 0x00000004
	Mem139[esp_138:word32] = 0x00000004
	branch Mem139[0x10031000:word32] <=u Mem139[esp_138:word32] l1002B80C
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32)

l1002B7C7:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003D54)
	Mem187[esp_138:word32] = fp - 0x0000005C
	Mem189[esp_138 - 0x00000004:word32] = 0x00000005
	word32 ecx_176 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem191[esp_138 - 0x00000008:word32] = ecx_176
	Mem193[esp_138 - 0x0000000C:word32] = ecx_176
	word32 ecx_196
	word32 esi_198
	word32 edi_199
	fn1000C491(0x10031000, 0x1000BB7A, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_196, out edx_125, out esi_198, out edi_199)
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002B80C:
	word32 esp_157 = esp_131 + 0x00000004
	word32 edi_156 = Mem139[esp_131:word32]
	*ediOut = edi_156
	word32 ebx_163 = Mem139[esp_157 + 0x00000004:word32]
	*ebxOut = ebx_163
	word32 ecx_165
	return fn1002F420(dwLoc70_107, eax_11 ^ fp - 0x00000004, edx_125, ebx_163, ebp_130, Mem139[esp_157:word32], edi_156, es_120, ds_119, out ecx_165)
// DataOut: bl cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx edx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp

fn1002B4D8_exit:
// DataOut: bl eax ebx edi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> edx:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -208(fp):fp - 0x000000A4 -204(fp):0x00000001 -200(fp):fp - 0x0000006C -196(fp):edi -192(fp):esi -188(fp):ebx -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):fp - 0x00000074 -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp



word32 fn1002B81F(word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds edi es fs gs ss
// LiveOut: eax ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002B81F_entry:
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0034(32) Stack +0004(32) Stack +0008(32)

l1002B81F:
	fn1000F2EE(fp - 0x0000001C)
	word32 edi_41
	word32 esi_108
	branch fn1002EC33(Mem0[dwArg04:word32], 0x100031EC, 0x100031EC, es, ds, fp - 0x0000001C, out esi_108, out edi_41) < 0x00000000 l1002B8AC
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0034(32) Stack +0008(32)

l1002B85F:
	fn1000F2EE(fp - 0x00000010)
	word32 edi_95
	branch fn1002EC33(Mem0[dwArg08:word32], 0x100031EC, 0x100031EC, es, ds, fp - 0x00000010, out esi_108, out edi_95) < 0x00000000 l1002B8A4
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:0x100031EC edx:0x100031EC -48(fp):fp - 0x0000001C -44(fp):edi -40(fp):esi -36(fp):ebx -28(fp):0x00000000 -24(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -20(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32)

l1002B88A:
	esi_108 = CompareStringW(GetUserDefaultLCID(), 0x00000001, 0x00000000, edi_95, esi_108, edi_95) - 0x00000002
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:0x100031EC edx:0x100031EC -48(fp):fp - 0x00000010 -44(fp):edi -40(fp):esi -36(fp):ebx -28(fp):0x00000000 -24(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -20(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002B8A4:
	fn1000F2EE(fp - 0x00000010)
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:0x100031EC edx:0x100031EC -68(fp):<invalid> -64(fp):0x00000001 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -28(fp):0x00000000 -24(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -20(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002B8AC:
	fn1000F2EE(fp - 0x0000001C)
	word32 edx_56
	*edxOut = 0x100031EC
	word32 ecx_69
	*ecxOut = fp - 0x0000001C
	return esi_108
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> ecx:<invalid> eax:<invalid> ebx:0x100031EC edx:0x100031EC -68(fp):<invalid> -64(fp):0x00000001 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -28(fp):0x00000000 -24(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -20(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002B81F_exit:
// DataOut: eax ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi ecx:fp - 0x0000001C eax:<invalid> ebx:ebx edx:0x100031EC -68(fp):<invalid> -64(fp):0x00000001 -60(fp):0x00000000 -56(fp):<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):edi -40(fp):esi -36(fp):ebx -28(fp):0x00000000 -24(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -20(fp):edi | 0xFFFFFFFF | 0xFFFFFFFF -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002B8BF(word32 edx, word32 ebx, word32 ebp, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002B8BF_entry:
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -00AC(32)

l1002B8BF:
	word32 esi_33
	word32 edi_136
	word32 eax_35 = fn1000FC32(edx, ebx, esi, es, ds, fp - 0x00000078, out esi_33, out edi_136)
	word32 eax_47 = CoCreateInstance(0x10007658, edi_136, 0x00000001, 0x100076A8, eax_35)
	word32 ebp_174 = fp - 0x00000004
	word32 esp_172 = fp - 0x000000A4
	word32 esi_139 = eax_47
	branch eax_47 < 0x00000000 l1002BAA6
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1002B90C:
	word32 esp_154
	word32 edi_155
	word32 ebp_156
	byte SCZO_157
	word32 eax_158
	byte SZO_159
	byte C_160
	word32 ebx_161
	word32 esi_162
	word32 ecx_163
	byte S_164
	word32 edx_165
	byte CZ_166
	byte Z_167
	byte SO_168
	byte cl_169
	selector es_170
	selector ds_171
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 180)
		uses: C_53,cl,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc70_50,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_140,ebp_7,ebx,ecx_151,edi_34,edx,es,esi_146,esp_149,S_52,SCZO,SO,SZO_51,Z
		defs: C_160,cl_169,CZ_166,ds_171,eax_158,ebp_156,ebx_161,ecx_163,edi_155,edx_165,es_170,esi_162,esp_154,S_164,SCZO_157,SO_168,SZO_159,Z_167
	byte SCZO_175
	word32 eax_176
	byte SZO_177
	byte C_178
	word32 ebx_179
	word32 esi_180
	word32 ecx_181
	byte S_182
	byte CZ_184
	byte Z_185
	byte SO_186
	byte cl_187
	word32 edx_183
	call Mem0[esi_162:word32] (retsize: 4; depth: 4)
		uses: C_160,cl_169,CZ_166,ds_171,dwLoc04_6,dwLoc08_12,dwLoc70_50,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_158,ebp_156,ebx_161,ecx_163,edi_155,edx_165,es_170,esi_162,esp_154,S_164,SCZO_157,SO_168,SZO_159,Z_167
		defs: C_178,cl_187,CZ_184,ds_189,eax_176,ebp_174,ebx_179,ecx_181,edi_173,edx_183,es_188,esi_180,esp_172,S_182,SCZO_175,SO_186,SZO_177,Z_185
	esi_139 = eax_176
	branch eax_176 < 0x00000000 l1002B96B
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000A4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000001 -172(fp):0x100076A8 -168(fp):<invalid> -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):ecx -120(fp):0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -007C(32)

l1002B937:
	Mem483[esp_172 - 0x00000004:word32] = 0x00000001
	Mem485[esp_172 - 0x00000008:word32] = edi_136
	word32 esp_489
	word32 edi_490
	word32 ebp_491
	byte SCZO_492
	word32 eax_493
	byte SZO_494
	byte C_495
	word32 ebx_496
	word32 esi_497
	word32 ecx_498
	byte S_499
	word32 edx_500
	byte CZ_501
	byte Z_502
	byte SO_503
	byte cl_504
	selector es_505
	selector ds_506
	call Mem485[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_194,cl_187,CZ_184,ds_189,dwLoc04_6,dwLoc08_12,dwLoc70_191,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_481,ebp_174,ebx_179,ecx_488,edi_173,edx_183,es_188,esi_487,esp_484,S_193,SCZO_175,SO_186,SZO_192,Z_185
		defs: C_495,cl_504,CZ_501,ds_506,eax_493,ebp_491,ebx_496,ecx_498,edi_490,edx_500,es_505,esi_497,esp_489,S_499,SCZO_492,SO_503,SZO_494,Z_502
	word32 esp_507
	word32 edi_508
	word32 ebp_509
	byte SCZO_510
	word32 eax_511
	byte SZO_512
	byte C_513
	word32 ebx_514
	word32 esi_515
	word32 ecx_516
	byte S_517
	word32 edx_518
	byte CZ_519
	byte Z_520
	byte SO_521
	byte cl_522
	selector es_523
	selector ds_524
	call esi_497 (retsize: 4; depth: 4)
		uses: C_495,cl_504,CZ_501,ds_506,dwLoc04_6,dwLoc08_12,dwLoc70_191,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_493,ebp_491,ebx_496,ecx_498,edi_490,edx_500,es_505,esi_497,esp_489,S_499,SCZO_492,SO_503,SZO_494,Z_502
		defs: C_513,cl_522,CZ_519,ds_524,eax_511,ebp_509,ebx_514,ecx_516,edi_508,edx_518,es_523,esi_515,esp_507,S_517,SCZO_510,SO_521,SZO_512,Z_520
	Mem528[esp_507 - 0x00000004:word32] = fp - 0x00000088
	Mem530[esp_507 - 0x00000008:word32] = 0x00000000
	word32 esp_534
	word32 edi_535
	word32 ebp_536
	byte SCZO_537
	word32 eax_538
	byte SZO_539
	byte C_540
	word32 ebx_541
	word32 esi_542
	word32 ecx_543
	byte S_544
	word32 edx_545
	byte CZ_546
	byte Z_547
	byte SO_548
	byte cl_549
	selector es_550
	selector ds_551
	call Mem530[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_513,cl_522,CZ_519,ds_524,dwLoc04_6,dwLoc08_12,dwLoc70_191,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_525,ebp_509,ebx_514,ecx_533,edi_508,edx_526,es_523,esi_532,esp_529,S_517,SCZO_510,SO_521,SZO_512,Z_520
		defs: C_540,cl_549,CZ_546,ds_551,eax_538,ebp_536,ebx_541,ecx_543,edi_535,edx_545,es_550,esi_542,esp_534,S_544,SCZO_537,SO_548,SZO_539,Z_547
	byte SCZO_555
	word32 eax_556
	byte SZO_557
	byte C_558
	word32 ebx_559
	word32 esi_560
	word32 ecx_561
	byte S_562
	byte CZ_564
	byte Z_565
	byte SO_566
	byte cl_567
	call esi_542 (retsize: 4; depth: 4)
		uses: C_540,cl_549,CZ_546,ds_551,dwLoc04_6,dwLoc08_12,dwLoc70_191,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_538,ebp_536,ebx_541,ecx_543,edi_535,edx_545,es_550,esi_542,esp_534,S_544,SCZO_537,SO_548,SZO_539,Z_547
		defs: C_558,cl_567,CZ_564,ds_569,eax_556,ebp_554,ebx_559,ecx_561,edi_553,edx_563,es_568,esi_560,esp_552,S_562,SCZO_555,SO_566,SZO_557,Z_565
	esi_139 = eax_556
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):ecx -136(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B96B:
	word32 ebx_213 = edi_136
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -140(fp):ecx -136(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA81:
	branch esi_139 >= 0x00000000 l1002B972
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B972:
	branch ebx_213 >=u Mem0[ebp_174 - 0x00000084:word32] l1002BA89
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B97E:
	word32 esi_283 = Mem0[ebp_174 - 0x00000074:word32]
	Mem285[ebp_174 - 0x00000070:word32] = edi_136
	Mem287[ebp_174 - 0x0000007C:word32] = ebp_174 - 0x00000070
	word32 esi_289
	word32 edi_290
	word32 eax_291 = fn1000EF25(ebp_174 - 0x0000007C, edx_183, ebx_213, esi_283, es, ds, out esi_289, out edi_290)
	word32 esp_293 = esp_172 - 0x00000004
	Mem294[esp_293:word32] = eax_291
	Mem296[esp_293 - 0x00000004:word32] = ebx_213
	Mem298[esp_293 - 0x00000008:word32] = esi_289
	word32 esp_299
	word32 edi_300
	word32 ebp_301
	byte SCZO_302
	word32 eax_303
	byte SZO_304
	byte C_305
	word32 ebx_306
	word32 esi_307
	word32 ecx_308
	byte S_309
	word32 edx_310
	byte CZ_311
	byte Z_312
	byte SO_313
	byte cl_314
	selector es_315
	selector ds_316
	call Mem298[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_282,cl_216,CZ_220,ds_214,dwLoc04_6,dwLoc08_12,dwLoc70_195,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_291,ebp_227,ebx_224,ecx_292,edi_290,edx_221,es_215,esi_289,esp_297,S_230,SCZO_281,SO_217,SZO_229,Z_218
		defs: C_305,cl_314,CZ_311,ds_316,eax_303,ebp_301,ebx_306,ecx_308,edi_300,edx_310,es_315,esi_307,esp_299,S_309,SCZO_302,SO_313,SZO_304,Z_312
	word32 esp_317
	byte SCZO_320
	word32 eax_321
	byte SZO_322
	byte C_323
	word32 ecx_326
	byte S_327
	word32 edx_328
	byte CZ_329
	byte Z_330
	byte SO_331
	byte cl_332
	word32 ebx_324
	word32 edi_318
	word32 esi_325
	call Mem298[edi_300 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: C_305,cl_314,CZ_311,ds_316,dwLoc04_6,dwLoc08_12,dwLoc70_195,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_303,ebp_301,ebx_306,ecx_308,edi_300,edx_310,es_315,esi_307,esp_299,S_309,SCZO_302,SO_313,SZO_304,Z_312
		defs: C_323,cl_332,CZ_329,ds_334,eax_321,ebp_319,ebx_324,ecx_326,edi_318,edx_328,es_333,esi_325,esp_317,S_327,SCZO_320,SO_331,SZO_322,Z_330
	branch eax_321 < 0x00000000 l1002BA72
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B9AB:
	word32 ecx_359 = Mem298[ebp_174 - 0x00000070:word32]
	Mem362[esp_317 - 0x00000004:word32] = ebp_174 - 0x0000008C
	fn1002ED0F(ecx_359, 0x10003228, ebx_324, edi_318, es, ds, dwArg00, out esi_325)
	branch Mem362[ebp_174 - 0x0000006C:word32] < 0x00000000 l1002BA72
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B9C9:
	branch Mem362[ebp_174 - 0x0000008C:word32] != 0x00000000 l1002BA72
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:0x10003228 ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0x28 -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B9D6:
	word32 ecx_371 = Mem362[ebp_174 - 0x00000070:word32]
	Mem374[ebp_174 - 0x0000007C:word32] = Mem362[ebp_174 - 0x0000007C:word32] | 0xFFFFFFFF
	Mem379[esp_317 - 0x00000004:word32] = ebp_174 - 0x0000007C
	word32 edx_377 = 0x10003250
	branch fn1002ECA1(ecx_371, 0x10003250, ebx_324, es, ds, dwArg00, out esi_325, out edi_318) < 0x00000000 l1002BA08
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:0x10003228 ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0x28 -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B9EF:
	edx_377 = Mem379[ebp_174 - 0x0000007C:word32]
	branch edx_377 == 0xFFFFFFFF l1002BA08
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:0x10003250 ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:0x50 -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002B9F7:
	Mem473[esp_317 - 0x00000004:word32] = Mem379[ebp_174 - 0x00000088:word32]
	branch fn1002BF83(ebp_174, esi_325, es, ds, dwArg00, out edx_377) >= 0x00000000 l1002BA72
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA08:
	word32 ecx_393 = Mem379[ebp_174 - 0x00000070:word32]
	Mem396[esp_317 - 0x00000004:word32] = ebp_174 - 0x00000068
	word32 eax_398 = fn1002EBD6(ecx_393, edx_377, ebx_324, edi_318, es, ds, dwArg00, out esi_325)
	branch eax_398 != 0x80070057 l1002BA29
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA1B:
	Mem453[ebp_174 - 0x00000068:word32] = Mem396[0x1000333C:word32]
	Mem457[ebp_174 - 0x00000064:word32] = Mem453[0x10003340:word32]
	Mem461[ebp_174 - 0x00000060:word32] = Mem457[0x10003344:word32]
	Mem465[ebp_174 - 0x0000005C:word32] = Mem461[0x10003348:word32]
	eax_398 = 0x00000000
	esi_325 = 0x1000334C
	edi_318 = ebp_174 - 0x00000058
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA29:
	branch eax_398 < 0x00000000 l1002BA72
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA2D:
	Mem409[ebp_174 - 0x00000080:word32] = Mem396[ebp_174 - 0x00000080:word32] & 0x00000000
	word32 esi_413 = Mem409[ebp_174 - 0x00000070:word32]
	Mem415[ebp_174 - 0x00000090:word32] = ebp_174 - 0x00000080
	word32 esi_416
	word32 edi_417
	Mem420[esp_317 - 0x00000004:word32] = fn1000EF25(ebp_174 - 0x00000090, edx_377, ebx_324, esi_413, es, ds, out esi_416, out edi_417)
	word32 ecx_424
	word32 esi_426
	branch fn1002ADB5(esi_416, ebp_174 - 0x00000068, ebp_174, esi_416, es, ds, dwArg00, out ecx_424, out ebx_324, out esi_426, out edi_318) < 0x00000000 l1002BA6A
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA57:
	Mem439[esp_317 - 0x00000004:word32] = ecx_424
	word32 ecx_440 = Mem439[ebp_174 - 0x00000088:word32]
	Mem443[esp_317 - 0x00000008:word32] = ebp_174 - 0x00000080
	Mem446[ebp_174 - 0x0000006C:word32] = fn1002D5F1(ecx_440, ebx_324, es, ds, dwArg00)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA6A:
	word32 edx_435
	fn1000C640(ebp_174 - 0x00000080, ebx_324, esi_426, edi_318, es, ds, out edx_435, out esi_325)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA72:
	word32 esi_350
	fn1000C640(ebp_174 - 0x00000070, ebx_324, esi_325, edi_318, es, ds, out edx_183, out esi_350)
	esi_139 = Mem298[ebp_174 - 0x0000006C:word32]
	Mem356[esp_317 - 0x00000004:word32] = 0x00000000
	ebx_213 = ebx_324 + 0x00000001
	edi_136 = Mem356[esp_317 - 0x00000004:word32]
	esp_172 = esp_317
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA89:
	word32 ecx_233 = Mem0[ebp_174 - 0x00000078:word32]
	branch ecx_233 == 0x00000000 l1002BAA6
// DataOut: cs ds ebp ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BA90:
	Mem238[ebp_174 - 0x00000078:word32] = edi_136
	word32 esp_240 = esp_172 - 0x00000004
	Mem241[esp_240:word32] = ecx_233
	word32 esp_244
	word32 edi_245
	word32 ebp_246
	byte SCZO_247
	word32 eax_248
	byte SZO_249
	byte C_250
	word32 ebx_251
	word32 esi_252
	word32 ecx_253
	byte S_254
	word32 edx_255
	byte CZ_256
	byte Z_257
	byte SO_258
	byte cl_259
	selector es_260
	selector ds_261
	call Mem241[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_237,cl_234,CZ_220,ds_214,dwLoc04_6,dwLoc08_12,dwLoc70_195,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_239,ebp_227,ebx_224,ecx_243,edi_222,edx_221,es_215,esi_242,esp_240,S_230,SCZO_232,SO_217,SZO_235,Z_236
		defs: C_250,cl_259,CZ_256,ds_261,eax_248,ebp_246,ebx_251,ecx_253,edi_245,edx_255,es_260,esi_252,esp_244,S_254,SCZO_247,SO_258,SZO_249,Z_257
	byte SCZO_265
	word32 eax_266
	byte SZO_267
	byte C_268
	word32 ebx_269
	word32 esi_270
	word32 ecx_271
	byte S_272
	word32 edx_273
	byte CZ_274
	byte Z_275
	byte SO_276
	byte cl_277
	call esi_252 (retsize: 4; depth: 4)
		uses: C_250,cl_259,CZ_256,ds_261,dwLoc04_6,dwLoc08_12,dwLoc70_195,dwLoc78_29,dwLoc7C_144,dwLoc88_145,dwLoc8C_23,dwLoc9C_15,dwLocA0_18,dwLocA4_20,dwLocA8_143,dwLocAC_148,dwLocB0_150,dwLocB4_44,dwLocB8_46,eax_248,ebp_246,ebx_251,ecx_253,edi_245,edx_255,es_260,esi_252,esp_244,S_254,SCZO_247,SO_258,SZO_249,Z_257
		defs: C_268,cl_277,CZ_274,ds_279,eax_266,ebp_264,ebx_269,ecx_271,edi_263,edx_273,es_278,esi_270,esp_262,S_272,SCZO_265,SO_276,SZO_267,Z_275
	esi_139 = Mem241[ebp_174 - 0x0000006C:word32]
// DataOut: cs ds ebp edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x100078FC -168(fp):fp - 0x0000007C -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BAA6:
	word32 esp_80 = esp_172 - 0x00000004
	Mem81[esp_80:word32] = 0x00000004
	word32 ebx_82 = Mem81[esp_80:word32]
	branch Mem81[0x10031000:word32] <=u ebx_82 l1002BAF4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BAB1:
	fn1000C51D(ebp_174 - 0x00000038, 0x10003428)
	fn1000C51D(ebp_174 - 0x00000028, 0x10003D54)
	Mem114[ebp_174 - 0x00000014:word32] = edi_136
	Mem115[ebp_174 - 0x00000018:word32] = ebp_174 - 0x0000006C
	Mem116[ebp_174 - 0x00000010:word32] = ebx_82
	Mem117[ebp_174 - 0x0000000C:word32] = edi_136
	Mem121[esp_80:word32] = ebp_174 - 0x00000058
	Mem123[esp_80 - 0x00000004:word32] = 0x00000005
	Mem125[esp_80 - 0x00000008:word32] = edi_136
	Mem127[esp_80 - 0x0000000C:word32] = edi_136
	word32 ecx_133
	word32 edx_134
	word32 esi_135
	fn1000C491(0x10031000, 0x1000BB1B, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_133, out edx_134, out esi_135, out edi_136)
	esi_139 = Mem127[ebp_174 - 0x0000006C:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002BAF4:
	word32 edx_90
	word32 esi_91
	fn1000C640(ebp_174 - 0x00000074, ebx_82, esi_139, edi_136, es, ds, out edx_90, out esi_91)
	word32 esp_96 = esp_172 + 0x00000004
	word32 ecx_104
	return fn1002F420(esi_91, Mem81[ebp_174 - 0x00000004:word32] ^ ebp_174, edx_90, Mem81[esp_96 + 0x00000004:word32], ebp_174, Mem81[esp_96:word32], Mem81[esp_172:word32], es, ds, out ecx_104)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002B8BF_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -184(fp):0x10007658 -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):<invalid> -164(fp):edi -160(fp):esi -156(fp):ebx -148(fp):fp - 0x00000084 -140(fp):ecx -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002BB0F(word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: esi esp
fn1002BB0F_entry:
// DataOut: bl bx cs ds ebp ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002BB0F:
	word32 edx_3
	*edxOut = ecx
	branch ecx == 0x00000000 l1002BB43
// DataOut: bl bx cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002BB15:
	ecx_40 = ecx
// DataOut: bl bx cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx
// LocalsOut: fp(32)

l1002BB19:
	word32 ecx_40
	ecx_40 = ecx_68 + 0x00000002
	word32 ecx_68 = ecx_40
	branch Mem0[ecx_68:word16] != 0x0000 l1002BB19
// DataOut: bl bx cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edx:ecx esi:ecx + 0x00000002 ax:<invalid> ecx:<invalid> -4(fp):esi
// LocalsOut: fp(32)

l1002BB24:
	word32 ecx_47 = ecx_40 - (ecx + 0x00000002)
	branch ecx_47 >> 0x00000001 == 0x00000000 l1002BB43
// DataOut: bl bx cs ds ebp ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edx:ecx esi:ecx + 0x00000002 ax:<invalid> ecx:<invalid> -4(fp):esi
// LocalsOut: fp(32)

l1002BB2B:
	word32 eax_59 = wcschr(0x100078A8, (wchar_t) (word32) Mem0[ecx - 0x00000002 + (ecx_47 >> 0x00000001) * 0x00000002:word16])
	branch eax_59 != 0x00000000 l1002BB43
// DataOut: bl bx cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx esi:esi ax:<invalid> ecx:<invalid> -4(fp):esi

l1002BB43:
	return 0x8007089A
// DataOut: bl bx cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx esi:esi ax:<invalid> ecx:<invalid> eax:<invalid> -8(fp):0x100078A8 -4(fp):<invalid>

l1002BB42:
	return eax_59
// DataOut: bl bx cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx esi:esi ax:<invalid> ecx:<invalid> eax:<invalid> -8(fp):0x100078A8 -4(fp):<invalid>

fn1002BB0F_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edx:ecx eax:<invalid> esi:esi ax:<invalid> ecx:<invalid> -8(fp):0x100078A8 -4(fp):<invalid>



word32 fn1002BB49(word32 ebp, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002BB49_entry:
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002BB49:
	fn1000F2EE(fp - 0x00000088)
	fn1000F2EE(fp - 0x000000C0)
	fn1000F2EE(fp - 0x000000A4)
	fn1000F2EE(fp - 0x000000B0)
	word16 bx_69
	word32 eax_70 = fn1002A869(fp - 0x000000B0, fp - 0x000000A4, fp - 0x00000004, es, ds, fp - 0x000000C0, fp - 0x00000088, out bx_69)
	word32 ecx_72 = Mem0[fp - 0x000000B0:word32]
	Mem73[fp - 0x00000068:word32] = eax_70
	word32 edx_103
	word32 eax_75 = fn1002BB0F(ecx_72, out edx_103)
	Mem77[fp - 0x00000068:word32] = eax_75
	word32 ebp_190 = fp - 0x00000004
	word32 ebx_16 = 0x00000000
	byte bl_18 = 0x00
	word32 edi_198 = ecx
	word32 esp_191 = fp - 0x000000CC
	word32 esi_104 = eax_75
	branch eax_75 < 0x00000000 l1002BEEB
// DataOut: bl bx cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002BC52:
	word32 eax_158 = Mem77[fp - 0x000000A4:word32]
	branch eax_158 == 0x00000000 l1002BC6D
// DataOut: bl bx cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):fp - 0x00000088 -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC5C:
	branch Mem77[eax_158:word16] == bx_69 l1002BC6D
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):fp - 0x00000088 -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC61:
	word32 eax_702 = fn1002BB0F(eax_158, out edx_103)
	Mem704[fp - 0x00000068:word32] = eax_702
	esi_104 = eax_702
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):fp - 0x00000088 -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC6D:
	branch esi_104 < 0x00000000 l1002BEEB
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):fp - 0x00000088 -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC75:
	branch Mem77[fp - 0x00000088:word32] == 0x00000000 l1002BE79
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):fp - 0x00000088 -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC81:
	Mem268[fp - 0x00000064:word32] = 0x00000000
	word32 eax_265 = 0x00000000
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):fp - 0x00000088 -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -104(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC86:
	branch eax_265 >=u Mem268[edi_198 + 0x00000004:word32] l1002BD1C
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC8F:
	word32 esi_575 = Mem268[Mem268[edi_198:word32] + eax_265 * 0x00000004:word32]
	Mem576[ebp_190 - 0x00000078:word32] = esi_575
	branch esi_575 == 0x00000000 l1002BCB1
// DataOut: bl cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BC9B:
	word32 esp_657 = esp_191 - 0x00000004
	Mem658[esp_657:word32] = esi_575
	word32 esp_661
	word32 edi_662
	word32 ebp_663
	byte SCZO_664
	word32 eax_665
	byte SZO_666
	byte C_667
	word32 ebx_668
	word32 esi_669
	word32 ecx_670
	word32 edx_671
	byte S_672
	byte Z_673
	word16 bx_674
	byte CZ_675
	byte bl_676
	selector es_677
	selector ds_678
	call Mem658[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: bl_274,bx_273,C_579,CZ_275,ds_269,dwLoc04_6,dwLoc08_12,dwLoc80_50,dwLoc84_49,dwLoc88_39,dwLoc90_44,dwLoc94_43,dwLoc98_42,dwLoc9C_56,dwLocA0_55,dwLocA4_33,dwLocA8_62,dwLocAC_58,dwLocB0_28,dwLocB4_30,dwLocB8_53,dwLocBC_52,dwLocC0_36,dwLocC4_15,dwLocC8_23,dwLocCC_25,dwLocD0_60,dwLocD4_64,eax_656,ebp_283,ebx_280,ecx_660,edi_659,edx_276,es_270,esi_575,esp_657,S_272,SCZO_285,SZO_577,Z_578
		defs: bl_676,bx_674,C_667,CZ_675,ds_678,eax_665,ebp_663,ebx_668,ecx_670,edi_662,edx_671,es_677,esi_669,esp_661,S_672,SCZO_664,SZO_666,Z_673
	word32 edi_680
	byte SCZO_682
	word32 eax_683
	byte SZO_684
	byte C_685
	word32 ecx_688
	word32 edx_689
	byte S_690
	byte Z_691
	word16 bx_692
	byte CZ_693
	call edi_662 (retsize: 4; depth: 4)
		uses: bl_676,bx_674,C_667,CZ_675,ds_678,dwLoc04_6,dwLoc08_12,dwLoc80_50,dwLoc84_49,dwLoc88_39,dwLoc90_44,dwLoc94_43,dwLoc98_42,dwLoc9C_56,dwLocA0_55,dwLocA4_33,dwLocA8_62,dwLocAC_58,dwLocB0_28,dwLocB4_30,dwLocB8_53,dwLocBC_52,dwLocC0_36,dwLocC4_15,dwLocC8_23,dwLocCC_25,dwLocD0_60,dwLocD4_64,eax_665,ebp_663,ebx_668,ecx_670,edi_662,edx_671,es_677,esi_669,esp_661,S_672,SCZO_664,SZO_666,Z_673
		defs: bl_694,bx_692,C_685,CZ_693,ds_696,eax_683,ebp_681,ebx_686,ecx_688,edi_680,edx_689,es_695,esi_687,esp_679,S_690,SCZO_682,SZO_684,Z_691
// DataOut: bl cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BCB1:
	Mem592[ebp_190 - 0x00000074:word32] = Mem576[ebp_190 - 0x00000074:word32] & 0x00000000
	Mem596[ebp_190 - 0x00000070:word32] = Mem592[ebp_190 - 0x00000070:word32] & 0x00000000
	Mem599[ebp_190 - 0x0000006C:word32] = Mem596[ebp_190 - 0x0000006C:word32] & 0x00000000
	fn1000F2EE(ebp_190 - 0x00000074)
	Mem603[ebp_190 - 0x00000070:word32] = Mem599[ebp_190 - 0x00000070:word32] | 0xFFFFFFFF
	Mem607[ebp_190 - 0x0000006C:word32] = Mem603[ebp_190 - 0x0000006C:word32] | 0xFFFFFFFF
	word32 esp_611 = esp_191 - 0x00000004
	Mem612[esp_611:word32] = ebp_190 - 0x00000074
	word32 esi_614
	branch fn1002EC33(esi_575, 0x100032DC, ebx_16, es, ds, dwArg00, out esi_614, out edi_198) < 0x00000000 l1002BCFD
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BCE1:
	Mem638[esp_611:word32] = 0x00000001
	Mem640[esp_611 - 0x00000004:word32] = 0xFFFFFFFF
	Mem643[esp_611 - 0x00000008:word32] = Mem640[ebp_190 - 0x00000074:word32]
	Mem645[esp_611 - 0x0000000C:word32] = 0xFFFFFFFF
	Mem648[esp_611 - 0x00000010:word32] = Mem645[ebp_190 - 0x00000084:word32]
	branch CompareStringOrdinal(Mem648[esp_611 - 0x00000010:LPCWSTR], Mem648[esp_611 - 0x0000000C:int32], Mem648[esp_611 - 0x00000008:LPCWSTR], Mem648[esp_611 - 0x00000004:int32], Mem648[esp_611:BOOL]) != 0x00000002 l1002BCFD
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100032DC ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BCFB:
	bl_18 = 0x01
	ebx_16 = DPB(ebx_16, 0x01, 0) (alias)
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100032DC ax:<invalid> al:<invalid> bl:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BCFD:
	fn1000F2EE(ebp_190 - 0x00000074)
	fn1000C640(ebp_190 - 0x00000078, ebx_16, esi_614, edi_198, es, ds, out edx_103, out esi_104)
	word32 eax_631 = Mem612[ebp_190 - 0x00000060:word32]
	Mem633[ebp_190 - 0x00000060:word32] = eax_631 + 0x00000001
	eax_265 = eax_631 + 0x00000001
	branch bl_18 == 0x00 l1002BC86
// DataOut: bl cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100032DC bl:<invalid> ax:<invalid> al:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BD1C:
	Mem302[ebp_190 - 0x00000059:byte] = bl_18
	branch bl_18 != 0x00 l1002BE6F
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BD27:
	Mem325[ebp_190 - 0x00000060:word32] = Mem302[ebp_190 - 0x00000060:word32] & 0x00000000
	word32 esp_329 = esp_191 - 0x00000004
	Mem330[esp_329:word32] = ebp_190 - 0x00000060
	word32 esi_331
	word32 edi_332
	Mem336[esp_329:word32] = fn1000FC32(edx_103, ebx_16, esi_104, es, ds, dwArg00, out esi_331, out edi_332)
	Mem338[esp_329 - 0x00000004:word32] = 0x100076A8
	Mem340[esp_329 - 0x00000008:word32] = 0x00000001
	Mem342[esp_329 - 0x0000000C:word32] = 0x00000000
	Mem344[esp_329 - 0x00000010:word32] = 0x10007668
	esp_191 = esp_329 + 0x00000004
	branch CoCreateInstance(Mem344[esp_329 - 0x00000010:(ptr IID)], Mem344[esp_329 - 0x0000000C:LPUNKNOWN], Mem344[esp_329 - 0x00000008:DWORD], Mem344[esp_329 - 0x00000004:(ptr IID)], Mem344[esp_329:(ptr LPVOID)]) < 0x00000000 l1002BE63
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -212(fp):fp - 0x000000C0 -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BD51:
	word32 eax_370 = ebp_190 - 0x00000078
	Mem372[esp_329:word32] = eax_370
	Mem375[esp_329 - 0x00000004:word32] = Mem372[ebp_190 - 0x00000084:word32]
	byte SCZO_379
	word32 eax_380
	byte SZO_381
	byte C_382
	word32 ecx_385
	word32 edx_386
	byte S_387
	byte Z_388
	word16 bx_389
	byte CZ_390
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertStringSidToSidW (retsize: 4; depth: 4)
		uses: bl_291,bx_290,C_349,CZ_293,ds_287,dwLoc04_6,dwLoc08_12,dwLoc80_50,dwLoc84_49,dwLoc88_39,dwLoc90_44,dwLoc94_43,dwLoc98_42,dwLoc9C_56,dwLocA0_55,dwLocA4_33,dwLocA8_62,dwLocAC_58,dwLocB0_28,dwLocB4_30,dwLocB8_53,dwLocBC_52,dwLocC0_36,dwLocC4_15,dwLocC8_23,dwLocCC_25,dwLocD0_60,dwLocD4_64,eax_370,ebp_300,ebx_297,ecx_298,edi_332,edx_294,es_288,esi_331,esp_374,S_348,SCZO_292,SZO_347,Z_304
		defs: bl_391,bx_389,C_382,CZ_390,ds_393,eax_380,ebp_378,ebx_383,ecx_385,edi_377,edx_386,es_392,esi_384,esp_376,S_387,SCZO_379,SZO_381,Z_388
	branch eax_380 == 0x00000000 l1002BE63
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BD69:
	word32 esi_397 = Mem375[ebp_190 - 0x00000078:word32]
	Mem400[ebp_190 - 0x00000068:word32] = Mem375[ebp_190 - 0x00000068:word32] & 0x00000000
	word32 ebx_403 = Mem400[ebp_190 - 0x00000060:word32]
	Mem407[esp_191 - 0x00000004:word32] = esi_397
	Mem408[ebp_190 - 0x00000088:word32] = ebp_190 - 0x00000068
	Mem415[esp_191 - 0x00000004:word32] = (word32) Mem408[GetSidSubAuthorityCount(Mem408[esp_191 - 0x00000004:PSID]):byte] - 0x00000001
	Mem417[esp_191 - 0x00000008:word32] = esi_397
	word32 esi_423
	word32 edi_424
	word32 eax_425 = fn1000EF25(ebp_190 - 0x00000088, edx_386, ebx_403, Mem417[GetSidSubAuthority(Mem417[esp_191 - 0x00000008:PSID], Mem417[esp_191 - 0x00000004:DWORD]):word32], es, ds, out esi_423, out edi_424)
	Mem428[esp_191 - 0x00000004:word32] = eax_425
	Mem430[esp_191 - 0x00000008:word32] = esi_423
	Mem432[esp_191 - 0x0000000C:word32] = ebx_403
	word32 esp_433
	word32 edi_434
	word32 ebp_435
	byte SCZO_436
	word32 eax_437
	byte SZO_438
	byte C_439
	word32 ebx_440
	word32 esi_441
	word32 ecx_442
	word32 edx_443
	byte S_444
	byte Z_445
	word16 bx_446
	byte CZ_447
	byte bl_448
	selector es_449
	selector ds_450
	call Mem432[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: bl_405,bx_404,C_402,CZ_390,ds_393,dwLoc04_6,dwLoc08_12,dwLoc80_50,dwLoc84_49,dwLoc88_39,dwLoc90_44,dwLoc94_43,dwLoc98_42,dwLoc9C_56,dwLocA0_55,dwLocA4_33,dwLocA8_62,dwLocAC_58,dwLocB0_28,dwLocB4_30,dwLocB8_53,dwLocBC_52,dwLocC0_36,dwLocC4_15,dwLocC8_23,dwLocCC_25,dwLocD0_60,dwLocD4_64,eax_425,ebp_378,ebx_403,ecx_426,edi_424,edx_386,es_392,esi_423,esp_431,S_387,SCZO_379,SZO_413,Z_395
		defs: bl_448,bx_446,C_439,CZ_447,ds_450,eax_437,ebp_435,ebx_440,ecx_442,edi_434,edx_443,es_449,esi_441,esp_433,S_444,SCZO_436,SZO_438,Z_445
	word32 esp_451
	byte SCZO_454
	word32 eax_455
	byte SZO_456
	byte C_457
	word32 ecx_460
	word32 edx_461
	byte S_462
	byte Z_463
	word16 bx_464
	byte CZ_465
	byte bl_466
	word32 ebx_458
	word32 esi_459
	call Mem432[edi_434 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: bl_448,bx_446,C_439,CZ_447,ds_450,dwLoc04_6,dwLoc08_12,dwLoc80_50,dwLoc84_49,dwLoc88_39,dwLoc90_44,dwLoc94_43,dwLoc98_42,dwLoc9C_56,dwLocA0_55,dwLocA4_33,dwLocA8_62,dwLocAC_58,dwLocB0_28,dwLocB4_30,dwLocB8_53,dwLocBC_52,dwLocC0_36,dwLocC4_15,dwLocC8_23,dwLocCC_25,dwLocD0_60,dwLocD4_64,eax_437,ebp_435,ebx_440,ecx_442,edi_434,edx_443,es_449,esi_441,esp_433,S_444,SCZO_436,SZO_438,Z_445
		defs: bl_466,bx_464,C_457,CZ_465,ds_468,eax_455,ebp_453,ebx_458,ecx_460,edi_452,edx_461,es_467,esi_459,esp_451,S_462,SCZO_454,SZO_456,Z_463
	branch eax_455 < 0x00000000 l1002BE4F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BDB5:
	Mem498[ebp_190 - 0x00000074:word32] = 0x00000000
	Mem499[ebp_190 - 0x00000070:word32] = 0x00000000
	Mem500[ebp_190 - 0x0000006C:word32] = 0x00000000
	fn1000F2EE(ebp_190 - 0x00000074)
	word32 ecx_501 = Mem500[ebp_190 - 0x00000068:word32]
	Mem509[esp_451 - 0x00000004:word32] = ebp_190 - 0x00000074
	Mem510[ebp_190 - 0x00000070:word32] = ebx_458 | 0xFFFFFFFF
	Mem511[ebp_190 - 0x0000006C:word32] = ebx_458 | 0xFFFFFFFF
	ebx_458 = ebx_458 | 0xFFFFFFFF
	branch fn1002ED84(ecx_501, edx_461, ebx_458 | 0xFFFFFFFF, es, ds, dwArg00, out esi_459, out edi_332) < 0x00000000 l1002BE47
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BDE1:
	Mem531[esp_451 - 0x00000004:word32] = 0x00000001
	Mem533[esp_451 - 0x00000008:word32] = ebx_458 | 0xFFFFFFFF
	Mem536[esp_451 - 0x0000000C:word32] = Mem533[ebp_190 - 0x00000074:word32]
	Mem538[esp_451 - 0x00000010:word32] = ebx_458 | 0xFFFFFFFF
	Mem541[esp_451 - 0x00000014:word32] = Mem538[ebp_190 - 0x00000084:word32]
	branch CompareStringOrdinal(Mem541[esp_451 - 0x00000014:LPCWSTR], Mem541[esp_451 - 0x00000010:int32], Mem541[esp_451 - 0x0000000C:LPCWSTR], Mem541[esp_451 - 0x00000008:int32], Mem541[esp_451 - 0x00000004:BOOL]) != 0x00000002 l1002BE47
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BDF9:
	word32 ecx_546 = Mem541[ebp_190 - 0x00000068:word32]
	Mem549[esp_451 - 0x00000004:word32] = ebp_190 - 0x00000088
	word32 esi_551
	branch fn1002ED0F(ecx_546, 0x10003214, ebx_458 | 0xFFFFFFFF, edi_332, es, ds, dwArg00, out esi_551) < 0x00000000 l1002BE1C
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE11:
	Mem573[ebp_190 - 0x00000059:byte] = Mem549[ebp_190 - 0x00000088:word32] != 0x00000000
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x10003214 ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE1C:
	fn1000F2EE(ebp_190 - 0x00000094)
	word32 ecx_560 = Mem549[ebp_190 - 0x00000068:word32]
	Mem563[esp_451 - 0x00000004:word32] = ebp_190 - 0x00000094
	Mem565[ebp_190 - 0x00000090:word32] = ebx_458 | 0xFFFFFFFF
	Mem566[ebp_190 - 0x0000008C:word32] = ebx_458 | 0xFFFFFFFF
	fn1002EC33(ecx_560, 0x100031D8, ebx_458 | 0xFFFFFFFF, es, ds, dwArg00, out esi_459, out edi_332)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x10003214 ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE47:
	fn1000F2EE(ebp_190 - 0x00000074)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE4F:
	Mem484[esp_451 - 0x00000004:word32] = Mem432[ebp_190 - 0x00000078:word32]
	LocalFree(Mem484[esp_451 - 0x00000004:HLOCAL])
	word32 edx_488
	fn1000C640(ebp_190 - 0x00000068, ebx_458, esi_459, edi_332, es, ds, out edx_488, out esi_331)
	bl_18 = Mem484[ebp_190 - 0x00000059:byte]
	esp_191 = esp_451
	ebx_16 = DPB(ebx_458, bl_18, 0) (alias)
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE63:
	word32 esi_364
	fn1000C640(ebp_190 - 0x00000060, ebx_16, esi_331, edi_332, es, ds, out edx_103, out esi_364)
	branch bl_18 == 0x00 l1002BE73
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE73:
	edi_198 = Mem344[ebp_190 - 0x000000B0:word32]
// DataOut: cs ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> bl:<invalid> ax:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE79:
	edx_103 = Mem77[ebp_190 - 0x000000A0:word32]
	word32 ecx_207 = Mem77[ebp_190 - 0x000000AC:word32]
	word32 esp_208 = esp_191 - 0x00000004
	Mem209[esp_208:word32] = edi_198
	Mem211[esp_208 - 0x00000004:word32] = 0x00000000
	Mem214[esp_208 - 0x00000008:word32] = Mem211[ebp_190 - 0x00000084:word32]
	Mem217[esp_208 - 0x0000000C:word32] = Mem214[ebp_190 - 0x000000BC:word32]
	word32 eax_219 = fn1002A716(ecx_207, edx_103, 0x00000000, ebp_190, es, ds, dwArg00, dwArg04, dwArg08, out ebx_16)
	Mem222[ebp_190 - 0x00000064:word32] = eax_219
	esp_191 = esp_208 + 0x00000004
	esi_104 = eax_219
	branch eax_219 < 0x00000000 l1002BEEB
// DataOut: bx cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEA3:
	word32 eax_226 = Mem222[ebp_190 - 0x00000094:word32]
	branch eax_226 == 0x00000000 l1002BEEB
// DataOut: bx cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEAD:
	branch Mem222[eax_226:word16] == 0x0000 l1002BEEB
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEB2:
	word32 eax_232 = Mem222[edi_198 + 0x00000004:word32]
	branch eax_232 == 0x00000000 l1002BEEB
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEB9:
	Mem237[ebp_190 - 0x00000060:word32] = ebx_16
	Mem239[esp_208:word32] = ebp_190 - 0x00000060
	Mem244[esp_208 - 0x00000004:word32] = eax_232 - 0x00000001
	word32 esi_245
	branch fn1002237C(edi_198, edx_103, ebx_16, eax_219, es, ds, dwArg00, dwArg04, out esi_245) < 0x00000000 l1002BEE0
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BECD:
	Mem259[esp_208:word32] = Mem244[ebp_190 - 0x00000094:word32]
	fn1002EE81(Mem259[ebp_190 - 0x00000060:word32], 0x100031D8, ebx_16, edi_198, es, ds, dwArg00, out esi_245)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEE0:
	word32 esi_255
	fn1000C640(ebp_190 - 0x00000060, ebx_16, esi_245, edi_198, es, ds, out edx_103, out esi_255)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> al:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BE6F:
	ebx_16 = 0x00000000
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):0x00000001 -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEE8:
	esi_104 = Mem77[ebp_190 - 0x00000064:word32]
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> bl:<invalid> al:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEEB:
	word32 esp_97 = esp_191 - 0x00000004
	Mem98[esp_97:word32] = 0x00000004
	word32 edi_99 = Mem98[esp_97:word32]
	branch Mem98[0x10031000:word32] <=u edi_99 l1002BF39
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002BEF6:
	fn1000C51D(ebp_190 - 0x00000038, 0x10003428)
	fn1000C51D(ebp_190 - 0x00000028, 0x10003D54)
	Mem132[ebp_190 - 0x00000014:word32] = ebx_16
	Mem133[ebp_190 - 0x00000018:word32] = ebp_190 - 0x00000064
	Mem134[ebp_190 - 0x00000010:word32] = edi_99
	Mem135[ebp_190 - 0x0000000C:word32] = ebx_16
	Mem139[esp_97:word32] = ebp_190 - 0x00000058
	Mem141[esp_97 - 0x00000004:word32] = 0x00000005
	Mem143[esp_97 - 0x00000008:word32] = ebx_16
	Mem145[esp_97 - 0x0000000C:word32] = ebx_16
	word32 ecx_151
	word32 esi_153
	word32 edi_154
	fn1000C491(0x10031000, 0x1000BAB6, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_151, out edx_103, out esi_153, out edi_154)
	esi_104 = Mem145[ebp_190 - 0x00000064:word32]
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):0x00000000 -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002BF39:
	fn1000F2EE(ebp_190 - 0x00000094)
	fn1000F2EE(ebp_190 - 0x00000084)
	fn1000F2EE(ebp_190 - 0x000000BC)
	fn1000F2EE(ebp_190 - 0x000000A0)
	fn1000F2EE(ebp_190 - 0x000000AC)
	word32 esp_114 = esp_191 + 0x00000004
	word32 ecx_122
	return fn1002F420(esi_104, Mem98[ebp_190 - 0x00000004:word32] ^ ebp_190, edx_103, Mem98[esp_114 + 0x00000004:word32], ebp_190, Mem98[esp_114:word32], Mem98[esp_191:word32], es, ds, out ecx_122)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -28(fp):fp - 0x00000068 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002BB49_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -224(fp):0x10007668 -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):edi -200(fp):esi -196(fp):ebx -192(fp):0x00000000 -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -180(fp):fp - 0x00000088 -176(fp):0x00000000 -172(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -168(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -164(fp):0x00000000 -160(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -156(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):fp - 0x0000006C -136(fp):0x00000000 -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -93(fp):<invalid> -28(fp):fp - 0x00000068 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002BF83(word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002BF83_entry:
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002BF83:
	fn1000F2EE(fp - 0x0000008C)
	fn1000F2EE(fp - 0x000000B8)
	fn1000F2EE(fp - 0x000000C4)
	fn1000F2EE(fp - 0x000000D0)
	word32 edx_155
	word32 eax_72 = fn10029B41(fp - 0x000000D0, fp - 0x00000004, es, ds, fp - 0x000000C4, fp - 0x000000B8, fp - 0x0000008C, out edx_155)
	Mem75[fp - 0x0000007C:word32] = eax_72
	word32 ebp_220 = fp - 0x00000004
	word32 esp_175 = fp - 0x000000E0
	word32 esi_100 = eax_72
	branch eax_72 < 0x00000000 l1002C24A
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002C082:
	edx_155 = Mem75[fp - 0x000000C4:word32]
	*edxOut = edx_155
	word32 ecx_162 = Mem75[fp - 0x000000D0:word32]
	Mem164[fp - 0x000000E4:word32] = dwArg04
	Mem166[fp - 0x000000E8:word32] = ecx
	Mem169[fp - 0x000000EC:word32] = Mem166[fp - 0x0000008C:word32]
	Mem172[fp - 0x000000F0:word32] = Mem169[fp - 0x000000B8:word32]
	word32 ebx_173
	word32 eax_174 = fn1002A716(ecx_162, edx_155, dwArg04, fp - 0x00000004, es, ds, dwArg00, dwArg04, dwArg08, out ebx_173)
	Mem177[fp - 0x0000007C:word32] = eax_174
	esp_175 = fp - 0x000000E0
	esi_100 = eax_174
	branch eax_174 < 0x00000000 l1002C24A
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> -236(fp):fp - 0x000000C4 -232(fp):fp - 0x000000B8 -228(fp):fp - 0x0000008C -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C0AE:
	Mem186[fp - 0x000000E4:word32] = fp - 0x00000080
	Mem187[fp - 0x00000080:word32] = 0x00000000
	word32 esi_188
	word32 edi_189
	Mem193[fp - 0x000000E4:word32] = fn1000FC32(edx_155, 0x00000000, eax_174, es, ds, dwArg00, out esi_188, out edi_189)
	Mem195[fp - 0x000000E8:word32] = 0x100076A8
	Mem197[fp - 0x000000EC:word32] = 0x00000001
	Mem199[fp - 0x000000F0:word32] = 0x00000000
	Mem201[fp - 0x000000F4:word32] = 0x10007668
	word32 ebx_182 = 0x00000000
	esp_175 = fp - 0x000000E0
	branch CoCreateInstance(Mem201[fp - 0x000000F4:(ptr IID)], Mem201[fp - 0x000000F0:LPUNKNOWN], Mem201[fp - 0x000000EC:DWORD], Mem201[fp - 0x000000E8:(ptr IID)], Mem201[fp - 0x000000E4:(ptr LPVOID)]) < 0x00000000 l1002C23F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C0D8:
	Mem229[fp - 0x000000E4:word32] = fp - 0x00000090
	Mem232[fp - 0x000000E8:word32] = Mem229[fp - 0x0000008C:word32]
	byte SCZO_236
	word32 eax_237
	byte SZO_238
	byte C_239
	word32 edx_240
	word32 ecx_243
	byte S_244
	byte Z_245
	byte CZ_246
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertStringSidToSidW (retsize: 4; depth: 4)
		uses: C_206,CZ,ds,dwLoc04_6,dwLoc0C_12,dwLoc84_49,dwLoc88_48,dwLoc8C_38,dwLoc94_17,dwLocB0_52,dwLocB4_51,dwLocB8_41,dwLocBC_55,dwLocC0_54,dwLocC4_35,dwLocC8_65,dwLocCC_61,dwLocD0_32,dwLocD4_30,dwLocD8_20,dwLocDC_25,dwLocE0_27,dwLocE4_59,dwLocE8_63,dwLocEC_67,eax_227,ebp_7,ebx_182,ecx_162,edi_189,edx_161,es,esi_188,esp_231,S_205,SCZO,SZO_204,Z
		defs: C_239,CZ_246,ds_248,eax_237,ebp_235,ebx_241,ecx_243,edi_234,edx_240,es_247,esi_242,esp_233,S_244,SCZO_236,SZO_238,Z_245
	branch eax_237 == 0x00000000 l1002C23F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C0F3:
	word32 esi_252 = Mem232[ebp_220 - 0x0000008C:word32]
	Mem254[ebp_220 - 0x00000074:word32] = ebx_182
	word32 ebx_255 = Mem254[ebp_220 - 0x0000007C:word32]
	Mem257[esp_175 - 0x00000004:word32] = esi_252
	Mem258[ebp_220 - 0x00000070:word32] = ebp_220 - 0x00000074
	Mem265[esp_175 - 0x00000004:word32] = (word32) Mem258[GetSidSubAuthorityCount(Mem258[esp_175 - 0x00000004:PSID]):byte] - 0x00000001
	Mem267[esp_175 - 0x00000008:word32] = esi_252
	word32 esi_273
	word32 edi_274
	word32 eax_275 = fn1000EF25(ebp_220 - 0x00000070, edx_240, ebx_255, Mem267[GetSidSubAuthority(Mem267[esp_175 - 0x00000008:PSID], Mem267[esp_175 - 0x00000004:DWORD]):word32], es, ds, out esi_273, out edi_274)
	Mem278[esp_175 - 0x00000004:word32] = eax_275
	Mem280[esp_175 - 0x00000008:word32] = esi_273
	Mem282[esp_175 - 0x0000000C:word32] = ebx_255
	word32 esp_283
	word32 edi_284
	word32 ebp_285
	byte SCZO_286
	word32 eax_287
	byte SZO_288
	byte C_289
	word32 edx_290
	word32 ebx_291
	word32 esi_292
	word32 ecx_293
	byte S_294
	byte Z_295
	byte CZ_296
	selector es_297
	selector ds_298
	call Mem282[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_251,CZ_246,ds_248,dwLoc04_6,dwLoc0C_12,dwLoc84_49,dwLoc88_48,dwLoc8C_38,dwLoc94_17,dwLocB0_52,dwLocB4_51,dwLocB8_41,dwLocBC_55,dwLocC0_54,dwLocC4_35,dwLocC8_65,dwLocCC_61,dwLocD0_32,dwLocD4_30,dwLocD8_20,dwLocDC_25,dwLocE0_27,dwLocE4_59,dwLocE8_63,dwLocEC_67,eax_275,ebp_235,ebx_255,ecx_276,edi_274,edx_240,es_247,esi_273,esp_281,S_244,SCZO_236,SZO_263,Z_250
		defs: C_289,CZ_296,ds_298,eax_287,ebp_285,ebx_291,ecx_293,edi_284,edx_290,es_297,esi_292,esp_283,S_294,SCZO_286,SZO_288,Z_295
	word32 esp_299
	byte SCZO_302
	word32 eax_303
	byte SZO_304
	byte C_305
	word32 edx_306
	word32 ecx_309
	byte S_310
	byte Z_311
	byte CZ_312
	word32 esi_308
	call Mem282[edi_284 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: C_289,CZ_296,ds_298,dwLoc04_6,dwLoc0C_12,dwLoc84_49,dwLoc88_48,dwLoc8C_38,dwLoc94_17,dwLocB0_52,dwLocB4_51,dwLocB8_41,dwLocBC_55,dwLocC0_54,dwLocC4_35,dwLocC8_65,dwLocCC_61,dwLocD0_32,dwLocD4_30,dwLocD8_20,dwLocDC_25,dwLocE0_27,dwLocE4_59,dwLocE8_63,dwLocEC_67,eax_287,ebp_285,ebx_291,ecx_293,edi_284,edx_290,es_297,esi_292,esp_283,S_294,SCZO_286,SZO_288,Z_295
		defs: C_305,CZ_312,ds_314,eax_303,ebp_301,ebx_307,ecx_309,edi_300,edx_306,es_313,esi_308,esp_299,S_310,SCZO_302,SZO_304,Z_311
	branch eax_303 < 0x00000000 l1002C22B
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C13B:
	Mem340[ebp_220 - 0x000000A8:word32] = 0x00000000
	Mem341[ebp_220 - 0x000000A4:word32] = 0x00000000
	Mem342[ebp_220 - 0x000000A0:word32] = 0x00000000
	fn1000F2EE(ebp_220 - 0x000000A8)
	word32 ecx_343 = Mem342[ebp_220 - 0x00000074:word32]
	Mem349[esp_299 - 0x00000004:word32] = ebp_220 - 0x000000A8
	Mem350[ebp_220 - 0x000000A4:word32] = esi_308 | 0xFFFFFFFF
	Mem351[ebp_220 - 0x000000A0:word32] = esi_308 | 0xFFFFFFFF
	ebx_182 = 0x00000000
	branch fn1002ED84(ecx_343, edx_306, 0x00000000, es, ds, dwArg00, out esi_308, out edi_189) < 0x00000000 l1002C220
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):fp - 0x00000078 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C180:
	Mem371[esp_299 - 0x00000004:word32] = 0x00000001
	Mem373[esp_299 - 0x00000008:word32] = esi_308
	Mem376[esp_299 - 0x0000000C:word32] = Mem373[ebp_220 - 0x000000A8:word32]
	Mem378[esp_299 - 0x00000010:word32] = esi_308
	Mem381[esp_299 - 0x00000014:word32] = Mem378[ebp_220 - 0x00000088:word32]
	branch CompareStringOrdinal(Mem381[esp_299 - 0x00000014:LPCWSTR], Mem381[esp_299 - 0x00000010:int32], Mem381[esp_299 - 0x0000000C:LPCWSTR], Mem381[esp_299 - 0x00000008:int32], Mem381[esp_299 - 0x00000004:BOOL]) != 0x00000002 l1002C220
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):fp - 0x00000078 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C19F:
	Mem387[ebp_220 - 0x0000009C:word32] = 0x00000000
	Mem388[ebp_220 - 0x00000098:word32] = 0x00000000
	Mem389[ebp_220 - 0x00000094:word32] = 0x00000000
	fn1000F2EE(ebp_220 - 0x0000009C)
	word32 ecx_390 = Mem389[ebp_220 - 0x00000074:word32]
	Mem393[ebp_220 - 0x00000098:word32] = esi_308
	Mem395[esp_299 - 0x00000004:word32] = ebp_220 - 0x0000009C
	Mem397[ebp_220 - 0x00000094:word32] = esi_308
	branch fn1002EC33(ecx_390, 0x100031D8, 0x00000000, es, ds, dwArg00, out esi_308, out edi_189) < 0x00000000 l1002C215
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):fp - 0x00000078 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C1E2:
	word32 ecx_413 = Mem397[ebp_220 - 0x000000D0:word32]
	Mem416[esp_299 - 0x00000004:word32] = ebp_220 - 0x00000070
	Mem417[ebp_220 - 0x00000070:word32] = 0x00000000
	Mem422[esp_299 - 0x00000008:word32] = Mem417[ecx_413 + 0x00000004:word32] - 0x00000001
	word32 esi_423
	branch fn1002237C(ecx_413, 0x100031D8, 0x00000000, ebp_220 - 0x00000070, es, ds, dwArg00, dwArg04, out esi_423) < 0x00000000 l1002C20D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100031D8 al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:0xD8 -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):fp - 0x00000078 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C1FD:
	Mem437[esp_299 - 0x00000004:word32] = Mem422[ebp_220 - 0x0000009C:word32]
	fn1002EE81(Mem437[ebp_220 - 0x00000070:word32], edi_189, 0x00000000, edi_189, es, ds, dwArg00, out esi_423)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:0xD8 -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C20D:
	word32 edx_432
	fn1000C640(ebp_220 - 0x00000070, 0x00000000, esi_423, edi_189, es, ds, out edx_432, out esi_308)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C215:
	fn1000F2EE(ebp_220 - 0x0000009C)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C220:
	fn1000F2EE(ebp_220 - 0x000000A8)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C22B:
	Mem329[esp_299 - 0x00000004:word32] = Mem282[ebp_220 - 0x0000008C:word32]
	LocalFree(Mem329[esp_299 - 0x00000004:HLOCAL])
	word32 edx_333
	fn1000C640(ebp_220 - 0x00000074, ebx_182, esi_308, edi_189, es, ds, out edx_333, out esi_188)
	esp_175 = esp_299
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C23F:
	word32 esi_224
	fn1000C640(ebp_220 - 0x0000007C, ebx_182, esi_188, edi_189, es, ds, out edx_155, out esi_224)
	esi_100 = Mem201[ebp_220 - 0x00000078:word32]
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C24A:
	word32 esp_93 = esp_175 - 0x00000004
	Mem94[esp_93:word32] = 0x00000004
	word32 edi_95 = Mem94[esp_93:word32]
	branch Mem94[0x10031000:word32] <=u edi_95 l1002C2AC
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C255:
	fn1000C51D(ebp_220 - 0x0000004C, 0x10003428)
	fn1000C51D(ebp_220 - 0x0000003C, 0x10003D54)
	Mem128[ebp_220 - 0x00000024:word32] = edi_95
	Mem132[ebp_220 - 0x0000002C:word32] = ebp_220 - 0x00000090
	Mem134[ebp_220 - 0x00000028:word32] = 0x00000000
	Mem135[ebp_220 - 0x00000020:word32] = 0x00000000
	Mem136[ebp_220 - 0x0000001C:word32] = ebp_220 - 0x00000078
	Mem137[ebp_220 - 0x00000018:word32] = 0x00000000
	Mem138[ebp_220 - 0x00000014:word32] = edi_95
	Mem139[ebp_220 - 0x00000010:word32] = 0x00000000
	Mem143[esp_93:word32] = ebp_220 - 0x0000006C
	Mem145[esp_93 - 0x00000004:word32] = 0x00000006
	Mem147[esp_93 - 0x00000008:word32] = 0x00000000
	Mem149[esp_93 - 0x0000000C:word32] = 0x00000000
	word32 ecx_154
	word32 esi_156
	word32 edi_157
	fn1000C491(0x10031000, 0x1000BA44, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_154, out edx_155, out esi_156, out edi_157)
	esi_100 = Mem149[ebp_220 - 0x00000078:word32]
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

l1002C2AC:
	fn1000F2EE(ebp_220 - 0x000000B4)
	fn1000F2EE(ebp_220 - 0x00000088)
	fn1000F2EE(ebp_220 - 0x000000C0)
	fn1000F2EE(ebp_220 - 0x000000CC)
	word32 esp_109 = esp_175 + 0x00000004
	word32 ecx_117
	return fn1002F420(esi_100, Mem94[ebp_220 - 0x00000008:word32] ^ ebp_220, edx_155, Mem94[esp_109 + 0x00000004:word32], ebp_220, Mem94[esp_109:word32], Mem94[esp_175:word32], es, ds, out ecx_117)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -48(fp):fp - 0x00000094 -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):<invalid> -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x0000007C -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):<invalid> -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp

fn1002BF83_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> -244(fp):0x10007668 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):<invalid> -224(fp):edi -220(fp):esi -216(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -200(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -196(fp):<invalid> -192(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -188(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -184(fp):<invalid> -180(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -176(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -172(fp):<invalid> -168(fp):<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edx -140(fp):<invalid> -136(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -132(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -48(fp):fp - 0x00000094 -44(fp):fp - 0x00000040 ^ fp - 0x00000040 -40(fp):<invalid> -36(fp):fp - 0x00000040 ^ fp - 0x00000040 -32(fp):fp - 0x0000007C -28(fp):fp - 0x00000040 ^ fp - 0x00000040 -24(fp):<invalid> -20(fp):fp - 0x00000040 ^ fp - 0x00000040 -12(fp):<invalid> -4(fp):ebp



word32 fn1002C2ED(word32 ebp, word32 esi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp es esi fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002C2ED_entry:
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002C2ED:
	fn1000F2EE(fp - 0x00000078)
	fn1000F2EE(fp - 0x00000084)
	word32 edx_129
	word32 ebx_164
	word32 eax_47 = fn10029CBE(fp - 0x00000084, fp - 0x00000078, fp - 0x00000004, es, ds, out edx_129, out ebx_164)
	word32 esi_134 = eax_47
	branch eax_47 < 0x00000000 l1002C3A9
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1002C34E:
	fn1000F2EE(fp - 0x0000006C)
	word32 ecx_152
	word16 si_154
	word32 eax_155 = fn10029FC6(fp - 0x0000006C, out ecx_152, out edx_129, out si_154)
	Mem157[fp - 0x00000060:word32] = eax_155
	branch eax_155 < 0x00000000 l1002C39E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000094 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C37D:
	byte al_172 = fn10029AC8(Mem157[fp - 0x0000006C:word32])
	word32 ecx_173 = Mem157[fp - 0x0000006C:word32]
	Mem175[fp - 0x00000098:word32] = ecx
	Mem180[fp - 0x0000009C:word32] = ebx_164
	edx_129 = 0x00000000 - (-((word32) al_172) == 0x00000000) & Mem180[fp - 0x0000006C:word32]
	*edxOut = edx_129
	Mem186[fp - 0x000000A0:word32] = ebx_164
	Mem188[fp - 0x000000A4:word32] = ebx_164
	Mem192[fp - 0x00000060:word32] = fn1002A716(ecx_173, edx_129, ebx_164, fp - 0x00000004, es, ds, dwArg00, dwArg04, dwArg08, out ebx_164)
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:0x00 ax:<invalid> -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C39E:
	fn1000F2EE(fp - 0x0000006C)
	esi_134 = Mem157[fp - 0x00000060:word32]
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C3A9:
	Mem75[fp - 0x00000098:word32] = 0x00000004
	word32 edi_76 = Mem75[fp - 0x00000098:word32]
	branch Mem75[0x10031000:word32] <=u edi_76 l1002C3F7
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C3B4:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003D54)
	Mem109[fp - 0x00000018:word32] = ebx_164
	Mem110[fp - 0x0000001C:word32] = fp - 0x00000060
	Mem111[fp - 0x00000014:word32] = edi_76
	Mem112[fp - 0x00000010:word32] = ebx_164
	Mem116[fp - 0x00000098:word32] = fp - 0x0000005C
	Mem118[fp - 0x0000009C:word32] = 0x00000005
	Mem120[fp - 0x000000A0:word32] = ebx_164
	Mem122[fp - 0x000000A4:word32] = ebx_164
	word32 ecx_128
	word32 esi_130
	word32 edi_131
	fn1000C491(0x10031000, 0x1000B9DF, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_128, out edx_129, out esi_130, out edi_131)
	esi_134 = Mem122[fp - 0x00000060:word32]
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002C3F7:
	fn1000F2EE(fp - 0x00000078)
	fn1000F2EE(fp - 0x00000084)
	word32 ecx_97
	return fn1002F420(esi_134, Mem75[fp - 0x00000008:word32] ^ fp - 0x00000004, edx_129, Mem75[fp - 0x0000008C:word32], fp - 0x00000004, Mem75[fp - 0x00000090:word32], Mem75[fp - 0x00000094:word32], es, ds, out ecx_97)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002C2ED_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -164(fp):<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):edi -144(fp):esi -140(fp):ebx -132(fp):0x00000000 -128(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -124(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -120(fp):0x00000000 -116(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -112(fp):esi | 0xFFFFFFFF | 0xFFFFFFFF -108(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000060 -24(fp):<invalid> -20(fp):0x00000004 -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002C41A(word32 edx, word32 ebp, word32 esi, selector es, selector ds, ptr32 & edxOut, ptr32 & blOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es esi fs gs ss
// LiveOut: bl eax edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002C41A_entry:
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0070(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00AC(32) Local -00EC(32)

l1002C41A:
	word32 ebp_1056 = fp - 0x00000004
	word32 ebx_1054 = edx
	branch edx == 0x00000000 l1002C441
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00AC(32) Local -00EC(32)

l1002C43E:
	Mem1345[edx:byte] = 0x00
// DataOut: cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000E4 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:edx -228(fp):edi -224(fp):esi -220(fp):ebx -168(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00AC(32) Local -00EC(32)

l1002C441:
	word32 esi_50
	word32 edi_51
	word32 eax_64 = CoCreateInstance(0x10007648, 0x00000000, 0x00000001, 0x100076A8, fn1000FC32(edx, edx, esi, es, ds, fp - 0x000000AC, out esi_50, out edi_51))
	word32 esp_1057 = fp - 0x000000E4
	word32 esi_107 = eax_64
	branch eax_64 < 0x00000000 l1002C93E
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000E4 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:edx -228(fp):edi -224(fp):esi -220(fp):ebx -168(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00AC(32) Local -00C8(32) Local -00CC(32) Local -00D4(0)

l1002C482:
	word32 dwLoc70_1043 = dwLoc70 & 0x00000000
	word32 esi_198
	word32 edi_199
	word32 eax_200 = fn1000EF25(fp - 0x00000078, edx, edx, dwLocAC & 0x00000000, es, ds, out esi_198, out edi_199)
	word32 esp_210
	word32 edi_211
	word32 ebp_212
	byte SCZO_213
	word32 eax_214
	byte SZO_215
	byte C_216
	word32 ebx_217
	word32 edx_218
	word32 ecx_219
	word32 esi_220
	byte Z_221
	byte S_222
	byte CZ_223
	word16 cx_224
	byte al_225
	bcuiposr0 None_226
	selector es_227
	selector ds_228
	byte bl_229
	word16 si_230
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 244)
		uses: al,bl_18,C_194,cx,CZ,ds,dwLoc04_6,dwLoc08_12,dwLoc70_192,dwLoc74_68,dwLoc78_196,dwLoc7C,dwLoc80,dwLoc84,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_200,ebp_7,ebx_17,ecx_201,edi_199,edx,es,esi_198,esp_206,None,S_70,SCZO,si_189,SZO_193,wLoc78,Z_27
		defs: al_225,bl_229,C_216,cx_224,CZ_223,ds_228,eax_214,ebp_212,ebx_217,ecx_219,edi_211,edx_218,es_227,esi_220,esp_210,None_226,S_222,SCZO_213,si_230,SZO_215,Z_221
	byte SCZO_234
	word32 eax_235
	byte SZO_236
	byte C_237
	word32 edx_239
	word32 ecx_240
	byte Z_242
	byte S_243
	byte CZ_244
	word16 cx_245
	byte al_246
	bcuiposr0 None_247
	byte bl_250
	word16 si_251
	word32 edi_1324
	word32 esi_1333
	call Mem0[edi_211 + 0x00000028:word32] (retsize: 4; depth: 4)
		uses: al_225,bl_229,C_216,cx_224,CZ_223,ds_228,dwLoc04_6,dwLoc08_12,dwLoc70_192,dwLoc74_68,dwLoc78_196,dwLoc7C,dwLoc80,dwLoc84,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_214,ebp_212,ebx_217,ecx_219,edi_211,edx_218,es_227,esi_220,esp_210,None_226,S_222,SCZO_213,si_230,SZO_215,wLoc78,Z_221
		defs: al_246,bl_250,C_237,cx_245,CZ_244,ds_249,eax_235,ebp_233,ebx_238,ecx_240,edi_232,edx_239,es_248,esi_241,esp_231,None_247,S_243,SCZO_234,si_251,SZO_236,Z_242
	word32 dwLoc74_1344 = eax_235
	branch eax_235 < 0x00000000 l1002C4D7
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000000E4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):0x00000001 -236(fp):0x100076A8 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -116(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0074(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00C8(32) Local -00CC(32) Local -00D4(0)

l1002C4B6:
	Mem1294[esp_1057 - 0x00000004:word32] = fp - 0x000000D4
	Mem1296[esp_1057 - 0x00000008:word32] = 0x10003200
	Mem1298[esp_1057 - 0x0000000C:word32] = dwLoc70 & 0x00000000
	word32 esp_1302
	word32 edi_1303
	word32 ebp_1304
	byte SCZO_1305
	word32 eax_1306
	byte SZO_1307
	byte C_1308
	word32 ebx_1309
	word32 edx_1310
	word32 ecx_1311
	word32 esi_1312
	byte Z_1313
	byte S_1314
	byte CZ_1315
	word16 cx_1316
	byte al_1317
	bcuiposr0 None_1318
	selector es_1319
	selector ds_1320
	byte bl_1321
	word16 si_1322
	call Mem1298[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_246,bl_250,C_255,cx_245,CZ_244,ds_249,dwLoc04_6,dwLoc08_12,dwLoc70_192,dwLoc74_252,dwLoc78_196,dwLoc7C,dwLoc80,dwLoc84,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_1291,ebp_233,ebx_238,ecx_1301,edi_232,edx_239,es_248,esi_1299,esp_1297,None_247,S_254,SCZO_234,si_1300,SZO_253,wLoc78,wLocD4,Z_242
		defs: al_1317,bl_1321,C_1308,cx_1316,CZ_1315,ds_1320,eax_1306,ebp_1304,ebx_1309,ecx_1311,edi_1303,edx_1310,es_1319,esi_1312,esp_1302,None_1318,S_1314,SCZO_1305,si_1322,SZO_1307,Z_1313
	byte SCZO_1326
	word32 eax_1327
	byte SZO_1328
	byte C_1329
	word32 edx_1331
	word32 ecx_1332
	byte Z_1334
	byte S_1335
	byte CZ_1336
	word16 cx_1337
	byte al_1338
	bcuiposr0 None_1339
	byte bl_1342
	word16 si_1343
	call Mem1298[esi_1312 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: al_1317,bl_1321,C_1308,cx_1316,CZ_1315,ds_1320,dwLoc04_6,dwLoc08_12,dwLoc70_192,dwLoc74_252,dwLoc78_196,dwLoc7C,dwLoc80,dwLoc84,dwLoc94,dwLoc98,dwLoc9C,dwLocA0,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_1306,ebp_1304,ebx_1309,ecx_1311,edi_1303,edx_1310,es_1319,esi_1312,esp_1302,None_1318,S_1314,SCZO_1305,si_1322,SZO_1307,wLoc78,wLocD4,Z_1313
		defs: al_1338,bl_1342,C_1329,cx_1337,CZ_1336,ds_1341,eax_1327,ebp_1325,ebx_1330,ecx_1332,edi_1324,edx_1331,es_1340,esi_1333,esp_1323,None_1339,S_1335,SCZO_1326,si_1343,SZO_1328,Z_1334
	dwLoc74_1344 = eax_1327
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0074(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00C8(32) Local -00CC(32) Local -00D4(0)

l1002C4D7:
	word32 esi_273
	word32 edx_1008
	fn1000C640(fp - 0x00000070, ebx_1054, esi_1333, edi_1324, es, ds, out edx_1008, out esi_273)
	esi_107 = dwLoc74_1344
	branch dwLoc74_1344 < 0x00000000 l1002C93E
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00C8(32) Local -00CC(32) Local -00D4(0)

l1002C4EA:
	branch wLocD4 == 0x0000 l1002C93E
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -0080(32) Local -0094(32) Local -0098(32) Local -00A0(32) Local -00C8(32) Local -00CC(32)

l1002C4F8:
	word32 esi_1053 = 0x00000000
	word32 edi_1115 = 0x00000000
	word32 dwLoc7C_1045 = 0x00000000
	branch ebx_1054 == 0x00000000 l1002C56D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C529:
	word32 v24_1209 = dwLoc70 & 0x00000000 & 0x00000000
	word32 esp_1214 = esp_1057 - 0x00000004
	Mem1215[esp_1214:word32] = fp - 0x0000006C
	Mem1217[esp_1214 - 0x00000004:word32] = 0x00000001
	Mem1220[esp_1214 - 0x00000008:word32] = fp - 0x00000070
	dwLoc70_1043 = v24_1209
	word32 esp_1221
	word32 edi_1222
	word32 ebp_1223
	byte SCZO_1224
	word32 eax_1225
	byte SZO_1226
	byte C_1227
	word32 ebx_1228
	word32 edx_1229
	word32 ecx_1230
	word32 esi_1231
	byte Z_1232
	byte S_1233
	byte CZ_1234
	word16 cx_1235
	byte al_1236
	bcuiposr0 None_1237
	selector es_1238
	selector ds_1239
	byte bl_1240
	word16 si_1241
	call api-ms-win-security-lsalookup-l1-1-1.dll!EnumerateIdentityProviders (retsize: 4; depth: 4)
		uses: al_287,bl_267,C_1212,cx_260,CZ_263,ds_257,dwLoc04_6,dwLoc08_12,dwLoc70_1210,dwLoc74_256,dwLoc78_196,dwLoc7C_300,dwLoc80_295,dwLoc84,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_1218,ebp_269,ebx_266,ecx_271,edi_299,edx_272,es_258,esi_297,esp_1219,None_259,S_278,SCZO_281,si_298,SZO_1211,wLoc78,wLocD4,Z_303
		defs: al_1236,bl_1240,C_1227,cx_1235,CZ_1234,ds_1239,eax_1225,ebp_1223,ebx_1228,ecx_1230,edi_1222,edx_1229,es_1238,esi_1231,esp_1221,None_1237,S_1233,SCZO_1224,si_1241,SZO_1226,Z_1232
	branch (fp - 0x00000070 & fp - 0x00000070) != 0x00000000 l1002C55E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C540:
	Mem1274[esp_1221 - 0x00000004:word32] = fp - 0x00000080
	word32 esi_1275
	word32 edi_1276
	Mem1280[esp_1221 - 0x00000004:word32] = fn1000FC32(edx_1229, ebx_1228, esi_1231, es_1238, ds_1239, dwArg00, out esi_1275, out edi_1276)
	Mem1282[esp_1221 - 0x00000008:word32] = 0x1000791C
	Mem1284[esp_1221 - 0x0000000C:word32] = 0x00000001
	Mem1286[esp_1221 - 0x00000010:word32] = 0x00000000
	Mem1288[esp_1221 - 0x00000014:word32] = 0x1000790C
	CoCreateInstance(Mem1288[esp_1221 - 0x00000014:(ptr IID)], Mem1288[esp_1221 - 0x00000010:LPUNKNOWN], Mem1288[esp_1221 - 0x0000000C:DWORD], Mem1288[esp_1221 - 0x00000008:(ptr IID)], Mem1288[esp_1221 - 0x00000004:(ptr LPVOID)])
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C55E:
	Mem1248[esp_1221 - 0x00000004:word32] = v24_1209
	byte SCZO_1252
	word32 eax_1253
	byte SZO_1254
	byte C_1255
	word32 ecx_1258
	byte Z_1260
	byte S_1261
	byte CZ_1262
	word16 cx_1263
	byte al_1264
	bcuiposr0 None_1265
	byte bl_1268
	word16 si_1269
	call api-ms-win-security-lsalookup-l1-1-1.dll!ReleaseIdentityProviderEnumContext (retsize: 4; depth: 4)
		uses: al_1236,bl_1240,C_1244,cx_1235,CZ_1234,ds_1239,dwLoc04_6,dwLoc08_12,dwLoc70_1210,dwLoc74_256,dwLoc78_196,dwLoc7C_300,dwLoc80_295,dwLoc84,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_1225,ebp_1223,ebx_1228,ecx_1230,edi_1222,edx_1229,es_1238,esi_1231,esp_1247,None_1237,S_1233,SCZO_1224,si_1241,SZO_1242,wLoc78,wLocD4,Z_1243
		defs: al_1264,bl_1268,C_1255,cx_1263,CZ_1262,ds_1267,eax_1253,ebp_1251,ebx_1256,ecx_1258,edi_1250,edx_1257,es_1266,esi_1259,esp_1249,None_1265,S_1261,SCZO_1252,si_1269,SZO_1254,Z_1260
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C56D:
	branch esi_1053 == 0x00000000 l1002C61B
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C575:
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):fp - 0x00000070 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C578:
	word32 esp_1063 = esp_1057 - 0x00000004
	Mem1064[esp_1063:word32] = fp - 0x00000070
	word32 edi_1066
	word32 esi_1065
	word32 eax_1067 = fn1000FC32(edx_1008, ebx_1054, esi_1053, es, ds, dwArg00, out esi_1065, out edi_1066)
	Mem1076[eax_1067:word32] = Mem1064[eax_1067:word32] & 0x00000000
	word32 v26_1058 = dwLoc70_1043 & 0x00000000
	dwLoc70_1043 = v26_1058
	word32 esp_1068 = esp_1063 + 0x00000004
	word32 eax_1073 = 0x80004002
	word16 cx_1079 = (word16) (word32) Mem1076[edi_1066 - 0x00000008:word16]
	branch 0x000D != cx_1079 l1002C5B4
// DataOut: cs cx ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -0084(32) Local -009C(32)

l1002C5B4:
	branch 0x0042 != cx_1079 l1002C5DB
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:0x80004002 ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:0x02 -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x0000000D -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C5C1:
	word32 eax_1199 = Mem1076[edi_1066:word32]
	Mem1202[esp_1063:word32] = eax_1067
	Mem1204[esp_1063 - 0x00000004:word32] = 0x1000792C
	Mem1206[esp_1063 - 0x00000008:word32] = eax_1199
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:0x80004002 ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:0x02 -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000042 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C5A3:
	word32 ecx_1185 = Mem1076[edi_1066:word32]
	Mem1188[esp_1063:word32] = eax_1067
	Mem1190[esp_1063 - 0x00000004:word32] = 0x1000792C
	Mem1193[esp_1063 - 0x00000008:word32] = ecx_1185
// DataOut: cs ds eax ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:0x80004002 ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:0x02 -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x0000000D -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C5CE:
	word32 esp_1141
	word32 edi_1142
	word32 ebp_1143
	byte SCZO_1144
	word32 eax_1145
	byte SZO_1146
	byte C_1147
	word32 ebx_1148
	word32 edx_1149
	word32 ecx_1150
	word32 esi_1151
	byte Z_1152
	byte S_1153
	byte CZ_1154
	word16 cx_1155
	byte al_1156
	bcuiposr0 None_1157
	selector es_1158
	selector ds_1159
	byte bl_1160
	word16 si_1161
	call Mem1076[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_1074,bl_1055,C_1061,cx_1079,CZ_1050,ds_1046,dwLoc04_6,dwLoc08_12,dwLoc70_1059,dwLoc74_1044,dwLoc78_1137,dwLoc7C_1045,dwLoc80_295,dwLoc84_1072,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_1073,ebp_1056,ebx_1054,ecx_1140,edi_1066,edx_1069,es_1047,esi_1139,esp_1068,None_1048,S_1049,SCZO_1080,si_1051,SZO_1077,wLoc78_1138,wLocD4,Z_1081
		defs: al_1156,bl_1160,C_1147,cx_1155,CZ_1154,ds_1159,eax_1145,ebp_1143,ebx_1148,ecx_1150,edi_1142,edx_1149,es_1158,esi_1151,esp_1141,None_1157,S_1153,SCZO_1144,si_1161,SZO_1146,Z_1152
	byte SCZO_1165
	byte SZO_1167
	byte C_1168
	word32 edx_1170
	word32 ecx_1171
	word32 esi_1172
	byte Z_1173
	byte S_1174
	byte CZ_1175
	word16 cx_1176
	byte al_1177
	bcuiposr0 None_1178
	byte bl_1181
	word16 si_1182
	call esi_1151 (retsize: 4; depth: 4)
		uses: al_1156,bl_1160,C_1147,cx_1155,CZ_1154,ds_1159,dwLoc04_6,dwLoc08_12,dwLoc70_1059,dwLoc74_1044,dwLoc78_1137,dwLoc7C_1045,dwLoc80_295,dwLoc84_1072,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_1145,ebp_1143,ebx_1148,ecx_1150,edi_1142,edx_1149,es_1158,esi_1151,esp_1141,None_1157,S_1153,SCZO_1144,si_1161,SZO_1146,wLoc78_1138,wLocD4,Z_1152
		defs: al_1177,bl_1181,C_1168,cx_1176,CZ_1175,ds_1180,eax_1166,ebp_1164,ebx_1169,ecx_1171,edi_1163,edx_1170,es_1179,esi_1172,esp_1162,None_1178,S_1174,SCZO_1165,si_1182,SZO_1167,Z_1173
	esi_1065 = dwLoc7C_1045
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -009C(32)

l1002C5DB:
	branch eax_1073 < 0x00000000 l1002C5FE
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -009C(32)

l1002C5E2:
	branch fn1002ACFE(v26_1058, es, ds) != 0x00 l1002C5FE
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -009C(32)

l1002C5EE:
	word32 esp_1129 = esp_1068 - 0x00000004
	Mem1130[esp_1129:word32] = v26_1058
	Mem1133[esp_1129 - 0x00000004:word32] = fp - 0x00000070
	fn1002D5F1(fp - 0x000000A0, ebx_1054, es, ds, dwArg00)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:0x10003188 bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -009C(32)

l1002C5FE:
	word32 esi_1113
	fn1000C640(fp - 0x00000070, ebx_1054, esi_1065, edi_1066, es, ds, out edx_1008, out esi_1113)
	esp_1057 = esp_1068
	edi_1115 = edi_1066 + 0x00000010
	esi_1053 = esi_1113 - 0x00000001
	dwLoc7C_1045 = esi_1113 - 0x00000001
	branch esi_1113 != 0x00000001 l1002C578
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0070(32) Local -007C(32) Local -009C(32)

l1002C615:
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -009C(32)

l1002C61B:
	word32 eax_1019 = 0x00000000
	branch 0x00000000 == 0x00000000 l1002C8FD
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -009C(32)

l1002C623:
	branch true l1002C671
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -009C(32)

l1002C628:
	word32 esp_1002 = esp_1057 - 0x00000004
	Mem1003[esp_1002:word32] = fp - 0x00000098
	branch fn1002D632(fp - 0x00000098 ^ fp - 0x00000098, 0x00000000, ebx_1054, es, ds, dwArg00, out edx_1008) < 0x00000000 l1002C66B
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -009C(32)

l1002C63E:
	Mem1023[esp_1002:word32] = 0x00000000
	Mem1026[esp_1002 - 0x00000004:word32] = 0x00000000
	Mem1028[esp_1002 - 0x00000008:word32] = fp - 0x000000A1
	fn1002D710(fp - 0x000000A0, ebp_1056, edi_1115, es, ds, dwArg00, dwArg04, dwArg08, out edx_1008)
	Mem1035[esp_1002:word32] = Mem1028[ebp_1056 - 0x00000094:word32]
	CoTaskMemFree(Mem1035[esp_1002:LPVOID])
	Mem1038[ebp_1056 - 0x00000094:word32] = Mem1035[ebp_1056 - 0x00000094:word32] & 0x00000000
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:edx esi:<invalid> ecx:<invalid> edx:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C66B:
	eax_1019 = Mem1003[ebp_1056 - 0x00000098:word32]
// DataOut: cs ds eax ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C671:
	Mem461[ebp_1056 - 0x00000080:word32] = 0x00000000
	word32 ecx_459 = 0x00000000
	branch eax_1019 == 0x00000000 l1002C8FD
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C67E:
	word32 esi_482 = Mem461[Mem461[ebp_1056 - 0x0000009C:word32] + ecx_459 * 0x00000004:word32]
	Mem484[ebp_1056 - 0x00000074:word32] = esi_482
	branch esi_482 == 0x00000000 l1002C69E
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C68E:
	word32 esp_954 = esp_1057 - 0x00000004
	Mem955[esp_954:word32] = esi_482
	word32 esp_958
	word32 edi_959
	word32 ebp_960
	byte SCZO_961
	word32 eax_962
	byte SZO_963
	byte C_964
	word32 ebx_965
	word32 edx_966
	word32 ecx_967
	word32 esi_968
	byte Z_969
	byte S_970
	byte CZ_971
	word16 cx_972
	byte al_973
	bcuiposr0 None_974
	selector es_975
	selector ds_976
	byte bl_977
	word16 si_978
	call Mem955[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_478,bl_475,C_487,cx_468,CZ_471,ds_465,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_953,ebp_479,ebx_474,ecx_957,edi_956,edx_472,es_466,esi_482,esp_954,None_467,S_469,SCZO_470,si_483,SZO_485,wLoc78_330,wLocD4,Z_486
		defs: al_973,bl_977,C_964,cx_972,CZ_971,ds_976,eax_962,ebp_960,ebx_965,ecx_967,edi_959,edx_966,es_975,esi_968,esp_958,None_974,S_970,SCZO_961,si_978,SZO_963,Z_969
	word32 edi_980
	byte SCZO_982
	word32 eax_983
	byte SZO_984
	byte C_985
	word32 ecx_988
	byte Z_990
	byte S_991
	byte CZ_992
	word16 cx_993
	byte al_994
	bcuiposr0 None_995
	byte bl_998
	word16 si_999
	call edi_959 (retsize: 4; depth: 4)
		uses: al_973,bl_977,C_964,cx_972,CZ_971,ds_976,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_962,ebp_960,ebx_965,ecx_967,edi_959,edx_966,es_975,esi_968,esp_958,None_974,S_970,SCZO_961,si_978,SZO_963,wLoc78_330,wLocD4,Z_969
		defs: al_994,bl_998,C_985,cx_993,CZ_992,ds_997,eax_983,ebp_981,ebx_986,ecx_988,edi_980,edx_987,es_996,esi_989,esp_979,None_995,S_991,SCZO_982,si_999,SZO_984,Z_990
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C69E:
	Mem504[ebp_1056 - 0x0000008C:word32] = Mem484[ebp_1056 - 0x0000008C:word32] & 0x00000000
	Mem508[ebp_1056 - 0x00000088:word32] = Mem504[ebp_1056 - 0x00000088:word32] & 0x00000000
	Mem511[ebp_1056 - 0x00000084:word32] = Mem508[ebp_1056 - 0x00000084:word32] & 0x00000000
	fn1000F2EE(ebp_1056 - 0x0000008C)
	Mem515[ebp_1056 - 0x00000088:word32] = Mem511[ebp_1056 - 0x00000088:word32] | 0xFFFFFFFF
	Mem519[ebp_1056 - 0x00000084:word32] = Mem515[ebp_1056 - 0x00000084:word32] | 0xFFFFFFFF
	word32 esp_523 = esp_1057 - 0x00000004
	Mem524[esp_523:word32] = ebp_1056 - 0x0000008C
	word32 edi_526
	word32 esi_525
	word32 eax_527 = fn1002ED84(esi_482, edx_1008, ebx_1054, es, ds, dwArg00, out esi_525, out edi_526)
	word32 edi_529 = eax_527
	branch eax_527 >= 0x00000000 l1002C70E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C6E0:
	fn1000F2EE(ebp_1056 - 0x0000008C)
	Mem937[ebp_1056 - 0x00000088:word32] = Mem524[ebp_1056 - 0x00000088:word32] | 0xFFFFFFFF
	Mem941[ebp_1056 - 0x00000084:word32] = Mem937[ebp_1056 - 0x00000084:word32] | 0xFFFFFFFF
	Mem946[esp_523:word32] = ebp_1056 - 0x0000008C
	word32 edi_949
	edi_529 = fn1002EC33(esi_525, 0x100032DC, ebx_1054, es, ds, dwArg00, out esi_525, out edi_949)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C70E:
	branch Mem524[ebp_1056 - 0x000000A4:word32] == 0x00000000 l1002C837
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C71B:
	Mem801[ebp_1056 - 0x00000064:word32] = 0x00000000
	Mem802[ebp_1056 - 0x00000060:word32] = 0x00000000
	Mem803[ebp_1056 - 0x0000005C:word32] = 0x00000000
	fn1000F2EE(ebp_1056 - 0x00000064)
	Mem805[ebp_1056 - 0x00000060:word32] = Mem803[ebp_1056 - 0x00000060:word32] | 0xFFFFFFFF
	Mem809[ebp_1056 - 0x0000005C:word32] = Mem805[ebp_1056 - 0x0000005C:word32] | 0xFFFFFFFF
	word32 esp_813 = esp_1057 - 0x00000004
	Mem814[esp_813:word32] = ebp_1056 - 0x00000064
	word32 eax_818 = fn1002EC33(esi_525, 0x100031EC, ebx_1054, es, ds, dwArg00, out esi_525, out edi_529)
	Mem820[ebp_1056 - 0x00000070:word32] = eax_818
	branch eax_818 < 0x00000000 l1002C82F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C751:
	Mem840[ebp_1056 - 0x000000C0:word32] = 0x00000000
	Mem841[ebp_1056 - 0x000000BC:word32] = 0x00000000
	Mem842[ebp_1056 - 0x000000B8:word32] = 0x00000000
	fn1000F2EE(ebp_1056 - 0x000000C0)
	Mem844[ebp_1056 - 0x000000BC:word32] = Mem842[ebp_1056 - 0x000000BC:word32] | 0xFFFFFFFF
	Mem848[ebp_1056 - 0x000000B8:word32] = Mem844[ebp_1056 - 0x000000B8:word32] | 0xFFFFFFFF
	Mem853[esp_813:word32] = ebp_1056 - 0x000000C0
	word32 eax_857 = fn1002EC33(esi_525, 0x1000323C, ebx_1054, es, ds, dwArg00, out esi_525, out edi_529)
	Mem859[ebp_1056 - 0x00000070:word32] = eax_857
	branch eax_857 < 0x00000000 l1002C824
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x100031EC cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:0xEC -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C79C:
	Mem879[ebp_1056 - 0x000000B4:word32] = 0x00000000
	Mem880[ebp_1056 - 0x000000B0:word32] = 0x00000000
	Mem881[ebp_1056 - 0x000000AC:word32] = 0x00000000
	fn1000F2EE(ebp_1056 - 0x000000B4)
	Mem886[ebp_1056 - 0x000000B0:word32] = Mem881[ebp_1056 - 0x000000B0:word32] | 0xFFFFFFFF
	Mem889[ebp_1056 - 0x000000AC:word32] = Mem886[ebp_1056 - 0x000000AC:word32] | 0xFFFFFFFF
	Mem893[esp_813:word32] = ebp_1056 - 0x000000B4
	word32 ecx_894
	word32 edx_895
	word16 si_896
	word32 eax_897 = fn10029FC6(dwArg00, out ecx_894, out edx_895, out si_896)
	Mem899[ebp_1056 - 0x00000070:word32] = eax_897
	esi_525 = 0x00000000
	branch eax_897 < 0x00000000 l1002C819
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:0x1000323C cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:0x3C -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C7E5:
	byte al_912 = fn10029AC8(Mem899[ebp_1056 - 0x000000B4:word32])
	Mem915[esp_813:word32] = Mem899[ebp_1056 - 0x000000A4:word32]
	word32 ecx_916 = Mem915[ebp_1056 - 0x000000B4:word32]
	Mem921[esp_813 - 0x00000004:word32] = 0x00000000
	Mem924[esp_813 - 0x00000008:word32] = Mem921[ebp_1056 - 0x0000008C:word32]
	word32 edx_926 = 0x00000000 - (-((word32) al_912) == 0x00000000) & Mem924[ebp_1056 - 0x000000B4:word32]
	Mem930[esp_813 - 0x0000000C:word32] = 0x00000000
	Mem934[ebp_1056 - 0x00000070:word32] = fn1002A716(ecx_916, edx_926, ebx_1054, ebp_1056, es, ds, dwArg00, dwArg04, dwArg08, out ebx_1054)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C819:
	fn1000F2EE(ebp_1056 - 0x000000B4)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C824:
	fn1000F2EE(ebp_1056 - 0x000000C0)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C82F:
	fn1000F2EE(ebp_1056 - 0x00000064)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C837:
	branch ebx_1054 == 0x00000000 l1002C8C2
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C83F:
	branch Mem524[ebx_1054:byte] != 0x00 l1002C8B9
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C844:
	branch Mem524[ebp_1056 - 0x0000007C:word32] == 0x00000000 l1002C8B4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C84A:
	branch edi_529 < 0x00000000 l1002C8B4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C84E:
	word32 eax_636 = ebp_1056 - 0x00000078
	word32 esp_637 = esp_1057 - 0x00000004
	Mem638[esp_637:word32] = eax_636
	Mem641[esp_637 - 0x00000004:word32] = Mem638[ebp_1056 - 0x0000008C:word32]
	byte SCZO_645
	word32 eax_646
	byte SZO_647
	byte C_648
	word32 edx_650
	word32 ecx_651
	byte Z_653
	byte S_654
	byte CZ_655
	word16 cx_656
	byte al_657
	bcuiposr0 None_658
	byte bl_661
	word16 si_662
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertStringSidToSidW (retsize: 4; depth: 4)
		uses: al_551,bl_499,C_635,cx_491,CZ_494,ds_488,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_636,ebp_501,ebx_548,ecx_549,edi_546,edx_545,es_489,esi_547,esp_640,None_490,S_634,SCZO_610,si_544,SZO_633,wLoc78_330,wLocD4,Z_611
		defs: al_657,bl_661,C_648,cx_656,CZ_655,ds_660,eax_646,ebp_644,ebx_649,ecx_651,edi_643,edx_650,es_659,esi_652,esp_642,None_658,S_654,SCZO_645,si_662,SZO_647,Z_653
	branch eax_646 == 0x00000000 l1002C8B4
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C862:
	word32 esi_666 = Mem641[ebp_1056 - 0x0000007C:word32]
	Mem670[ebp_1056 - 0x0000006C:word32] = Mem641[ebp_1056 - 0x0000006C:word32] & 0x00000000
	Mem674[esp_1057 - 0x00000004:word32] = ebp_1056 - 0x0000006C
	Mem677[esp_1057 - 0x00000008:word32] = Mem674[ebp_1056 - 0x00000078:word32]
	word32 eax_679 = GetLengthSid(Mem677[esp_1057 - 0x00000008:PSID])
	Mem683[esp_1057 - 0x00000008:word32] = eax_679
	Mem686[esp_1057 - 0x0000000C:word32] = Mem683[ebp_1056 - 0x00000078:word32]
	Mem688[esp_1057 - 0x00000010:word32] = esi_666
	word32 esp_689
	word32 edi_690
	word32 ebp_691
	byte SCZO_692
	word32 eax_693
	byte SZO_694
	byte C_695
	word32 ebx_696
	word32 edx_697
	word32 ecx_698
	word32 esi_699
	byte Z_700
	byte S_701
	byte CZ_702
	word16 cx_703
	byte al_704
	bcuiposr0 None_705
	selector es_706
	selector ds_707
	byte bl_708
	word16 si_709
	call Mem688[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_657,bl_661,C_672,cx_656,CZ_655,ds_660,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_679,ebp_644,ebx_649,ecx_681,edi_678,edx_650,es_659,esi_666,esp_687,None_658,S_654,SCZO_645,si_667,SZO_671,wLoc78_330,wLocD4,Z_664
		defs: al_704,bl_708,C_695,cx_703,CZ_702,ds_707,eax_693,ebp_691,ebx_696,ecx_698,edi_690,edx_697,es_706,esi_699,esp_689,None_705,S_701,SCZO_692,si_709,SZO_694,Z_700
	word32 esp_710
	byte SCZO_713
	word32 eax_714
	byte SZO_715
	byte C_716
	word32 edx_718
	word32 ecx_719
	byte Z_721
	byte S_722
	byte CZ_723
	word16 cx_724
	byte al_725
	bcuiposr0 None_726
	byte bl_729
	word16 si_730
	call Mem688[edi_690 + 0x0000001C:word32] (retsize: 4; depth: 4)
		uses: al_704,bl_708,C_695,cx_703,CZ_702,ds_707,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_693,ebp_691,ebx_696,ecx_698,edi_690,edx_697,es_706,esi_699,esp_689,None_705,S_701,SCZO_692,si_709,SZO_694,wLoc78_330,wLocD4,Z_700
		defs: al_725,bl_729,C_716,cx_724,CZ_723,ds_728,eax_714,ebp_712,ebx_717,ecx_719,edi_711,edx_718,es_727,esi_720,esp_710,None_726,S_722,SCZO_713,si_730,SZO_715,Z_721
	branch eax_714 < 0x00000000 l1002C890
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C88D:
	Mem796[ebx_1054:byte] = 0x01
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C890:
	Mem736[esp_710 - 0x00000004:word32] = Mem688[ebp_1056 - 0x00000078:word32]
	LocalFree(Mem736[esp_710 - 0x00000004:HLOCAL])
	esp_1057 = esp_710
	word32 ecx_739 = Mem736[ebp_1056 - 0x0000006C:word32]
	branch ecx_739 == 0x00000000 l1002C8B4
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8A0:
	Mem745[ebp_1056 - 0x0000006C:word32] = Mem736[ebp_1056 - 0x0000006C:word32] & 0x00000000
	Mem750[esp_710 - 0x00000004:word32] = ecx_739
	word32 esp_754
	word32 edi_755
	word32 ebp_756
	byte SCZO_757
	word32 eax_758
	byte SZO_759
	byte C_760
	word32 ebx_761
	word32 edx_762
	word32 ecx_763
	word32 esi_764
	byte Z_765
	byte S_766
	byte CZ_767
	word16 cx_768
	byte al_769
	bcuiposr0 None_770
	selector es_771
	selector ds_772
	byte bl_773
	word16 si_774
	call Mem750[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_725,bl_729,C_747,cx_740,CZ_723,ds_728,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_748,ebp_712,ebx_717,ecx_753,edi_711,edx_718,es_727,esi_751,esp_749,None_726,S_732,SCZO_713,si_752,SZO_746,wLoc78_330,wLocD4,Z_742
		defs: al_769,bl_773,C_760,cx_768,CZ_767,ds_772,eax_758,ebp_756,ebx_761,ecx_763,edi_755,edx_762,es_771,esi_764,esp_754,None_770,S_766,SCZO_757,si_774,SZO_759,Z_765
	byte SCZO_778
	word32 eax_779
	byte SZO_780
	byte C_781
	word32 edx_783
	word32 ecx_784
	byte Z_786
	byte S_787
	byte CZ_788
	word16 cx_789
	byte al_790
	bcuiposr0 None_791
	byte bl_794
	word16 si_795
	call esi_764 (retsize: 4; depth: 4)
		uses: al_769,bl_773,C_760,cx_768,CZ_767,ds_772,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_758,ebp_756,ebx_761,ecx_763,edi_755,edx_762,es_771,esi_764,esp_754,None_770,S_766,SCZO_757,si_774,SZO_759,wLoc78_330,wLocD4,Z_765
		defs: al_790,bl_794,C_781,cx_789,CZ_788,ds_793,eax_779,ebp_777,ebx_782,ecx_784,edi_776,edx_783,es_792,esi_785,esp_775,None_791,S_787,SCZO_778,si_795,SZO_780,Z_786
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8B4:
	branch Mem524[ebx_1054:byte] == 0x00 l1002C8C2
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8B9:
	branch Mem524[ebp_1056 - 0x000000A4:word32] == 0x00000000 l1002C8EA
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8EA:
	fn1000F2EE(ebp_1056 - 0x0000008C)
	word32 edx_607
	word32 esi_608
	fn1000C640(ebp_1056 - 0x00000074, ebx_1054, esi_525, edi_529, es, ds, out edx_607, out esi_608)
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8C2:
	fn1000F2EE(ebp_1056 - 0x0000008C)
	word32 esi_574
	fn1000C640(ebp_1056 - 0x00000074, ebx_1054, esi_525, edi_529, es, ds, out edx_1008, out esi_574)
	word32 ecx_576 = Mem524[ebp_1056 - 0x00000080:word32]
	Mem579[ebp_1056 - 0x00000080:word32] = ecx_576 + 0x00000001
	ecx_459 = ecx_576 + 0x00000001
	branch ecx_576 + 0x00000001 <u Mem579[ebp_1056 - 0x00000098:word32] l1002C67E
// DataOut: cs ds ebp ebx ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8E8:
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C8FD:
	fn100150E0(ebp_1056 - 0x0000009C, es, ds)
	word32 esp_371 = esp_1057 - 0x00000004
	Mem372[esp_371:word32] = ebp_1056 - 0x000000D0
	PropVariantClear(Mem372[esp_371:(ptr PROPVARIANT)])
	esp_1057 = esp_371 + 0x00000004
	word32 ecx_375 = Mem372[ebp_1056 - 0x0000007C:word32]
	branch ecx_375 == 0x00000000 l1002C930
// DataOut: cs ds ebp ebx ecx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C91C:
	Mem402[ebp_1056 - 0x0000007C:word32] = Mem372[ebp_1056 - 0x0000007C:word32] & 0x00000000
	Mem407[esp_371:word32] = ecx_375
	word32 esp_410
	word32 edi_411
	word32 ebp_412
	byte SCZO_413
	word32 eax_414
	byte SZO_415
	byte C_416
	word32 ebx_417
	word32 edx_418
	word32 ecx_419
	word32 esi_420
	byte Z_421
	byte S_422
	byte CZ_423
	word16 cx_424
	byte al_425
	bcuiposr0 None_426
	selector es_427
	selector ds_428
	byte bl_429
	word16 si_430
	call Mem407[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: al_366,bl_365,C_404,cx_376,CZ_359,ds_354,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_405,ebp_367,ebx_364,ecx_409,edi_362,edx_361,es_355,esi_408,esp_406,None_356,S_357,SCZO_358,si_360,SZO_403,wLoc78_330,wLocD4,Z_378
		defs: al_425,bl_429,C_416,cx_424,CZ_423,ds_428,eax_414,ebp_412,ebx_417,ecx_419,edi_411,edx_418,es_427,esi_420,esp_410,None_426,S_422,SCZO_413,si_430,SZO_415,Z_421
	word32 edi_432
	byte SCZO_434
	word32 eax_435
	byte SZO_436
	byte C_437
	word32 edx_439
	word32 ecx_440
	word32 esi_441
	byte Z_442
	byte S_443
	byte CZ_444
	word16 cx_445
	byte al_446
	bcuiposr0 None_447
	byte bl_450
	word16 si_451
	call esi_420 (retsize: 4; depth: 4)
		uses: al_425,bl_429,C_416,cx_424,CZ_423,ds_428,dwLoc04_6,dwLoc08_12,dwLoc70_327,dwLoc74_331,dwLoc78_329,dwLoc7C_332,dwLoc80_295,dwLoc84_328,dwLoc94_292,dwLoc98_289,dwLoc9C_301,dwLocA0_284,dwLocA8_20,dwLocAC_31,dwLocC8_43,dwLocCC_41,dwLocD0_39,dwLocD4_37,dwLocDC_15,dwLocE0_23,dwLocE4_25,dwLocE8_203,dwLocEC_205,dwLocF0_207,dwLocF4_61,dwLocF8_63,eax_414,ebp_412,ebx_417,ecx_419,edi_411,edx_418,es_427,esi_420,esp_410,None_426,S_422,SCZO_413,si_430,SZO_415,wLoc78_330,wLocD4,Z_421
		defs: al_446,bl_450,C_437,cx_445,CZ_444,ds_449,eax_435,ebp_433,ebx_438,ecx_440,edi_432,edx_439,es_448,esi_441,esp_431,None_447,S_443,SCZO_434,si_451,SZO_436,Z_442
// DataOut: cs ds ebp ebx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C930:
	fn100150E0(ebp_1056 - 0x0000009C, es, ds)
	esi_107 = Mem372[ebp_1056 - 0x00000070:word32]
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):0x00000220 -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C93E:
	word32 esp_117 = esp_1057 - 0x00000004
	Mem118[esp_117:word32] = 0x00000004
	word32 edi_119 = Mem118[esp_117:word32]
	branch Mem118[0x10031000:word32] <=u edi_119 l1002C990
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002C949:
	fn1000C51D(ebp_1056 - 0x00000038, 0x10003428)
	fn1000C51D(ebp_1056 - 0x00000028, 0x10003D54)
	Mem156[ebp_1056 - 0x00000014:word32] = Mem118[ebp_1056 - 0x00000014:word32] & 0x00000000
	Mem160[ebp_1056 - 0x0000000C:word32] = Mem156[ebp_1056 - 0x0000000C:word32] & 0x00000000
	Mem163[ebp_1056 - 0x00000018:word32] = ebp_1056 - 0x00000070
	Mem164[ebp_1056 - 0x00000010:word32] = edi_119
	Mem168[esp_117:word32] = ebp_1056 - 0x00000058
	Mem170[esp_117 - 0x00000004:word32] = 0x00000005
	Mem172[esp_117 - 0x00000008:word32] = 0x00000000
	Mem174[esp_117 - 0x0000000C:word32] = 0x00000000
	word32 ecx_180
	word32 edx_181
	word32 esi_182
	fn1000C491(0x10031000, 0x1000B97A, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_180, out edx_181, out esi_182, out edi_119)
	esi_107 = Mem174[ebp_1056 - 0x00000070:word32]
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002C990:
	word32 edx_128
	word32 esi_129
	fn1000C640(ebp_1056 - 0x000000A8, ebx_1054, esi_107, edi_119, es, ds, out edx_128, out esi_129)
	word32 esp_134 = esp_1057 + 0x00000004
	word32 ebx_140 = Mem118[esp_134 + 0x00000004:word32]
	byte bl_141
	*blOut = (byte) ebx_140
	word32 ecx_143
	return fn1002F420(esi_129, Mem118[ebp_1056 - 0x00000004:word32] ^ ebp_1056, edx_128, ebx_140, ebp_1056, Mem118[esp_134:word32], Mem118[esp_1057:word32], es, ds, out ecx_143)
// DataOut: bl cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002C41A_exit:
// DataOut: bl eax edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> bl:<invalid> ax:<invalid> dl:<invalid> -248(fp):0x10007648 -244(fp):0x00000000 -240(fp):<invalid> -236(fp):<invalid> -232(fp):<invalid> -228(fp):edi -224(fp):esi -220(fp):ebx -212(fp):<invalid> -208(fp):<invalid> -204(fp):<invalid> -200(fp):<invalid> -196(fp):<invalid> -192(fp):<invalid> -188(fp):<invalid> -184(fp):<invalid> -180(fp):<invalid> -176(fp):<invalid> -172(fp):<invalid> -168(fp):ecx -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):<invalid> -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -104(fp):<invalid> -100(fp):<invalid> -96(fp):<invalid> -28(fp):fp - 0x00000074 -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002C9AE(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut: bl eax ebx edi edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
fn1002C9AE_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0080(32)

l1002C9AE:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem39[ecx:byte] = 0x00
	word32 dwLoc70_179 = 0x00000001
	word32 edi_42
	word32 ebp_43
	byte SCZO_44
	word32 eax_45
	byte SZO_46
	byte C_47
	word32 ebx_48
	word32 esi_49
	word32 ecx_50
	byte Z_51
	byte S_52
	byte CZ_53
	word32 edx_54
	selector es_55
	selector ds_56
	word32 esp_178
	call api-ms-win-security-lsalookup-l1-1-1.dll!EnumerateIdentityProviders (retsize: 4; depth: 164)
		uses: C_27,dwLoc04_6,dwLoc08_12,dwLoc70_40,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_34,ebp_7,ebx_25,ecx_32,edi_3,esi,esp_37,SZO_33
		defs: C_47,CZ_53,ds_56,eax_45,ebp_43,ebx_48,ecx_50,edi_42,edx_54,es_55,esi_49,esp_41,S_52,SCZO_44,SZO_46,Z_51
	branch (fp - 0x00000080 & fp - 0x00000080) != 0x00000000 l1002CAA6
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0080(32)

l1002C9EC:
	Mem161[esp_178 - 0x00000004:word32] = fp - 0x00000078
	word32 esi_163
	word32 edi_164
	Mem168[esp_178 - 0x00000004:word32] = fn1000FC32(edx_54, ebx_48, esi_49, es_55, ds_56, dwArg00, out esi_163, out edi_164)
	Mem170[esp_178 - 0x00000008:word32] = 0x1000791C
	Mem172[esp_178 - 0x0000000C:word32] = 0x00000001
	Mem174[esp_178 - 0x00000010:word32] = edi_164
	Mem176[esp_178 - 0x00000014:word32] = 0x1000790C
	word32 eax_177 = CoCreateInstance(Mem176[esp_178 - 0x00000014:(ptr IID)], Mem176[esp_178 - 0x00000010:LPUNKNOWN], Mem176[esp_178 - 0x0000000C:DWORD], Mem176[esp_178 - 0x00000008:(ptr IID)], Mem176[esp_178 - 0x00000004:(ptr LPVOID)])
	dwLoc70_179 = eax_177
	branch eax_177 < 0x00000000 l1002CA8C
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -112(fp):0x00000001 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0080(32)

l1002CA15:
	Mem243[esp_178 - 0x00000004:word32] = fp - 0x00000074
	Mem247[esp_178 - 0x00000008:word32] = fp - 0x0000006C
	Mem250[esp_178 - 0x0000000C:word32] = edi_164
	Mem252[esp_178 - 0x00000010:word32] = 0x00000000
	word32 esp_254
	word32 edi_255
	word32 ebp_256
	byte SCZO_257
	word32 eax_258
	byte SZO_259
	byte C_260
	word32 ebx_261
	word32 esi_262
	word32 ecx_263
	byte Z_264
	byte S_265
	byte CZ_266
	word32 edx_267
	selector es_268
	selector ds_269
	call Mem252[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_182,CZ_53,ds_56,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_179,dwLoc74_245,dwLoc78_162,dwLoc7C,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_240,ebp_43,ebx_48,ecx_253,edi_164,edx_54,es_55,esi_248,esp_251,S_181,SCZO_44,SZO_180,Z_58
		defs: C_260,CZ_266,ds_269,eax_258,ebp_256,ebx_261,ecx_263,edi_255,edx_267,es_268,esi_262,esp_254,S_265,SCZO_257,SZO_259,Z_264
	word32 edi_271
	word32 ebp_272
	byte SCZO_273
	word32 eax_274
	byte SZO_275
	byte C_276
	word32 ebx_277
	word32 esi_278
	word32 ecx_279
	byte Z_280
	byte S_281
	byte CZ_282
	word32 edx_283
	selector es_284
	selector ds_285
	call Mem252[esi_262 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: C_260,CZ_266,ds_269,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_179,dwLoc74_245,dwLoc78_162,dwLoc7C,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_258,ebp_256,ebx_261,ecx_263,edi_255,edx_267,es_268,esi_262,esp_254,S_265,SCZO_257,SZO_259,Z_264
		defs: C_276,CZ_282,ds_285,eax_274,ebp_272,ebx_277,ecx_279,edi_271,edx_283,es_284,esi_278,esp_270,S_281,SCZO_273,SZO_275,Z_280
	dwLoc70_179 = eax_274
	branch eax_274 < 0x00000000 l1002CA72
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -120(fp):0x00000000 -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0080(32)

l1002CA3A:
	word32 esi_349
	word32 edi_350
	word32 eax_351 = fn100106F6(fp - 0x0000007C, edx_283, ebx_277, esi_278, es_284, ds_285, out esi_349, out edi_350)
	Mem355[esp_178 - 0x00000004:word32] = fp - 0x00000084
	Mem357[esp_178 - 0x00000008:word32] = eax_351
	Mem359[esp_178 - 0x0000000C:word32] = 0x00000001
	Mem362[esp_178 - 0x00000010:word32] = edi_350
	word32 esp_363
	word32 edi_364
	word32 ebp_365
	byte SCZO_366
	word32 eax_367
	byte SZO_368
	byte C_369
	word32 ebx_370
	word32 esi_371
	word32 ecx_372
	byte Z_373
	byte S_374
	byte CZ_375
	word32 edx_376
	selector es_377
	selector ds_378
	call Mem362[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_289,CZ_282,ds_285,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_286,dwLoc74_245,dwLoc78_162,dwLoc7C_346,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_351,ebp_272,ebx_277,ecx_360,edi_350,edx_283,es_284,esi_352,esp_361,S_288,SCZO_273,SZO_287,Z_280
		defs: C_369,CZ_375,ds_378,eax_367,ebp_365,ebx_370,ecx_372,edi_364,edx_376,es_377,esi_371,esp_363,S_374,SCZO_366,SZO_368,Z_373
	word32 edi_380
	word32 ebp_381
	byte SCZO_382
	word32 eax_383
	byte SZO_384
	byte C_385
	word32 ebx_386
	word32 esi_387
	word32 ecx_388
	byte Z_389
	byte S_390
	byte CZ_391
	word32 edx_392
	selector es_393
	selector ds_394
	call Mem362[esi_371 + 0x0000000C:word32] (retsize: 4; depth: 4)
		uses: C_369,CZ_375,ds_378,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_286,dwLoc74_245,dwLoc78_162,dwLoc7C_346,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_367,ebp_365,ebx_370,ecx_372,edi_364,edx_376,es_377,esi_371,esp_363,S_374,SCZO_366,SZO_368,Z_373
		defs: C_385,CZ_391,ds_394,eax_383,ebp_381,ebx_386,ecx_388,edi_380,edx_392,es_393,esi_387,esp_379,S_390,SCZO_382,SZO_384,Z_389
	dwLoc70_179 = eax_383
	branch eax_383 != 0x00000000 l1002CA68
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0080(32)

l1002CA65:
	Mem406[ebx_386:byte] = 0x01
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0080(32)

l1002CA68:
	word32 edx_400
	word32 esi_401
	fn1000C640(fp - 0x0000007C, ebx_386, esi_387, edi_380, es_393, ds_394, out edx_400, out esi_401)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0074(32) Local -0080(32)

l1002CA72:
	branch edi_164 == 0x00000000 l1002CA8C
// DataOut: cs ds ebp ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0080(32)

l1002CA79:
	word32 esp_310 = esp_178 - 0x00000004
	Mem311[esp_310:word32] = edi_164
	word32 esp_314
	word32 edi_315
	word32 ebp_316
	byte SCZO_317
	word32 eax_318
	byte SZO_319
	byte C_320
	word32 ebx_321
	word32 esi_322
	word32 ecx_323
	byte Z_324
	byte S_325
	byte CZ_326
	word32 edx_327
	selector es_328
	selector ds_329
	call Mem311[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_307,CZ_296,ds_292,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_291,dwLoc74_308,dwLoc78_162,dwLoc7C_290,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_309,ebp_302,ebx_300,ecx_313,edi_298,edx_297,es_293,esi_312,esp_310,S_294,SCZO_295,SZO_305,Z_306
		defs: C_320,CZ_326,ds_329,eax_318,ebp_316,ebx_321,ecx_323,edi_315,edx_327,es_328,esi_322,esp_314,S_325,SCZO_317,SZO_319,Z_324
	word32 edi_331
	word32 ebp_332
	byte SCZO_333
	word32 eax_334
	byte SZO_335
	byte C_336
	word32 ebx_337
	word32 esi_338
	word32 ecx_339
	byte Z_340
	byte S_341
	byte CZ_342
	word32 edx_343
	selector es_344
	selector ds_345
	call esi_322 (retsize: 4; depth: 4)
		uses: C_320,CZ_326,ds_329,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_291,dwLoc74_308,dwLoc78_162,dwLoc7C_290,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_318,ebp_316,ebx_321,ecx_323,edi_315,edx_327,es_328,esi_322,esp_314,S_325,SCZO_317,SZO_319,Z_324
		defs: C_336,CZ_342,ds_345,eax_334,ebp_332,ebx_337,ecx_339,edi_331,edx_343,es_344,esi_338,esp_330,S_341,SCZO_333,SZO_335,Z_340
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0080(32)

l1002CA8C:
	branch 0x00000000 == 0x00000000 l1002CAA6
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0080(32)

l1002CA93:
	word32 esp_204 = esp_178 - 0x00000004
	Mem205[esp_204:word32] = 0x00000000
	word32 esp_208
	word32 edi_209
	word32 ebp_210
	byte SCZO_211
	word32 eax_212
	byte SZO_213
	byte C_214
	word32 ebx_215
	word32 esi_216
	word32 ecx_217
	byte Z_218
	byte S_219
	byte CZ_220
	word32 edx_221
	selector es_222
	selector ds_223
	call Mem205[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_201,CZ_190,ds_186,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_184,dwLoc74_185,dwLoc78_202,dwLoc7C_183,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_203,ebp_196,ebx_194,ecx_207,edi_192,edx_191,es_187,esi_206,esp_204,S_188,SCZO_189,SZO_199,Z_200
		defs: C_214,CZ_220,ds_223,eax_212,ebp_210,ebx_215,ecx_217,edi_209,edx_221,es_222,esi_216,esp_208,S_219,SCZO_211,SZO_213,Z_218
	word32 edi_225
	word32 ebp_226
	byte SCZO_227
	word32 eax_228
	byte SZO_229
	byte C_230
	word32 ebx_231
	word32 esi_232
	word32 ecx_233
	byte Z_234
	byte S_235
	byte CZ_236
	word32 edx_237
	selector es_238
	selector ds_239
	call esi_216 (retsize: 4; depth: 4)
		uses: C_214,CZ_220,ds_223,dwLoc04_6,dwLoc08_12,dwLoc10,dwLoc14,dwLoc18,dwLoc1C,dwLoc70_184,dwLoc74_185,dwLoc78_202,dwLoc7C_183,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_212,ebp_210,ebx_215,ecx_217,edi_209,edx_221,es_222,esi_216,esp_208,S_219,SCZO_211,SZO_213,Z_218
		defs: C_230,CZ_236,ds_239,eax_228,ebp_226,ebx_231,ecx_233,edi_225,edx_237,es_238,esi_232,esp_224,S_235,SCZO_227,SZO_229,Z_234
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:0x00000000 esi:<invalid> edx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):0x00000000 -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32) Local -0080(32)

l1002CAA6:
	word32 esp_69 = esp_178 - 0x00000004
	Mem70[esp_69:word32] = dwLoc80 & 0x00000000
	word32 esp_71
	word32 edi_72
	word32 ebp_73
	byte SCZO_74
	word32 eax_75
	byte SZO_76
	byte C_77
	word32 ebx_78
	word32 esi_79
	word32 ecx_80
	byte Z_81
	byte S_82
	byte CZ_83
	selector es_85
	selector ds_86
	word32 edx_101
	call api-ms-win-security-lsalookup-l1-1-1.dll!ReleaseIdentityProviderEnumContext (retsize: 4; depth: 4)
		uses: C_59,CZ_53,ds_56,dwLoc04_6,dwLoc08_12,dwLoc70_64,dwLoc74_65,dwLoc78_66,dwLoc7C_63,dwLoc80_15,dwLoc8C_20,dwLoc90_23,dwLoc94_29,dwLoc98_31,dwLoc9C_36,dwLocA0_38,eax_45,ebp_43,ebx_48,ecx_50,edi_42,edx_54,es_55,esi_49,esp_69,S_52,SCZO_44,SZO_57,Z_58
		defs: C_77,CZ_83,ds_86,eax_75,ebp_73,ebx_78,ecx_80,edi_72,edx_84,es_85,esi_79,esp_71,S_82,SCZO_74,SZO_76,Z_81
	Mem88[esp_71 - 0x00000004:word32] = 0x00000004
	branch Mem88[0x10031000:word32] <=u Mem88[esp_71 - 0x00000004:word32] l1002CAFC
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -0008(32) Local -0070(32)

l1002CABA:
	fn1000C51D(fp - 0x0000003C, 0x10003428)
	fn1000C51D(fp - 0x0000002C, 0x10003D54)
	Mem138[esp_71 - 0x00000004:word32] = fp - 0x0000005C
	Mem140[esp_71 - 0x00000008:word32] = 0x00000005
	word32 ecx_127 = fp - 0x0000002C ^ fp - 0x0000002C
	Mem142[esp_71 - 0x0000000C:word32] = ecx_127
	Mem144[esp_71 - 0x00000010:word32] = ecx_127
	word32 ecx_150
	word32 esi_152
	word32 edi_153
	fn1000C491(0x10031000, 0x1000B919, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_150, out edx_101, out esi_152, out edi_153)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0070(32)

l1002CAFC:
	word32 edi_108 = Mem88[esp_71:word32]
	*ediOut = edi_108
	word32 esi_110 = Mem88[esp_71 + 0x00000004:word32]
	*esiOut = esi_110
	word32 ebx_112 = Mem88[esp_71 + 0x00000008:word32]
	*ebxOut = ebx_112
	word32 ecx_114
	return fn1002F420(dwLoc70_179, eax_11 ^ fp - 0x00000004, edx_101, ebx_112, ebp_73, esi_110, edi_108, es_85, ds_86, out ecx_114)
// DataOut: bl cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp

fn1002C9AE_exit:
// DataOut: bl eax ebx edi edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> -160(fp):fp - 0x00000080 -156(fp):0x00000001 -152(fp):fp - 0x0000006C -148(fp):edi -144(fp):esi -140(fp):ebx -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -28(fp):fp - 0x00000070 -24(fp):fp - 0x0000002C ^ fp - 0x0000002C -20(fp):<invalid> -16(fp):fp - 0x0000002C ^ fp - 0x0000002C -8(fp):<invalid> -4(fp):ebp



byte fn1002CB10(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi es esi fs gs ss
// LiveOut: al bx edx
// Trashed: SCZO ah al ax bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ebp ebx edi esi esp
fn1002CB10_entry:
// DataOut: cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000A(8) Local -000C(0) Local -013C(32)

l1002CB10:
	word32 eax_102
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 ecx_29
	word32 edx_30
	byte al_31 = fn100293ED(ecx, 0x10002F60, 0x100078B0, 0x00, out ecx_29, out edx_30)
	word32 ecx_43
	word32 edx_44
	byte al_45 = fn100293ED(ecx_29, 0x10003460, 0x100078B0, al_31, out ecx_43, out edx_44)
	byte bl_122 = al_45 == 0x00
	eax_102 = eax_11
	branch al_45 != 0x00 l1002CBA6
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000A(8) Local -000C(0) Local -012C(32) Local -0130(32)

l1002CB59:
	memset(fp - 0x00000120, 0x00000000, 0x00000118)
	eax_102 = GetVersionExW(fp - 0x00000124)
	branch eax_102 == 0x00000000 l1002CBA6
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:Test(EQ,Z) ecx:<invalid> al:<invalid> cl:<invalid> -312(fp):0x100078B0 -308(fp):<invalid> -304(fp):esi -300(fp):ebx -296(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000A(8) Local -000C(0) Local -012C(32) Local -0130(32)

l1002CB8A:
	branch (bLoc0C & 0x10) == 0x00 l1002CBA6
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:Test(EQ,Z) ecx:<invalid> al:<invalid> cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):0x00000000 -308(fp):fp - 0x00000124 -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000A(8) Local -000C(0) Local -012C(32) Local -0130(32)

l1002CB90:
	branch (dwLoc0C & 0x00000100) != 0x00000000 l1002CBA6
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:Test(EQ,Z) ecx:<invalid> al:<invalid> cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):0x00000000 -308(fp):fp - 0x00000124 -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000A(8) Local -012C(32) Local -0130(32)

l1002CB99:
	eax_102 = DPB(eax_102, bLoc0A, 0) (alias)
	branch bLoc0A == 0x02 l1002CBA4
// DataOut: al bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:Test(EQ,Z) ecx:<invalid> al:<invalid> cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):0x00000000 -308(fp):fp - 0x00000124 -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -012C(32) Local -0130(32)

l1002CBA0:
	branch bLoc0A != 0x03 l1002CBA6
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:Test(EQ,Z) al:<invalid> ecx:<invalid> cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):0x00000000 -308(fp):fp - 0x00000124 -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -012C(32) Local -0130(32)

l1002CBA4:
	bl_122 = 0x00
// DataOut: bl cs ds ebp edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:Test(EQ,Z) al:<invalid> ecx:<invalid> cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):0x00000000 -308(fp):fp - 0x00000124 -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -012C(32) Local -0130(32)

l1002CBA6:
	word16 bx_77
	*bxOut = (word16) ebx
	word32 ecx_81
	return (byte) fn1002F420(DPB(eax_102, bl_122, 0), eax_11 ^ fp - 0x00000004, edx_44, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_81)
// DataOut: al bx cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000130 edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:0x100078B0 edx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):<invalid> -308(fp):<invalid> -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp

fn1002CB10_exit:
// DataOut: al bx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi edx:<invalid> bl:<invalid> ecx:<invalid> al:<invalid> ebx:ebx cl:<invalid> -316(fp):fp - 0x00000120 -312(fp):<invalid> -308(fp):<invalid> -304(fp):esi -300(fp):ebx -296(fp):<invalid> -292(fp):0x0000011C -8(fp):<invalid> -4(fp):ebp



word32 fn1002CBB8(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
fn1002CBB8_entry:
// DataOut: cs ds ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002CBB8:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem44[edx:word32] = 0x00000000
	word32 dwLoc64_150 = 0x80004005
	branch LookupAccountNameLocalW(ecx, 0x00000000, fp - 0x0000006C, 0x00000000, fp - 0x00000068, fp - 0x00000070) != 0x00000000 l1002CC7A
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CBFB:
	word32 eax_139 = LocalAlloc(0x00000000, 0x00000000)
	word32 ecx_147 = (0x00000000 - (-eax_139 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	dwLoc64_150 = ecx_147
	branch ecx_147 < 0x00000000 l1002CC78
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:0x00000000 ebx:ecx -160(fp):ecx -156(fp):0x00000000 -152(fp):fp - 0x0000006C -148(fp):0x00000000 -144(fp):fp - 0x00000068 -140(fp):fp - 0x00000070 -136(fp):edi -132(fp):esi -128(fp):ebx -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):0x80004005 -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -0090(32) Local -009C(32)

l1002CC1E:
	word32 eax_181 = fn1000F3A7(fp - 0x0000007C, ecx, 0x00000000, out edx)
	dwLoc64_150 = eax_181
	branch eax_181 < 0x00000000 l1002CC69
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> -160(fp):ecx -156(fp):0x00000000 -152(fp):fp - 0x0000006C -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):0x00000000 -136(fp):edi -132(fp):esi -128(fp):ebx -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -007C(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC3B:
	word32 eax_237
	branch LookupAccountNameLocalW(ecx, eax_139, fp - 0x0000006C, 0x00000000, fp - 0x00000068, fp - 0x00000070) == 0x00000000 l1002CC5D
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):ecx -156(fp):0x00000000 -152(fp):fp - 0x0000006C -148(fp):0x00000000 -144(fp):0x00000000 -140(fp):0x00000000 -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC5D:
	eax_237 = fn10015AC3()
	dwLoc64_150 = eax_237
// DataOut: cs ds eax ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):fp - 0x00000068 -140(fp):fp - 0x00000070 -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC56:
	Mem242[edx:word32] = eax_139
	eax_237 = eax_181
// DataOut: cs ds eax ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):fp - 0x00000068 -140(fp):fp - 0x00000070 -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC65:
	branch eax_237 >= 0x00000000 l1002CC70
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):fp - 0x00000068 -140(fp):fp - 0x00000070 -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC69:
	LocalFree(eax_139)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC70:
	fn1000F2EE(fp - 0x0000007C)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC78:
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC7A:
	branch Mem44[0x10031000:word32] <=u 0x00000004 l1002CCC5
// DataOut: cs ds ebp edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:edx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32) Local -009C(32)

l1002CC85:
	fn1000C51D(fp - 0x00000040, 0x10003428)
	fn1000C51D(fp - 0x00000030, 0x10003D54)
	word32 ecx_128
	word32 esi_130
	word32 edi_131
	fn1000C491(0x10031000, 0x1000B8B7, 0x00000000, 0x00000000, 0x00000005, fp - 0x00000060, out ecx_128, out edx, out esi_130, out edi_131)
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:0x00000004 ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx ecx:<invalid> edx:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):fp - 0x0000006C -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x00000004 -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0064(32) Local -0080(32) Local -0084(32) Local -0088(32)

l1002CCC5:
	word32 ecx_103
	return fn1002F420(dwLoc64_150, eax_11 ^ fp - 0x00000004, edx, ebx, fp - 0x00000004, esi, edi, es, ds, out ecx_103)
// DataOut: bl cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000088 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ebx:ecx edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -32(fp):fp - 0x00000064 -28(fp):<invalid> -24(fp):0x00000004 -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1002CBB8_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ebx:ebx edx:<invalid> ecx:<invalid> al:<invalid> ax:<invalid> -160(fp):<invalid> -156(fp):<invalid> -152(fp):<invalid> -148(fp):<invalid> -144(fp):<invalid> -140(fp):<invalid> -136(fp):edi -132(fp):esi -128(fp):ebx -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -108(fp):0x00000000 -104(fp):0x00000000 -100(fp):<invalid> -32(fp):fp - 0x00000064 -28(fp):<invalid> -24(fp):0x00000004 -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn1002CCDB(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg10, ptr32 & ecxOut, ptr32 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: bx eax ecx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0010(32)
fn1002CCDB_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0010(32)

l1002CCDB:
	word32 ebx_1005
	__align(fp - 0x00000004)
	Mem43[dwArg10:word32] = 0x00000000
	word32 edx_1148
	word32 eax_50 = fn1000F30D(fp - 0x000000A4, edx, 0xFFFFFFFF, out edx_1148)
	word32 ebp_1095 = fp - 0x00000004
	word32 esp_298 = fp - 0x00000114
	word32 esi_1375 = eax_50
	branch eax_50 < 0x00000000 l1002D51A
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32)

l1002D51A:
	ebx_1005 = 0x00000000
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000114 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -284(fp):edx -280(fp):0xFFFFFFFF -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CD43:
	fn1000F2EE(fp - 0x000000B0)
	word32 ecx_165
	word16 bx_167
	word32 eax_168 = fn1002A463(ecx, fp - 0x000000B0, fp - 0x00000004, es, ds, out ecx_165, out edx_1148, out bx_167)
	Mem174[fp - 0x00000104:word32] = eax_168
	esi_1375 = eax_168
	ebx_1005 = 0x00000000
	byte bl_1380 = 0x00
	branch eax_168 < 0x00000000 l1002D51C
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000114 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:ecx ecx:<invalid> esi:<invalid> edx:<invalid> ax:<invalid> -284(fp):edx -280(fp):0xFFFFFFFF -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0x00000000 -168(fp):0x00000000 -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CD71:
	word32 esp_1359
	word32 eax_1356
	Mem182[fp - 0x000000F8:word32] = 0x00000000
	branch dwArg08 != 0x00000000 l1002CD89
// DataOut: bl cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):edx -280(fp):0xFFFFFFFF -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CD89:
	Mem1364[fp - 0x00000118:word32] = fp - 0x000000F8
	Mem1366[fp - 0x0000011C:word32] = dwArg08
	word32 edi_1368
	byte SCZO_1370
	word32 eax_1371
	byte SZO_1372
	byte C_1373
	word32 ecx_1376
	word32 edx_1377
	byte S_1378
	byte Z_1379
	byte CZ_1381
	word16 ax_1382
	word16 bx_1383
	byte cl_1384
	byte SO_1385
	word16 cx_1386
	byte al_1387
	byte dl_1388
	word16 si_1391
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertStringSidToSidW (retsize: 4; depth: 4)
		uses: al,ax,bl_172,bx_173,C_185,cl_161,cx_162,CZ,dl_155,ds,dwLoc0104_54,dwLoc010C_17,dwLoc0110_20,dwLoc0114_32,dwLoc0118_36,dwLoc011C_47,dwLoc04_6,dwLoc08_12,dwLoc9C_42,dwLocA0_41,dwLocA4_40,dwLocA8_157,dwLocAC_152,dwLocB0_37,dwLocB4_48,dwLocDC_21,eax_1362,ebp_7,ebx_171,ecx_165,edi_34,edx_166,es,esi_169,esp_1365,S_176,SCZO,si_170,SO,SZO_183,Z_184
		defs: al_1387,ax_1382,bl_1380,bx_1383,C_1373,cl_1384,cx_1386,CZ_1381,dl_1388,ds_1390,eax_1371,ebp_1369,ebx_1374,ecx_1376,edi_1368,edx_1377,es_1389,esi_1375,esp_1367,S_1378,SCZO_1370,si_1391,SO_1385,SZO_1372,Z_1379
	branch eax_1371 != 0x00000000 l1002CDA0
// DataOut: bl cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):edx -280(fp):0xFFFFFFFF -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CDA0:
	eax_1356 = ebx_1005
// DataOut: bl cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CD99:
	eax_1356 = fn10015AC3()
// DataOut: bl cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CD79:
	Mem1353[fp - 0x00000118:word32] = ecx_165
	eax_1356 = fn1002CBB8(Mem1353[fp - 0x000000B0:word32], fp - 0x000000F8, 0x00000000, eax_168, dwArg08, es, ds)
	esp_1359 = fp - 0x00000114
// DataOut: bl cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):edx -280(fp):0xFFFFFFFF -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CDA2:
	word32 ecx_1204
	Mem207[esp_1359 + 0x00000010:word32] = eax_1356
	Mem209[esp_1359 + 0x00000017:byte] = bl_1380
	Mem210[esp_1359 + 0x00000048:word32] = ebx_1005
	Mem211[esp_1359 + 0x0000004C:word32] = ebx_1005
	Mem212[esp_1359 + 0x00000050:word32] = ebx_1005
	Mem213[esp_1359 + 0x0000008C:word32] = ebx_1005
	Mem214[esp_1359 + 0x00000090:word32] = ebx_1005
	Mem215[esp_1359 + 0x00000094:word32] = ebx_1005
	Mem216[esp_1359 + 0x0000007C:word32] = ebx_1005
	Mem217[esp_1359 + 0x00000080:word32] = ebx_1005
	Mem218[esp_1359 + 0x00000084:word32] = ebx_1005
	Mem219[esp_1359 + 0x0000003C:word32] = ebx_1005
	Mem220[esp_1359 + 0x00000040:word32] = ebx_1005
	Mem221[esp_1359 + 0x00000044:word32] = ebx_1005
	word32 edi_1259 = 0x1000333C
	branch eax_1356 < 0x00000000 l1002CEDA
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CDF6:
	fn1000F2EE(esp_1359 + 0x0000007C)
	word32 esi_1288 = esi_1375 | 0xFFFFFFFF
	Mem1292[esp_1359 + 0x00000080:word32] = esi_1288
	Mem1293[esp_1359 + 0x00000084:word32] = esi_1288
	fn1000F2EE(esp_1359 + 0x0000008C)
	Mem1295[esp_1359 + 0x00000090:word32] = esi_1288
	Mem1296[esp_1359 + 0x00000094:word32] = esi_1288
	fn1000F2EE(esp_1359 + 0x00000048)
	word32 ecx_1297 = Mem1296[esp_1359 + 0x0000001C:word32]
	word32 esp_1299 = esp_1359 - 0x00000004
	Mem1300[esp_1299:word32] = esp_1359 + 0x0000007C
	Mem1302[esp_1299 + 0x00000050:word32] = esi_1288
	Mem1304[esp_1299 - 0x00000004:word32] = esp_1299 + 0x00000090
	Mem1306[esp_1299 + 0x00000054:word32] = esi_1288
	Mem1308[esp_1299 - 0x00000008:word32] = esp_1299 + 0x0000004C
	Mem1311[esp_1299 - 0x0000000C:word32] = esp_1299 + 0x0000009C
	word32 eax_1315 = fn1002B4D8(ecx_1297, esp_1299 + 0x0000001B, ebp_1095, es, ds, dwArg00, dwArg04, dwArg08, dwArg0C, out ebx_1005, out edi_1259)
	Mem1320[esp_1299 + 0x00000014:word32] = eax_1315
	ecx_1204 = eax_1315
	branch eax_1315 >= 0x00000000 l1002CEF2
// DataOut: bl cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:0x1000333C ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):0x00000000 -196(fp):0x00000000 -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):0x00000000 -144(fp):0x00000000 -136(fp):0x00000000 -132(fp):0x00000000 -128(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CE70:
	branch Mem1320[0x10031000:word32] <=u 0x00000003 l1002CEDA
// DataOut: bl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):fp - 0x0000007C -288(fp):fp - 0x000000CC -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CE79:
	fn1000C51D(esp_1299 + 0x000000CC, 0x10003E54)
	fn1000C51D(esp_1299 + 0x000000DC, 0x100078E0)
	Mem1331[esp_1299 + 0x000000F0:word32] = ebx_1005
	Mem1332[esp_1299 + 0x000000EC:word32] = esp_1299 + 0x00000014
	Mem1333[esp_1299 + 0x000000F4:word32] = 0x00000004
	Mem1334[esp_1299 + 0x000000F8:word32] = ebx_1005
	Mem1338[esp_1299:word32] = esp_1299 + 0x000000AC
	Mem1340[esp_1299 - 0x00000004:word32] = 0x00000005
	Mem1342[esp_1299 - 0x00000008:word32] = ebx_1005
	Mem1344[esp_1299 - 0x0000000C:word32] = ebx_1005
	word32 ecx_1346
	word32 edx_1347
	word32 esi_1348
	fn1000C491(0x10031000, 0x1000B845, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_1346, out edx_1347, out esi_1348, out edi_1259)
// DataOut: bl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):fp - 0x0000007C -288(fp):fp - 0x000000CC -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CEDA:
	Mem1270[esp_1359 + 0x00000010:word32] = ebx_1005
	word32 edi_1269 = esp_1359 + 0x00000098
	Mem1272[edi_1269:word32] = Mem1270[edi_1259:word32]
	word32 esi_1273 = edi_1259 + 0x00000004
	Mem1276[edi_1269 + 0x00000004:word32] = Mem1272[esi_1273:word32]
	Mem1280[edi_1269 + 0x00000008:word32] = Mem1276[esi_1273 + 0x00000004:word32]
	Mem1284[edi_1269 + 0x0000000C:word32] = Mem1280[esi_1273 + 0x00000008:word32]
	ecx_1204 = ebx_1005
	edi_1259 = 0x1000333C
// DataOut: bl cs ds ebp ebx ecx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CEF2:
	word32 esp_1159 = esp_1359
	word32 esi_1167 = esp_1359 + 0x00000098
	edx_1148 = ebx_1005
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CEFB:
	word32 eax_243 = Mem221[esi_1167 + edx_1148 * 0x00000004:word32]
	Mem244[esp_1359 + 0x00000088:word32] = 0x1000793C
	branch eax_243 != Mem244[edi_1259 + edx_1148 * 0x00000004:word32] l1002CF8A
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF0E:
	edx_1148 = edx_1148 + 0x00000001
	branch edx_1148 != 0x00000004 l1002CEFB
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF14:
	Mem1153[esp_1359 + 0x00000018:word32] = ebx_1005
	word32 eax_1152 = esp_1359 + 0x00000018
	word32 esp_1154 = esp_1359 - 0x00000004
	Mem1155[esp_1154:word32] = eax_1152
	Mem1158[esp_1154 - 0x00000004:word32] = Mem1155[esp_1154 + 0x00000020:word32]
	word32 edi_1160
	byte SCZO_1162
	word32 eax_1163
	byte SZO_1164
	byte C_1165
	word32 ecx_1168
	byte S_1170
	byte Z_1171
	byte bl_1172
	byte CZ_1173
	word16 ax_1174
	word16 bx_1175
	byte cl_1176
	byte SO_1177
	word16 cx_1178
	byte al_1179
	byte dl_1180
	word16 si_1183
	call api-ms-win-security-lsalookup-l1-1-2.dll!LsaLookupUserAccountType (retsize: 4; depth: 4)
		uses: al_204,ax_203,bl_197,bx_198,C_233,cl_230,cx_231,CZ_227,dl_1149,ds_186,dwLoc0104_54,dwLoc010C_17,dwLoc0110_20,dwLoc0114_32,dwLoc0118_36,dwLoc011C_47,dwLoc04_6,dwLoc08_12,dwLoc9C_42,dwLocA0_41,dwLocA4_40,dwLocA8_157,dwLocAC_152,dwLocB0_37,dwLocB4_48,dwLocDC_21,eax_1152,ebp_205,ebx_229,ecx_234,edi_228,edx_1148,es_187,esi_237,esp_1157,S_225,SCZO_1150,si_238,SO_188,SZO_232,Z_1151
		defs: al_1179,ax_1174,bl_1172,bx_1175,C_1165,cl_1176,cx_1178,CZ_1173,dl_1180,ds_1182,eax_1163,ebp_1161,ebx_1166,ecx_1168,edi_1160,edx_1169,es_1181,esi_1167,esp_1159,S_1170,SCZO_1162,si_1183,SO_1177,SZO_1164,Z_1171
	branch eax_1163 < 0x00000000 l1002CF80
// DataOut: bl cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF80:
	Mem1254[esp_1159 + 0x00000010:word32] = eax_1163 | 0x10000000
	ecx_1204 = eax_1163 | 0x10000000
// DataOut: bl cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF2D:
	branch Mem1158[esp_1159 + 0x00000018:word32] != 0x00000005 l1002CF7A
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF34:
	word32 esi_1208 = Mem1158[esp_1159 + 0x00000088:word32]
	Mem1210[esp_1159 + 0x00000098:word32] = Mem1158[esi_1208:word32]
	Mem1214[esp_1159 + 0x0000009C:word32] = Mem1210[esi_1208 + 0x00000004:word32]
	Mem1218[esp_1159 + 0x000000A0:word32] = Mem1214[esi_1208 + 0x00000008:word32]
	Mem1222[esp_1159 + 0x000000A4:word32] = Mem1218[esi_1208 + 0x0000000C:word32]
	esi_1167 = esi_1208 + 0x00000010
	branch Mem1222[esp_1159 + 0x0000001C:word32] == ebx_1005 l1002CF7A
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF4C:
	fn1000F2EE(esp_1159 + 0x00000070)
	Mem1232[esp_1159 + 0x00000074:word32] = Mem1222[esp_1159 + 0x00000074:word32] | 0xFFFFFFFF
	Mem1235[esp_1159 + 0x00000078:word32] = Mem1232[esp_1159 + 0x00000078:word32] | 0xFFFFFFFF
	Mem1239[esp_1159 - 0x00000004:word32] = esp_1159 + 0x00000070
	branch fn1002E93A(ebp_1095, dwArg00, out edx_1148, out ebx_1005, out esi_1167) >= 0x00000000 l1002CF7A
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF71:
	fn1000F2EE(esp_1159 + 0x00000070)
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF7A:
	ecx_1204 = Mem1158[esp_1159 + 0x00000010:word32]
// DataOut: bl cs ds ebp ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF8A:
	branch ecx_1204 < 0x00000000 l1002D4D9
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CF92:
	Mem313[esp_1159 + 0x00000018:word32] = ebx_1005
	word32 esp_314 = esp_1159 - 0x00000004
	Mem315[esp_314:word32] = esp_1159 + 0x00000018
	word32 esi_316
	word32 edi_317
	word32 eax_318 = fn1000FC32(edx_1148, ebx_1005, esi_1167, es, ds, dwArg00, out esi_316, out edi_317)
	Mem321[esp_314:word32] = eax_318
	Mem323[esp_314 - 0x00000004:word32] = 0x1000792C
	byte SCZO_327
	word32 eax_328
	byte SZO_329
	byte C_330
	word32 ecx_333
	word32 edx_334
	byte S_335
	byte Z_336
	byte CZ_338
	word16 ax_339
	word16 bx_340
	byte cl_341
	byte SO_342
	word16 cx_343
	byte al_344
	byte dl_345
	word16 si_348
	byte bl_1106
	word32 esp_1093
	word32 edi_1094
	word32 esi_1101
	call PROPSYS.dll!PSCreateMemoryPropertyStore (retsize: 4; depth: 4)
		uses: al_266,ax_265,bl_259,bx_260,C_271,cl_261,cx_262,CZ_252,dl_253,ds_247,dwLoc0104_54,dwLoc010C_17,dwLoc0110_20,dwLoc0114_32,dwLoc0118_36,dwLoc011C_47,dwLoc04_6,dwLoc08_12,dwLoc9C_42,dwLocA0_41,dwLocA4_40,dwLocA8_157,dwLocAC_152,dwLocB0_37,dwLocB4_48,dwLocDC_21,eax_318,ebp_267,ebx_258,ecx_263,edi_317,edx_254,es_248,esi_316,esp_322,S_270,SCZO_251,si_255,SO_249,SZO_269,Z_250
		defs: al_344,ax_339,bl_337,bx_340,C_330,cl_341,cx_343,CZ_338,dl_345,ds_347,eax_328,ebp_326,ebx_331,ecx_333,edi_325,edx_334,es_346,esi_332,esp_324,S_335,SCZO_327,si_348,SO_342,SZO_329,Z_336
	Mem352[esp_1093 + 0x00000010:word32] = eax_328
	word32 ecx_1132 = eax_328
	branch eax_328 < 0x00000000 l1002D40D
// DataOut: bl cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CFBA:
	branch Mem352[esp_1093 + 0x0000001C:word32] == ebx_1005 l1002D020
// DataOut: bl cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CFC0:
	branch Mem352[esp_1093 + 0x0000003C:word32] == ebx_1005 l1002CFD4
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CFC6:
	Mem1144[esp_1093 - 0x00000004:word32] = Mem352[esp_1093 + 0x0000003C:word32]
	LocalFree(Mem1144[esp_1093 - 0x00000004:HLOCAL])
	Mem1147[esp_1093 + 0x0000003C:word32] = ebx_1005
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CFD4:
	Mem1081[esp_1093 + 0x00000040:word32] = Mem352[esp_1093 + 0x00000040:word32] | 0xFFFFFFFF
	Mem1085[esp_1093 + 0x00000044:word32] = Mem1081[esp_1093 + 0x00000044:word32] | 0xFFFFFFFF
	Mem1089[esp_1093 - 0x00000004:word32] = esp_1093 + 0x0000003C
	Mem1092[esp_1093 - 0x00000008:word32] = Mem1089[esp_1093 + 0x0000001C:word32]
	byte SCZO_1096
	word32 eax_1097
	byte SZO_1098
	byte C_1099
	word32 ecx_1102
	word32 edx_1103
	byte S_1104
	byte Z_1105
	byte CZ_1107
	word16 ax_1108
	word16 bx_1109
	byte cl_1110
	byte SO_1111
	word16 cx_1112
	byte al_1113
	byte dl_1114
	word16 si_1117
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertSidToStringSidW (retsize: 4; depth: 4)
		uses: al_344,ax_339,bl_337,bx_340,C_1087,cl_350,cx_351,CZ_338,dl_345,ds_347,dwLoc0104_54,dwLoc010C_17,dwLoc0110_20,dwLoc0114_32,dwLoc0118_36,dwLoc011C_47,dwLoc04_6,dwLoc08_12,dwLoc9C_42,dwLocA0_41,dwLocA4_40,dwLocA8_157,dwLocAC_152,dwLocB0_37,dwLocB4_48,dwLocDC_21,eax_1083,ebp_326,ebx_331,ecx_349,edi_325,edx_334,es_346,esi_332,esp_1091,S_354,SCZO_1077,si_348,SO_342,SZO_1086,Z_1078
		defs: al_1113,ax_1108,bl_1106,bx_1109,C_1099,cl_1110,cx_1112,CZ_1107,dl_1114,ds_1116,eax_1097,ebp_1095,ebx_1100,ecx_1102,edi_1094,edx_1103,es_1115,esi_1101,esp_1093,S_1104,SCZO_1096,si_1117,SO_1111,SZO_1098,Z_1105
	branch eax_1097 == 0x00000000 l1002CFF7
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CFF7:
	word32 eax_1137 = fn100107F1()
	Mem1138[esp_1093 + 0x00000010:word32] = eax_1137
	branch eax_1137 < 0x00000000 l1002D40D
// DataOut: bl cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002CFF1:
	Mem1136[esp_1093 + 0x00000010:word32] = ebx_1005
// DataOut: bl cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D008:
	Mem1126[esp_1093 - 0x00000004:word32] = Mem1092[esp_1093 + 0x0000003C:word32]
	word32 eax_1130 = fn1002EE81(Mem1126[esp_1093 + 0x00000018:word32], 0x100032DC, ebx_1005, edi_1094, es, ds, dwArg00, out esi_1101)
	Mem1135[esp_1093 + 0x00000010:word32] = eax_1130
	ecx_1132 = eax_1130
// DataOut: bl cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D020:
	branch ecx_1132 < 0x00000000 l1002D40D
// DataOut: bl cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D028:
	Mem466[esp_1093 + 0x00000054:word32] = ebx_1005
	Mem468[esp_1093 + 0x00000058:word32] = 0x00000000
	Mem469[esp_1093 + 0x0000005C:word32] = 0x00000000
	Mem472[esp_1093 + 0x0000002C:word32] = 0x00000000
	Mem473[esp_1093 + 0x00000030:word32] = 0x00000000
	Mem474[esp_1093 + 0x00000034:word32] = 0x00000000
	edi_1094 = 0x00000000
	word32 edx_1022 = 0x00000000
// DataOut: bl cs ds ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D046:
	word32 eax_1039
	word32 edx_1042
	esi_1101 = Mem474[esp_1093 + 0x00000070:word32]
	branch Mem474[esp_1093 + 0x00000098 + edx_1022 * 0x00000004:word32] != Mem474[Mem474[esp_1093 + 0x00000088:word32] + edx_1022 * 0x00000004:word32] l1002D101
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D064:
	edx_1022 = edx_1022 + 0x00000001
	branch edx_1022 != 0x00000004 l1002D046
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D06A:
	branch esi_1101 == 0x00000000 l1002D101
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D072:
	branch Mem474[esi_1101:word16] == 0x0000 l1002D101
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D101:
	branch Mem474[esp_1093 + 0x00000017:byte] != bl_1106 l1002D1A7
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D10B:
	ebx_1005 = 0x00000000
	branch esi_1101 == 0x00000000 l1002D163
// DataOut: bx cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D111:
	branch Mem474[esi_1101:word16] == 0x0000 l1002D163
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D163:
	fn1000F2EE(esp_1093 + 0x00000048)
	Mem901[esp_1093 + 0x0000004C:word32] = esi_1101 | 0xFFFFFFFF
	Mem902[esp_1093 + 0x00000050:word32] = esi_1101 | 0xFFFFFFFF
	word32 ecx_900 = esp_1093 + 0x00000054
	fn1000F2EE(ecx_900)
	word32 edx_903 = Mem902[esp_1093 + 0x00000064:word32]
	word32 esp_906 = esp_1093 - 0x00000004
	Mem907[esp_906:word32] = esp_1093 + 0x00000048
	Mem909[esp_906 + 0x0000005C:word32] = esi_1101 | 0xFFFFFFFF
	Mem911[esp_906 - 0x00000004:word32] = esp_906 + 0x00000058
	Mem913[esp_906 - 0x00000008:word32] = 0x00000000
	Mem915[esp_906 - 0x0000000C:word32] = ecx_900
	Mem916[esp_906 + 0x00000060:word32] = esi_1101 | 0xFFFFFFFF
	word32 ecx_918
	word32 eax_920 = fn10028B5D(edx_903, esi_1101 | 0xFFFFFFFF, 0x00000000, es, ds, bArg04, dwArg08, dwArg0C, out ecx_918, out edx_1022)
	ebx_1005 = Mem916[esp_906 + 0x00000058:word32]
	Mem928[esp_906 + 0x00000014:word32] = eax_920
	esi_1101 = esi_1101 | 0xFFFFFFFF
	ecx_1132 = eax_920
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D1A7:
	branch ecx_1132 < 0x00000000 l1002D364
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D1AF:
	word32 ecx_647 = Mem474[esp_1093 + 0x00000018:word32]
	word32 esp_648 = esp_1093 - 0x00000004
	Mem649[esp_648:word32] = Mem474[esp_1093 + 0x00000048:word32]
	word32 eax_651 = fn1002EE81(ecx_647, 0x100032A0, ebx_1005, 0x00000000, es, ds, dwArg00, out esi_1101)
	Mem653[esp_648 + 0x00000014:word32] = eax_651
	edx_1022 = 0x100032A0
	branch eax_651 < 0x00000000 l1002D364
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D1CE:
	word32 eax_664
	branch Mem653[esp_648 + 0x0000001B:byte] == 0x00 l1002D236
// DataOut: cs ds ebp ebx edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100032A0 al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D236:
	Mem877[esp_648:word32] = Mem653[esp_648 + 0x00000068:word32]
	eax_664 = fn1002EE81(Mem877[esp_648 + 0x0000001C:word32], 0x100032B4, ebx_1005, 0x00000000, es, ds, dwArg00, out esi_1101)
	Mem886[esp_648 + 0x00000014:word32] = eax_664
	edx_1022 = 0x100032B4
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100032A0 al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D1D5:
	Mem832[esp_648 + 0x00000024:word32] = 0x00000000
	Mem833[esp_648 + 0x00000028:word32] = 0x00000000
	Mem834[esp_648 + 0x0000002C:word32] = 0x00000000
	fn1000F2EE(esp_648 + 0x00000024)
	Mem838[esp_648 + 0x00000028:word32] = Mem834[esp_648 + 0x00000028:word32] | 0xFFFFFFFF
	Mem843[esp_648 + 0x0000002C:word32] = Mem838[esp_648 + 0x0000002C:word32] | 0xFFFFFFFF
	Mem847[esp_648:word32] = esp_648 + 0x00000024
	word32 ecx_848
	word16 si_850
	word32 eax_851 = fn10029FC6(dwArg00, out ecx_848, out edx_1022, out si_850)
	Mem853[esp_648 + 0x00000014:word32] = eax_851
	branch eax_851 < 0x00000000 l1002D227
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x100032A0 al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D211:
	Mem867[esp_648:word32] = Mem853[esp_648 + 0x00000024:word32]
	Mem874[esp_648 + 0x00000014:word32] = fn1002EE81(Mem867[esp_648 + 0x0000001C:word32], 0x100032B4, ebx_1005, 0x00000000, es, ds, dwArg00, out esi_1101)
	edx_1022 = 0x100032B4
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D227:
	fn1000F2EE(esp_1093 + 0x00000020)
	eax_664 = Mem853[esp_1093 + 0x00000010:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D24C:
	branch eax_664 < 0x00000000 l1002D364
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D364:
	ebx_1005 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D254:
	branch Mem653[esp_1093 + 0x00000038:word32] != 0x00000000 l1002D2E2
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D25E:
	branch Mem653[esp_1093 + 0x00000017:byte] == 0x00 l1002D281
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D281:
	fn1000F2EE(esp_1093 + 0x0000002C)
	Mem816[esp_1093 + 0x00000030:word32] = Mem653[esp_1093 + 0x00000030:word32] | 0xFFFFFFFF
	Mem820[esp_1093 + 0x00000034:word32] = Mem816[esp_1093 + 0x00000034:word32] | 0xFFFFFFFF
	Mem825[esp_1093 - 0x00000004:word32] = esp_1093 + 0x0000002C
	fn1002A1AC(ebx_1005, esi_1101, es, ds, dwArg00)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D265:
	word32 esp_805 = esp_1093 - 0x00000004
	Mem806[esp_805:word32] = fn10015369(esp_1093 + 0x0000007C)
	Mem809[esp_805 - 0x00000004:word32] = Mem806[esp_805 + 0x00000080:word32]
	word32 edx_811
	fn1000F30D(esp_805 + 0x00000030, dwArg00, dwArg04, out edx_811)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2A2:
	edi_1094 = Mem653[esp_1093 + 0x0000002C:word32]
	branch edi_1094 == 0x00000000 l1002D2B1
// DataOut: cs cx ds ebp edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2AC:
	branch Mem653[edi_1094:word16] != 0x0000 l1002D2E2
// DataOut: cs cx ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2B1:
	word32 eax_781 = Mem653[esp_1093 + 0x0000003C:word32]
	branch eax_781 == 0x00000000 l1002D2E2
// DataOut: cs cx ds eax ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2B9:
	branch Mem653[eax_781:word16] == 0x0000 l1002D2E2
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2BE:
	fn1000F2EE(esp_1093 + 0x0000002C)
	Mem793[esp_1093 + 0x00000030:word32] = Mem653[esp_1093 + 0x00000030:word32] | 0xFFFFFFFF
	Mem796[esp_1093 + 0x00000034:word32] = Mem793[esp_1093 + 0x00000034:word32] | 0xFFFFFFFF
	fn1002A23E(esp_1093 + 0x0000002C, ebp_1095, es, ds)
	edi_1094 = Mem796[esp_1093 + 0x0000002C:word32]
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2E2:
	word32 ecx_681
	word32 edx_682
	word32 ebx_683
	byte al_685 = fn1000CDA9(es, ds, out ecx_681, out edx_682, out ebx_683, out esi_1101)
	Mem690[esp_1093 + 0x00000020:word32] = 0x00000000
	Mem691[esp_1093 + 0x00000024:word32] = 0x00000000
	Mem692[esp_1093 + 0x00000028:word32] = 0x00000000
	word32 ebx_687 = DPB(ebx_683, al_685, 0)
	branch Mem692[esp_1093 + 0x00000038:word32] != 0x00000000 l1002D301
// DataOut: bl cs ds edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D2FD:
	Mem767[esp_1093 + 0x00000038:word32] = edi_1094
// DataOut: bl cs ds es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D301:
	fn1000F2EE(esp_1093 + 0x00000020)
	byte dl_696 = Mem692[esp_1093 + 0x00000017:byte]
	Mem700[esp_1093 + 0x00000024:word32] = Mem692[esp_1093 + 0x00000024:word32] | 0xFFFFFFFF
	Mem704[esp_1093 + 0x00000028:word32] = Mem700[esp_1093 + 0x00000028:word32] | 0xFFFFFFFF
	word32 esp_707 = esp_1093 - 0x00000004
	Mem708[esp_707:word32] = esp_1093 + 0x00000020
	Mem711[esp_707 - 0x00000004:word32] = Mem708[esp_707 + 0x0000003C:word32]
	Mem713[esp_707 - 0x00000008:word32] = esi_1101
	Mem716[esp_707 - 0x0000000C:word32] = Mem713[esp_707 + 0x00000058:word32]
	word32 eax_718 = fn1002A67F(al_685, dl_696, dwArg00, dwArg04, dwArg08, dwArg0C, out edx_1022)
	Mem720[esp_707 + 0x00000014:word32] = eax_718
	branch eax_718 < 0x00000000 l1002D34F
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> ax:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D335:
	Mem751[esp_707:word32] = Mem720[esp_707 + 0x00000024:word32]
	word32 eax_756 = fn1002EE81(Mem751[esp_707 + 0x0000001C:word32], 0x10003304, ebx_687, edi_1094, es, ds, dwArg00, out esi_1101)
	Mem758[esp_707 + 0x00000014:word32] = eax_756
	edx_1022 = 0x10003304
	branch eax_756 >= 0x00000000 l1002D357
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> dl:<invalid> cl:<invalid> ax:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D357:
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:0x10003304 al:<invalid> bl:<invalid> dl:0x04 cl:<invalid> ax:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D34F:
	Mem748[esp_1093 + 0x00000010:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> dl:<invalid> cl:<invalid> ax:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D359:
	fn1000F2EE(esp_1093 + 0x00000020)
	ebx_1005 = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> bl:<invalid> dl:<invalid> cl:<invalid> ax:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D116:
	branch Mem474[esp_1093 + 0x0000003C:word32] == 0x00000000 l1002D149
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D11C:
	fn1000F2EE(esp_1093 + 0x0000002C)
	Mem962[esp_1093 + 0x00000030:word32] = Mem474[esp_1093 + 0x00000030:word32] | 0xFFFFFFFF
	Mem965[esp_1093 + 0x00000034:word32] = Mem962[esp_1093 + 0x00000034:word32] | 0xFFFFFFFF
	word16 bx_968 = fn1002A23E(esp_1093 + 0x0000002C, ebp_1095, es, ds)
	ebx_1005 = (word32) bx_968 (alias)
	eax_1039 = Mem965[esp_1093 + 0x0000002C:word32]
	branch eax_1039 == 0x00000000 l1002D149
// DataOut: bx cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D144:
	branch Mem965[eax_1039:word16] != bx_968 l1002D14D
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D149:
	eax_1039 = Mem474[esp_1093 + 0x00000038:word32]
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D14D:
	edx_1042 = esi_1101
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D07D:
	fn1000F2EE(esp_1093 + 0x00000048)
	Mem991[esp_1093 + 0x0000004C:word32] = Mem474[esp_1093 + 0x0000004C:word32] | 0xFFFFFFFF
	Mem995[esp_1093 + 0x00000050:word32] = Mem991[esp_1093 + 0x00000050:word32] | 0xFFFFFFFF
	word32 ecx_993 = esp_1093 + 0x00000054
	fn1000F2EE(ecx_993)
	Mem999[esp_1093 + 0x00000058:word32] = Mem995[esp_1093 + 0x00000058:word32] | 0xFFFFFFFF
	Mem1003[esp_1093 + 0x0000005C:word32] = Mem999[esp_1093 + 0x0000005C:word32] | 0xFFFFFFFF
	word32 esp_1010 = esp_1093 - 0x00000004
	Mem1011[esp_1010:word32] = esp_1093 + 0x00000048
	Mem1016[esp_1010 - 0x00000004:word32] = esp_1010 + 0x00000058
	Mem1018[esp_1010 - 0x00000008:word32] = 0x00000000
	Mem1020[esp_1010 - 0x0000000C:word32] = ecx_993
	word32 ecx_1021
	word32 eax_1023 = fn10028B5D(esi_1101, esi_1101, 0x00000000, es, ds, bArg04, dwArg08, dwArg0C, out ecx_1021, out edx_1022)
	Mem1025[esp_1010 + 0x00000014:word32] = eax_1023
	ebx_1005 = 0x00000000
	branch eax_1023 < 0x00000000 l1002D366
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D0C4:
	branch Mem1025[esp_1010 + 0x00000040:word32] == 0x00000000 l1002D0F7
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D0CA:
	fn1000F2EE(esp_1010 + 0x00000030)
	Mem1060[esp_1010 + 0x00000034:word32] = Mem1025[esp_1010 + 0x00000034:word32] | 0xFFFFFFFF
	Mem1063[esp_1010 + 0x00000038:word32] = Mem1060[esp_1010 + 0x00000038:word32] | 0xFFFFFFFF
	word16 bx_1066 = fn1002A23E(esp_1010 + 0x00000030, ebp_1095, es, ds)
	ebx_1005 = (word32) bx_1066 (alias)
	eax_1039 = Mem1063[esp_1010 + 0x00000030:word32]
	branch eax_1039 == 0x00000000 l1002D0F7
// DataOut: bx cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D0F2:
	branch Mem1063[eax_1039:word16] != bx_1066 l1002D0FB
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D0F7:
	eax_1039 = Mem1025[esp_1010 + 0x0000003C:word32]
// DataOut: cs ds eax ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D0FB:
	edx_1042 = Mem1025[esp_1010 + 0x0000004C:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D14F:
	word32 ecx_593 = Mem474[esp_1093 + 0x00000018:word32]
	word32 esp_594 = esp_1093 - 0x00000004
	Mem595[esp_594:word32] = eax_1039
	Mem597[esp_594 - 0x00000004:word32] = esi_1101
	Mem601[esp_594 + 0x00000014:word32] = fn1002AD66(ecx_593, edx_1042, ebx_1005, es, ds, dwArg00, dwArg04, out edx_1022)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D366:
	fn1000F2EE(esp_1093 + 0x0000002C)
	fn1000F2EE(esp_1093 + 0x00000054)
	word32 eax_499 = Mem474[esp_1093 + 0x00000010:word32]
	branch eax_499 < 0x00000000 l1002D40D
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> cl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D384:
	branch Mem474[ebp_1095 + 0x00000010:byte] == 0x00 l1002D3E2
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> cl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D38A:
	Mem537[esp_1093 + 0x00000020:word32] = ebx_1005
	Mem538[esp_1093 + 0x00000024:word32] = ebx_1005
	Mem539[esp_1093 + 0x00000028:word32] = ebx_1005
	fn1000F2EE(esp_1093 + 0x00000020)
	Mem541[esp_1093 + 0x00000024:word32] = Mem539[esp_1093 + 0x00000024:word32] | 0xFFFFFFFF
	Mem545[esp_1093 + 0x00000028:word32] = Mem541[esp_1093 + 0x00000028:word32] | 0xFFFFFFFF
	word32 esp_551 = esp_1093 - 0x00000004
	Mem552[esp_551:word32] = esp_1093 + 0x00000020
	word32 eax_555 = fn1002ABA7(0x01, 0x00000000, ebp_1095, esi_1101, es, ds, dwArg00, out edx_1022)
	Mem557[esp_551 + 0x00000014:word32] = eax_555
	branch eax_555 < 0x00000000 l1002D3D5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> cl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D3BF:
	Mem571[esp_551:word32] = Mem557[esp_551 + 0x00000024:word32]
	Mem578[esp_551 + 0x00000014:word32] = fn1002EE81(Mem571[esp_551 + 0x0000001C:word32], 0x100032F0, ebx_1005, edi_1094, es, ds, dwArg00, out esi_1101)
	edx_1022 = 0x100032F0
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:0x01 dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D3D5:
	fn1000F2EE(esp_1093 + 0x00000020)
	eax_499 = Mem557[esp_1093 + 0x00000010:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D3E2:
	branch eax_499 < 0x00000000 l1002D40D
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D3E6:
	word32 ecx_519 = Mem474[esp_1093 + 0x00000018:word32]
	word32 esp_521 = esp_1093 - 0x00000004
	Mem522[esp_521:word32] = esp_1093 + 0x00000098
	word32 eax_526 = fn1002EE15(ecx_519, edx_1022, es, ds, dwArg00, out ebx_1005, out esi_1101, out edi_1094)
	Mem528[esp_521 + 0x00000014:word32] = eax_526
	esp_1093 = esp_521 + 0x00000004
	branch eax_526 < 0x00000000 l1002D40D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D3FF:
	word32 ecx_532 = Mem528[esp_521 + 0x00000064:word32]
	word32 eax_533 = Mem528[esp_521 + 0x0000001C:word32]
	Mem534[esp_521 + 0x0000001C:word32] = ebx_1005
	Mem535[ecx_532:word32] = eax_533
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D40D:
	branch Mem352[esp_1093 + 0x0000001C:word32] == 0x00000000 l1002D41E
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D414:
	word32 esp_432 = esp_1093 - 0x00000004
	Mem433[esp_432:word32] = Mem352[esp_1093 + 0x0000001C:word32]
	LocalFree(Mem433[esp_432:HLOCAL])
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D41E:
	word32 esi_384
	fn1000C640(esp_1093 + 0x00000018, ebx_1005, esi_1101, edi_1094, es, ds, out edx_1148, out esi_384)
	esp_1159 = esp_1093
	branch Mem352[esp_1093 + 0x00000010:word32] < 0x00000000 l1002D4D9
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D432:
	branch Mem352[esp_1093 + 0x00000064:word32] == 0x00000000 l1002D4D9
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D43D:
	word32 esp_390 = esp_1093 - 0x00000004
	Mem391[esp_390:word32] = 0x00000004
	word32 esi_392 = Mem391[esp_390:word32]
	esp_1159 = esp_390 + 0x00000004
	branch Mem391[0x10031000:word32] <=u esi_392 l1002D4D9
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D44C:
	fn1000C51D(esp_390 + 0x000000CC, 0x10003428)
	fn1000C51D(esp_390 + 0x000000DC, 0x10003088)
	Mem402[esp_390 + 0x000000F0:word32] = ebx_1005
	Mem403[esp_390 + 0x000000EC:word32] = esp_390 + 0x0000009C
	Mem405[esp_390 + 0x00000064:word32] = (word32) Mem403[esp_390 + 0x0000001B:byte]
	Mem407[esp_390 + 0x000000F4:word32] = 0x00000010
	Mem408[esp_390 + 0x000000F8:word32] = ebx_1005
	Mem409[esp_390 + 0x000000FC:word32] = esp_390 + 0x00000064
	Mem410[esp_390 + 0x00000100:word32] = ebx_1005
	Mem411[esp_390 + 0x00000104:word32] = esi_392
	Mem412[esp_390 + 0x00000108:word32] = ebx_1005
	Mem417[esp_390:word32] = esp_390 + 0x000000AC
	Mem419[esp_390 - 0x00000004:word32] = 0x00000006
	Mem421[esp_390 - 0x00000008:word32] = ebx_1005
	Mem423[esp_390 - 0x0000000C:word32] = ebx_1005
	word32 ecx_425
	word32 esi_427
	word32 edi_428
	fn1000C491(0x10031000, 0x1000B7C1, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_425, out edx_1148, out esi_427, out edi_428)
	esp_1159 = esp_390 + 0x00000004
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D4D9:
	branch Mem244[esp_1159 + 0x0000003C:word32] == 0x00000000 l1002D4EE
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D4E0:
	word32 esp_307 = esp_1159 - 0x00000004
	Mem308[esp_307:word32] = Mem244[esp_1159 + 0x0000003C:word32]
	LocalFree(Mem308[esp_307:HLOCAL])
	Mem311[esp_307 + 0x00000040:word32] = ebx_1005
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):0x00000000 -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D4EE:
	Mem300[esp_1159 + 0x00000040:word32] = ebx_1005
	Mem301[esp_1159 + 0x00000044:word32] = ebx_1005
	fn1000F2EE(esp_1159 + 0x0000007C)
	fn1000F2EE(esp_1159 + 0x0000008C)
	fn1000F2EE(esp_1159 + 0x00000048)
	esp_298 = esp_1159
	esi_1375 = Mem301[esp_1159 + 0x00000010:word32]
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):<invalid> -212(fp):0x00000000 -208(fp):0x00000000 -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):0xFFFFFFFF -168(fp):0xFFFFFFFF -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D51C:
	word32 esp_82 = esp_298 - 0x00000004
	Mem83[esp_82:word32] = 0x00000004
	word32 edi_84 = Mem83[esp_82:word32]
	branch Mem83[0x10031000:word32] <=u edi_84 l1002D588
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):<invalid> -168(fp):<invalid> -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D527:
	fn1000C51D(esp_82 + 0x000000CC, 0x10003428)
	fn1000C51D(esp_82 + 0x000000DC, 0x10003D54)
	Mem124[esp_82 + 0x000000F0:word32] = ebx_1005
	Mem125[esp_82 + 0x000000EC:word32] = esp_82 + 0x00000014
	Mem126[esp_82 + 0x000000F4:word32] = edi_84
	Mem127[esp_82 + 0x000000F8:word32] = ebx_1005
	Mem132[esp_82:word32] = esp_82 + 0x000000AC
	Mem134[esp_82 - 0x00000004:word32] = 0x00000005
	Mem136[esp_82 - 0x00000008:word32] = ebx_1005
	Mem138[esp_82 - 0x0000000C:word32] = ebx_1005
	word32 ecx_142
	word32 esi_144
	word32 edi_145
	fn1000C491(0x10031000, 0x1000B74F, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_142, out edx_1148, out esi_144, out edi_145)
	esi_1375 = Mem138[esp_82 + 0x00000014:word32]
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):<invalid> -168(fp):<invalid> -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002D588:
	fn1000F2EE(esp_298 + 0x00000070)
	fn1000F2EE(esp_298 + 0x00000064)
	word32 esp_98 = esp_298 + 0x00000004
	word32 ebx_101 = Mem83[esp_98 + 0x00000004:word32]
	word16 bx_103
	*bxOut = (word16) ebx_101
	word32 ecx_110
	return fn1002F420(esi_1375, Mem83[esp_298 + 0x0000010C:word32] ^ esp_98 + 0x00000008, edx_1148, ebx_101, ebp_1095, Mem83[esp_98:word32], Mem83[esp_298:word32], es, ds, out ecx_110)
// DataOut: bx cs ds eax ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):<invalid> -168(fp):<invalid> -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002CCDB_exit:
// DataOut: bx eax ecx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> al:<invalid> ax:<invalid> bl:<invalid> cl:<invalid> dl:<invalid> -292(fp):<invalid> -288(fp):<invalid> -284(fp):<invalid> -280(fp):<invalid> -276(fp):edi -272(fp):esi -268(fp):ebx -260(fp):<invalid> -253(fp):bl -252(fp):<invalid> -248(fp):0x00000000 -220(fp):<invalid> -216(fp):<invalid> -212(fp):<invalid> -208(fp):<invalid> -204(fp):0x00000000 -200(fp):<invalid> -196(fp):<invalid> -180(fp):<invalid> -176(fp):0x00000000 -172(fp):<invalid> -168(fp):<invalid> -164(fp):0x00000000 -160(fp):0x00000000 -156(fp):0x00000000 -152(fp):0x00000000 -148(fp):<invalid> -144(fp):<invalid> -140(fp):0x1000793C -136(fp):0x00000000 -132(fp):<invalid> -128(fp):<invalid> -124(fp):<invalid> -120(fp):<invalid> -116(fp):<invalid> -112(fp):<invalid> -44(fp):fp - 0x00000104 -40(fp):<invalid> -36(fp):0x00000004 -32(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



byte fn1002D5B3(word32 ecx, word32 esi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es esi fs gs ss
// LiveOut: al bl ebx edx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp edi esp
fn1002D5B3_entry:
	*ebxOut = ebx
	*edxOut = edx
	*esiOut = esi
// DataOut: bl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002D5B3:
	word32 eax_14 = Mem0[0x10031588:word32]
	branch eax_14 != 0x00000000 l1002D5E7
// DataOut: bl cs ds eax ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002D5C3:
	word32 ebx_49
	word32 ebp_50
	word32 edx_51
	*edxOut = fn1002748A(fp - 0x00000008, fp - 0x00000004, esi, es, ds, out ebx_49, out ebp_50)
	branch eax_14 < 0x00000000 l1002D5E2
// DataOut: bl cs ds ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):ecx -8(fp):ecx -4(fp):ebp

l1002D5E2:
	eax_14 = Mem0[0x10031588:word32]
// DataOut: bl cs ds eax ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> esi:<invalid> ebx:<invalid> cl:<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002D5D2:
	word32 eax_59 = (word32) (Mem0[ebp_50 - 0x00000004:word32] == 0x00000000)
	Mem63[0x10031588:word32] = eax_59 + 0x00000001
	eax_14 = eax_59 + 0x00000001
// DataOut: bl cs ds eax ebp ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> ax:<invalid> esi:<invalid> ebx:<invalid> cl:<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002D5E7:
	return eax_14 == 0x00000001
// DataOut: al bl cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> edx:<invalid> ax:<invalid> esi:<invalid> ebx:<invalid> cl:<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp

fn1002D5B3_exit:
// DataOut: al bl ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> al:Test(EQ,Z) ecx:<invalid> edx:<invalid> ax:<invalid> esi:<invalid> ebx:<invalid> cl:<invalid> -12(fp):ecx -8(fp):<invalid> -4(fp):ebp



word32 fn1002D5F1(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002D5F1_entry:
// DataOut: bx cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l1002D5F1:
	word32 edi_15 = 0x00000000
	word32 eax_17 = Mem0[ecx + 0x00000004:word32]
	branch eax_17 != Mem0[ecx + 0x0000000C:word32] l1002D612
// DataOut: bx cs ds eax ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l1002D604:
	word32 eax_75 = fn1002D682(ecx, es, ds, eax_17 + 0x00000001)
	edi_15 = eax_75
	branch eax_75 < 0x00000000 l1002D62A
// DataOut: bx cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x00000000 ebp:fp - 0x00000004 esi:ecx eax:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l1002D612:
	Mem51[ecx + 0x00000004:word32] = Mem0[ecx + 0x00000004:word32] + 0x00000001
	word32 ecx_54 = Mem51[ecx:word32] + Mem51[ecx + 0x00000004:word32] * 0x00000004
	branch ecx_54 == 0xFFFFFFFC l1002D62A
// DataOut: bx cs ds ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx eax:<invalid> edx:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l1002D622:
	word32 esi_65
	fn10015118(ecx_54 + 0xFFFFFFFC, ebx, ecx, es, ds, dwArg04, out esi_65, out edi_15)
// DataOut: bx cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:ecx eax:<invalid> edx:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):edi -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32)

l1002D62A:
	return edi_15
// DataOut: bx cs ds eax ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp

fn1002D5F1_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> edx:<invalid> ecx:<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebp



word32 fn1002D632(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002D632_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002D632:
	Mem26[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 ecx_34
	word32 edx_35
	word32 eax_36 = fn10010416(edx, 0x00000004, fp - 0x00000008, out ecx_34, out edx_35)
	branch eax_36 < 0x00000000 l1002D67A
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002D656:
	word32 eax_64 = CoTaskMemRealloc(ecx, ecx)
	Mem66[dwArg04:word32] = eax_64
	branch eax_64 == 0x00000000 l1002D675
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):0x00000004 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0018(32)

l1002D675:
	eax_36 = 0x8007000E
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002D666:
	word32 edx_82
	eax_36 = fn1000CE99(0x01, dwArg04, ebx, es, ds, ecx, out edx_82)
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002D67A:
	return eax_36
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

fn1002D632_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ecx:<invalid> edx:<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp



word32 fn1002D682(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002D682_entry:
// DataOut: bx cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002D682:
	word32 edx_112 = 0x8007007A
	branch dwArg04 >u 0xFFFFFFFE l1002D707
// DataOut: bx cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32)

l1002D69C:
	word32 ebx_50 = Mem0[ecx + 0x0000000C:word32]
	edx_112 = 0x00000000
	branch dwArg04 <=u ebx_50 l1002D706
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:ecx edx:0x8007007A -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6A6:
	word32 ecx_76
	word32 edx_77
	word32 eax_78 = fn10010416(ebx_50, 0x00000002, fp - 0x00000008, out ecx_76, out edx_77)
	edx_112 = eax_78
	branch eax_78 < 0x00000000 l1002D706
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:ecx edx:0x00000000 ebx:<invalid> -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6BA:
	word32 esi_100 = ecx
	branch ecx - ebx_50 <=u 0x00001000 l1002D6CF
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> -28(fp):0x00000002 -24(fp):fp - 0x00000008 -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6C9:
	esi_100 = ebx_50 + 0x00001000
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:ecx -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6CF:
	word32 eax_129 = dwArg04
	branch dwArg04 >u esi_100 l1002D6D7
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6D5:
	eax_129 = esi_100
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6D7:
	branch eax_129 <=u 0xFFFFFFFE l1002D6E1
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6E1:
	branch dwArg04 <=u esi_100 l1002D6E7
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6E5:
	esi_100 = dwArg04
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6DC:
	esi_100 = 0xFFFFFFFE
// DataOut: cs ds ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):0x00000002 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0014(16)

l1002D6E7:
	word32 edx_109
	word32 eax_110 = fn1002D632(Mem0[ecx:word32], esi_100, ebx_50, es, ds, fp - 0x00000008, out edx_109)
	edx_112 = eax_110
	branch eax_110 < 0x00000000 l1002D705
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -0014(16)

l1002D6FD:
	Mem120[ecx + 0x0000000C:word32] = esi_100
	Mem121[ecx:word32] = ecx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):fp - 0x00000008 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0014(16)

l1002D705:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:ecx ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -28(fp):fp - 0x00000008 -24(fp):esi -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0014(16)

l1002D706:
// DataOut: bx cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000014 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:esi -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002D707:
	return edx_112
// DataOut: bx cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ebx:ebx ecx:<invalid> esi:esi -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp

fn1002D682_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> ebx:ebx ecx:<invalid> esi:esi -28(fp):<invalid> -24(fp):<invalid> -20(fp):ebx -16(fp):edi -12(fp):ecx -8(fp):ecx -4(fp):ebp



word32 fn1002D710(word32 ecx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edi es fs gs ss
// LiveOut: ecx edx
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1002D710_entry:
	*edxOut = edx
// DataOut: cs ds ebp ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -001C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1002D710:
	branch dwArg0C == 0x00000001 l1002D7B1
// DataOut: cs ds eax ebp ebx ecx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1002D726:
	branch dwArg0C == 0x00000002 l1002D75F
// DataOut: cs ds ebp ebx ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -001C(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1002D75F:
	word32 ecx_99 = Mem0[ecx:word32] + (dwArg08 << 0x00000002)
	word32 edx_107
	branch fn1002B81F(edi, es, ds, ecx_99, ecx_99 + 0x00000004, out ecx, out edx_107) <= 0x00000000 l1002D7B1
// DataOut: cs ds ebx ecx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002D777:
	memmove(Mem0[ecx + 0x00000008:word32], Mem0[ecx:word32] + (dwArg08 << 0x00000002), 0x00000004)
	ecx = Mem0[ecx:word32] + (dwArg08 << 0x00000002)
	memmove(ecx, ecx + 0x00000004, 0x00000004)
	memmove(Mem0[ecx:word32] + 0x00000004 + (dwArg08 << 0x00000002), Mem0[ecx + 0x00000008:word32], 0x00000004)
// DataOut: cs ds ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> edx:0x100031EC -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1002D72B:
	word32 edx_68
	fn1002D710(ecx, fp - 0x00000004, dwArg08, es, ds, dwArg04, dwArg08, dwArg0C >>u 0x00000001, out edx_68)
	Mem75[fp - 0x00000020:word32] = Mem0[fp + 0x0000000C:word32] - (dwArg0C >>u 0x00000001)
	Mem78[fp - 0x00000024:word32] = (dwArg0C >>u 0x00000001) + dwArg08
	Mem81[fp - 0x00000028:word32] = Mem78[fp + 0x00000004:word32]
	word32 edx_83
	word32 ecx_84 = fn1002D710(ecx, fp - 0x00000004, dwArg08, es, ds, dwArg00, dwArg04, dwArg08, out edx_83)
	Mem87[fp - 0x0000002C:word32] = Mem81[fp + 0x0000000C:word32]
	Mem89[fp - 0x00000030:word32] = dwArg08
	Mem91[fp - 0x00000034:word32] = ecx_84
	word32 edx_93
	ecx = fn1002D7B8(ecx, es, ds, dwArg04, dwArg08, out edx_93)
// DataOut: cs ds ecx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:ecx -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

l1002D7B1:
	return ecx
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -52(fp):ecx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1002D710_exit:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> cl:<invalid> -52(fp):ecx -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn1002D7B8(word32 ecx, selector es, selector ds, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx es fs gs ss
// LiveOut: ecx edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0008(32) Stack +000C(32)
fn1002D7B8_entry:
// DataOut: cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32) Stack +000C(32)

l1002D7B8:
	word32 esi_27 = dwArg0C >>u 0x00000001 << 0x00000002
	word32 edi_118 = Mem0[ecx:word32] + dwArg08 * 0x00000004
	memcpy(Mem0[ecx + 0x00000008:word32], edi_118, esi_27)
	word32 eax_115 = 0x00000000
	word32 dwLoc14_109 = dwArg0C >>u 0x00000001
	word32 dwLoc0C_108 = 0x00000000
	word32 ebx_120 = 0x00000000
	byte bLoc05_114 = 0x00
	word32 esi_119 = esi_27 + edi_118
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D7F7:
	word32 ecx_123
	byte cl_122
	word32 ecx_62 = eax_115 << 0x00000002
	word32 ecx_73
	word32 edx_74
	branch fn1002B81F(edi_118, es, ds, Mem0[ecx + 0x00000008:word32] + ecx_62, esi_119, out ecx_73, out edx_74) <= 0x00000000 l1002D864
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(0) Stack +000C(32)

l1002D864:
	memmove(edi_118, Mem0[ecx + 0x00000008:word32] + ecx_62, 0x00000004)
	eax_115 = dwLoc0C_108 + 0x00000001
	ebx_120 = ebx_120 + 0x00000001
	edi_118 = edi_118 + 0x00000004
	dwLoc0C_108 = eax_115
	branch eax_115 != dwArg0C >>u 0x00000001 l1002D854
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000004 -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D887:
	cl_122 = 0x01
	ecx_123 = DPB(ecx_73, 0x01, 0) (alias)
	bLoc05_114 = 0x01
// DataOut: cl cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000004 -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D814:
	memmove(edi_118, esi_119, 0x00000004)
	word32 eax_133 = dwLoc14_109 + 0x00000001
	ebx_120 = ebx_120 + 0x00000001
	edi_118 = edi_118 + 0x00000004
	esi_119 = esi_119 + 0x00000004
	dwLoc14_109 = eax_133
	branch eax_133 != dwArg0C l1002D851
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000004 -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D831:
	memcpy(edi_118, Mem0[ecx + 0x00000008:word32] + ecx_62, dwArg0C - ebx_120 << 0x00000002)
	bLoc05_114 = 0x01
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):0x00000004 -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D851:
	eax_115 = dwLoc0C_108
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D854:
	cl_122 = bLoc05_114
	ecx_123 = DPB(ecx_73, bLoc05_114, 0) (alias)
// DataOut: cl cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D857:
	branch cl_122 == 0x00 l1002D7F7
// DataOut: cs ds eax ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0005(8) Local -000C(32) Local -0010(32) Local -0014(32) Local -001C(0) Local -0034(32) Stack +000C(32)

l1002D85B:
	return ecx_123
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000028 edi:<invalid> ebp:fp - 0x00000004 edx:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp

fn1002D7B8_exit:
// DataOut: ecx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp edx:<invalid> eax:<invalid> ebx:ebx esi:esi ecx:<invalid> cl:<invalid> -52(fp):<invalid> -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -16(fp):ecx -12(fp):<invalid> -5(fp):<invalid> -4(fp):ebp



void fn1002D88E(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx ecx edi es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh dl dx eax ebp ecx edx esi esp rax rbp rcx rdx rsi rsp si sil sp spl
// Preserved: edi esi esp
fn1002D88E_entry:
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002D88E:
	Mem12[ecx:word32] = 0x10001F68
	Mem13[ecx + 0x00000004:word32] = 0x10001EBC
	word32 ecx_17
	word32 edx_18
	word32 esi_19
	fn1000F276(ecx + 0x00000040, ebx, esi, ecx, es, ds, out ecx_17, out edx_18, out esi_19)
	fn100150E0(ecx + 0x00000024, es, ds)
	Mem22[ecx + 0x0000001C:word32] = 0xC0000001
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002D8BC_thunk_fn1000F23B:
	word32 edx_29
	word32 ebp_30
	fn1000F23B(ecx + 0x00000004, ebx, ebp, esi, edi, es, ds, out edx_29, out ebp_30)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ecx:<invalid> esi:esi eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn1002D88E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ecx:<invalid> esi:<invalid> ebp:<invalid> eax:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



word32 fn1002D8F1(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn1002D8F1_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002D8F1:
	Mem12[ecx:word32] = 0x10001E9C
	word32 edx_17
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001EE0
	Mem22[ecx + 0x00000004:word32] = 0x10001EBC
	branch Mem12[0x10031478:word32] == 0x00000000 l1002D92A
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002D923:
	__lock()
	Mem52[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1002D92A:
	Mem24[ecx:word32] = 0x10001F68
	Mem27[ecx + 0x00000004:word32] = 0x10001EBC
	InitializeSRWLock(ecx + 0x00000020)
	Mem35[ecx + 0x00000024:word32] = 0x00000000
	Mem36[ecx + 0x00000028:word32] = 0x00000000
	Mem37[ecx + 0x0000002C:word32] = 0x00000000
	Mem38[ecx + 0x00000030:word32] = 0x00000000
	InitializeSRWLock(ecx + 0x00000034)
	Mem40[ecx + 0x00000038:word32] = 0x00000000
	Mem42[ecx + 0x0000003C:word32] = 0x00000000
	Mem43[ecx + 0x00000040:word32] = 0x00000000
	return ecx
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn1002D8F1_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -12(fp):<invalid> -8(fp):edi -4(fp):esi



word32 fn1002D966(word32 ecx, word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(8) Stack +000C(32)
fn1002D966_entry:
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -02B8(0) Local -02DC(32) Stack +0004(32) Stack +0008(8) Stack +000C(32)

l1002D966:
	word32 edx_151
	__align(fp - 0x00000004)
	Mem32[ecx + 0x0000003C:word32] = dwArg04
	word32 ebp_181 = fp - 0x00000004
	word32 edi_173 = dwArg04
	word32 esi_174 = fn1000F07D(ecx + 0x00000040, edx, ecx, es, ds, dwArg0C)
	word32 ecx_312 = dwArg08
	byte cl_40 = (byte) dwArg08
	branch dwArg04 != 0x00000004 l1002D9AF
// DataOut: cl cs ds ebp ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Local -02B8(0) Local -02DC(32)

l1002D9A1:
	branch ((byte) (dwArg08 >>u 0x0000000D) & 0x01) == 0x00 l1002D9AF
// DataOut: cl cs ds ebp ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02B8(0) Local -02DC(32)

l1002D9AF:
	edx_151 = 0x00000001
// DataOut: cl cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02B8(0) Local -02DC(32)

l1002D9AA:
	edx_151 = 0x00000003
// DataOut: cl cs ds ebp ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02B8(0) Local -02DC(32)

l1002D9B2:
	word32 ebx_175 = 0x00000000
	word32 esp_182 = fp - 0x000002D4
	branch dwArg04 == 0x00000001 l1002DB2C
// DataOut: cl cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02B8(0) Local -02DC(32)

l1002DB2C:
	word32 edx_468
	word16 bx_469
	byte al_470 = fn1002CB10(dwArg08, 0x00000000, esi_174, dwArg04, es, ds, out edx_468, out bx_469)
	branch al_470 == 0x00 l1002DCA6
// DataOut: bx cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02B8(0)

l1002DCA6:
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DB39:
	byte SCZO_527
	word32 eax_528
	byte SZO_529
	byte C_530
	word32 ecx_533
	byte Z_534
	byte al_535
	word32 edx_536
	byte cl_537
	byte CZ_538
	byte SO_539
	byte S_540
	byte bl_541
	selector fs_542
	word16 bx_543
	word32 esi_532
	word32 ebx_531
	call ntdll.dll!RtlGetDeviceFamilyInfoEnum (retsize: 4; depth: 740)
		uses: al_470,bl_52,bx_469,C_473,cl_40,CZ,ds,dwLoc02AC_519,dwLoc02C4_48,dwLoc02CC_19,dwLoc02D0_22,dwLoc02D4_26,dwLoc02D8_517,dwLoc02DC_521,dwLoc02E0_523,dwLoc04_6,dwLoc08_14,eax_518,ebp_7,ebx_51,ecx_39,edi_28,edx_468,es,esi_36,esp_522,fs,S,SCZO_57,SO,SZO_471,Z_472
		defs: al_535,bl_541,bx_543,C_530,cl_537,CZ_538,ds_545,eax_528,ebp_526,ebx_531,ecx_533,edi_525,edx_536,es_544,esi_532,esp_524,fs_542,S_540,SCZO_527,SO_539,SZO_529,Z_534
	branch dwLoc02B8 == 0x00000004 l1002DB62
// DataOut: bx cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DB62:
	Mem601[esp_182 + 0x0000001C:word32] = 0x00000000
	Mem603[esp_182 + 0x00000020:word32] = 0x00000000
	Mem604[esp_182 + 0x00000024:word32] = 0x00000000
	fn1002E44E(esp_182 + 0x0000001C)
	word32 esp_605 = esp_182
	word32 eax_606 = Mem604[esp_182 + 0x0000001C:word32]
	branch eax_606 == 0x00000000 l1002DB8B
// DataOut: bx cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DB82:
	branch Mem604[eax_606:word16] != bx_543 l1002DC73
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DB8B:
	Mem642[esp_182 + 0x00000018:word32] = 0x00000000
	Mem644[esp_182 - 0x00000004:word32] = esp_182 + 0x00000030
	Mem646[esp_182 + 0x0000002C:word32] = 0x00000104
	Mem648[esp_182 - 0x00000008:word32] = esp_182 + 0x0000002C
	Mem651[esp_182 - 0x0000000C:word32] = esp_182 + 0x000000C0
	Mem654[esp_182 - 0x00000010:word32] = esp_182 + 0x00000018
	Mem656[esp_182 - 0x00000014:word32] = 0x00000000
	Mem658[esp_182 - 0x00000018:word32] = 0x1000795C
	word32 eax_659 = LookupAccountNameLocalW(Mem658[esp_182 - 0x00000018:LPCWSTR], Mem658[esp_182 - 0x00000014:PSID], Mem658[esp_182 - 0x00000010:LPDWORD], Mem658[esp_182 - 0x0000000C:LPWSTR], Mem658[esp_182 - 0x00000008:LPDWORD], Mem658[esp_182 - 0x00000004:PSID_NAME_USE])
	esp_605 = esp_182
	branch eax_659 != 0x00000000 l1002DC6F
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DBC2:
	branch Mem658[esp_182 + 0x00000018:word32] <=u eax_659 l1002DC6F
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DBCC:
	Mem691[esp_182 - 0x00000004:word32] = Mem658[esp_182 + 0x00000018:word32]
	Mem693[esp_182 - 0x00000008:word32] = 0x00000000
	word32 eax_694 = LocalAlloc(Mem693[esp_182 - 0x00000008:UINT], Mem693[esp_182 - 0x00000004:SIZE_T])
	esp_605 = esp_182
	word32 edi_696 = eax_694
	branch eax_694 == 0x00000000 l1002DC6F
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DBE1:
	Mem702[esp_182 - 0x00000004:word32] = esp_182 + 0x00000030
	Mem705[esp_182 - 0x00000008:word32] = esp_182 + 0x0000002C
	Mem708[esp_182 - 0x0000000C:word32] = esp_182 + 0x000000C0
	Mem711[esp_182 - 0x00000010:word32] = esp_182 + 0x00000018
	Mem713[esp_182 - 0x00000014:word32] = eax_694
	Mem715[esp_182 - 0x00000018:word32] = 0x1000795C
	word32 esp_717 = esp_182
	branch LookupAccountNameLocalW(Mem715[esp_182 - 0x00000018:LPCWSTR], Mem715[esp_182 - 0x00000014:PSID], Mem715[esp_182 - 0x00000010:LPDWORD], Mem715[esp_182 - 0x0000000C:LPWSTR], Mem715[esp_182 - 0x00000008:LPDWORD], Mem715[esp_182 - 0x00000004:PSID_NAME_USE]) == 0x00000000 l1002DC68
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC08:
	branch Mem715[esp_182 + 0x0000001C:word32] == 0x00000000 l1002DC1D
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC0F:
	Mem805[esp_182 - 0x00000004:word32] = Mem715[esp_182 + 0x0000001C:word32]
	LocalFree(Mem805[esp_182 - 0x00000004:HLOCAL])
	Mem808[esp_182 + 0x0000001C:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC1D:
	Mem750[esp_182 + 0x00000020:word32] = Mem715[esp_182 + 0x00000020:word32] | 0xFFFFFFFF
	Mem754[esp_182 + 0x00000024:word32] = Mem750[esp_182 + 0x00000024:word32] | 0xFFFFFFFF
	Mem758[esp_182 - 0x00000004:word32] = esp_182 + 0x0000001C
	Mem760[esp_182 - 0x00000008:word32] = eax_694
	byte SCZO_764
	word32 eax_765
	byte SZO_766
	byte C_767
	word32 ecx_770
	byte Z_771
	byte al_772
	word32 edx_773
	byte cl_774
	byte CZ_775
	byte SO_776
	byte S_777
	byte bl_778
	selector fs_779
	word16 bx_780
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertSidToStringSidW (retsize: 4; depth: 4)
		uses: al_660,bl_541,bx_543,C_756,cl_537,CZ_688,ds_545,dwLoc02AC_519,dwLoc02B8,dwLoc02C4_48,dwLoc02CC_19,dwLoc02D0_22,dwLoc02D4_26,dwLoc02D8_517,dwLoc02DC_521,dwLoc02E0_523,dwLoc04_6,dwLoc08_14,eax_752,ebp_526,ebx_531,ecx_602,edi_696,edx_536,es_544,esi_532,esp_759,fs_542,S_540,SCZO_746,SO_539,SZO_755,Z_747
		defs: al_772,bl_778,bx_780,C_767,cl_774,CZ_775,ds_782,eax_765,ebp_763,ebx_768,ecx_770,edi_762,edx_773,es_781,esi_769,esp_761,fs_779,S_777,SCZO_764,SO_776,SZO_766,Z_771
	branch eax_765 == 0x00000000 l1002DC68
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC37:
	Mem788[esp_717 - 0x00000004:word32] = Mem760[esp_717 + 0x0000001C:word32]
	Mem792[esp_717 - 0x00000008:word32] = 0x1000392C
	fn10015DDD(0x80000002, 0x10003880, dwArg00, dwArg04)
	Mem796[esp_717 - 0x00000004:word32] = 0x1000796C
	Mem798[esp_717 - 0x00000008:word32] = 0x10003904
	fn10015DDD(0x80000002, 0x10003880, dwArg00, dwArg04)
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC68:
	word32 esp_742 = esp_717 - 0x00000004
	Mem743[esp_742:word32] = edi_696
	LocalFree(Mem743[esp_742:HLOCAL])
	esp_605 = esp_742 + 0x00000004
// DataOut: cs ds ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC6F:
	eax_606 = Mem658[esp_605 + 0x0000001C:word32]
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC73:
	branch eax_606 == 0x00000000 l1002DC7E
// DataOut: cs ds eax ebp ebx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC77:
	word32 esp_636 = esp_605 - 0x00000004
	Mem637[esp_636:word32] = eax_606
	LocalFree(Mem637[esp_636:HLOCAL])
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC7E:
	esp_182 = esp_605
	edi_173 = dwArg04
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DB51:
	Mem598[esp_182 + 0x00000010:word32] = fn1002B8BF(edx_536, ebx_531, ebp_181, esi_532, es, ds)
// DataOut: cs ds ebp ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 bl:<invalid> al:<invalid> cl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC81:
	branch Mem32[esi_532 + 0x00000028:word32] == ebx_531 l1002DC98
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC86:
	word32 ecx_581
	word32 edx_582
	word32 ebx_583
	branch fn1000CDA9(es, ds, out ecx_581, out edx_582, out ebx_583, out esi_532) != 0x00 l1002DC98
// DataOut: cs ds ebp ecx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC8F:
	word32 edx_589
	word32 ebx_590
	branch fn1002D5B3(ecx_581, esi_532, es, ds, out edx_589, out ebx_590, out esi_532) == 0x00 l1002DCAA
// DataOut: cs ds ebp es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DC98:
	Mem580[esp_182 + 0x00000010:word32] = fn1002BB49(ebp_181, esi_532, es, ds)
// DataOut: cs ds ebp es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCAA:
	word32 ecx_493
	branch fn1000CDA9(es, ds, out ecx_493, out edx_151, out ebx_175, out esi_174) != 0x00 l1002DCBC
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCB3:
	branch fn1002D5B3(ecx_493, esi_174, es, ds, out edx_151, out ebx_175, out esi_174) == 0x00 l1002DCC8
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCBC:
	Mem508[esi_174 + 0x00000038:word32] = 0x00000003
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D9C8:
	branch dwArg04 == 0x00000002 l1002DB0F
// DataOut: cl cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002DB0F:
	branch dwArg08 != 0x00000000 l1002DCD4
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002DB17:
	branch fn100293A8(out edx_151) <=u 0xFFFFFFFD l1002DCD4
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002DB28:
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:0x10003460 ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002D9D1:
	branch dwArg04 == 0x00000003 l1002DAE6
// DataOut: cl cs ds eax ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002DAE6:
	branch dwArg08 != 0x00000000 l1002DCD4
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002DAEE:
// DataOut: cs ds ebp es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Local -02DC(32)

l1002DAF0:
	Mem261[fp - 0x000002C4:word32] = fn1002BF83(fp - 0x00000004, esi_174, es, ds, esi_174 + 0x00000024, out edx_151)
	esp_182 = fp - 0x000002D4
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 cl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D9DA:
	branch dwArg04 != 0x00000004 l1002DCC3
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCC3:
	branch edi_173 == 0x00000004 l1002DCDF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> ax:<invalid> cl:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCC8:
	branch Mem32[esp_182 + 0x00000010:word32] < 0x00000000 l1002DCD4
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCCF:
	branch Mem32[esi_174 + 0x00000028:word32] != ebx_175 l1002DCDF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCD4:
	Mem183[esi_174 + 0x00000038:word32] = 0x00000003
	Mem184[esp_182 + 0x00000010:word32] = ebx_175
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):fp - 0x000002AC -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D9E3:
	Mem276[esi_174 + 0x00000038:word32] = edx_151
	branch (cl_40 & 0x20) != 0x00 l1002DABF
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x80070057 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D9F3:
	branch ((byte) (dwArg08 >>u 0x00000009) & 0x01) == 0x00 l1002DA0B
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002D9FC:
	word32 eax_449 = fn1002C2ED(fp - 0x00000004, esi_174, es, ds, out edx_151)
	ecx_312 = Mem276[fp + 0x00000008:word32]
	Mem452[fp - 0x000002C4:word32] = eax_449
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x000002D4 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:0x00000000 -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA0B:
	branch ((byte) (ecx_312 >>u 0x00000013) & 0x01) == 0x00 l1002DA32
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA14:
	word32 eax_434 = fn1002C9AE(fp - 0x000002BF, edx_151, fp - 0x00000004, esi_174, es, ds, out edx_151, out ebx_175, out esi_174, out edi_173)
	ecx_312 = Mem276[fp + 0x00000008:word32]
	Mem437[fp - 0x000002C4:word32] = eax_434
	branch eax_434 < 0x00000000 l1002DA32
// DataOut: bl cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA28:
	branch Mem437[fp - 0x000002BF:byte] == 0x00 l1002DA32
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA2E:
	Mem444[esi_174 + 0x00000038:word32] = Mem437[esi_174 + 0x00000038:word32] | 0x00000002
// DataOut: cl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA32:
	branch ((byte) (ecx_312 >>u 0x00000008) & 0x01) == 0x00 l1002DABF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA3E:
	byte al_380
	Mem337[fp - 0x000002D8:word32] = fp - 0x000002BE
	Mem339[fp - 0x000002DC:word32] = 0x100079B0
	edx_151 = fn1002941B(0x100079E0, 0x00000000, dwArg00, dwArg04)
	branch true l1002DA6E
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bl:<invalid> dl:<invalid> -728(fp):0x00000000 -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA6E:
	al_380 = Mem339[fp - 0x000002BE:byte]
// DataOut: al cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:0x01 bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA58:
	word32 ecx_404
	branch fn1000CDA9(es, ds, out ecx_404, out edx_151, out ebx_175, out esi_174) != 0x00 l1002DA6A
// DataOut: bl cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:0x01 bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA61:
	branch fn1002D5B3(ecx_404, esi_174, es, ds, out edx_151, out ebx_175, out esi_174) == 0x00 l1002DA76
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA6A:
	al_380 = 0x00
// DataOut: al cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA72:
	branch al_380 == 0x00 l1002DA9C
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA9C:
	branch (Mem339[esi_174 + 0x00000038:byte] & 0x02) != 0x00 l1002DABF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DAA2:
	byte bl_392
	word32 eax_393 = fn1002C41A(fp - 0x000002BD, fp - 0x00000004, esi_174, es, ds, out edx_151, out bl_392)
	Mem394[fp - 0x000002C4:word32] = eax_393
	branch eax_393 < 0x00000000 l1002DABF
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DAB5:
	branch Mem394[fp - 0x000002BD:byte] == bl_392 l1002DABF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DABB:
	Mem401[esi_174 + 0x00000038:word32] = Mem394[esi_174 + 0x00000038:word32] | 0x00000002
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA76:
	word32 edx_352
	byte bl_353
	Mem355[fp - 0x000002C4:word32] = fn1002C41A(0x00000000, fp - 0x00000004, esi_174, es, ds, out edx_352, out bl_353)
	word32 ecx_356
	branch fn1000CDA9(es, ds, out ecx_356, out edx_151, out ebx_175, out esi_174) != 0x00 l1002DABF
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA8D:
	branch fn1002D5B3(ecx_356, esi_174, es, ds, out edx_151, out ebx_175, out esi_174) != 0x00 l1002DABF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DA96:
	Mem372[esi_174 + 0x00000038:word32] = Mem355[esi_174 + 0x00000038:word32] & 0xFFFFFFFE
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DABF:
	esp_182 = fp - 0x000002D4
	branch Mem276[esi_174 + 0x00000028:word32] != ebx_175 l1002DCDF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DAC8:
	branch fn1000CDE4(out edx_151) == 0x00 l1002DCDF
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DAD5:
	Mem303[fp - 0x000002C4:word32] = fn1002C2ED(fp - 0x00000004, esi_174, es, ds, out edx_151)
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:0x10002FE8 ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> -732(fp):0x100079B0 -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCDF:
	branch Mem32[0x10031000:word32] <=u 0x00000004 l1002DDB5
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002DCEC:
	fn1000C51D(esp_182 + 0x00000060, 0x10003428)
	fn1000C51D(esp_182 + 0x00000070, 0x10003D54)
	Mem110[esp_182 + 0x00000034:word32] = edi_173
	Mem111[esp_182 + 0x00000080:word32] = esp_182 + 0x00000034
	Mem113[esp_182 + 0x00000038:word32] = Mem111[esi_174 + 0x00000038:word32]
	Mem115[esp_182 + 0x00000090:word32] = esp_182 + 0x00000038
	Mem117[esp_182 + 0x0000003C:word32] = Mem115[esi_174 + 0x00000028:word32]
	word32 esp_119 = esp_182 - 0x00000004
	Mem120[esp_119:word32] = 0x00000004
	word32 ecx_121 = Mem120[esp_119:word32]
	Mem123[esp_119 + 0x000000A4:word32] = esp_182 + 0x0000003C
	Mem125[esp_119 + 0x00000088:word32] = ebx_175
	Mem126[esp_119 + 0x0000008C:word32] = ecx_121
	Mem127[esp_119 + 0x00000090:word32] = ebx_175
	Mem128[esp_119 + 0x00000098:word32] = ebx_175
	Mem129[esp_119 + 0x0000009C:word32] = ecx_121
	Mem130[esp_119 + 0x000000A0:word32] = ebx_175
	Mem131[esp_119 + 0x000000A8:word32] = ebx_175
	Mem132[esp_119 + 0x000000AC:word32] = ecx_121
	Mem133[esp_119 + 0x000000B0:word32] = ebx_175
	Mem134[esp_119 + 0x000000B4:word32] = esp_119 + 0x00000014
	Mem135[esp_119 + 0x000000B8:word32] = ebx_175
	Mem136[esp_119 + 0x000000BC:word32] = ecx_121
	Mem137[esp_119 + 0x000000C0:word32] = ebx_175
	Mem141[esp_119:word32] = esp_119 + 0x00000044
	Mem143[esp_119 - 0x00000004:word32] = 0x00000008
	Mem145[esp_119 - 0x00000008:word32] = ebx_175
	Mem147[esp_119 - 0x0000000C:word32] = ebx_175
	word32 ecx_150
	word32 esi_152
	word32 edi_153
	fn1000C491(0x10031000, 0x1000BE61, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_150, out edx_151, out esi_152, out edi_153)
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> bl:<invalid> al:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -736(fp):0x00000000 -732(fp):<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp

l1002DDB5:
	word32 esp_91 = esp_182 + 0x00000004
	word32 ecx_99
	return fn1002F420(Mem32[esp_182 + 0x00000010:word32], Mem32[esp_182 + 0x000002CC:word32] ^ esp_91 + 0x00000008, edx_151, Mem32[esp_91 + 0x00000004:word32], ebp_181, Mem32[esp_91:word32], Mem32[esp_182:word32], es, ds, out ecx_99)
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -596(fp):fp - 0x000002A0 -592(fp):<invalid> -588(fp):0x00000004 -584(fp):<invalid> -580(fp):fp - 0x0000029C -576(fp):<invalid> -572(fp):0x00000004 -568(fp):<invalid> -564(fp):fp - 0x00000298 -560(fp):<invalid> -556(fp):0x00000004 -552(fp):<invalid> -548(fp):fp - 0x000002C4 -544(fp):<invalid> -540(fp):0x00000004 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002D966_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> ebx:<invalid> al:<invalid> bl:<invalid> cl:<invalid> ax:<invalid> bh:<invalid> dl:<invalid> -740(fp):<invalid> -736(fp):<invalid> -732(fp):<invalid> -728(fp):<invalid> -724(fp):edi -720(fp):esi -716(fp):ebx -708(fp):<invalid> -684(fp):0x00000000 -672(fp):<invalid> -668(fp):<invalid> -664(fp):<invalid> -596(fp):fp - 0x000002A0 -592(fp):<invalid> -588(fp):0x00000004 -584(fp):<invalid> -580(fp):fp - 0x0000029C -576(fp):<invalid> -572(fp):0x00000004 -568(fp):<invalid> -564(fp):fp - 0x00000298 -560(fp):<invalid> -556(fp):0x00000004 -552(fp):<invalid> -548(fp):fp - 0x000002C4 -544(fp):<invalid> -540(fp):0x00000004 -536(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002E26A(word32 ecx, word32 edx, word32 ebp, word32 esi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ecx edx es esi fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002E26A_entry:
// DataOut: cs ds ebp ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002E26A:
	Mem25[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 ebp_37
	word32 esi_38
	word32 edi_144
	word32 ebx_142
	word32 eax_40 = fn1002FF64(ecx, esi, 0x00000000, out ebx_142, out ebp_37, out esi_38, out edi_144)
	branch eax_40 == 0x00000000 l1002E29F
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002E293:
	word32 eax_143 = fn1002D8F1(eax_40, edx, es, ds, out edx, out ebx_142)
	Mem145[ebp_37 - 0x00000004:word32] = eax_143
	edi_144 = eax_143
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> -32(fp):0x00000044 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002E29F:
	word32 esi_107 = (0x00000000 - (-edi_144 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch edi_144 == 0x00000000 l1002E305
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000044 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002E2B5:
	Mem88[edi_144 + 0x0000003C:word32] = Mem25[ebx_142 + 0x0000003C:word32]
	Mem90[edi_144 + 0x00000038:word32] = Mem88[ebx_142 + 0x00000038:word32]
	Mem93[fp - 0x0000001C:word32] = ebx_142 + 0x00000040
	fn10015089(edi_144 + 0x00000040, edx, esi_107, es, ds, dwArg00, out esi_107)
	Mem99[ebp_37 - 0x00000008:word32] = 0x00000000
	word32 ecx_105 = 0x00000000
	branch esi_107 < 0x00000000 l1002E305
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):0x00000044 -28(fp):0x10002F5C -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):ecx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002E2D6:
	branch ecx_105 >=u Mem99[ebx_142 + 0x00000028:word32] l1002E2F8
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002E2DB:
	word32 eax_124 = Mem99[ebx_142 + 0x00000024:word32]
	Mem126[fp - 0x0000001C:word32] = ecx_105
	Mem129[fp - 0x00000020:word32] = eax_124 + ecx_105 * 0x00000004
	word32 eax_131 = fn1002D5F1(edi_144 + 0x00000024, ebx_142, es, ds, dwArg00)
	word32 ecx_133 = Mem129[ebp_37 - 0x00000008:word32]
	Mem136[ebp_37 - 0x00000008:word32] = ecx_133 + 0x00000001
	esi_107 = eax_131
	ecx_105 = ecx_133 + 0x00000001
	branch eax_131 >= 0x00000000 l1002E2D6
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002E2F8:
	branch esi_107 < 0x00000000 l1002E305
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E2FC:
	word32 eax_118 = Mem99[ebp_37 + 0x00000008:word32]
	Mem120[ebp_37 - 0x00000004:word32] = Mem99[ebp_37 - 0x00000004:word32] & 0x00000000
	Mem123[eax_118:word32] = edi_144
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E305:
	word32 edx_74
	word32 esi_75
	fn1000C640(ebp_37 - 0x00000004, ebx_142, esi_107, edi_144, es, ds, out edx_74, out esi_75)
	return esi_75
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002E26A_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002E318(word32 ecx, word32 edx, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: eax ebx edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: edi esi esp
fn1002E318_entry:
	*ebxOut = ebx
// DataOut: cs ds ebp ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002E318:
	word32 edx_16
	*edxOut = fn10010735(ecx + 0x00000004, edx, es, ds)
	Mem20[ecx + 0x0000001C:word32] = 0x00000001
	Mem21[ecx:word32] = 0x10001F04
	Mem22[ecx + 0x00000004:word32] = 0x10001F24
	branch Mem0[0x10031478:word32] == 0x00000000 l1002E34B
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002E344:
	__lock()
	Mem38[0x1003147C:word32] = Mem22[0x1003147C:word32] + 0x00000001
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi
// LocalsOut: fp(32)

l1002E34B:
	Mem23[ecx + 0x00000004:word32] = 0x10001F24
	Mem25[ecx:word32] = 0x10001F48
	Mem27[ecx + 0x00000020:word32] = Mem25[ecx + 0x00000020:word32] & 0x00000000
	return ecx
// DataOut: cs ds eax ebp ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:<invalid> esi:<invalid> ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi

fn1002E318_exit:
// DataOut: eax ebx edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi esi:esi ecx:<invalid> eax:<invalid> ebx:<invalid> edx:<invalid> -8(fp):edi -4(fp):esi



void fn1002E44E(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ecx edi esi esp
fn1002E44E_entry:
// DataOut: bx cs ds ebx ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002E44E:
	word32 eax_28 = RegOpenKeyExW(0x80000002, 0x10003880, 0x00000000, 0x00020019, fp - 0x00000008)
	word16 si_31 = (word16) eax_28
	byte S_33 = cond(eax_28)
	branch eax_28 <= 0x00000000 l1002E484
// DataOut: bx cs ds ebx edi es fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32)

l1002E479:
	S_33 = cond((word32) si_31 | 0x80070000) (alias)
// DataOut: bx cs ds ebx edi es fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -36(fp):0x80000002 -32(fp):0x10003880 -28(fp):0x00000000 -24(fp):0x00020019 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32)

l1002E484:
	branch S_33 l1002E49C
// DataOut: bx cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -36(fp):0x80000002 -32(fp):0x10003880 -28(fp):0x00000000 -24(fp):0x00020019 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -001C(32)

l1002E486:
	fn1002E617(ecx, ecx)
	RegCloseKey(ecx)
// DataOut: bx cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -36(fp):0x80000002 -32(fp):0x10003880 -28(fp):0x00000000 -24(fp):0x00020019 -20(fp):fp - 0x00000008 -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002E49C:
	return
// DataOut: bx cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:ecx ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -36(fp):0x80000002 -32(fp):0x10003880 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp

fn1002E44E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> -36(fp):0x80000002 -32(fp):0x10003880 -28(fp):0x00000000 -24(fp):<invalid> -20(fp):<invalid> -16(fp):edi -12(fp):esi -8(fp):ecx -4(fp):ebp



void fn1002E617(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002E617_entry:
// DataOut: bx cs ds ecx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(0) Stack +0004(32)

l1002E617:
	word32 eax_39 = RegQueryValueExW(dwArg04, 0x1000392C, 0x00000000, fp - 0x0000000C, 0x00000000, fp - 0x00000008)
	word32 edi_114 = 0x00000000
	word32 ebx_142 = 0x00000000
	word32 esi_104 = eax_39
	word16 si_42 = (word16) eax_39
	byte S_339 = cond(eax_39)
	branch eax_39 <= 0x00000000 l1002E657
// DataOut: cs ds ebx edi es esi fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E64C:
	word32 esi_334 = (word32) si_42
	esi_104 = esi_334 | 0x80070000
	S_339 = cond(esi_334 | 0x80070000) (alias)
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E657:
	branch S_339 l1002E78C
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E65D:
	branch dwLoc0C == 0x00000001 l1002E66C
// DataOut: al cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E666:
	branch dwLoc0C != 0x00000002 l1002E674
// DataOut: al cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E66C:
	branch 0x00000000 == 0x00000000 l1002E674
// DataOut: al cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E670:
	branch 0x00 == 0x00 l1002E679
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E674:
	esi_104 = 0x8007000D
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E679:
	branch esi_104 < 0x00000000 l1002E78C
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E681:
	word32 eax_112 = LocalAlloc(0x00000000, 0x00000000)
	edi_114 = eax_112
	word32 esi_120 = (0x00000000 - (-eax_112 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch eax_112 == 0x00000000 l1002E750
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000000 ebp:fp - 0x00000004 eax:0x00000000 ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16) Stack +0004(32)

l1002E6A6:
	word32 eax_215 = RegQueryValueExW(dwArg04, 0x1000392C, 0x00000000, fp - 0x0000000C, eax_112, fp - 0x00000008)
	esi_120 = eax_215
	word16 si_218 = (word16) eax_215
	byte S_221 = cond(eax_215)
	branch eax_215 <= 0x00000000 l1002E6D0
// DataOut: cs ds edi es esi fs gs si ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):0x00000000 -40(fp):0x00000000 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16)

l1002E6C5:
	word32 esi_310 = (word32) si_218
	esi_120 = esi_310 | 0x80070000
	S_221 = cond(esi_310 | 0x80070000) (alias)
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): S
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16)

l1002E6D0:
	branch S_221 l1002E78C
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -000C(0) Local -0014(32) Local -001C(16)

l1002E6D6:
	ebx_142 = 0xFFFFFFFF
	branch dwLoc0C != 0x00000002 l1002E750
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0x00000000 esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E6E2:
	word32 eax_245 = ExpandEnvironmentStringsW(eax_112, 0x00000000, 0x00000000)
	branch eax_245 == 0x00000000 l1002E750
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):fp - 0x0000000C -44(fp):<invalid> -40(fp):fp - 0x00000008 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -0018(32) Local -001C(16)

l1002E6F4:
	word32 eax_258 = LocalAlloc(0x00000000, eax_245 * 0x00000002)
	esi_120 = (0x00000000 - (-eax_258 == 0x00000000) & 0x7FF8FFF2) + 0x8007000E
	branch eax_258 == 0x00000000 l1002E750
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:0x00000000 ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(16)

l1002E719:
	word32 eax_281 = ExpandEnvironmentStringsW(eax_112, eax_258, eax_245)
	branch eax_281 == 0x00000000 l1002E742
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):0x00000000 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(16)

l1002E72C:
	branch eax_281 >u eax_245 l1002E742
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0018(32) Local -001C(16)

l1002E742:
	LocalFree(eax_258)
	esi_120 = 0x8007007A
// DataOut: cs ds ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E750:
	branch esi_120 < 0x00000000 l1002E78C
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E730:
	LocalFree(eax_112)
	edi_114 = eax_258
	ebx_142 = eax_281 - 0x00000001
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:0xFFFFFFFF esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E754:
	branch Mem0[edi_114 + ebx_142 * 0x00000002:word16] != 0x0000 l1002E787
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E787:
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(16)

l1002E75C:
	fn1000F2CF(ecx)
	branch edi_114 == 0x00000000 l1002E781
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E768:
	word32 eax_162 = ebx_142 + 0x00000001
	branch eax_162 == 0x00000000 l1002E781
// DataOut: cs ds eax ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:ecx ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32) Local -001C(16)

l1002E76F:
	Mem169[ecx:word32] = edi_114
	Mem170[ecx + 0x00000008:word32] = eax_162
	Mem171[ecx + 0x00000004:word32] = ebx_142
	Mem176[edi_114 - 0x00000002 + eax_162 * 0x00000002:word16] = 0x0000
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:ecx ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(16)

l1002E781:
	edi_114 = 0x00000000
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -001C(16)

l1002E78C:
	LocalFree(edi_114)
	return
// DataOut: bx cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

fn1002E617_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> ebx:ebx esi:esi -60(fp):<invalid> -56(fp):0x1000392C -52(fp):0x00000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):ecx -16(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp



void fn1002E79E(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002E79E_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002E79E:
	word32 esp_110
	word32 edx_119
	word32 eax_186
	word32 eax_15 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem33[dwArg04:word32] = 0x00000000
	word32 ebp_112 = fp - 0x00000004
	word32 edi_29 = 0x00000000
	branch fn100103B2(edx, 0x10003794) != 0x00000000 l1002E81C
// DataOut: cs ds ebp ebx ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002E81C:
	Mem152[dwArg04:word32] = ecx
	word32 esp_158
	word32 edi_159
	word32 ebp_160
	word32 ecx_161
	word32 eax_162
	byte SZO_163
	byte C_164
	word32 ebx_165
	word32 esi_166
	word32 edx_167
	byte Z_168
	byte S_169
	selector es_170
	selector ds_171
	call Mem152[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_39,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_155,dwLoc20,eax_153,ebp_7,ebx_21,ecx_157,edi_29,edx_35,es,esi_156,esp_154,S,SZO_37,Z_38
		defs: C_164,ds_171,eax_162,ebp_160,ebx_165,ecx_161,edi_159,edx_167,es_170,esi_166,esp_158,S_169,SZO_163,Z_168
	word32 edi_173
	word32 ecx_175
	word32 eax_176
	byte SZO_177
	byte C_178
	word32 ebx_179
	word32 esi_180
	byte Z_182
	byte S_183
	call esi_166 (retsize: 4; depth: 4)
		uses: C_164,ds_171,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_155,dwLoc20,eax_162,ebp_160,ebx_165,ecx_161,edi_159,edx_167,es_170,esi_166,esp_158,S_169,SZO_163,Z_168
		defs: C_178,ds_185,eax_176,ebp_174,ebx_179,ecx_175,edi_173,edx_181,es_184,esi_180,esp_172,S_183,SZO_177,Z_182
	eax_186 = 0x00000000
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:edx edx:0x10003794 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E7CF:
	word32 edi_111
	word32 eax_66 = fn100103B2(edx, 0x10007AA0)
	branch eax_66 != 0x00000000 l1002E7EB
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:edx edx:0x10003794 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E7DD:
	branch fn100103B2(edx, 0x10007A90) == 0x00000000 l1002E7EF
// DataOut: cs ds ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:edx edx:0x10007AA0 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E7EF:
	esp_110 = fp - 0x00000018
	edi_111 = edi_29
	branch fn1001036A(ecx + 0x00000004, edx, dwArg04, out edx_119) >= 0x00000000 l1002E802
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:edx edx:0x10007A90 -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E7FD:
	edi_111 = 0x80004002
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -32(fp):0x10007A90 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E802:
	branch edi_111 < 0x00000000 l1002E818
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -32(fp):0x10007A90 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E7EB:
	Mem129[dwArg04:word32] = ecx
// DataOut: cs ds ebp ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:0x00000000 ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:edx edx:<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E806:
	word32 esp_96
	word32 edi_97
	word32 ebp_98
	word32 ecx_99
	word32 eax_100
	byte SZO_101
	byte C_102
	word32 ebx_103
	word32 esi_104
	word32 edx_105
	byte Z_106
	byte S_107
	selector es_108
	selector ds_109
	call Mem33[0x100323BC:word32] (retsize: 4; depth: 32)
		uses: C_69,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_89,dwLoc20_86,eax_66,ebp_7,ebx_21,ecx_92,edi_29,edx_90,es,esi_91,esp_88,S,SZO_67,Z_68
		defs: C_102,ds_109,eax_100,ebp_98,ebx_103,ecx_99,edi_97,edx_105,es_108,esi_104,esp_96,S_107,SZO_101,Z_106
	word32 ecx_113
	word32 eax_114
	byte SZO_115
	byte C_116
	word32 ebx_117
	word32 esi_118
	byte Z_120
	byte S_121
	call esi_104 (retsize: 4; depth: 4)
		uses: C_102,ds_109,dwLoc04_6,dwLoc08_16,dwLoc0C_28,dwLoc10_19,dwLoc14_24,dwLoc18_26,dwLoc1C_89,dwLoc20_86,eax_100,ebp_98,ebx_103,ecx_99,edi_97,edx_105,es_108,esi_104,esp_96,S_107,SZO_101,Z_106
		defs: C_116,ds_123,eax_114,ebp_112,ebx_117,ecx_113,edi_111,edx_119,es_122,esi_118,esp_110,S_121,SZO_115,Z_120
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000018 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:ecx ecx:<invalid> edx:<invalid> -32(fp):0x10007A90 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E818:
	eax_186 = edi_111
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x10007A90 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002E830:
	word32 esp_52 = esp_110 + 0x00000004
	word32 ecx_60
	fn1002F420(eax_186, eax_15 ^ fp - 0x00000004, edx_119, Mem33[esp_52 + 0x00000004:word32], ebp_112, Mem33[esp_52:word32], Mem33[esp_110:word32], es, ds, out ecx_60)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x10007A90 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp

fn1002E79E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x10007A90 -28(fp):<invalid> -24(fp):edi -20(fp):esi -16(fp):ebx -12(fp):edx -8(fp):<invalid> -4(fp):ebp



void fn1002E843(word32 ecx, word32 edx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edi edx es fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebp ebx edi esi esp
fn1002E843_entry:
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002E843:
	word32 ebx_102
	Mem31[ecx:word32] = 0x00000000
	word32 ebx_32
	word32 edi_124
	word32 esi_200
	word32 ebp_104
	word32 eax_36 = fn1002FF64(0x00000000, edx, edi, out ebx_32, out ebp_104, out esi_200, out edi_124)
	word32 esp_125 = fp - 0x00000018
	branch eax_36 != 0x00000000 l1002E87B
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002E87B:
	Mem72[fp - 0x0000001C:word32] = edi_124
	word32 eax_76 = fn1002E318(eax_36, edx, es, ds, out edx, out ebx_102)
	word32 ecx_204 = Mem72[esi_200:word32]
	Mem79[ebp_104 - 0x00000008:word32] = ecx_204
	word32 esp_105 = fp - 0x0000001C
	word32 edi_100 = eax_76
	branch Mem79[eax_76 + 0x00000020:word32] == ecx_204 l1002E8B7
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):0x00000024 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002E88F:
	branch ecx_204 == 0x00000000 l1002E8A6
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x00000024 -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E893:
	Mem216[fp - 0x00000020:word32] = ecx_204
	word32 esp_219
	word32 edi_220
	word32 ebp_221
	byte SCZO_222
	word32 eax_223
	byte SZO_224
	byte C_225
	word32 ebx_226
	word32 esi_227
	word32 ecx_228
	word32 edx_229
	byte Z_230
	selector es_231
	selector ds_232
	call Mem216[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_194,ds,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_214,ebp_33,ebx_75,ecx_218,edi_78,edx_74,es,esi_217,esp_215,SCZO_80,SZO_192,Z_193
		defs: C_225,ds_232,eax_223,ebp_221,ebx_226,ecx_228,edi_220,edx_229,es_231,esi_227,esp_219,SCZO_222,SZO_224,Z_230
	byte SCZO_236
	word32 eax_237
	byte SZO_238
	byte C_239
	word32 ecx_242
	word32 edx_243
	byte Z_244
	call esi_227 (retsize: 4; depth: 4)
		uses: C_225,ds_232,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_223,ebp_221,ebx_226,ecx_228,edi_220,edx_229,es_231,esi_227,esp_219,SCZO_222,SZO_224,Z_230
		defs: C_239,ds_246,eax_237,ebp_235,ebx_240,ecx_242,edi_234,edx_243,es_245,esi_241,esp_233,SCZO_236,SZO_238,Z_244
	ecx_204 = Mem216[ebp_104 - 0x00000008:word32]
// DataOut: cs ds ebp ebx ecx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):0x00000024 -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E8A6:
	word32 eax_207 = Mem79[edi_100 + 0x00000020:word32]
	Mem208[edi_100 + 0x00000020:word32] = ecx_204
	Mem210[ebp_104 - 0x00000008:word32] = eax_207
	word32 esi_212
	fn1000C640(ebp_104 - 0x00000008, ebx_102, esi_200, edi_100, es, ds, out edx, out esi_212)
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E8B7:
	branch edi_100 == 0x00000000 l1002E8CB
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E8BB:
	word32 esp_160 = esp_105 - 0x00000004
	Mem161[esp_160:word32] = edi_100
	word32 esp_164
	word32 edi_165
	word32 ebp_166
	byte SCZO_167
	word32 eax_168
	byte SZO_169
	byte C_170
	word32 ebx_171
	word32 esi_172
	word32 ecx_173
	word32 edx_174
	byte Z_175
	selector es_176
	selector ds_177
	call Mem161[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_95,ds_82,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_159,ebp_91,ebx_88,ecx_163,edi_86,edx_84,es_83,esi_162,esp_160,SCZO_85,SZO_93,Z_94
		defs: C_170,ds_177,eax_168,ebp_166,ebx_171,ecx_173,edi_165,edx_174,es_176,esi_172,esp_164,SCZO_167,SZO_169,Z_175
	byte SCZO_181
	word32 eax_182
	byte SZO_183
	byte C_184
	word32 esi_186
	word32 ecx_187
	byte Z_189
	call esi_172 (retsize: 4; depth: 4)
		uses: C_170,ds_177,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_168,ebp_166,ebx_171,ecx_173,edi_165,edx_174,es_176,esi_172,esp_164,SCZO_167,SZO_169,Z_175
		defs: C_184,ds_191,eax_182,ebp_180,ebx_185,ecx_187,edi_179,edx_188,es_190,esi_186,esp_178,SCZO_181,SZO_183,Z_189
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E8CB:
	word32 eax_106 = Mem79[ebp_104 - 0x0000000C:word32]
	Mem107[eax_106:word32] = edi_100
	branch edi_100 == 0x00000000 l1002E8E4
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E8D4:
	word32 esp_127 = esp_105 - 0x00000004
	Mem128[esp_127:word32] = edi_100
	word32 esp_131
	word32 edi_132
	word32 ebp_133
	byte SCZO_134
	word32 eax_135
	byte SZO_136
	byte C_137
	word32 ebx_138
	word32 esi_139
	word32 ecx_140
	word32 edx_141
	byte Z_142
	selector es_143
	selector ds_144
	call Mem128[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_110,ds_96,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_106,ebp_104,ebx_102,ecx_130,edi_100,edx_98,es_97,esi_129,esp_127,SCZO_99,SZO_108,Z_109
		defs: C_137,ds_144,eax_135,ebp_133,ebx_138,ecx_140,edi_132,edx_141,es_143,esi_139,esp_131,SCZO_134,SZO_136,Z_142
	word32 edi_146
	byte SCZO_148
	word32 eax_149
	byte SZO_150
	byte C_151
	word32 esi_153
	word32 ecx_154
	byte Z_156
	call esi_139 (retsize: 4; depth: 4)
		uses: C_137,ds_144,dwLoc04_6,dwLoc08_12,dwLoc10_30,dwLoc14_15,dwLoc18_18,dwLoc1C_25,dwLoc20_27,eax_135,ebp_133,ebx_138,ecx_140,edi_132,edx_141,es_143,esi_139,esp_131,SCZO_134,SZO_136,Z_142
		defs: C_151,ds_158,eax_149,ebp_147,ebx_152,ecx_154,edi_146,edx_155,es_157,esi_153,esp_145,SCZO_148,SZO_150,Z_156
// DataOut: cs ds ebp ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E8E4:
	edi_124 = Mem107[esp_105:word32]
	esp_125 = esp_105 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

l1002E874:
	ebx_102 = 0x8007000E
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -32(fp):0x00000024 -28(fp):0x10002F5C -24(fp):esi -20(fp):ebx -16(fp):ecx -8(fp):<invalid> -4(fp):ebp

l1002E8E5:
	word32 ecx_62
	fn1002F420(ebx_102, Mem31[ebp_104 - 0x00000004:word32] ^ ebp_104, edx, Mem31[esp_125 + 0x00000004:word32], ebp_104, Mem31[esp_125:word32], edi_124, es, ds, out ecx_62)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002E843_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> edx:<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):esi -20(fp):ebx -16(fp):ecx -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002E93A(word32 ebp, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp
// LiveOut: bl eax ebx edx esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002E93A_entry:
// DataOut: cs ds ebp es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002E93A:
	word32 edi_21 = fp - 0x0000003C
	word32 ecx_22 = 0x00000006
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l1002E951:
	branch ecx_22 == 0x00000000 l1002E953
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000048 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:0x00000000 -76(fp):0x00000006 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)

l1002E953:
	word32 esi_108
	Mem52[dwArg04:word32] = 0x00000000
	word32 edi_54
	word32 ebp_55
	byte SCZO_56
	word32 ebx_57
	word32 esi_58
	word32 ecx_59
	word32 eax_60
	byte SZO_61
	byte C_62
	word32 edx_63
	byte S_64
	byte SO_65
	byte Z_66
	word32 esp_111
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaOpenPolicy (retsize: 4; depth: 92)
		uses: C_27,dwLoc04_6,dwLoc0C_48,dwLoc10_47,dwLoc14_41,dwLoc1C_51,dwLoc20_50,dwLoc24_49,dwLoc40_11,dwLoc44_14,dwLoc48_16,dwLoc4C_37,dwLoc50_39,dwLoc54_43,dwLoc58_45,eax_40,ebp_7,ebx_20,ecx_29,edi_34,edx_25,esi_46,esp_44,SZO_26
		defs: C_62,eax_60,ebp_55,ebx_57,ecx_59,edi_54,edx_63,esi_58,esp_53,S_64,SCZO_56,SO_65,SZO_61,Z_66
	branch (fp - 0x0000003C & fp - 0x0000003C) >= 0x00000000 l1002E992
// DataOut: cs ds eax edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000048 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:0x00000000 -76(fp):0x00000006 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E984:
	esi_108 = eax_60 | 0x10000000
	branch (eax_60 | 0x10000000) < 0x00000000 l1002EA3C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:0x00000000 -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E992:
	Mem192[esp_111 - 0x00000004:word32] = fp - 0x0000000C
	Mem195[esp_111 - 0x00000008:word32] = fp - 0x00000010
	Mem198[esp_111 - 0x0000000C:word32] = fp - 0x00000018
	Mem200[esp_111 - 0x00000010:word32] = 0x00000001
	Mem202[esp_111 - 0x00000014:word32] = 0x40000000
	Mem205[esp_111 - 0x00000018:word32] = 0x00000000
	word32 edi_207
	word32 ebp_208
	byte SCZO_209
	word32 ebx_210
	word32 ecx_212
	word32 eax_213
	byte SZO_214
	byte C_215
	word32 edx_216
	byte S_217
	byte SO_218
	byte Z_219
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaLookupSids2 (retsize: 4; depth: 4)
		uses: C_69,dwLoc04_6,dwLoc0C_48,dwLoc10_47,dwLoc14_41,dwLoc18_190,dwLoc1C_51,dwLoc20_50,dwLoc24_49,dwLoc40_11,dwLoc44_14,dwLoc48_16,dwLoc4C_37,dwLoc50_39,dwLoc54_43,dwLoc58_45,eax_196,ebp_55,ebx_57,ecx_59,edi_54,edx_63,esi_58,esp_204,S_68,SCZO_56,SO_65,SZO_67,Z_66
		defs: C_215,eax_213,ebp_208,ebx_210,ecx_212,edi_207,edx_216,esi_211,esp_206,S_217,SCZO_209,SO_218,SZO_214,Z_219
	branch (fp - 0x00000018 & fp - 0x00000018) >= 0x00000000 l1002E9BF
// DataOut: cs ds eax edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9BF:
	branch Mem205[0x00000000:word32] == 0x00000003 l1002E9D6
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9C7:
	branch Mem205[0x00000000:word32] == 0x00000007 l1002E9D6
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9CC:
	branch Mem205[0x00000000:word32] == 0x00000008 l1002E9D6
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9D1:
	branch Mem205[0x00000000:word32] != 0x00000005 l1002E9DB
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9D6:
	esi_108 = 0x80070057
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9B5:
	esi_108 = eax_213 | 0x10000000
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9DB:
	branch esi_108 < 0x00000000 l1002EA3C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9DF:
	word32 eax_231 = Mem205[0x00000004:word32]
	Mem236[esp_111 - 0x00000004:word32] = (word32) Mem205[eax_231:word16] >>u 0x00000001
	Mem239[esp_111 - 0x00000008:word32] = Mem236[eax_231 + 0x00000004:word32]
	word32 edx_242
	word32 eax_243 = fn1001DFFF(fp - 0x00000024, dwArg00, dwArg04, out edx_242)
	esi_108 = eax_243
	branch eax_243 < 0x00000000 l1002EA3C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002E9FC:
	Mem250[esp_111 - 0x00000004:word32] = 0x00000001
	Mem252[esp_111 - 0x00000008:word32] = 0x10002F58
	word32 edx_254
	word32 eax_255 = fn1001DFFF(fp - 0x00000024, dwArg00, dwArg04, out edx_254)
	esi_108 = eax_255
	branch eax_255 < 0x00000000 l1002EA3C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:fp - 0x00000024 eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32)

l1002EA11:
	Mem266[esp_111 - 0x00000004:word32] = (word32) Mem252[0x00000004:word16] >>u 0x00000001
	Mem269[esp_111 - 0x00000008:word32] = Mem266[0x00000008:word32]
	word32 edx_271
	word32 eax_272 = fn1001DFFF(fp - 0x00000024, dwArg00, dwArg04, out edx_271)
	esi_108 = eax_272
	branch eax_272 < 0x00000000 l1002EA3C
// DataOut: cs ds edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:fp - 0x00000024 eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA2C:
	Mem285[edi_207:word32] = 0x00000000
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:fp - 0x00000024 eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):0x00000000 -32(fp):0x00000000 -28(fp):0x00000000 -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA3C:
	branch 0x00000000 == 0x00000000 l1002EA4B
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA42:
	word32 esp_173 = esp_111 - 0x00000004
	Mem174[esp_173:word32] = 0x00000000
	word32 edi_176
	word32 ebp_177
	byte SCZO_178
	word32 ebx_179
	word32 ecx_181
	word32 eax_182
	byte SZO_183
	byte C_184
	word32 edx_185
	byte S_186
	byte SO_187
	byte Z_188
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaFreeMemory (retsize: 4; depth: 4)
		uses: C_77,dwLoc04_6,dwLoc0C_48,dwLoc10_47,dwLoc14_41,dwLoc18_70,dwLoc1C_72,dwLoc20_73,dwLoc24_71,dwLoc40_11,dwLoc44_14,dwLoc48_16,dwLoc4C_37,dwLoc50_39,dwLoc54_43,dwLoc58_45,eax_79,ebp_82,ebx_81,ecx_85,edi_84,edx_76,esi_80,esp_173,S_75,SCZO_86,SO_74,SZO_78,Z_87
		defs: C_184,eax_182,ebp_177,ebx_179,ecx_181,edi_176,edx_185,esi_180,esp_175,S_186,SCZO_178,SO_187,SZO_183,Z_188
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA4B:
	branch 0x00000000 == 0x00000000 l1002EA5A
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA51:
	word32 esp_156 = esp_111 - 0x00000004
	Mem157[esp_156:word32] = 0x00000000
	word32 edi_159
	word32 ebp_160
	byte SCZO_161
	word32 ebx_162
	word32 ecx_164
	word32 eax_165
	byte SZO_166
	byte C_167
	word32 edx_168
	byte S_169
	byte SO_170
	byte Z_171
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaFreeMemory (retsize: 4; depth: 4)
		uses: C_91,dwLoc04_6,dwLoc0C_48,dwLoc10_47,dwLoc14_41,dwLoc18_70,dwLoc1C_72,dwLoc20_73,dwLoc24_71,dwLoc40_11,dwLoc44_14,dwLoc48_16,dwLoc4C_37,dwLoc50_39,dwLoc54_43,dwLoc58_45,eax_93,ebp_96,ebx_95,ecx_99,edi_98,edx_90,esi_94,esp_156,S_89,SCZO_100,SO_88,SZO_92,Z_101
		defs: C_167,eax_165,ebp_160,ebx_162,ecx_164,edi_159,edx_168,esi_163,esp_158,S_169,SCZO_161,SO_170,SZO_166,Z_171
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA5A:
	branch 0x00000000 == 0x00000000 l1002EA69
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA60:
	word32 esp_139 = esp_111 - 0x00000004
	Mem140[esp_139:word32] = 0x00000000
	word32 edi_142
	word32 ebp_143
	byte SCZO_144
	word32 ebx_145
	word32 ecx_147
	word32 eax_148
	byte SZO_149
	byte C_150
	word32 edx_151
	byte S_152
	byte SO_153
	byte Z_154
	call api-ms-win-security-lsapolicy-l1-1-0.dll!LsaClose (retsize: 4; depth: 4)
		uses: C_105,dwLoc04_6,dwLoc0C_48,dwLoc10_47,dwLoc14_41,dwLoc18_70,dwLoc1C_72,dwLoc20_73,dwLoc24_71,dwLoc40_11,dwLoc44_14,dwLoc48_16,dwLoc4C_37,dwLoc50_39,dwLoc54_43,dwLoc58_45,eax_107,ebp_110,ebx_109,ecx_113,edi_112,edx_104,esi_108,esp_139,S_103,SCZO_114,SO_102,SZO_106,Z_115
		defs: C_150,eax_148,ebp_143,ebx_145,ecx_147,edi_142,edx_151,esi_146,esp_141,S_152,SCZO_144,SO_153,SZO_149,Z_154
// DataOut: cs ds edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32)

l1002EA69:
	fn1000F2EE(fp - 0x00000024)
	word32 esp_127 = esp_111 + 0x00000004
	word32 esi_129
	*esiOut = Mem52[esp_127:word32]
	word32 ebx_131
	*ebxOut = Mem52[esp_127 + 0x00000004:word32]
	return esi_108
// DataOut: bl cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

fn1002E93A_exit:
// DataOut: bl eax ebx edx esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp ebx:<invalid> ecx:fp - 0x00000024 eax:<invalid> edx:<invalid> esi:<invalid> ax:<invalid> -88(fp):0x00000000 -84(fp):fp - 0x0000003C -80(fp):0x00000801 -76(fp):fp - 0x00000014 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):ecx -20(fp):0x00000000 -16(fp):0x00000000 -12(fp):0x00000000 -4(fp):ebp

l1002E951_1:
	Mem30[edi_21:word32] = 0x00000000
	edi_21 = edi_21 + 0x00000004
	ecx_22 = ecx_22 - 0x00000001
// DataOut: cs ds ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000048 edi:<invalid> ebp:fp - 0x00000004 ebx:ecx ecx:<invalid> eax:0x00000000 edx:0x00000000 -76(fp):0x00000006 -72(fp):edi -68(fp):esi -64(fp):ebx -60(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0004(32) Stack +0004(32)



word32 fn1002EA7C(word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002EA7C_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002EA7C:
	word32 eax_106
	word32 eax_33 = (word32) Mem0[ecx + 0x00000004:word16] + 0x00000024 + ((word32) Mem0[ecx + 0x0000000C:word16] + (word32) Mem0[ecx + 0x00000014:word16])
	word32 eax_37 = CoTaskMemAlloc(eax_33)
	branch eax_37 == 0x00000000 l1002EB2A
// DataOut: cs ds ebx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32) Stack +0004(32)

l1002EB2A:
	eax_106 = 0x8007000E
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:ecx + 0x0000000C edx:ecx + 0x00000010 esi:<invalid> ebx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):edx -16(fp):ecx + 0x00000014 -12(fp):ecx + 0x00000018 -8(fp):ecx + 0x0000001C -4(fp):ebp
// LocalsOut: fp(32)

l1002EABE:
	Mem62[eax_37 + 0x0000001C:word32] = 0x00000000
	Mem63[eax_37 + 0x00000020:word32] = 0x00000000
	Mem66[eax_37:word32] = Mem63[ecx:word32]
	Mem74[eax_37 + 0x00000024:word16] = 0x0000
	fn1002EB38(ecx + 0x00000004, eax_37 + 0x00000024, eax_37 + 0x00000004)
	word32 edi_79 = eax_37 + 0x00000024 + (word32) Mem74[eax_37 + 0x00000004:word16]
	Mem84[eax_37 + 0x00000008:word32] = 0x00000024
	fn1002EB38(ecx + 0x0000000C, edi_79, eax_37 + 0x0000000C)
	Mem89[eax_37 + 0x00000010:word32] = edi_79 - eax_37
	word32 edi_91 = edi_79 + (word32) Mem89[eax_37 + 0x0000000C:word16]
	fn1002EB38(ecx + 0x00000014, edi_91, eax_37 + 0x00000014)
	Mem101[eax_37 + 0x00000018:word32] = edi_91 - eax_37
	Mem102[edx:word32] = eax_37
	Mem105[dwArg04:word32] = eax_33
	eax_106 = 0x00000000
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:ecx ebp:fp - 0x00000004 eax:<invalid> ecx:ecx + 0x0000000C edx:ecx + 0x00000010 esi:<invalid> ebx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):edx -16(fp):ecx + 0x00000014 -12(fp):ecx + 0x00000018 -8(fp):ecx + 0x0000001C -4(fp):ebp
// LocalsOut: fp(32)

l1002EB2F:
	return eax_106
// DataOut: cs ds eax es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> esi:<invalid> ebx:<invalid> ax:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):edx -16(fp):ecx + 0x00000014 -12(fp):ecx + 0x00000018 -8(fp):ecx + 0x0000001C -4(fp):ebp

fn1002EA7C_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:<invalid> esi:esi ebx:ebx ax:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):edx -16(fp):ecx + 0x00000014 -12(fp):ecx + 0x00000018 -8(fp):ecx + 0x0000001C -4(fp):ebp



void fn1002EB38(word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002EB38_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002EB38:
	Mem16[dwArg04:word16] = Mem0[ecx:word16]
	Mem18[dwArg04 + 0x00000002:word16] = Mem16[ecx:word16]
	word32 eax_19 = (word32) Mem18[dwArg04:word16]
	Mem23[dwArg04 + 0x00000004:word32] = edx
	memcpy(edx, Mem23[ecx + 0x00000004:word32], eax_19)
	return
// DataOut: cs ds ebx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002EB38_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp ax:<invalid> esi:esi eax:<invalid> -20(fp):edx -16(fp):<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn1002EB66(word32 ecx, word32 edx, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx edx
// LiveOut: eax edi esp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi esp rax rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn1002EB66_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002EB66:
	Mem20[edx:word32] = 0x00000000
	Mem21[edx + 0x00000004:word32] = 0x00000000
	word32 esi_16 = 0x00000000
	branch ecx == 0x00000000 l1002EBBF
// DataOut: ax cs ds eax ebx edi es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002EB7C:
	word32 edx_60 = ecx
	word32 eax_61 = 0x00007FFF
// DataOut: ax cs ds eax ebx edi edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:0x00000000 eax:0x00000000 -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002EB85:
	branch Mem21[edx_60:word16] == 0x0000 l1002EB92
// DataOut: ax cs ds eax ebx edi edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:0x00000000 eax:<invalid> ecx:0x00007FFF edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002EB8A:
	edx_60 = edx_60 + 0x00000002
	eax_61 = eax_61 - 0x00000001
	branch eax_61 != 0x00000000 l1002EB85
// DataOut: ax cs ds eax ebx edi edx es fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:0x00000000 eax:<invalid> ecx:0x00007FFF edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002EB92:
	esi_16 = (0x00000000 - (-eax_61 == 0x00000000) & 0x3FFFFFF3) + 0xC000000D
	branch eax_61 == 0x00000000 l1002EBBF
// DataOut: ax cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:0x00000000 eax:<invalid> ecx:0x00007FFF edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002EBA8:
	Mem83[edx + 0x00000004:word32] = ecx
	word32 eax_88 = 0x00000000 - (-eax_61 == 0x00000000) & (0x00007FFF - eax_61) * 0x00000002
	Mem90[edx:word16] = (word16) eax_88
	Mem94[edx + 0x00000002:word16] = (word16) (eax_88 + 0x00000002)
// DataOut: ax cs ds eax es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:<invalid> eax:<invalid> ecx:0x00007FFF edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx
// LocalsOut: fp(32)

l1002EBBF:
	word32 esp_28
	word32 edi_29
	word32 ebx_30
	word32 esi_31
	word32 edx_32
	word32 ecx_33
	byte SZO_34
	byte C_35
	byte Z_37
	word16 si_38
	byte SCZO_39
	word16 ax_40
	word32 eax_36
	call ntdll.dll!RtlNtStatusToDosError (retsize: 4; depth: 20)
		uses: ax_19,C_24,dwLoc04_6,dwLoc08_9,dwLoc0C_11,dwLoc10_27,eax_18,ebx_15,ecx,edi_13,edx,esi_25,esp_26,si_17,SZO_22,Z_23
		defs: ax_40,C_35,eax_36,ebx_30,ecx_33,edi_29,edx_32,esi_31,esp_28,SCZO_39,si_38,SZO_34,Z_37
	word32 edi_41
	*ediOut = esi_16
	branch eax_36 <= 0x00000000 l1002EBD5
// DataOut: ax cs ds eax edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edx ebx:ecx esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

l1002EBCD:
	eax_36 = (word32) ax_40 | 0x80070000
// DataOut: cs ds eax edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

l1002EBD5:
	return eax_36
// DataOut: cs ds eax edi es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx

fn1002EB66_exit:
// DataOut: eax edi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebx:<invalid> esi:<invalid> eax:<invalid> ecx:<invalid> edx:<invalid> -16(fp):<invalid> -12(fp):edi -8(fp):esi -4(fp):ebx



word32 fn1002EBD6(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut: eax esi
// Trashed: SCZO ah al ax ch cl cx eax ecx esi rax rcx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1002EBD6_entry:
// DataOut: cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002EBD6:
	word32 esp_28
	word32 edi_29
	word32 ebp_30
	byte SCZO_31
	word32 eax_32
	byte SZO_33
	byte C_34
	word32 esi_35
	word32 ecx_36
	byte S_37
	word32 edx_38
	word32 ebx_39
	selector es_40
	selector ds_41
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: C_13,dwLoc04_6,dwLoc0C_14,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_26,eax_20,ebp_7,ecx_27,edi_3,esi_19,esp_25,SZO_12
		defs: C_34,ds_41,eax_32,ebp_30,ebx_39,ecx_36,edi_29,edx_38,es_40,esi_35,esp_28,S_37,SCZO_31,SZO_33
	byte SCZO_45
	word32 eax_46
	byte SZO_47
	byte C_48
	word32 esi_49
	word32 ecx_50
	byte S_51
	selector ds_103
	selector es_102
	word32 ebx_101
	word32 edx_100
	word32 edi_43
	word32 ebp_44
	word32 esp_109
	call Mem0[esi_35 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: C_34,ds_41,dwLoc04_6,dwLoc0C_14,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_26,eax_32,ebp_30,ebx_39,ecx_36,edi_29,edx_38,es_40,esi_35,esp_28,S_37,SCZO_31,SZO_33
		defs: C_48,ds_55,eax_46,ebp_44,ebx_53,ecx_50,edi_43,edx_52,es_54,esi_49,esp_42,S_51,SCZO_45,SZO_47
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esi_104 = eax_46
	branch eax_46 < 0x00000000 l1002EC20
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Stack +0004(32)

l1002EC07:
	Mem86[esp_109 - 0x00000004:word32] = dwArg04
	Mem89[esp_109 - 0x00000008:word32] = fp - 0x00000020
	word32 esp_90
	byte SCZO_93
	word32 eax_94
	byte SZO_95
	byte C_96
	word32 esi_97
	word32 ecx_98
	byte S_99
	call PROPSYS.dll!PropVariantToGUID (retsize: 4; depth: 4)
		uses: C_59,ds_55,dwLoc04_6,dwLoc0C_14,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_26,eax_87,ebp_44,ebx_53,ecx_50,edi_43,edx_52,es_54,esi_56,esp_88,S_58,SCZO_45,SZO_57
		defs: C_96,ds_103,eax_94,ebp_92,ebx_101,ecx_98,edi_91,edx_100,es_102,esi_97,esp_90,S_99,SCZO_93,SZO_95
	Mem107[esp_90 - 0x00000004:word32] = fp - 0x00000020
	PropVariantClear(Mem107[esp_90 - 0x00000004:(ptr PROPVARIANT)])
	esi_104 = fp - 0x00000020
	esp_109 = esp_90
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100032C8 -44(fp):fp - 0x00000020 -40(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EC20:
	word32 esi_75 = Mem0[esp_109:word32]
	*esiOut = esi_75
	word32 ecx_77
	return fn1002F420(esi_104, eax_11 ^ fp - 0x00000004, edx_100, ebx_101, ebp_44, esi_75, edi_43, es_102, ds_103, out ecx_77)
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100032C8 -44(fp):fp - 0x00000020 -40(fp):esi -12(fp):<invalid> -4(fp):ebp

fn1002EBD6_exit:
// DataOut: eax esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100032C8 -44(fp):fp - 0x00000020 -40(fp):esi -12(fp):<invalid> -4(fp):ebp



word32 fn1002EC33(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edi esi si
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002EC33_entry:
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(0) Stack +0004(32)

l1002EC33:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem30[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_35
	word32 edi_36
	word32 ebp_37
	byte SCZO_38
	word32 eax_39
	byte SZO_40
	byte C_41
	word32 esi_42
	word32 edx_43
	word32 ecx_44
	byte S_45
	word16 ax_46
	byte Z_47
	word32 ebx_48
	selector es_49
	selector ds_50
	call Mem30[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: C_32,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_25,dwLoc34_28,eax_20,ebp_7,ecx_34,edi_19,edx,esi_33,esp_26,SZO_31
		defs: ax_46,C_41,ds_50,eax_39,ebp_37,ebx_48,ecx_44,edi_36,edx_43,es_49,esi_42,esp_35,S_45,SCZO_38,SZO_40,Z_47
	word32 edi_52
	byte SCZO_54
	word32 eax_55
	byte SZO_56
	byte C_57
	word32 esi_58
	word32 ecx_60
	byte S_61
	word16 ax_62
	byte Z_63
	selector ds_103
	selector es_104
	word32 ebx_105
	word32 edx_108
	word32 ebp_116
	word32 esp_117
	call Mem30[esi_42 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: ax_46,C_41,ds_50,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_25,dwLoc34_28,eax_39,ebp_37,ebx_48,ecx_44,edi_36,edx_43,es_49,esi_42,esp_35,S_45,SCZO_38,SZO_40,Z_47
		defs: ax_62,C_57,ds_66,eax_55,ebp_53,ebx_64,ecx_60,edi_52,edx_59,es_65,esi_58,esp_51,S_61,SCZO_54,SZO_56,Z_63
	word32 esi_113 = eax_55
	branch eax_55 < 0x00000000 l1002EC8D
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0020(0)

l1002EC67:
	branch 0x0000 == wLoc20 l1002EC7E
// DataOut: bl cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EC7E:
	esi_113 = 0x80070490
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EC6F:
	Mem124[esp_117 - 0x00000004:word32] = edi_52
	Mem127[esp_117 - 0x00000008:word32] = fp - 0x00000020
	word32 edi_129
	byte SCZO_131
	word32 eax_132
	byte SZO_133
	byte C_134
	word32 esi_135
	word32 ecx_137
	byte S_138
	word16 ax_139
	byte Z_140
	call PROPSYS.dll!PropVariantToStringAlloc (retsize: 4; depth: 4)
		uses: ax_99,C_70,ds_66,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_25,dwLoc34_28,eax_125,ebp_53,ebx_64,ecx_60,edi_52,edx_59,es_65,esi_67,esp_126,S_69,SCZO_101,SZO_68,wLoc20,Z_102
		defs: ax_139,C_134,ds_143,eax_132,ebp_130,ebx_141,ecx_137,edi_129,edx_136,es_142,esi_135,esp_128,S_138,SCZO_131,SZO_133,Z_140
	esi_113 = fp - 0x00000020
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EC83:
	word32 esp_119 = esp_117 - 0x00000004
	Mem120[esp_119:word32] = fp - 0x00000020
	PropVariantClear(Mem120[esp_119:(ptr PROPVARIANT)])
	esp_117 = esp_119 + 0x00000004
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EC8D:
	word32 edi_83 = Mem30[esp_117:word32]
	*ediOut = edi_83
	word32 esi_88 = Mem30[esp_117 + 0x00000004:word32]
	*esiOut = esi_88
	word32 ecx_90
	return fn1002F420(esi_113, eax_11 ^ fp - 0x00000004, edx_108, ebx_105, ebp_116, esi_88, edi_83, es_104, ds_103, out ecx_90)
// DataOut: bl cs ds eax ebx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp

fn1002EC33_exit:
// DataOut: eax edi esi si
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp



word32 fn1002ECA1(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002ECA1_entry:
// DataOut: bl cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0020(0) Stack +0004(32)

l1002ECA1:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem30[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_35
	word32 edi_36
	word32 ebp_37
	byte SCZO_38
	word32 eax_39
	byte SZO_40
	byte C_41
	word32 esi_42
	word32 edx_43
	word32 ecx_44
	byte S_45
	word16 ax_46
	byte Z_47
	word32 ebx_48
	selector es_49
	selector ds_50
	call Mem30[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: C_32,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_25,dwLoc34_28,eax_20,ebp_7,ecx_34,edi_19,edx,esi_33,esp_26,SZO_31
		defs: ax_46,C_41,ds_50,eax_39,ebp_37,ebx_48,ecx_44,edi_36,edx_43,es_49,esi_42,esp_35,S_45,SCZO_38,SZO_40,Z_47
	word32 edi_52
	byte SCZO_54
	word32 eax_55
	byte SZO_56
	byte C_57
	word32 esi_58
	word32 ecx_60
	byte S_61
	word16 ax_62
	byte Z_63
	selector ds_103
	selector es_104
	word32 ebx_105
	word32 edx_108
	word32 ebp_116
	word32 esp_117
	call Mem30[esi_42 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: ax_46,C_41,ds_50,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_25,dwLoc34_28,eax_39,ebp_37,ebx_48,ecx_44,edi_36,edx_43,es_49,esi_42,esp_35,S_45,SCZO_38,SZO_40,Z_47
		defs: ax_62,C_57,ds_66,eax_55,ebp_53,ebx_64,ecx_60,edi_52,edx_59,es_65,esi_58,esp_51,S_61,SCZO_54,SZO_56,Z_63
	word32 esi_113 = eax_55
	branch eax_55 < 0x00000000 l1002ECFB
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0020(0)

l1002ECD5:
	branch 0x0000 == wLoc20 l1002ECEC
// DataOut: bl cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002ECEC:
	esi_113 = 0x80070490
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002ECDD:
	Mem124[esp_117 - 0x00000004:word32] = edi_52
	Mem127[esp_117 - 0x00000008:word32] = fp - 0x00000020
	word32 edi_129
	byte SCZO_131
	word32 eax_132
	byte SZO_133
	byte C_134
	word32 esi_135
	word32 ecx_137
	byte S_138
	word16 ax_139
	byte Z_140
	call PROPSYS.dll!PropVariantToUInt32 (retsize: 4; depth: 4)
		uses: ax_99,C_70,ds_66,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_25,dwLoc34_28,eax_125,ebp_53,ebx_64,ecx_60,edi_52,edx_59,es_65,esi_67,esp_126,S_69,SCZO_101,SZO_68,wLoc20,Z_102
		defs: ax_139,C_134,ds_143,eax_132,ebp_130,ebx_141,ecx_137,edi_129,edx_136,es_142,esi_135,esp_128,S_138,SCZO_131,SZO_133,Z_140
	esi_113 = fp - 0x00000020
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002ECF1:
	word32 esp_119 = esp_117 - 0x00000004
	Mem120[esp_119:word32] = fp - 0x00000020
	PropVariantClear(Mem120[esp_119:(ptr PROPVARIANT)])
	esp_117 = esp_119 + 0x00000004
// DataOut: bl cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002ECFB:
	word32 edi_83 = Mem30[esp_117:word32]
	*ediOut = edi_83
	word32 esi_88 = Mem30[esp_117 + 0x00000004:word32]
	*esiOut = esi_88
	word32 ecx_90
	return fn1002F420(esi_113, eax_11 ^ fp - 0x00000004, edx_108, ebx_105, ebp_116, esi_88, edi_83, es_104, ds_103, out ecx_90)
// DataOut: bl cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp

fn1002ECA1_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp



word32 fn1002ED0F(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut: eax esi
// Trashed: SCZO ah al ax ch cl cx eax ecx esi rax rcx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1002ED0F_entry:
// DataOut: bl cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0020(0) Stack +0004(32)

l1002ED0F:
	word32 esp_32
	word32 edi_33
	word32 ebp_34
	byte SCZO_35
	word32 eax_36
	byte SZO_37
	byte C_38
	word32 esi_39
	word32 ecx_40
	word32 edx_41
	byte S_42
	word16 ax_43
	byte Z_44
	word32 ebx_45
	selector es_46
	selector ds_47
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: C_17,dwLoc04_6,dwLoc0C_12,dwLoc10_15,dwLoc28_21,dwLoc2C_25,dwLoc30_28,dwLoc34_30,eax_18,ebp_7,ecx_31,edi_3,edx,esi_23,esp_29,SZO_16
		defs: ax_43,C_38,ds_47,eax_36,ebp_34,ebx_45,ecx_40,edi_33,edx_41,es_46,esi_39,esp_32,S_42,SCZO_35,SZO_37,Z_44
	byte SCZO_51
	word32 eax_52
	byte SZO_53
	byte C_54
	word32 esi_55
	word32 ecx_56
	byte S_58
	word16 ax_59
	byte Z_60
	selector ds_102
	selector es_103
	word32 ebx_104
	word32 edx_107
	word32 edi_109
	word32 ebp_115
	word32 esp_116
	call Mem0[esi_39 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: ax_43,C_38,ds_47,dwLoc04_6,dwLoc0C_12,dwLoc10_15,dwLoc28_21,dwLoc2C_25,dwLoc30_28,dwLoc34_30,eax_36,ebp_34,ebx_45,ecx_40,edi_33,edx_41,es_46,esi_39,esp_32,S_42,SCZO_35,SZO_37,Z_44
		defs: ax_59,C_54,ds_63,eax_52,ebp_50,ebx_61,ecx_56,edi_49,edx_57,es_62,esi_55,esp_48,S_58,SCZO_51,SZO_53,Z_60
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esi_112 = eax_52
	branch eax_52 < 0x00000000 l1002ED69
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0020(0) Stack +0004(32)

l1002ED40:
	branch 0x0000 == wLoc20 l1002ED5A
// DataOut: bl cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Stack +0004(32)

l1002ED5A:
	esi_112 = 0x80070490
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Stack +0004(32)

l1002ED48:
	Mem124[esp_116 - 0x00000004:word32] = fp - 0x00000010
	Mem127[esp_116 - 0x00000008:word32] = fp - 0x00000020
	byte SCZO_131
	word32 eax_132
	byte SZO_133
	byte C_134
	word32 esi_135
	word32 ecx_136
	byte S_138
	word16 ax_139
	byte Z_140
	call PROPSYS.dll!PropVariantToBoolean (retsize: 4; depth: 4)
		uses: ax_98,C_67,ds_63,dwLoc04_6,dwLoc0C_12,dwLoc10_15,dwLoc28_21,dwLoc2C_25,dwLoc30_28,dwLoc34_30,eax_125,ebp_50,ebx_61,ecx_56,edi_49,edx_57,es_62,esi_64,esp_126,S_66,SCZO_100,SZO_65,wLoc20,Z_101
		defs: ax_139,C_134,ds_143,eax_132,ebp_130,ebx_141,ecx_136,edi_129,edx_137,es_142,esi_135,esp_128,S_138,SCZO_131,SZO_133,Z_140
	esi_112 = fp - 0x00000020
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Stack +0004(32)

l1002ED5F:
	word32 esp_118 = esp_116 - 0x00000004
	Mem119[esp_118:word32] = fp - 0x00000020
	PropVariantClear(Mem119[esp_118:(ptr PROPVARIANT)])
	esp_116 = esp_118 + 0x00000004
// DataOut: bl cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Stack +0004(32)

l1002ED69:
	Mem82[dwArg04:word32] = dwLoc10 & 0x00000000
	word32 esi_88 = Mem82[esp_116:word32]
	*esiOut = esi_88
	word32 ecx_90
	return fn1002F420(esi_112, eax_11 ^ fp - 0x00000004, edx_107, ebx_104, ebp_115, esi_88, edi_109, es_103, ds_102, out ecx_90)
// DataOut: bl cs ds eax ebx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1002ED0F_exit:
// DataOut: eax esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):edx -44(fp):fp - 0x00000020 -40(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn1002ED84(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edx es fs gs ss
// LiveOut: eax edi esi
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp esp
// Stack args: Stack +0004(32)
fn1002ED84_entry:
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0010(32) Local -0014(32) Local -0020(0) Stack +0004(32)

l1002ED84:
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	Mem29[dwArg04:word32] = Mem0[dwArg04:word32] & 0x00000000
	word32 esp_34
	word32 edi_35
	word32 ebp_36
	byte SCZO_37
	word32 eax_38
	byte SZO_39
	byte C_40
	word32 esi_41
	word32 ecx_42
	byte S_43
	byte Z_44
	word32 edx_45
	word32 ebx_46
	selector es_47
	selector ds_48
	call Mem29[0x100323BC:word32] (retsize: 4; depth: 56)
		uses: C_31,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_27,eax_20,ebp_7,ecx_33,edi_19,esi_32,esp_25,SZO_30
		defs: C_40,ds_48,eax_38,ebp_36,ebx_46,ecx_42,edi_35,edx_45,es_47,esi_41,esp_34,S_43,SCZO_37,SZO_39,Z_44
	word32 edi_50
	byte SCZO_52
	word32 eax_53
	byte SZO_54
	byte C_55
	word32 esi_56
	word32 ecx_57
	byte S_58
	byte Z_59
	selector ds_138
	selector es_137
	word32 ebx_100
	word32 edx_101
	word32 ebp_110
	word32 esp_111
	call Mem29[esi_41 + 0x00000014:word32] (retsize: 4; depth: 4)
		uses: C_40,ds_48,dwLoc04_6,dwLoc0C_12,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_27,eax_38,ebp_36,ebx_46,ecx_42,edi_35,edx_45,es_47,esi_41,esp_34,S_43,SCZO_37,SZO_39,Z_44
		defs: C_55,ds_63,eax_53,ebp_51,ebx_61,ecx_57,edi_50,edx_60,es_62,esi_56,esp_49,S_58,SCZO_52,SZO_54,Z_59
	word32 esi_108 = eax_53
	branch eax_53 < 0x00000000 l1002EE01
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0020(0)

l1002EDBC:
	esi_108 = 0x80004005
	branch wLoc20 != 0x0041 l1002EDF7
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32)

l1002EDC8:
	Mem119[esp_111 - 0x00000004:word32] = fp - 0x00000010
	Mem123[esp_111 - 0x00000008:word32] = dwLoc14
	word32 edi_125
	byte SCZO_127
	word32 eax_128
	byte SZO_129
	byte C_130
	word32 esi_131
	word32 ecx_132
	byte S_133
	byte Z_134
	call api-ms-win-security-sddl-l1-1-0.dll!ConvertSidToStringSidW (retsize: 4; depth: 4)
		uses: C_67,ds_63,dwLoc04_6,dwLoc0C_12,dwLoc14,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_27,eax_117,ebp_51,ebx_61,ecx_57,edi_50,edx_60,es_62,esi_97,esp_122,S_66,SCZO_95,SZO_65,wLoc20,Z_96
		defs: C_130,ds_138,eax_128,ebp_126,ebx_136,ecx_132,edi_125,edx_135,es_137,esi_131,esp_124,S_133,SCZO_127,SZO_129,Z_134
	branch (fp - 0x00000010 & fp - 0x00000010) == 0x00000000 l1002EDF0
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x80004005 ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32)

l1002EDF0:
	esi_108 = fn100107F1()
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x80004005 ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EDD9:
	Mem143[esp_111 - 0x00000004:word32] = edi_125
	Mem147[esp_111 - 0x00000008:word32] = dwLoc10
	word32 esp_148
	word32 edi_149
	byte SCZO_151
	word32 eax_152
	byte SZO_153
	byte C_154
	word32 esi_155
	word32 ecx_156
	byte S_157
	byte Z_158
	call SHCORE.dll!SHStrDupW (retsize: 4; depth: 4)
		uses: C_141,ds_138,dwLoc04_6,dwLoc0C_12,dwLoc10,dwLoc14,dwLoc24_15,dwLoc28_17,dwLoc2C_22,dwLoc30_24,dwLoc34_27,eax_128,ebp_126,ebx_136,ecx_132,edi_125,edx_135,es_137,esi_131,esp_146,S_133,SCZO_127,SZO_139,wLoc20,Z_140
		defs: C_154,ds_162,eax_152,ebp_150,ebx_160,ecx_156,edi_149,edx_159,es_161,esi_155,esp_148,S_157,SCZO_151,SZO_153,Z_158
	Mem165[esp_148 - 0x00000004:word32] = dwLoc10
	LocalFree(Mem165[esp_148 - 0x00000004:HLOCAL])
	esi_108 = eax_152
	esp_111 = esp_148
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:0x80004005 ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EDF7:
	word32 esp_113 = esp_111 - 0x00000004
	Mem114[esp_113:word32] = fp - 0x00000020
	PropVariantClear(Mem114[esp_113:(ptr PROPVARIANT)])
	esp_111 = esp_113 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EE01:
	word32 edi_80 = Mem29[esp_111:word32]
	*ediOut = edi_80
	word32 esi_85 = Mem29[esp_111 + 0x00000004:word32]
	*esiOut = esi_85
	word32 ecx_87
	return fn1002F420(esi_108, eax_11 ^ fp - 0x00000004, edx_101, ebx_100, ebp_110, esi_85, edi_80, es_137, ds_138, out ecx_87)
// DataOut: cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp

fn1002ED84_exit:
// DataOut: eax edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -52(fp):ecx -48(fp):0x100031B0 -44(fp):fp - 0x00000020 -40(fp):edi -36(fp):esi -12(fp):<invalid> -4(fp):ebp



word32 fn1002EE15(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ecx edx es fs gs ss
// LiveOut: bh eax ebx edi esi
// Trashed: SCZO ah al ax bh bl bx ch cl cx di dil eax ebx ecx edi esi rax rbx rcx rdi rsi si sil
// Preserved: ebp esp
fn1002EE15_entry:
// DataOut: cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002EE15:
	word32 edi_43
	byte SCZO_45
	word32 eax_46
	byte SZO_47
	byte C_48
	word32 ebx_49
	word32 esi_50
	word32 ecx_51
	byte S_52
	selector ds_123
	selector es_122
	word32 edx_121
	word32 ebp_112
	word32 esp_129
	call PROPSYS.dll!InitPropVariantFromCLSID (retsize: 4; depth: 60)
		uses: C_23,dwLoc04_6,dwLoc0C_12,dwLoc14_33,dwLoc18_31,dwLoc1C_29,dwLoc20_25,dwLoc28_15,dwLoc2C_18,dwLoc30_20,dwLoc34_37,dwLoc38_41,eax_35,ebp_7,ebx_28,ecx,edi_34,esi,esp_40,SZO_22
		defs: C_48,ds_55,eax_46,ebp_44,ebx_49,ecx_51,edi_43,edx_53,es_54,esi_50,esp_42,S_52,SCZO_45,SZO_47
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esi_124 = fp - 0x00000020
	branch (fp - 0x00000020 & fp - 0x00000020) < 0x00000000 l1002EE6C
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32)

l1002EE48:
	Mem90[esp_129 - 0x00000004:word32] = fp - 0x00000020
	Mem92[esp_129 - 0x00000008:word32] = 0x100032C8
	Mem94[esp_129 - 0x0000000C:word32] = ebx_49
	word32 esp_96
	word32 edi_97
	word32 ebp_98
	byte SCZO_99
	word32 eax_100
	byte SZO_101
	byte C_102
	word32 ebx_103
	word32 esi_104
	word32 ecx_105
	byte S_106
	word32 edx_107
	selector es_108
	selector ds_109
	call Mem94[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_59,ds_55,dwLoc04_6,dwLoc0C_12,dwLoc14_33,dwLoc18_31,dwLoc1C_29,dwLoc20_25,dwLoc28_15,dwLoc2C_18,dwLoc30_20,dwLoc34_37,dwLoc38_41,eax_88,ebp_44,ebx_49,ecx_95,edi_43,edx_53,es_54,esi_87,esp_93,S_58,SCZO_45,SZO_57
		defs: C_102,ds_109,eax_100,ebp_98,ebx_103,ecx_105,edi_97,edx_107,es_108,esi_104,esp_96,S_106,SCZO_99,SZO_101
	word32 esp_110
	word32 edi_111
	byte SCZO_113
	word32 eax_114
	byte SZO_115
	byte C_116
	word32 ebx_117
	word32 esi_118
	word32 ecx_119
	byte S_120
	call Mem94[esi_104 + 0x00000018:word32] (retsize: 4; depth: 4)
		uses: C_102,ds_109,dwLoc04_6,dwLoc0C_12,dwLoc14_33,dwLoc18_31,dwLoc1C_29,dwLoc20_25,dwLoc28_15,dwLoc2C_18,dwLoc30_20,dwLoc34_37,dwLoc38_41,eax_100,ebp_98,ebx_103,ecx_105,edi_97,edx_107,es_108,esi_104,esp_96,S_106,SCZO_99,SZO_101
		defs: C_116,ds_123,eax_114,ebp_112,ebx_117,ecx_119,edi_111,edx_121,es_122,esi_118,esp_110,S_120,SCZO_113,SZO_115
	Mem127[esp_110 - 0x00000004:word32] = fp - 0x00000020
	PropVariantClear(Mem127[esp_110 - 0x00000004:(ptr PROPVARIANT)])
	esi_124 = eax_114
	esp_129 = esp_110
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000010 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> -56(fp):<invalid> -52(fp):fp - 0x00000020 -48(fp):edi -44(fp):esi -40(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32)

l1002EE6C:
	word32 esp_71 = esp_129 + 0x00000004
	word32 edi_70 = Mem0[esp_129:word32]
	*ediOut = edi_70
	word32 esi_72 = Mem0[esp_71:word32]
	*esiOut = esi_72
	word32 ebx_77 = Mem0[esp_71 + 0x00000004:word32]
	*ebxOut = ebx_77
	word32 ecx_79
	return fn1002F420(esi_124, eax_11 ^ fp - 0x00000004, edx_121, ebx_77, ebp_112, esi_72, edi_70, es_122, ds_123, out ecx_79)
// DataOut: bh cs ds eax ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:fp - 0x00000010 ebp:fp - 0x00000004 eax:<invalid> ebx:ecx esi:<invalid> ecx:<invalid> -56(fp):<invalid> -52(fp):fp - 0x00000020 -48(fp):edi -44(fp):esi -40(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp

fn1002EE15_exit:
// DataOut: bh eax ebx edi esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ebx:<invalid> esi:<invalid> ecx:<invalid> -56(fp):<invalid> -52(fp):fp - 0x00000020 -48(fp):edi -44(fp):esi -40(fp):ebx -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):<invalid> -12(fp):<invalid> -4(fp):ebp



word32 fn1002EE81(word32 ecx, word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx ecx edi edx es fs gs ss
// LiveOut: eax esi si
// Trashed: SCZO ah al ax ch cl cx eax ecx esi rax rcx rsi si sil
// Preserved: ebp edi esp
fn1002EE81_entry:
// DataOut: bl cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002EE81:
	word32 esp_38
	word32 edi_39
	word32 ebp_40
	byte SCZO_41
	word32 eax_42
	byte SZO_43
	byte C_44
	word32 esi_45
	word32 ecx_46
	word16 ax_47
	word32 edx_48
	word32 ebx_49
	selector es_50
	selector ds_51
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 44)
		uses: ax_23,C_13,dwLoc04_6,dwLoc08_14,dwLoc10_28,dwLoc1C_17,dwLoc20_31,dwLoc24_34,dwLoc28_36,eax_29,ebp_7,ecx_37,edi_3,edx,esi_19,esp_35,SZO_12,wLoc18_25
		defs: ax_47,C_44,ds_51,eax_42,ebp_40,ebx_49,ecx_46,edi_39,edx_48,es_50,esi_45,esp_38,SCZO_41,SZO_43
	word32 esp_52
	word32 edi_53
	word32 ebp_54
	byte SCZO_55
	word32 eax_56
	byte SZO_57
	byte C_58
	word32 esi_59
	word32 ecx_60
	word16 ax_61
	word32 edx_62
	word32 ebx_63
	selector es_64
	selector ds_65
	call Mem0[esi_45 + 0x00000018:word32] (retsize: 4; depth: 4)
		uses: ax_47,C_44,ds_51,dwLoc04_6,dwLoc08_14,dwLoc10_28,dwLoc1C_17,dwLoc20_31,dwLoc24_34,dwLoc28_36,eax_42,ebp_40,ebx_49,ecx_46,edi_39,edx_48,es_50,esi_45,esp_38,SCZO_41,SZO_43,wLoc18_25
		defs: ax_61,C_58,ds_65,eax_56,ebp_54,ebx_63,ecx_60,edi_53,edx_62,es_64,esi_59,esp_52,SCZO_55,SZO_57
	word32 esi_70 = Mem0[esp_52:word32]
	*esiOut = esi_70
	word32 ecx_72
	return fn1002F420(eax_56, Mem0[0x10031078:word32] ^ fp - 0x00000004 ^ fp - 0x00000004, edx_62, ebx_63, ebp_54, esi_70, edi_53, es_64, ds_65, out ecx_72)
// DataOut: bl cs ds eax ebx edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002EE81_exit:
// DataOut: eax esi si
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -40(fp):ecx -36(fp):edx -32(fp):fp - 0x00000018 -28(fp):esi -24(fp):ax -16(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1002EEC6(void)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: esp
// Stack args: Stack +0004(32)
fn1002EEC6_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l1002EEC6:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l1002F799:
	free(ptrArg04)
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002EEC6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn1002EEF2(word32 edx, word32 ebp, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp edx es fs gs ss
// LiveOut: eax edx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32)
fn1002EEF2_entry:
	*edxOut = edx
// DataOut: cs ds ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1002EEF2:
	word32 edi_136
	word32 eax_36
	word32 ebp_137 = fp - 0x00000004
	word32 eax_11 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_126 = fp - 0x00000024
	branch dwArg08 != 0x00000000 l1002F013
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +0008(32) Stack +000C(32)

l1002F013:
	edi_136 = 0x00000001
	branch dwArg08 != 0x00000001 l1002F0DF
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l1002F01F:
	word32 dwLoc0C_288 = 0x00000000
	word32 edx_290 = Mem0[Mem0[fs:0x00000018:word32] + 0x00000004:word32]
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l1002F049:
	__lock()
	word32 eax_298
	__cmpxchg(Mem0[0x100315D0:word32], edx_290, 0x00000000, out eax_298)
	edx = edx_290
	*edxOut = edx
	branch eax_298 != 0x00000000 l1002F037
// DataOut: cs ds eax ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l1002F037:
	branch eax_298 == edx_290 l1002F057
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l1002F057:
	dwLoc0C_288 = 0x00000001
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l1002F03B:
	Sleep(0x000003E8)
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Local -0014(32) Stack +0004(32) Stack +000C(32)

l1002F055:
// DataOut: cs ds ebp edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l1002F05A:
	word32 esp_323
	word32 esi_317
	branch Mem0[0x100315D4:word32] == 0x00000000 l1002F06E
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l1002F06E:
	Mem429[0x100315D4:word32] = 0x00000001
	word32 eax_430 = fn1002F3D3(edx_290, 0x00000002, 0x00000001, es, ds, 0x10002064, 0x10002070)
	branch eax_430 != 0x00000000 l1002F00C
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x00000002 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l1002F089:
	word32 esp_442
	byte SCZO_445
	word32 eax_446
	byte SZO_447
	byte C_448
	word32 ebx_449
	byte Z_451
	selector fs_452
	word32 ecx_454
	call initterm (retsize: 4; depth: 48)
		uses: C_437,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_303,dwLoc10,dwLoc14_291,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_439,dwLoc2C_441,eax_430,ebp_7,ebx_308,ecx_433,edi_279,edx_293,es,esi_289,esp_440,fs,SCZO_304,SZO_435,Z_436
		defs: C_448,ds_456,eax_446,ebp_444,ebx_449,ecx_454,edi_443,edx_453,es_455,esi_450,esp_442,fs_452,SCZO_445,SZO_447,Z_451
	Mem459[0x100315D4:word32] = 0x00000002
	esp_323 = fp - 0x00000028
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:0x10002070 -44(fp):0x10002064 -40(fp):0x10002070 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l1002F065:
	byte SCZO_413
	word32 eax_414
	byte SZO_415
	byte C_416
	word32 ebx_417
	byte Z_419
	selector fs_420
	word32 ecx_422
	call amsg_exit (retsize: 4; depth: 44)
		uses: C_302,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_303,dwLoc10,dwLoc14_291,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_409,dwLoc2C,eax_298,ebp_7,ebx_308,ecx_297,edi_279,edx_293,es,esi_289,esp_408,fs,SCZO_304,SZO_300,Z_305
		defs: C_416,ds_424,eax_414,ebp_412,ebx_417,ecx_422,edi_411,edx_421,es_423,esi_418,esp_410,fs_420,SCZO_413,SZO_415,Z_419
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x00000002 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Local -000C(0) Stack +0004(32) Stack +000C(32)

l1002F09F:
	esp_126 = esp_323 + 0x00000004
	branch dwLoc0C_288 != 0x00000000 l1002F0AA
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l1002F0A6:
	Mem406[esi_317:word32] = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l1002F0AA:
	branch Mem0[0x100315E0:word32] == 0x00000000 l1002F0D9
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0004(0) Local -0008(32) Stack +0004(32) Stack +000C(32)

l1002F0B3:
	Mem351[esp_126 - 0x00000004:word32] = 0x100315E0
	word32 eax_354 = fn1002F800(dwArg00, out edx)
	branch eax_354 == 0x00000000 l1002F0D9
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32) Stack +000C(32)

l1002F0C2:
	Mem363[esp_126 - 0x00000004:word32] = dwArg0C
	Mem367[esp_126 - 0x00000008:word32] = 0x00000002
	Mem371[esp_126 - 0x0000000C:word32] = dwArg04
	word32 esp_372
	word32 edi_373
	word32 ebp_374
	byte SCZO_375
	word32 eax_376
	byte SZO_377
	byte C_378
	word32 ebx_379
	word32 esi_380
	byte Z_381
	selector fs_382
	word32 edx_383
	word32 ecx_384
	selector es_385
	selector ds_386
	call Mem371[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_359,ds_312,dwLoc04_6,dwLoc08_12,dwLoc0C_303,dwLoc10,dwLoc14_291,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_311,dwLoc2C_310,eax_354,ebp_322,ebx_320,ecx_365,edi_316,edx_353,es_313,esi_364,esp_370,fs_315,SCZO_331,SZO_357,Z_358
		defs: C_378,ds_386,eax_376,ebp_374,ebx_379,ecx_384,edi_373,edx_383,es_385,esi_380,esp_372,fs_382,SCZO_375,SZO_377,Z_381
	byte SCZO_390
	word32 eax_391
	byte SZO_392
	byte C_393
	word32 ebx_394
	word32 esi_395
	byte Z_396
	selector fs_397
	word32 ecx_399
	call esi_380 (retsize: 4; depth: 4)
		uses: C_378,ds_386,dwLoc04_6,dwLoc08_12,dwLoc0C_303,dwLoc10,dwLoc14_291,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_311,dwLoc2C_310,eax_376,ebp_374,ebx_379,ecx_384,edi_373,edx_383,es_385,esi_380,esp_372,fs_382,SCZO_375,SZO_377,Z_381
		defs: C_393,ds_401,eax_391,ebp_389,ebx_394,ecx_399,edi_388,edx_398,es_400,esi_395,esp_387,fs_397,SCZO_390,SZO_392,Z_396
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F0D9:
	Mem348[0x100310C0:word32] = Mem0[0x100310C0:word32] + 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002EF11:
	word32 eax_96 = Mem0[0x100310C0:word32]
	branch eax_96 <= 0x00000000 l1002F00C
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F00C:
	esp_126 = fp - 0x00000024
	eax_36 = 0x00000000
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000002 esi:<invalid> edx:<invalid> ecx:0x10002070 -44(fp):0x10002064 -40(fp):0x10002070 -36(fp):edi -32(fp):esi -28(fp):ebx -20(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002EF1E:
	Mem107[0x100310C0:word32] = eax_96 - 0x00000001
	word32 edx_111 = Mem107[Mem107[fs:0x00000018:word32] + 0x00000004:word32]
	__lock()
	word32 eax_115
	__cmpxchg(Mem107[0x100315D0:word32], edx_111, 0x00000000, out eax_115)
	word32 dwLoc0C_110 = 0x00000000
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:edi ebp:fp - 0x00000004 eax:<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l1002EF61:
	edx = edx_111
	*edxOut = edx
	esp_126 = fp - 0x00000024
	branch eax_115 != 0x00000000 l1002EF47
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l1002EF47:
	branch eax_115 == edx_111 l1002EF67
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l1002EF67:
	dwLoc0C_110 = 0x00000001
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0)

l1002EF4B:
	Sleep(0x000003E8)
	__lock()
	__cmpxchg(Mem107[0x100315D0:word32], edx_111, 0x00000000, out eax_115)
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(32)

l1002EF65:
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):0x00000000 -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0)

l1002EF6A:
	branch Mem107[0x100315D4:word32] == 0x00000002 l1002EF80
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0)

l1002EF80:
	word32 eax_152 = Mem107[0x100315DC:word32]
	word32 dwLoc18_153 = eax_152
	branch eax_152 == 0x00000000 l1002EFF4
// DataOut: cs ds eax ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0018(32)

l1002EF8C:
	word32 esi_182 = Mem107[0x100315D8:word32]
	word32 dwLoc10_184 = esi_182
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l1002EF97:
	esi_182 = esi_182 - 0x00000004
	branch esi_182 <u eax_152 l1002EFD8
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l1002EFD8:
	word32 esp_254 = esp_126 - 0x00000004
	Mem255[esp_254:word32] = eax_152
	free(Mem255[esp_254:(ptr void)])
	Mem258[0x100315D8:word32] = 0x00000000
	Mem261[0x100315DC:word32] = 0x00000000
	esp_126 = esp_254 + 0x00000004
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0)

l1002EFF4:
	Mem173[0x100315D4:word32] = 0x00000000
	edi_136 = 0x00000001
	branch dwLoc0C_110 != 0x00000000 l1002F0DF
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F003:
	Mem180[0x100315D0:word32] = 0x00000000
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002EF9E:
	word32 ecx_204 = Mem107[esi_182:word32]
	branch ecx_204 == 0x00000000 l1002EF97
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l1002EFA7:
	Mem209[esi_182:word32] = 0x00000000
	word32 esp_210
	word32 edi_211
	word32 ebp_212
	byte SCZO_213
	word32 eax_214
	byte SZO_215
	byte C_216
	word32 ebx_217
	word32 esi_218
	byte Z_219
	selector fs_220
	word32 edx_221
	word32 ecx_222
	selector es_223
	selector ds_224
	call Mem209[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_208,ds_188,dwLoc04_6,dwLoc08_12,dwLoc0C_130,dwLoc10_186,dwLoc14_205,dwLoc18_187,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_121,dwLoc2C,eax_198,ebp_199,ebx_196,ecx_204,edi_193,edx_190,es_189,esi_201,esp_200,fs_191,SCZO_202,SZO_206,Z_207
		defs: C_216,ds_224,eax_214,ebp_212,ebx_217,ecx_222,edi_211,edx_221,es_223,esi_218,esp_210,fs_220,SCZO_213,SZO_215,Z_219
	word32 edi_226
	byte SCZO_228
	word32 eax_229
	byte SZO_230
	byte C_231
	word32 ebx_232
	byte Z_234
	selector fs_235
	word32 edx_236
	word32 ecx_237
	call ecx_204 (retsize: 4; depth: 4)
		uses: C_216,ds_224,dwLoc04_6,dwLoc08_12,dwLoc0C_130,dwLoc10_186,dwLoc14_205,dwLoc18_187,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_121,dwLoc2C,eax_214,ebp_212,ebx_217,ecx_222,edi_211,edx_221,es_223,esi_218,esp_210,fs_220,SCZO_213,SZO_215,Z_219
		defs: C_231,ds_239,eax_229,ebp_227,ebx_232,ecx_237,edi_226,edx_236,es_238,esi_233,esp_225,fs_235,SCZO_228,SZO_230,Z_234
	edx = Mem209[0x100315DC:word32]
	*edxOut = edx
	word32 ecx_241 = Mem209[0x100315D8:word32]
	branch edi_226 != edx l1002EFCA
// DataOut: cs ds ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l1002EFC2:
	eax_152 = dwLoc18_153
	branch dwLoc10_184 == ecx_241 l1002EF97
// DataOut: cs ds eax ebp ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l1002EFCA:
	eax_152 = edx
	dwLoc10_184 = ecx_241
	dwLoc18_153 = edx
	esi_182 = ecx_241
// DataOut: cs ds eax ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:<invalid> edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Local -000C(0) Local -0010(0) Local -0018(32)

l1002EF73:
	word32 esp_135
	byte SCZO_138
	word32 eax_139
	byte SZO_140
	byte C_141
	word32 ebx_142
	word32 esi_143
	byte Z_144
	selector fs_145
	word32 ecx_147
	call amsg_exit (retsize: 4; depth: 44)
		uses: C_129,ds,dwLoc04_6,dwLoc08_12,dwLoc0C_130,dwLoc10_113,dwLoc14,dwLoc18,dwLoc1C_18,dwLoc20_21,dwLoc24_23,dwLoc28_134,dwLoc2C,eax_125,ebp_7,ebx_106,ecx_124,edi_119,edx_122,es,esi_108,esp_133,fs,SCZO_131,SZO_127,Z_132
		defs: C_141,ds_149,eax_139,ebp_137,ebx_142,ecx_147,edi_136,edx_146,es_148,esi_143,esp_135,fs_145,SCZO_138,SZO_140,Z_144
	esp_126 = fp - 0x00000024
// DataOut: cs ds ebp edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000024 edi:0x00000001 ebp:fp - 0x00000004 eax:<invalid> ebx:0x00000000 esi:0x100315D0 edx:<invalid> ecx:<invalid> -40(fp):0x000003E8 -36(fp):edi -32(fp):esi -28(fp):ebx -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F0DF:
	eax_36 = edi_136
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):0x10002048 -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F0E1:
	word32 esp_41 = esp_126 + 0x00000004
	word32 ecx_49
	return fn1002F420(eax_36, eax_11 ^ fp - 0x00000004, edx, Mem0[esp_41 + 0x00000004:word32], ebp_137, Mem0[esp_41:word32], Mem0[esp_126:word32], es, ds, out ecx_49)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> esi:<invalid> edx:<invalid> ecx:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002EEF2_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -44(fp):<invalid> -40(fp):<invalid> -36(fp):edi -32(fp):esi -28(fp):ebx -24(fp):<invalid> -20(fp):<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



BOOL DllMain(HANDLE hModule, DWORD dwReason, LPVOID lpReserved)
// stackDelta: 16; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0008(32)
DllMain_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1002F100:
	word32 edi_12 = edi
	branch dwReason != 0x00000001 l1002F110
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F10B:
	fn1002F8F9()
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 -4(fp):ebp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: fp(32)

l1002F110:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: fp(32)

l1002F136:
	word32 ebp_157 = fn1002F9A4(ebx, esi, edi, dwLoc0C, 0x100302E8, 0x00000030)
	Mem29[ebp_157 - 0x00000020:word32] = 0x00000001
	Mem31[ebp_157 - 0x00000004:word32] = 0x00000000
	word32 esp_23 = fp - 0x00000008
	word32 esi_101 = 0x00000000
	word32 eax_32 = Mem31[ebp_157 + 0x0000000C:word32]
	branch eax_32 >u 0x00000001 l1002F15B
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> -4(fp):ebp 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F156:
	Mem339[0x10031074:word32] = eax_32
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F15B:
	branch Mem31[ebp_157 + 0x0000000C:word32] != 0x00000000 l1002F172
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F161:
	branch Mem31[0x100310C0:word32] != 0x00000000 l1002F172
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F172:
	word32 eax_56 = Mem31[ebp_157 + 0x0000000C:word32]
	branch eax_56 == 0x00000001 l1002F183
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F17A:
	branch eax_56 != 0x00000002 l1002F228
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F183:
	edi_12 = Mem31[0x100315E4:word32]
	branch edi_12 == 0x00000000 l1002F1DB
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F18D:
	Mem286[ebp_157 - 0x00000004:word32] = 0x00000001
	branch Mem286[ebp_157 + 0x0000000C:word32] != 0x00000001 l1002F1A4
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F19A:
	Mem331[0x100310C4:word32] = 0x00000001
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F1A4:
	Mem291[fp - 0x0000000C:word32] = Mem286[ebp_157 + 0x00000010:word32]
	Mem294[fp - 0x00000010:word32] = Mem291[ebp_157 + 0x0000000C:word32]
	Mem297[fp - 0x00000014:word32] = Mem294[ebp_157 + 0x00000008:word32]
	word32 esp_299
	word32 edi_300
	word32 ebp_301
	byte SCZO_302
	byte Z_303
	word32 esi_304
	byte SZO_305
	byte C_306
	word32 eax_307
	byte CZ_308
	word32 ecx_309
	word32 ebx_310
	word32 edx_311
	selector es_312
	selector ds_313
	call Mem297[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_249,CZ_34,ds,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_56,ebp_28,ebx,ecx_298,edi_246,edx,es,esi_30,esp_296,SCZO_287,SZO_247,Z_288
		defs: C_306,CZ_308,ds_313,eax_307,ebp_301,ebx_310,ecx_309,edi_300,edx_311,es_312,esi_304,esp_299,SCZO_302,SZO_305,Z_303
	byte SCZO_317
	byte Z_318
	byte SZO_320
	byte C_321
	word32 eax_322
	byte CZ_323
	word32 ecx_324
	call edi_300 (retsize: 4; depth: 4)
		uses: C_306,CZ_308,ds_313,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_307,ebp_301,ebx_310,ecx_309,edi_300,edx_311,es_312,esi_304,esp_299,SCZO_302,SZO_305,Z_303
		defs: C_321,CZ_323,ds_328,eax_322,ebp_316,ebx_325,ecx_324,edi_315,edx_326,es_327,esi_319,esp_314,SCZO_317,SZO_320,Z_318
	Mem329[ebp_157 - 0x00000020:word32] = eax_322
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F1D8:
	Mem330[ebp_157 - 0x00000004:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F1DB:
	branch Mem31[ebp_157 - 0x00000020:word32] == 0x00000000 l1002F3AB
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F1E5:
	Mem269[ebp_157 - 0x00000004:word32] = 0x00000002
	word32 esp_271 = esp_23 - 0x00000004
	Mem272[esp_271:word32] = Mem269[ebp_157 + 0x00000010:word32]
	Mem275[esp_271 - 0x00000004:word32] = Mem272[ebp_157 + 0x0000000C:word32]
	Mem278[esp_271 - 0x00000008:word32] = Mem275[ebp_157 + 0x00000008:word32]
	Mem282[ebp_157 - 0x00000020:word32] = fn1002EEF2(edx, ebp_157, es, ds, dwArg00, hModule, dwReason, out edx)
	esp_23 = esp_271 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F21B:
	Mem283[ebp_157 - 0x00000004:word32] = esi_101
	branch Mem283[ebp_157 - 0x00000020:word32] == 0x00000000 l1002F3AB
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F228:
	Mem72[ebp_157 - 0x00000004:word32] = 0x00000003
	word32 esp_74 = esp_23 - 0x00000004
	Mem75[esp_74:word32] = Mem72[ebp_157 + 0x00000010:word32]
	Mem78[esp_74 - 0x00000004:word32] = Mem75[ebp_157 + 0x0000000C:word32]
	Mem81[esp_74 - 0x00000008:word32] = Mem78[ebp_157 + 0x00000008:word32]
	word32 eax_85 = fn1000C712(edx, ebx, es, ds, dwArg00, hModule, out ebp_157, out esi_101)
	Mem87[ebp_157 - 0x00000020:word32] = eax_85
	word32 esp_199 = esp_74 + 0x00000004
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F25E:
	Mem88[ebp_157 - 0x00000004:word32] = esi_101
	branch Mem88[ebp_157 + 0x0000000C:word32] != 0x00000001 l1002F311
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F26B:
	branch Mem88[ebp_157 - 0x00000020:word32] != 0x00000000 l1002F311
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F275:
	Mem176[ebp_157 - 0x00000004:word32] = 0x00000004
	Mem178[esp_74:word32] = esi_101
	Mem180[esp_74 - 0x00000004:word32] = esi_101
	Mem183[esp_74 - 0x00000008:word32] = Mem180[ebp_157 + 0x00000008:word32]
	fn1000C712(edx, ebx, es, ds, dwArg00, hModule, out ebp_157, out esi_101)
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F2A1:
	Mem188[ebp_157 - 0x00000004:word32] = esi_101
	Mem189[ebp_157 - 0x00000004:word32] = 0x00000005
	Mem191[esp_74:word32] = esi_101
	Mem193[esp_74 - 0x00000004:word32] = esi_101
	Mem196[esp_74 - 0x00000008:word32] = Mem193[ebp_157 + 0x00000008:word32]
	word32 eax_198 = fn1002EEF2(edx, ebp_157, es, ds, dwArg00, hModule, dwReason, out edx)
	esp_199 = esp_74 + 0x00000004
// DataOut: cs ds ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F2D0:
	Mem200[ebp_157 - 0x00000004:word32] = esi_101
	edi_12 = Mem200[0x100315E4:word32]
	branch edi_12 == 0x00000000 l1002F311
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F2DD:
	Mem205[ebp_157 - 0x00000004:word32] = 0x00000006
	Mem207[esp_74:word32] = esi_101
	Mem209[esp_74 - 0x00000004:word32] = esi_101
	Mem212[esp_74 - 0x00000008:word32] = Mem209[ebp_157 + 0x00000008:word32]
	word32 esp_214
	word32 edi_215
	word32 ebp_216
	byte SCZO_217
	byte Z_218
	word32 esi_219
	byte SZO_220
	byte C_221
	word32 eax_222
	byte CZ_223
	word32 ecx_224
	word32 ebx_225
	word32 edx_226
	selector es_227
	selector ds_228
	call Mem212[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_204,CZ_63,ds_59,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_198,ebp_184,ebx_71,ecx_213,edi_201,edx_197,es_60,esi_185,esp_211,SCZO_174,SZO_202,Z_203
		defs: C_221,CZ_223,ds_228,eax_222,ebp_216,ebx_225,ecx_224,edi_215,edx_226,es_227,esi_219,esp_214,SCZO_217,SZO_220,Z_218
	byte SCZO_232
	byte Z_233
	byte SZO_235
	byte C_236
	word32 eax_237
	byte CZ_238
	word32 ecx_239
	call edi_215 (retsize: 4; depth: 4)
		uses: C_221,CZ_223,ds_228,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_222,ebp_216,ebx_225,ecx_224,edi_215,edx_226,es_227,esi_219,esp_214,SCZO_217,SZO_220,Z_218
		defs: C_236,CZ_238,ds_243,eax_237,ebp_231,ebx_240,ecx_239,edi_230,edx_241,es_242,esi_234,esp_229,SCZO_232,SZO_235,Z_233
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F30E:
	Mem244[ebp_157 - 0x00000004:word32] = esi_101
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F311:
	word32 eax_102 = Mem88[ebp_157 + 0x0000000C:word32]
	branch eax_102 == 0x00000000 l1002F321
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F318:
	branch eax_102 != 0x00000003 l1002F3AB
// DataOut: cs ds ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved
// LocalsOut: Local -0004(32)

l1002F321:
	Mem108[ebp_157 - 0x00000004:word32] = 0x00000007
	word32 esp_110 = esp_199 - 0x00000004
	Mem111[esp_110:word32] = Mem108[ebp_157 + 0x00000010:word32]
	Mem114[esp_110 - 0x00000004:word32] = Mem111[ebp_157 + 0x0000000C:word32]
	Mem117[esp_110 - 0x00000008:word32] = Mem114[ebp_157 + 0x00000008:word32]
	word32 eax_119 = fn1002EEF2(edx, ebp_157, es, ds, dwArg00, hModule, dwReason, out edx)
	Mem121[ebp_157 - 0x00000020:word32] = eax_119
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

l1002F357:
	Mem122[ebp_157 - 0x00000004:word32] = esi_101
	edi_12 = Mem122[0x100315E4:word32]
	branch edi_12 == 0x00000000 l1002F3AB
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

l1002F364:
	branch Mem122[0x100310C4:word32] == 0x00000000 l1002F3AB
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

l1002F36D:
	Mem129[ebp_157 - 0x00000004:word32] = 0x00000008
	Mem132[esp_110:word32] = Mem129[ebp_157 + 0x00000010:word32]
	Mem135[esp_110 - 0x00000004:word32] = Mem132[ebp_157 + 0x0000000C:word32]
	Mem138[esp_110 - 0x00000008:word32] = Mem135[ebp_157 + 0x00000008:word32]
	word32 esp_140
	word32 edi_141
	word32 ebp_142
	byte SCZO_143
	byte Z_144
	word32 esi_145
	byte SZO_146
	byte C_147
	word32 eax_148
	byte CZ_149
	word32 ecx_150
	word32 ebx_151
	word32 edx_152
	selector es_153
	selector ds_154
	call Mem138[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_126,CZ_95,ds_91,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_119,ebp_97,ebx_100,ecx_139,edi_123,edx_118,es_92,esi_101,esp_137,SCZO_127,SZO_124,Z_128
		defs: C_147,CZ_149,ds_154,eax_148,ebp_142,ebx_151,ecx_150,edi_141,edx_152,es_153,esi_145,esp_140,SCZO_143,SZO_146,Z_144
	word32 esp_155
	byte SCZO_158
	byte Z_159
	byte SZO_161
	byte C_162
	word32 eax_163
	byte CZ_164
	word32 ecx_165
	call edi_141 (retsize: 4; depth: 4)
		uses: C_147,CZ_149,ds_154,dwLoc04_22,dwLoc08_24,dwLoc0C,eax_148,ebp_142,ebx_151,ecx_150,edi_141,edx_152,es_153,esi_145,esp_140,SCZO_143,SZO_146,Z_144
		defs: C_162,CZ_164,ds_169,eax_163,ebp_157,ebx_166,ecx_165,edi_156,edx_167,es_168,esi_160,esp_155,SCZO_158,SZO_161,Z_159
	Mem170[ebp_157 - 0x00000020:word32] = eax_163
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

l1002F3A8:
	Mem171[ebp_157 - 0x00000004:word32] = esi_101
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

l1002F16A:
	Mem338[ebp_157 - 0x00000020:word32] = 0x00000000
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:0x00000000 ecx:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

l1002F3AB:
	Mem51[ebp_157 - 0x00000004:word32] = 0xFFFFFFFE
	fn1002F3C2(ebp_157)
	word32 ebx_53
	word32 esi_54
	return fn1002F9EC(Mem51[ebp_157 - 0x00000020:word32], edx, ebx, ebp_157, esi_101, edi_12, es, ds, out ebx_53, out esi_54)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved

DllMain_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> edx:<invalid> al:<invalid> -8(fp):0x100302E8 -4(fp):0x00000030 4(fp):hModule 8(fp):dwReason 12(fp):lpReserved



void fn1002F116(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx eax ebp ecx esp rax rbp rcx rsp sp spl
// Preserved: edi
// Stack args: Stack +0004(32)
fn1002F116_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002F116:
	branch dwArg04 != 0xE06D7363 l1002F132
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F132:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0xE06D7363 -4(fp):ebp

l1002F125:
	word32 esp_32
	word32 edi_33
	word32 ebp_34
	word32 eax_35
	byte SCZO_36
	byte Z_37
	word32 ecx_38
	byte SZO_39
	byte C_40
	call XcptFilter (retsize: 4; depth: 16)
		uses: C,dwLoc04_6,dwLoc08_26,dwLoc0C_28,eax_8,ebp_7,ecx,edi_3,esp_27,SCZO_10,SZO,Z_11
		defs: C_40,eax_35,ebp_34,ecx_38,edi_33,esp_32,SCZO_36,SZO_39,Z_37
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:0xE06D7363 -4(fp):ebp

fn1002F116_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> ecx:<invalid> -12(fp):0xE06D7363 -8(fp):<invalid> -4(fp):ebp



void fn1002F3C2(word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp
// LiveOut:
// Trashed: SCZO
// Preserved: esp
fn1002F3C2_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F3C2:
	branch Mem0[ebp + 0x0000000C:word32] >u 0x00000001 l1002F3D2
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F3C8:
	Mem6[0x10031074:word32] = 0xFFFFFFFF
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F3D2:
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F3C2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn1002F3D3(word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx di dil eax ecx edi esi rax rcx rdi rsi si sil
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002F3D3_entry:
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002F3D3:
	word32 edi_3 = edi
	word32 ebp_119 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	word32 esp_15 = fp - 0x0000000C
	word32 esi_124 = dwArg04
	word32 eax_121 = 0x00000000
	branch dwArg04 >=u dwArg08 l1002F40C
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002F3EE:
	word32 esp_117 = fp - 0x00000010
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002F3EF:
	branch eax_121 != 0x00000000 l1002F40B
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002F3F3:
	word32 edi_83 = Mem0[esi_124:word32]
	branch edi_83 == 0x00000000 l1002F403
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002F3F9:
	word32 esp_103
	word32 edi_104
	word32 ebp_105
	word32 ecx_106
	word32 eax_107
	byte SZO_108
	byte C_109
	word32 esi_110
	byte SCZO_111
	byte Z_112
	word32 edx_113
	word32 ebx_114
	selector es_115
	selector ds_116
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_86,ds_54,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_53,eax_62,ebp_63,ebx_56,ecx_102,edi_83,edx_57,es_55,esi_60,esp_64,SCZO_58,SZO_84,Z_85
		defs: C_109,ds_116,eax_107,ebp_105,ebx_114,ecx_106,edi_104,edx_113,es_115,esi_110,esp_103,SCZO_111,SZO_108,Z_112
	word32 edi_118
	word32 ecx_120
	byte SZO_122
	byte C_123
	byte SCZO_125
	byte Z_126
	call edi_104 (retsize: 4; depth: 4)
		uses: C_109,ds_116,dwLoc04_6,dwLoc08_14,dwLoc0C_17,dwLoc10_53,eax_107,ebp_105,ebx_114,ecx_106,edi_104,edx_113,es_115,esi_110,esp_103,SCZO_111,SZO_108,Z_112
		defs: C_123,ds_130,eax_121,ebp_119,ebx_128,ecx_120,edi_118,edx_127,es_129,esi_124,esp_117,SCZO_125,SZO_122,Z_126
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002F403:
	esi_124 = esi_124 + 0x00000004
	branch esi_124 <u dwArg08 l1002F3EF
// DataOut: cs ds eax ebp ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32) Stack +0008(32)

l1002F40B:
	edi_3 = Mem0[esp_117:word32]
	esp_15 = esp_117 + 0x00000004
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F40C:
	word32 ecx_47
	return fn1002F420(eax_121, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_119, Mem0[esp_15:word32], edi_3, es, ds, out ecx_47)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1002F3D3_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:<invalid> ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> -16(fp):edi -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn1002F420(word32 eax, word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// LiveOut: al eax ecx
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: esp
fn1002F420_entry:
	*ecxOut = ecx
// DataOut: al bh bl bx cs ds dx eax ebp ebx ecx edi edx es esi fs gs si ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

l1002F420:
	branch ecx != Mem0[0x10031078:word32] l1002F42B
// DataOut: al bh bl bx cs ds dx eax ebp ebx ecx edi edx es esi fs gs si ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

l1002F42B:
// DataOut: bh bl bx cs ds dx eax ebp ebx ecx edi edx es esi fs gs si ss
// DataOut (flags): DP
// SymbolicIn: esp:fp

l1002F42B_thunk_fn1002FA5B:
	word32 ecx_18
	return fn1002FA5B(eax, ecx, edx, ebx, ebp, esi, edi, es, ds, dwLoc04, out ecx_18)
// DataOut: al bh bl bx cs ds dx eax ebp ebx ecx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F428:
	return eax
// DataOut: al bh bl bx cs ds dx eax ebp ebx ecx edi edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F420_exit:
// DataOut: al eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid>



word32 fn1002F443(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1002F443_entry:
// DataOut: cs ds edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002F443:
	return __ror(dwArg04, (byte) (0x00000020 - (Mem0[0x10031078:word32] & 0x0000001F))) ^ Mem0[0x10031078:word32]
// DataOut: cs ds eax edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F443_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> -8(fp):0x00000020 -4(fp):ebp



void fn1002F462(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebx edi
fn1002F462_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F462:
	fn1002FBC5(ebx, esi, edi, 0x100310C8, 0x00000FA0)
	Mem33[fp - 0x00000018:word32] = 0x10002960
	word32 eax_34 = GetModuleHandleW(Mem33[fp - 0x00000018:LPCWSTR])
	word32 ebp_110 = fp - 0x00000004
	word32 esi_199 = eax_34
	branch eax_34 != 0x00000000 l1002F4AF
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002F49A:
	Mem196[fp - 0x00000018:word32] = 0x100029A4
	word32 eax_197 = GetModuleHandleW(Mem196[fp - 0x00000018:LPCWSTR])
	esi_199 = eax_197
	branch eax_197 == 0x00000000 l1002F53C
// DataOut: cs ds ebp edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x100310C8 -28(fp):0x00000FA0 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002F4AF:
	word32 esp_111
	word32 eax_109
	Mem81[fp - 0x00000018:word32] = 0x100029C0
	Mem83[fp - 0x0000001C:word32] = esi_199
	word32 eax_84 = GetProcAddress(Mem83[fp - 0x0000001C:HMODULE], Mem83[fp - 0x00000018:LPCSTR])
	Mem87[fp - 0x00000018:word32] = 0x100029DC
	Mem89[fp - 0x0000001C:word32] = esi_199
	word32 eax_91 = GetProcAddress(Mem89[fp - 0x0000001C:HMODULE], Mem89[fp - 0x00000018:LPCSTR])
	Mem94[fp - 0x00000018:word32] = 0x100029F8
	Mem96[fp - 0x0000001C:word32] = esi_199
	word32 eax_98 = GetProcAddress(Mem96[fp - 0x0000001C:HMODULE], Mem96[fp - 0x00000018:LPCSTR])
	branch eax_84 == 0x00000000 l1002F515
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebx:<invalid> -32(fp):0x100310C8 -28(fp):0x00000FA0 -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002F4DD:
	branch eax_91 == 0x00000000 l1002F515
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -32(fp):0x100310C8 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002F4E1:
	branch eax_98 == 0x00000000 l1002F515
// DataOut: cs ds ebp edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -32(fp):0x100310C8 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002F515:
	Mem129[fp - 0x00000018:word32] = 0x00000000
	Mem131[fp - 0x0000001C:word32] = 0x00000000
	Mem133[fp - 0x00000020:word32] = 0x00000001
	Mem135[fp - 0x00000024:word32] = 0x00000000
	eax_109 = CreateEventW(Mem135[fp - 0x00000024:LPSECURITY_ATTRIBUTES], Mem135[fp - 0x00000020:BOOL], Mem135[fp - 0x0000001C:BOOL], Mem135[fp - 0x00000018:LPCWSTR])
	Mem138[0x100310E4:word32] = eax_109
	esp_111 = fp - 0x00000014
	branch eax_109 == 0x00000000 l1002F53C
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -32(fp):0x100310C8 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp
// LocalsOut: Local -0004(32)

l1002F53C:
	Mem59[fp - 0x00000018:word32] = 0x00000007
	fn1002FBD9(ebp, dwArg00)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem62[fp - 0x0000001C:word32] = 0x100310C8
	DeleteCriticalSection(Mem62[fp - 0x0000001C:LPCRITICAL_SECTION])
	word32 eax_64 = Mem62[0x100310E4:word32]
	branch eax_64 == 0x00000000 l1002F56B
// DataOut: eax esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1002F564:
	Mem75[fp - 0x0000001C:word32] = eax_64
	CloseHandle(Mem75[fp - 0x0000001C:HANDLE])
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1002F56B:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1002F4E5:
	Mem149[0x100310E4:word32] = Mem96[0x100310E4:word32] & 0x00000000
	Mem154[fp - 0x00000018:word32] = 0x100310E0
	word32 esp_155
	word32 edi_156
	word32 ebp_157
	word32 ecx_158
	word32 eax_159
	byte SZO_160
	byte C_161
	word32 ebx_162
	word32 esi_163
	byte SCZO_164
	byte Z_165
	word32 edx_166
	selector es_167
	selector ds_168
	call Mem154[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_151,ds,dwLoc04_6,dwLoc08_16,dwLoc0C_19,dwLoc10_22,dwLoc14_24,dwLoc18_26,dwLoc1C_28,dwLoc20_30,eax_98,ebp_7,ebx_90,ecx_152,edi_97,edx,es,esi_100,esp_153,SCZO,SZO_150,Z_146
		defs: C_161,ds_168,eax_159,ebp_157,ebx_162,ecx_158,edi_156,edx_166,es_167,esi_163,esp_155,SCZO_164,SZO_160,Z_165
	word32 esp_169
	word32 edi_170
	word32 ecx_172
	word32 eax_173
	byte SZO_174
	byte C_175
	word32 ebx_176
	word32 esi_177
	byte SCZO_178
	byte Z_179
	call ebx_162 (retsize: 4; depth: 4)
		uses: C_161,ds_168,dwLoc04_6,dwLoc08_16,dwLoc0C_19,dwLoc10_22,dwLoc14_24,dwLoc18_26,dwLoc1C_28,dwLoc20_30,eax_159,ebp_157,ebx_162,ecx_158,edi_156,edx_166,es_167,esi_163,esp_155,SCZO_164,SZO_160,Z_165
		defs: C_175,ds_182,eax_173,ebp_171,ebx_176,ecx_172,edi_170,edx_180,es_181,esi_177,esp_169,SCZO_178,SZO_174,Z_179
	Mem184[esp_169 - 0x00000004:word32] = edi_170
	word32 eax_185 = fn1002F443(dwArg00)
	Mem187[esp_169 - 0x00000008:word32] = esi_177
	Mem188[0x100310E8:word32] = eax_185
	eax_109 = fn1002F443(dwArg00)
	Mem194[0x100310EC:word32] = eax_109
	esp_111 = esp_169
// DataOut: cs ds eax ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -32(fp):0x100310C8 -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

l1002F52B:
	word32 esp_114 = esp_111 + 0x00000004
	word32 ecx_122
	fn1002F420(eax_109, Mem96[ebp_110 - 0x00000004:word32] ^ ebp_110, edx, Mem96[esp_114 + 0x00000004:word32], ebp_110, Mem96[esp_114:word32], Mem96[esp_111:word32], es, ds, out ecx_122)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp

fn1002F462_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> ecx:<invalid> bl:<invalid> -36(fp):<invalid> -32(fp):<invalid> -28(fp):<invalid> -24(fp):<invalid> -20(fp):edi -16(fp):esi -12(fp):ebx -8(fp):<invalid> -4(fp):ebp



void fn1002F56C(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebp ebx edi edx es esi fs gs ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0004(32)
// Terminates process
fn1002F56C_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002F56C:
	fn1002F5F5()
	word32 ecx_9 = Mem0[0x10031070:word32]
	Mem14[0x10031070:word32] = ecx_9 + 0x00000001
	Mem15[dwArg04:word32] = ecx_9 + 0x00000001
	word32 ecx_19 = Mem15[Mem15[fs:0x0000002C:word32] + Mem15[0x10031410:word32] * 0x00000004:word32]
	Mem22[ecx_19 + 0x00000004:word32] = Mem15[0x10031070:word32]
	fn1002F661()
// DataOut: cs ds ebp ebx ecx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// Terminates process

l1002F601:
	word32 eax_116
	Mem27[fp - 0x00000004:word32] = ebp
	Mem30[fp - 0x00000008:word32] = ecx_19
	Mem33[fp - 0x00000008:word32] = Mem30[0x10031078:word32] ^ fp - 0x00000004
	word32 edi_25 = edi
	word32 ebp_28 = fp - 0x00000004
	word32 eax_34 = Mem33[0x100310E4:word32]
	branch eax_34 != 0x00000000 l1002F640
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: ebp:<invalid> esp:esp + 0x00000004 -4(fp):ebp

l1002F640:
	Mem110[fp - 0x0000000C:word32] = eax_34
	SetEvent(Mem110[fp - 0x0000000C:HANDLE])
	Mem115[fp - 0x0000000C:word32] = Mem110[0x100310E4:word32]
	eax_116 = ResetEvent(Mem115[fp - 0x0000000C:HANDLE])
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: ebp:esp + 0x00000008 esp:esp + 0x00000004 edi:edi eax:<invalid> -4(fp):ebp

l1002F61A:
	Mem60[fp - 0x0000000C:word32] = esi
	word32 esi_61 = Mem60[0x10031078:word32]
	byte cl_65 = (byte) (esi_61 & 0x0000001F)
	word32 esi_68 = __ror(esi_61 ^ Mem60[0x100310EC:word32], cl_65)
	Mem71[fp - 0x00000010:word32] = 0x100310E0
	word32 esp_77
	word32 edi_78
	word32 ebp_79
	word32 ecx_80
	word32 eax_81
	byte SZO_82
	selector fs_83
	byte C_84
	byte Z_85
	word32 esi_86
	byte cl_87
	word32 edx_88
	word32 ebx_89
	selector es_90
	selector ds_91
	call Mem71[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C_69,cl_65,ds,dwLoc04_6,eax_34,ebp_28,ebx,ecx_72,edi_25,edx,es,esi_68,esp_70,fs,SZO_66,Z_36
		defs: C_84,cl_87,ds_91,eax_81,ebp_79,ebx_89,ecx_80,edi_78,edx_88,es_90,esi_86,esp_77,fs_83,SZO_82,Z_85
	word32 esp_92
	word32 ecx_95
	byte SZO_97
	selector fs_98
	byte C_99
	byte Z_100
	word32 esi_101
	byte cl_102
	call esi_86 (retsize: 4; depth: 4)
		uses: C_84,cl_87,ds_91,dwLoc04_6,eax_81,ebp_79,ebx_89,ecx_80,edi_78,edx_88,es_90,esi_86,esp_77,fs_83,SZO_82,Z_85
		defs: C_99,cl_102,ds_106,eax_96,ebp_94,ebx_104,ecx_95,edi_93,edx_103,es_105,esi_101,esp_92,fs_98,SZO_97,Z_100
	esi = Mem71[esp_92:word32]
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: ebp:esp + 0x00000008 esp:esp + 0x00000004 edi:edi eax:<invalid> -4(fp):ebp

l1002F653:
	word32 ecx_53
	fn1002F420(eax_116, Mem33[ebp_28 - 0x00000004:word32] ^ ebp_28, edx, ebx, ebp_28, esi, edi_25, es, ds, out ecx_53)
	return
// DataOut: cs ds es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: ebp:esp + 0x00000008 esp:<invalid> edi:edi eax:<invalid> esi:<invalid> ecx:<invalid> -4(fp):ebp

fn1002F56C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: ebp:<invalid> esp:esp + 0x00000014 edi:edi eax:<invalid> esi:<invalid> ecx:<invalid> -4(fp):ebp



void fn1002F5AD(word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0004(32)
// Terminates process
fn1002F5AD_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002F5AD:
	fn1002F5F5()
	word32 esi_12 = dwArg04
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32)

l1002F5C5:
	branch Mem0[esi_12:word32] == 0x00000000 l1002F5EB
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F5EB:
	Mem52[esi_12:word32] = Mem0[esi_12:word32] | 0xFFFFFFFF
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F5CA:
	branch Mem0[esi_12:word32] == 0xFFFFFFFF l1002F5BD
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F5BD:
	esi_12 = fn1002F66D(edx, ebx, edi, es, ds, 0x00000064)
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F5CF:
	Mem39[Mem0[Mem0[fs:0x0000002C:word32] + Mem0[0x10031410:word32] * 0x00000004:word32] + 0x00000004:word32] = Mem0[0x10031070:word32]
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> ecx:0x00000064 eax:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F5EE:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 edi:edi ebp:fp - 0x00000004 esi:<invalid> eax:<invalid> ecx:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp

l1002F5EF_thunk_fn1002F661:
	fn1002F661()
	return
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp esi:esi eax:<invalid> ecx:<invalid> al:<invalid> -12(fp):0x00000064 -8(fp):esi -4(fp):ebp
// Terminates process

fn1002F5AD_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: -12(fp):0x00000064 -8(fp):esi -4(fp):ebp



void fn1002F5F5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: esp
fn1002F5F5_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F5F5:
	EnterCriticalSection(0x100310C8)
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F5F5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp -4(fp):0x100310C8



void fn1002F661()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1002F661_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1002F661_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F661:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



word32 fn1002F66D(word32 edx, word32 ebx, word32 edi, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es fs gs ss
// LiveOut: esi
// Trashed: SCZO ah al ax ch cl cx eax ecx esi rax rcx rsi si sil
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1002F66D_entry:
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002F66D:
	word32 esp_115
	word32 eax_105
	word32 edi_3 = edi
	word32 ebp_34 = fp - 0x00000004
	word32 eax_13 = Mem0[0x10031078:word32] ^ fp - 0x00000004
	branch Mem0[0x100310E4:word32] != 0x00000000 l1002F6B8
// DataOut: cs ds eax ebp ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0008(32) Stack +0004(32)

l1002F6B8:
	fn1002F661()
	word32 eax_114 = WaitForSingleObjectEx(Mem0[0x100310E4:word32], dwArg04, 0x00000000)
	fn1002F5F5()
	esp_115 = fp - 0x0000000C
	eax_105 = DPB(eax_114, eax_114 == 0x00000000, 0) (alias)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)
// Terminates process

l1002F687:
	word32 esi_47 = Mem0[0x10031078:word32]
	byte cl_55 = (byte) (esi_47 & 0x0000001F)
	word32 esi_58 = __ror(esi_47 ^ Mem0[0x100310E8:word32], cl_55)
	word32 esp_69
	word32 edi_70
	word32 ebp_71
	word32 ecx_72
	word32 eax_73
	byte SZO_74
	byte C_75
	byte SCZO_76
	word32 esi_77
	byte Z_78
	byte cl_79
	byte al_80
	word32 edx_81
	word32 ebx_82
	selector es_83
	selector ds_84
	call Mem0[0x100323BC:word32] (retsize: 4; depth: 28)
		uses: al_14,C_59,cl_55,ds,dwLoc04_6,dwLoc08_15,dwLoc0C_20,dwLoc10_52,dwLoc14_61,dwLoc18_63,eax_13,ebp_7,ebx,ecx_64,edi_3,edx,es,esi_58,esp_62,SCZO_16,SZO_56,Z_17
		defs: al_80,C_75,cl_79,ds_84,eax_73,ebp_71,ebx_82,ecx_72,edi_70,edx_81,es_83,esi_77,esp_69,SCZO_76,SZO_74,Z_78
	word32 ecx_88
	word32 eax_89
	byte SZO_90
	byte C_91
	byte SCZO_92
	word32 esi_93
	byte Z_94
	byte cl_95
	byte al_96
	call esi_77 (retsize: 4; depth: 4)
		uses: al_80,C_75,cl_79,ds_84,dwLoc04_6,dwLoc08_15,dwLoc0C_20,dwLoc10_52,dwLoc14_61,dwLoc18_63,eax_73,ebp_71,ebx_82,ecx_72,edi_70,edx_81,es_83,esi_77,esp_69,SCZO_76,SZO_74,Z_78
		defs: al_96,C_91,cl_95,ds_100,eax_89,ebp_87,ebx_98,ecx_88,edi_86,edx_97,es_99,esi_93,esp_85,SCZO_92,SZO_90,Z_94
	eax_105 = DPB(eax_89, eax_89 != 0x00000000, 0) (alias)
// DataOut: cs ds eax ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:edi ebp:fp - 0x00000004 eax:<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -0008(32)

l1002F6DA:
	word32 esi_40 = Mem0[esp_115:word32]
	word32 ecx_42
	fn1002F420(eax_105, eax_13 ^ fp - 0x00000004, edx, ebx, ebp_34, esi_40, edi_3, es, ds, out ecx_42)
	return esi_40
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -24(fp):0x100310E0 -20(fp):0x100310C8 -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp

fn1002F66D_exit:
// DataOut: esi
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:<invalid> ecx:<invalid> al:<invalid> -24(fp):0x100310E0 -20(fp):0x100310C8 -16(fp):<invalid> -12(fp):esi -8(fp):<invalid> -4(fp):ebp



word32 fn1002F6E9(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut: eax ebx esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn1002F6E9_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F6E9:
	word32 eax_123
	word32 esi_116
	word32 ebx_110
	word32 ebp_101
	word32 edx_109
	word32 edi_111
	selector es_112
	selector ds_113
	word32 ebp_10 = fn1002F9A4(ebx, esi, edi, dwLoc0C, 0x10030368, 0x00000018)
	Mem13[ebp_10 - 0x00000028:word32] = Mem0[ebp_10 - 0x00000028:word32] & 0x00000000
	word32 eax_15 = Mem13[0x100315DC:word32]
	Mem16[ebp_10 - 0x00000020:word32] = eax_15
	branch eax_15 != 0xFFFFFFFF l1002F71C
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F71C:
	Mem65[fp - 0x0000000C:word32] = 0x00000008
	word32 esp_67
	word32 ebp_68
	byte SZO_69
	byte C_70
	word32 eax_71
	byte SCZO_72
	byte Z_73
	word32 esi_74
	word32 ecx_75
	word32 edx_76
	word32 ebx_77
	word32 edi_78
	selector es_79
	selector ds_80
	call lock (retsize: 4; depth: 4)
		uses: C,ds,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_15,ebp_10,ebx,ecx,edi,edx,es,esi,esp_64,SCZO_17,SZO_14,Z_18
		defs: C_70,ds_80,eax_71,ebp_68,ebx_77,ecx_75,edi_78,edx_76,es_79,esi_74,esp_67,SCZO_72,SZO_69,Z_73
	Mem84[ebp_68 - 0x00000004:word32] = Mem65[ebp_68 - 0x00000004:word32] & 0x00000000
	Mem88[ebp_68 - 0x00000020:word32] = Mem84[0x100315DC:word32]
	Mem90[ebp_68 - 0x00000024:word32] = Mem88[0x100315D8:word32]
	Mem93[esp_67:word32] = ebp_68 - 0x00000024
	Mem96[esp_67 - 0x00000004:word32] = ebp_68 - 0x00000020
	Mem99[esp_67 - 0x00000008:word32] = Mem96[ebp_68 + 0x00000008:word32]
	word32 esp_100
	byte SZO_102
	byte C_103
	word32 eax_104
	byte SCZO_105
	byte Z_106
	word32 esi_107
	word32 ecx_108
	call _dllonexit (retsize: 4; depth: 4)
		uses: C_86,ds_80,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_94,ebp_68,ebx_77,ecx_81,edi_78,edx_76,es_79,esi_74,esp_98,SCZO_72,SZO_85,Z_73
		defs: C_103,ds_113,eax_104,ebp_101,ebx_110,ecx_108,edi_111,edx_109,es_112,esi_107,esp_100,SCZO_105,SZO_102,Z_106
	Mem117[ebp_101 - 0x00000028:word32] = eax_104
	Mem119[0x100315DC:word32] = Mem117[ebp_101 - 0x00000020:word32]
	Mem121[0x100315D8:word32] = Mem119[ebp_101 - 0x00000024:word32]
	Mem122[ebp_101 - 0x00000004:word32] = 0xFFFFFFFE
	fn1002F779()
	esi_116 = eax_104
	eax_123 = eax_104
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> -8(fp):0x10030368 -4(fp):0x00000018

l1002F706:
	Mem40[fp - 0x0000000C:word32] = Mem16[ebp_10 + 0x00000008:word32]
	word32 esp_47
	byte SZO_49
	byte C_50
	word32 eax_51
	byte SCZO_52
	byte Z_53
	word32 ecx_55
	call Mem40[0x100323BC:word32] (retsize: 4; depth: 4)
		uses: C,ds,dwLoc04_3,dwLoc08_5,dwLoc0C,eax_15,ebp_10,ebx,ecx_42,edi,edx,es,esi_41,esp_39,SCZO_17,SZO_14,Z_18
		defs: C_50,ds_60,eax_51,ebp_48,ebx_57,ecx_55,edi_58,edx_56,es_59,esi_54,esp_47,SCZO_52,SZO_49,Z_53
	eax_123 = _onexit(Mem40[esp_47:_onexit_t])
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> -8(fp):0x10030368 -4(fp):0x00000018

l1002F770:
	word32 ebx_33
	word32 esi_34
	return fn1002F9EC(eax_123, edx_109, ebx_110, ebp_101, esi_116, edi_111, es_112, ds_113, out ebx_33, out esi_34)
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebp:<invalid> -12(fp):<invalid> -8(fp):0x10030368 -4(fp):0x00000018

fn1002F6E9_exit:
// DataOut: eax ebx esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> ebp:<invalid> edi:<invalid> ebx:<invalid> -12(fp):<invalid> -8(fp):0x10030368 -4(fp):0x00000018



void fn1002F779()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: ch cl cx ecx esp rcx rsp sp spl
// Preserved:
fn1002F779_entry:
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F779:
	word32 esp_4
	word32 ecx_5
	call unlock (retsize: 4; depth: 8)
		uses: dwLoc04_3,esp_2
		defs: ecx_5,esp_4
	return
// DataOut: cs ds ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F779_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:<invalid> -4(fp):0x00000008



word32 fn1002F782(word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds ebx edi edx es esi fs gs ss
// LiveOut: ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp edi esp
fn1002F782_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002F782:
	word32 ebx_17
	word32 esi_18
	fn1002F6E9(edx, ebx, esi, edi, es, ds, out ebx_17, out esi_18)
	return ebx_17
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F782_exit:
// DataOut: ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> eax:<invalid> ecx:<invalid> esi:<invalid> ebx:<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002F7B0(word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32)
fn1002F7B0_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l1002F7B0:
	word32 ecx_21 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	word32 edx_10
	*edxOut = 0x00000000
	word32 ebx_23 = (word32) Mem0[ecx_21 + 0x00000006:word16]
	word32 eax_25 = (word32) Mem0[ecx_21 + 0x00000014:word16] + 0x00000018 + ecx_21 + 0x0000000C
	branch ebx_23 == 0x00000000 l1002F7EE
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0008(32)

l1002F7D3:
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:edi ebp:fp - 0x00000004 eax:<invalid> edx:0x00000000 ecx:<invalid> ebx:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002F7D6:
	word32 esi_58 = Mem0[eax_25 + 0x00000000:word32]
	branch dwArg08 <u esi_58 l1002F7E6
// DataOut: cs ds eax ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002F7DD:
	branch dwArg08 <u Mem0[eax_25 + 0x00000008:word32] + esi_58 l1002F7F0
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002F7E6:
	edx_10 = edx_10 + 0x00000001
	*edxOut = edx_10
	eax_25 = eax_25 + 0x00000028
	branch edx_10 <u ebx_23 l1002F7D6
// DataOut: cs ds eax ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002F7EE:
	eax_25 = 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002F7F0:
	return eax_25
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000010 edi:<invalid> ebp:fp - 0x00000004 eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp

fn1002F7B0_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> edx:<invalid> ecx:<invalid> ebx:ebx esi:esi -16(fp):edi -12(fp):esi -8(fp):ebx -4(fp):ebp



word32 fn1002F800(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp ebx edi esi esp
// Stack args: Stack +0004(32)
fn1002F800_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0034(32) Stack +0004(32)

l1002F800:
	word32 eax_16 = Mem0[fs:0x00000000:word32]
	Mem38[fs:0x00000000:word32] = fp - 0x00000014
	word32 edx_43
	branch fn1002F8C0(0x10000000, out edx_43) == 0x00000000 l1002F8A1
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -0014(32) Stack +0004(32)

l1002F84D:
	word32 edx_96
	word32 eax_97 = fn1002F7B0(0x10000000, dwArg04 - 0x10000000, out edx_96)
	branch eax_97 == 0x00000000 l1002F8A1
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x0000010B al:<invalid> -48(fp):0x10000000 -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1002FA00 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp
// LocalsOut: fp(32) Local -0014(32)

l1002F8A1:
	Mem77[fs:0x00000000:word32] = eax_16
	return 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -52(fp):0x10000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1002FA00 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

l1002F867:
	word32 eax_104 = ~(Mem38[eax_97 + 0x00000024:word32] >>u 0x0000001F)
	Mem110[fs:0x00000000:word32] = eax_16
	return eax_104 & 0x00000001
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000002C edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:<invalid> al:<invalid> -52(fp):0x10000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1002FA00 -12(fp):<invalid> -8(fp):0x00000000 -4(fp):ebp

fn1002F800_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> esi:esi ebx:ebx edx:<invalid> al:<invalid> -52(fp):0x10000000 -48(fp):<invalid> -44(fp):<invalid> -40(fp):edi -36(fp):esi -32(fp):ebx -28(fp):fp - 0x0000002C -20(fp):<invalid> -16(fp):0x1002FA00 -12(fp):<invalid> -8(fp):0xFFFFFFFE -4(fp):ebp



word32 fn1002F8C0(word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1002F8C0_entry:
	*edxOut = edx
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002F8C0:
	branch Mem0[dwArg04:word16] == 0x5A4D l1002F8D6
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F8D6:
	word32 ecx_38 = Mem0[dwArg04 + 0x0000003C:word32] + dwArg04
	word32 eax_40 = 0x00000000
	branch Mem0[ecx_38:word32] != 0x00004550 l1002F8F1
// DataOut: cs ds eax ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00005A4D -4(fp):ebp

l1002F8E5:
	word32 edx_54
	*edxOut = 0x0000010B
	eax_40 = (word32) (Mem0[ecx_38 + 0x00000018:word16] == 0x010B) (alias)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> -4(fp):ebp

l1002F8F1:
	return eax_40
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:<invalid> edx:0x0000010B al:Test(EQ,Z) -4(fp):ebp

l1002F8D2:
	return 0x00000000
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 edi:edi ebp:fp - 0x00000004 eax:<invalid> ecx:0x00005A4D -4(fp):ebp

fn1002F8C0_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> edx:0x0000010B al:Test(EQ,Z) -4(fp):ebp



void fn1002F8F9()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esi esp
fn1002F8F9_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l1002F8F9:
	word32 eax_18 = Mem0[0x10031078:word32]
	branch eax_18 == 0xBB40E64E l1002F92B
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l1002F91E:
	branch (eax_18 & 0xFFFF0000) == 0x00000000 l1002F92B
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32) Local -000C(32) Local -0010(32) Local -0014(32) Local -0018(32)

l1002F92B:
	GetSystemTimeAsFileTime(fp - 0x00000010)
	word32 eax_62 = GetTickCount() ^ (((dwLoc0C & 0x00000000 ^ dwLoc10 & 0x00000000) ^ GetCurrentProcessId()) ^ GetCurrentThreadId()) ^ fp - 0x00000008
	QueryPerformanceCounter(fp - 0x00000018)
	word32 ecx_74 = eax_62 ^ (dwLoc14 ^ dwLoc18)
	branch ecx_74 == 0xBB40E64E l1002F982
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002F97A:
	branch (Mem0[0x10031078:word32] & 0xFFFF0000) != 0x00000000 l1002F987
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002F982:
	ecx_74 = 0xBB40E64F
// DataOut: cs ds ebx ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002F987:
	Mem81[0x10031078:word32] = ecx_74
	Mem83[0x1003107C:word32] = ~ecx_74
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002F922:
	Mem95[0x1003107C:word32] = ~eax_18
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -4(fp):ebp
// LocalsOut: fp(32)

l1002F995:
	return
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000020 edi:0xBB40E64E ebp:fp - 0x00000004 eax:<invalid> esi:0xFFFF0000 ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp

fn1002F8F9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> esi:esi ecx:<invalid> -36(fp):fp - 0x00000018 -32(fp):edi -28(fp):esi -16(fp):<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



word32 fn1002F9A4(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: ebp esp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn1002F9A4_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l1002F9A4:
	word32 esp_14 = fp - 0x00000008 - dwArg08
	Mem17[esp_14 - 0x00000004:word32] = ebx
	Mem20[esp_14 - 0x00000008:word32] = esi
	Mem23[esp_14 - 0x0000000C:word32] = edi
	Mem34[esp_14 - 0x00000010:word32] = Mem23[0x10031078:word32] ^ fp + 0x00000008
	Mem39[esp_14 - 0x00000014:word32] = dwArg00
	Mem44[fs:0x00000000:word32] = fp - 0x00000008
	return fp + 0x00000008
// DataOut: cs ds ebp ebx edi edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002F9A4_exit:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:fp - 0x00000008 ebp:fp + 0x00000008 -20(fp):<invalid> -16(fp):<invalid> -8(fp):<invalid> -4(fp):0x1002FA00 0(fp):<invalid> 4(fp):0xFFFFFFFE 8(fp):ebp



word32 fn1002F9EC(word32 eax, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds eax ebp ebx edi edx es esi fs gs ss
// LiveOut: eax ebx esi
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: esp
fn1002F9EC_entry:
// DataOut: cs ds eax ebp ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F9EC:
	word32 ecx_15
	word32 eax_16 = fn1002F420(eax, Mem0[ebp - 0x0000001C:word32] ^ ebp, edx, ebx, ebp, esi, edi, es, ds, out ecx_15)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002F9F1_thunk_fn1002FD59:
	word32 esi_22
	word32 ebx_23
	*ebxOut = fn1002FD59(ebp, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out esi_22)
	return eax_16
// DataOut: cs ds eax ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp ecx:<invalid> eax:<invalid>

fn1002F9EC_exit:
// DataOut: eax ebx esi
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid> eax:<invalid>



word32 fn1002FA31(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al eax
// Trashed: ah al ax eax rax
// Preserved: ebp edi esp
// Stack args: Stack +0004(32)
fn1002FA31_entry:
// DataOut: bh bl bx cs ds dx ebx ecx edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002FA31:
	SetUnhandledExceptionFilter(0x00000000)
	UnhandledExceptionFilter(dwArg04)
	return TerminateProcess(GetCurrentProcess(), 0xC0000409)
// DataOut: al bh bl bx cs ds dx eax ebx ecx edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FA31_exit:
// DataOut: al eax
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> -12(fp):<invalid> -8(fp):0xC0000409 -4(fp):ebp



word32 fn1002FA5B(word32 eax, word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  DP cs ds eax ebp ebx ecx edi edx es esi fs gs ss
// LiveOut: al eax ecx
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp edi esp
// Stack args: Stack +0000(32)
l1002FA5B:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1002FA5B_entry:
// DataOut: bh bl bx cs ds dx eax ebp ebx ecx edi edx es esi fs gs si ss
// DataOut (flags): DP
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l1002FA5B:
	Mem12[0x100311F0:word32] = eax
	Mem14[0x100311EC:word32] = ecx
	Mem16[0x100311E8:word32] = edx
	Mem18[0x100311E4:word32] = ebx
	Mem20[0x100311E0:word32] = esi
	Mem21[0x100311DC:word32] = edi
	Mem23[0x10031208:word16] = ss
	Mem25[0x100311FC:word16] = cs
	Mem27[0x100311D8:word16] = ds
	Mem29[0x100311D4:word16] = es
	Mem31[0x100311D0:word16] = fs
	Mem33[0x100311CC:word16] = gs
	Mem36[0x10031200:word32] = cond(fp - 0x00000328)
	Mem39[0x100311F4:word32] = ebp
	Mem42[0x100311F8:word32] = dwArg00
	Mem44[0x10031204:word32] = fp + 0x00000004
	Mem47[0x10031140:word32] = 0x00010001
	Mem49[0x100310FC:word32] = Mem47[0x100311F8:word32]
	Mem50[0x100310F0:word32] = 0xC0000409
	Mem51[0x100310F4:word32] = 0x00000001
	Mem52[0x10031100:word32] = 0x00000003
	Mem58[0x10031104:word32] = 0x00000002
	Mem65[0x10031108:word32] = Mem58[0x10031078:word32]
	Mem72[0x1003110C:word32] = Mem65[0x1003107C:word32]
	word32 ecx_86
	*ecxOut = Mem72[0x1003107C:word32]
	return fn1002FA31(0x10001000)
// DataOut: al bh bl bx cs ds dx eax ebx ecx edx es esi fs gs si ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FA5B_exit:
// DataOut: al eax ecx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ecx:<invalid> -812(fp):0x10001000 -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1002FB6B(word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn1002FB6B_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FB6B:
	word32 ebp_10 = fn1002FD14(ebx, esi, edi, dwLoc0C, 0x100303A8, 0x00000010)
	Mem13[ebp_10 - 0x00000004:word32] = Mem0[ebp_10 - 0x00000004:word32] & 0x00000000
	Mem18[fp - 0x0000000C:word32] = Mem13[ebp_10 + 0x0000000C:word32]
	Mem21[fp - 0x00000010:word32] = Mem18[ebp_10 + 0x00000008:word32]
	word32 eax_22 = InitializeCriticalSectionAndSpinCount(Mem21[fp - 0x00000010:LPCRITICAL_SECTION], Mem21[fp - 0x0000000C:DWORD])
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002FBB5:
	Mem24[ebp_10 - 0x00000020:word32] = eax_22
	Mem25[ebp_10 - 0x00000004:word32] = 0xFFFFFFFE
	word32 esi_30
	fn1002FD59(ebp_10, 0x00000010, dwArg00, dwArg04, dwArg08, dwArg0C, out esi_30)
	return
// DataOut: cs ds edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x100303A8 -4(fp):0x00000010

fn1002FB6B_exit:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ebp:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> -16(fp):<invalid> -12(fp):<invalid> -8(fp):0x100303A8 -4(fp):0x00000010



void fn1002FBC5(word32 ebx, word32 esi, word32 edi, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: ebp edi esp
fn1002FBC5_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FBC5:
	fn1002FB6B(ebx, esi, edi)
	return
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FBC5_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:<invalid> ebp:<invalid> ecx:<invalid> eax:<invalid> esi:<invalid> ebx:<invalid> -12(fp):<invalid> -8(fp):<invalid> -4(fp):ebp



void fn1002FBD9(word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: ebp ebx edi esp
// Stack args: Stack +0004(32)
fn1002FBD9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002FBD9:
	branch IsProcessorFeaturePresent(0x00000017) == 0x00000000 l1002FBF6
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002FBF6:
	fn1002FD73()
	memset(fp - 0x00000328, 0x00000000, 0x000002CC)
	memset(fp - 0x0000005C, 0x00000000, 0x00000050)
	byte bl_88 = 0x00 - (0x00000001 - IsDebuggerPresent() == 0x00000000)
	SetUnhandledExceptionFilter(0x00000000)
	branch UnhandledExceptionFilter(fp - 0x0000000C) != 0x00000000 l1002FCF3
// DataOut: bl
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000032C edi:edi ebp:fp - 0x00000004 eax:<invalid> -816(fp):0x00000017 -812(fp):ebx -4(fp):ebp
// LocalsOut: fp(32)

l1002FCE7:
	branch bl_88 != 0x01 l1002FCF3
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000032C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> bl:<invalid> -824(fp):fp - 0x0000005C -820(fp):0x00000000 -816(fp):fp - 0x0000000C -812(fp):ebx -808(fp):0x00010001 -668(fp):gs -664(fp):fs -660(fp):es -656(fp):ds -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):edx -636(fp):ecx -632(fp):<invalid> -628(fp):fp - 0x00000004 -624(fp):<invalid> -620(fp):cs -616(fp):<invalid> -612(fp):fp -608(fp):ss -92(fp):0x40000015 -88(fp):0x00000001 -80(fp):<invalid> -12(fp):fp - 0x0000005C -8(fp):fp - 0x00000328 -4(fp):ebp
// LocalsOut: fp(32)

l1002FCEB:
	fn1002FD73()
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000032C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> bl:<invalid> -824(fp):fp - 0x0000005C -820(fp):0x00000000 -816(fp):fp - 0x0000000C -812(fp):ebx -808(fp):0x00010001 -668(fp):gs -664(fp):fs -660(fp):es -656(fp):ds -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):edx -636(fp):ecx -632(fp):<invalid> -628(fp):fp - 0x00000004 -624(fp):<invalid> -620(fp):cs -616(fp):<invalid> -612(fp):fp -608(fp):ss -92(fp):0x40000015 -88(fp):0x00000001 -80(fp):<invalid> -12(fp):fp - 0x0000005C -8(fp):fp - 0x00000328 -4(fp):ebp
// LocalsOut: fp(32)

l1002FCF3:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000032C edi:edi ebp:fp - 0x00000004 eax:<invalid> ebx:<invalid> bl:<invalid> ecx:0x00000003 -824(fp):fp - 0x0000005C -820(fp):0x00000000 -816(fp):<invalid> -812(fp):ebx -808(fp):0x00010001 -668(fp):gs -664(fp):fs -660(fp):es -656(fp):ds -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):edx -636(fp):ecx -632(fp):<invalid> -628(fp):fp - 0x00000004 -624(fp):<invalid> -620(fp):cs -616(fp):<invalid> -612(fp):fp -608(fp):ss -92(fp):0x40000015 -88(fp):0x00000001 -80(fp):<invalid> -12(fp):fp - 0x0000005C -8(fp):fp - 0x00000328 -4(fp):ebp

fn1002FBD9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi ebp:ebp eax:<invalid> ebx:ebx bl:<invalid> ecx:0x00000003 -824(fp):fp - 0x0000005C -820(fp):0x00000000 -816(fp):<invalid> -812(fp):ebx -808(fp):0x00010001 -668(fp):gs -664(fp):fs -660(fp):es -656(fp):ds -652(fp):edi -648(fp):esi -644(fp):ebx -640(fp):edx -636(fp):ecx -632(fp):<invalid> -628(fp):fp - 0x00000004 -624(fp):<invalid> -620(fp):cs -616(fp):<invalid> -612(fp):fp -608(fp):ss -92(fp):0x40000015 -88(fp):0x00000001 -80(fp):<invalid> -12(fp):fp - 0x0000005C -8(fp):fp - 0x00000328 -4(fp):ebp

l1002FBF1:
	__fastfail(dwArg04)
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000032C edi:edi ebp:fp - 0x00000004 eax:<invalid> -816(fp):0x00000017 -812(fp):ebx -4(fp):ebp



word32 fn1002FD14(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: ebp esp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32) Stack +0008(32)
fn1002FD14_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32) Stack +0008(32)

l1002FD14:
	word32 esp_14 = fp - 0x00000008 - dwArg08
	Mem17[esp_14 - 0x00000004:word32] = ebx
	Mem20[esp_14 - 0x00000008:word32] = esi
	Mem23[esp_14 - 0x0000000C:word32] = edi
	Mem33[esp_14 - 0x00000010:word32] = Mem23[0x10031078:word32] ^ fp + 0x00000008
	Mem38[esp_14 - 0x00000014:word32] = dwArg00
	Mem43[fs:0x00000000:word32] = fp - 0x00000008
	return fp + 0x00000008
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FD14_exit:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:fp - 0x00000008 ebp:fp + 0x00000008 -16(fp):<invalid> -8(fp):<invalid> -4(fp):0x1002FA00 0(fp):<invalid> 4(fp):0xFFFFFFFE 8(fp):ebp



word32 fn1002FD59(word32 ebp, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp fs
// LiveOut: ebx esi esp
// Trashed: bh bl bp bpl bx ch cl cx di dil ebp ebx ecx edi esi esp rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +000C(32) Stack +0010(32)
fn1002FD59_entry:
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +000C(32) Stack +0010(32)

l1002FD59:
	Mem5[fs:0x00000000:word32] = Mem0[ebp - 0x00000010:word32]
	Mem25[ebp:word32] = dwArg00
	word32 esi_17
	*esiOut = dwArg0C
	return dwArg10
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FD59_exit:
// DataOut: ebx esi esp
// DataOut (flags): 
// SymbolicIn: esp:ebp ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid>



void fn1002FD73()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: esp
fn1002FD73_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

l1002FD73:
	Mem4[0x100315CC:word32] = Mem0[0x100315CC:word32] & 0x00000000
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FD73_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp



void fn1002FDA6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp esp
fn1002FDA6_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FDA6:
	word32 ecx_10 = Mem0[0x10031418:word32]
	branch ecx_10 != 0x00000001 l1002FDB9
// DataOut: ecx
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FDB9:
	branch ecx_10 != 0x00000002 l1002FDC2
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FDC2:
	word32 esp_60
	word32 ebp_61
	word32 ecx_62
	byte SCZO_63
	byte Z_64
	byte al_65
	byte cl_66
	byte SZO_67
	byte C_68
	word32 eax_69
	byte S_70
	call api-ms-win-core-apiquery-l1-1-0.dll!ApiSetQueryApiSetPresence (retsize: 4; depth: 20)
		uses: al,bLoc05_54,C,cl_11,dwLoc04_4,dwLoc08_8,dwLoc0C_56,dwLoc10_58,eax_53,ebp_5,ecx_10,esp_57,S,SCZO_37,SZO,Z_38
		defs: al_65,C_68,cl_66,eax_69,ebp_61,ecx_62,esp_60,S_70,SCZO_63,SZO_67,Z_64
	branch (fp - 0x00000005 & fp - 0x00000005) < 0x00000000 l1002FDBE
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FDD8:
	Mem83[0x10031418:word32] = (word32) (0x00 == 0x00) + 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001008 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l1002FDBE:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001008 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l1002FDB5:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FDE9:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001008 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn1002FDA6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001008 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp



byte fn1002FE08()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp esp
fn1002FE08_entry:
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FE08:
	byte al_24
	word32 ecx_10 = Mem0[0x1003142C:word32]
	byte cl_11 = (byte) ecx_10
	branch ecx_10 != 0x00000001 l1002FE1B
// DataOut: cl cs ds ecx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FE1B:
	branch ecx_10 != 0x00000002 l1002FE24
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FE24:
	word32 esp_62
	word32 ebp_63
	word32 ecx_64
	byte SCZO_65
	byte Z_66
	byte al_67
	byte cl_68
	byte SZO_69
	byte C_70
	word32 eax_71
	byte S_72
	call api-ms-win-core-apiquery-l1-1-0.dll!ApiSetQueryApiSetPresence (retsize: 4; depth: 20)
		uses: al,bLoc05_56,C,cl_11,dwLoc04_4,dwLoc08_8,dwLoc0C_58,dwLoc10_60,eax_55,ebp_5,ecx_10,esp_59,S,SCZO_38,SZO,Z_39
		defs: al_67,C_70,cl_68,eax_71,ebp_63,ecx_64,esp_62,S_72,SCZO_65,SZO_69,Z_66
	branch (fp - 0x00000005 & fp - 0x00000005) < 0x00000000 l1002FE20
// DataOut: cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FE3A:
	Mem86[0x1003142C:word32] = (word32) (0x00 == 0x00) + 0x00000001
	al_24 = 0x00
// DataOut: al cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001028 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l1002FE20:
	al_24 = 0x00
// DataOut: al cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001028 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l1002FE17:
	al_24 = cl_11
// DataOut: al cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FE4B:
	return al_24
// DataOut: al cs ds edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001028 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn1002FE08_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001028 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp



byte fn1002FEAA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp esp
fn1002FEAA_entry:
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FEAA:
	byte al_24
	word32 ecx_10 = Mem0[0x10031444:word32]
	byte cl_11 = (byte) ecx_10
	branch ecx_10 != 0x00000001 l1002FEBD
// DataOut: cl cs ds ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FEBD:
	branch ecx_10 != 0x00000002 l1002FEC6
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FEC6:
	word32 esp_62
	word32 ebp_63
	word32 ecx_64
	byte SCZO_65
	byte Z_66
	byte al_67
	byte cl_68
	byte SZO_69
	byte C_70
	word32 eax_71
	byte S_72
	call api-ms-win-core-apiquery-l1-1-0.dll!ApiSetQueryApiSetPresence (retsize: 4; depth: 20)
		uses: al,bLoc05_56,C,cl_11,dwLoc04_4,dwLoc08_8,dwLoc0C_58,dwLoc10_60,eax_55,ebp_5,ecx_10,esp_59,S,SCZO_38,SZO,Z_39
		defs: al_67,C_70,cl_68,eax_71,ebp_63,ecx_64,esp_62,S_72,SCZO_65,SZO_69,Z_66
	branch (fp - 0x00000005 & fp - 0x00000005) < 0x00000000 l1002FEC2
// DataOut: cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FEDC:
	Mem86[0x10031444:word32] = (word32) (0x00 == 0x00) + 0x00000001
	al_24 = 0x00
// DataOut: al cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001040 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l1002FEC2:
	al_24 = 0x00
// DataOut: al cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001040 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l1002FEB9:
	al_24 = cl_11
// DataOut: al cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1002FEED:
	return al_24
// DataOut: al cs ds ebx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001040 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn1002FEAA_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001040 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp



word32 fn1002FF3B(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: SCZO ah al ax bp bpl ch cl cx eax ebp ecx esi esp rax rbp rcx rsi rsp si sil sp spl
// Preserved: ebp edi esi esp
// Stack args: Stack +0004(32)
fn1002FF3B_entry:
// DataOut: cs ds ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32)

l1002FF3B:
	word32 esp_13 = fp - 0x00000008
// DataOut: cs ds ebx edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0004(32)

l1002FF50:
	word32 esp_16 = esp_13 - 0x00000004
	Mem17[esp_16:word32] = dwArg04
	word32 eax_18 = malloc(Mem17[esp_16:size_t])
	word32 esi_19 = eax_18
	branch eax_18 == 0x00000000 l1002FF43
// DataOut: cs ds eax ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: Stack +0004(32)

l1002FF43:
	Mem39[esp_16:word32] = dwArg04
	word32 esp_40
	word32 edi_41
	word32 ebp_42
	word32 eax_44
	word32 ecx_45
	byte SZO_46
	byte C_47
	byte Z_48
	call callnewh (retsize: 4; depth: 4)
		uses: C_24,dwLoc04_6,dwLoc08_10,eax_18,ebp_12,ecx_20,edi_11,esi_19,esp_38,SZO_22,Z_23
		defs: C_47,eax_44,ebp_42,ecx_45,edi_41,esi_43,esp_40,SZO_46,Z_48
	esp_13 = esp_40 + 0x00000004
	branch eax_44 == 0x00000000 l1002FF5F
// DataOut: cs ds ebx edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp
// LocalsOut: Stack +0004(32)

l1002FF5F:
	return esi_19
// DataOut: cs ds eax ebx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:fp - 0x00000004 eax:<invalid> esi:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp

fn1002FF3B_exit:
// DataOut: eax
// DataOut (flags): 
// SymbolicIn: esp:<invalid> edi:edi ebp:<invalid> eax:<invalid> esi:<invalid> ecx:<invalid> -12(fp):<invalid> -8(fp):esi -4(fp):ebp



word32 fn1002FF64(word32 ebx, word32 esi, word32 edi, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: eax ebp ebx edi esi esp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn1002FF64_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1002FF64:
	word32 ebp_9 = fn1002FFCC(ebx, esi, edi, dwLoc08, 0x00000008)
	Mem13[fp - 0x00000008:word32] = Mem0[ebp_9 + 0x00000008:word32]
	Mem15[ebp_9 - 0x00000004:word32] = Mem13[ebp_9 - 0x00000004:word32] & 0x00000000
	word32 eax_19 = fn1002FF3B(dwArg00)
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Local -0004(32)

l1002FF8C:
	word32 ebp_25
	word32 esi_26
	word32 edi_27
	word32 ebx_28
	*ebxOut = fn1002FFB8(ebp_9, 0x00000008, dwArg00, dwArg04, dwArg08, dwArg0C, out ebp_25, out esi_26, out edi_27)
	return eax_19
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> ebp:<invalid> esi:<invalid> -8(fp):<invalid> -4(fp):0x00000008

fn1002FF64_exit:
// DataOut: eax ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:<invalid> ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid> -8(fp):<invalid> -4(fp):0x00000008



word32 fn1002FFB8(word32 ebp, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp fs
// LiveOut: ebp ebx edi esi esp
// Trashed: bh bl bp bpl bx ch cl cx di dil ebp ebx ecx edi esi esp rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn1002FFB8_entry:
// DataOut: cs ds eax ebp edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1002FFB8:
	Mem5[fs:0x00000000:word32] = Mem0[ebp - 0x0000000C:word32]
	word32 ebp_22
	*ebpOut = Mem5[ebp:word32]
	Mem25[ebp:word32] = dwArg00
	word32 edi_14
	*ediOut = dwArg08
	word32 esi_17
	*esiOut = dwArg0C
	return dwArg10
// DataOut: cs ds eax ebp ebx edi edx es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FFB8_exit:
// DataOut: ebp ebx edi esi esp
// DataOut (flags): 
// SymbolicIn: esp:ebp ecx:<invalid> edi:<invalid> esi:<invalid> ebx:<invalid> ebp:<invalid>



word32 fn1002FFCC(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx edi esi fs
// LiveOut: ebp esp
// Trashed: SCZO ah al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved:
// Stack args: Stack +0000(32) Stack +0004(32)
fn1002FFCC_entry:
// DataOut: cs ds ebx edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32) Stack +0004(32)

l1002FFCC:
	word32 esp_12 = fp - 0x00000008 - dwArg04
	Mem15[esp_12 - 0x00000004:word32] = ebx
	Mem18[esp_12 - 0x00000008:word32] = esi
	Mem21[esp_12 - 0x0000000C:word32] = edi
	Mem30[esp_12 - 0x00000010:word32] = Mem21[0x10031078:word32] ^ fp + 0x00000004
	Mem35[esp_12 - 0x00000014:word32] = dwArg00
	Mem38[fs:0x00000000:word32] = fp - 0x00000008
	return fp + 0x00000004
// DataOut: cs ds ebp edx es esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp

fn1002FFCC_exit:
// DataOut: ebp esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> eax:fp - 0x00000008 ebp:fp + 0x00000004 -12(fp):<invalid> -8(fp):<invalid> -4(fp):eax 0(fp):0xFFFFFFFF 4(fp):ebp



byte fn10030048()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp esp
fn10030048_entry:
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l10030048:
	byte al_24
	word32 ecx_10 = Mem0[0x10031460:word32]
	byte cl_11 = (byte) ecx_10
	branch ecx_10 != 0x00000001 l1003005B
// DataOut: cl cs ds ecx edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l1003005B:
	branch ecx_10 != 0x00000002 l10030064
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l10030064:
	word32 esp_62
	word32 ebp_63
	word32 ecx_64
	byte SCZO_65
	byte Z_66
	byte al_67
	byte cl_68
	byte SZO_69
	byte C_70
	word32 eax_71
	byte S_72
	call api-ms-win-core-apiquery-l1-1-0.dll!ApiSetQueryApiSetPresence (retsize: 4; depth: 20)
		uses: al,bLoc05_56,C,cl_11,dwLoc04_4,dwLoc08_8,dwLoc0C_58,dwLoc10_60,eax_55,ebp_5,ecx_10,esp_59,S,SCZO_38,SZO,Z_39
		defs: al_67,C_70,cl_68,eax_71,ebp_63,ecx_64,esp_62,S_72,SCZO_65,SZO_69,Z_66
	branch (fp - 0x00000005 & fp - 0x00000005) < 0x00000000 l10030060
// DataOut: cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1003007A:
	Mem86[0x10031460:word32] = (word32) (0x00 == 0x00) + 0x00000001
	al_24 = 0x00
// DataOut: al cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001058 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l10030060:
	al_24 = 0x00
// DataOut: al cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001058 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l10030057:
	al_24 = cl_11
// DataOut: al cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l1003008B:
	return al_24
// DataOut: al cs ds edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001058 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn10030048_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001058 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp



byte fn100300B4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: al
// Trashed: SCZO ah al ax ch cl cx eax ecx rax rcx
// Preserved: ebp esp
fn100300B4_entry:
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100300B4:
	byte al_24
	word32 ecx_10 = Mem0[0x10031468:word32]
	byte cl_11 = (byte) ecx_10
	branch ecx_10 != 0x00000001 l100300C7
// DataOut: cl cs ds ebx ecx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32)

l100300C7:
	branch ecx_10 != 0x00000002 l100300D0
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100300D0:
	word32 esp_62
	word32 ebp_63
	word32 ecx_64
	byte SCZO_65
	byte Z_66
	byte al_67
	byte cl_68
	byte SZO_69
	byte C_70
	word32 eax_71
	byte S_72
	call api-ms-win-core-apiquery-l1-1-0.dll!ApiSetQueryApiSetPresence (retsize: 4; depth: 20)
		uses: al,bLoc05_56,C,cl_11,dwLoc04_4,dwLoc08_8,dwLoc0C_58,dwLoc10_60,eax_55,ebp_5,ecx_10,esp_59,S,SCZO_38,SZO,Z_39
		defs: al_67,C_70,cl_68,eax_71,ebp_63,ecx_64,esp_62,S_72,SCZO_65,SZO_69,Z_66
	branch (fp - 0x00000005 & fp - 0x00000005) < 0x00000000 l100300CC
// DataOut: cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100300E6:
	Mem86[0x10031468:word32] = (word32) (0x00 == 0x00) + 0x00000001
	al_24 = 0x00
// DataOut: al cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001060 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l100300CC:
	al_24 = 0x00
// DataOut: al cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -16(fp):0x10001060 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp
// LocalsOut: fp(32)

l100300C3:
	al_24 = cl_11
// DataOut: al cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000008 ebp:fp - 0x00000004 ecx:<invalid> -8(fp):ecx -4(fp):ebp
// LocalsOut: fp(32)

l100300F7:
	return al_24
// DataOut: al cs ds ebx edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ebp:fp - 0x00000004 ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001060 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp

fn100300B4_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: esp:fp ebp:ebp ecx:<invalid> al:<invalid> eax:<invalid> cl:<invalid> -16(fp):0x10001060 -12(fp):fp - 0x00000005 -8(fp):ecx -5(fp):0x00 -4(fp):ebp



word32 fn10030120(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx edi esi esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn10030120_entry:
// DataOut: cs ds es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10030120:
	word32 edi_11 = 0x00000000
	branch dwArg08 >= 0x00000000 l10030141
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1003012D:
	word32 edx_169 = -dwArg04
	edi_11 = 0x00000001
	dwArg08 = -dwArg08 - (edx_169 == 0x00000000)
	dwArg04 = edx_169
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:0x00000000 eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10030141:
	word32 eax_161 = dwArg10
	branch dwArg10 >= 0x00000000 l1003015D
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10030149:
	word32 edx_159 = -dwArg0C
	eax_161 = -dwArg10 - (edx_159 == 0x00000000)
	edi_11 = edi_11 + 0x00000001
	dwArg10 = eax_161
	dwArg0C = edx_159
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l1003015D:
	word32 eax_139
	word32 edx_136
	branch eax_161 != 0x00000000 l10030179
// DataOut: cs ds eax edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10030179:
	word32 ebx_101 = eax_161
	word32 ecx_106 = dwArg0C
	word32 edx_100 = dwArg08
	word32 eax_111 = dwArg04
// DataOut: cs ds eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10030187:
	word32 ebx_102 = ebx_101 >>u 0x00000001
	edx_100 = edx_100 >>u 0x00000001
	ecx_106 = __rcr(ecx_106, 0x01, cond(ebx_102))
	eax_111 = __rcr(eax_111, 0x01, cond(edx_100))
	word64 edx_eax_112 = SEQ(edx_100, eax_111)
	ebx_101 = ebx_102
	branch ebx_102 != 0x00000000 l10030187
// DataOut: cs ds eax ebx ecx edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l10030193:
	word32 eax_118 = (uint32) (edx_eax_112 /u ecx_106)
	word64 edx_eax_124 = eax_118 *u dwArg0C
	word32 esi_119 = eax_118
	word32 eax_125 = (word32) edx_eax_124
	word32 edx_127 = SLICE(edx_eax_124, word32, 32) + (word32) (dwArg10 *u eax_118)
	branch edx_127 <u 0x00000000 l100301B5
// DataOut: cs ds eax edi edx es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32)

l100301A7:
	branch edx_127 >u dwArg08 l100301B5
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): C
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32)

l100301AD:
	branch edx_127 <u dwArg08 l100301B6
// DataOut: cs ds eax edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32) Stack +0004(32)

l100301AF:
	branch eax_125 <=u dwArg04 l100301B6
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32)

l100301B5:
	esi_119 = eax_118 - 0x00000001
// DataOut: cs ds edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32)

l100301B6:
	*edxOut = 0x00000000
	eax_139 = esi_119
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ebx:<invalid> ecx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32)

l10030161:
	word64 edx_eax_80 = (uint64) (uint32) dwArg08
	eax_139 = (uint32) (SEQ((uint32) (edx_eax_80 % dwArg0C), dwArg04) /u dwArg0C)
	*edxOut = (uint32) (edx_eax_80 /u dwArg0C)
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32)

l100301BA:
	branch edi_11 != 0x00000001 l100301C4
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32)

l100301BD:
	eax_139 = -eax_139
	word32 edx_74
	*edxOut = -edx_136 - (eax_139 == 0x00000000)
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>
// LocalsOut: fp(32)

l100301C4:
	return eax_139
// DataOut: cs ds eax edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x0000000C edi:<invalid> eax:<invalid> edx:<invalid> ecx:<invalid> ebx:<invalid> esi:<invalid> Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>

fn10030120_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp edi:edi eax:<invalid> edx:<invalid> ecx:<invalid> ebx:ebx esi:esi Sequence edx:eax:<invalid> -12(fp):ebx -8(fp):esi -4(fp):edi 4(fp):<invalid> 8(fp):<invalid> 12(fp):<invalid> 16(fp):<invalid>



word32 fn100301D0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax edx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: ebx esp
// Stack args: Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)
fn100301D0_entry:
// DataOut: cs ds edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0008(32) Stack +000C(32) Stack +0010(32)

l100301D0:
	branch (dwArg10 | dwArg08) != 0x00000000 l100301E9
// DataOut: cs ds eax ecx edi es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0004(32) Stack +0010(32)

l100301E9:
	word64 edx_eax_40 = dwArg0C *u dwArg04
	word32 edx_43
	*edxOut = SLICE(edx_eax_40, word32, 32) + ((word32) (dwArg0C *u dwArg08) + (word32) (dwArg10 *u dwArg04))
	return (word32) edx_eax_40
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid>

l100301E0:
	word64 edx_eax_24 = dwArg0C *u dwArg04
	word32 edx_26
	*edxOut = SLICE(edx_eax_24, word32, 32)
	return (word32) edx_eax_24
// DataOut: cs ds eax edi edx es fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid>

fn100301D0_exit:
// DataOut: eax edx
// DataOut (flags): 
// SymbolicIn: esp:fp eax:<invalid> ecx:<invalid> Sequence edx:eax:<invalid> ebx:ebx edx:<invalid> -4(fp):ebx



void fn10030210(word32 eax, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax
// LiveOut: esp
// Trashed: SCZO ah al ax eax esp rax rsp sp spl
// Preserved: ecx
// Stack args: Stack +0000(32)
fn10030210_entry:
// DataOut: cs ds eax ebp ebx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: fp(32) Stack +0000(32)

l10030210:
	word32 ecx_7 = fp - eax
	word32 ecx_12 = ecx_7 & ~(0x00000000 - (ecx_7 <u 0x00000000))
	word32 eax_14 = fp - 0x00000004 & 0xFFFFF000
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp
// LocalsOut: Stack +0000(32)

l10030224:
	branch ecx_12 <u eax_14 l10030232
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -4(fp):ecx
// LocalsOut: Stack +0000(32)

l10030232:
	eax_14 = eax_14 - 0x00001000
// DataOut: cs ds eax ebp ebx ecx edi es esi fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -4(fp):ecx
// LocalsOut: Stack +0000(32)

l10030228:
	Mem29[ecx_12:word32] = dwArg00
	return
// DataOut: cs ds ebp ebx edi es esi esp fs gs ss
// DataOut (flags): 
// SymbolicIn: esp:fp - 0x00000004 ecx:<invalid> eax:<invalid> -4(fp):ecx

fn10030210_exit:
// DataOut: esp
// DataOut (flags): 
// SymbolicIn: esp:<invalid> ecx:ecx eax:<invalid> -4(fp):ecx



